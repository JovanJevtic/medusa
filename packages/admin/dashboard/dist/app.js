"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);

// src/extensions/dashboard-extension-manager/dashboard-extension-manager.tsx
var import_jsx_runtime, DashboardExtensionManager;
var init_dashboard_extension_manager = __esm({
  "src/extensions/dashboard-extension-manager/dashboard-extension-manager.tsx"() {
    "use strict";
    import_jsx_runtime = require("react/jsx-runtime");
    DashboardExtensionManager = class {
      constructor({
        widgetModule: widgetModule2,
        menuItemModule: menuItemModule2,
        displayModule: displayModule2,
        formModule: formModule2
      }) {
        __publicField(this, "widgets");
        __publicField(this, "menus");
        __publicField(this, "fields");
        __publicField(this, "configs");
        __publicField(this, "displays");
        this.widgets = this.populateWidgets(widgetModule2.widgets);
        this.menus = this.populateMenus(menuItemModule2.menuItems);
        const { fields, configs } = this.populateForm(formModule2);
        this.fields = fields;
        this.configs = configs;
        this.displays = this.populateDisplays(displayModule2);
      }
      populateWidgets(widgets) {
        const registry = /* @__PURE__ */ new Map();
        if (!widgets) {
          return registry;
        }
        widgets.forEach((widget) => {
          widget.zone.forEach((zone) => {
            if (!registry.has(zone)) {
              registry.set(zone, []);
            }
            registry.get(zone).push(widget.Component);
          });
        });
        return registry;
      }
      populateMenus(menuItems) {
        const registry = /* @__PURE__ */ new Map();
        const tempRegistry = {};
        if (!menuItems) {
          return registry;
        }
        menuItems.sort((a, b) => a.path.length - b.path.length);
        menuItems.forEach((item) => {
          if (item.path.includes("/:")) {
            if (process.env.NODE_ENV === "development") {
              console.warn(
                `[@medusajs/dashboard] Menu item for path "${item.path}" can't be added to the sidebar as it contains a parameter.`
              );
            }
            return;
          }
          const isSettingsPath = item.path.startsWith("/settings");
          const key = isSettingsPath ? "settingsExtensions" : "coreExtensions";
          const pathParts = item.path.split("/").filter(Boolean);
          const parentPath = "/" + pathParts.slice(0, -1).join("/");
          if (isSettingsPath && pathParts.length > 2) {
            if (process.env.NODE_ENV === "development") {
              console.warn(
                `[@medusajs/dashboard] Nested settings menu item "${item.path}" can't be added to the sidebar. Only top-level settings items are allowed.`
              );
            }
            return;
          }
          const navItem = {
            label: item.label,
            to: item.path,
            icon: item.icon ? /* @__PURE__ */ (0, import_jsx_runtime.jsx)(item.icon, {}) : void 0,
            items: []
          };
          if (parentPath !== "/" && tempRegistry[parentPath]) {
            if (!tempRegistry[parentPath].items) {
              tempRegistry[parentPath].items = [];
            }
            tempRegistry[parentPath].items.push(navItem);
          } else {
            if (!registry.has(key)) {
              registry.set(key, []);
            }
            registry.get(key).push(navItem);
          }
          tempRegistry[item.path] = navItem;
        });
        return registry;
      }
      populateForm(formModule2) {
        const fields = /* @__PURE__ */ new Map();
        const configs = /* @__PURE__ */ new Map();
        Object.entries(formModule2.customFields).forEach(
          ([model, customization]) => {
            fields.set(
              model,
              this.processFields(customization.forms)
            );
            configs.set(
              model,
              this.processConfigs(customization.configs)
            );
          }
        );
        return { fields, configs };
      }
      processFields(forms) {
        const formZoneMap = /* @__PURE__ */ new Map();
        forms.forEach(
          (fieldDef) => this.processFieldDefinition(formZoneMap, fieldDef)
        );
        return formZoneMap;
      }
      processConfigs(configs) {
        const modelConfigMap = /* @__PURE__ */ new Map();
        configs.forEach((configDef) => {
          const { zone, fields } = configDef;
          const zoneConfigs = [];
          Object.entries(fields).forEach(([name, config]) => {
            zoneConfigs.push({
              name,
              defaultValue: config.defaultValue,
              validation: config.validation
            });
          });
          modelConfigMap.set(zone, zoneConfigs);
        });
        return modelConfigMap;
      }
      processFieldDefinition(formZoneMap, fieldDef) {
        const { zone, tab, fields: fieldsDefinition } = fieldDef;
        const zoneStructure = this.getOrCreateZoneStructure(formZoneMap, zone);
        Object.entries(fieldsDefinition).forEach(([fieldKey, fieldDefinition]) => {
          const formField = this.createFormField(fieldKey, fieldDefinition);
          this.addFormFieldToZoneStructure(zoneStructure, formField, tab);
        });
      }
      getOrCreateZoneStructure(formZoneMap, zone) {
        let zoneStructure = formZoneMap.get(zone);
        if (!zoneStructure) {
          zoneStructure = { components: [], tabs: /* @__PURE__ */ new Map() };
          formZoneMap.set(zone, zoneStructure);
        }
        return zoneStructure;
      }
      createFormField(fieldKey, fieldDefinition) {
        return {
          name: fieldKey,
          validation: fieldDefinition.validation,
          label: fieldDefinition.label,
          description: fieldDefinition.description,
          Component: fieldDefinition.Component
        };
      }
      addFormFieldToZoneStructure(zoneStructure, formField, tab) {
        if (tab) {
          let tabFields = zoneStructure.tabs.get(tab);
          if (!tabFields) {
            tabFields = [];
            zoneStructure.tabs.set(tab, tabFields);
          }
          tabFields.push(formField);
        } else {
          zoneStructure.components.push(formField);
        }
      }
      populateDisplays(displayModule2) {
        const displays = /* @__PURE__ */ new Map();
        Object.entries(displayModule2.displays).forEach(([model, customization]) => {
          displays.set(
            model,
            this.processDisplays(customization)
          );
        });
        return displays;
      }
      processDisplays(displays) {
        const modelDisplayMap = /* @__PURE__ */ new Map();
        displays.forEach((display) => {
          const { zone, Component: Component5 } = display;
          if (!modelDisplayMap.has(zone)) {
            modelDisplayMap.set(zone, []);
          }
          modelDisplayMap.get(zone).push(Component5);
        });
        return modelDisplayMap;
      }
      getMenu(path) {
        return this.menus.get(path) || [];
      }
      getWidgets(zone) {
        return this.widgets.get(zone) || [];
      }
      getFormFields(model, zone, tab) {
        const zoneMap = this.fields.get(model)?.get(zone);
        if (!zoneMap) {
          return [];
        }
        if (tab) {
          return zoneMap.tabs.get(tab) || [];
        }
        return zoneMap.components;
      }
      getFormConfigs(model, zone) {
        return this.configs.get(model)?.get(zone) || [];
      }
      getDisplays(model, zone) {
        return this.displays.get(model)?.get(zone) || [];
      }
      get api() {
        return {
          getMenu: this.getMenu.bind(this),
          getWidgets: this.getWidgets.bind(this),
          getFormFields: this.getFormFields.bind(this),
          getFormConfigs: this.getFormConfigs.bind(this),
          getDisplays: this.getDisplays.bind(this)
        };
      }
    };
  }
});

// src/extensions/dashboard-extension-manager/index.ts
var init_dashboard_extension_manager2 = __esm({
  "src/extensions/dashboard-extension-manager/index.ts"() {
    "use strict";
    init_dashboard_extension_manager();
  }
});

// src/extensions/dashboard-extension-provider/dashboard-extension-context.tsx
var import_react, DashboardExtensionContext;
var init_dashboard_extension_context = __esm({
  "src/extensions/dashboard-extension-provider/dashboard-extension-context.tsx"() {
    "use strict";
    import_react = require("react");
    DashboardExtensionContext = (0, import_react.createContext)(null);
  }
});

// src/extensions/dashboard-extension-provider/dashboard-extension-provider.tsx
var import_jsx_runtime2, DashboardExtensionProvider;
var init_dashboard_extension_provider = __esm({
  "src/extensions/dashboard-extension-provider/dashboard-extension-provider.tsx"() {
    "use strict";
    init_dashboard_extension_context();
    import_jsx_runtime2 = require("react/jsx-runtime");
    DashboardExtensionProvider = ({
      api,
      children
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(DashboardExtensionContext.Provider, { value: api, children });
    };
  }
});

// src/extensions/dashboard-extension-provider/use-dashboard-extension.tsx
var import_react2, useDashboardExtension;
var init_use_dashboard_extension = __esm({
  "src/extensions/dashboard-extension-provider/use-dashboard-extension.tsx"() {
    "use strict";
    import_react2 = require("react");
    init_dashboard_extension_context();
    useDashboardExtension = () => {
      const context = (0, import_react2.useContext)(DashboardExtensionContext);
      if (!context) {
        throw new Error(
          "useDashboardExtension must be used within a DashboardExtensionProvider"
        );
      }
      return context;
    };
  }
});

// src/extensions/dashboard-extension-provider/index.ts
var init_dashboard_extension_provider2 = __esm({
  "src/extensions/dashboard-extension-provider/index.ts"() {
    "use strict";
    init_dashboard_extension_provider();
    init_use_dashboard_extension();
  }
});

// ../../../node_modules/@radix-ui/react-compose-refs/dist/index.mjs
function setRef(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref !== null && ref !== void 0) {
    ref.current = value;
  }
}
function composeRefs(...refs) {
  return (node) => refs.forEach((ref) => setRef(ref, node));
}
function useComposedRefs(...refs) {
  return React.useCallback(composeRefs(...refs), refs);
}
var React;
var init_dist = __esm({
  "../../../node_modules/@radix-ui/react-compose-refs/dist/index.mjs"() {
    "use strict";
    React = __toESM(require("react"), 1);
  }
});

// ../../../node_modules/@radix-ui/react-slot/dist/index.mjs
function isSlottable(child) {
  return React2.isValidElement(child) && child.type === Slottable;
}
function mergeProps(slotProps, childProps) {
  const overrideProps = { ...childProps };
  for (const propName in childProps) {
    const slotPropValue = slotProps[propName];
    const childPropValue = childProps[propName];
    const isHandler = /^on[A-Z]/.test(propName);
    if (isHandler) {
      if (slotPropValue && childPropValue) {
        overrideProps[propName] = (...args) => {
          childPropValue(...args);
          slotPropValue(...args);
        };
      } else if (slotPropValue) {
        overrideProps[propName] = slotPropValue;
      }
    } else if (propName === "style") {
      overrideProps[propName] = { ...slotPropValue, ...childPropValue };
    } else if (propName === "className") {
      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(" ");
    }
  }
  return { ...slotProps, ...overrideProps };
}
function getElementRef(element) {
  let getter = Object.getOwnPropertyDescriptor(element.props, "ref")?.get;
  let mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
  if (mayWarn) {
    return element.ref;
  }
  getter = Object.getOwnPropertyDescriptor(element, "ref")?.get;
  mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
  if (mayWarn) {
    return element.props.ref;
  }
  return element.props.ref || element.ref;
}
var React2, import_jsx_runtime3, Slot, SlotClone, Slottable;
var init_dist2 = __esm({
  "../../../node_modules/@radix-ui/react-slot/dist/index.mjs"() {
    "use strict";
    React2 = __toESM(require("react"), 1);
    init_dist();
    import_jsx_runtime3 = require("react/jsx-runtime");
    Slot = React2.forwardRef((props, forwardedRef) => {
      const { children, ...slotProps } = props;
      const childrenArray = React2.Children.toArray(children);
      const slottable = childrenArray.find(isSlottable);
      if (slottable) {
        const newElement = slottable.props.children;
        const newChildren = childrenArray.map((child) => {
          if (child === slottable) {
            if (React2.Children.count(newElement) > 1) return React2.Children.only(null);
            return React2.isValidElement(newElement) ? newElement.props.children : null;
          } else {
            return child;
          }
        });
        return /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(SlotClone, { ...slotProps, ref: forwardedRef, children: React2.isValidElement(newElement) ? React2.cloneElement(newElement, void 0, newChildren) : null });
      }
      return /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(SlotClone, { ...slotProps, ref: forwardedRef, children });
    });
    Slot.displayName = "Slot";
    SlotClone = React2.forwardRef((props, forwardedRef) => {
      const { children, ...slotProps } = props;
      if (React2.isValidElement(children)) {
        const childrenRef = getElementRef(children);
        return React2.cloneElement(children, {
          ...mergeProps(slotProps, children.props),
          // @ts-ignore
          ref: forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef
        });
      }
      return React2.Children.count(children) > 1 ? React2.Children.only(null) : null;
    });
    SlotClone.displayName = "SlotClone";
    Slottable = ({ children }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(import_jsx_runtime3.Fragment, { children });
    };
  }
});

// src/components/common/form/form.tsx
var import_icons, import_ui, import_react3, import_react_hook_form, import_react_i18next, import_jsx_runtime4, Provider, FormFieldContext, Field, FormItemContext, useFormField, Item, Label, Control, Hint, ErrorMessage, Form;
var init_form = __esm({
  "src/components/common/form/form.tsx"() {
    "use strict";
    import_icons = require("@medusajs/icons");
    import_ui = require("@medusajs/ui");
    init_dist2();
    import_react3 = require("react");
    import_react_hook_form = require("react-hook-form");
    import_react_i18next = require("react-i18next");
    import_jsx_runtime4 = require("react/jsx-runtime");
    Provider = import_react_hook_form.FormProvider;
    FormFieldContext = (0, import_react3.createContext)(
      {}
    );
    Field = ({
      ...props
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(FormFieldContext.Provider, { value: { name: props.name }, children: /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(import_react_hook_form.Controller, { ...props }) });
    };
    FormItemContext = (0, import_react3.createContext)(
      {}
    );
    useFormField = () => {
      const fieldContext = (0, import_react3.useContext)(FormFieldContext);
      const itemContext = (0, import_react3.useContext)(FormItemContext);
      const { getFieldState } = (0, import_react_hook_form.useFormContext)();
      const formState = (0, import_react_hook_form.useFormState)({ name: fieldContext.name });
      const fieldState = getFieldState(fieldContext.name, formState);
      if (!fieldContext) {
        throw new Error("useFormField should be used within a FormField");
      }
      const { id: id2 } = itemContext;
      return {
        id: id2,
        name: fieldContext.name,
        formItemId: `${id2}-form-item`,
        formLabelId: `${id2}-form-item-label`,
        formDescriptionId: `${id2}-form-item-description`,
        formErrorMessageId: `${id2}-form-item-message`,
        ...fieldState
      };
    };
    Item = (0, import_react3.forwardRef)(
      ({ className, ...props }, ref) => {
        const id2 = (0, import_react3.useId)();
        return /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(FormItemContext.Provider, { value: { id: id2 }, children: /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(
          "div",
          {
            ref,
            className: (0, import_ui.clx)("flex flex-col space-y-2", className),
            ...props
          }
        ) });
      }
    );
    Item.displayName = "Form.Item";
    Label = (0, import_react3.forwardRef)(({ className, optional = false, tooltip, icon, ...props }, ref) => {
      const { formLabelId, formItemId } = useFormField();
      const { t: t4 } = (0, import_react_i18next.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime4.jsxs)("div", { className: "flex items-center gap-x-1", children: [
        /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(
          import_ui.Label,
          {
            id: formLabelId,
            ref,
            className: (0, import_ui.clx)(className),
            htmlFor: formItemId,
            size: "small",
            weight: "plus",
            ...props
          }
        ),
        tooltip && /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(import_ui.Tooltip, { content: tooltip, children: /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(import_icons.InformationCircleSolid, { className: "text-ui-fg-muted" }) }),
        icon,
        optional && /* @__PURE__ */ (0, import_jsx_runtime4.jsxs)(import_ui.Text, { size: "small", leading: "compact", className: "text-ui-fg-muted", children: [
          "(",
          t4("fields.optional"),
          ")"
        ] })
      ] });
    });
    Label.displayName = "Form.Label";
    Control = (0, import_react3.forwardRef)(({ ...props }, ref) => {
      const {
        error,
        formItemId,
        formDescriptionId,
        formErrorMessageId,
        formLabelId
      } = useFormField();
      return /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(
        Slot,
        {
          ref,
          id: formItemId,
          "aria-describedby": !error ? `${formDescriptionId}` : `${formDescriptionId} ${formErrorMessageId}`,
          "aria-invalid": !!error,
          "aria-labelledby": formLabelId,
          ...props
        }
      );
    });
    Control.displayName = "Form.Control";
    Hint = (0, import_react3.forwardRef)(({ className, ...props }, ref) => {
      const { formDescriptionId } = useFormField();
      return /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(
        import_ui.Hint,
        {
          ref,
          id: formDescriptionId,
          className,
          ...props
        }
      );
    });
    Hint.displayName = "Form.Hint";
    ErrorMessage = (0, import_react3.forwardRef)(({ className, children, ...props }, ref) => {
      const { error, formErrorMessageId } = useFormField();
      const msg = error ? String(error?.message) : children;
      if (!msg || msg === "undefined") {
        return null;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(
        import_ui.Hint,
        {
          ref,
          id: formErrorMessageId,
          className,
          variant: error ? "error" : "info",
          ...props,
          children: msg
        }
      );
    });
    ErrorMessage.displayName = "Form.ErrorMessage";
    Form = Object.assign(Provider, {
      Item,
      Label,
      Control,
      Hint,
      ErrorMessage,
      Field
    });
  }
});

// src/components/common/form/index.ts
var init_form2 = __esm({
  "src/components/common/form/index.ts"() {
    "use strict";
    init_form();
  }
});

// src/components/common/inline-tip/inline-tip.tsx
var import_ui2, import_react4, import_react_i18next2, import_jsx_runtime5, InlineTip;
var init_inline_tip = __esm({
  "src/components/common/inline-tip/inline-tip.tsx"() {
    "use strict";
    import_ui2 = require("@medusajs/ui");
    import_react4 = require("react");
    import_react_i18next2 = require("react-i18next");
    import_jsx_runtime5 = require("react/jsx-runtime");
    InlineTip = (0, import_react4.forwardRef)(
      ({ variant = "tip", label, className, children, ...props }, ref) => {
        const { t: t4 } = (0, import_react_i18next2.useTranslation)();
        const labelValue = label || (variant === "warning" ? t4("general.warning") : t4("general.tip"));
        return /* @__PURE__ */ (0, import_jsx_runtime5.jsxs)(
          "div",
          {
            ref,
            className: (0, import_ui2.clx)(
              "bg-ui-bg-component txt-small text-ui-fg-subtle grid grid-cols-[4px_1fr] items-start gap-3 rounded-lg border p-3",
              className
            ),
            ...props,
            children: [
              /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
                "div",
                {
                  role: "presentation",
                  className: (0, import_ui2.clx)("w-4px bg-ui-tag-neutral-icon h-full rounded-full", {
                    "bg-ui-tag-orange-icon": variant === "warning"
                  })
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime5.jsxs)("div", { className: "text-pretty", children: [
                /* @__PURE__ */ (0, import_jsx_runtime5.jsxs)("strong", { className: "txt-small-plus text-ui-fg-base", children: [
                  labelValue,
                  ":"
                ] }),
                " ",
                children
              ] })
            ]
          }
        );
      }
    );
    InlineTip.displayName = "InlineTip";
  }
});

// src/components/common/inline-tip/index.ts
var init_inline_tip2 = __esm({
  "src/components/common/inline-tip/index.ts"() {
    "use strict";
    init_inline_tip();
  }
});

// src/extensions/forms/form-extension-zone/utils.ts
function getFieldType(type) {
  if (type instanceof import_zod.ZodString) {
    return "text";
  }
  if (type instanceof import_zod.ZodNumber) {
    return "number";
  }
  if (type instanceof import_zod.ZodBoolean) {
    return "boolean";
  }
  if (type instanceof import_zod.ZodNullable) {
    const innerType = type.unwrap();
    return getFieldType(innerType);
  }
  if (type instanceof import_zod.ZodOptional) {
    const innerType = type.unwrap();
    return getFieldType(innerType);
  }
  if (type instanceof import_zod.ZodEffects) {
    const innerType = type.innerType();
    return getFieldType(innerType);
  }
  return "unsupported";
}
var import_zod;
var init_utils = __esm({
  "src/extensions/forms/form-extension-zone/utils.ts"() {
    "use strict";
    import_zod = require("zod");
  }
});

// src/extensions/forms/form-extension-zone/form-extension-zone.tsx
function getFieldLabel(field) {
  if (field.label) {
    return field.label;
  }
  return field.name.split("_").map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(" ");
}
var import_ui3, import_jsx_runtime6, FormExtensionZone, FormExtensionField, FormExtensionFieldComponent;
var init_form_extension_zone = __esm({
  "src/extensions/forms/form-extension-zone/form-extension-zone.tsx"() {
    "use strict";
    import_ui3 = require("@medusajs/ui");
    init_form2();
    init_inline_tip2();
    init_utils();
    import_jsx_runtime6 = require("react/jsx-runtime");
    FormExtensionZone = ({ fields, form }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)("div", { children: fields.map((field, index2) => /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(FormExtensionField, { field, form }, index2)) });
    };
    FormExtensionField = ({ field, form }) => {
      const label = getFieldLabel(field);
      const description = field.description;
      const placeholder = field.placeholder;
      const Component5 = field.Component;
      const type = getFieldType(field.validation);
      const { control } = form;
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        Form.Field,
        {
          control,
          name: `additional_data.${field.name}`,
          render: ({ field: field2 }) => {
            return /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)(Form.Item, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(Form.Label, { children: label }),
              description && /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(Form.Hint, { children: description }),
              /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
                FormExtensionFieldComponent,
                {
                  field: field2,
                  type,
                  component: Component5,
                  placeholder
                }
              ) }),
              /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(Form.ErrorMessage, {})
            ] });
          }
        }
      );
    };
    FormExtensionFieldComponent = ({
      field,
      type,
      component,
      placeholder
    }) => {
      if (component) {
        const Component5 = component;
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(Component5, { ...field, placeholder });
      }
      switch (type) {
        case "text": {
          return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_ui3.Input, { ...field, placeholder });
        }
        case "number": {
          return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_ui3.Input, { ...field, placeholder, type: "number" });
        }
        case "boolean": {
          return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_ui3.Switch, { ...field });
        }
        default: {
          return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(InlineTip, { variant: "warning", children: "The field type does not support rendering a fallback component. Please provide a component prop." });
        }
      }
    };
  }
});

// src/extensions/forms/form-extension-zone/index.ts
var init_form_extension_zone2 = __esm({
  "src/extensions/forms/form-extension-zone/index.ts"() {
    "use strict";
    init_form_extension_zone();
  }
});

// src/extensions/forms/hooks.tsx
function createAdditionalDataSchema(configs) {
  return configs.reduce((acc, config) => {
    acc[config.name] = config.validation;
    return acc;
  }, {});
}
function createExtendedSchema(baseSchema, additionalDataSchema) {
  const extendedObjectSchema = import_zod3.z.object({
    ...baseSchema instanceof import_zod3.ZodEffects ? baseSchema.innerType().shape : baseSchema.shape,
    additional_data: import_zod3.z.object(additionalDataSchema).optional()
  });
  return baseSchema instanceof import_zod3.ZodEffects ? baseSchema.superRefine((data, ctx) => {
    const result = extendedObjectSchema.safeParse(data);
    if (!result.success) {
      result.error.issues.forEach((issue) => ctx.addIssue(issue));
    }
  }).and(extendedObjectSchema) : extendedObjectSchema;
}
function createExtendedDefaultValues(baseDefaultValues, configs, data) {
  const additional_data = configs.reduce((acc, config) => {
    const { name, defaultValue } = config;
    acc[name] = typeof defaultValue === "function" ? defaultValue(data) : defaultValue;
    return acc;
  }, {});
  return Object.assign(baseDefaultValues, { additional_data });
}
var import_zod2, import_react_hook_form2, import_zod3, useExtendableForm;
var init_hooks = __esm({
  "src/extensions/forms/hooks.tsx"() {
    "use strict";
    import_zod2 = require("@hookform/resolvers/zod");
    import_react_hook_form2 = require("react-hook-form");
    import_zod3 = require("zod");
    useExtendableForm = ({
      defaultValues: baseDefaultValues,
      schema: baseSchema,
      configs,
      data,
      ...props
    }) => {
      const additionalDataSchema = createAdditionalDataSchema(configs);
      const schema = createExtendedSchema(baseSchema, additionalDataSchema);
      const defaultValues2 = createExtendedDefaultValues(
        baseDefaultValues,
        configs,
        data
      );
      return (0, import_react_hook_form2.useForm)({
        ...props,
        defaultValues: defaultValues2,
        resolver: (0, import_zod2.zodResolver)(schema)
      });
    };
  }
});

// src/extensions/forms/index.ts
var init_forms = __esm({
  "src/extensions/forms/index.ts"() {
    "use strict";
    init_form_extension_zone2();
    init_hooks();
  }
});

// src/extensions/links/utils.ts
function appendLinkableFields(fields = "", linkable = []) {
  const linkableFields = linkable.flatMap((link) => {
    return typeof link === "string" ? [`+${link}.*`] : link.map((l) => `+${l}.*`);
  });
  return [fields, ...linkableFields].join(",");
}
function getLinkedFields(model, fields = "") {
  const links = import_links.default.links[model];
  return appendLinkableFields(fields, links);
}
var import_links;
var init_utils2 = __esm({
  "src/extensions/links/utils.ts"() {
    "use strict";
    import_links = __toESM(require("virtual:medusa/links"));
  }
});

// src/lib/is-fetch-error.ts
var import_js_sdk, isFetchError;
var init_is_fetch_error = __esm({
  "src/lib/is-fetch-error.ts"() {
    "use strict";
    import_js_sdk = require("@medusajs/js-sdk");
    isFetchError = (error) => {
      return error instanceof import_js_sdk.FetchError;
    };
  }
});

// src/components/utilities/error-boundary/error-boundary.tsx
var import_icons2, import_ui4, import_react_i18next3, import_react_router_dom, import_jsx_runtime7, ErrorBoundary;
var init_error_boundary = __esm({
  "src/components/utilities/error-boundary/error-boundary.tsx"() {
    "use strict";
    import_icons2 = require("@medusajs/icons");
    import_ui4 = require("@medusajs/ui");
    import_react_i18next3 = require("react-i18next");
    import_react_router_dom = require("react-router-dom");
    init_is_fetch_error();
    import_jsx_runtime7 = require("react/jsx-runtime");
    ErrorBoundary = () => {
      const error = (0, import_react_router_dom.useRouteError)();
      const location = (0, import_react_router_dom.useLocation)();
      const { t: t4 } = (0, import_react_i18next3.useTranslation)();
      let code = null;
      if (isFetchError(error)) {
        if (error.status === 401) {
          return /* @__PURE__ */ (0, import_jsx_runtime7.jsx)(import_react_router_dom.Navigate, { to: "/login", state: { from: location }, replace: true });
        }
        code = error.status ?? null;
      }
      if (process.env.NODE_ENV === "development") {
        console.error(error);
      }
      let title;
      let message;
      switch (code) {
        case 400:
          title = t4("errorBoundary.badRequestTitle");
          message = t4("errorBoundary.badRequestMessage");
          break;
        case 404:
          title = t4("errorBoundary.notFoundTitle");
          message = t4("errorBoundary.notFoundMessage");
          break;
        case 500:
          title = t4("errorBoundary.internalServerErrorTitle");
          message = t4("errorBoundary.internalServerErrorMessage");
          break;
        default:
          title = t4("errorBoundary.defaultTitle");
          message = t4("errorBoundary.defaultMessage");
          break;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime7.jsx)("div", { className: "flex size-full min-h-[calc(100vh-57px-24px)] items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime7.jsx)("div", { className: "flex flex-col gap-y-6", children: /* @__PURE__ */ (0, import_jsx_runtime7.jsxs)("div", { className: "text-ui-fg-subtle flex flex-col items-center gap-y-3", children: [
        /* @__PURE__ */ (0, import_jsx_runtime7.jsx)(import_icons2.ExclamationCircle, {}),
        /* @__PURE__ */ (0, import_jsx_runtime7.jsxs)("div", { className: "flex flex-col items-center justify-center gap-y-1", children: [
          /* @__PURE__ */ (0, import_jsx_runtime7.jsx)(import_ui4.Text, { size: "small", leading: "compact", weight: "plus", children: title }),
          /* @__PURE__ */ (0, import_jsx_runtime7.jsx)(
            import_ui4.Text,
            {
              size: "small",
              className: "text-ui-fg-muted text-balance text-center",
              children: message
            }
          )
        ] })
      ] }) }) });
    };
  }
});

// src/components/utilities/error-boundary/index.ts
var init_error_boundary2 = __esm({
  "src/components/utilities/error-boundary/index.ts"() {
    "use strict";
    init_error_boundary();
  }
});

// src/extensions/routes/utils.ts
var settingsRouteRegex, getRouteExtensions, createRouteMap;
var init_utils3 = __esm({
  "src/extensions/routes/utils.ts"() {
    "use strict";
    init_error_boundary2();
    settingsRouteRegex = /^\/settings\//;
    getRouteExtensions = (module2, type) => {
      return module2.routes.filter((route) => {
        if (type === "settings") {
          return settingsRouteRegex.test(route.path);
        }
        return !settingsRouteRegex.test(route.path);
      });
    };
    createRouteMap = (routes3, ignore) => {
      const root = [];
      const addRoute = (pathSegments, Component5, currentLevel) => {
        if (!pathSegments.length) {
          return;
        }
        const [currentSegment, ...remainingSegments] = pathSegments;
        let route = currentLevel.find((r) => r.path === currentSegment);
        if (!route) {
          route = { path: currentSegment, children: [] };
          currentLevel.push(route);
        }
        if (remainingSegments.length === 0) {
          route.children || (route.children = []);
          route.children.push({
            path: "",
            ErrorBoundary,
            async lazy() {
              return { Component: Component5 };
            }
          });
        } else {
          route.children || (route.children = []);
          addRoute(remainingSegments, Component5, route.children);
        }
      };
      routes3.forEach(({ path, Component: Component5 }) => {
        const cleanedPath = ignore ? path.replace(ignore, "").replace(/^\/+/, "") : path.replace(/^\/+/, "");
        const pathSegments = cleanedPath.split("/").filter(Boolean);
        addRoute(pathSegments, Component5, root);
      });
      return root;
    };
  }
});

// src/extensions/index.ts
var init_extensions = __esm({
  "src/extensions/index.ts"() {
    "use strict";
    init_dashboard_extension_manager2();
    init_dashboard_extension_provider2();
    init_forms();
    init_utils2();
    init_utils3();
  }
});

// src/i18n/translations/en.json
var en_default;
var init_en = __esm({
  "src/i18n/translations/en.json"() {
    en_default = {
      $schema: "./$schema.json",
      general: {
        ascending: "Ascending",
        descending: "Descending",
        add: "Add",
        start: "Start",
        end: "End",
        open: "Open",
        close: "Close",
        apply: "Apply",
        range: "Range",
        search: "Search",
        of: "of",
        results: "results",
        pages: "pages",
        next: "Next",
        prev: "Prev",
        is: "is",
        timeline: "Timeline",
        success: "Success",
        warning: "Warning",
        tip: "Tip",
        error: "Error",
        select: "Select",
        selected: "Selected",
        enabled: "Enabled",
        disabled: "Disabled",
        expired: "Expired",
        active: "Active",
        revoked: "Revoked",
        new: "New",
        modified: "Modified",
        added: "Added",
        removed: "Removed",
        admin: "Admin",
        store: "Store",
        details: "Details",
        items_one: "{{count}} item",
        items_other: "{{count}} items",
        countSelected: "{{count}} selected",
        countOfTotalSelected: "{{count}} of {{total}} selected",
        plusCount: "+ {{count}}",
        plusCountMore: "+ {{count}} more",
        areYouSure: "Are you sure?",
        noRecordsFound: "No records found",
        typeToConfirm: "Please type {val} to confirm:",
        noResultsTitle: "No results",
        noResultsMessage: "Try changing the filters or search query",
        noSearchResults: "No search results",
        noSearchResultsFor: "No search results for <0>'{{query}}'</0>",
        noRecordsTitle: "No records",
        noRecordsMessage: "There are no records to show",
        unsavedChangesTitle: "Are you sure you want to leave this form?",
        unsavedChangesDescription: "You have unsaved changes that will be lost if you exit this form.",
        includesTaxTooltip: "Prices in this column are tax inclusive.",
        excludesTaxTooltip: "Prices in this column are tax exclusive.",
        noMoreData: "No more data"
      },
      json: {
        header: "JSON",
        numberOfKeys_one: "{{count}} key",
        numberOfKeys_other: "{{count}} keys",
        drawer: {
          header_one: "JSON <0>\xB7 {{count}} key</0>",
          header_other: "JSON <0>\xB7 {{count}} keys</0>",
          description: "View the JSON data for this object."
        }
      },
      metadata: {
        header: "Metadata",
        numberOfKeys_one: "{{count}} key",
        numberOfKeys_other: "{{count}} keys",
        edit: {
          header: "Edit Metadata",
          description: "Edit the metadata for this object.",
          successToast: "Metadata was successfully updated.",
          actions: {
            insertRowAbove: "Insert row above",
            insertRowBelow: "Insert row below",
            deleteRow: "Delete row"
          },
          labels: {
            key: "Key",
            value: "Value"
          },
          complexRow: {
            label: "Some rows are disabled",
            description: "This object contains non-primitive metadata, such as arrays or objects, that can't be edited here. To edit the disabled rows, use the API directly.",
            tooltip: "This row is disabled because it contains non-primitive data."
          }
        }
      },
      validation: {
        mustBeInt: "The value must be a whole number.",
        mustBePositive: "The value must be a positive number."
      },
      actions: {
        save: "Save",
        saveAsDraft: "Save as draft",
        copy: "Copy",
        copied: "Copied",
        duplicate: "Duplicate",
        publish: "Publish",
        create: "Create",
        delete: "Delete",
        remove: "Remove",
        revoke: "Revoke",
        cancel: "Cancel",
        forceConfirm: "Force confirm",
        continueEdit: "Continue edit",
        enable: "Enable",
        disable: "Disable",
        undo: "Undo",
        complete: "Complete",
        viewDetails: "View details",
        back: "Back",
        close: "Close",
        showMore: "Show more",
        continue: "Continue",
        continueWithEmail: "Continue with Email",
        idCopiedToClipboard: "ID copied to clipboard",
        addReason: "Add Reason",
        addNote: "Add Note",
        reset: "Reset",
        confirm: "Confirm",
        edit: "Edit",
        addItems: "Add items",
        download: "Download",
        clear: "Clear",
        clearAll: "Clear all",
        apply: "Apply",
        add: "Add",
        select: "Select",
        browse: "Browse",
        logout: "Logout",
        hide: "Hide",
        export: "Export",
        import: "Import"
      },
      operators: {
        in: "In"
      },
      app: {
        search: {
          label: "Search",
          title: "Search",
          description: "Search your entire store, including orders, products, customers, and more.",
          allAreas: "All areas",
          navigation: "Navigation",
          openResult: "Open result",
          showMore: "Show more",
          placeholder: "Jump to or find anything...",
          noResultsTitle: "No results found",
          noResultsMessage: "We couldn't find anything that matched your search.",
          emptySearchTitle: "Type to search",
          emptySearchMessage: "Enter a keyword or phrase to explore.",
          loadMore: "Load {{count}} more",
          groups: {
            all: "All areas",
            customer: "Customers",
            customerGroup: "Customer Groups",
            product: "Products",
            productVariant: "Product Variants",
            inventory: "Inventory",
            reservation: "Reservations",
            category: "Categories",
            collection: "Collections",
            order: "Orders",
            promotion: "Promotions",
            campaign: "Campaigns",
            priceList: "Price Lists",
            user: "Users",
            region: "Regions",
            taxRegion: "Tax Regions",
            returnReason: "Return Reasons",
            salesChannel: "Sales Channels",
            productType: "Product Types",
            productTag: "Product Tags",
            location: "Locations",
            shippingProfile: "Shipping Profiles",
            publishableApiKey: "Publishable API Keys",
            secretApiKey: "Secret API Keys",
            command: "Commands",
            navigation: "Navigation"
          }
        },
        keyboardShortcuts: {
          pageShortcut: "Jump to",
          settingShortcut: "Settings",
          commandShortcut: "Commands",
          then: "then",
          navigation: {
            goToOrders: "Orders",
            goToProducts: "Products",
            goToCollections: "Collections",
            goToCategories: "Categories",
            goToCustomers: "Customers",
            goToCustomerGroups: "Customer Groups",
            goToInventory: "Inventory",
            goToReservations: "Reservations",
            goToPriceLists: "Price Lists",
            goToPromotions: "Promotions",
            goToCampaigns: "Campaigns"
          },
          settings: {
            goToSettings: "Settings",
            goToStore: "Store",
            goToUsers: "Users",
            goToRegions: "Regions",
            goToTaxRegions: "Tax Regions",
            goToSalesChannels: "Sales Channels",
            goToProductTypes: "Product Types",
            goToLocations: "Locations",
            goToPublishableApiKeys: "Publishable API Keys",
            goToSecretApiKeys: "Secret API Keys",
            goToWorkflows: "Workflows",
            goToProfile: "Profile",
            goToReturnReasons: "Return reasons"
          }
        },
        menus: {
          user: {
            documentation: "Documentation",
            changelog: "Changelog",
            shortcuts: "Shortcuts",
            profileSettings: "Profile settings",
            theme: {
              label: "Theme",
              dark: "Dark",
              light: "Light",
              system: "System"
            }
          },
          store: {
            label: "Store",
            storeSettings: "Store settings"
          },
          actions: {
            logout: "Log out"
          }
        },
        nav: {
          accessibility: {
            title: "Navigation",
            description: "Navigation menu for the dashboard."
          },
          common: {
            extensions: "Extensions"
          },
          main: {
            store: "Store",
            storeSettings: "Store settings"
          },
          settings: {
            header: "Settings",
            general: "General",
            developer: "Developer",
            myAccount: "My Account"
          }
        }
      },
      dataGrid: {
        columns: {
          view: "View",
          resetToDefault: "Reset to default",
          disabled: "Changing which columns are visible is disabled."
        },
        shortcuts: {
          label: "Shortcuts",
          commands: {
            undo: "Undo",
            redo: "Redo",
            copy: "Copy",
            paste: "Paste",
            edit: "Edit",
            delete: "Delete",
            clear: "Clear",
            moveUp: "Move up",
            moveDown: "Move down",
            moveLeft: "Move left",
            moveRight: "Move right",
            moveTop: "Move to top",
            moveBottom: "Move to bottom",
            selectDown: "Select down",
            selectUp: "Select up",
            selectColumnDown: "Select column down",
            selectColumnUp: "Select column up",
            focusToolbar: "Focus toolbar",
            focusCancel: "Focus cancel"
          }
        },
        errors: {
          fixError: "Fix error",
          count_one: "{{count}} error",
          count_other: "{{count}} errors"
        }
      },
      filters: {
        date: {
          today: "Today",
          lastSevenDays: "Last 7 days",
          lastThirtyDays: "Last 30 days",
          lastNinetyDays: "Last 90 days",
          lastTwelveMonths: "Last 12 months",
          custom: "Custom",
          from: "From",
          to: "To"
        },
        compare: {
          lessThan: "Less than",
          greaterThan: "Greater than",
          exact: "Exact",
          range: "Range",
          lessThanLabel: "less than {{value}}",
          greaterThanLabel: "greater than {{value}}",
          andLabel: "and"
        },
        addFilter: "Add filter"
      },
      errorBoundary: {
        badRequestTitle: "400 - Bad request",
        badRequestMessage: "The request could not be understood by the server due to malformed syntax.",
        notFoundTitle: "404 - There is no page at this address",
        notFoundMessage: "Check the URL and try again, or use the search bar to find what you are looking for.",
        internalServerErrorTitle: "500 - Internal server error",
        internalServerErrorMessage: "An unexpected error occurred on the server. Please try again later.",
        defaultTitle: "An error occurred",
        defaultMessage: "An unexpected error occurred while rendering this page.",
        noMatchMessage: "The page you are looking for does not exist.",
        backToDashboard: "Back to dashboard"
      },
      addresses: {
        shippingAddress: {
          header: "Shipping Address",
          editHeader: "Edit Shipping Address",
          editLabel: "Shipping address",
          label: "Shipping address"
        },
        billingAddress: {
          header: "Billing Address",
          editHeader: "Edit Billing Address",
          editLabel: "Billing address",
          label: "Billing address",
          sameAsShipping: "Same as shipping address"
        },
        contactHeading: "Contact",
        locationHeading: "Location"
      },
      email: {
        editHeader: "Edit Email",
        editLabel: "Email",
        label: "Email"
      },
      transferOwnership: {
        header: "Transfer Ownership",
        label: "Transfer ownership",
        details: {
          order: "Order details",
          draft: "Draft details"
        },
        currentOwner: {
          label: "Current owner",
          hint: "The current owner of the order."
        },
        newOwner: {
          label: "New owner",
          hint: "The new owner to transfer the order to."
        },
        validation: {
          mustBeDifferent: "The new owner must be different from the current owner.",
          required: "New owner is required."
        }
      },
      sales_channels: {
        availableIn: "Available in <0>{{x}}</0> of <1>{{y}}</1> sales channels"
      },
      products: {
        domain: "Products",
        list: {
          noRecordsMessage: "Create your first product to start selling."
        },
        create: {
          header: "General",
          tabs: {
            details: "Details",
            organize: "Organize",
            variants: "Variants",
            inventory: "Inventory kits"
          },
          errors: {
            variants: "Please select at least one variant.",
            options: "Please create at least one option.",
            uniqueSku: "SKU must be unique."
          },
          inventory: {
            heading: "Inventory kits",
            label: "Add inventory items to the variant's inventory kit.",
            itemPlaceholder: "Select inventory item",
            quantityPlaceholder: "How many of these are needed for the kit?"
          },
          variants: {
            header: "Variants",
            subHeadingTitle: "Yes, this is a product with variants",
            subHeadingDescription: "When unchecked, we will create a default variant for you",
            optionTitle: {
              placeholder: "Size"
            },
            optionValues: {
              placeholder: "Small, Medium, Large"
            },
            productVariants: {
              label: "Product variants",
              hint: "This ranking will affect the variants' order in your storefront.",
              alert: "Add options to create variants.",
              tip: "Variants left unchecked won't be created. You can always create and edit variants afterwards but this list fits the variations in your product options."
            },
            productOptions: {
              label: "Product options",
              hint: "Define the options for the product, e.g. color, size, etc."
            }
          },
          successToast: "Product {{title}} was successfully created."
        },
        export: {
          header: "Export Product List",
          description: "Export the product list to a CSV file.",
          success: {
            title: "We are processing your export",
            description: "Exporting data may take a few minutes. We will notify you when we are done."
          },
          filters: {
            title: "Filters",
            description: "Apply filters in the table overview to adjust this view"
          },
          columns: {
            title: "Columns",
            description: "Customize the exported data to meet specific needs"
          }
        },
        import: {
          header: "Import Product List",
          uploadLabel: "Import Products",
          uploadHint: "Drag and drop a CSV file or click to upload",
          description: "Import products by providing a CSV file in a pre-defined format",
          template: {
            title: "Unsure about how to arrange your list?",
            description: "Download the template below to ensure you are following the correct format."
          },
          upload: {
            title: "Upload a CSV file",
            description: "Through imports you can add or update products. To update existing products you must use the existing handle and ID, to update existing variants you must use the existing ID. You will be asked for confirmation before we import products.",
            preprocessing: "Preprocessing...",
            productsToCreate: "Products will be created",
            productsToUpdate: "Products will be updated"
          },
          success: {
            title: "We are processing your import",
            description: "Importing data may take a while. We will notify you when we are done."
          }
        },
        deleteWarning: "You are about to delete the product {{title}}. This action cannot be undone.",
        variants: "Variants",
        attributes: "Attributes",
        editProduct: "Edit Product",
        editAttributes: "Edit Attributes",
        editOptions: "Edit Options",
        editPrices: "Edit prices",
        media: {
          label: "Media",
          editHint: "Add media to the product to showcase it in your storefront.",
          makeThumbnail: "Make thumbnail",
          uploadImagesLabel: "Upload images",
          uploadImagesHint: "Drag and drop images here or click to upload.",
          invalidFileType: "'{{name}}' is not a supported file type. Supported file types are: {{types}}.",
          failedToUpload: "Failed to upload the added media. Please try again.",
          deleteWarning_one: "You are about to delete {{count}} image. This action cannot be undone.",
          deleteWarning_other: "You are about to delete {{count}} images. This action cannot be undone.",
          deleteWarningWithThumbnail_one: "You are about to delete {{count}} image including the thumbnail. This action cannot be undone.",
          deleteWarningWithThumbnail_other: "You are about to delete {{count}} images including the thumbnail. This action cannot be undone.",
          thumbnailTooltip: "Thumbnail",
          galleryLabel: "Gallery",
          downloadImageLabel: "Download current image",
          deleteImageLabel: "Delete current image",
          emptyState: {
            header: "No media yet",
            description: "Add media to the product to showcase it in your storefront.",
            action: "Add media"
          }
        },
        discountableHint: "When unchecked, discounts will not be applied to this product.",
        noSalesChannels: "Not available in any sales channels",
        variantCount_one: "{{count}} variant",
        variantCount_other: "{{count}} variants",
        deleteVariantWarning: "You are about to delete the variant {{title}}. This action cannot be undone.",
        productStatus: {
          draft: "Draft",
          published: "Published",
          proposed: "Proposed",
          rejected: "Rejected"
        },
        fields: {
          title: {
            label: "Title",
            hint: "Give your product a short and clear title.<0/>50-60 characters is the recommended length for search engines."
          },
          subtitle: {
            label: "Subtitle"
          },
          handle: {
            label: "Handle",
            tooltip: "The handle is used to reference the product in your storefront. If not specified, the handle will be generated from the product title."
          },
          description: {
            label: "Description",
            hint: "Give your product a short and clear description.<0/>120-160 characters is the recommended length for search engines."
          },
          discountable: {
            label: "Discountable",
            hint: "When unchecked, discounts will not be applied to this product"
          },
          type: {
            label: "Type"
          },
          collection: {
            label: "Collection"
          },
          categories: {
            label: "Categories"
          },
          tags: {
            label: "Tags"
          },
          sales_channels: {
            label: "Sales channels",
            hint: "This product will only be available in the default sales channel if left untouched."
          },
          countryOrigin: {
            label: "Country of origin"
          },
          material: {
            label: "Material"
          },
          width: {
            label: "Width"
          },
          length: {
            label: "Length"
          },
          height: {
            label: "Height"
          },
          weight: {
            label: "Weight"
          },
          options: {
            label: "Product options",
            hint: "Options are used to define the color, size, etc. of the product",
            add: "Add option",
            optionTitle: "Option title",
            optionTitlePlaceholder: "Color",
            variations: "Variations (comma-separated)",
            variantionsPlaceholder: "Red, Blue, Green"
          },
          variants: {
            label: "Product variants",
            hint: "Variants left unchecked won't be created, This ranking will affect how the variants are ranked in your frontend."
          },
          mid_code: {
            label: "Mid code"
          },
          hs_code: {
            label: "HS code"
          }
        },
        variant: {
          edit: {
            header: "Edit Variant",
            success: "Product variant edited sucessfully"
          },
          create: {
            header: "Variant details"
          },
          deleteWarning: "Are you sure you want to delete this variant?",
          pricesPagination: "1 - {{current}} of {{total}} prices",
          tableItemAvailable: "{{availableCount}} available",
          tableItem_one: "{{availableCount}} available at {{locationCount}} location",
          tableItem_other: "{{availableCount}} available at {{locationCount}} locations",
          inventory: {
            notManaged: "Not managed",
            manageItems: "Manage inventory items",
            notManagedDesc: "Inventory is not managed for this variant. Turn on \u2018Manage Inventory\u2019 to track the variant's inventory.",
            manageKit: "Manage inventory kit",
            navigateToItem: "Go to inventory item",
            actions: {
              inventoryItems: "Go to inventory item",
              inventoryKit: "Show inventory items"
            },
            inventoryKit: "Inventory Kit",
            inventoryKitHint: "Does this variant consist of several inventory items?",
            validation: {
              itemId: "Please select inventory item.",
              quantity: "Quantity is required. Please input a positive number."
            },
            header: "Stock & Inventory",
            editItemDetails: "Edit item details",
            manageInventoryLabel: "Manage inventory",
            manageInventoryHint: "When enabled, we'll change the inventory quantity for you when orders and returns are created.",
            allowBackordersLabel: "Allow backorders",
            allowBackordersHint: "When enabled, customers can purchase the variant even if there's no available quantity.",
            toast: {
              levelsBatch: "Inventory levels updated.",
              update: "Inventory item updated successfully.",
              updateLevel: "Inventory level updated successfully.",
              itemsManageSuccess: "Inventory items sucessfully updated."
            }
          }
        },
        options: {
          header: "Options",
          edit: {
            header: "Edit Option",
            successToast: "Option {{title}} was successfully updated."
          },
          create: {
            header: "Create Option",
            successToast: "Option {{title}} was successfully created."
          },
          deleteWarning: "You are about to delete the product option: {{title}}. This action cannot be undone."
        },
        organization: {
          header: "Organize",
          edit: {
            header: "Edit Organization",
            toasts: {
              success: "Successfully updated the organization of {{title}}."
            }
          }
        },
        toasts: {
          delete: {
            success: {
              header: "Product deleted",
              description: "{{title}} was successfully deleted."
            },
            error: {
              header: "Failed to delete product"
            }
          }
        }
      },
      collections: {
        domain: "Collections",
        subtitle: "Organize products into collections.",
        createCollection: "Create Collection",
        createCollectionHint: "Create a new collection to organize your products.",
        createSuccess: "Collection created successfully.",
        editCollection: "Edit Collection",
        handleTooltip: "The handle is used to reference the collection in your storefront. If not specified, the handle will be generated from the collection title.",
        deleteWarning: "You are about to delete the collection {{title}}. This action cannot be undone.",
        removeSingleProductWarning: "You are about to remove the product {{title}} from the collection. This action cannot be undone.",
        removeProductsWarning_one: "You are about to remove {{count}} product from the collection. This action cannot be undone.",
        removeProductsWarning_other: "You are about to remove {{count}} products from the collection. This action cannot be undone.",
        products: {
          list: {
            noRecordsMessage: "There are no products in the collection."
          },
          add: {
            successToast_one: "Product was successfully added to the collection.",
            successToast_other: "Products were successfully added to the collection."
          },
          remove: {
            successToast_one: "Product was successfully removed from the collection.",
            successToast_other: "Products were successfully removed from the collection."
          }
        }
      },
      categories: {
        domain: "Categories",
        subtitle: "Organize products into categories, and manage those categories' ranking and hierarchy.",
        create: {
          header: "Create Category",
          hint: "Create a new category to organize your products.",
          tabs: {
            details: "Details",
            organize: "Organize Ranking"
          },
          successToast: "Category {{name}} was successfully created."
        },
        edit: {
          header: "Edit Category",
          description: "Edit the category to update its details.",
          successToast: "Category was successfully updated."
        },
        delete: {
          confirmation: "You are about to delete the category {{name}}. This action cannot be undone.",
          successToast: "Category {{name}} was successfully deleted."
        },
        products: {
          add: {
            disabledTooltip: "The product is already in this category.",
            successToast_one: "Added {{count}} product to the category.",
            successToast_other: "Added {{count}} products to the category."
          },
          remove: {
            confirmation_one: "You are about to remove {{count}} product from the category. This action cannot be undone.",
            confirmation_other: "You are about to remove {{count}} products from the category. This action cannot be undone.",
            successToast_one: "Removed {{count}} product from the category.",
            successToast_other: "Removed {{count}} products from the category."
          },
          list: {
            noRecordsMessage: "There are no products in the category."
          }
        },
        organize: {
          header: "Organize",
          action: "Edit ranking"
        },
        fields: {
          visibility: {
            label: "Visibility",
            internal: "Internal",
            public: "Public"
          },
          status: {
            label: "Status",
            active: "Active",
            inactive: "Inactive"
          },
          path: {
            label: "Path",
            tooltip: "Show the full path of the category."
          },
          children: {
            label: "Children"
          },
          new: {
            label: "New"
          }
        }
      },
      inventory: {
        domain: "Inventory",
        subtitle: "Manage your inventory items",
        reserved: "Reserved",
        available: "Available",
        locationLevels: "Locations",
        associatedVariants: "Associated variants",
        manageLocations: "Manage locations",
        deleteWarning: "You are about to delete an inventory item. This action cannot be undone.",
        editItemDetails: "Edit item details",
        create: {
          title: "Create Inventory Item",
          details: "Details",
          availability: "Availability",
          locations: "Locations",
          attributes: "Attributes",
          requiresShipping: "Requires shipping",
          requiresShippingHint: "Does the inventory item require shipping?",
          successToast: "Inventory item was successfully created."
        },
        reservation: {
          header: "Reservation of {{itemName}}",
          editItemDetails: "Edit reservation",
          lineItemId: "Line item ID",
          orderID: "Order ID",
          description: "Description",
          location: "Location",
          inStockAtLocation: "In stock at this location",
          availableAtLocation: "Available at this location",
          reservedAtLocation: "Reserved at this location",
          reservedAmount: "Reserve amount",
          create: "Create reservation",
          itemToReserve: "Item to reserve",
          quantityPlaceholder: "How much do you want to reserve?",
          descriptionPlaceholder: "What type of reservation is this?",
          successToast: "Reservation was successfully created.",
          updateSuccessToast: "Reservation was successfully updated.",
          deleteSuccessToast: "Reservation was successfully deleted.",
          errors: {
            noAvaliableQuantity: "Stock location doesn't have available quantity.",
            quantityOutOfRange: "Minimum quantity is 1 and maximum quantity is {{max}}"
          }
        },
        toast: {
          updateLocations: "Locations updated successfully.",
          updateLevel: "Inventory level updated successfully.",
          updateItem: "Inventory item updated successfully."
        }
      },
      giftCards: {
        domain: "Gift Cards",
        editGiftCard: "Edit Gift Card",
        createGiftCard: "Create Gift Card",
        createGiftCardHint: "Manually create a gift card that can be used as a payment method in your store.",
        selectRegionFirst: "Select a region first",
        deleteGiftCardWarning: "You are about to delete the gift card {{code}}. This action cannot be undone.",
        balanceHigherThanValue: "The balance cannot be higher than the original amount.",
        balanceLowerThanZero: "The balance cannot be negative.",
        expiryDateHint: "Countries have different laws regarding gift card expiry dates. Make sure to check local regulations before setting an expiry date.",
        regionHint: "Changing the region of the gift card will also change its currency, potentially affecting its monetary value.",
        enabledHint: "Specify if the gift card is enabled or disabled.",
        balance: "Balance",
        currentBalance: "Current balance",
        initialBalance: "Initial balance",
        personalMessage: "Personal message",
        recipient: "Recipient"
      },
      customers: {
        domain: "Customers",
        list: {
          noRecordsMessage: "Your customers will show up here."
        },
        create: {
          header: "Create Customer",
          hint: "Create a new customer and manage their details.",
          successToast: "Customer {{email}} was successfully created."
        },
        groups: {
          label: "Customer groups",
          remove: 'Are you sure you want to remove the customer from "{{name}}" customer group?',
          removeMany: "Are you sure you want to customer from following customer groups: {{groups}}?",
          alreadyAddedTooltip: "The customer is already in this customer group.",
          list: {
            noRecordsMessage: "This customer doesn't belong to any group."
          },
          add: {
            success: "Customer added to: {{groups}}.",
            list: {
              noRecordsMessage: "Please create a customer group first."
            }
          },
          removed: {
            success: "Customer removed from: {{groups}}.",
            list: {
              noRecordsMessage: "Please create a customer group first."
            }
          }
        },
        edit: {
          header: "Edit Customer",
          emailDisabledTooltip: "The email address cannot be changed for registered customers.",
          successToast: "Customer {{email}} was successfully updated."
        },
        delete: {
          title: "Delete Customer",
          description: "You are about to delete the customer {{email}}. This action cannot be undone.",
          successToast: "Customer {{email}} was successfully deleted."
        },
        fields: {
          guest: "Guest",
          registered: "Registered",
          groups: "Groups"
        },
        registered: "Registered",
        guest: "Guest",
        hasAccount: "Has account"
      },
      customerGroups: {
        domain: "Customer Groups",
        subtitle: "Organize customers into groups. Groups can have different promotions and prices.",
        create: {
          header: "Create Customer Group",
          hint: "Create a new customer group to segment your customers.",
          successToast: "Customer group {{name}} was successfully created."
        },
        edit: {
          header: "Edit Customer Group",
          successToast: "Customer group {{name}} was successfully updated."
        },
        delete: {
          title: "Delete Customer Group",
          description: "You are about to delete the customer group {{name}}. This action cannot be undone.",
          successToast: "Customer group {{name}} was successfully deleted."
        },
        customers: {
          alreadyAddedTooltip: "The customer has already been added to the group.",
          add: {
            successToast_one: "Customer was successfully added to the group.",
            successToast_other: "Customers were successfully added to the group.",
            list: {
              noRecordsMessage: "Create a customer first."
            }
          },
          remove: {
            title_one: "Remove customer",
            title_other: "Remove customers",
            description_one: "You are about to remove {{count}} customer from the customer group. This action cannot be undone.",
            description_other: "You are about to remove {{count}} customers from the customer group. This action cannot be undone."
          },
          list: {
            noRecordsMessage: "This group doesn't have customers."
          }
        }
      },
      orders: {
        domain: "Orders",
        claim: "Claim",
        exchange: "Exchange",
        return: "Return",
        cancelWarning: "You are about to cancel the order {{id}}. This action cannot be undone.",
        onDateFromSalesChannel: "{{date}} from {{salesChannel}}",
        list: {
          noRecordsMessage: "Your orders will show up here."
        },
        summary: {
          requestReturn: "Request return",
          allocateItems: "Allocate items",
          editOrder: "Edit order",
          editOrderContinue: "Continue order edit",
          inventoryKit: "Consists of {{count}}x inventory items",
          itemTotal: "Item Total",
          shippingTotal: "Shipping Total",
          discountTotal: "Discount Total",
          taxTotalIncl: "Tax Total (included)",
          itemSubtotal: "Item Subtotal",
          shippingSubtotal: "Shipping Subtotal",
          discountSubtotal: "Discount Subtotal",
          taxTotal: "Tax Total"
        },
        payment: {
          title: "Payments",
          isReadyToBeCaptured: "Payment <0/> is ready to be captured.",
          totalPaidByCustomer: "Total paid by customer",
          capture: "Capture payment",
          capture_short: "Capture",
          refund: "Refund",
          markAsPaid: "Mark as paid",
          statusLabel: "Payment status",
          statusTitle: "Payment Status",
          status: {
            notPaid: "Not paid",
            authorized: "Authorized",
            partiallyAuthorized: "Partially authorized",
            awaiting: "Awaiting",
            captured: "Captured",
            partiallyRefunded: "Partially refunded",
            partiallyCaptured: "Partially captured",
            refunded: "Refunded",
            canceled: "Canceled",
            requiresAction: "Requires action"
          },
          capturePayment: "Payment of {{amount}} will be captured.",
          capturePaymentSuccess: "Payment of {{amount}} successfully captured",
          markAsPaidPayment: "Payment of {{amount}} will be marked as paid.",
          markAsPaidPaymentSuccess: "Payment of {{amount}} successfully marked as paid",
          createRefund: "Create Refund",
          refundPaymentSuccess: "Refund of amount {{amount}} successful",
          createRefundWrongQuantity: "Quantity should be a number between 1 and {{number}}",
          refundAmount: "Refund {{ amount }}",
          paymentLink: "Copy payment link for {{ amount }}",
          selectPaymentToRefund: "Select payment to refund"
        },
        edits: {
          title: "Edit order",
          confirm: "Confirm Edit",
          confirmText: "You are about to confirm an Order Edit. This action cannot be undone.",
          cancel: "Cancel Edit",
          currentItems: "Current items",
          currentItemsDescription: "Adjust item quantity or remove.",
          addItemsDescription: "You can add new items to the order.",
          addItems: "Add items",
          amountPaid: "Amount paid",
          newTotal: "New total",
          differenceDue: "Difference due",
          create: "Edit Order",
          currentTotal: "Current total",
          noteHint: "Add an internal note for the edit",
          cancelSuccessToast: "Order edit canceled",
          createSuccessToast: "Order edit request created",
          activeChangeError: "There is already active order change on the order (return, claim, exchange etc.). Please finish or cancel the change before editing the order.",
          panel: {
            title: "Order edit requested",
            titlePending: "Order edit pending"
          },
          toast: {
            canceledSuccessfully: "Order edit cancelled",
            confirmedSuccessfully: "Order edit confirmed"
          },
          validation: {
            quantityLowerThanFulfillment: "Cannot set quantity to be less then or equal to fulfilled quantity"
          }
        },
        returns: {
          create: "Create Return",
          confirm: "Confirm Return",
          confirmText: "You are about to confirm a Return. This action cannot be undone.",
          inbound: "Inbound",
          outbound: "Outbound",
          sendNotification: "Send notification",
          sendNotificationHint: "Notify customer about return.",
          returnTotal: "Return total",
          inboundTotal: "Inbound total",
          refundAmount: "Refund amount",
          outstandingAmount: "Outstanding amount",
          reason: "Reason",
          reasonHint: "Choose why the customer want to return items.",
          note: "Note",
          noInventoryLevel: "No inventory level",
          noInventoryLevelDesc: "The selected location does not have an inventory level for the selected items. The return can be requested but can\u2019t be received until an inventory level is created for the selected location.",
          noteHint: "You can type freely if you want to specify something.",
          location: "Location",
          locationHint: "Choose which location you want to return the items to.",
          inboundShipping: "Return shipping",
          inboundShippingHint: "Choose which method you want to use.",
          returnableQuantityLabel: "Returnable quantity",
          refundableAmountLabel: "Refundable amount",
          returnRequestedInfo: "{{requestedItemsCount}}x items return requested",
          returnReceivedInfo: "{{requestedItemsCount}}x items return received",
          itemReceived: "Items received",
          returnRequested: "Return requested",
          damagedItemReceived: "Damaged items received",
          damagedItemsReturned: "{{quantity}}x damaged items returned",
          activeChangeError: "There is an active order change in progress on this order. Please finish or discard the change first.",
          cancel: {
            title: "Cancel Return",
            description: "Are you sure you want to cancel the return request?"
          },
          placeholders: {
            noReturnShippingOptions: {
              title: "No return shipping options found",
              hint: "No return shipping options were created for the location. You can create one at <LinkComponent>Location & Shipping</LinkComponent>."
            },
            outboundShippingOptions: {
              title: "No outbound shipping options found",
              hint: "No outbound shipping options were created for the location. You can create one at <LinkComponent>Location & Shipping</LinkComponent>."
            }
          },
          receive: {
            action: "Receive items",
            receiveItems: "{{ returnType }} {{ id }}",
            restockAll: "Restock all items",
            itemsLabel: "Items received",
            title: "Receive items for #{{returnId}}",
            sendNotificationHint: "Notify customer about received return.",
            inventoryWarning: "Please note that we will automatically adjust the inventory levels based on your input above.",
            writeOffInputLabel: "How many of the items are damaged?",
            toast: {
              success: "Return received successfully.",
              errorLargeValue: "Quantity is greater than requested item quantity.",
              errorNegativeValue: "Quantity cannot be a negative value.",
              errorLargeDamagedValue: "Damaged items quantity + non damaged received quantity exceeds total item quantity on the return. Please decrease quantity of non damaged items."
            }
          },
          toast: {
            canceledSuccessfully: "Return canceled successfully",
            confirmedSuccessfully: "Return confirmed successfully"
          },
          panel: {
            title: "Return initiated",
            description: "There is an open return request to be completed"
          }
        },
        claims: {
          create: "Create Claim",
          confirm: "Confirm Claim",
          confirmText: "You are about to confirm a Claim. This action cannot be undone.",
          manage: "Manage Claim",
          outbound: "Outbound",
          outboundItemAdded: "{{itemsCount}}x added through claim",
          outboundTotal: "Outbound total",
          outboundShipping: "Outbound shipping",
          outboundShippingHint: "Choose which method you want to use.",
          refundAmount: "Estimated difference",
          activeChangeError: "There is an active order change on this order. Please finish or discard the previous change.",
          actions: {
            cancelClaim: {
              successToast: "Claim was successfully canceled."
            }
          },
          cancel: {
            title: "Cancel Claim",
            description: "Are you sure you want to cancel the claim?"
          },
          tooltips: {
            onlyReturnShippingOptions: "This list will consist of only return shipping options."
          },
          toast: {
            canceledSuccessfully: "Claim canceled successfully",
            confirmedSuccessfully: "Claim confirmed successfully"
          },
          panel: {
            title: "Claim initiated",
            description: "There is an open claim request to be completed"
          }
        },
        exchanges: {
          create: "Create Exchange",
          manage: "Manage Exchange",
          confirm: "Confirm Exchange",
          confirmText: "You are about to confirm an Exchange. This action cannot be undone.",
          outbound: "Outbound",
          outboundItemAdded: "{{itemsCount}}x added through exchange",
          outboundTotal: "Outbound total",
          outboundShipping: "Outbound shipping",
          outboundShippingHint: "Choose which method you want to use.",
          refundAmount: "Estimated difference",
          activeChangeError: "There is an active order change on this order. Please finish or discard the previous change.",
          actions: {
            cancelExchange: {
              successToast: "Exchange was successfully canceled."
            }
          },
          cancel: {
            title: "Cancel Exchange",
            description: "Are you sure you want to cancel the exchange?"
          },
          tooltips: {
            onlyReturnShippingOptions: "This list will consist of only return shipping options."
          },
          toast: {
            canceledSuccessfully: "Exchange canceled successfully",
            confirmedSuccessfully: "Exchange confirmed successfully"
          },
          panel: {
            title: "Exchange initiated",
            description: "There is an open exchange request to be completed"
          }
        },
        reservations: {
          allocatedLabel: "Allocated",
          notAllocatedLabel: "Not allocated"
        },
        allocateItems: {
          action: "Allocate items",
          title: "Allocate order items",
          locationDescription: "Choose which location you want to allocate from.",
          itemsToAllocate: "Items to allocate",
          itemsToAllocateDesc: "Select the number of items you wish to allocate",
          search: "Search items",
          consistsOf: "Consists of {{num}}x inventory items",
          requires: "Requires {{num}} per variant",
          toast: {
            created: "Items successfully allocated"
          },
          error: {
            quantityNotAllocated: "There are unallocated items."
          }
        },
        shipment: {
          title: "Mark fulfillment shipped",
          trackingNumber: "Tracking number",
          addTracking: "Add tracking number",
          sendNotification: "Send notification",
          sendNotificationHint: "Notify the customer about this shipment.",
          toastCreated: "Shipment created successfully."
        },
        fulfillment: {
          cancelWarning: "You are about to cancel a fulfillment. This action cannot be undone.",
          markAsDeliveredWarning: "You are about to mark fulfillment as delivered. This action cannot be undone.",
          unfulfilledItems: "Unfulfilled Items",
          statusLabel: "Fulfillment status",
          statusTitle: "Fulfillment Status",
          fulfillItems: "Fulfill items",
          awaitingFulfillmentBadge: "Awaiting fulfillment",
          requiresShipping: "Requires shipping",
          number: "Fulfillment #{{number}}",
          itemsToFulfill: "Items to fulfill",
          create: "Create Fulfillment",
          available: "Available",
          inStock: "In stock",
          markAsShipped: "Mark as shipped",
          markAsDelivered: "Mark as delivered",
          itemsToFulfillDesc: "Choose items and quantities to fulfill",
          locationDescription: "Choose which location you want to fulfill items from.",
          sendNotificationHint: "Notify customers about the created fulfillment.",
          methodDescription: "Choose a different shipping method from the one customer selected",
          error: {
            wrongQuantity: "Only one item is available for fulfillment",
            wrongQuantity_other: "Quantity should be a number between 1 and {{number}}",
            noItems: "No items to fulfill."
          },
          status: {
            notFulfilled: "Not fulfilled",
            partiallyFulfilled: "Partially fulfilled",
            fulfilled: "Fulfilled",
            partiallyShipped: "Partially shipped",
            shipped: "Shipped",
            delivered: "Delivered",
            partiallyDelivered: "Partially delivered",
            partiallyReturned: "Partially returned",
            returned: "Returned",
            canceled: "Canceled",
            requiresAction: "Requires action"
          },
          toast: {
            created: "Fulfillment created successfully",
            canceled: "Fulfillment successfully canceled",
            fulfillmentShipped: "Cannot cancel an already shipped fulfillment",
            fulfillmentDelivered: "Fulfillment marked as delivered successfully"
          },
          trackingLabel: "Tracking",
          shippingFromLabel: "Shipping from",
          itemsLabel: "Items"
        },
        refund: {
          title: "Create Refund",
          sendNotificationHint: "Notify customers about the created refund.",
          systemPayment: "System payment",
          systemPaymentDesc: "One or more of your payments is a system payment. Be aware, that captures and refunds are not handled by Medusa for such payments.",
          error: {
            amountToLarge: "Cannot refund more than the original order amount.",
            amountNegative: "Refund amount must be a positive number.",
            reasonRequired: "Please select a refund reason."
          }
        },
        customer: {
          contactLabel: "Contact",
          editEmail: "Edit email",
          transferOwnership: "Transfer ownership",
          editBillingAddress: "Edit billing address",
          editShippingAddress: "Edit shipping address"
        },
        activity: {
          header: "Activity",
          showMoreActivities_one: "Show {{count}} more activity",
          showMoreActivities_other: "Show {{count}} more activities",
          comment: {
            label: "Comment",
            placeholder: "Leave a comment",
            addButtonText: "Add comment",
            deleteButtonText: "Delete comment"
          },
          events: {
            common: {
              toReturn: "To return",
              toSend: "To send"
            },
            placed: {
              title: "Order placed",
              fromSalesChannel: "from {{salesChannel}}"
            },
            canceled: {
              title: "Order canceled"
            },
            payment: {
              awaiting: "Awaiting payment",
              captured: "Payment captured",
              canceled: "Payment canceled",
              refunded: "Payment refunded"
            },
            fulfillment: {
              created: "Items fulfilled",
              canceled: "Fulfillment canceled",
              shipped: "Items shipped",
              delivered: "Items delivered",
              items_one: "{{count}} item",
              items_other: "{{count}} items"
            },
            return: {
              created: "Return #{{returnId}} requested",
              canceled: "Return #{{returnId}} canceled",
              received: "Return #{{returnId}} received",
              items_one: "{{count}} item returned",
              items_other: "{{count}} items returned"
            },
            note: {
              comment: "Comment",
              byLine: "by {{author}}"
            },
            claim: {
              created: "Claim #{{claimId}} requested",
              canceled: "Claim #{{claimId}} canceled",
              itemsInbound: "{{count}} item to return",
              itemsOutbound: "{{count}} item to send"
            },
            exchange: {
              created: "Exchange #{{exchangeId}} requested",
              canceled: "Exchange #{{exchangeId}} canceled",
              itemsInbound: "{{count}} item to return",
              itemsOutbound: "{{count}} item to send"
            },
            edit: {
              requested: "Order edit #{{editId}} requested",
              confirmed: "Order edit #{{editId}} confirmed"
            }
          }
        },
        fields: {
          displayId: "Display ID",
          refundableAmount: "Refundable amount",
          returnableQuantity: "Returnable quantity"
        }
      },
      draftOrders: {
        domain: "Draft Orders",
        deleteWarning: "You are about to delete the draft order {{id}}. This action cannot be undone.",
        paymentLinkLabel: "Payment link",
        cartIdLabel: "Cart ID",
        markAsPaid: {
          label: "Mark as paid",
          warningTitle: "Mark as Paid",
          warningDescription: "You are about to mark the draft order as paid. This action cannot be undone, and collecting payment will not be possible later."
        },
        status: {
          open: "Open",
          completed: "Completed"
        },
        create: {
          createDraftOrder: "Create Draft Order",
          createDraftOrderHint: "Create a new draft order to manage the details of an order before it is placed.",
          chooseRegionHint: "Choose region",
          existingItemsLabel: "Existing items",
          existingItemsHint: "Add existing products to the draft order.",
          customItemsLabel: "Custom items",
          customItemsHint: "Add custom items to the draft order.",
          addExistingItemsAction: "Add existing items",
          addCustomItemAction: "Add custom item",
          noCustomItemsAddedLabel: "No custom items added yet",
          noExistingItemsAddedLabel: "No existing items added yet",
          chooseRegionTooltip: "Choose a region first",
          useExistingCustomerLabel: "Use existing customer",
          addShippingMethodsAction: "Add shipping methods",
          unitPriceOverrideLabel: "Unit price override",
          shippingOptionLabel: "Shipping option",
          shippingOptionHint: "Choose the shipping option for the draft order.",
          shippingPriceOverrideLabel: "Shipping price override",
          shippingPriceOverrideHint: "Override the shipping price for the draft order.",
          sendNotificationLabel: "Send notification",
          sendNotificationHint: "Send a notification to the customer when the draft order is created."
        },
        validation: {
          requiredEmailOrCustomer: "Email or customer is required.",
          requiredItems: "At least one item is required.",
          invalidEmail: "Email must be a valid email address."
        }
      },
      stockLocations: {
        domain: "Locations & Shipping",
        list: {
          description: "Manage your store's stock locations and shipping options."
        },
        create: {
          header: "Create Stock Location",
          hint: "A stock location is a physical site where products are stored and shipped from.",
          successToast: "Location {{name}} was successfully created."
        },
        edit: {
          header: "Edit Stock Location",
          viewInventory: "View inventory",
          successToast: "Location {{name}} was successfully updated."
        },
        delete: {
          confirmation: "You are about to delete the stock location {{name}}. This action cannot be undone."
        },
        fulfillmentProviders: {
          header: "Fulfillment Providers",
          shippingOptionsTooltip: "This dropdown will only consist of providers enabled for this location. Add them to the location if the dropdown is disabled.",
          label: "Connected fulfillment providers",
          connectedTo: "Connected to {{count}} of {{total}} fulfillment providers",
          noProviders: "This Stock Location is not connected to any fulfillment providers.",
          action: "Connect Providers",
          successToast: "Fulfillment providers for stock location were successfully updated."
        },
        fulfillmentSets: {
          pickup: {
            header: "Pickup"
          },
          shipping: {
            header: "Shipping"
          },
          disable: {
            confirmation: "Are you sure that you want to disable {{name}}? This will delete all associated service zones and shipping options, and cannot be undone.",
            pickup: "Pickup was successfully disabled.",
            shipping: "Shipping was successfully disabled."
          },
          enable: {
            pickup: "Pickup was successfully enabled.",
            shipping: "Shipping was successfully enabled."
          }
        },
        sidebar: {
          header: "Shipping Configuration",
          shippingProfiles: {
            label: "Shipping Profiles",
            description: "Group products by shipping requirements"
          }
        },
        salesChannels: {
          header: "Sales Channels",
          label: "Connected sales channels",
          connectedTo: "Connected to {{count}} of {{total}} sales channels",
          noChannels: "The location is not connected to any sales channels.",
          action: "Connect sales channels",
          successToast: "Sales channels were successfully updated."
        },
        shippingOptions: {
          create: {
            shipping: {
              header: "Create Shipping Option for {{zone}}",
              hint: "Create a new shipping option to define how products are shipped from this location.",
              label: "Shipping options",
              successToast: "Shipping option {{name}} was successfully created."
            },
            returns: {
              header: "Create a Return Option for {{zone}}",
              hint: "Create a new return option to define how products are returned to this location.",
              label: "Return options",
              successToast: "Return option {{name}} was successfully created."
            },
            tabs: {
              details: "Details",
              prices: "Prices"
            },
            action: "Create option"
          },
          delete: {
            confirmation: "You are about to delete the shipping option {{name}}. This action cannot be undone.",
            successToast: "Shipping option {{name}} was successfully deleted."
          },
          edit: {
            header: "Edit Shipping Option",
            action: "Edit option",
            successToast: "Shipping option {{name}} was successfully updated."
          },
          pricing: {
            action: "Edit prices"
          },
          fields: {
            count: {
              shipping_one: "{{count}} shipping option",
              shipping_other: "{{count}} shipping options",
              returns_one: "{{count}} return option",
              returns_other: "{{count}} return options"
            },
            priceType: {
              label: "Price type",
              options: {
                fixed: {
                  label: "Fixed",
                  hint: "The shipping option's price is fixed and does not change based on the order's contents."
                },
                calculated: {
                  label: "Calculated",
                  hint: "The shipping option's price is calculated by the fulfillment provider during checkout."
                }
              }
            },
            enableInStore: {
              label: "Enable in store",
              hint: "Whether customers can use this option during checkout."
            },
            provider: "Fulfillment provider",
            profile: "Shipping profile"
          }
        },
        serviceZones: {
          create: {
            headerPickup: "Create Service Zone for Pickup from {{location}}",
            headerShipping: "Create Service Zone for Shipping from {{location}}",
            action: "Create service zone",
            successToast: "Service zone {{name}} was successfully created."
          },
          edit: {
            header: "Edit Service Zone",
            successToast: "Service zone {{name}} was successfully updated."
          },
          delete: {
            confirmation: "You are about to delete the service zone {{name}}. This action cannot be undone.",
            successToast: "Service zone {{name}} was successfully deleted."
          },
          manageAreas: {
            header: "Manage Areas for {{name}}",
            action: "Manage areas",
            label: "Areas",
            hint: "Select the geographical areas that the service zone covers.",
            successToast: "Areas for {{name}} were successfully updated."
          },
          fields: {
            noRecords: "There are no service zones to add shipping options to.",
            tip: "A service zone is a collection of geographical zones or areas. It's used to restrict available shipping options to a defined set of locations."
          }
        }
      },
      shippingProfile: {
        domain: "Shipping Profiles",
        subtitle: "Group products with similar shipping requirements into profiles.",
        create: {
          header: "Create Shipping Profile",
          hint: "Create a new shipping profile to group products with similar shipping requirements.",
          successToast: "Shipping profile {{name}} was successfully created."
        },
        delete: {
          title: "Delete Shipping Profile",
          description: "You are about to delete the shipping profile {{name}}. This action cannot be undone.",
          successToast: "Shipping profile {{name}} was successfully deleted."
        },
        tooltip: {
          type: "Enter shipping profile type, for example: Heavy, Oversized, Freight-only, etc."
        }
      },
      taxRegions: {
        domain: "Tax Regions",
        list: {
          hint: "Manage what you charge your customers when they shop from different countries and regions."
        },
        delete: {
          confirmation: "You are about to delete a tax region. This action cannot be undone.",
          successToast: "The tax region was successfully deleted."
        },
        create: {
          header: "Create Tax Region",
          hint: "Create a new tax region to define tax rates for a specific country.",
          errors: {
            rateIsRequired: "Tax rate is required when creating a default tax rate.",
            nameIsRequired: "Name is required when creating a default tax rate."
          },
          successToast: "The tax region was successfully created."
        },
        province: {
          header: "Provinces",
          create: {
            header: "Create Province Tax Region",
            hint: "Create a new tax region to define tax rates for a specific province."
          }
        },
        state: {
          header: "States",
          create: {
            header: "Create State Tax Region",
            hint: "Create a new tax region to define tax rates for a specific state."
          }
        },
        stateOrTerritory: {
          header: "States or Territories",
          create: {
            header: "Create State/Territory Tax Region",
            hint: "Create a new tax region to define tax rates for a specific state/territory."
          }
        },
        county: {
          header: "Counties",
          create: {
            header: "Create County Tax Region",
            hint: "Create a new tax region to define tax rates for a specific county."
          }
        },
        region: {
          header: "Regions",
          create: {
            header: "Create Region Tax Region",
            hint: "Create a new tax region to define tax rates for a specific region."
          }
        },
        department: {
          header: "Departments",
          create: {
            header: "Create Department Tax Region",
            hint: "Create a new tax region to define tax rates for a specific department."
          }
        },
        territory: {
          header: "Territories",
          create: {
            header: "Create Territory Tax Region",
            hint: "Create a new tax region to define tax rates for a specific territory."
          }
        },
        prefecture: {
          header: "Prefectures",
          create: {
            header: "Create Prefecture Tax Region",
            hint: "Create a new tax region to define tax rates for a specific prefecture."
          }
        },
        district: {
          header: "Districts",
          create: {
            header: "Create District Tax Region",
            hint: "Create a new tax region to define tax rates for a specific district."
          }
        },
        governorate: {
          header: "Governorates",
          create: {
            header: "Create Governorate Tax Region",
            hint: "Create a new tax region to define tax rates for a specific governorate."
          }
        },
        canton: {
          header: "Cantons",
          create: {
            header: "Create Canton Tax Region",
            hint: "Create a new tax region to define tax rates for a specific canton."
          }
        },
        emirate: {
          header: "Emirates",
          create: {
            header: "Create Emirate Tax Region",
            hint: "Create a new tax region to define tax rates for a specific emirate."
          }
        },
        sublevel: {
          header: "Sublevels",
          create: {
            header: "Create Sublevel Tax Region",
            hint: "Create a new tax region to define tax rates for a specific sublevel."
          }
        },
        taxOverrides: {
          header: "Overrides",
          create: {
            header: "Create Override",
            hint: "Create a tax rate that overrides the default tax rates for selected conditions."
          },
          edit: {
            header: "Edit Override",
            hint: "Edit the tax rate that overrides the default tax rates for selected conditions."
          }
        },
        taxRates: {
          create: {
            header: "Create Tax Rate",
            hint: "Create a new tax rate to define the tax rate for a region.",
            successToast: "Tax rate was successfully created."
          },
          edit: {
            header: "Edit Tax Rate",
            hint: "Edit the tax rate to define the tax rate for a region.",
            successToast: "Tax rate was successfully updated."
          },
          delete: {
            confirmation: "You are about to delete the tax rate {{name}}. This action cannot be undone.",
            successToast: "Tax rate was successfully deleted."
          }
        },
        fields: {
          isCombinable: {
            label: "Combinable",
            hint: "Whether this tax rate can be combined with the default rate from the tax region.",
            true: "Combinable",
            false: "Not combinable"
          },
          defaultTaxRate: {
            label: "Default tax rate",
            tooltip: "The default tax rate for this region. An example is the standard VAT rate for a country or region.",
            action: "Create default tax rate"
          },
          taxRate: "Tax rate",
          taxCode: "Tax code",
          targets: {
            label: "Targets",
            hint: "Select the targets that this tax rate will apply to.",
            options: {
              product: "Products",
              productCollection: "Product collections",
              productTag: "Product tags",
              productType: "Product types",
              customerGroup: "Customer groups"
            },
            operators: {
              in: "in",
              on: "on",
              and: "and"
            },
            placeholders: {
              product: "Search for products",
              productCollection: "Search for product collections",
              productTag: "Search for product tags",
              productType: "Search for product types",
              customerGroup: "Search for customer groups"
            },
            tags: {
              product: "Product",
              productCollection: "Product collection",
              productTag: "Product tag",
              productType: "Product type",
              customerGroup: "Customer group"
            },
            modal: {
              header: "Add targets"
            },
            values_one: "{{count}} value",
            values_other: "{{count}} values",
            numberOfTargets_one: "{{count}} target",
            numberOfTargets_other: "{{count}} targets",
            additionalValues_one: "and {{count}} more value",
            additionalValues_other: "and {{count}} more values",
            action: "Add target"
          },
          sublevels: {
            labels: {
              province: "Province",
              state: "State",
              region: "Region",
              stateOrTerritory: "State/Territory",
              department: "Department",
              county: "County",
              territory: "Territory",
              prefecture: "Prefecture",
              district: "District",
              governorate: "Governorate",
              emirate: "Emirate",
              canton: "Canton",
              sublevel: "Sublevel code"
            },
            placeholders: {
              province: "Select province",
              state: "Select state",
              region: "Select region",
              stateOrTerritory: "Select state/territory",
              department: "Select department",
              county: "Select county",
              territory: "Select territory",
              prefecture: "Select prefecture",
              district: "Select district",
              governorate: "Select governorate",
              emirate: "Select emirate",
              canton: "Select canton"
            },
            tooltips: {
              sublevel: "Enter the ISO 3166-2 code for the sublevel tax region.",
              notPartOfCountry: "{{province}} does not appear to be part of {{country}}. Please double-check if this is correct."
            },
            alert: {
              header: "Sublevel regions are disabled for this tax region",
              description: "Sublevel regions are disabled for this region by default. You can enable them to create sublevel regions like provinces, states, or territories.",
              action: "Enable sublevel regions"
            }
          },
          noDefaultRate: {
            label: "No default rate",
            tooltip: "This tax region does not have a default tax rate. If there is a standard rate, such as a country's VAT, please add it to this region."
          }
        }
      },
      promotions: {
        domain: "Promotions",
        sections: {
          details: "Promotion Details"
        },
        tabs: {
          template: "Type",
          details: "Details",
          campaign: "Campaign"
        },
        fields: {
          type: "Type",
          value_type: "Value Type",
          value: "Value",
          campaign: "Campaign",
          method: "Method",
          allocation: "Allocation",
          addCondition: "Add condition",
          clearAll: "Clear all",
          amount: {
            tooltip: "Select the currency code to enable setting the amount"
          },
          conditions: {
            rules: {
              title: "Who can use this code?",
              description: "Which customer is allowed to use the promotion code? Promotion code can be used by all customers if left untouched."
            },
            "target-rules": {
              title: "What items will the promotion be applied to?",
              description: "The promotion will be applied to items that match the following conditions."
            },
            "buy-rules": {
              title: "What needs to be in the cart to unlock the promotion?",
              description: "If these conditions match, we enable the promotion on the target items."
            }
          }
        },
        tooltips: {
          campaignType: "The currency code must be selected in the promotion to set a spend budget."
        },
        errors: {
          requiredField: "Required field",
          promotionTabError: "Fix errors in Promotion Tab before proceeding"
        },
        toasts: {
          promotionCreateSuccess: "Promotion ({{code}}) was successfully created."
        },
        create: {},
        edit: {
          title: "Edit Promotion Details",
          rules: {
            title: "Edit usage conditions"
          },
          "target-rules": {
            title: "Edit item conditions"
          },
          "buy-rules": {
            title: "Edit buy rules"
          }
        },
        campaign: {
          header: "Campaign",
          edit: {
            header: "Edit Campaign",
            successToast: "Successfully updated the campaign of the promotion."
          },
          actions: {
            goToCampaign: "Go to campaign"
          }
        },
        campaign_currency: {
          tooltip: "This is the promotion's currency. Change it from the Details tab."
        },
        form: {
          required: "Required",
          and: "AND",
          selectAttribute: "Select Attribute",
          campaign: {
            existing: {
              title: "Existing Campaign",
              description: "Add promotion to an existing campaign.",
              placeholder: {
                title: "No existing campaigns",
                desc: "You can create one to track multiple promotions and set budget limits."
              }
            },
            new: {
              title: "New Campaign",
              description: "Create a new campaign for this promotion."
            },
            none: {
              title: "Without Campaign",
              description: "Proceed without associating promotion with campaign"
            }
          },
          status: {
            title: "Status"
          },
          method: {
            label: "Method",
            code: {
              title: "Promotion code",
              description: "Customers must enter this code at checkout"
            },
            automatic: {
              title: "Automatic",
              description: "Customers will see this promotion at checkout"
            }
          },
          max_quantity: {
            title: "Maximum Quantity",
            description: "Maximum quantity of items this promotion applies to."
          },
          type: {
            standard: {
              title: "Standard",
              description: "A standard promotion"
            },
            buyget: {
              title: "Buy Get",
              description: "Buy X get Y promotion"
            }
          },
          allocation: {
            each: {
              title: "Each",
              description: "Applies value on each item"
            },
            across: {
              title: "Across",
              description: "Applies value across items"
            }
          },
          code: {
            title: "Code",
            description: "The code your customers will enter during checkout."
          },
          value: {
            title: "Promotion Value"
          },
          value_type: {
            fixed: {
              title: "Promotion Value",
              description: "The amount to be discounted. eg. 100"
            },
            percentage: {
              title: "Promotion Value",
              description: "The percentage to discount off the amount. eg. 8%"
            }
          }
        },
        deleteWarning: "You are about to delete the promotion {{code}}. This action cannot be undone.",
        createPromotionTitle: "Create Promotion",
        type: "Promotion type",
        conditions: {
          add: "Add condition",
          list: {
            noRecordsMessage: "Add a condition to restrict what items the promotion applies to."
          }
        }
      },
      campaigns: {
        domain: "Campaigns",
        details: "Campaign details",
        status: {
          active: "Active",
          expired: "Expired",
          scheduled: "Scheduled"
        },
        delete: {
          title: "Are you sure?",
          description: "You are about to delete the campaign '{{name}}'. This action cannot be undone.",
          successToast: "Campaign '{{name}}' was successfully created."
        },
        edit: {
          header: "Edit Campaign",
          description: "Edit the details of the campaign.",
          successToast: "Campaign '{{name}}' was successfully updated."
        },
        configuration: {
          header: "Configuration",
          edit: {
            header: "Edit Campaign Configuration",
            description: "Edit the configuration of the campaign.",
            successToast: "Campaign configuration was successfully updated."
          }
        },
        create: {
          title: "Create Campaign",
          description: "Create a promotional campaign.",
          hint: "Create a promotional campaign.",
          header: "Create Campaign",
          successToast: "Campaign '{{name}}' was successfully created."
        },
        fields: {
          name: "Name",
          identifier: "Identifier",
          start_date: "Start date",
          end_date: "End date",
          total_spend: "Budget spent",
          total_used: "Budget used",
          budget_limit: "Budget limit",
          campaign_id: {
            hint: "Only campaigns with the same currency code as the promotion are shown in this list."
          }
        },
        budget: {
          create: {
            hint: "Create a budget for the campaign.",
            header: "Campaign Budget"
          },
          details: "Campaign budget",
          fields: {
            type: "Type",
            currency: "Currency",
            limit: "Limit",
            used: "Used"
          },
          type: {
            spend: {
              title: "Spend",
              description: "Set a limit on the total discounted amount of all promotion usages."
            },
            usage: {
              title: "Usage",
              description: "Set a limit on how many times the promotion can be used."
            }
          },
          edit: {
            header: "Edit Campaign Budget"
          }
        },
        promotions: {
          remove: {
            title: "Remove promotion from campaign",
            description: "You are about to remove {{count}} promotion(s) from the campaign. This action cannot be undone."
          },
          alreadyAdded: "This promotion has already been added to the campaign.",
          alreadyAddedDiffCampaign: "This promotion has already been added to a different campaign ({{name}}).",
          currencyMismatch: "Currency of the promotion and campaign doesn't match",
          toast: {
            success: "Successfully added {{count}} promotion(s) to campaign"
          },
          add: {
            list: {
              noRecordsMessage: "Create a promotion first."
            }
          },
          list: {
            noRecordsMessage: "There are no promotions in the campaign."
          }
        },
        deleteCampaignWarning: "You are about to delete the campaign {{name}}. This action cannot be undone.",
        totalSpend: "<0>{{amount}}</0> <1>{{currency}}</1>"
      },
      priceLists: {
        domain: "Price Lists",
        subtitle: "Create sales or override prices for specific conditions.",
        delete: {
          confirmation: "You are about to delete the price list {{title}}. This action cannot be undone.",
          successToast: "Price list {{title}} was successfully deleted."
        },
        create: {
          header: "Create Price List",
          subheader: "Create a new price list to manage the prices of your products.",
          tabs: {
            details: "Details",
            products: "Products",
            prices: "Prices"
          },
          successToast: "Price list {{title}} was successfully created.",
          products: {
            list: {
              noRecordsMessage: "Create a product first."
            }
          }
        },
        edit: {
          header: "Edit Price List",
          successToast: "Price list {{title}} was successfully updated."
        },
        configuration: {
          header: "Configuration",
          edit: {
            header: "Edit Price List Configuration",
            description: "Edit the configuration of the price list.",
            successToast: "Price list configuration was successfully updated."
          }
        },
        products: {
          header: "Products",
          actions: {
            addProducts: "Add products",
            editPrices: "Edit prices"
          },
          delete: {
            confirmation_one: "You are about to delete the prices for {{count}} product in the price list. This action cannot be undone.",
            confirmation_other: "You are about to delete the prices for {{count}} products in the price list. This action cannot be undone.",
            successToast_one: "Successfully deleted prices for {{count}} product.",
            successToast_other: "Successfully deleted prices for {{count}} products."
          },
          add: {
            successToast: "Prices were successfully added to the price list."
          },
          edit: {
            successToast: "Prices were successfully updated."
          }
        },
        fields: {
          priceOverrides: {
            label: "Price overrides",
            header: "Price Overrides"
          },
          status: {
            label: "Status",
            options: {
              active: "Active",
              draft: "Draft",
              expired: "Expired",
              scheduled: "Scheduled"
            }
          },
          type: {
            label: "Type",
            hint: "Choose the type of price list you want to create.",
            options: {
              sale: {
                label: "Sale",
                description: "Sale prices are temporary price changes for products."
              },
              override: {
                label: "Override",
                description: "Overrides are usually used to create customer-specific prices."
              }
            }
          },
          startsAt: {
            label: "Price list has a start date?",
            hint: "Schedule the price list to activate in the future."
          },
          endsAt: {
            label: "Price list has an expiry date?",
            hint: "Schedule the price list to deactivate in the future."
          },
          customerAvailability: {
            header: "Choose customer groups",
            label: "Customer availability",
            hint: "Choose which customer groups the price list should be applied to.",
            placeholder: "Search for customer groups",
            attribute: "Customer groups"
          }
        }
      },
      profile: {
        domain: "Profile",
        manageYourProfileDetails: "Manage your profile details.",
        fields: {
          languageLabel: "Language",
          usageInsightsLabel: "Usage insights"
        },
        edit: {
          header: "Edit Profile",
          languageHint: "The language you want to use in the admin dashboard. This doesn't change the language of your store.",
          languagePlaceholder: "Select language",
          usageInsightsHint: "Share usage insights and help us improve Medusa. You can read more about what we collect and how we use it in our <0>documentation</0>."
        },
        toast: {
          edit: "Profiles changes saved"
        }
      },
      users: {
        domain: "Users",
        editUser: "Edit User",
        inviteUser: "Invite User",
        inviteUserHint: "Invite a new user to your store.",
        sendInvite: "Send invite",
        pendingInvites: "Pending Invites",
        deleteInviteWarning: "You are about to delete the invite for {{email}}. This action cannot be undone.",
        resendInvite: "Resend invite",
        copyInviteLink: "Copy invite link",
        expiredOnDate: "Expired on {{date}}",
        validFromUntil: "Valid from <0>{{from}}</0> - <1>{{until}}</1>",
        acceptedOnDate: "Accepted on {{date}}",
        inviteStatus: {
          accepted: "Accepted",
          pending: "Pending",
          expired: "Expired"
        },
        roles: {
          admin: "Admin",
          developer: "Developer",
          member: "Member"
        },
        deleteUserWarning: "You are about to delete the user {{name}}. This action cannot be undone.",
        invite: "Invite"
      },
      store: {
        domain: "Store",
        manageYourStoresDetails: "Manage your store's details",
        editStore: "Edit store",
        defaultCurrency: "Default currency",
        defaultRegion: "Default region",
        swapLinkTemplate: "Swap link template",
        paymentLinkTemplate: "Payment link template",
        inviteLinkTemplate: "Invite link template",
        currencies: "Currencies",
        addCurrencies: "Add currencies",
        enableTaxInclusivePricing: "Enable tax inclusive pricing",
        disableTaxInclusivePricing: "Disable tax inclusive pricing",
        removeCurrencyWarning_one: "You are about to remove {{count}} currency from your store. Ensure that you have removed all prices using the currency before proceeding.",
        removeCurrencyWarning_other: "You are about to remove {{count}} currencies from your store. Ensure that you have removed all prices using the currencies before proceeding.",
        currencyAlreadyAdded: "The currency has already been added to your store.",
        edit: {
          header: "Edit Store"
        },
        toast: {
          update: "Store successfully updated",
          currenciesUpdated: "Currencies updated successfully",
          currenciesRemoved: "Removed currencies from the store successfully",
          updatedTaxInclusivitySuccessfully: "Tax inclusive pricing updated successfully"
        }
      },
      regions: {
        domain: "Regions",
        subtitle: "A region is an area that you sell products in. It can cover multipe countries, and has different tax rates, providers, and currency.",
        createRegion: "Create Region",
        createRegionHint: "Manage tax rates and providers for a set of countries.",
        addCountries: "Add countries",
        editRegion: "Edit Region",
        countriesHint: "Add the countries included in this region.",
        deleteRegionWarning: "You are about to delete the region {{name}}. This action cannot be undone.",
        removeCountriesWarning_one: "You are about to remove {{count}} country from the region. This action cannot be undone.",
        removeCountriesWarning_other: "You are about to remove {{count}} countries from the region. This action cannot be undone.",
        removeCountryWarning: "You are about to remove the country {{name}} from the region. This action cannot be undone.",
        automaticTaxesHint: "When enabled, taxes will only be calculated at checkout based on the shipping address.",
        taxInclusiveHint: "When enabled, prices in the region will be tax inclusive.",
        providersHint: " Add which payment providers are available in this region.",
        shippingOptions: "Shipping Options",
        deleteShippingOptionWarning: "You are about to delete the shipping option {{name}}. This action cannot be undone.",
        return: "Return",
        outbound: "Outbound",
        priceType: "Price Type",
        flatRate: "Flat Rate",
        calculated: "Calculated",
        list: {
          noRecordsMessage: "Create a region for the areas that you sell in."
        },
        toast: {
          delete: "Region deleted successfully",
          edit: "Region edit saved",
          create: "Region created successfully",
          countries: "Region countries updated successfully"
        },
        shippingOption: {
          createShippingOption: "Create Shipping Option",
          createShippingOptionHint: "Create a new shipping option for the region.",
          editShippingOption: "Edit Shipping Option",
          fulfillmentMethod: "Fulfillment Method",
          type: {
            outbound: "Outbound",
            outboundHint: "Use this if you are creating a shipping option for sending products to the customer.",
            return: "Return",
            returnHint: "Use this if you are creating a shipping option for the customer to return products to you."
          },
          priceType: {
            label: "Price Type",
            flatRate: "Flat rate",
            calculated: "Calculated"
          },
          availability: {
            adminOnly: "Admin only",
            adminOnlyHint: "When enabled, the shipping option will only be available in the admin dashboard, and not in the storefront."
          },
          taxInclusiveHint: "When enabled, the shipping option's price will be tax inclusive.",
          requirements: {
            label: "Requirements",
            hint: "Specify the requirements for the shipping option."
          }
        }
      },
      taxes: {
        domain: "Tax Regions",
        domainDescription: "Manage your tax region",
        countries: {
          taxCountriesHint: "Tax settings apply to the listed countries."
        },
        settings: {
          editTaxSettings: "Edit Tax Settings",
          taxProviderLabel: "Tax provider",
          systemTaxProviderLabel: "System Tax Provider",
          calculateTaxesAutomaticallyLabel: "Calculate taxes automatically",
          calculateTaxesAutomaticallyHint: "When enabled, tax rates will be calculated automatically and applied to carts. When disabled, taxes must be manually computed at checkout. Manual taxes are recommended for usage with third-party tax providers.",
          applyTaxesOnGiftCardsLabel: "Apply taxes on gift cards",
          applyTaxesOnGiftCardsHint: "When enabled, taxes will be applied to gift cards at checkout. In some countries, tax regulations require the application of taxes to gift cards upon purchase.",
          defaultTaxRateLabel: "Default tax rate",
          defaultTaxCodeLabel: "Default tax code"
        },
        defaultRate: {
          sectionTitle: "Default Tax Rate"
        },
        taxRate: {
          sectionTitle: "Tax Rates",
          createTaxRate: "Create Tax Rate",
          createTaxRateHint: "Create a new tax rate for the region.",
          deleteRateDescription: "You are about to delete the tax rate {{name}}. This action cannot be undone.",
          editTaxRate: "Edit Tax Rate",
          editRateAction: "Edit rate",
          editOverridesAction: "Edit overrides",
          editOverridesTitle: "Edit Tax Rate Overrides",
          editOverridesHint: "Specify the overrides for the tax rate.",
          deleteTaxRateWarning: "You are about to delete the tax rate {{name}}. This action cannot be undone.",
          productOverridesLabel: "Product overrides",
          productOverridesHint: "Specify the product overrides for the tax rate.",
          addProductOverridesAction: "Add product overrides",
          productTypeOverridesLabel: "Product type overrides",
          productTypeOverridesHint: "Specify the product type overrides for the tax rate.",
          addProductTypeOverridesAction: "Add product type overrides",
          shippingOptionOverridesLabel: "Shipping option overrides",
          shippingOptionOverridesHint: "Specify the shipping option overrides for the tax rate.",
          addShippingOptionOverridesAction: "Add shipping option overrides",
          productOverridesHeader: "Products",
          productTypeOverridesHeader: "Product Types",
          shippingOptionOverridesHeader: "Shipping Options"
        }
      },
      locations: {
        domain: "Locations",
        editLocation: "Edit location",
        addSalesChannels: "Add sales channels",
        noLocationsFound: "No locations found",
        selectLocations: "Select locations that stock the item.",
        deleteLocationWarning: "You are about to delete the location {{name}}. This action cannot be undone.",
        removeSalesChannelsWarning_one: "You are about to remove {{count}} sales channel from the location.",
        removeSalesChannelsWarning_other: "You are about to remove {{count}} sales channels from the location.",
        toast: {
          create: "Location created sucessfully",
          update: "Location updated sucessfully",
          removeChannel: "Sales channel removed sucessfully"
        }
      },
      reservations: {
        domain: "Reservations",
        subtitle: "Manage the reserved quantity of inventory items.",
        deleteWarning: "You are about to delete a reservation. This action cannot be undone."
      },
      salesChannels: {
        domain: "Sales Channels",
        subtitle: "Manage the online and offline channels you sell products on.",
        createSalesChannel: "Create Sales Channel",
        createSalesChannelHint: "Create a new sales channel to sell your products on.",
        enabledHint: "Specify whether the sales channel is enabled.",
        removeProductsWarning_one: "You are about to remove {{count}} product from {{sales_channel}}.",
        removeProductsWarning_other: "You are about to remove {{count}} products from {{sales_channel}}.",
        addProducts: "Add Products",
        editSalesChannel: "Edit sales channel",
        productAlreadyAdded: "The product has already been added to the sales channel.",
        deleteSalesChannelWarning: "You are about to delete the sales channel {{name}}. This action cannot be undone.",
        toast: {
          create: "Sales channel created successfully",
          update: "Sales channel updated successfully",
          delete: "Sales channel deleted successfully"
        },
        products: {
          list: {
            noRecordsMessage: "There are no products in the sales channel."
          },
          add: {
            list: {
              noRecordsMessage: "Create a product first."
            }
          }
        }
      },
      apiKeyManagement: {
        domain: {
          publishable: "Publishable API Keys",
          secret: "Secret API Keys"
        },
        subtitle: {
          publishable: "Manage API keys used in the storefront to limit the scope of requests to specific sales channels.",
          secret: "Manage API keys used to authenticate admin users in admin applications."
        },
        status: {
          active: "Active",
          revoked: "Revoked"
        },
        type: {
          publishable: "Publishable",
          secret: "Secret"
        },
        create: {
          createPublishableHeader: "Create Publishable API Key",
          createPublishableHint: "Create a new publishable API key to limit the scope of requests to specific sales channels.",
          createSecretHeader: "Create Secret API Key",
          createSecretHint: "Create a new secret API key to access the Medusa API as an authenticated admin user.",
          secretKeyCreatedHeader: "Secret Key Created",
          secretKeyCreatedHint: "Your new secret key has been generated. Copy and securely store it now. This is the only time it will be displayed.",
          copySecretTokenSuccess: "Secret key was copied to clipboard.",
          copySecretTokenFailure: "Failed to copy secret key to clipboard.",
          successToast: "API key was successfully created."
        },
        edit: {
          header: "Edit API Key",
          description: "Edit the API key's title.",
          successToast: "API key {{title}} was successfully updated."
        },
        salesChannels: {
          title: "Add Sales Channels",
          description: "Add the sales channels that the API key should be limited to.",
          successToast_one: "{{count}} sales channel was successfully added to the API key.",
          successToast_other: "{{count}} sales channels were successfully added to the API key.",
          alreadyAddedTooltip: "The sales channel has already been added to the API key.",
          list: {
            noRecordsMessage: "There are no sales channels in the publishable API key's scope."
          }
        },
        delete: {
          warning: "You are about to delete the API key {{title}}. This action cannot be undone.",
          successToast: "API key {{title}} was successfully deleted."
        },
        revoke: {
          warning: "You are about to revoke the API key {{title}}. This action cannot be undone.",
          successToast: "API key {{title}} was successfully revoked."
        },
        addSalesChannels: {
          list: {
            noRecordsMessage: "Create a sales channel first."
          }
        },
        removeSalesChannel: {
          warning: "You are about to remove the sales channel {{name}} from the API key. This action cannot be undone.",
          warningBatch_one: "You are about to remove {{count}} sales channel from the API key. This action cannot be undone.",
          warningBatch_other: "You are about to remove {{count}} sales channels from the API key. This action cannot be undone.",
          successToast: "Sales channel was successfully removed from the API key.",
          successToastBatch_one: "{{count}} sales channel was successfully removed from the API key.",
          successToastBatch_other: "{{count}} sales channels were successfully removed from the API key."
        },
        actions: {
          revoke: "Revoke API key",
          copy: "Copy API key",
          copySuccessToast: "API key was copied to clipboard."
        },
        table: {
          lastUsedAtHeader: "Last Used At",
          createdAtHeader: "Revoked At"
        },
        fields: {
          lastUsedAtLabel: "Last used at",
          revokedByLabel: "Revoked by",
          revokedAtLabel: "Revoked at",
          createdByLabel: "Created by"
        }
      },
      returnReasons: {
        domain: "Return Reasons",
        subtitle: "Manage reasons for returned items.",
        calloutHint: "Manage the reasons to categorize returns.",
        editReason: "Edit Return Reason",
        create: {
          header: "Add Return Reason",
          subtitle: "Specify the most common reasons for returns.",
          hint: "Create a new return reason to categorize returns.",
          successToast: "Return reason {{label}} was successfully created."
        },
        edit: {
          header: "Edit Return Reason",
          subtitle: "Edit the value of the return reason.",
          successToast: "Return reason {{label}} was successfully updated."
        },
        delete: {
          confirmation: "You are about to delete the return reason {{label}}. This action cannot be undone.",
          successToast: "Return reason {{label}} was successfully deleted."
        },
        fields: {
          value: {
            label: "Value",
            placeholder: "wrong_size",
            tooltip: "The value should be a unique identifier for the return reason."
          },
          label: { label: "Label", placeholder: "Wrong size" },
          description: {
            label: "Description",
            placeholder: "Customer received the wrong size"
          }
        }
      },
      login: {
        forgotPassword: "Forgot password? - <0>Reset</0>",
        title: "Welcome to Medusa",
        hint: "Sign in to access the account area"
      },
      invite: {
        title: "Welcome to Medusa",
        hint: "Create your account below",
        backToLogin: "Back to login",
        createAccount: "Create account",
        alreadyHaveAccount: "Already have an account? - <0>Log in</0>",
        emailTooltip: "Your email cannot be changed. If you would like to use another email, a new invite must be sent.",
        invalidInvite: "The invite is invalid or has expired.",
        successTitle: "Your account has been registered",
        successHint: "Get started with Medusa Admin right away.",
        successAction: "Start Medusa Admin",
        invalidTokenTitle: "Your invite token is invalid",
        invalidTokenHint: "Try requesting a new invite link.",
        passwordMismatch: "Passwords do not match",
        toast: {
          accepted: "Invite successfully accepted"
        }
      },
      resetPassword: {
        title: "Reset password",
        hint: "Enter your email below, and we will send you instructions on how to reset your password.",
        email: "Email",
        sendResetInstructions: "Send reset instructions",
        backToLogin: "<0>Back to login</0>",
        newPasswordHint: "Choose a new password below.",
        invalidTokenTitle: "Your reset token is invalid",
        invalidTokenHint: "Try requesting a new reset link.",
        expiredTokenTitle: "Your reset token has expired",
        goToResetPassword: "Go to Reset Password",
        resetPassword: "Reset password",
        newPassword: "New password",
        repeatNewPassword: "Repeat new password",
        tokenExpiresIn: "Token expires in <0>{{time}}</0> minutes",
        successfulRequestTitle: "Successfully sent you an email",
        successfulRequest: "We've sent you an email which you can use to reset your password. Check your spam folder if you haven't received it after a few minutes.",
        successfulResetTitle: "Password reset successful",
        successfulReset: "Please login in on the login page.",
        passwordMismatch: "Passwords do no match",
        invalidLinkTitle: "Your reset link is invalid",
        invalidLinkHint: "Try resetting your password again."
      },
      workflowExecutions: {
        domain: "Workflows",
        subtitle: "View and keep track of workflow executions in your Medusa application.",
        transactionIdLabel: "Transaction ID",
        workflowIdLabel: "Workflow ID",
        progressLabel: "Progress",
        stepsCompletedLabel_one: "{{completed}} of {{count}} step",
        stepsCompletedLabel_other: "{{completed}} of {{count}} steps",
        list: {
          noRecordsMessage: "No workflows have been executed, yet."
        },
        history: {
          sectionTitle: "History",
          runningState: "Running...",
          awaitingState: "Awaiting",
          failedState: "Failed",
          skippedState: "Skipped",
          skippedFailureState: "Skipped (Failure)",
          definitionLabel: "Definition",
          outputLabel: "Output",
          compensateInputLabel: "Compensate input",
          revertedLabel: "Reverted",
          errorLabel: "Error"
        },
        state: {
          done: "Done",
          failed: "Failed",
          reverted: "Reverted",
          invoking: "Invoking",
          compensating: "Compensating",
          notStarted: "Not started"
        },
        transaction: {
          state: {
            waitingToCompensate: "Waiting to compensate"
          }
        },
        step: {
          state: {
            skipped: "Skipped",
            skippedFailure: "Skipped (Failure)",
            dormant: "Dormant",
            timeout: "Timeout"
          }
        }
      },
      productTypes: {
        domain: "Product Types",
        subtitle: "Organize your products into types.",
        create: {
          header: "Create Product Type",
          hint: "Create a new product type to categorize your products.",
          successToast: "Product type {{value}} was successfully created."
        },
        edit: {
          header: "Edit Product Type",
          successToast: "Product type {{value}} was successfully updated."
        },
        delete: {
          confirmation: "You are about to delete the product type {{value}}. This action cannot be undone.",
          successToast: "Product type {{value}} was successfully deleted."
        },
        fields: {
          value: "Value"
        }
      },
      productTags: {
        domain: "Product Tags",
        create: {
          header: "Create Product Tag",
          subtitle: "Create a new product tag to categorize your products.",
          successToast: "Product tag {{value}} was successfully created."
        },
        edit: {
          header: "Edit Product Tag",
          subtitle: "Edit the value of the product tag.",
          successToast: "Product tag {{value}} was successfully updated."
        },
        delete: {
          confirmation: "You are about to delete the product tag {{value}}. This action cannot be undone.",
          successToast: "Product tag {{value}} was successfully deleted."
        },
        fields: {
          value: "Value"
        }
      },
      notifications: {
        domain: "Notifications",
        emptyState: {
          title: "No notifications",
          description: "You don't have any notifications at the moment, but once you do they will live here."
        },
        accessibility: {
          description: "notifications about Medusa activities will be listed here."
        }
      },
      errors: {
        serverError: "Server error - Try again later.",
        invalidCredentials: "Wrong email or password"
      },
      statuses: {
        scheduled: "Scheduled",
        expired: "Expired",
        active: "Active",
        enabled: "Enabled",
        disabled: "Disabled"
      },
      labels: {
        productVariant: "Product Variant",
        prices: "Prices",
        available: "Available",
        inStock: "In stock",
        added: "Added",
        removed: "Removed"
      },
      fields: {
        amount: "Amount",
        refundAmount: "Refund amount",
        name: "Name",
        default: "Default",
        lastName: "Last Name",
        firstName: "First Name",
        title: "Title",
        customTitle: "Custom title",
        manageInventory: "Manage inventory",
        inventoryKit: "Has inventory kit",
        inventoryItems: "Inventory items",
        inventoryItem: "Inventory item",
        requiredQuantity: "Required quantity",
        description: "Description",
        email: "Email",
        password: "Password",
        repeatPassword: "Repeat Password",
        confirmPassword: "Confirm Password",
        newPassword: "New Password",
        repeatNewPassword: "Repeat New Password",
        categories: "Categories",
        shippingMethod: "Shipping method",
        configurations: "Configurations",
        conditions: "Conditions",
        category: "Category",
        collection: "Collection",
        discountable: "Discountable",
        handle: "Handle",
        subtitle: "Subtitle",
        item: "Item",
        qty: "qty.",
        limit: "Limit",
        tags: "Tags",
        type: "Type",
        reason: "Reason",
        none: "none",
        all: "all",
        search: "Search",
        percentage: "Percentage",
        sales_channels: "Sales Channels",
        customer_groups: "Customer Groups",
        product_tags: "Product Tags",
        product_types: "Product Types",
        product_collections: "Product Collections",
        status: "Status",
        code: "Code",
        value: "Value",
        disabled: "Disabled",
        dynamic: "Dynamic",
        normal: "Normal",
        years: "Years",
        months: "Months",
        days: "Days",
        hours: "Hours",
        minutes: "Minutes",
        totalRedemptions: "Total Redemptions",
        countries: "Countries",
        paymentProviders: "Payment Providers",
        refundReason: "Refund Reason",
        fulfillmentProviders: "Fulfillment Providers",
        fulfillmentProvider: "Fulfillment Provider",
        providers: "Providers",
        availability: "Availability",
        inventory: "Inventory",
        optional: "Optional",
        note: "Note",
        automaticTaxes: "Automatic Taxes",
        taxInclusivePricing: "Tax inclusive pricing",
        currency: "Currency",
        address: "Address",
        address2: "Apartment, suite, etc.",
        city: "City",
        postalCode: "Postal Code",
        country: "Country",
        state: "State",
        province: "Province",
        company: "Company",
        phone: "Phone",
        metadata: "Metadata",
        selectCountry: "Select country",
        products: "Products",
        variants: "Variants",
        orders: "Orders",
        account: "Account",
        total: "Order Total",
        paidTotal: "Total captured",
        totalExclTax: "Total excl. tax",
        subtotal: "Subtotal",
        shipping: "Shipping",
        outboundShipping: "Outbound Shipping",
        returnShipping: "Return Shipping",
        tax: "Tax",
        created: "Created",
        key: "Key",
        customer: "Customer",
        date: "Date",
        order: "Order",
        fulfillment: "Fulfillment",
        provider: "Provider",
        payment: "Payment",
        items: "Items",
        salesChannel: "Sales Channel",
        region: "Region",
        discount: "Discount",
        role: "Role",
        sent: "Sent",
        salesChannels: "Sales Channels",
        product: "Product",
        createdAt: "Created",
        updatedAt: "Updated",
        revokedAt: "Revoked at",
        true: "True",
        false: "False",
        giftCard: "Gift Card",
        tag: "Tag",
        dateIssued: "Date issued",
        issuedDate: "Issued date",
        expiryDate: "Expiry date",
        price: "Price",
        priceTemplate: "Price {{regionOrCurrency}}",
        height: "Height",
        width: "Width",
        length: "Length",
        weight: "Weight",
        midCode: "MID code",
        hsCode: "HS code",
        ean: "EAN",
        upc: "UPC",
        inventoryQuantity: "Inventory quantity",
        barcode: "Barcode",
        countryOfOrigin: "Country of origin",
        material: "Material",
        thumbnail: "Thumbnail",
        sku: "SKU",
        managedInventory: "Managed inventory",
        allowBackorder: "Allow backorder",
        inStock: "In stock",
        location: "Location",
        quantity: "Quantity",
        variant: "Variant",
        id: "ID",
        parent: "Parent",
        minSubtotal: "Min. Subtotal",
        maxSubtotal: "Max. Subtotal",
        shippingProfile: "Shipping Profile",
        summary: "Summary",
        details: "Details",
        label: "Label",
        rate: "Rate",
        requiresShipping: "Requires shipping",
        unitPrice: "Unit price",
        startDate: "Start date",
        endDate: "End date",
        draft: "Draft",
        values: "Values"
      },
      dateTime: {
        years_one: "Year",
        years_other: "Years",
        months_one: "Month",
        months_other: "Months",
        weeks_one: "Week",
        weeks_other: "Weeks",
        days_one: "Day",
        days_other: "Days",
        hours_one: "Hour",
        hours_other: "Hours",
        minutes_one: "Minute",
        minutes_other: "Minutes",
        seconds_one: "Second",
        seconds_other: "Seconds"
      }
    };
  }
});

// src/i18n/translations/sr.json
var sr_default;
var init_sr = __esm({
  "src/i18n/translations/sr.json"() {
    sr_default = {
      $schema: "./$schema.json",
      general: {
        ascending: "Rastu\u0107e",
        descending: "Opadaju\u0107e",
        add: "Dodaj",
        start: "Po\u010Detak",
        end: "Kraj",
        open: "Otvoren",
        close: "Zatvori",
        apply: "Primijeni",
        range: "Opseg",
        search: "Pretraga",
        of: "od",
        results: "rezultati",
        pages: "stranice",
        next: "Slede\u0107i",
        prev: "Prev",
        is: "je",
        timeline: "Vremenska linija",
        success: "Uspeh",
        warning: "Upozorenje",
        tip: "Tip",
        error: "Gre\u0161ka",
        select: "Izaberi",
        selected: "Odabran",
        enabled: "Omogu\u0107eno",
        disabled: "Onemogu\u0107en",
        expired: "Istekao",
        active: "Aktivan",
        revoked: "Oduzet",
        new: "Novi",
        modified: "Izmenjeno",
        added: "Dodato",
        removed: "Uklonjen",
        admin: "Admin",
        store: "Prodavnica",
        details: "Detalji",
        items_one: "{{count}} stavka",
        items_other: "{{count}} stavki",
        countSelected: "{{count}} odabranih",
        countOfTotalSelected: "{{broj}} od {{ukupno}} odabranih",
        plusCount: "+ {{broj}}",
        plusCountMore: "+ {{count}} vi\u0161e",
        areYouSure: "Da li si siguran?",
        noRecordsFound: "Nema zapisa prona\u0111enih",
        typeToConfirm: "Molimo vas da otkucate {val} da potvrdite:",
        noResultsTitle: "Nema rezultata",
        noResultsMessage: "Poku\u0161aj da promijeni\u0161 filtre ili upit za pretragu",
        noSearchResults: "Nema rezultata pretrage",
        noSearchResultsFor: "Nema rezultata pretrage za <0>'{{query}}'</0>",
        noRecordsTitle: "Nema zapisa",
        noRecordsMessage: "Nema zapisa za prikazivanje",
        unsavedChangesTitle: "Da li ste sigurni da \u017Eelite da napustite ovaj obrazac?",
        unsavedChangesDescription: "Imate nespremljene promjene koje \u0107e biti izgubljene ako napustite ovaj obrazac.",
        includesTaxTooltip: "Cijene u ovoj koloni su sa uklju\u010Denim porezom.",
        excludesTaxTooltip: "Cijene u ovoj koloni su bez poreza.",
        noMoreData: "Nema vi\u0161e podataka"
      },
      json: {
        header: "JSON - JSON",
        numberOfKeys_one: "{{count}} klju\u010D",
        numberOfKeys_other: "{{count}} klju\u010Deva",
        drawer: {
          header_one: "JSON <0>\xB7 {{count}} klju\u010D</0>",
          header_other: "JSON <0>\xB7 {{count}} klju\u010Deva</0>",
          description: "Pogledaj JSON podatke za ovaj objekat."
        }
      },
      metadata: {
        header: "Metapodaci",
        numberOfKeys_one: "{{broj}} klju\u010D",
        numberOfKeys_other: "{{count}} klju\u010Deva",
        edit: {
          header: "Izmijeni Metapodatke",
          description: "Izmijeni metapodatke za ovaj objekat.",
          successToast: "Metadata je uspje\u0161no a\u017Eurirana.",
          actions: {
            insertRowAbove: "Umetni red iznad",
            insertRowBelow: "Unesi red ispod",
            deleteRow: "Obri\u0161i red"
          },
          labels: {
            key: "Klju\u010D",
            value: "Vrijednost"
          },
          complexRow: {
            label: "Neki redovi su onemogu\u0107eni",
            description: "Ovaj objekat sadr\u017Ei ne-primitivne metapodatke, kao \u0161to su nizovi ili objekti, koji se ne mogu ure\u0111ivati ovde. Da biste uredili onemogu\u0107ene redove, koristite API direktno.",
            tooltip: "Ova vrsta je onemogu\u0107ena jer sadr\u017Ei neprimitivne podatke."
          }
        }
      },
      validation: {
        mustBeInt: "Vrijednost mora biti cijeli broj.",
        mustBePositive: "Vrijednost mora biti pozitivan broj."
      },
      actions: {
        save: "Sa\u010Duvaj",
        saveAsDraft: "Sa\u010Duvaj kao nacrt",
        copy: "Kopiraj",
        copied: "Kopirano",
        duplicate: "Duplikat",
        publish: "Objavi",
        create: "Kreiraj",
        delete: "Obri\u0161i",
        remove: "Ukloni",
        revoke: "Poni\u0161ti",
        cancel: "Otka\u017Ei",
        forceConfirm: "Sila potvrdi",
        continueEdit: "Nastavi ure\u0111ivanje",
        enable: "Omogu\u0107i",
        disable: "Onemogu\u0107i",
        undo: "Poni\u0161ti",
        complete: "Potpun",
        viewDetails: "Pogledaj detalje",
        back: "Nazad",
        close: "Zatvori",
        showMore: "Prika\u017Ei vi\u0161e",
        continue: "Nastavi",
        continueWithEmail: "Nastavi sa E-mailom",
        idCopiedToClipboard: "ID kopiran u me\u0111uspremnik",
        addReason: "Dodaj Razlog",
        addNote: "Dodaj Napomenu",
        reset: "Reset",
        confirm: "Potvrdi",
        edit: "Izmijeni",
        addItems: "Dodaj stavke",
        download: "Preuzmi",
        clear: "Jasan",
        clearAll: "Jasno sve",
        apply: "Primijeni",
        add: "Dodaj",
        select: "Izaberi",
        browse: "Pretra\u017Ei",
        logout: "Odjavi se",
        hide: "Sakrij",
        export: "Izvoz",
        import: "Uvoz"
      },
      operators: {
        in: "U"
      },
      app: {
        search: {
          label: "Pretraga",
          title: "Pretraga",
          description: "Pretra\u017Ei cijelu prodavnicu, uklju\u010Duju\u0107i narud\u017Ebe, proizvode, kupce i jo\u0161 mnogo toga.",
          allAreas: "Sve oblasti",
          navigation: "Navigacija",
          openResult: "Otvoren rezultat",
          showMore: "Prika\u017Ei vi\u0161e",
          placeholder: "Sko\u010Di na ili prona\u0111i bilo \u0161ta...",
          noResultsTitle: "Nema rezultata prona\u0111enih",
          noResultsMessage: "Nismo mogli prona\u0107i ni\u0161ta \u0161to odgovara va\u0161oj pretrazi.",
          emptySearchTitle: "Tipi za pretragu",
          emptySearchMessage: "Unesite klju\u010Dnu rije\u010D ili frazu za istra\u017Eivanje.",
          loadMore: "U\u010Ditaj {{count}} vi\u0161e",
          groups: {
            all: "Sve oblasti",
            customer: "Kupci",
            customerGroup: "Grupacije kupaca",
            product: "Proizvodi",
            productVariant: "Proizvodne varijante",
            inventory: "Inventar",
            reservation: "Rezervacije",
            category: "Kategorije",
            collection: "Kolekcije",
            order: "Naru\u010Divanja",
            promotion: "Promocije",
            campaign: "Kampanje",
            priceList: "Cjenovnici",
            user: "Korisnici",
            region: "Regije",
            taxRegion: "Poreske regije",
            returnReason: "Razlozi za povratak",
            salesChannel: "Prodajni kanali",
            productType: "Tipovi proizvoda",
            productTag: "Proizvodni Oznaci",
            location: "Lokacije",
            shippingProfile: "\u0160pediterski profili",
            publishableApiKey: "Objavljivi API klju\u010Devi",
            secretApiKey: "Tajni API Klju\u010Devi",
            command: "Komande",
            navigation: "Navigacija"
          }
        },
        keyboardShortcuts: {
          pageShortcut: "Sko\u010Di na",
          settingShortcut: "Pode\u0161avanja",
          commandShortcut: "Komande",
          then: "onda",
          navigation: {
            goToOrders: "Naru\u010Divanja",
            goToProducts: "Proizvodi",
            goToCollections: "Kolekcije",
            goToCategories: "Kategorije",
            goToCustomers: "Kupci",
            goToCustomerGroups: "Grupacije kupaca",
            goToInventory: "Inventar",
            goToReservations: "Rezervacije",
            goToPriceLists: "Cjenovnici",
            goToPromotions: "Promocije",
            goToCampaigns: "Kampanje"
          },
          settings: {
            goToSettings: "Pode\u0161avanja",
            goToStore: "Prodavnica",
            goToUsers: "Korisnici",
            goToRegions: "Regije",
            goToTaxRegions: "Poreske regije",
            goToSalesChannels: "Prodajni kanali",
            goToProductTypes: "Tipovi proizvoda",
            goToLocations: "Lokacije",
            goToPublishableApiKeys: "Objavljivi API klju\u010Devi",
            goToSecretApiKeys: "Tajni API klju\u010Devi",
            goToWorkflows: "Tokovi rada",
            goToProfile: "Profil",
            goToReturnReasons: "Razlozi za povratak"
          }
        },
        menus: {
          user: {
            documentation: "Dokumentacija",
            changelog: "Zapis promjena",
            shortcuts: "Pre\u010Dice",
            profileSettings: "Pode\u0161avanja profila",
            theme: {
              label: "Tema",
              dark: "Tamni",
              light: "Svjetlost",
              system: "Sistem"
            }
          },
          store: {
            label: "Prodavnica",
            storeSettings: "Pode\u0161avanja prodavnice"
          },
          actions: {
            logout: "Odjavi se"
          }
        },
        nav: {
          accessibility: {
            title: "Navigacija",
            description: "Navigacioni meni za kontrolnu tablu."
          },
          common: {
            extensions: "Produ\u017Eeci"
          },
          main: {
            store: "Prodavnica",
            storeSettings: "Pode\u0161avanja prodavnice"
          },
          settings: {
            header: "Pode\u0161avanja",
            general: "General - general",
            developer: "Razvija\u010D",
            myAccount: "Moj Nalog"
          }
        }
      },
      dataGrid: {
        columns: {
          view: "Pogled",
          resetToDefault: "Resetuj na podrazumevano",
          disabled: "Promjena koje su kolone vidljive je onemogu\u0107ena."
        },
        shortcuts: {
          label: "Pre\u010Dice",
          commands: {
            undo: "Poni\u0161ti",
            redo: "Redo",
            copy: "Kopiraj",
            paste: "Pasta",
            edit: "Izmijeni",
            delete: "Izbri\u0161i",
            clear: "Jasan",
            moveUp: "Pomjeri se nagore",
            moveDown: "Pomjeri se nani\u017Ee",
            moveLeft: "Pomjeri lijevo",
            moveRight: "Pomjeri desno",
            moveTop: "Premjesti na vrh",
            moveBottom: "Premjesti na dno",
            selectDown: "Izaberi dolje",
            selectUp: "Izaberi gore",
            selectColumnDown: "Izaberi kolonu prema dolje",
            selectColumnUp: "Izaberi kolonu gore",
            focusToolbar: "Fokus alatna traka",
            focusCancel: "Fokus otka\u017Ei"
          }
        },
        errors: {
          fixError: "Ispravi gre\u0161ku",
          count_one: "{{count}} gre\u0161ka",
          count_other: "{{count}} gre\u0161aka"
        }
      },
      filters: {
        date: {
          today: "Danas",
          lastSevenDays: "Poslednjih 7 dana",
          lastThirtyDays: "Poslednjih 30 dana",
          lastNinetyDays: "Poslednjih 90 dana",
          lastTwelveMonths: "Poslednjih 12 meseci",
          custom: "Prilago\u0111eno",
          from: "Od",
          to: "To"
        },
        compare: {
          lessThan: "Manje od",
          greaterThan: "Ve\u0107i od",
          exact: "Ta\u010Dno",
          range: "Raspon",
          lessThanLabel: "manje od {{value}}",
          greaterThanLabel: "ve\u0107i od {{value}}",
          andLabel: "i"
        },
        addFilter: "Dodaj filter"
      },
      errorBoundary: {
        badRequestTitle: "400 - Lo\u0161 zahtev",
        badRequestMessage: "Zahtev nije mogao biti shva\u0107en od strane servera zbog neispravne sintakse.",
        notFoundTitle: "404 - Na ovoj adresi nema stranice",
        notFoundMessage: "Proverite URL i poku\u0161ajte ponovo, ili koristite pretra\u017Eiva\u010D da prona\u0111ete ono \u0161to tra\u017Eite.",
        internalServerErrorTitle: "500 - Interna gre\u0161ka servera",
        internalServerErrorMessage: "Do\u0161lo je do neo\u010Dekivane gre\u0161ke na serveru. Molimo poku\u0161ajte ponovo kasnije.",
        defaultTitle: "Dogodila se gre\u0161ka",
        defaultMessage: "Do\u0161lo je do neo\u010Dekivane gre\u0161ke prilikom prikazivanja ove stranice.",
        noMatchMessage: "Stranica koju tra\u017Eite ne postoji.",
        backToDashboard: "Nazad na kontrolnu tablu"
      },
      addresses: {
        shippingAddress: {
          header: "Adresa za isporuku",
          editHeader: "Izmeni adresu za dostavu",
          editLabel: "Adresa za isporuku",
          label: "Adresa za dostavu"
        },
        billingAddress: {
          header: "Adresa za naplatu",
          editHeader: "Izmeni adresu za naplatu",
          editLabel: "Adresa za naplatu",
          label: "Adresa za fakturiranje",
          sameAsShipping: "Isto kao adresa za dostavu"
        },
        contactHeading: "Kontakt",
        locationHeading: "Lokacija"
      },
      email: {
        editHeader: "Izmeni Email",
        editLabel: "Email",
        label: "Email"
      },
      transferOwnership: {
        header: "Prenos Vlasni\u0161tva",
        label: "Prenos vlasni\u0161tva",
        details: {
          order: "Detalji narud\u017Ebe",
          draft: "Nacrt detalja"
        },
        currentOwner: {
          label: "Trenutni vlasnik",
          hint: "Trenutni vlasnik narud\u017Ebe."
        },
        newOwner: {
          label: "Novi vlasnik",
          hint: "Novi vlasnik da prenese narud\u017Ebinu na."
        },
        validation: {
          mustBeDifferent: "Novi vlasnik mora biti druga\u010Diji od trenutnog vlasnika.",
          required: "Novi vlasnik je potreban."
        }
      },
      sales_channels: {
        availableIn: "Dostupno u <0>{{x}}</0> od <1>{{y}}</1> prodajnih kanala"
      },
      products: {
        domain: "Proizvodi",
        list: {
          noRecordsMessage: "Kreiraj svoj prvi proizvod da po\u010Dne\u0161 da prodaje\u0161."
        },
        create: {
          header: "General - general",
          tabs: {
            details: "Detalji",
            organize: "Organizovati",
            variants: "Varijante",
            inventory: "Inventarni kompleti"
          },
          errors: {
            variants: "Molimo vas da odaberete barem jednu varijantu.",
            options: "Molim te da kreira\u0161 barem jednu opciju.",
            uniqueSku: "SKU mora biti jedinstven."
          },
          inventory: {
            heading: "Inventarni kompleti",
            label: "Dodaj inventarne stavke u inventarni komplet varijante.",
            itemPlaceholder: "Izaberi stavku inventara",
            quantityPlaceholder: "Koliko je od ovih potrebno za komplet?"
          },
          variants: {
            header: "Varijante",
            subHeadingTitle: "Da, ovo je proizvod sa varijantama",
            subHeadingDescription: "Kada nije ozna\u010Deno, mi \u0107emo kreirati podrazumijevanu varijantu za vas",
            optionTitle: {
              placeholder: "Veli\u010Dina"
            },
            optionValues: {
              placeholder: "Mali, Srednji, Veliki"
            },
            productVariants: {
              label: "Proizvodne varijante",
              hint: "Ova rang lista \u0107e uticati na redosled varijanti u tvojoj prodavnici.",
              alert: "Dodaj opcije za kreiranje varijanti.",
              tip: "Varijante koje nisu proverene ne\u0107e biti kreirane. Uvek mo\u017Eete kreirati i ure\u0111ivati varijante kasnije, ali ova lista odgovara varijacijama u va\u0161im opcijama proizvoda."
            },
            productOptions: {
              label: "Opcije proizvoda",
              hint: "Defini\u0161i opcije za proizvod, npr. boja, veli\u010Dina, itd."
            }
          },
          successToast: "Proizvod {{title}} je uspje\u0161no kreiran."
        },
        export: {
          header: "Izvoz Lista Proizvoda",
          description: "Izvezi spisak proizvoda u CSV datoteku.",
          success: {
            title: "Mi obra\u0111ujemo va\u0161 izvoz",
            description: "Izvoz podataka mo\u017Ee potrajati nekoliko minuta. Obavijesti\u0107emo te kada zavr\u0161imo."
          },
          filters: {
            title: "Filtar",
            description: "Primijeni filtre u pregledu tabele da prilagodi\u0161 ovaj prikaz"
          },
          columns: {
            title: "Kolone",
            description: "Prilagodi izvezene podatke da zadovolje specifi\u010Dne potrebe"
          }
        },
        import: {
          header: "Uvezi Listu Proizvoda",
          uploadLabel: "Uvezi proizvode",
          uploadHint: "Prevuci i ispusti CSV datoteku ili klikni da otpremi\u0161",
          description: "Uvezi proizvode pru\u017Eanjem CSV datoteke u unaprijed definisanom formatu",
          template: {
            title: "Nesiguran u vezi sa tim kako da organizuje\u0161 svoju listu?",
            description: "Preuzmite \u0161ablon ispod da biste osigurali da pratite ispravan format."
          },
          upload: {
            title: "Otpremi CSV datoteku",
            description: "Kroz uvoze mo\u017Eete dodati ili a\u017Eurirati proizvode. Da biste a\u017Eurirali postoje\u0107e proizvode, morate koristiti postoje\u0107i rukohvat i ID, da biste a\u017Eurirali postoje\u0107e varijante, morate koristiti postoje\u0107i ID. Bi\u0107ete upitani za potvrdu pre nego \u0161to uvezemo proizvode.",
            preprocessing: "Predobrada...",
            productsToCreate: "Proizvodi \u0107e biti kreirani",
            productsToUpdate: "Proizvodi \u0107e biti a\u017Eurirani"
          },
          success: {
            title: "Mi obra\u0111ujemo va\u0161 uvoz",
            description: "U\u010Ditavanje podataka mo\u017Ee potrajati. Obavijesti\u0107emo vas kada zavr\u0161imo."
          }
        },
        deleteWarning: "Spremate se da obri\u0161ete proizvod {{title}}. Ova radnja se ne mo\u017Ee poni\u0161titi.",
        variants: "Varijante",
        attributes: "Atributi",
        editProduct: "Izmijeni Proizvod",
        editAttributes: "Izmijeni Atributi",
        editOptions: "Izmijeni Opcije",
        editPrices: "Uredi cijene",
        media: {
          label: "Medija",
          editHint: "Dodaj medije na proizvod da ga prika\u017Ee\u0161 u svojoj prodavnici.",
          makeThumbnail: "Napraviti sli\u010Dicu",
          uploadImagesLabel: "Otpremi slike",
          uploadImagesHint: "Prevuci i ispusti slike ovde ili klikni da otpremi\u0161.",
          invalidFileType: "'{{name}}' nije podr\u017Ean tip datoteke. Podr\u017Eani tipovi datoteka su: {{types}}.",
          failedToUpload: "Nije uspjelo da se otpremi dodati medij. Molimo poku\u0161ajte ponovo.",
          deleteWarning_one: "Spremate se da obri\u0161ete {{count}} sliku. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          deleteWarning_other: "Spremate se da obri\u0161ete {{count}} slike. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          deleteWarningWithThumbnail_one: "Spremate se da obri\u0161ete {{count}} sliku uklju\u010Duju\u0107i sli\u010Dicu. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          deleteWarningWithThumbnail_other: "Spremate se da obri\u0161ete {{count}} slika uklju\u010Duju\u0107i sli\u010Dicu. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          thumbnailTooltip: "Sli\u010Dica",
          galleryLabel: "Galerija",
          downloadImageLabel: "Preuzmi trenutnu sliku",
          deleteImageLabel: "Obri\u0161i trenutnu sliku",
          emptyState: {
            header: "Nema medija jo\u0161",
            description: "Dodaj medije proizvodu da ga prika\u017Ee\u0161 u svojoj prodavnici.",
            action: "Dodaj medije"
          }
        },
        discountableHint: "Kada nije ozna\u010Deno, popusti se ne\u0107e primenjivati na ovaj proizvod.",
        noSalesChannels: "Nije dostupno u nijednom prodajnom kanalu",
        variantCount_one: "{{broj}} varijanta",
        variantCount_other: "{{count}} varijante",
        deleteVariantWarning: "Spremni ste da obri\u0161ete varijantu {{title}}. Ova akcija se ne mo\u017Ee poni\u0161titi.",
        productStatus: {
          draft: "Nacrt",
          published: "Objavljen",
          proposed: "Predlo\u017Een",
          rejected: "Odbijen"
        },
        fields: {
          title: {
            label: "Naslov",
            hint: "Daj svom proizvodu kratak i jasan naslov.<0/>Preporu\u010Dena du\u017Eina za pretra\u017Eiva\u010De je 50-60 karaktera."
          },
          subtitle: {
            label: "Podnaslov"
          },
          handle: {
            label: "Ru\u010Dka",
            tooltip: "Ru\u010Dka se koristi za referencu na proizvod u tvojoj prodavnici. Ako nije navedeno, ru\u010Dka \u0107e biti generisana iz naslova proizvoda."
          },
          description: {
            label: "Opis",
            hint: "Daj svom proizvodu kratak i jasan opis.<0/>Preporu\u010Dena du\u017Eina za pretra\u017Eiva\u010De je 120-160 karaktera."
          },
          discountable: {
            label: "Popustljiv",
            hint: "Kada nije ozna\u010Deno, popusti se ne\u0107e primijeniti na ovaj proizvod"
          },
          type: {
            label: "Tip"
          },
          collection: {
            label: "Kolekcija"
          },
          categories: {
            label: "Kategorije"
          },
          tags: {
            label: "Oznake"
          },
          sales_channels: {
            label: "Prodajni kanali",
            hint: "Ovaj proizvod \u0107e biti dostupan samo u podrazumijevanom prodajnom kanalu ako ostane netaknut."
          },
          countryOrigin: {
            label: "Zemlja porekla"
          },
          material: {
            label: "Materijal"
          },
          width: {
            label: "\u0160irina"
          },
          length: {
            label: "Du\u017Eina"
          },
          height: {
            label: "Visina"
          },
          weight: {
            label: "Te\u017Eina"
          },
          options: {
            label: "Opcije proizvoda",
            hint: "Opcije se koriste za definisanje boje, veli\u010Dine, itd. proizvoda.",
            add: "Dodaj opciju",
            optionTitle: "Naslov opcije",
            optionTitlePlaceholder: "Boja",
            variations: "Varijacije (razdvojene zarezima)",
            variantionsPlaceholder: "Crvena, Plava, Zelena"
          },
          variants: {
            label: "Proizvodne varijante",
            hint: "Varijante koje nisu proverene ne\u0107e biti kreirane, Ova rang lista \u0107e uticati na to kako \u0107e varijante biti rangirane u va\u0161em frontend-u."
          },
          mid_code: {
            label: "Srednji kod"
          },
          hs_code: {
            label: "HS kod"
          }
        },
        variant: {
          edit: {
            header: "Izmijeni Varijantu",
            success: "Proizvodna varijanta je uspje\u0161no ure\u0111ena"
          },
          create: {
            header: "Detalji varijante"
          },
          deleteWarning: "Da li si siguran da \u017Eeli\u0161 da obri\u0161e\u0161 ovu varijantu?",
          pricesPagination: "1 - {{trenutna}} od {{ukupno}} cijena",
          tableItemAvailable: "{{availableCount}} dostupno",
          tableItem_one: "{{availableCount}} dostupno na {{locationCount}} lokacija",
          tableItem_other: "{{availableCount}} dostupno na {{locationCount}} lokacija",
          inventory: {
            notManaged: "Nije upravljano",
            manageItems: "Upravljaj inventarskim stavkama",
            notManagedDesc: "Inventar se ne upravlja za ovu varijantu. Uklju\u010Dite 'Upravljanje Inventarom' da biste pratili inventar varijante.",
            manageKit: "Upravljati inventarskim kompletom",
            navigateToItem: "Idi na stavku inventara",
            actions: {
              inventoryItems: "Idi na stavku inventara",
              inventoryKit: "Prika\u017Ei stavke inventara"
            },
            inventoryKit: "Inventar Kit",
            inventoryKitHint: "Da li ova varijanta sastoji od nekoliko inventarnih stavki?",
            validation: {
              itemId: "Molimo vas da odaberete stavku inventara.",
              quantity: "Koli\u010Dina je obavezna. Molimo unesite pozitivni broj."
            },
            header: "Zalihe & Inventar",
            editItemDetails: "Izmijeni detalje stavke",
            manageInventoryLabel: "Upravljati inventarom",
            manageInventoryHint: "Kada je omogu\u0107eno, promijenit \u0107emo koli\u010Dinu u inventaru za vas kada se kreiraju narud\u017Ebe i povrati.",
            allowBackordersLabel: "Dozvoli povratne narud\u017Ebe",
            allowBackordersHint: "Kada je omogu\u0107eno, kupci mogu kupiti varijantu \u010Dak i ako nema dostupne koli\u010Dine.",
            toast: {
              levelsBatch: "Nivoi inventara a\u017Eurirani.",
              update: "Stavka inventara uspje\u0161no a\u017Eurirana.",
              updateLevel: "Nivo inventara je uspje\u0161no a\u017Euriran.",
              itemsManageSuccess: "Stavke inventara uspje\u0161no a\u017Eurirane."
            }
          }
        },
        options: {
          header: "Opcije",
          edit: {
            header: "Izmjena Opcije",
            successToast: "Opcija {{title}} je uspje\u0161no a\u017Eurirana."
          },
          create: {
            header: "Kreiraj Opciju",
            successToast: "Opcija {{title}} je uspje\u0161no kreirana."
          },
          deleteWarning: "Spremate se da obri\u0161ete opciju proizvoda: {{title}}. Ova radnja se ne mo\u017Ee poni\u0161titi."
        },
        organization: {
          header: "Organizovati",
          edit: {
            header: "Uredi Organizaciju",
            toasts: {
              success: "Uspe\u0161no a\u017Eurirana organizacija {{title}}."
            }
          }
        },
        toasts: {
          delete: {
            success: {
              header: "Proizvod obrisan",
              description: "{{title}} je uspje\u0161no obrisan."
            },
            error: {
              header: "Nije uspjelo brisanje proizvoda"
            }
          }
        }
      },
      collections: {
        domain: "Kolekcije",
        subtitle: "Organizuj proizvode u kolekcije.",
        createCollection: "Kreiraj Kolekciju",
        createCollectionHint: "Kreiraj novu kolekciju da organizuje\u0161 svoje proizvode.",
        createSuccess: "Kolekcija je uspje\u0161no kreirana.",
        editCollection: "Uredi Kolekciju",
        handleTooltip: "Ru\u010Dka se koristi za referenciranje kolekcije u tvojoj prodavnici. Ako nije navedeno, ru\u010Dka \u0107e biti generisana iz naslova kolekcije.",
        deleteWarning: "Spremate se da obri\u0161ete kolekciju {{title}}. Ova radnja se ne mo\u017Ee poni\u0161titi.",
        removeSingleProductWarning: "Vi ste na putu da uklonite proizvod {{title}} iz kolekcije. Ova akcija se ne mo\u017Ee poni\u0161titi.",
        removeProductsWarning_one: "Ukloni\u0107e\u0161 {{count}} proizvod iz kolekcije. Ova radnja se ne mo\u017Ee poni\u0161titi.",
        removeProductsWarning_other: "Ukloni\u0107e\u0161 {{count}} proizvoda iz kolekcije. Ova radnja se ne mo\u017Ee poni\u0161titi.",
        products: {
          list: {
            noRecordsMessage: "Nema proizvoda u kolekciji."
          },
          add: {
            successToast_one: "Proizvod je uspje\u0161no dodat u kolekciju.",
            successToast_other: "Proizvodi su uspje\u0161no dodati u kolekciju."
          },
          remove: {
            successToast_one: "Proizvod je uspje\u0161no uklonjen iz kolekcije.",
            successToast_other: "Proizvodi su uspje\u0161no uklonjeni iz kolekcije."
          }
        }
      },
      categories: {
        domain: "Kategorije",
        subtitle: "Organizuj proizvode u kategorije, i upravljaj rangiranjem i hijerarhijom tih kategorija.",
        create: {
          header: "Kreiraj Kategoriju",
          hint: "Kreiraj novu kategoriju da organizuje\u0161 svoje proizvode.",
          tabs: {
            details: "Detalji",
            organize: "Organizovati Rangiranje"
          },
          successToast: "Kategorija {{name}} je uspje\u0161no kreirana."
        },
        edit: {
          header: "Izmijeni Kategoriju",
          description: "Izmijeni kategoriju da a\u017Eurira njene detalje.",
          successToast: "Kategorija je uspje\u0161no a\u017Eurirana."
        },
        delete: {
          confirmation: "Spremni ste da obri\u0161ete kategoriju {{name}}. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          successToast: "Kategorija {{name}} je uspje\u0161no obrisana."
        },
        products: {
          add: {
            disabledTooltip: "Proizvod je ve\u0107 u ovoj kategoriji.",
            successToast_one: "Dodato {{count}} proizvoda u kategoriju.",
            successToast_other: "Dodato {{count}} proizvoda u kategoriju."
          },
          remove: {
            confirmation_one: "Spremate se da uklonite {{count}} proizvod iz kategorije. Ova akcija se ne mo\u017Ee poni\u0161titi.",
            confirmation_other: "Spremate se da uklonite {{count}} proizvoda iz kategorije. Ova radnja se ne mo\u017Ee poni\u0161titi.",
            successToast_one: "Uklonjen {{count}} proizvod iz kategorije.",
            successToast_other: "Uklonjeno {{count}} proizvoda iz kategorije."
          },
          list: {
            noRecordsMessage: "Nema proizvoda u kategoriji."
          }
        },
        organize: {
          header: "Organizovati",
          action: "Uredi rangiranje"
        },
        fields: {
          visibility: {
            label: "Vidljivost",
            internal: "Interni",
            public: "Javni"
          },
          status: {
            label: "Status",
            active: "Aktivan",
            inactive: "Neaktivan"
          },
          path: {
            label: "Put",
            tooltip: "Prika\u017Ei puni put kategorije."
          },
          children: {
            label: "Djeca"
          },
          new: {
            label: "Novi"
          }
        }
      },
      inventory: {
        domain: "Inventar",
        subtitle: "Upravljaj svojim inventarskim stavkama",
        reserved: "Rezervisan",
        available: "Dostupan",
        locationLevels: "Lokacije",
        associatedVariants: "Povezane varijante",
        manageLocations: "Upravljaj lokacijama",
        deleteWarning: "Spremate se da obri\u0161ete stavku u inventaru. Ova radnja se ne mo\u017Ee poni\u0161titi.",
        editItemDetails: "Izmijeni detalje stavke",
        create: {
          title: "Kreiraj stavku inventara",
          details: "Detalji",
          availability: "Dostupnost",
          locations: "Lokacije",
          attributes: "Atributi",
          requiresShipping: "Zahteva isporuku",
          requiresShippingHint: "Da li stavka u inventaru zahtijeva isporuku?",
          successToast: "Stavka inventara je uspje\u0161no kreirana."
        },
        reservation: {
          header: "Rezervacija {{itemName}}",
          editItemDetails: "Izmijeni rezervaciju",
          lineItemId: "Stavka ID",
          orderID: "ID narud\u017Ebine",
          description: "Opis",
          location: "Lokacija",
          inStockAtLocation: "Na skladi\u0161tu na ovoj lokaciji",
          availableAtLocation: "Dostupno na ovoj lokaciji",
          reservedAtLocation: "Rezervisano na ovoj lokaciji",
          reservedAmount: "Rezervna koli\u010Dina",
          create: "Kreiraj rezervaciju",
          itemToReserve: "Stavka za rezervaciju",
          quantityPlaceholder: "Koliko \u017Eeli\u0161 da rezervi\u0161e\u0161?",
          descriptionPlaceholder: "Kakav tip rezervacije je ovo?",
          successToast: "Rezervacija je uspje\u0161no kreirana.",
          updateSuccessToast: "Rezervacija je uspje\u0161no a\u017Eurirana.",
          deleteSuccessToast: "Rezervacija je uspje\u0161no obrisana.",
          errors: {
            noAvaliableQuantity: "Lokacija skladi\u0161ta nema dostupnu koli\u010Dinu.",
            quantityOutOfRange: "Minimalna koli\u010Dina je 1, a maksimalna koli\u010Dina je {{max}}"
          }
        },
        toast: {
          updateLocations: "Lokacije su uspje\u0161no a\u017Eurirane.",
          updateLevel: "Nivo inventara je uspje\u0161no a\u017Euriran.",
          updateItem: "Stavka inventara uspje\u0161no a\u017Eurirana."
        }
      },
      giftCards: {
        domain: "Poklon kartice",
        editGiftCard: "Izmijeni Poklon Karticu",
        createGiftCard: "Kreiraj Poklon Karticu",
        createGiftCardHint: "Ru\u010Dno kreirajte poklon karticu koja se mo\u017Ee koristiti kao metoda pla\u0107anja u va\u0161oj prodavnici.",
        selectRegionFirst: "Odaberi region prvo",
        deleteGiftCardWarning: "Spremate se da obri\u0161ete poklon karticu {{code}}. Ova radnja se ne mo\u017Ee poni\u0161titi.",
        balanceHigherThanValue: "Ravnote\u017Ea ne mo\u017Ee biti vi\u0161a od originalnog iznosa.",
        balanceLowerThanZero: "Ravnote\u017Ea ne mo\u017Ee biti negativna.",
        expiryDateHint: "Zemlje imaju razli\u010Dite zakone u vezi sa rokovima isteka poklon kartica. Obavezno proverite lokalne propise pre nego \u0161to postavite rok isteka.",
        regionHint: "Menjanje regije poklon kartice \u0107e tako\u0111e promeniti njenu valutu, potencijalno uti\u010Du\u0107i na njenu nov\u010Danu vrednost.",
        enabledHint: "Odredi da li je poklon kartica omogu\u0107ena ili onemogu\u0107ena.",
        balance: "Ravnote\u017Ea",
        currentBalance: "Trenutni saldo",
        initialBalance: "Po\u010Detno stanje",
        personalMessage: "Li\u010Dna poruka",
        recipient: "Primalac"
      },
      customers: {
        domain: "Kupci",
        list: {
          noRecordsMessage: "Va\u0161i kupci \u0107e se pojaviti ovdje."
        },
        create: {
          header: "Kreiraj Kupca",
          hint: "Kreiraj novog kupca i upravljaj njihovim podacima.",
          successToast: "Kupac {{email}} je uspje\u0161no kreiran."
        },
        groups: {
          label: "Grupacije kupaca",
          remove: 'Da li ste sigurni da \u017Eelite da uklonite kupca iz "{{name}}" grupe kupaca?',
          removeMany: "Da li ste sigurni da \u017Eelite da kupite od slede\u0107ih kupaca: {{groups}}?",
          alreadyAddedTooltip: "Kupac je ve\u0107 u ovoj grupi kupaca.",
          list: {
            noRecordsMessage: "Ovaj kupac ne pripada nijednoj grupi."
          },
          add: {
            success: "Kupac dodat u: {{grupe}}.",
            list: {
              noRecordsMessage: "Molimo vas da prvo kreirate grupu kupaca."
            }
          },
          removed: {
            success: "Kupac uklonjen iz: {{grupe}}.",
            list: {
              noRecordsMessage: "Molimo vas da prvo kreirate grupu kupaca."
            }
          }
        },
        edit: {
          header: "Izmijeni Kupca",
          emailDisabledTooltip: "Email adresa se ne mo\u017Ee promijeniti za registrovane kupce.",
          successToast: "Kupac {{email}} je uspje\u0161no a\u017Euriran."
        },
        delete: {
          title: "Obri\u0161i Kupca",
          description: "Spremate se da obri\u0161ete kupca {{email}}. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          successToast: "Kupac {{email}} je uspje\u0161no obrisan."
        },
        fields: {
          guest: "Gost",
          registered: "Registrovan",
          groups: "Grupe"
        },
        registered: "Registrovan",
        guest: "Gost",
        hasAccount: "Ima ra\u010Dun"
      },
      customerGroups: {
        domain: "Kupac Grupe",
        subtitle: "Organizovati kupce u grupe. Grupe mogu imati razli\u010Dite promocije i cene.",
        create: {
          header: "Kreiraj Grupu Kupaca",
          hint: "Kreiraj novu grupu kupaca da segmentira\u0161 svoje kupce.",
          successToast: "Grupa kupaca {{name}} je uspje\u0161no kreirana."
        },
        edit: {
          header: "Izmijeni Grupu Kupaca",
          successToast: "Grupa kupaca {{name}} je uspje\u0161no a\u017Eurirana."
        },
        delete: {
          title: "Obri\u0161i grupu kupaca",
          description: "Spremate se da obri\u0161ete grupu kupaca {{name}}. Ova akcija se ne mo\u017Ee poni\u0161titi.",
          successToast: "Grupa kupaca {{name}} je uspje\u0161no obrisana."
        },
        customers: {
          alreadyAddedTooltip: "Kupac je ve\u0107 dodat u grupu.",
          add: {
            successToast_one: "Kupac je uspje\u0161no dodat u grupu.",
            successToast_other: "Kupci su uspje\u0161no dodati u grupu.",
            list: {
              noRecordsMessage: "Kreiraj kupca prvo."
            }
          },
          remove: {
            title_one: "Ukloni kupca",
            title_other: "Ukloni kupce",
            description_one: "Spremate se da uklonite {{count}} kupca iz grupe kupaca. Ova akcija se ne mo\u017Ee poni\u0161titi.",
            description_other: "Ukloni\u0107e\u0161 {{count}} kupaca iz grupe kupaca. Ova akcija se ne mo\u017Ee poni\u0161titi."
          },
          list: {
            noRecordsMessage: "Ova grupa nema kupaca."
          }
        }
      },
      orders: {
        domain: "Naru\u010Divanja",
        claim: "Potra\u017Eivanje",
        exchange: "Razmjena",
        return: "Vrati",
        cancelWarning: "Vi ste na putu da otka\u017Eete narud\u017Ebinu {{id}}. Ova radnja se ne mo\u017Ee poni\u0161titi.",
        onDateFromSalesChannel: "{{datum}} iz {{kanalProdaje}}",
        list: {
          noRecordsMessage: "Va\u0161e narud\u017Ebe \u0107e se pojaviti ovdje."
        },
        summary: {
          requestReturn: "Zahtev povratak",
          allocateItems: "Dodeli stavke",
          editOrder: "Izmijeni narud\u017Ebinu",
          editOrderContinue: "Nastavi redoslijed ure\u0111ivanja",
          inventoryKit: "Sadr\u017Ei {{count}}x inventar stavki",
          itemTotal: "Stavka Ukupno",
          shippingTotal: "Ukupno za dostavu",
          discountTotal: "Popust Ukupno",
          taxTotalIncl: "Porez Ukupno (uklju\u010Deno)",
          itemSubtotal: "Stavka Ukupno",
          shippingSubtotal: "Isporuka Ukupno",
          discountSubtotal: "Popust Ukupno",
          taxTotal: "Porez Ukupno"
        },
        payment: {
          title: "Pla\u0107anja",
          isReadyToBeCaptured: "Pla\u0107anje <0/> je spremno za preuzimanje.",
          totalPaidByCustomer: "Ukupno pla\u0107eno od kupca",
          capture: "Zabilje\u017Ei uplatu",
          capture_short: "Zarobljavanje",
          refund: "Povra\u0107aj",
          markAsPaid: "Ozna\u010Di kao pla\u0107eno",
          statusLabel: "Status pla\u0107anja",
          statusTitle: "Status Pla\u0107anja",
          status: {
            notPaid: "Nije pla\u0107eno",
            authorized: "Ovla\u0161\u0107en",
            partiallyAuthorized: "Djelimi\u010Dno ovla\u0161\u0107en",
            awaiting: "\u010Cekanje",
            captured: "Zarobljen",
            partiallyRefunded: "Djelimi\u010Dno refundirano",
            partiallyCaptured: "Djelimi\u010Dno uhva\u0107eno",
            refunded: "Refundiran",
            canceled: "Otka\u017Eeno",
            requiresAction: "Zahteva akciju"
          },
          capturePayment: "Pla\u0107anje od {{amount}} \u0107e biti zabilje\u017Eeno.",
          capturePaymentSuccess: "Pla\u0107anje od {{amount}} uspje\u0161no zabilje\u017Eeno",
          markAsPaidPayment: "Pla\u0107anje od {{amount}} bi\u0107e ozna\u010Deno kao pla\u0107eno.",
          markAsPaidPaymentSuccess: "Pla\u0107anje od {{amount}} uspje\u0161no ozna\u010Deno kao pla\u0107eno",
          createRefund: "Kreirati Povratak",
          refundPaymentSuccess: "Povrat novca u iznosu {{amount}} uspje\u0161an",
          createRefundWrongQuantity: "Koli\u010Dina treba da bude broj izme\u0111u 1 i {{number}}",
          refundAmount: "Povrat {{ amount }}",
          paymentLink: "Kopiraj link za uplatu za {{ amount }}",
          selectPaymentToRefund: "Izaberi uplatu za povratak"
        },
        edits: {
          title: "Izmijeni narud\u017Ebinu",
          confirm: "Potvrdi Ure\u0111ivanje",
          confirmText: "Spremni ste da potvrdite izmjenu narud\u017Ebe. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          cancel: "Otka\u017Ei Uredi",
          currentItems: "Trenutni predmeti",
          currentItemsDescription: "Pode\u0161avanje koli\u010Dine stavke ili uklanjanje.",
          addItemsDescription: "Mo\u017Ee\u0161 dodati nove stavke u narud\u017Ebinu.",
          addItems: "Dodaj stavke",
          amountPaid: "Iznos pla\u0107en",
          newTotal: "Novi ukupno",
          differenceDue: "Razlika zbog",
          create: "Izmijeni Narud\u017Ebinu",
          currentTotal: "Trenutni ukupni",
          noteHint: "Dodaj unutra\u0161nju napomenu za izmjenu",
          cancelSuccessToast: "Nalog ure\u0111ivanja otkazan",
          createSuccessToast: "Zahtev za ure\u0111ivanje narud\u017Ebine kreiran",
          activeChangeError: "Ve\u0107 postoji aktivna promjena narud\u017Ebe na narud\u017Ebi (povrat, reklamacija, razmjena itd.). Molimo zavr\u0161ite ili otka\u017Eite promjenu prije nego \u0161to uredite narud\u017Ebu.",
          panel: {
            title: "Zahtev za izmjenu narud\u017Ebine",
            titlePending: "Naru\u010Divanje ure\u0111ivanja na \u010Dekanju"
          },
          toast: {
            canceledSuccessfully: "Nalog ure\u0111ivanje otkazano",
            confirmedSuccessfully: "Potvr\u0111ena izmjena narud\u017Ebine"
          },
          validation: {
            quantityLowerThanFulfillment: "Ne mo\u017Ee se postaviti koli\u010Dina da bude manja ili jednaka ispunjenoj koli\u010Dini"
          }
        },
        returns: {
          create: "Kreiraj Vratiti",
          confirm: "Potvrdi povratak",
          confirmText: "Spremni ste da potvrdite Povratak. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          inbound: "Ulazni",
          outbound: "Izlazni",
          sendNotification: "Po\u0161alji obavje\u0161tenje",
          sendNotificationHint: "Obavijesti kupca o povratu.",
          returnTotal: "Vrati ukupno",
          inboundTotal: "Ulazni ukupno",
          refundAmount: "Iznos povrata",
          outstandingAmount: "Iznos koji se duguje",
          reason: "Razlog",
          reasonHint: "Odaberi za\u0161to kupac \u017Eeli da vrati artikle.",
          note: "Napomena",
          noInventoryLevel: "Nema nivoa zaliha",
          noInventoryLevelDesc: "Odabrana lokacija nema nivo zaliha za odabrane stavke. Povratak se mo\u017Ee zatra\u017Eiti, ali se ne mo\u017Ee primiti dok se ne kreira nivo zaliha za odabranu lokaciju.",
          noteHint: "Mo\u017Ee\u0161 slobodno kucati ako \u017Eeli\u0161 da ne\u0161to precizira\u0161.",
          location: "Lokacija",
          locationHint: "Odaberi koju lokaciju \u017Eeli\u0161 da vrati\u0161 predmete.",
          inboundShipping: "Povratna po\u0161tarina",
          inboundShippingHint: "Izaberi koju metodu \u017Eeli\u0161 da koristi\u0161.",
          returnableQuantityLabel: "Povratna koli\u010Dina",
          refundableAmountLabel: "Povratni iznos",
          returnRequestedInfo: "{{requestedItemsCount}}x stavki vra\u0107enih na zahtev",
          returnReceivedInfo: "{{requestedItemsCount}}x stavki povratak primljen",
          itemReceived: "Stavke primljene",
          returnRequested: "Povratak zatra\u017Een",
          damagedItemReceived: "O\u0161te\u0107eni predmeti primljeni",
          damagedItemsReturned: "{{quantity}}x o\u0161te\u0107enih predmeta vra\u0107enih",
          activeChangeError: "Postoji aktivna promjena narud\u017Ebine u toku na ovoj narud\u017Ebini. Molimo vas da prvo zavr\u0161ite ili odbacite promjenu.",
          cancel: {
            title: "Otka\u017Ei Povratak",
            description: "Da li ste sigurni da \u017Eelite da otka\u017Eete zahtev za povratak?"
          },
          placeholders: {
            noReturnShippingOptions: {
              title: "Nema opcija za povratnu dostavu",
              hint: "Nema opcija za povratnu dostavu koje su kreirane za lokaciju. Mo\u017Eete kreirati jednu na <LinkComponent>Lokacija & Dostava</LinkComponent>."
            },
            outboundShippingOptions: {
              title: "Nema opcija za izlaznu isporuku",
              hint: "Nema opcija za otpremu prema van koje su kreirane za lokaciju. Mo\u017Eete kreirati jednu na <LinkComponent>Lokacija & Otprema</LinkComponent>."
            }
          },
          receive: {
            action: "Primiti stavke",
            receiveItems: "{{ povratniTip }} {{ id }}",
            restockAll: "Ponovno napuniti sve stavke",
            itemsLabel: "Stavke primljene",
            title: "Primite stavke za #{{returnId}}",
            sendNotificationHint: "Obavijesti kupca o primljenom vra\u0107anju.",
            inventoryWarning: "Molimo vas da imate u vidu da \u0107emo automatski prilagoditi nivoe zaliha na osnovu va\u0161eg unosa iznad.",
            writeOffInputLabel: "Koliko od stavki je o\u0161te\u0107eno?",
            toast: {
              success: "Povratak primljen uspje\u0161no.",
              errorLargeValue: "Koli\u010Dina je ve\u0107a od tra\u017Eene koli\u010Dine stavke.",
              errorNegativeValue: "Koli\u010Dina ne mo\u017Ee biti negativna vrijednost.",
              errorLargeDamagedValue: "Koli\u010Dina o\u0161te\u0107enih stavki + koli\u010Dina ne o\u0161te\u0107enih primljenih stavki prema\u0161uje ukupnu koli\u010Dinu stavki na povratu. Molimo smanjite koli\u010Dinu ne o\u0161te\u0107enih stavki."
            }
          },
          toast: {
            canceledSuccessfully: "Povratak otkazan uspje\u0161no",
            confirmedSuccessfully: "Povratak potvr\u0111en uspje\u0161no"
          },
          panel: {
            title: "Povratak iniciran",
            description: "Postoji otvoren zahtev za povratak koji treba da se zavr\u0161i"
          }
        },
        claims: {
          create: "Kreiraj Potra\u017Eivanje",
          confirm: "Potvrdi Potra\u017Eivanje",
          confirmText: "Spremni ste da potvrdite zahtjev. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          manage: "Upravljaj Potra\u017Enjom",
          outbound: "Izlazni",
          outboundItemAdded: "{{itemsCount}}x dodato kroz zahtjev",
          outboundTotal: "Izlazni ukupno",
          outboundShipping: "Izlazna isporuka",
          outboundShippingHint: "Izaberi koju metodu \u017Eeli\u0161 da koristi\u0161.",
          refundAmount: "Procijenjena razlika",
          activeChangeError: "Postoji aktivna promjena narud\u017Ebe na ovoj narud\u017Ebi. Molimo zavr\u0161ite ili odbacite prethodnu promjenu.",
          actions: {
            cancelClaim: {
              successToast: "Zahtev je uspje\u0161no otkazan."
            }
          },
          cancel: {
            title: "Otka\u017Ei zahtjev",
            description: "Da li ste sigurni da \u017Eelite da otka\u017Eete zahtev?"
          },
          tooltips: {
            onlyReturnShippingOptions: "Ova lista \u0107e se sastojati samo od opcija za povratnu isporuku."
          },
          toast: {
            canceledSuccessfully: "Potra\u017Eivanje otkazano uspje\u0161no",
            confirmedSuccessfully: "Potvrda zahtjeva uspje\u0161no izvr\u0161ena"
          },
          panel: {
            title: "Zahtev pokrenut",
            description: "Postoji otvoren zahtjev za reklamaciju koji treba da se zavr\u0161i"
          }
        },
        exchanges: {
          create: "Kreiraj Razmjenu",
          manage: "Upravljaj Razmjenom",
          confirm: "Potvrdi Razmjenu",
          confirmText: "Vi ste na putu da potvrdite razmjenu. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          outbound: "Izlazni",
          outboundItemAdded: "{{itemsCount}}x dodato kroz razmjenu",
          outboundTotal: "Izlazni ukupno",
          outboundShipping: "Izlazna isporuka",
          outboundShippingHint: "Izaberi koju metodu \u017Eeli\u0161 da koristi\u0161.",
          refundAmount: "Procijenjena razlika",
          activeChangeError: "Postoji aktivna promjena narud\u017Ebe na ovoj narud\u017Ebi. Molimo vas da zavr\u0161ite ili odbacite prethodnu promjenu.",
          actions: {
            cancelExchange: {
              successToast: "Razmjena je uspje\u0161no otkazana."
            }
          },
          cancel: {
            title: "Otka\u017Ei razmjenu",
            description: "Da li ste sigurni da \u017Eelite da otka\u017Eete razmjenu?"
          },
          tooltips: {
            onlyReturnShippingOptions: "Ova lista \u0107e se sastojati samo od opcija za povratnu dostavu."
          },
          toast: {
            canceledSuccessfully: "Razmjena otkazana uspje\u0161no",
            confirmedSuccessfully: "Razmjena potvr\u0111ena uspje\u0161no"
          },
          panel: {
            title: "Razmjena inicirana",
            description: "Postoji otvoren zahtjev za razmjenu koji treba da se zavr\u0161i"
          }
        },
        reservations: {
          allocatedLabel: "Dodeljeno",
          notAllocatedLabel: "Nije alocirano"
        },
        allocateItems: {
          action: "Dodeli stavke",
          title: "Dodeli stavke narud\u017Ebine",
          locationDescription: "Odaberi koju lokaciju \u017Eeli\u0161 da alocira\u0161.",
          itemsToAllocate: "Stavke za alokaciju",
          itemsToAllocateDesc: "Odaberi broj stavki koje \u017Eeli\u0161 da dodeli\u0161",
          search: "Pretra\u017Eiti stavke",
          consistsOf: "Sastoji se od {{num}}x inventar stavki",
          requires: "Zahteva {{num}} po varijanti",
          toast: {
            created: "Stavke uspje\u0161no alocirane"
          },
          error: {
            quantityNotAllocated: "Postoje nealokirani predmeti."
          }
        },
        shipment: {
          title: "Mark ispunjenje otpremljeno",
          trackingNumber: "Broj za pra\u0107enje",
          addTracking: "Dodaj broj za pra\u0107enje",
          sendNotification: "Po\u0161alji obavje\u0161tenje",
          sendNotificationHint: "Obavijesti kupca o ovoj po\u0161iljci.",
          toastCreated: "Po\u0161iljka je uspje\u0161no kreirana."
        },
        fulfillment: {
          cancelWarning: "Spremate se da otka\u017Eete ispunjenje. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          markAsDeliveredWarning: "Spremni ste da ozna\u010Dite ispunjenje kao isporu\u010Deno. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          unfulfilledItems: "Nepotpuni predmeti",
          statusLabel: "Status ispunjenja",
          statusTitle: "Status ispunjenja",
          fulfillItems: "Ispuniti stavke",
          awaitingFulfillmentBadge: "\u010Cekanje ispunjenja",
          requiresShipping: "Zahteva isporuku",
          number: "Ispunjenje #{{number}}",
          itemsToFulfill: "Stavke za ispunjenje",
          create: "Kreirati Ispunjenje",
          available: "Dostupan",
          inStock: "Na skladi\u0161tu",
          markAsShipped: "Ozna\u010Di kao otpremljeno",
          markAsDelivered: "Ozna\u010Di kao isporu\u010Deno",
          itemsToFulfillDesc: "Odaberi stavke i koli\u010Dine za ispunjavanje",
          locationDescription: "Izaberi koju lokaciju \u017Eeli\u0161 da ispuni\u0161 stavke iz.",
          sendNotificationHint: "Obavijestite kupce o kreiranom ispunjenju.",
          methodDescription: "Izaberi druga\u010Diji na\u010Din isporuke od onog koji je kupac odabrao",
          error: {
            wrongQuantity: "Samo jedna stavka je dostupna za ispunjenje",
            wrongQuantity_other: "Koli\u010Dina treba da bude broj izme\u0111u 1 i {{number}}",
            noItems: "Nema stavki za ispunjavanje."
          },
          status: {
            notFulfilled: "Nije ispunjeno",
            partiallyFulfilled: "Djelimi\u010Dno ispunjeno",
            fulfilled: "Ispunjen",
            partiallyShipped: "Djelimi\u010Dno otpremljeno",
            shipped: "Poslato",
            delivered: "Isporu\u010Deno",
            partiallyDelivered: "Djelimi\u010Dno isporu\u010Deno",
            partiallyReturned: "Djelimi\u010Dno vra\u0107eno",
            returned: "Vra\u0107en",
            canceled: "Otka\u017Eeno",
            requiresAction: "Zahteva akciju"
          },
          toast: {
            created: "Ispunjenje je uspje\u0161no kreirano",
            canceled: "Ispunjenje uspje\u0161no otkazano",
            fulfillmentShipped: "Ne mo\u017Ee\u0161 otkazati ve\u0107 otpremljenu ispunu",
            fulfillmentDelivered: "Ispunjenje ozna\u010Deno kao uspje\u0161no isporu\u010Deno"
          },
          trackingLabel: "Pra\u0107enje",
          shippingFromLabel: "\u0160aljenje od",
          itemsLabel: "Stavke"
        },
        refund: {
          title: "Kreirati Povratak",
          sendNotificationHint: "Obavijestite kupce o kreiranom povratu.",
          systemPayment: "Sistem pla\u0107anja",
          systemPaymentDesc: "Jedna ili vi\u0161e tvojih uplata je sistemska uplata. Budi svestan da Medusa ne obra\u0111uje zadr\u017Eavanja i povra\u0107aje za takve uplate.",
          error: {
            amountToLarge: "Ne mo\u017Ee se refundirati vi\u0161e od originalnog iznosa narud\u017Ebine.",
            amountNegative: "Iznos povrata mora biti pozitivan broj.",
            reasonRequired: "Molimo vas da odaberete razlog za povrat."
          }
        },
        customer: {
          contactLabel: "Kontakt",
          editEmail: "Izmeni email",
          transferOwnership: "Prenos vlasni\u0161tva",
          editBillingAddress: "Izmeni adresu za naplatu",
          editShippingAddress: "Izmijeni adresu za isporuku"
        },
        activity: {
          header: "Aktivnost",
          showMoreActivities_one: "Prika\u017Ei {{count}} vi\u0161e aktivnosti",
          showMoreActivities_other: "Prika\u017Ei {{count}} vi\u0161e aktivnosti",
          comment: {
            label: "Komentar",
            placeholder: "Ostavi komentar",
            addButtonText: "Dodaj komentar",
            deleteButtonText: "Obri\u0161i komentar"
          },
          events: {
            common: {
              toReturn: "Da vrati\u0161",
              toSend: "Da po\u0161aljem"
            },
            placed: {
              title: "Porud\u017Ebina postavljena",
              fromSalesChannel: "od {{salesChannel}}"
            },
            canceled: {
              title: "Naru\u010Divanje otkazano"
            },
            payment: {
              awaiting: "\u010Cekanje uplate",
              captured: "Pla\u0107anje zabilje\u017Eeno",
              canceled: "Pla\u0107anje otkazano",
              refunded: "Povrat novca"
            },
            fulfillment: {
              created: "Stavke ispunjene",
              canceled: "Ispunjenje otkazano",
              shipped: "Stavke otpremljene",
              delivered: "Stavke isporu\u010Dene",
              items_one: "{{count}} stavka",
              items_other: "{{count}} stavki"
            },
            return: {
              created: "Vrati #{{returnId}} zatra\u017Eeno",
              canceled: "Vrati #{{returnId}} otkazan",
              received: "Povratak #{{returnId}} primljen",
              items_one: "{{count}} stavka vra\u0107ena",
              items_other: "{{count}} stavki vra\u0107eno"
            },
            note: {
              comment: "Komentar",
              byLine: "od {{author}}"
            },
            claim: {
              created: "Zahtev #{{claimId}} zatra\u017Een",
              canceled: "Potra\u017Eivanje #{{claimId}} otkazano",
              itemsInbound: "{{count}} stavka za vra\u0107anje",
              itemsOutbound: "{{count}} stavka za slanje"
            },
            exchange: {
              created: "Razmjena #{{exchangeId}} zatra\u017Eena",
              canceled: "Razmjena #{{exchangeId}} otkazana",
              itemsInbound: "{{count}} stavka za vra\u0107anje",
              itemsOutbound: "{{count}} stavka za slanje"
            },
            edit: {
              requested: "Nalog za ure\u0111ivanje #{{editId}} zatra\u017Een",
              confirmed: "Nalog ure\u0111ivanje #{{editId}} potvr\u0111eno"
            }
          }
        },
        fields: {
          displayId: "Prikaz ID",
          refundableAmount: "Povratni iznos",
          returnableQuantity: "Povratna koli\u010Dina"
        }
      },
      draftOrders: {
        domain: "Nacrt Naru\u0111bina",
        deleteWarning: "Spremate se da obri\u0161ete nacrt narud\u017Ebe {{id}}. Ova radnja se ne mo\u017Ee poni\u0161titi.",
        paymentLinkLabel: "Link za pla\u0107anje",
        cartIdLabel: "ID korpe",
        markAsPaid: {
          label: "Ozna\u010Di kao pla\u0107eno",
          warningTitle: "Ozna\u010Di kao Pla\u0107eno",
          warningDescription: "Spremni ste da ozna\u010Dite redoslijed nacrta kao pla\u0107en. Ova radnja se ne mo\u017Ee poni\u0161titi, a prikupljanje uplate ne\u0107e biti mogu\u0107e kasnije."
        },
        status: {
          open: "Otvoren",
          completed: "Zavr\u0161eno"
        },
        create: {
          createDraftOrder: "Kreiraj Nacrt Redoslijed",
          createDraftOrderHint: "Kreiraj novu narud\u017Ebinu za upravljanje detaljima narud\u017Ebine prije nego \u0161to bude postavljena.",
          chooseRegionHint: "Izaberi region",
          existingItemsLabel: "Postoje\u0107i predmeti",
          existingItemsHint: "Dodaj postoje\u0107e proizvode u nacrt narud\u017Ebine.",
          customItemsLabel: "Prilago\u0111eni predmeti",
          customItemsHint: "Dodaj prilago\u0111ene stavke u redosled nacrta.",
          addExistingItemsAction: "Dodaj postoje\u0107e stavke",
          addCustomItemAction: "Dodaj prilago\u0111eni predmet",
          noCustomItemsAddedLabel: "Nema prilago\u0111enih stavki dodanih jo\u0161",
          noExistingItemsAddedLabel: "Nema postoje\u0107ih stavki dodanih jo\u0161.",
          chooseRegionTooltip: "Odaberi region prvo",
          useExistingCustomerLabel: "Koristi postoje\u0107eg kupca",
          addShippingMethodsAction: "Dodaj metode isporuke",
          unitPriceOverrideLabel: "Jedini\u010Dna cijena preklapanje",
          shippingOptionLabel: "Opcija dostave",
          shippingOptionHint: "Izaberi opciju dostave za nacrt narud\u017Ebe.",
          shippingPriceOverrideLabel: "Cijena dostave preklapanje",
          shippingPriceOverrideHint: "Prekini cijenu dostave za nacrt narud\u017Ebe.",
          sendNotificationLabel: "Po\u0161alji obavje\u0161tenje",
          sendNotificationHint: "Po\u0161alji obavje\u0161tenje kupcu kada se kreira nacrt narud\u017Ebe."
        },
        validation: {
          requiredEmailOrCustomer: "Email ili kupac je obavezan.",
          requiredItems: "Najmanje jedan predmet je obavezan.",
          invalidEmail: "Email mora biti va\u017Ee\u0107a email adresa."
        }
      },
      stockLocations: {
        domain: "Lokacije i dostava",
        list: {
          description: "Upravljajte lokacijama skladi\u0161ta i opcijama dostave va\u0161e prodavnice."
        },
        create: {
          header: "Kreiraj Lokaciju Zaliha",
          hint: "Lokacija zaliha je fizi\u010Dko mesto gde se proizvodi skladi\u0161te i otpremaju.",
          successToast: "Lokacija {{name}} je uspje\u0161no kreirana."
        },
        edit: {
          header: "Izmijeni Lokaciju Zaliha",
          viewInventory: "Pogledaj inventar",
          successToast: "Lokacija {{name}} je uspje\u0161no a\u017Eurirana."
        },
        delete: {
          confirmation: "Spremate se da obri\u0161ete lokaciju skladi\u0161ta {{name}}. Ova radnja se ne mo\u017Ee poni\u0161titi."
        },
        fulfillmentProviders: {
          header: "Ispunjenje Pru\u017Eatelji",
          shippingOptionsTooltip: "Ova padaju\u0107a lista \u0107e se sastojati samo od pru\u017Eatelja usluga omogu\u0107enih za ovu lokaciju. Dodajte ih u lokaciju ako je padaju\u0107a lista onemogu\u0107ena.",
          label: "Povezani pru\u017Eaoci ispunjenja",
          connectedTo: "Povezano sa {{count}} od {{total}} pru\u017Eatelja ispunjenja",
          noProviders: "Ova Lokacija Zaliha nije povezana sa nijednim provajderom ispunjenja.",
          action: "Pove\u017Ei Pru\u017Eaoce",
          successToast: "Provajderi ispunjenja za lokaciju zaliha su uspje\u0161no a\u017Eurirani."
        },
        fulfillmentSets: {
          pickup: {
            header: "Pickup - preuzimanje"
          },
          shipping: {
            header: "\u0160aljenje"
          },
          disable: {
            confirmation: "Da li ste sigurni da \u017Eelite da onemogu\u0107ite {{name}}? Ovo \u0107e obrisati sve povezane servisne zone i opcije dostave, i ne mo\u017Ee se poni\u0161titi.",
            pickup: "Pickup je uspje\u0161no onemogu\u0107en.",
            shipping: "\u0160aljenje je uspje\u0161no onemogu\u0107eno."
          },
          enable: {
            pickup: "Pickup je uspje\u0161no omogu\u0107en.",
            shipping: "\u0160aljenje je uspje\u0161no omogu\u0107eno."
          }
        },
        sidebar: {
          header: "Konfiguracija isporuke",
          shippingProfiles: {
            label: "\u0160pediterski profili",
            description: "Grupiraj proizvode prema zahtjevima za isporuku"
          }
        },
        salesChannels: {
          header: "Prodajni kanali",
          label: "Povezani prodajni kanali",
          connectedTo: "Povezano sa {{count}} od {{total}} prodajnih kanala",
          noChannels: "Lokacija nije povezana sa nijednim prodajnim kanalima.",
          action: "Pove\u017Ei prodajne kanale",
          successToast: "Prodajni kanali su uspje\u0161no a\u017Eurirani."
        },
        shippingOptions: {
          create: {
            shipping: {
              header: "Kreiraj Opciju Dostave za {{zona}}",
              hint: "Kreiraj novu opciju dostave da defini\u0161e\u0161 kako se proizvodi \u0161alju sa ove lokacije.",
              label: "Opcije dostave",
              successToast: "Opcija dostave {{name}} je uspje\u0161no kreirana."
            },
            returns: {
              header: "Kreiraj opciju za povratak za {{zone}}",
              hint: "Kreiraj novu opciju vra\u0107anja da defini\u0161e\u0161 kako se proizvodi vra\u0107aju na ovu lokaciju.",
              label: "Povratne opcije",
              successToast: "Povratna opcija {{name}} je uspje\u0161no kreirana."
            },
            tabs: {
              details: "Detalji",
              prices: "Cijene"
            },
            action: "Kreiraj opciju"
          },
          delete: {
            confirmation: "Spremate se da obri\u0161ete opciju dostave {{name}}. Ova radnja se ne mo\u017Ee poni\u0161titi.",
            successToast: "Opcija dostave {{name}} je uspje\u0161no obrisana."
          },
          edit: {
            header: "Izmeni Opciju Dostave",
            action: "Opcija ure\u0111ivanja",
            successToast: "Opcija dostave {{name}} je uspje\u0161no a\u017Eurirana."
          },
          pricing: {
            action: "Izmeni cijene"
          },
          fields: {
            count: {
              shipping_one: "{{count}} opcija dostave",
              shipping_other: "{{count}} opcija dostave",
              returns_one: "{{count}} opcija povratka",
              returns_other: "{{count}} opcije povratka"
            },
            priceType: {
              label: "Tip cijene",
              options: {
                fixed: {
                  label: "Fiksni",
                  hint: "Cijena opcije dostave je fiksna i ne mijenja se na osnovu sadr\u017Eaja narud\u017Ebe."
                },
                calculated: {
                  label: "Izra\u010Dunato",
                  hint: "Cijena opcije dostave se obra\u010Dunava od strane pru\u017Eaoca usluga prilikom naplate."
                }
              }
            },
            enableInStore: {
              label: "Omogu\u0107i u prodavnici",
              hint: "Da li kupci mogu koristiti ovu opciju tokom naplate."
            },
            provider: "Pru\u017Ealac ispunjenja",
            profile: "\u0160aljivi profil"
          }
        },
        serviceZones: {
          create: {
            headerPickup: "Kreiraj Servisnu Zon\u0443 za Preuzimanje iz {{lokacija}}",
            headerShipping: "Kreiraj Servisnu Zon\u0443 za \u0160pediteljstvo iz {{lokacija}}",
            action: "Kreiraj servisnu zonu",
            successToast: "Servisna zona {{name}} je uspje\u0161no kreirana."
          },
          edit: {
            header: "Izmijeni Servisnu Zonu",
            successToast: "Servisna zona {{name}} je uspje\u0161no a\u017Eurirana."
          },
          delete: {
            confirmation: "Spremate se da obri\u0161ete servisnu zonu {{name}}. Ova akcija se ne mo\u017Ee poni\u0161titi.",
            successToast: "Servisna zona {{name}} je uspje\u0161no obrisana."
          },
          manageAreas: {
            header: "Upravljaj oblastima za {{name}}",
            action: "Upravljaj podru\u010Djima",
            label: "Oblasti",
            hint: "Odaberi geografska podru\u010Dja koja pokriva zona usluge.",
            successToast: "Oblasti za {{name}} su uspje\u0161no a\u017Eurirane."
          },
          fields: {
            noRecords: "Nema servisnih zona za dodavanje opcija dostave.",
            tip: "Servisna zona je skup geografskih zona ili podru\u010Dja. Koristi se za ograni\u010Davanje dostupnih opcija isporuke na definisan skup lokacija."
          }
        }
      },
      shippingProfile: {
        domain: "\u0160pediterski profili",
        subtitle: "Grupiraj proizvode sa sli\u010Dnim zahtevima za isporuku u profile.",
        create: {
          header: "Kreiraj profil za dostavu",
          hint: "Kreiraj novi profil za isporuku da grupi\u0161e proizvode sa sli\u010Dnim zahtevima za isporuku.",
          successToast: "Profil za isporuku {{name}} je uspje\u0161no kreiran."
        },
        delete: {
          title: "Obri\u0161i profil dostave",
          description: "Spremate se da obri\u0161ete profil dostave {{name}}. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          successToast: "Profil isporuke {{name}} je uspje\u0161no obrisan."
        },
        tooltip: {
          type: "Unesite tip profila za isporuku, na primjer: Te\u017Eak, Prevelik, Samo teret, itd."
        }
      },
      taxRegions: {
        domain: "Poreske regije",
        list: {
          hint: "Upravljaj onim \u0161to napla\u0107uje\u0161 svojim kupcima kada kupuju iz razli\u010Ditih zemalja i regiona."
        },
        delete: {
          confirmation: "Spremate se da obri\u0161ete poresku regiju. Ova akcija se ne mo\u017Ee poni\u0161titi.",
          successToast: "Poreska oblast je uspje\u0161no obrisana."
        },
        create: {
          header: "Kreiraj poresku regiju",
          hint: "Kreiraj novu poresku regiju da defini\u0161e\u0161 poreske stope za odre\u0111enu zemlju.",
          errors: {
            rateIsRequired: "Poreska stopa je potrebna prilikom kreiranja podrazumevane poreske stope.",
            nameIsRequired: "Ime je obavezno prilikom kreiranja podrazumijevaju\u0107e poreske stope."
          },
          successToast: "Poreska oblast je uspje\u0161no kreirana."
        },
        province: {
          header: "Pokrajine",
          create: {
            header: "Kreiraj Poresku Regiju Pokrajine",
            hint: "Kreiraj novu poresku regiju da defini\u0161e\u0161 poreske stope za odre\u0111enu pokrajinu."
          }
        },
        state: {
          header: "Dr\u017Eave",
          create: {
            header: "Kreiraj poresku regiju dr\u017Eave",
            hint: "Kreiraj novu poresku regiju da defini\u0161e\u0161 poreske stope za odre\u0111enu dr\u017Eavu."
          }
        },
        stateOrTerritory: {
          header: "Dr\u017Eave ili Teritorije",
          create: {
            header: "Kreiraj Dr\u017Eavnu/Teritorijalnu Poresku Regiju",
            hint: "Kreiraj novu poresku regiju da defini\u0161e\u0161 poreske stope za odre\u0111enu dr\u017Eavu/teritoriju."
          }
        },
        county: {
          header: "Okruzi",
          create: {
            header: "Kreiraj Okru\u017Enu Poreznu Regiju",
            hint: "Kreiraj novu poresku regiju da defini\u0161e\u0161 poreske stope za odre\u0111enu op\u0161tinu."
          }
        },
        region: {
          header: "Regije",
          create: {
            header: "Kreiraj Region Poreznu Regiju",
            hint: "Kreiraj novu poresku oblast da defini\u0161e\u0161 poreske stope za specifi\u010Dnu oblast."
          }
        },
        department: {
          header: "Odeljenja",
          create: {
            header: "Kreiraj Odeljenje Poreska Regija",
            hint: "Kreiraj novu poresku regiju da defini\u0161e\u0161 poreske stope za odre\u0111eni odeljak."
          }
        },
        territory: {
          header: "Teritorije",
          create: {
            header: "Kreiraj teritorijalnu poresku regiju",
            hint: "Kreiraj novu poresku regiju da defini\u0161e\u0161 poreske stope za odre\u0111enu teritoriju."
          }
        },
        prefecture: {
          header: "Prefekture",
          create: {
            header: "Kreiraj Prefekturalnu Poresku Regiju",
            hint: "Kreiraj novu poresku regiju da defini\u0161e\u0161 poreske stope za odre\u0111enu prefekturu."
          }
        },
        district: {
          header: "Okrug",
          create: {
            header: "Kreiraj Okru\u017Enu Poresku Regiju",
            hint: "Kreiraj novu poresku regiju da defini\u0161e\u0161 poreske stope za odre\u0111eni okrug."
          }
        },
        governorate: {
          header: "Guvernerati",
          create: {
            header: "Kreiraj Poresku Regiju Guvernerata",
            hint: "Kreiraj novu poresku regiju da defini\u0161e\u0161 poreske stope za odre\u0111enu guberniju."
          }
        },
        canton: {
          header: "Kantoni",
          create: {
            header: "Kreiraj Kantonsku Poresku Regiju",
            hint: "Kreiraj novu poresku regiju da defini\u0161e\u0161 poreske stope za odre\u0111eni kanton."
          }
        },
        emirate: {
          header: "Emirati",
          create: {
            header: "Kreiraj Emiratsku Poresku Regiju",
            hint: "Kreiraj novu poresku regiju da defini\u0161e\u0161 poreske stope za odre\u0111eni emirate."
          }
        },
        sublevel: {
          header: "Podnivoi",
          create: {
            header: "Kreiraj podnivo poreske regije",
            hint: "Kreiraj novu poresku regiju da defini\u0161e\u0161 poreske stope za odre\u0111eni podnivou."
          }
        },
        taxOverrides: {
          header: "Overrides - preklapanja",
          create: {
            header: "Kreirati Preklapanje",
            hint: "Kreiraj poresku stopu koja nadma\u0161uje podrazumijevane poreske stope za odabrane uslove."
          },
          edit: {
            header: "Izmijeni Prekid",
            hint: "Izmijeni poreznu stopu koja nadma\u0161uje zadate porezne stope za odabrane uslove."
          }
        },
        taxRates: {
          create: {
            header: "Kreiraj Poresku Stopu",
            hint: "Kreiraj novu poresku stopu da defini\u0161e\u0161 poresku stopu za region.",
            successToast: "Poreska stopa je uspje\u0161no kreirana."
          },
          edit: {
            header: "Izmijeni poresku stopu",
            hint: "Izmijeni poreznu stopu da defini\u0161e\u0161 poreznu stopu za region.",
            successToast: "Poreska stopa je uspje\u0161no a\u017Eurirana."
          },
          delete: {
            confirmation: "Spremate se da obri\u0161ete poresku stopu {{name}}. Ova akcija se ne mo\u017Ee poni\u0161titi.",
            successToast: "Poreska stopa je uspje\u0161no obrisana."
          }
        },
        fields: {
          isCombinable: {
            label: "Kombinabilan",
            hint: "Da li se ova poreska stopa mo\u017Ee kombinovati sa osnovnom stopom iz poreske regije.",
            true: "Kombinabilan",
            false: "Nije kombinovano"
          },
          defaultTaxRate: {
            label: "Podrazumijevana poreska stopa",
            tooltip: "Podrazumijevana poreska stopa za ovu regiju. Primjer je standardna PDV stopa za zemlju ili regiju.",
            action: "Kreiraj podrazumijevaju\u0107u poresku stopu"
          },
          taxRate: "Poreska stopa",
          taxCode: "Poreski zakon",
          targets: {
            label: "Ciljevi",
            hint: "Izaberi ciljeve na koje \u0107e se ova poreska stopa primenjivati.",
            options: {
              product: "Proizvodi",
              productCollection: "Kolekcije proizvoda",
              productTag: "Oznake proizvoda",
              productType: "Tipovi proizvoda",
              customerGroup: "Grupacije kupaca"
            },
            operators: {
              in: "u",
              on: "on",
              and: "i"
            },
            placeholders: {
              product: "Pretra\u017Ei proizvode",
              productCollection: "Pretra\u017Ei kolekcije proizvoda",
              productTag: "Pretra\u017Ei oznake proizvoda",
              productType: "Pretra\u017Ei tipove proizvoda",
              customerGroup: "Pretra\u017Ei grupe kupaca"
            },
            tags: {
              product: "Proizvod",
              productCollection: "Kolekcija proizvoda",
              productTag: "Proizvodna oznaka",
              productType: "Tip proizvoda",
              customerGroup: "Kupac grupa"
            },
            modal: {
              header: "Dodaj ciljeve"
            },
            values_one: "{{broj}} vrijednost",
            values_other: "{{count}} vrijednosti",
            numberOfTargets_one: "{{broj}} cilj",
            numberOfTargets_other: "{{broj}} ciljeva",
            additionalValues_one: "i {{count}} vi\u0161e vrijednosti",
            additionalValues_other: "i {{count}} vi\u0161e vrijednosti",
            action: "Dodaj cilj"
          },
          sublevels: {
            labels: {
              province: "Pokrajina",
              state: "Dr\u017Eava",
              region: "Region",
              stateOrTerritory: "Dr\u017Eava/Territorija",
              department: "Odjeljenje",
              county: "Okru\u017Eje",
              territory: "Teritorija",
              prefecture: "Prefektura",
              district: "Distrikt",
              governorate: "Guvernerat",
              emirate: "Emirati",
              canton: "Kanton",
              sublevel: "Podnivni kod"
            },
            placeholders: {
              province: "Izaberi provinciju",
              state: "Izaberi stanje",
              region: "Izaberi region",
              stateOrTerritory: "Izaberi dr\u017Eavu/teritoriju",
              department: "Izaberi odjeljenje",
              county: "Izaberi okrug",
              territory: "Izaberi teritoriju",
              prefecture: "Izaberi prefekturu",
              district: "Izaberi okrug",
              governorate: "Izaberi guberniju",
              emirate: "Izaberi emirate",
              canton: "Izaberi kanton"
            },
            tooltips: {
              sublevel: "Unesite ISO 3166-2 kod za podnivo poreske regije.",
              notPartOfCountry: "{{pokrajina}} se \u010Dini da nije deo {{zemlja}}. Molimo vas da ponovo proverite da li je ovo ta\u010Dno."
            },
            alert: {
              header: "Podnivoi regioni su onemogu\u0107eni za ovu poresku regiju",
              description: "Podnivni regioni su onemogu\u0107eni za ovu regiju po defaultu. Mo\u017Eete ih omogu\u0107iti da kreirate podnivni regione poput provincija, dr\u017Eava ili teritorija.",
              action: "Omogu\u0107i podnivo regije"
            }
          },
          noDefaultRate: {
            label: "Nema default stope",
            tooltip: "Ova poreska oblast nema podrazumijevaju\u0107u poresku stopu. Ako postoji standardna stopa, kao \u0161to je PDV neke zemlje, molimo vas da je dodate ovoj oblasti."
          }
        }
      },
      promotions: {
        domain: "Promocije",
        sections: {
          details: "Detalji promocije"
        },
        tabs: {
          template: "Tip",
          details: "Detalji",
          campaign: "Kampanja"
        },
        fields: {
          type: "Tip",
          value_type: "Vrsta Vrijednosti",
          value: "Vrijednost",
          campaign: "Kampanja",
          method: "Metoda",
          allocation: "Alokacija",
          addCondition: "Dodaj uslov",
          clearAll: "Jasno sve",
          amount: {
            tooltip: "Izaberi kod valute da omogu\u0107i\u0161 postavljanje iznosa"
          },
          conditions: {
            rules: {
              title: "Ko mo\u017Ee koristiti ovaj kod?",
              description: "Koji kupac ima pravo da koristi promotivni kod? Promotivni kod mo\u017Ee da koristi svi kupci ako ostane netaknut."
            },
            "target-rules": {
              title: "Na koje stavke \u0107e promocija biti primenjena?",
              description: "Promocija \u0107e biti primenjena na stavke koje odgovaraju slede\u0107im uslovima."
            },
            "buy-rules": {
              title: "\u0160ta treba da bude u korpi da se otklju\u010Da promocija?",
              description: "Ako se ovi uslovi poklapaju, omogu\u0107avamo promociju na ciljnim stavkama."
            }
          }
        },
        tooltips: {
          campaignType: "Kod valute mora biti odabran u promociji da bi se postavio bud\u017Eet za tro\u0161kove."
        },
        errors: {
          requiredField: "Obavezno polje",
          promotionTabError: "Ispravi gre\u0161ke u kartici Promocija prije nego \u0161to nastavi\u0161"
        },
        toasts: {
          promotionCreateSuccess: "Promocija ({{code}}) je uspje\u0161no kreirana."
        },
        create: {},
        edit: {
          title: "Izmijeni detalje promocije",
          rules: {
            title: "Izmijeni uslove kori\u0161\u0107enja"
          },
          "target-rules": {
            title: "Izmijeni uslove stavke"
          },
          "buy-rules": {
            title: "Izmijeni pravila kupovine"
          }
        },
        campaign: {
          header: "Kampanja",
          edit: {
            header: "Izmijeni Kampanju",
            successToast: "Uspe\u0161no a\u017Eurirana kampanja promocije."
          },
          actions: {
            goToCampaign: "Idi na kampanju"
          }
        },
        campaign_currency: {
          tooltip: "Ovo je valuta promocije. Promijeni je sa taba Detalji."
        },
        form: {
          required: "Potrebno",
          and: "I I",
          selectAttribute: "Izaberi Atribut",
          campaign: {
            existing: {
              title: "Postoje\u0107a kampanja",
              description: "Dodaj promociju postoje\u0107oj kampanji.",
              placeholder: {
                title: "Nema postoje\u0107ih kampanja",
                desc: "Mo\u017Ee\u0161 da napravi\u0161 jedan da prati\u0161 vi\u0161e promocija i postavi\u0161 bud\u017Eetske limite."
              }
            },
            new: {
              title: "Nova kampanja",
              description: "Kreiraj novu kampanju za ovu promociju."
            },
            none: {
              title: "Bez kampanje",
              description: "Nastavi bez povezivanja promocije sa kampanjom"
            }
          },
          status: {
            title: "Status"
          },
          method: {
            label: "Metoda",
            code: {
              title: "Kod za promociju",
              description: "Kupci moraju unijeti ovaj kod prilikom naplate"
            },
            automatic: {
              title: "Automatski",
              description: "Kupci \u0107e vidjeti ovu promociju prilikom naplate"
            }
          },
          max_quantity: {
            title: "Maksimalna Koli\u010Dina",
            description: "Maksimalna koli\u010Dina stavki na koje se ova promocija odnosi."
          },
          type: {
            standard: {
              title: "Standard",
              description: "Standardna promocija"
            },
            buyget: {
              title: "Kupiti Dobiti",
              description: "Kupite X, dobijate Y promociju"
            }
          },
          allocation: {
            each: {
              title: "Svaki",
              description: "Primjenjuje vrijednost na svaku stavku"
            },
            across: {
              title: "Preko",
              description: "Primjenjuje vrijednost na stavke"
            }
          },
          code: {
            title: "Kod",
            description: "Kod koji \u0107e va\u0161i kupci unijeti tokom naplate."
          },
          value: {
            title: "Promociona vrijednost"
          },
          value_type: {
            fixed: {
              title: "Promociona vrijednost",
              description: "Iznos koji treba da se odbije. npr. 100"
            },
            percentage: {
              title: "Promociona Vrijednost",
              description: "Procenat za popust sa iznosa. npr. 8%"
            }
          }
        },
        deleteWarning: "Spremate se da obri\u0161ete promociju {{code}}. Ova akcija se ne mo\u017Ee poni\u0161titi.",
        createPromotionTitle: "Kreiraj promociju",
        type: "Tip promocije",
        conditions: {
          add: "Dodaj uslov",
          list: {
            noRecordsMessage: "Dodaj uslov da ograni\u010Di\u0161 na koje stavke se promocija odnosi."
          }
        }
      },
      campaigns: {
        domain: "Kampanje",
        details: "Detalji kampanje",
        status: {
          active: "Aktivan",
          expired: "Istekao",
          scheduled: "Zakazan"
        },
        delete: {
          title: "Da li si siguran?",
          description: "Spremate se da obri\u0161ete kampanju '{{name}}'. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          successToast: "Kampanja '{{name}}' je uspje\u0161no kreirana."
        },
        edit: {
          header: "Izmijeni Kampanju",
          description: "Izmijeni detalje kampanje.",
          successToast: "Kampanja '{{name}}' je uspje\u0161no a\u017Eurirana."
        },
        configuration: {
          header: "Konfiguracija",
          edit: {
            header: "Izmijeni konfiguraciju kampanje",
            description: "Izmijeni konfiguraciju kampanje.",
            successToast: "Konfiguracija kampanje je uspje\u0161no a\u017Eurirana."
          }
        },
        create: {
          title: "Kreiraj Kampanju",
          description: "Kreiraj promotivnu kampanju.",
          hint: "Kreiraj promotivnu kampanju.",
          header: "Kreiraj Kampanju",
          successToast: "Kampanja '{{name}}' je uspje\u0161no kreirana."
        },
        fields: {
          name: "Ime",
          identifier: "Identifikator",
          start_date: "Datum po\u010Detka",
          end_date: "Krajnji datum",
          total_spend: "Bud\u017Eet potro\u0161en",
          total_used: "Bud\u017Eet kori\u0161\u0107en",
          budget_limit: "Bud\u017Eetski limit",
          campaign_id: {
            hint: "Samo kampanje sa istim kodom valute kao promocija su prikazane na ovoj listi."
          }
        },
        budget: {
          create: {
            hint: "Napravite bud\u017Eet za kampanju.",
            header: "Kampanja Bud\u017Eet"
          },
          details: "Bud\u017Eet kampanje",
          fields: {
            type: "Tip",
            currency: "Valuta",
            limit: "Limit",
            used: "Kori\u0161\u0107en."
          },
          type: {
            spend: {
              title: "Tro\u0161i",
              description: "Postavi limit na ukupni sni\u017Eeni iznos svih kori\u0161\u0107enja promocija."
            },
            usage: {
              title: "Upotreba",
              description: "Postavi ograni\u010Denje na koliko puta se promocija mo\u017Ee koristiti."
            }
          },
          edit: {
            header: "Izmijeni bud\u017Eet kampanje"
          }
        },
        promotions: {
          remove: {
            title: "Ukloni promociju iz kampanje",
            description: "Spremate se da uklonite {{count}} promociju/promocije iz kampanje. Ova akcija se ne mo\u017Ee poni\u0161titi."
          },
          alreadyAdded: "Ova promocija je ve\u0107 dodata kampanji.",
          alreadyAddedDiffCampaign: "Ova promocija je ve\u0107 dodata drugoj kampanji ({{name}}).",
          currencyMismatch: "Valuta promocije i kampanje se ne poklapa",
          toast: {
            success: "Uspje\u0161no dodato {{count}} promocija u kampanju"
          },
          add: {
            list: {
              noRecordsMessage: "Kreiraj promociju prvo."
            }
          },
          list: {
            noRecordsMessage: "Nema promocija u kampanji."
          }
        },
        deleteCampaignWarning: "Vi ste na putu da obri\u0161ete kampanju {{name}}. Ova akcija se ne mo\u017Ee poni\u0161titi.",
        totalSpend: "<0>{{iznos}}</0> <1>{{valuta}}</1>"
      },
      priceLists: {
        domain: "Cjenovnici",
        subtitle: "Kreiraj prodaje ili poni\u0161ti cijene za specifi\u010Dne uslove.",
        delete: {
          confirmation: "Spremate se da obri\u0161ete cjenovnik {{title}}. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          successToast: "Cjenovnik {{title}} je uspje\u0161no obrisan."
        },
        create: {
          header: "Kreiraj Cjenovnik",
          subheader: "Kreiraj novu cjenovnu listu da upravlja\u0161 cijenama svojih proizvoda.",
          tabs: {
            details: "Detalji",
            products: "Proizvodi",
            prices: "Cijene"
          },
          successToast: "Cjenovnik {{title}} je uspje\u0161no kreiran.",
          products: {
            list: {
              noRecordsMessage: "Kreiraj proizvod prvo."
            }
          }
        },
        edit: {
          header: "Izmijeni Cjenovnik",
          successToast: "Cjenovnik {{title}} je uspje\u0161no a\u017Euriran."
        },
        configuration: {
          header: "Konfiguracija",
          edit: {
            header: "Izmijeni konfiguraciju cjenovnika",
            description: "Izmijeni konfiguraciju cjenovnika.",
            successToast: "Konfiguracija cjenovnika je uspje\u0161no a\u017Eurirana."
          }
        },
        products: {
          header: "Proizvodi",
          actions: {
            addProducts: "Dodaj proizvode",
            editPrices: "Izmijeni cijene"
          },
          delete: {
            confirmation_one: "Spremate se da obri\u0161ete cene za {{count}} proizvod u cenovniku. Ova akcija se ne mo\u017Ee poni\u0161titi.",
            confirmation_other: "Spremate se da obri\u0161ete cene za {{count}} proizvoda u cenovniku. Ova radnja se ne mo\u017Ee poni\u0161titi.",
            successToast_one: "Uspe\u0161no obrisane cene za {{count}} proizvod.",
            successToast_other: "Uspe\u0161no obrisane cene za {{count}} proizvode."
          },
          add: {
            successToast: "Cijene su uspje\u0161no dodate na cjenovnik."
          },
          edit: {
            successToast: "Cijene su uspje\u0161no a\u017Eurirane."
          }
        },
        fields: {
          priceOverrides: {
            label: "Cijene prevazilaze",
            header: "Cijene Prekora\u010Denja"
          },
          status: {
            label: "Status",
            options: {
              active: "Aktivan",
              draft: "Nacrt",
              expired: "Istekao",
              scheduled: "Zakazan"
            }
          },
          type: {
            label: "Tip",
            hint: "Izaberi tip cjenovnika koji \u017Eeli\u0161 da napravi\u0161.",
            options: {
              sale: {
                label: "Sale",
                description: "Cijene prodaje su privremene promjene cijena za proizvode."
              },
              override: {
                label: "Override - preklapanje",
                description: "Overrides se obi\u010Dno koriste za kreiranje cijena specifi\u010Dnih za kupca."
              }
            }
          },
          startsAt: {
            label: "Cjenovnik ima datum po\u010Detka?",
            hint: "Zakazati cjenovnik da se aktivira u budu\u0107nosti."
          },
          endsAt: {
            label: "Cjenovnik ima datum isteka?",
            hint: "Zakazati cjenovnik za deaktivaciju u budu\u0107nosti."
          },
          customerAvailability: {
            header: "Izaberi grupe kupaca",
            label: "Dostupnost kupca",
            hint: "Odaberi koje grupe kupaca treba da se primene na cenovnik.",
            placeholder: "Pretra\u017Ei grupe kupaca",
            attribute: "Kupac grupe"
          }
        }
      },
      profile: {
        domain: "Profil",
        manageYourProfileDetails: "Upravljaj svojim profilom detaljima.",
        fields: {
          languageLabel: "Jezik",
          usageInsightsLabel: "Kori\u0161\u0107enje uvida"
        },
        edit: {
          header: "Uredi Profil",
          languageHint: "Jezik koji \u017Eelite da koristite u administratorskoj kontrolnoj tabli. Ovo ne menja jezik va\u0161e prodavnice.",
          languagePlaceholder: "Izaberi jezik",
          usageInsightsHint: "Dijelite uvide o kori\u0161\u0107enju i pomozite nam da pobolj\u0161amo Medusu. Mo\u017Eete pro\u010Ditati vi\u0161e o tome \u0161ta prikupljamo i kako to koristimo u na\u0161oj <0>dokumentaciji</0>."
        },
        toast: {
          edit: "Promjene profila sa\u010Duvane"
        }
      },
      users: {
        domain: "Korisnici",
        editUser: "Izmeni Korisnika",
        inviteUser: "Pozovi Korisnika",
        inviteUserHint: "Pozovi novog korisnika u svoju prodavnicu.",
        sendInvite: "Po\u0161alji pozivnicu",
        pendingInvites: "Na \u010Dekanju Pozivnice",
        deleteInviteWarning: "Spremate se da obri\u0161ete pozivnicu za {{email}}. Ova radnja se ne mo\u017Ee poni\u0161titi.",
        resendInvite: "Ponovno po\u0161alji pozivnicu",
        copyInviteLink: "Kopiraj link za poziv",
        expiredOnDate: "Isteklo {{date}}",
        validFromUntil: "Va\u017Ei od <0>{{from}}</0> - <1>{{until}}</1>",
        acceptedOnDate: "Prihva\u0107eno na {{date}}",
        inviteStatus: {
          accepted: "Prihva\u0107en",
          pending: "Na \u010Dekanju",
          expired: "Istekao"
        },
        roles: {
          admin: "Admin - administrator",
          developer: "Razvija\u010D",
          member: "\u010Clan"
        },
        deleteUserWarning: "Spremate se da obri\u0161ete korisnika {{name}}. Ova radnja se ne mo\u017Ee poni\u0161titi.",
        invite: "Pozovi"
      },
      store: {
        domain: "Prodavnica",
        manageYourStoresDetails: "Upravljaj detaljima svoje prodavnice",
        editStore: "Izmeni prodavnicu",
        defaultCurrency: "Podrazumijevana valuta",
        defaultRegion: "Podrazumijevana regija",
        swapLinkTemplate: "Zamjena link \u0161ablona",
        paymentLinkTemplate: "\u0160ablon za link za pla\u0107anje",
        inviteLinkTemplate: "Pozivni link \u0161ablon",
        currencies: "Valute",
        addCurrencies: "Dodaj valute",
        enableTaxInclusivePricing: "Omogu\u0107i cijene koje uklju\u010Duju porez",
        disableTaxInclusivePricing: "Onemogu\u0107i cijene koje uklju\u010Duju porez",
        removeCurrencyWarning_one: "Spremate se da uklonite {{count}} valutu iz va\u0161e prodavnice. Osigurajte da ste uklonili sve cene koriste\u0107i valutu pre nego \u0161to nastavite.",
        removeCurrencyWarning_other: "Spremate se da uklonite {{count}} valuta iz va\u0161e prodavnice. Osigurajte da ste uklonili sve cene koriste\u0107i valute pre nego \u0161to nastavite.",
        currencyAlreadyAdded: "Valuta je ve\u0107 dodata u va\u0161u prodavnicu.",
        edit: {
          header: "Uredi Prodavnicu"
        },
        toast: {
          update: "Prodavnica uspje\u0161no a\u017Eurirana",
          currenciesUpdated: "Valute su uspje\u0161no a\u017Eurirane",
          currenciesRemoved: "Uklonjene valute iz prodavnice uspje\u0161no",
          updatedTaxInclusivitySuccessfully: "Cijena koja uklju\u010Duje porez je uspje\u0161no a\u017Eurirana"
        }
      },
      regions: {
        domain: "Regioni",
        subtitle: "Region je podru\u010Dje u kojem prodaje\u0161 proizvode. Mo\u017Ee obuhvatiti vi\u0161e zemalja i ima razli\u010Dite poreze, pru\u017Eaoce usluga i valute.",
        createRegion: "Kreiraj Region",
        createRegionHint: "Upravljaj poreskim stopama i pru\u017Eaocima usluga za skup zemalja.",
        addCountries: "Dodaj dr\u017Eave",
        editRegion: "Izmijeni Region",
        countriesHint: "Dodaj zemlje uklju\u010Dene u ovu regiju.",
        deleteRegionWarning: "Spremate se da obri\u0161ete region {{name}}. Ova akcija se ne mo\u017Ee poni\u0161titi.",
        removeCountriesWarning_one: "Ukloni\u0107e\u0161 {{count}} dr\u017Eavu iz regiona. Ova radnja se ne mo\u017Ee poni\u0161titi.",
        removeCountriesWarning_other: "Ukloni\u0107e\u0161 {{count}} zemalja iz regiona. Ova radnja se ne mo\u017Ee poni\u0161titi.",
        removeCountryWarning: "Spremate se da uklonite zemlju {{name}} iz regiona. Ova radnja se ne mo\u017Ee poni\u0161titi.",
        automaticTaxesHint: "Kada je omogu\u0107eno, porezi \u0107e se obra\u010Dunavati samo prilikom naplate na osnovu adrese za isporuku.",
        taxInclusiveHint: "Kada je omogu\u0107eno, cijene u regionu \u0107e biti uklju\u010Dene u porez.",
        providersHint: "Dodaj koji su provajderi pla\u0107anja dostupni u ovoj regiji.",
        shippingOptions: "Opcije dostave",
        deleteShippingOptionWarning: "Spremate se da obri\u0161ete opciju dostave {{name}}. Ova akcija se ne mo\u017Ee poni\u0161titi.",
        return: "Povratak",
        outbound: "Izlazni",
        priceType: "Cijena Tip",
        flatRate: "Fiksna tarifa",
        calculated: "Izra\u010Dunato",
        list: {
          noRecordsMessage: "Kreiraj region za oblasti u kojima prodaje\u0161."
        },
        toast: {
          delete: "Region je uspje\u0161no obrisan",
          edit: "Region ure\u0111ivanje sa\u010Duvano",
          create: "Region je uspje\u0161no kreiran",
          countries: "Region zemlje a\u017Eurirane uspje\u0161no"
        },
        shippingOption: {
          createShippingOption: "Kreiraj Opciju Dostave",
          createShippingOptionHint: "Kreiraj novu opciju dostave za region.",
          editShippingOption: "Izmijeni Opciju Dostave",
          fulfillmentMethod: "Metod ispunjenja",
          type: {
            outbound: "Izlazni",
            outboundHint: "Koristi ovo ako kreira\u0161 opciju za dostavu za slanje proizvoda kupcu.",
            return: "Povratak",
            returnHint: "Koristite ovo ako kreirate opciju dostave za kupca da vrati proizvode vama."
          },
          priceType: {
            label: "Cijena Tip",
            flatRate: "Fiksna tarifa",
            calculated: "Izra\u010Dunato"
          },
          availability: {
            adminOnly: "Samo za administratore",
            adminOnlyHint: "Kada je omogu\u0107eno, opcija dostave \u0107e biti dostupna samo u administratorskoj kontrolnoj tabli, a ne u prodavnici."
          },
          taxInclusiveHint: "Kada je omogu\u0107eno, cijena opcije dostave \u0107e biti uklju\u010Dena u porez.",
          requirements: {
            label: "Zahtevi",
            hint: "Odredi zahtjeve za opciju dostave."
          }
        }
      },
      taxes: {
        domain: "Poreske regije",
        domainDescription: "Upravljaj svojom poreskom regijom",
        countries: {
          taxCountriesHint: "Poreska pode\u0161avanja se primenjuju na navedene zemlje."
        },
        settings: {
          editTaxSettings: "Izmijeni Poreske Postavke",
          taxProviderLabel: "Poreski pru\u017Ealac",
          systemTaxProviderLabel: "Sistem Poreski Pru\u017Ealac",
          calculateTaxesAutomaticallyLabel: "Izra\u010Dunaj poreze automatski",
          calculateTaxesAutomaticallyHint: "Kada je omogu\u0107eno, porezi \u0107e se automatski izra\u010Dunavati i primenjivati na korpe. Kada je onemogu\u0107eno, porezi se moraju ru\u010Dno obra\u010Dunati prilikom naplate. Ru\u010Dni porezi se preporu\u010Duju za kori\u0161\u0107enje sa pru\u017Eaocima poreza tre\u0107ih strana.",
          applyTaxesOnGiftCardsLabel: "Primijeni poreze na poklon kartice",
          applyTaxesOnGiftCardsHint: "Kada je omogu\u0107eno, porezi \u0107e biti primijenjeni na poklon kartice prilikom pla\u0107anja. U nekim zemljama, poreski propisi zahtijevaju primjenu poreza na poklon kartice prilikom kupovine.",
          defaultTaxRateLabel: "Podrazumijevana poreska stopa",
          defaultTaxCodeLabel: "Podrazumijevaju\u0107i poreski kod"
        },
        defaultRate: {
          sectionTitle: "Podrazumijevana poreska stopa"
        },
        taxRate: {
          sectionTitle: "Poreske stope",
          createTaxRate: "Kreiraj Poresku Stopu",
          createTaxRateHint: "Kreiraj novu poresku stopu za region.",
          deleteRateDescription: "Spremate se da obri\u0161ete poresku stopu {{name}}. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          editTaxRate: "Izmijeni poreznu stopu",
          editRateAction: "Izmeni stopu",
          editOverridesAction: "Izmjeni preklapanja",
          editOverridesTitle: "Izmijeni stope poreza prekomjerno",
          editOverridesHint: "Odredi prepravke za poresku stopu.",
          deleteTaxRateWarning: "Spremate se da obri\u0161ete poresku stopu {{name}}. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          productOverridesLabel: "Proizvod nadma\u0161uje",
          productOverridesHint: "Odredi proizvode koji imaju prioritet za poresku stopu.",
          addProductOverridesAction: "Dodaj proizvodna preklapanja",
          productTypeOverridesLabel: "Tip proizvoda preuzima",
          productTypeOverridesHint: "Odredi tip proizvoda koji nadma\u0161uje poreznu stopu.",
          addProductTypeOverridesAction: "Dodaj tip proizvoda koji preuzima prioritet",
          shippingOptionOverridesLabel: "Opcija dostave preuzima prioritet",
          shippingOptionOverridesHint: "Odredi opcije isporuke koje nadma\u0161uju poresku stopu.",
          addShippingOptionOverridesAction: "Dodaj opcije za preusmjeravanje dostave",
          productOverridesHeader: "Proizvodi",
          productTypeOverridesHeader: "Tipovi proizvoda",
          shippingOptionOverridesHeader: "Opcije dostave"
        }
      },
      locations: {
        domain: "Lokacije",
        editLocation: "Uredi lokaciju",
        addSalesChannels: "Dodaj prodajne kanale",
        noLocationsFound: "Nema lokacija prona\u0111enih",
        selectLocations: "Izaberi lokacije koje imaju artikl.",
        deleteLocationWarning: "Spremate se da obri\u0161ete lokaciju {{name}}. Ova radnja se ne mo\u017Ee poni\u0161titi.",
        removeSalesChannelsWarning_one: "Ukloni\u0107e\u0161 {{count}} prodajni kanal sa lokacije.",
        removeSalesChannelsWarning_other: "Ukloni\u0107e\u0161 {{count}} prodajnih kanala sa lokacije.",
        toast: {
          create: "Lokacija je uspje\u0161no kreirana",
          update: "Lokacija a\u017Eurirana uspje\u0161no",
          removeChannel: "Prodajni kanal uspje\u0161no uklonjen"
        }
      },
      reservations: {
        domain: "Rezervacije",
        subtitle: "Upravljaj rezervisanom koli\u010Dinom inventarskih stavki.",
        deleteWarning: "Spremate se da obri\u0161ete rezervaciju. Ova akcija se ne mo\u017Ee poni\u0161titi."
      },
      salesChannels: {
        domain: "Prodajni kanali",
        subtitle: "Upravljaj online i offline kanalima na kojima prodaje\u0161 proizvode.",
        createSalesChannel: "Kreiraj Prodajni Kanal",
        createSalesChannelHint: "Kreiraj novi prodajni kanal za prodaju svojih proizvoda.",
        enabledHint: "Odredi da li je prodajni kanal omogu\u0107en.",
        removeProductsWarning_one: "Ukloni\u0107e\u0161 {{count}} proizvod iz {{sales_channel}}.",
        removeProductsWarning_other: "Ukloni\u0107e\u0161 {{count}} proizvoda iz {{sales_channel}}.",
        addProducts: "Dodaj Proizvode",
        editSalesChannel: "Uredi prodajni kanal",
        productAlreadyAdded: "Proizvod je ve\u0107 dodat u prodajni kanal.",
        deleteSalesChannelWarning: "Spremate se da obri\u0161ete prodajni kanal {{name}}. Ova akcija se ne mo\u017Ee poni\u0161titi.",
        toast: {
          create: "Prodajni kanal je uspje\u0161no kreiran",
          update: "Prodajni kanal uspje\u0161no a\u017Euriran",
          delete: "Prodajni kanal je uspje\u0161no obrisan"
        },
        products: {
          list: {
            noRecordsMessage: "Nema proizvoda u prodajnom kanalu."
          },
          add: {
            list: {
              noRecordsMessage: "Kreiraj proizvod prvo."
            }
          }
        }
      },
      apiKeyManagement: {
        domain: {
          publishable: "Objavljivi API klju\u010Devi",
          secret: "Tajni API klju\u010Devi"
        },
        subtitle: {
          publishable: "Upravljaj API klju\u010Devima koji se koriste u prodavnici kako bi se ograni\u010Dio opseg zahteva na specifi\u010Dne prodajne kanale.",
          secret: "Upravljaj API klju\u010Devima koji se koriste za autentifikaciju administratorskih korisnika u administratorskim aplikacijama."
        },
        status: {
          active: "Aktivan",
          revoked: "Oduzet"
        },
        type: {
          publishable: "Objavljiv.",
          secret: "Tajna"
        },
        create: {
          createPublishableHeader: "Kreiraj objavljivi API klju\u010D",
          createPublishableHint: "Kreiraj novi objavljivi API klju\u010D da ograni\u010Di\u0161 opseg zahteva na specifi\u010Dne prodajne kanale.",
          createSecretHeader: "Kreiraj tajni API klju\u010D",
          createSecretHint: "Kreiraj novi tajni API klju\u010D za pristup Medusa API-ju kao autentifikovani admin korisnik.",
          secretKeyCreatedHeader: "Tajni Klju\u010D Kreiran",
          secretKeyCreatedHint: "Tvoj novi tajni klju\u010D je generisan. Kopiraj i sigurno ga sa\u010Duvaj sada. Ovo je jedini put kada \u0107e biti prikazan.",
          copySecretTokenSuccess: "Tajni klju\u010D je kopiran u me\u0111uspremnik.",
          copySecretTokenFailure: "Nije uspjelo kopiranje tajnog klju\u010Da u me\u0111uspremnik.",
          successToast: "API klju\u010D je uspje\u0161no kreiran."
        },
        edit: {
          header: "Izmijeni API Klju\u010D",
          description: "Izmijeni naslov API klju\u010Da.",
          successToast: "API klju\u010D {{title}} je uspje\u0161no a\u017Euriran."
        },
        salesChannels: {
          title: "Dodaj Prodajne Kanale",
          description: "Dodaj prodajne kanale kojima bi API klju\u010D trebao biti ograni\u010Den.",
          successToast_one: "{{count}} prodajni kanal je uspje\u0161no dodat u API klju\u010D.",
          successToast_other: "{{count}} prodajnih kanala je uspje\u0161no dodato API klju\u010Da.",
          alreadyAddedTooltip: "Prodajni kanal je ve\u0107 dodat u API klju\u010D.",
          list: {
            noRecordsMessage: "Nema prodajnih kanala u opsegu objavljivog API klju\u010Da."
          }
        },
        delete: {
          warning: "Spremate se da obri\u0161ete API klju\u010D {{title}}. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          successToast: "API klju\u010D {{title}} je uspje\u0161no obrisan."
        },
        revoke: {
          warning: "Vi ste na putu da opozovete API klju\u010D {{title}}. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          successToast: "API klju\u010D {{title}} je uspje\u0161no opozvan."
        },
        addSalesChannels: {
          list: {
            noRecordsMessage: "Kreiraj prodajni kanal prvo."
          }
        },
        removeSalesChannel: {
          warning: "Spremate se da uklonite prodajni kanal {{name}} iz API klju\u010Da. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          warningBatch_one: "Spremate se da uklonite {{count}} prodajni kanal iz API klju\u010Da. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          warningBatch_other: "Spremate se da uklonite {{count}} prodajnih kanala iz API klju\u010Da. Ova akcija se ne mo\u017Ee poni\u0161titi.",
          successToast: "Prodajni kanal je uspje\u0161no uklonjen iz API klju\u010Da.",
          successToastBatch_one: "{{count}} prodajni kanal je uspje\u0161no uklonjen iz API klju\u010Da.",
          successToastBatch_other: "{{count}} prodajnih kanala je uspje\u0161no uklonjeno iz API klju\u010Da."
        },
        actions: {
          revoke: "Poni\u0161ti API klju\u010D",
          copy: "Kopiraj API klju\u010D",
          copySuccessToast: "API klju\u010D je kopiran u me\u0111uspremnik."
        },
        table: {
          lastUsedAtHeader: "Posljednji put kori\u0161\u0107eno u",
          createdAtHeader: "Oduzeto Na"
        },
        fields: {
          lastUsedAtLabel: "Posljednji put kori\u0161\u0107eno u",
          revokedByLabel: "Oduzeto od",
          revokedAtLabel: "Oduzeto na",
          createdByLabel: "Kreirano od"
        }
      },
      returnReasons: {
        domain: "Razlozi za povratak",
        subtitle: "Upravljaj razlozima za vra\u0107ene stavke.",
        calloutHint: "Upravljaj razlozima za kategorizaciju povrata.",
        editReason: "Izmijeni Razlog Vra\u0107anja",
        create: {
          header: "Dodaj Razlog Vra\u0107anja",
          subtitle: "Odredi naj\u010De\u0161\u0107e razloge za povrat.",
          hint: "Kreiraj novi razlog za vra\u0107anje da bi se kategorizovala vra\u0107anja.",
          successToast: "Razlog povrata {{label}} je uspje\u0161no kreiran."
        },
        edit: {
          header: "Izmijeni Razlog Vra\u0107anja",
          subtitle: "Izmijeni vrijednost razloga povrata.",
          successToast: "Razlog vra\u0107anja {{label}} je uspje\u0161no a\u017Euriran."
        },
        delete: {
          confirmation: "Spremate se da obri\u0161ete razlog povrata {{label}}. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          successToast: "Razlog vra\u0107anja {{label}} je uspje\u0161no obrisan."
        },
        fields: {
          value: {
            label: "Vrijednost",
            placeholder: "pogre\u0161na_veli\u010Dina",
            tooltip: "Vrijednost bi trebala biti jedinstveni identifikator za razlog povrata."
          },
          label: {
            label: "Oznaka",
            placeholder: "Pogre\u0161na veli\u010Dina"
          },
          description: {
            label: "Opis",
            placeholder: "Kupac je primio pogre\u0161nu veli\u010Dinu"
          }
        }
      },
      login: {
        forgotPassword: "Zaboravili ste lozinku? - <0>Resetovati</0>",
        title: "Dobrodo\u0161ao u Meduzu",
        hint: "Prijavite se da biste pristupili podru\u010Dju ra\u010Duna"
      },
      invite: {
        title: "Dobrodo\u0161ao u Meduzu",
        hint: "Kreirajte svoj nalog ispod",
        backToLogin: "Nazad na prijavu",
        createAccount: "Kreiraj nalog",
        alreadyHaveAccount: "Ve\u0107 imate nalog? - <0>Prijavite se</0>",
        emailTooltip: "Va\u0161 email ne mo\u017Ee biti promenjen. Ako \u017Eelite da koristite drugi email, nova pozivnica mora biti poslata.",
        invalidInvite: "Pozivnica je neva\u017Ee\u0107a ili je istekao rok.",
        successTitle: "Va\u0161 nalog je registrovan",
        successHint: "Zapo\u010Dni odmah sa Medusa Admin.",
        successAction: "Start Medusa Admin",
        invalidTokenTitle: "Va\u0161 pozivni token je neva\u017Ee\u0107i",
        invalidTokenHint: "Poku\u0161aj da zatra\u017Ei\u0161 novu pozivnicu.",
        passwordMismatch: "Lozinke se ne poklapaju",
        toast: {
          accepted: "Poziv uspje\u0161no prihva\u0107en"
        }
      },
      resetPassword: {
        title: "Resetovanje lozinke",
        hint: "Unesite svoju email adresu ispod, i posla\u0107emo vam uputstva o tome kako da resetujete svoju lozinku.",
        email: "Email",
        sendResetInstructions: "Po\u0161alji uputstva za resetovanje",
        backToLogin: "Nazad na prijavu",
        newPasswordHint: "Izaberi novu lozinku ispod.",
        invalidTokenTitle: "Va\u0161 reset token je neva\u017Ee\u0107i",
        invalidTokenHint: "Poku\u0161aj da zatra\u017Ei\u0161 novu vezu za resetovanje.",
        expiredTokenTitle: "Va\u0161 token za resetovanje je istekao",
        goToResetPassword: "Idi na Resetovanje Lozinke",
        resetPassword: "Resetovanje lozinke",
        newPassword: "Nova lozinka",
        repeatNewPassword: "Ponovi novu lozinku",
        tokenExpiresIn: "Token isti\u010De za <0>{{time}}</0> minuta",
        successfulRequestTitle: "Uspe\u0161no ti je poslat email",
        successfulRequest: "Poslali smo ti email koji mo\u017Ee\u0161 koristiti da resetuje\u0161 svoju lozinku. Proveri svoj spam folder ako ga nisi primio nakon nekoliko minuta.",
        successfulResetTitle: "Resetovanje lozinke uspje\u0161no",
        successfulReset: "Molimo vas da se prijavite na stranici za prijavu.",
        passwordMismatch: "Lozinke se ne poklapaju",
        invalidLinkTitle: "Va\u0161 link za resetovanje je neva\u017Ee\u0107i",
        invalidLinkHint: "Poku\u0161aj ponovo da resetuje\u0161 svoju lozinku."
      },
      workflowExecutions: {
        domain: "Radni tokovi",
        subtitle: "Pogledaj i prati izvr\u0161enja radnog toka u tvojoj Medusa aplikaciji.",
        transactionIdLabel: "ID transakcije",
        workflowIdLabel: "Workflow ID - ID toka rada",
        progressLabel: "Napredak",
        stepsCompletedLabel_one: "{{zavr\u0161eno}} od {{broj}} koraka",
        stepsCompletedLabel_other: "{{zavr\u0161eno}} od {{broj}} koraka",
        list: {
          noRecordsMessage: "Nema radnih tokova koji su izvr\u0161eni, jo\u0161."
        },
        history: {
          sectionTitle: "Istorija",
          runningState: "Tr\u010Danje...",
          awaitingState: "\u010Cekanje",
          failedState: "Neuspjeh",
          skippedState: "Presko\u010Deno",
          skippedFailureState: "Presko\u010Deno (Neuspjeh)",
          definitionLabel: "Definicija",
          outputLabel: "Izlaz",
          compensateInputLabel: "Kompenzovati ulaz",
          revertedLabel: "Revertovan",
          errorLabel: "Gre\u0161ka"
        },
        state: {
          done: "Zavr\u0161eno",
          failed: "Neuspjeh",
          reverted: "Revertovan",
          invoking: "Pozivanje",
          compensating: "Kompenzacija",
          notStarted: "Nije po\u010Delo"
        },
        transaction: {
          state: {
            waitingToCompensate: "\u010Cekanje da se nadoknadi"
          }
        },
        step: {
          state: {
            skipped: "Presko\u010Deno",
            skippedFailure: "Presko\u010Deno (Neuspjeh)",
            dormant: "Sanjaju\u0107i",
            timeout: "Timeout - vremensko ograni\u010Denje"
          }
        }
      },
      productTypes: {
        domain: "Tipovi proizvoda",
        subtitle: "Organizujte svoje proizvode u tipove.",
        create: {
          header: "Kreiraj Tip Proizvoda",
          hint: "Kreiraj novu vrstu proizvoda da kategorizuje\u0161 svoje proizvode.",
          successToast: "Tip proizvoda {{value}} je uspje\u0161no kreiran."
        },
        edit: {
          header: "Izmijeni Tip Proizvoda",
          successToast: "Tip proizvoda {{value}} je uspje\u0161no a\u017Euriran."
        },
        delete: {
          confirmation: "Spremate se da obri\u0161ete tip proizvoda {{value}}. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          successToast: "Tip proizvoda {{value}} je uspje\u0161no obrisan."
        },
        fields: {
          value: "Vrijednost"
        }
      },
      productTags: {
        domain: "Proizvodni oznaci",
        create: {
          header: "Kreiraj oznaku proizvoda",
          subtitle: "Kreiraj novu oznaku proizvoda da kategorizuje\u0161 svoje proizvode.",
          successToast: "Proizvodna oznaka {{value}} je uspje\u0161no kreirana."
        },
        edit: {
          header: "Izmijeni oznaku proizvoda",
          subtitle: "Izmijeni vrijednost oznake proizvoda.",
          successToast: "Proizvodna oznaka {{value}} je uspje\u0161no a\u017Eurirana."
        },
        delete: {
          confirmation: "Spremate se da obri\u0161ete oznaku proizvoda {{value}}. Ova radnja se ne mo\u017Ee poni\u0161titi.",
          successToast: "Proizvodna oznaka {{value}} je uspje\u0161no obrisana."
        },
        fields: {
          value: "Vrijednost"
        }
      },
      notifications: {
        domain: "Obave\u0161tenja",
        emptyState: {
          title: "Nema obavje\u0161tenja",
          description: "Nemate trenutno nikakve obavijesti, ali kada ih dobijete, one \u0107e \u017Eivjeti ovdje."
        },
        accessibility: {
          description: "obavje\u0161tenja o aktivnostima Meduze bi\u0107e navedena ovdje."
        }
      },
      errors: {
        serverError: "Gre\u0161ka na serveru - Poku\u0161ajte ponovo kasnije.",
        invalidCredentials: "Pogre\u0161na adresa elektronske po\u0161te ili lozinka"
      },
      statuses: {
        scheduled: "Zakazan",
        expired: "Istekao",
        active: "Aktivan",
        enabled: "Omogu\u0107eno",
        disabled: "Onemogu\u0107en"
      },
      labels: {
        productVariant: "Proizvodna varijanta",
        prices: "Cijene",
        available: "Dostupan",
        inStock: "Na skladi\u0161tu",
        added: "Dodato",
        removed: "Uklonjen"
      },
      fields: {
        amount: "Iznos",
        refundAmount: "Iznos povrata",
        name: "Ime",
        default: "Podrazumijevano",
        lastName: "Prezime",
        firstName: "Ime",
        title: "Naslov",
        customTitle: "Prilago\u0111eni naslov",
        manageInventory: "Upravljaj inventarom",
        inventoryKit: "Ima inventarni komplet",
        inventoryItems: "Inventar stavke",
        inventoryItem: "Inventar stavka",
        requiredQuantity: "Potrebna koli\u010Dina",
        description: "Opis",
        email: "Email",
        password: "Lozinka",
        repeatPassword: "Ponovi lozinku",
        confirmPassword: "Potvrdi Lozinku",
        newPassword: "Nova lozinka",
        repeatNewPassword: "Ponovi novu lozinku",
        categories: "Kategorije",
        shippingMethod: "Na\u010Din isporuke",
        configurations: "Konfiguracije",
        conditions: "Uslovi",
        category: "Kategorija",
        collection: "Kolekcija",
        discountable: "Popustljiv",
        handle: "Ru\u010Dka",
        subtitle: "Podnaslov",
        item: "Stavka",
        qty: "koli\u010Dina",
        limit: "Limit",
        tags: "Oznake",
        type: "Tip",
        reason: "Razlog",
        none: "nijedan",
        all: "sve",
        search: "Pretraga",
        percentage: "Procenat",
        sales_channels: "Prodajni kanali",
        customer_groups: "Grupacije kupaca",
        product_tags: "Proizvodni oznaci",
        product_types: "Tipovi proizvoda",
        product_collections: "Proizvodne kolekcije",
        status: "Status",
        code: "Kod",
        value: "Vrijednost",
        disabled: "Onemogu\u0107en",
        dynamic: "Dinami\u010Dan",
        normal: "Normalan",
        years: "Godine",
        months: "Meseci",
        days: "Dani",
        hours: "Sati",
        minutes: "Minuti",
        totalRedemptions: "Ukupna Otkupljenja",
        countries: "Zemlje",
        paymentProviders: "Provajderi pla\u0107anja",
        refundReason: "Razlog za povratak",
        fulfillmentProviders: "Ispunjenje Pru\u017Eatelji",
        fulfillmentProvider: "Ispunjenje Pru\u017Eatelj",
        providers: "Pru\u017Eatelji",
        availability: "Dostupnost",
        inventory: "Inventar",
        optional: "Opcionalno",
        note: "Napomena",
        automaticTaxes: "Automatski Porezi",
        taxInclusivePricing: "Cijena koja uklju\u010Duje porez",
        currency: "Valuta",
        address: "Adresa",
        address2: "Stan, apartman, itd.",
        city: "Grad",
        postalCode: "Po\u0161tanski broj",
        country: "Zemlja",
        state: "Dr\u017Eava",
        province: "Pokrajina",
        company: "Kompanija",
        phone: "Telefon",
        metadata: "Metapodaci",
        selectCountry: "Izaberi dr\u017Eavu",
        products: "Proizvodi",
        variants: "Varijante",
        orders: "Naru\u010Divanja",
        account: "Ra\u010Dun",
        total: "Ukupno porud\u017Ebina",
        paidTotal: "Ukupno uhva\u0107eno",
        totalExclTax: "Ukupno bez poreza",
        subtotal: "Me\u0111uzbir",
        shipping: "\u0160aljenje",
        outboundShipping: "Izlazna isporuka",
        returnShipping: "Povratna dostava",
        tax: "Porez",
        created: "Kreiran",
        key: "Klju\u010D",
        customer: "Kupac",
        date: "Datum",
        order: "Redoslijed",
        fulfillment: "Ispunjenje",
        provider: "Pru\u017Ealac",
        payment: "Pla\u0107anje",
        items: "Stavke",
        salesChannel: "Prodajni Kanal",
        region: "Region",
        discount: "Popust",
        role: "Uloga",
        sent: "Poslato",
        salesChannels: "Prodajni kanali",
        product: "Proizvod",
        createdAt: "Kreiran",
        updatedAt: "A\u017Eurirano",
        revokedAt: "Oduzeto na",
        true: "Tako je.",
        false: "La\u017Eno",
        giftCard: "Poklon kartica",
        tag: "Oznaka",
        dateIssued: "Datum izdanja",
        issuedDate: "Datum izdavanja",
        expiryDate: "Datum isteka",
        price: "Cijena",
        priceTemplate: "Cijena {{regionOrCurrency}}",
        height: "Visina",
        width: "\u0160irina",
        length: "Du\u017Eina",
        weight: "Te\u017Eina",
        midCode: "MID kod",
        hsCode: "HS kod",
        ean: "EAN",
        upc: "UPC",
        inventoryQuantity: "Koli\u010Dina zaliha",
        barcode: "Barkod",
        countryOfOrigin: "Zemlja porekla",
        material: "Materijal",
        thumbnail: "Sli\u010Dica",
        sku: "SKU - SKU",
        managedInventory: "Upravljani inventar",
        allowBackorder: "Dozvoli narud\u017Ebinu na \u010Dekanju",
        inStock: "Na skladi\u0161tu",
        location: "Lokacija",
        quantity: "Koli\u010Dina",
        variant: "Varijanta",
        id: "ID",
        parent: "Roditelj",
        minSubtotal: "Min. Ukupno",
        maxSubtotal: "Max. Ukupno",
        shippingProfile: "\u0160aljivi Profil",
        summary: "Sa\u017Eetak",
        details: "Detalji",
        label: "Oznaka",
        rate: "Stopa",
        requiresShipping: "Zahteva isporuku",
        unitPrice: "Jedini\u010Dna cijena",
        startDate: "Datum po\u010Detka",
        endDate: "Krajnji datum",
        draft: "Nacrt",
        values: "Vrijednosti"
      },
      dateTime: {
        years_one: "Godina",
        years_other: "Godine",
        months_one: "Mjesec",
        months_other: "Mjeseci",
        weeks_one: "Nedelja",
        weeks_other: "Nedelje",
        days_one: "Dan",
        days_other: "Dani",
        hours_one: "Sat",
        hours_other: "Sati",
        minutes_one: "Minuta",
        minutes_other: "Minuti",
        seconds_one: "Drugi",
        seconds_other: "Sekunde"
      }
    };
  }
});

// src/i18n/translations/index.ts
var translations_default;
var init_translations = __esm({
  "src/i18n/translations/index.ts"() {
    "use strict";
    init_en();
    init_sr();
    translations_default = {
      sr: {
        translation: sr_default
      },
      en: {
        translation: en_default
      }
    };
  }
});

// src/i18n/config.ts
var defaultI18nOptions;
var init_config = __esm({
  "src/i18n/config.ts"() {
    "use strict";
    init_translations();
    defaultI18nOptions = {
      debug: process.env.NODE_ENV === "development",
      detection: {
        caches: ["cookie", "localStorage", "header"],
        lookupCookie: "lng",
        lookupLocalStorage: "lng",
        order: ["cookie", "localStorage", "header"]
      },
      fallbackLng: "sr",
      interpolation: {
        escapeValue: false
      },
      resources: translations_default,
      supportedLngs: Object.keys(translations_default)
    };
  }
});

// src/components/utilities/i18n/i18n.tsx
var import_i18next, import_i18next_browser_languagedetector, import_react_i18next4, I18n;
var init_i18n = __esm({
  "src/components/utilities/i18n/i18n.tsx"() {
    "use strict";
    import_i18next = __toESM(require("i18next"));
    import_i18next_browser_languagedetector = __toESM(require("i18next-browser-languagedetector"));
    import_react_i18next4 = require("react-i18next");
    init_config();
    I18n = () => {
      if (import_i18next.default.isInitialized) {
        return null;
      }
      import_i18next.default.use(
        new import_i18next_browser_languagedetector.default(null, {
          lookupCookie: "lng",
          lookupLocalStorage: "lng"
        })
      ).use(import_react_i18next4.initReactI18next).init(defaultI18nOptions);
      return null;
    };
  }
});

// src/components/utilities/i18n/index.ts
var init_i18n2 = __esm({
  "src/components/utilities/i18n/index.ts"() {
    "use strict";
    init_i18n();
  }
});

// src/lib/query-client.ts
var import_react_query, MEDUSA_BACKEND_URL, queryClient;
var init_query_client = __esm({
  "src/lib/query-client.ts"() {
    "use strict";
    import_react_query = require("@tanstack/react-query");
    MEDUSA_BACKEND_URL = __BACKEND_URL__ ?? "http://localhost:9000";
    queryClient = new import_react_query.QueryClient({
      defaultOptions: {
        queries: {
          refetchOnWindowFocus: false,
          staleTime: 9e4,
          retry: 1
        }
      }
    });
  }
});

// src/i18n/languages.ts
var import_locale, languages;
var init_languages = __esm({
  "src/i18n/languages.ts"() {
    "use strict";
    import_locale = require("date-fns/locale");
    languages = [
      {
        code: "en",
        display_name: "English",
        ltr: true,
        date_locale: import_locale.enUS
      },
      {
        code: "sr",
        display_name: "Srpski",
        ltr: true,
        date_locale: import_locale.srLatn
      }
    ];
  }
});

// src/lib/client/client.ts
var import_js_sdk2, backendUrl, sdk;
var init_client = __esm({
  "src/lib/client/client.ts"() {
    "use strict";
    import_js_sdk2 = __toESM(require("@medusajs/js-sdk"));
    backendUrl = __BACKEND_URL__ ?? "http://localhost:9000";
    sdk = new import_js_sdk2.default({
      baseUrl: backendUrl,
      auth: {
        type: "session"
      }
    });
    if (typeof window !== "undefined") {
      ;
      window.__sdk = sdk;
    }
  }
});

// src/lib/client/index.ts
var init_client2 = __esm({
  "src/lib/client/index.ts"() {
    "use strict";
    init_client();
  }
});

// src/lib/query-key-factory.ts
var queryKeysFactory;
var init_query_key_factory = __esm({
  "src/lib/query-key-factory.ts"() {
    "use strict";
    queryKeysFactory = (globalKey) => {
      const queryKeyFactory = {
        all: [globalKey],
        lists: () => [...queryKeyFactory.all, "list"],
        list: (query) => [...queryKeyFactory.lists(), { query }],
        details: () => [...queryKeyFactory.all, "detail"],
        detail: (id2, query) => [
          ...queryKeyFactory.details(),
          id2,
          { query }
        ]
      };
      return queryKeyFactory;
    };
  }
});

// src/hooks/api/users.tsx
var import_react_query3, USERS_QUERY_KEY, usersQueryKeys, useMe, useUser, useUsers, useUpdateUser, useDeleteUser;
var init_users = __esm({
  "src/hooks/api/users.tsx"() {
    "use strict";
    import_react_query3 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    USERS_QUERY_KEY = "users";
    usersQueryKeys = {
      ...queryKeysFactory(USERS_QUERY_KEY),
      me: () => [USERS_QUERY_KEY, "me"]
    };
    useMe = (query, options) => {
      const { data, ...rest } = (0, import_react_query3.useQuery)({
        queryFn: () => sdk.admin.user.me(query),
        queryKey: usersQueryKeys.me(),
        ...options
      });
      return {
        ...data,
        ...rest
      };
    };
    useUser = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query3.useQuery)({
        queryFn: () => sdk.admin.user.retrieve(id2, query),
        queryKey: usersQueryKeys.detail(id2),
        ...options
      });
      return { ...data, ...rest };
    };
    useUsers = (query, options) => {
      const { data, ...rest } = (0, import_react_query3.useQuery)({
        queryFn: () => sdk.admin.user.list(query),
        queryKey: usersQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useUpdateUser = (id2, query, options) => {
      return (0, import_react_query3.useMutation)({
        mutationFn: (payload) => sdk.admin.user.update(id2, payload, query),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: usersQueryKeys.detail(id2) });
          queryClient.invalidateQueries({ queryKey: usersQueryKeys.lists() });
          queryClient.invalidateQueries({ queryKey: usersQueryKeys.me() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteUser = (id2, options) => {
      return (0, import_react_query3.useMutation)({
        mutationFn: () => sdk.admin.user.delete(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: usersQueryKeys.detail(id2) });
          queryClient.invalidateQueries({ queryKey: usersQueryKeys.lists() });
          queryClient.invalidateQueries({ queryKey: usersQueryKeys.me() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// ../../../node_modules/@radix-ui/primitive/dist/index.mjs
function composeEventHandlers(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {
  return function handleEvent(event) {
    originalEventHandler?.(event);
    if (checkForDefaultPrevented === false || !event.defaultPrevented) {
      return ourEventHandler?.(event);
    }
  };
}
var init_dist3 = __esm({
  "../../../node_modules/@radix-ui/primitive/dist/index.mjs"() {
    "use strict";
  }
});

// ../../../node_modules/@radix-ui/react-context/dist/index.mjs
function createContext22(rootComponentName, defaultContext) {
  const Context = React4.createContext(defaultContext);
  function Provider4(props) {
    const { children, ...context } = props;
    const value = React4.useMemo(() => context, Object.values(context));
    return /* @__PURE__ */ (0, import_jsx_runtime11.jsx)(Context.Provider, { value, children });
  }
  function useContext22(consumerName) {
    const context = React4.useContext(Context);
    if (context) return context;
    if (defaultContext !== void 0) return defaultContext;
    throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
  }
  Provider4.displayName = rootComponentName + "Provider";
  return [Provider4, useContext22];
}
function createContextScope(scopeName, createContextScopeDeps = []) {
  let defaultContexts = [];
  function createContext32(rootComponentName, defaultContext) {
    const BaseContext = React4.createContext(defaultContext);
    const index2 = defaultContexts.length;
    defaultContexts = [...defaultContexts, defaultContext];
    function Provider4(props) {
      const { scope, children, ...context } = props;
      const Context = scope?.[scopeName][index2] || BaseContext;
      const value = React4.useMemo(() => context, Object.values(context));
      return /* @__PURE__ */ (0, import_jsx_runtime11.jsx)(Context.Provider, { value, children });
    }
    function useContext22(consumerName, scope) {
      const Context = scope?.[scopeName][index2] || BaseContext;
      const context = React4.useContext(Context);
      if (context) return context;
      if (defaultContext !== void 0) return defaultContext;
      throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
    }
    Provider4.displayName = rootComponentName + "Provider";
    return [Provider4, useContext22];
  }
  const createScope = () => {
    const scopeContexts = defaultContexts.map((defaultContext) => {
      return React4.createContext(defaultContext);
    });
    return function useScope(scope) {
      const contexts = scope?.[scopeName] || scopeContexts;
      return React4.useMemo(
        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),
        [scope, contexts]
      );
    };
  };
  createScope.scopeName = scopeName;
  return [createContext32, composeContextScopes(createScope, ...createContextScopeDeps)];
}
function composeContextScopes(...scopes) {
  const baseScope = scopes[0];
  if (scopes.length === 1) return baseScope;
  const createScope = () => {
    const scopeHooks = scopes.map((createScope2) => ({
      useScope: createScope2(),
      scopeName: createScope2.scopeName
    }));
    return function useComposedScopes(overrideScopes) {
      const nextScopes = scopeHooks.reduce((nextScopes2, { useScope, scopeName }) => {
        const scopeProps = useScope(overrideScopes);
        const currentScope = scopeProps[`__scope${scopeName}`];
        return { ...nextScopes2, ...currentScope };
      }, {});
      return React4.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);
    };
  };
  createScope.scopeName = baseScope.scopeName;
  return createScope;
}
var React4, import_jsx_runtime11;
var init_dist4 = __esm({
  "../../../node_modules/@radix-ui/react-context/dist/index.mjs"() {
    "use strict";
    React4 = __toESM(require("react"), 1);
    import_jsx_runtime11 = require("react/jsx-runtime");
  }
});

// ../../../node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs
var React5, useLayoutEffect2;
var init_dist5 = __esm({
  "../../../node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs"() {
    "use strict";
    React5 = __toESM(require("react"), 1);
    useLayoutEffect2 = Boolean(globalThis?.document) ? React5.useLayoutEffect : () => {
    };
  }
});

// ../../../node_modules/@radix-ui/react-id/dist/index.mjs
function useId2(deterministicId) {
  const [id2, setId] = React6.useState(useReactId());
  useLayoutEffect2(() => {
    if (!deterministicId) setId((reactId) => reactId ?? String(count++));
  }, [deterministicId]);
  return deterministicId || (id2 ? `radix-${id2}` : "");
}
var React6, useReactId, count;
var init_dist6 = __esm({
  "../../../node_modules/@radix-ui/react-id/dist/index.mjs"() {
    "use strict";
    React6 = __toESM(require("react"), 1);
    init_dist5();
    useReactId = React6["useId".toString()] || (() => void 0);
    count = 0;
  }
});

// ../../../node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs
function useCallbackRef(callback) {
  const callbackRef = React7.useRef(callback);
  React7.useEffect(() => {
    callbackRef.current = callback;
  });
  return React7.useMemo(() => (...args) => callbackRef.current?.(...args), []);
}
var React7;
var init_dist7 = __esm({
  "../../../node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs"() {
    "use strict";
    React7 = __toESM(require("react"), 1);
  }
});

// ../../../node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs
function useControllableState({
  prop,
  defaultProp,
  onChange = () => {
  }
}) {
  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });
  const isControlled = prop !== void 0;
  const value = isControlled ? prop : uncontrolledProp;
  const handleChange = useCallbackRef(onChange);
  const setValue = React8.useCallback(
    (nextValue) => {
      if (isControlled) {
        const setter = nextValue;
        const value2 = typeof nextValue === "function" ? setter(prop) : nextValue;
        if (value2 !== prop) handleChange(value2);
      } else {
        setUncontrolledProp(nextValue);
      }
    },
    [isControlled, prop, setUncontrolledProp, handleChange]
  );
  return [value, setValue];
}
function useUncontrolledState({
  defaultProp,
  onChange
}) {
  const uncontrolledState = React8.useState(defaultProp);
  const [value] = uncontrolledState;
  const prevValueRef = React8.useRef(value);
  const handleChange = useCallbackRef(onChange);
  React8.useEffect(() => {
    if (prevValueRef.current !== value) {
      handleChange(value);
      prevValueRef.current = value;
    }
  }, [value, prevValueRef, handleChange]);
  return uncontrolledState;
}
var React8;
var init_dist8 = __esm({
  "../../../node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs"() {
    "use strict";
    React8 = __toESM(require("react"), 1);
    init_dist7();
  }
});

// ../../../node_modules/@radix-ui/react-primitive/dist/index.mjs
function dispatchDiscreteCustomEvent(target, event) {
  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));
}
var React9, ReactDOM, import_jsx_runtime12, NODES, Primitive;
var init_dist9 = __esm({
  "../../../node_modules/@radix-ui/react-primitive/dist/index.mjs"() {
    "use strict";
    React9 = __toESM(require("react"), 1);
    ReactDOM = __toESM(require("react-dom"), 1);
    init_dist2();
    import_jsx_runtime12 = require("react/jsx-runtime");
    NODES = [
      "a",
      "button",
      "div",
      "form",
      "h2",
      "h3",
      "img",
      "input",
      "label",
      "li",
      "nav",
      "ol",
      "p",
      "span",
      "svg",
      "ul"
    ];
    Primitive = NODES.reduce((primitive, node) => {
      const Node3 = React9.forwardRef((props, forwardedRef) => {
        const { asChild, ...primitiveProps } = props;
        const Comp = asChild ? Slot : node;
        if (typeof window !== "undefined") {
          window[Symbol.for("radix-ui")] = true;
        }
        return /* @__PURE__ */ (0, import_jsx_runtime12.jsx)(Comp, { ...primitiveProps, ref: forwardedRef });
      });
      Node3.displayName = `Primitive.${node}`;
      return { ...primitive, [node]: Node3 };
    }, {});
  }
});

// ../../../node_modules/@radix-ui/react-dismissable-layer/node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs
function useEscapeKeydown(onEscapeKeyDownProp, ownerDocument = globalThis?.document) {
  const onEscapeKeyDown = useCallbackRef(onEscapeKeyDownProp);
  React10.useEffect(() => {
    const handleKeyDown = (event) => {
      if (event.key === "Escape") {
        onEscapeKeyDown(event);
      }
    };
    ownerDocument.addEventListener("keydown", handleKeyDown, { capture: true });
    return () => ownerDocument.removeEventListener("keydown", handleKeyDown, { capture: true });
  }, [onEscapeKeyDown, ownerDocument]);
}
var React10;
var init_dist10 = __esm({
  "../../../node_modules/@radix-ui/react-dismissable-layer/node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs"() {
    "use strict";
    React10 = __toESM(require("react"), 1);
    init_dist7();
  }
});

// ../../../node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs
function usePointerDownOutside(onPointerDownOutside, ownerDocument = globalThis?.document) {
  const handlePointerDownOutside = useCallbackRef(onPointerDownOutside);
  const isPointerInsideReactTreeRef = React11.useRef(false);
  const handleClickRef = React11.useRef(() => {
  });
  React11.useEffect(() => {
    const handlePointerDown = (event) => {
      if (event.target && !isPointerInsideReactTreeRef.current) {
        let handleAndDispatchPointerDownOutsideEvent2 = function() {
          handleAndDispatchCustomEvent(
            POINTER_DOWN_OUTSIDE,
            handlePointerDownOutside,
            eventDetail,
            { discrete: true }
          );
        };
        var handleAndDispatchPointerDownOutsideEvent = handleAndDispatchPointerDownOutsideEvent2;
        const eventDetail = { originalEvent: event };
        if (event.pointerType === "touch") {
          ownerDocument.removeEventListener("click", handleClickRef.current);
          handleClickRef.current = handleAndDispatchPointerDownOutsideEvent2;
          ownerDocument.addEventListener("click", handleClickRef.current, { once: true });
        } else {
          handleAndDispatchPointerDownOutsideEvent2();
        }
      } else {
        ownerDocument.removeEventListener("click", handleClickRef.current);
      }
      isPointerInsideReactTreeRef.current = false;
    };
    const timerId = window.setTimeout(() => {
      ownerDocument.addEventListener("pointerdown", handlePointerDown);
    }, 0);
    return () => {
      window.clearTimeout(timerId);
      ownerDocument.removeEventListener("pointerdown", handlePointerDown);
      ownerDocument.removeEventListener("click", handleClickRef.current);
    };
  }, [ownerDocument, handlePointerDownOutside]);
  return {
    // ensures we check React component tree (not just DOM tree)
    onPointerDownCapture: () => isPointerInsideReactTreeRef.current = true
  };
}
function useFocusOutside(onFocusOutside, ownerDocument = globalThis?.document) {
  const handleFocusOutside = useCallbackRef(onFocusOutside);
  const isFocusInsideReactTreeRef = React11.useRef(false);
  React11.useEffect(() => {
    const handleFocus = (event) => {
      if (event.target && !isFocusInsideReactTreeRef.current) {
        const eventDetail = { originalEvent: event };
        handleAndDispatchCustomEvent(FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {
          discrete: false
        });
      }
    };
    ownerDocument.addEventListener("focusin", handleFocus);
    return () => ownerDocument.removeEventListener("focusin", handleFocus);
  }, [ownerDocument, handleFocusOutside]);
  return {
    onFocusCapture: () => isFocusInsideReactTreeRef.current = true,
    onBlurCapture: () => isFocusInsideReactTreeRef.current = false
  };
}
function dispatchUpdate() {
  const event = new CustomEvent(CONTEXT_UPDATE);
  document.dispatchEvent(event);
}
function handleAndDispatchCustomEvent(name, handler, detail, { discrete }) {
  const target = detail.originalEvent.target;
  const event = new CustomEvent(name, { bubbles: false, cancelable: true, detail });
  if (handler) target.addEventListener(name, handler, { once: true });
  if (discrete) {
    dispatchDiscreteCustomEvent(target, event);
  } else {
    target.dispatchEvent(event);
  }
}
var React11, import_jsx_runtime13, DISMISSABLE_LAYER_NAME, CONTEXT_UPDATE, POINTER_DOWN_OUTSIDE, FOCUS_OUTSIDE, originalBodyPointerEvents, DismissableLayerContext, DismissableLayer, BRANCH_NAME, DismissableLayerBranch;
var init_dist11 = __esm({
  "../../../node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs"() {
    "use strict";
    "use client";
    React11 = __toESM(require("react"), 1);
    init_dist3();
    init_dist9();
    init_dist();
    init_dist7();
    init_dist10();
    import_jsx_runtime13 = require("react/jsx-runtime");
    DISMISSABLE_LAYER_NAME = "DismissableLayer";
    CONTEXT_UPDATE = "dismissableLayer.update";
    POINTER_DOWN_OUTSIDE = "dismissableLayer.pointerDownOutside";
    FOCUS_OUTSIDE = "dismissableLayer.focusOutside";
    DismissableLayerContext = React11.createContext({
      layers: /* @__PURE__ */ new Set(),
      layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(),
      branches: /* @__PURE__ */ new Set()
    });
    DismissableLayer = React11.forwardRef(
      (props, forwardedRef) => {
        const {
          disableOutsidePointerEvents = false,
          onEscapeKeyDown,
          onPointerDownOutside,
          onFocusOutside,
          onInteractOutside,
          onDismiss,
          ...layerProps
        } = props;
        const context = React11.useContext(DismissableLayerContext);
        const [node, setNode] = React11.useState(null);
        const ownerDocument = node?.ownerDocument ?? globalThis?.document;
        const [, force] = React11.useState({});
        const composedRefs = useComposedRefs(forwardedRef, (node2) => setNode(node2));
        const layers = Array.from(context.layers);
        const [highestLayerWithOutsidePointerEventsDisabled] = [...context.layersWithOutsidePointerEventsDisabled].slice(-1);
        const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled);
        const index2 = node ? layers.indexOf(node) : -1;
        const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;
        const isPointerEventsEnabled = index2 >= highestLayerWithOutsidePointerEventsDisabledIndex;
        const pointerDownOutside = usePointerDownOutside((event) => {
          const target = event.target;
          const isPointerDownOnBranch = [...context.branches].some((branch) => branch.contains(target));
          if (!isPointerEventsEnabled || isPointerDownOnBranch) return;
          onPointerDownOutside?.(event);
          onInteractOutside?.(event);
          if (!event.defaultPrevented) onDismiss?.();
        }, ownerDocument);
        const focusOutside = useFocusOutside((event) => {
          const target = event.target;
          const isFocusInBranch = [...context.branches].some((branch) => branch.contains(target));
          if (isFocusInBranch) return;
          onFocusOutside?.(event);
          onInteractOutside?.(event);
          if (!event.defaultPrevented) onDismiss?.();
        }, ownerDocument);
        useEscapeKeydown((event) => {
          const isHighestLayer = index2 === context.layers.size - 1;
          if (!isHighestLayer) return;
          onEscapeKeyDown?.(event);
          if (!event.defaultPrevented && onDismiss) {
            event.preventDefault();
            onDismiss();
          }
        }, ownerDocument);
        React11.useEffect(() => {
          if (!node) return;
          if (disableOutsidePointerEvents) {
            if (context.layersWithOutsidePointerEventsDisabled.size === 0) {
              originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;
              ownerDocument.body.style.pointerEvents = "none";
            }
            context.layersWithOutsidePointerEventsDisabled.add(node);
          }
          context.layers.add(node);
          dispatchUpdate();
          return () => {
            if (disableOutsidePointerEvents && context.layersWithOutsidePointerEventsDisabled.size === 1) {
              ownerDocument.body.style.pointerEvents = originalBodyPointerEvents;
            }
          };
        }, [node, ownerDocument, disableOutsidePointerEvents, context]);
        React11.useEffect(() => {
          return () => {
            if (!node) return;
            context.layers.delete(node);
            context.layersWithOutsidePointerEventsDisabled.delete(node);
            dispatchUpdate();
          };
        }, [node, context]);
        React11.useEffect(() => {
          const handleUpdate = () => force({});
          document.addEventListener(CONTEXT_UPDATE, handleUpdate);
          return () => document.removeEventListener(CONTEXT_UPDATE, handleUpdate);
        }, []);
        return /* @__PURE__ */ (0, import_jsx_runtime13.jsx)(
          Primitive.div,
          {
            ...layerProps,
            ref: composedRefs,
            style: {
              pointerEvents: isBodyPointerEventsDisabled ? isPointerEventsEnabled ? "auto" : "none" : void 0,
              ...props.style
            },
            onFocusCapture: composeEventHandlers(props.onFocusCapture, focusOutside.onFocusCapture),
            onBlurCapture: composeEventHandlers(props.onBlurCapture, focusOutside.onBlurCapture),
            onPointerDownCapture: composeEventHandlers(
              props.onPointerDownCapture,
              pointerDownOutside.onPointerDownCapture
            )
          }
        );
      }
    );
    DismissableLayer.displayName = DISMISSABLE_LAYER_NAME;
    BRANCH_NAME = "DismissableLayerBranch";
    DismissableLayerBranch = React11.forwardRef((props, forwardedRef) => {
      const context = React11.useContext(DismissableLayerContext);
      const ref = React11.useRef(null);
      const composedRefs = useComposedRefs(forwardedRef, ref);
      React11.useEffect(() => {
        const node = ref.current;
        if (node) {
          context.branches.add(node);
          return () => {
            context.branches.delete(node);
          };
        }
      }, [context.branches]);
      return /* @__PURE__ */ (0, import_jsx_runtime13.jsx)(Primitive.div, { ...props, ref: composedRefs });
    });
    DismissableLayerBranch.displayName = BRANCH_NAME;
  }
});

// ../../../node_modules/@radix-ui/react-focus-scope/dist/index.mjs
function focusFirst(candidates, { select = false } = {}) {
  const previouslyFocusedElement = document.activeElement;
  for (const candidate of candidates) {
    focus(candidate, { select });
    if (document.activeElement !== previouslyFocusedElement) return;
  }
}
function getTabbableEdges(container) {
  const candidates = getTabbableCandidates(container);
  const first = findVisible(candidates, container);
  const last = findVisible(candidates.reverse(), container);
  return [first, last];
}
function getTabbableCandidates(container) {
  const nodes = [];
  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (node) => {
      const isHiddenInput = node.tagName === "INPUT" && node.type === "hidden";
      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;
      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  while (walker.nextNode()) nodes.push(walker.currentNode);
  return nodes;
}
function findVisible(elements, container) {
  for (const element of elements) {
    if (!isHidden(element, { upTo: container })) return element;
  }
}
function isHidden(node, { upTo }) {
  if (getComputedStyle(node).visibility === "hidden") return true;
  while (node) {
    if (upTo !== void 0 && node === upTo) return false;
    if (getComputedStyle(node).display === "none") return true;
    node = node.parentElement;
  }
  return false;
}
function isSelectableInput(element) {
  return element instanceof HTMLInputElement && "select" in element;
}
function focus(element, { select = false } = {}) {
  if (element && element.focus) {
    const previouslyFocusedElement = document.activeElement;
    element.focus({ preventScroll: true });
    if (element !== previouslyFocusedElement && isSelectableInput(element) && select)
      element.select();
  }
}
function createFocusScopesStack() {
  let stack = [];
  return {
    add(focusScope) {
      const activeFocusScope = stack[0];
      if (focusScope !== activeFocusScope) {
        activeFocusScope?.pause();
      }
      stack = arrayRemove(stack, focusScope);
      stack.unshift(focusScope);
    },
    remove(focusScope) {
      stack = arrayRemove(stack, focusScope);
      stack[0]?.resume();
    }
  };
}
function arrayRemove(array17, item) {
  const updatedArray = [...array17];
  const index2 = updatedArray.indexOf(item);
  if (index2 !== -1) {
    updatedArray.splice(index2, 1);
  }
  return updatedArray;
}
function removeLinks(items) {
  return items.filter((item) => item.tagName !== "A");
}
var React12, import_jsx_runtime14, AUTOFOCUS_ON_MOUNT, AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS, FOCUS_SCOPE_NAME, FocusScope, focusScopesStack;
var init_dist12 = __esm({
  "../../../node_modules/@radix-ui/react-focus-scope/dist/index.mjs"() {
    "use strict";
    "use client";
    React12 = __toESM(require("react"), 1);
    init_dist();
    init_dist9();
    init_dist7();
    import_jsx_runtime14 = require("react/jsx-runtime");
    AUTOFOCUS_ON_MOUNT = "focusScope.autoFocusOnMount";
    AUTOFOCUS_ON_UNMOUNT = "focusScope.autoFocusOnUnmount";
    EVENT_OPTIONS = { bubbles: false, cancelable: true };
    FOCUS_SCOPE_NAME = "FocusScope";
    FocusScope = React12.forwardRef((props, forwardedRef) => {
      const {
        loop = false,
        trapped = false,
        onMountAutoFocus: onMountAutoFocusProp,
        onUnmountAutoFocus: onUnmountAutoFocusProp,
        ...scopeProps
      } = props;
      const [container, setContainer] = React12.useState(null);
      const onMountAutoFocus = useCallbackRef(onMountAutoFocusProp);
      const onUnmountAutoFocus = useCallbackRef(onUnmountAutoFocusProp);
      const lastFocusedElementRef = React12.useRef(null);
      const composedRefs = useComposedRefs(forwardedRef, (node) => setContainer(node));
      const focusScope = React12.useRef({
        paused: false,
        pause() {
          this.paused = true;
        },
        resume() {
          this.paused = false;
        }
      }).current;
      React12.useEffect(() => {
        if (trapped) {
          let handleFocusIn2 = function(event) {
            if (focusScope.paused || !container) return;
            const target = event.target;
            if (container.contains(target)) {
              lastFocusedElementRef.current = target;
            } else {
              focus(lastFocusedElementRef.current, { select: true });
            }
          }, handleFocusOut2 = function(event) {
            if (focusScope.paused || !container) return;
            const relatedTarget = event.relatedTarget;
            if (relatedTarget === null) return;
            if (!container.contains(relatedTarget)) {
              focus(lastFocusedElementRef.current, { select: true });
            }
          }, handleMutations2 = function(mutations) {
            const focusedElement = document.activeElement;
            if (focusedElement !== document.body) return;
            for (const mutation of mutations) {
              if (mutation.removedNodes.length > 0) focus(container);
            }
          };
          var handleFocusIn = handleFocusIn2, handleFocusOut = handleFocusOut2, handleMutations = handleMutations2;
          document.addEventListener("focusin", handleFocusIn2);
          document.addEventListener("focusout", handleFocusOut2);
          const mutationObserver = new MutationObserver(handleMutations2);
          if (container) mutationObserver.observe(container, { childList: true, subtree: true });
          return () => {
            document.removeEventListener("focusin", handleFocusIn2);
            document.removeEventListener("focusout", handleFocusOut2);
            mutationObserver.disconnect();
          };
        }
      }, [trapped, container, focusScope.paused]);
      React12.useEffect(() => {
        if (container) {
          focusScopesStack.add(focusScope);
          const previouslyFocusedElement = document.activeElement;
          const hasFocusedCandidate = container.contains(previouslyFocusedElement);
          if (!hasFocusedCandidate) {
            const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS);
            container.addEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);
            container.dispatchEvent(mountEvent);
            if (!mountEvent.defaultPrevented) {
              focusFirst(removeLinks(getTabbableCandidates(container)), { select: true });
              if (document.activeElement === previouslyFocusedElement) {
                focus(container);
              }
            }
          }
          return () => {
            container.removeEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);
            setTimeout(() => {
              const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS);
              container.addEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);
              container.dispatchEvent(unmountEvent);
              if (!unmountEvent.defaultPrevented) {
                focus(previouslyFocusedElement ?? document.body, { select: true });
              }
              container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);
              focusScopesStack.remove(focusScope);
            }, 0);
          };
        }
      }, [container, onMountAutoFocus, onUnmountAutoFocus, focusScope]);
      const handleKeyDown = React12.useCallback(
        (event) => {
          if (!loop && !trapped) return;
          if (focusScope.paused) return;
          const isTabKey = event.key === "Tab" && !event.altKey && !event.ctrlKey && !event.metaKey;
          const focusedElement = document.activeElement;
          if (isTabKey && focusedElement) {
            const container2 = event.currentTarget;
            const [first, last] = getTabbableEdges(container2);
            const hasTabbableElementsInside = first && last;
            if (!hasTabbableElementsInside) {
              if (focusedElement === container2) event.preventDefault();
            } else {
              if (!event.shiftKey && focusedElement === last) {
                event.preventDefault();
                if (loop) focus(first, { select: true });
              } else if (event.shiftKey && focusedElement === first) {
                event.preventDefault();
                if (loop) focus(last, { select: true });
              }
            }
          }
        },
        [loop, trapped, focusScope.paused]
      );
      return /* @__PURE__ */ (0, import_jsx_runtime14.jsx)(Primitive.div, { tabIndex: -1, ...scopeProps, ref: composedRefs, onKeyDown: handleKeyDown });
    });
    FocusScope.displayName = FOCUS_SCOPE_NAME;
    focusScopesStack = createFocusScopesStack();
  }
});

// ../../../node_modules/@radix-ui/react-portal/dist/index.mjs
var React13, import_react_dom, import_jsx_runtime15, PORTAL_NAME, Portal;
var init_dist13 = __esm({
  "../../../node_modules/@radix-ui/react-portal/dist/index.mjs"() {
    "use strict";
    "use client";
    React13 = __toESM(require("react"), 1);
    import_react_dom = __toESM(require("react-dom"), 1);
    init_dist9();
    init_dist5();
    import_jsx_runtime15 = require("react/jsx-runtime");
    PORTAL_NAME = "Portal";
    Portal = React13.forwardRef((props, forwardedRef) => {
      const { container: containerProp, ...portalProps } = props;
      const [mounted, setMounted] = React13.useState(false);
      useLayoutEffect2(() => setMounted(true), []);
      const container = containerProp || mounted && globalThis?.document?.body;
      return container ? import_react_dom.default.createPortal(/* @__PURE__ */ (0, import_jsx_runtime15.jsx)(Primitive.div, { ...portalProps, ref: forwardedRef }), container) : null;
    });
    Portal.displayName = PORTAL_NAME;
  }
});

// ../../../node_modules/@radix-ui/react-presence/dist/index.mjs
function useStateMachine(initialState, machine) {
  return React14.useReducer((state, event) => {
    const nextState = machine[state][event];
    return nextState ?? state;
  }, initialState);
}
function usePresence(present) {
  const [node, setNode] = React22.useState();
  const stylesRef = React22.useRef({});
  const prevPresentRef = React22.useRef(present);
  const prevAnimationNameRef = React22.useRef("none");
  const initialState = present ? "mounted" : "unmounted";
  const [state, send] = useStateMachine(initialState, {
    mounted: {
      UNMOUNT: "unmounted",
      ANIMATION_OUT: "unmountSuspended"
    },
    unmountSuspended: {
      MOUNT: "mounted",
      ANIMATION_END: "unmounted"
    },
    unmounted: {
      MOUNT: "mounted"
    }
  });
  React22.useEffect(() => {
    const currentAnimationName = getAnimationName(stylesRef.current);
    prevAnimationNameRef.current = state === "mounted" ? currentAnimationName : "none";
  }, [state]);
  useLayoutEffect2(() => {
    const styles = stylesRef.current;
    const wasPresent = prevPresentRef.current;
    const hasPresentChanged = wasPresent !== present;
    if (hasPresentChanged) {
      const prevAnimationName = prevAnimationNameRef.current;
      const currentAnimationName = getAnimationName(styles);
      if (present) {
        send("MOUNT");
      } else if (currentAnimationName === "none" || styles?.display === "none") {
        send("UNMOUNT");
      } else {
        const isAnimating = prevAnimationName !== currentAnimationName;
        if (wasPresent && isAnimating) {
          send("ANIMATION_OUT");
        } else {
          send("UNMOUNT");
        }
      }
      prevPresentRef.current = present;
    }
  }, [present, send]);
  useLayoutEffect2(() => {
    if (node) {
      const handleAnimationEnd = (event) => {
        const currentAnimationName = getAnimationName(stylesRef.current);
        const isCurrentAnimation = currentAnimationName.includes(event.animationName);
        if (event.target === node && isCurrentAnimation) {
          ReactDOM3.flushSync(() => send("ANIMATION_END"));
        }
      };
      const handleAnimationStart = (event) => {
        if (event.target === node) {
          prevAnimationNameRef.current = getAnimationName(stylesRef.current);
        }
      };
      node.addEventListener("animationstart", handleAnimationStart);
      node.addEventListener("animationcancel", handleAnimationEnd);
      node.addEventListener("animationend", handleAnimationEnd);
      return () => {
        node.removeEventListener("animationstart", handleAnimationStart);
        node.removeEventListener("animationcancel", handleAnimationEnd);
        node.removeEventListener("animationend", handleAnimationEnd);
      };
    } else {
      send("ANIMATION_END");
    }
  }, [node, send]);
  return {
    isPresent: ["mounted", "unmountSuspended"].includes(state),
    ref: React22.useCallback((node2) => {
      if (node2) stylesRef.current = getComputedStyle(node2);
      setNode(node2);
    }, [])
  };
}
function getAnimationName(styles) {
  return styles?.animationName || "none";
}
function getElementRef2(element) {
  let getter = Object.getOwnPropertyDescriptor(element.props, "ref")?.get;
  let mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
  if (mayWarn) {
    return element.ref;
  }
  getter = Object.getOwnPropertyDescriptor(element, "ref")?.get;
  mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
  if (mayWarn) {
    return element.props.ref;
  }
  return element.props.ref || element.ref;
}
var React22, ReactDOM3, React14, Presence;
var init_dist14 = __esm({
  "../../../node_modules/@radix-ui/react-presence/dist/index.mjs"() {
    "use strict";
    "use client";
    React22 = __toESM(require("react"), 1);
    ReactDOM3 = __toESM(require("react-dom"), 1);
    init_dist();
    init_dist5();
    React14 = __toESM(require("react"), 1);
    Presence = (props) => {
      const { present, children } = props;
      const presence = usePresence(present);
      const child = typeof children === "function" ? children({ present: presence.isPresent }) : React22.Children.only(children);
      const ref = useComposedRefs(presence.ref, getElementRef2(child));
      const forceMount = typeof children === "function";
      return forceMount || presence.isPresent ? React22.cloneElement(child, { ref }) : null;
    };
    Presence.displayName = "Presence";
  }
});

// ../../../node_modules/@radix-ui/react-focus-guards/dist/index.mjs
function useFocusGuards() {
  React15.useEffect(() => {
    const edgeGuards = document.querySelectorAll("[data-radix-focus-guard]");
    document.body.insertAdjacentElement("afterbegin", edgeGuards[0] ?? createFocusGuard());
    document.body.insertAdjacentElement("beforeend", edgeGuards[1] ?? createFocusGuard());
    count2++;
    return () => {
      if (count2 === 1) {
        document.querySelectorAll("[data-radix-focus-guard]").forEach((node) => node.remove());
      }
      count2--;
    };
  }, []);
}
function createFocusGuard() {
  const element = document.createElement("span");
  element.setAttribute("data-radix-focus-guard", "");
  element.tabIndex = 0;
  element.style.cssText = "outline: none; opacity: 0; position: fixed; pointer-events: none";
  return element;
}
var React15, count2;
var init_dist15 = __esm({
  "../../../node_modules/@radix-ui/react-focus-guards/dist/index.mjs"() {
    "use strict";
    "use client";
    React15 = __toESM(require("react"), 1);
    count2 = 0;
  }
});

// ../../../node_modules/tslib/tslib.es6.mjs
function __rest(s, e) {
  var t4 = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
    t4[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t4[p[i]] = s[p[i]];
    }
  return t4;
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
    if (ar || !(i in from)) {
      if (!ar) ar = Array.prototype.slice.call(from, 0, i);
      ar[i] = from[i];
    }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
}
var __assign;
var init_tslib_es6 = __esm({
  "../../../node_modules/tslib/tslib.es6.mjs"() {
    "use strict";
    __assign = function() {
      __assign = Object.assign || function __assign2(t4) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t4[p] = s[p];
        }
        return t4;
      };
      return __assign.apply(this, arguments);
    };
  }
});

// ../../../node_modules/react-remove-scroll-bar/dist/es2015/constants.js
var zeroRightClassName, fullWidthClassName, noScrollbarsClassName, removedBarSizeVariable;
var init_constants = __esm({
  "../../../node_modules/react-remove-scroll-bar/dist/es2015/constants.js"() {
    "use strict";
    zeroRightClassName = "right-scroll-bar-position";
    fullWidthClassName = "width-before-scroll-bar";
    noScrollbarsClassName = "with-scroll-bars-hidden";
    removedBarSizeVariable = "--removed-body-scroll-bar-size";
  }
});

// ../../../node_modules/use-callback-ref/dist/es2015/assignRef.js
function assignRef(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
  return ref;
}
var init_assignRef = __esm({
  "../../../node_modules/use-callback-ref/dist/es2015/assignRef.js"() {
    "use strict";
  }
});

// ../../../node_modules/use-callback-ref/dist/es2015/useRef.js
function useCallbackRef2(initialValue, callback) {
  var ref = (0, import_react8.useState)(function() {
    return {
      // value
      value: initialValue,
      // last callback
      callback,
      // "memoized" public interface
      facade: {
        get current() {
          return ref.value;
        },
        set current(value) {
          var last = ref.value;
          if (last !== value) {
            ref.value = value;
            ref.callback(value, last);
          }
        }
      }
    };
  })[0];
  ref.callback = callback;
  return ref.facade;
}
var import_react8;
var init_useRef = __esm({
  "../../../node_modules/use-callback-ref/dist/es2015/useRef.js"() {
    "use strict";
    import_react8 = require("react");
  }
});

// ../../../node_modules/use-callback-ref/dist/es2015/useMergeRef.js
function useMergeRefs(refs, defaultValue) {
  var callbackRef = useCallbackRef2(defaultValue || null, function(newValue) {
    return refs.forEach(function(ref) {
      return assignRef(ref, newValue);
    });
  });
  useIsomorphicLayoutEffect(function() {
    var oldValue = currentValues.get(callbackRef);
    if (oldValue) {
      var prevRefs_1 = new Set(oldValue);
      var nextRefs_1 = new Set(refs);
      var current_1 = callbackRef.current;
      prevRefs_1.forEach(function(ref) {
        if (!nextRefs_1.has(ref)) {
          assignRef(ref, null);
        }
      });
      nextRefs_1.forEach(function(ref) {
        if (!prevRefs_1.has(ref)) {
          assignRef(ref, current_1);
        }
      });
    }
    currentValues.set(callbackRef, refs);
  }, [refs]);
  return callbackRef;
}
var React16, useIsomorphicLayoutEffect, currentValues;
var init_useMergeRef = __esm({
  "../../../node_modules/use-callback-ref/dist/es2015/useMergeRef.js"() {
    "use strict";
    React16 = __toESM(require("react"));
    init_assignRef();
    init_useRef();
    useIsomorphicLayoutEffect = typeof window !== "undefined" ? React16.useLayoutEffect : React16.useEffect;
    currentValues = /* @__PURE__ */ new WeakMap();
  }
});

// ../../../node_modules/use-callback-ref/dist/es2015/index.js
var init_es2015 = __esm({
  "../../../node_modules/use-callback-ref/dist/es2015/index.js"() {
    "use strict";
    init_useMergeRef();
  }
});

// ../../../node_modules/use-sidecar/dist/es2015/medium.js
function ItoI(a) {
  return a;
}
function innerCreateMedium(defaults, middleware) {
  if (middleware === void 0) {
    middleware = ItoI;
  }
  var buffer = [];
  var assigned = false;
  var medium = {
    read: function() {
      if (assigned) {
        throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
      }
      if (buffer.length) {
        return buffer[buffer.length - 1];
      }
      return defaults;
    },
    useMedium: function(data) {
      var item = middleware(data, assigned);
      buffer.push(item);
      return function() {
        buffer = buffer.filter(function(x) {
          return x !== item;
        });
      };
    },
    assignSyncMedium: function(cb) {
      assigned = true;
      while (buffer.length) {
        var cbs = buffer;
        buffer = [];
        cbs.forEach(cb);
      }
      buffer = {
        push: function(x) {
          return cb(x);
        },
        filter: function() {
          return buffer;
        }
      };
    },
    assignMedium: function(cb) {
      assigned = true;
      var pendingQueue = [];
      if (buffer.length) {
        var cbs = buffer;
        buffer = [];
        cbs.forEach(cb);
        pendingQueue = buffer;
      }
      var executeQueue = function() {
        var cbs2 = pendingQueue;
        pendingQueue = [];
        cbs2.forEach(cb);
      };
      var cycle = function() {
        return Promise.resolve().then(executeQueue);
      };
      cycle();
      buffer = {
        push: function(x) {
          pendingQueue.push(x);
          cycle();
        },
        filter: function(filter) {
          pendingQueue = pendingQueue.filter(filter);
          return buffer;
        }
      };
    }
  };
  return medium;
}
function createSidecarMedium(options) {
  if (options === void 0) {
    options = {};
  }
  var medium = innerCreateMedium(null);
  medium.options = __assign({ async: true, ssr: false }, options);
  return medium;
}
var init_medium = __esm({
  "../../../node_modules/use-sidecar/dist/es2015/medium.js"() {
    "use strict";
    init_tslib_es6();
  }
});

// ../../../node_modules/use-sidecar/dist/es2015/exports.js
function exportSidecar(medium, exported) {
  medium.useMedium(exported);
  return SideCar;
}
var React17, SideCar;
var init_exports = __esm({
  "../../../node_modules/use-sidecar/dist/es2015/exports.js"() {
    "use strict";
    init_tslib_es6();
    React17 = __toESM(require("react"));
    SideCar = function(_a) {
      var sideCar = _a.sideCar, rest = __rest(_a, ["sideCar"]);
      if (!sideCar) {
        throw new Error("Sidecar: please provide `sideCar` property to import the right car");
      }
      var Target = sideCar.read();
      if (!Target) {
        throw new Error("Sidecar medium not found");
      }
      return React17.createElement(Target, __assign({}, rest));
    };
    SideCar.isSideCarExport = true;
  }
});

// ../../../node_modules/use-sidecar/dist/es2015/index.js
var init_es20152 = __esm({
  "../../../node_modules/use-sidecar/dist/es2015/index.js"() {
    "use strict";
    init_medium();
    init_exports();
  }
});

// ../../../node_modules/react-remove-scroll/dist/es2015/medium.js
var effectCar;
var init_medium2 = __esm({
  "../../../node_modules/react-remove-scroll/dist/es2015/medium.js"() {
    "use strict";
    init_es20152();
    effectCar = createSidecarMedium();
  }
});

// ../../../node_modules/react-remove-scroll/dist/es2015/UI.js
var React18, nothing, RemoveScroll;
var init_UI = __esm({
  "../../../node_modules/react-remove-scroll/dist/es2015/UI.js"() {
    "use strict";
    init_tslib_es6();
    React18 = __toESM(require("react"));
    init_constants();
    init_es2015();
    init_medium2();
    nothing = function() {
      return;
    };
    RemoveScroll = React18.forwardRef(function(props, parentRef) {
      var ref = React18.useRef(null);
      var _a = React18.useState({
        onScrollCapture: nothing,
        onWheelCapture: nothing,
        onTouchMoveCapture: nothing
      }), callbacks = _a[0], setCallbacks = _a[1];
      var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container102 = _b === void 0 ? "div" : _b, gapMode = props.gapMode, rest = __rest(props, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as", "gapMode"]);
      var SideCar2 = sideCar;
      var containerRef = useMergeRefs([ref, parentRef]);
      var containerProps = __assign(__assign({}, rest), callbacks);
      return React18.createElement(
        React18.Fragment,
        null,
        enabled && React18.createElement(SideCar2, { sideCar: effectCar, removeScrollBar, shards, noIsolation, inert, setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref, gapMode }),
        forwardProps ? React18.cloneElement(React18.Children.only(children), __assign(__assign({}, containerProps), { ref: containerRef })) : React18.createElement(Container102, __assign({}, containerProps, { className, ref: containerRef }), children)
      );
    });
    RemoveScroll.defaultProps = {
      enabled: true,
      removeScrollBar: true,
      inert: false
    };
    RemoveScroll.classNames = {
      fullWidth: fullWidthClassName,
      zeroRight: zeroRightClassName
    };
  }
});

// ../../../node_modules/get-nonce/dist/es2015/index.js
var currentNonce, getNonce;
var init_es20153 = __esm({
  "../../../node_modules/get-nonce/dist/es2015/index.js"() {
    "use strict";
    getNonce = function() {
      if (currentNonce) {
        return currentNonce;
      }
      if (typeof __webpack_nonce__ !== "undefined") {
        return __webpack_nonce__;
      }
      return void 0;
    };
  }
});

// ../../../node_modules/react-style-singleton/dist/es2015/singleton.js
function makeStyleTag() {
  if (!document)
    return null;
  var tag = document.createElement("style");
  tag.type = "text/css";
  var nonce = getNonce();
  if (nonce) {
    tag.setAttribute("nonce", nonce);
  }
  return tag;
}
function injectStyles(tag, css) {
  if (tag.styleSheet) {
    tag.styleSheet.cssText = css;
  } else {
    tag.appendChild(document.createTextNode(css));
  }
}
function insertStyleTag(tag) {
  var head = document.head || document.getElementsByTagName("head")[0];
  head.appendChild(tag);
}
var stylesheetSingleton;
var init_singleton = __esm({
  "../../../node_modules/react-style-singleton/dist/es2015/singleton.js"() {
    "use strict";
    init_es20153();
    stylesheetSingleton = function() {
      var counter = 0;
      var stylesheet = null;
      return {
        add: function(style) {
          if (counter == 0) {
            if (stylesheet = makeStyleTag()) {
              injectStyles(stylesheet, style);
              insertStyleTag(stylesheet);
            }
          }
          counter++;
        },
        remove: function() {
          counter--;
          if (!counter && stylesheet) {
            stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet);
            stylesheet = null;
          }
        }
      };
    };
  }
});

// ../../../node_modules/react-style-singleton/dist/es2015/hook.js
var React19, styleHookSingleton;
var init_hook = __esm({
  "../../../node_modules/react-style-singleton/dist/es2015/hook.js"() {
    "use strict";
    React19 = __toESM(require("react"));
    init_singleton();
    styleHookSingleton = function() {
      var sheet = stylesheetSingleton();
      return function(styles, isDynamic) {
        React19.useEffect(function() {
          sheet.add(styles);
          return function() {
            sheet.remove();
          };
        }, [styles && isDynamic]);
      };
    };
  }
});

// ../../../node_modules/react-style-singleton/dist/es2015/component.js
var styleSingleton;
var init_component = __esm({
  "../../../node_modules/react-style-singleton/dist/es2015/component.js"() {
    "use strict";
    init_hook();
    styleSingleton = function() {
      var useStyle = styleHookSingleton();
      var Sheet = function(_a) {
        var styles = _a.styles, dynamic = _a.dynamic;
        useStyle(styles, dynamic);
        return null;
      };
      return Sheet;
    };
  }
});

// ../../../node_modules/react-style-singleton/dist/es2015/index.js
var init_es20154 = __esm({
  "../../../node_modules/react-style-singleton/dist/es2015/index.js"() {
    "use strict";
    init_component();
    init_singleton();
    init_hook();
  }
});

// ../../../node_modules/react-remove-scroll-bar/dist/es2015/utils.js
var zeroGap, parse, getOffset, getGapWidth;
var init_utils4 = __esm({
  "../../../node_modules/react-remove-scroll-bar/dist/es2015/utils.js"() {
    "use strict";
    zeroGap = {
      left: 0,
      top: 0,
      right: 0,
      gap: 0
    };
    parse = function(x) {
      return parseInt(x || "", 10) || 0;
    };
    getOffset = function(gapMode) {
      var cs = window.getComputedStyle(document.body);
      var left = cs[gapMode === "padding" ? "paddingLeft" : "marginLeft"];
      var top = cs[gapMode === "padding" ? "paddingTop" : "marginTop"];
      var right = cs[gapMode === "padding" ? "paddingRight" : "marginRight"];
      return [parse(left), parse(top), parse(right)];
    };
    getGapWidth = function(gapMode) {
      if (gapMode === void 0) {
        gapMode = "margin";
      }
      if (typeof window === "undefined") {
        return zeroGap;
      }
      var offsets = getOffset(gapMode);
      var documentWidth = document.documentElement.clientWidth;
      var windowWidth = window.innerWidth;
      return {
        left: offsets[0],
        top: offsets[1],
        right: offsets[2],
        gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0])
      };
    };
  }
});

// ../../../node_modules/react-remove-scroll-bar/dist/es2015/component.js
var React20, Style, lockAttribute, getStyles, getCurrentUseCounter, useLockAttribute, RemoveScrollBar;
var init_component2 = __esm({
  "../../../node_modules/react-remove-scroll-bar/dist/es2015/component.js"() {
    "use strict";
    React20 = __toESM(require("react"));
    init_es20154();
    init_constants();
    init_utils4();
    Style = styleSingleton();
    lockAttribute = "data-scroll-locked";
    getStyles = function(_a, allowRelative, gapMode, important) {
      var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;
      if (gapMode === void 0) {
        gapMode = "margin";
      }
      return "\n  .".concat(noScrollbarsClassName, " {\n   overflow: hidden ").concat(important, ";\n   padding-right: ").concat(gap, "px ").concat(important, ";\n  }\n  body[").concat(lockAttribute, "] {\n    overflow: hidden ").concat(important, ";\n    overscroll-behavior: contain;\n    ").concat([
        allowRelative && "position: relative ".concat(important, ";"),
        gapMode === "margin" && "\n    padding-left: ".concat(left, "px;\n    padding-top: ").concat(top, "px;\n    padding-right: ").concat(right, "px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: ").concat(gap, "px ").concat(important, ";\n    "),
        gapMode === "padding" && "padding-right: ".concat(gap, "px ").concat(important, ";")
      ].filter(Boolean).join(""), "\n  }\n  \n  .").concat(zeroRightClassName, " {\n    right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(fullWidthClassName, " {\n    margin-right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(zeroRightClassName, " .").concat(zeroRightClassName, " {\n    right: 0 ").concat(important, ";\n  }\n  \n  .").concat(fullWidthClassName, " .").concat(fullWidthClassName, " {\n    margin-right: 0 ").concat(important, ";\n  }\n  \n  body[").concat(lockAttribute, "] {\n    ").concat(removedBarSizeVariable, ": ").concat(gap, "px;\n  }\n");
    };
    getCurrentUseCounter = function() {
      var counter = parseInt(document.body.getAttribute(lockAttribute) || "0", 10);
      return isFinite(counter) ? counter : 0;
    };
    useLockAttribute = function() {
      React20.useEffect(function() {
        document.body.setAttribute(lockAttribute, (getCurrentUseCounter() + 1).toString());
        return function() {
          var newCounter = getCurrentUseCounter() - 1;
          if (newCounter <= 0) {
            document.body.removeAttribute(lockAttribute);
          } else {
            document.body.setAttribute(lockAttribute, newCounter.toString());
          }
        };
      }, []);
    };
    RemoveScrollBar = function(_a) {
      var noRelative = _a.noRelative, noImportant = _a.noImportant, _b = _a.gapMode, gapMode = _b === void 0 ? "margin" : _b;
      useLockAttribute();
      var gap = React20.useMemo(function() {
        return getGapWidth(gapMode);
      }, [gapMode]);
      return React20.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? "!important" : "") });
    };
  }
});

// ../../../node_modules/react-remove-scroll-bar/dist/es2015/index.js
var init_es20155 = __esm({
  "../../../node_modules/react-remove-scroll-bar/dist/es2015/index.js"() {
    "use strict";
    init_component2();
    init_constants();
    init_utils4();
  }
});

// ../../../node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js
var passiveSupported, options, nonPassive;
var init_aggresiveCapture = __esm({
  "../../../node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js"() {
    "use strict";
    passiveSupported = false;
    if (typeof window !== "undefined") {
      try {
        options = Object.defineProperty({}, "passive", {
          get: function() {
            passiveSupported = true;
            return true;
          }
        });
        window.addEventListener("test", options, options);
        window.removeEventListener("test", options, options);
      } catch (err) {
        passiveSupported = false;
      }
    }
    nonPassive = passiveSupported ? { passive: false } : false;
  }
});

// ../../../node_modules/react-remove-scroll/dist/es2015/handleScroll.js
var alwaysContainsScroll, elementCanBeScrolled, elementCouldBeVScrolled, elementCouldBeHScrolled, locationCouldBeScrolled, getVScrollVariables, getHScrollVariables, elementCouldBeScrolled, getScrollVariables, getDirectionFactor, handleScroll;
var init_handleScroll = __esm({
  "../../../node_modules/react-remove-scroll/dist/es2015/handleScroll.js"() {
    "use strict";
    alwaysContainsScroll = function(node) {
      return node.tagName === "TEXTAREA";
    };
    elementCanBeScrolled = function(node, overflow) {
      var styles = window.getComputedStyle(node);
      return (
        // not-not-scrollable
        styles[overflow] !== "hidden" && // contains scroll inside self
        !(styles.overflowY === styles.overflowX && !alwaysContainsScroll(node) && styles[overflow] === "visible")
      );
    };
    elementCouldBeVScrolled = function(node) {
      return elementCanBeScrolled(node, "overflowY");
    };
    elementCouldBeHScrolled = function(node) {
      return elementCanBeScrolled(node, "overflowX");
    };
    locationCouldBeScrolled = function(axis, node) {
      var ownerDocument = node.ownerDocument;
      var current = node;
      do {
        if (typeof ShadowRoot !== "undefined" && current instanceof ShadowRoot) {
          current = current.host;
        }
        var isScrollable = elementCouldBeScrolled(axis, current);
        if (isScrollable) {
          var _a = getScrollVariables(axis, current), s = _a[1], d = _a[2];
          if (s > d) {
            return true;
          }
        }
        current = current.parentNode;
      } while (current && current !== ownerDocument.body);
      return false;
    };
    getVScrollVariables = function(_a) {
      var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;
      return [
        scrollTop,
        scrollHeight,
        clientHeight
      ];
    };
    getHScrollVariables = function(_a) {
      var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;
      return [
        scrollLeft,
        scrollWidth,
        clientWidth
      ];
    };
    elementCouldBeScrolled = function(axis, node) {
      return axis === "v" ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);
    };
    getScrollVariables = function(axis, node) {
      return axis === "v" ? getVScrollVariables(node) : getHScrollVariables(node);
    };
    getDirectionFactor = function(axis, direction) {
      return axis === "h" && direction === "rtl" ? -1 : 1;
    };
    handleScroll = function(axis, endTarget, event, sourceDelta, noOverscroll) {
      var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);
      var delta = directionFactor * sourceDelta;
      var target = event.target;
      var targetInLock = endTarget.contains(target);
      var shouldCancelScroll = false;
      var isDeltaPositive = delta > 0;
      var availableScroll = 0;
      var availableScrollTop = 0;
      do {
        var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2];
        var elementScroll = scroll_1 - capacity - directionFactor * position;
        if (position || elementScroll) {
          if (elementCouldBeScrolled(axis, target)) {
            availableScroll += elementScroll;
            availableScrollTop += position;
          }
        }
        if (target instanceof ShadowRoot) {
          target = target.host;
        } else {
          target = target.parentNode;
        }
      } while (
        // portaled content
        !targetInLock && target !== document.body || // self content
        targetInLock && (endTarget.contains(target) || endTarget === target)
      );
      if (isDeltaPositive && (noOverscroll && Math.abs(availableScroll) < 1 || !noOverscroll && delta > availableScroll)) {
        shouldCancelScroll = true;
      } else if (!isDeltaPositive && (noOverscroll && Math.abs(availableScrollTop) < 1 || !noOverscroll && -delta > availableScrollTop)) {
        shouldCancelScroll = true;
      }
      return shouldCancelScroll;
    };
  }
});

// ../../../node_modules/react-remove-scroll/dist/es2015/SideEffect.js
function RemoveScrollSideCar(props) {
  var shouldPreventQueue = React21.useRef([]);
  var touchStartRef = React21.useRef([0, 0]);
  var activeAxis = React21.useRef();
  var id2 = React21.useState(idCounter++)[0];
  var Style2 = React21.useState(styleSingleton)[0];
  var lastProps = React21.useRef(props);
  React21.useEffect(function() {
    lastProps.current = props;
  }, [props]);
  React21.useEffect(function() {
    if (props.inert) {
      document.body.classList.add("block-interactivity-".concat(id2));
      var allow_1 = __spreadArray([props.lockRef.current], (props.shards || []).map(extractRef), true).filter(Boolean);
      allow_1.forEach(function(el) {
        return el.classList.add("allow-interactivity-".concat(id2));
      });
      return function() {
        document.body.classList.remove("block-interactivity-".concat(id2));
        allow_1.forEach(function(el) {
          return el.classList.remove("allow-interactivity-".concat(id2));
        });
      };
    }
    return;
  }, [props.inert, props.lockRef.current, props.shards]);
  var shouldCancelEvent = React21.useCallback(function(event, parent) {
    if ("touches" in event && event.touches.length === 2) {
      return !lastProps.current.allowPinchZoom;
    }
    var touch = getTouchXY(event);
    var touchStart = touchStartRef.current;
    var deltaX = "deltaX" in event ? event.deltaX : touchStart[0] - touch[0];
    var deltaY = "deltaY" in event ? event.deltaY : touchStart[1] - touch[1];
    var currentAxis;
    var target = event.target;
    var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? "h" : "v";
    if ("touches" in event && moveDirection === "h" && target.type === "range") {
      return false;
    }
    var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    if (!canBeScrolledInMainDirection) {
      return true;
    }
    if (canBeScrolledInMainDirection) {
      currentAxis = moveDirection;
    } else {
      currentAxis = moveDirection === "v" ? "h" : "v";
      canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    }
    if (!canBeScrolledInMainDirection) {
      return false;
    }
    if (!activeAxis.current && "changedTouches" in event && (deltaX || deltaY)) {
      activeAxis.current = currentAxis;
    }
    if (!currentAxis) {
      return true;
    }
    var cancelingAxis = activeAxis.current || currentAxis;
    return handleScroll(cancelingAxis, parent, event, cancelingAxis === "h" ? deltaX : deltaY, true);
  }, []);
  var shouldPrevent = React21.useCallback(function(_event) {
    var event = _event;
    if (!lockStack.length || lockStack[lockStack.length - 1] !== Style2) {
      return;
    }
    var delta = "deltaY" in event ? getDeltaXY(event) : getTouchXY(event);
    var sourceEvent = shouldPreventQueue.current.filter(function(e) {
      return e.name === event.type && (e.target === event.target || event.target === e.shadowParent) && deltaCompare(e.delta, delta);
    })[0];
    if (sourceEvent && sourceEvent.should) {
      if (event.cancelable) {
        event.preventDefault();
      }
      return;
    }
    if (!sourceEvent) {
      var shardNodes = (lastProps.current.shards || []).map(extractRef).filter(Boolean).filter(function(node) {
        return node.contains(event.target);
      });
      var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;
      if (shouldStop) {
        if (event.cancelable) {
          event.preventDefault();
        }
      }
    }
  }, []);
  var shouldCancel = React21.useCallback(function(name, delta, target, should) {
    var event = { name, delta, target, should, shadowParent: getOutermostShadowParent(target) };
    shouldPreventQueue.current.push(event);
    setTimeout(function() {
      shouldPreventQueue.current = shouldPreventQueue.current.filter(function(e) {
        return e !== event;
      });
    }, 1);
  }, []);
  var scrollTouchStart = React21.useCallback(function(event) {
    touchStartRef.current = getTouchXY(event);
    activeAxis.current = void 0;
  }, []);
  var scrollWheel = React21.useCallback(function(event) {
    shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  var scrollTouchMove = React21.useCallback(function(event) {
    shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  React21.useEffect(function() {
    lockStack.push(Style2);
    props.setCallbacks({
      onScrollCapture: scrollWheel,
      onWheelCapture: scrollWheel,
      onTouchMoveCapture: scrollTouchMove
    });
    document.addEventListener("wheel", shouldPrevent, nonPassive);
    document.addEventListener("touchmove", shouldPrevent, nonPassive);
    document.addEventListener("touchstart", scrollTouchStart, nonPassive);
    return function() {
      lockStack = lockStack.filter(function(inst) {
        return inst !== Style2;
      });
      document.removeEventListener("wheel", shouldPrevent, nonPassive);
      document.removeEventListener("touchmove", shouldPrevent, nonPassive);
      document.removeEventListener("touchstart", scrollTouchStart, nonPassive);
    };
  }, []);
  var removeScrollBar = props.removeScrollBar, inert = props.inert;
  return React21.createElement(
    React21.Fragment,
    null,
    inert ? React21.createElement(Style2, { styles: generateStyle(id2) }) : null,
    removeScrollBar ? React21.createElement(RemoveScrollBar, { gapMode: props.gapMode }) : null
  );
}
function getOutermostShadowParent(node) {
  var shadowParent = null;
  while (node !== null) {
    if (node instanceof ShadowRoot) {
      shadowParent = node.host;
      node = node.host;
    }
    node = node.parentNode;
  }
  return shadowParent;
}
var React21, getTouchXY, getDeltaXY, extractRef, deltaCompare, generateStyle, idCounter, lockStack;
var init_SideEffect = __esm({
  "../../../node_modules/react-remove-scroll/dist/es2015/SideEffect.js"() {
    "use strict";
    init_tslib_es6();
    React21 = __toESM(require("react"));
    init_es20155();
    init_es20154();
    init_aggresiveCapture();
    init_handleScroll();
    getTouchXY = function(event) {
      return "changedTouches" in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];
    };
    getDeltaXY = function(event) {
      return [event.deltaX, event.deltaY];
    };
    extractRef = function(ref) {
      return ref && "current" in ref ? ref.current : ref;
    };
    deltaCompare = function(x, y) {
      return x[0] === y[0] && x[1] === y[1];
    };
    generateStyle = function(id2) {
      return "\n  .block-interactivity-".concat(id2, " {pointer-events: none;}\n  .allow-interactivity-").concat(id2, " {pointer-events: all;}\n");
    };
    idCounter = 0;
    lockStack = [];
  }
});

// ../../../node_modules/react-remove-scroll/dist/es2015/sidecar.js
var sidecar_default;
var init_sidecar = __esm({
  "../../../node_modules/react-remove-scroll/dist/es2015/sidecar.js"() {
    "use strict";
    init_es20152();
    init_SideEffect();
    init_medium2();
    sidecar_default = exportSidecar(effectCar, RemoveScrollSideCar);
  }
});

// ../../../node_modules/react-remove-scroll/dist/es2015/Combination.js
var React23, ReactRemoveScroll, Combination_default;
var init_Combination = __esm({
  "../../../node_modules/react-remove-scroll/dist/es2015/Combination.js"() {
    "use strict";
    init_tslib_es6();
    React23 = __toESM(require("react"));
    init_UI();
    init_sidecar();
    ReactRemoveScroll = React23.forwardRef(function(props, ref) {
      return React23.createElement(RemoveScroll, __assign({}, props, { ref, sideCar: sidecar_default }));
    });
    ReactRemoveScroll.classNames = RemoveScroll.classNames;
    Combination_default = ReactRemoveScroll;
  }
});

// ../../../node_modules/react-remove-scroll/dist/es2015/index.js
var init_es20156 = __esm({
  "../../../node_modules/react-remove-scroll/dist/es2015/index.js"() {
    "use strict";
    init_Combination();
  }
});

// ../../../node_modules/aria-hidden/dist/es2015/index.js
var getDefaultParent, counterMap, uncontrolledNodes, markerMap, lockCount, unwrapHost, correctTargets, applyAttributeToOthers, hideOthers;
var init_es20157 = __esm({
  "../../../node_modules/aria-hidden/dist/es2015/index.js"() {
    "use strict";
    getDefaultParent = function(originalTarget) {
      if (typeof document === "undefined") {
        return null;
      }
      var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;
      return sampleTarget.ownerDocument.body;
    };
    counterMap = /* @__PURE__ */ new WeakMap();
    uncontrolledNodes = /* @__PURE__ */ new WeakMap();
    markerMap = {};
    lockCount = 0;
    unwrapHost = function(node) {
      return node && (node.host || unwrapHost(node.parentNode));
    };
    correctTargets = function(parent, targets) {
      return targets.map(function(target) {
        if (parent.contains(target)) {
          return target;
        }
        var correctedTarget = unwrapHost(target);
        if (correctedTarget && parent.contains(correctedTarget)) {
          return correctedTarget;
        }
        console.error("aria-hidden", target, "in not contained inside", parent, ". Doing nothing");
        return null;
      }).filter(function(x) {
        return Boolean(x);
      });
    };
    applyAttributeToOthers = function(originalTarget, parentNode, markerName, controlAttribute) {
      var targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
      if (!markerMap[markerName]) {
        markerMap[markerName] = /* @__PURE__ */ new WeakMap();
      }
      var markerCounter = markerMap[markerName];
      var hiddenNodes = [];
      var elementsToKeep = /* @__PURE__ */ new Set();
      var elementsToStop = new Set(targets);
      var keep = function(el) {
        if (!el || elementsToKeep.has(el)) {
          return;
        }
        elementsToKeep.add(el);
        keep(el.parentNode);
      };
      targets.forEach(keep);
      var deep = function(parent) {
        if (!parent || elementsToStop.has(parent)) {
          return;
        }
        Array.prototype.forEach.call(parent.children, function(node) {
          if (elementsToKeep.has(node)) {
            deep(node);
          } else {
            try {
              var attr = node.getAttribute(controlAttribute);
              var alreadyHidden = attr !== null && attr !== "false";
              var counterValue = (counterMap.get(node) || 0) + 1;
              var markerValue = (markerCounter.get(node) || 0) + 1;
              counterMap.set(node, counterValue);
              markerCounter.set(node, markerValue);
              hiddenNodes.push(node);
              if (counterValue === 1 && alreadyHidden) {
                uncontrolledNodes.set(node, true);
              }
              if (markerValue === 1) {
                node.setAttribute(markerName, "true");
              }
              if (!alreadyHidden) {
                node.setAttribute(controlAttribute, "true");
              }
            } catch (e) {
              console.error("aria-hidden: cannot operate on ", node, e);
            }
          }
        });
      };
      deep(parentNode);
      elementsToKeep.clear();
      lockCount++;
      return function() {
        hiddenNodes.forEach(function(node) {
          var counterValue = counterMap.get(node) - 1;
          var markerValue = markerCounter.get(node) - 1;
          counterMap.set(node, counterValue);
          markerCounter.set(node, markerValue);
          if (!counterValue) {
            if (!uncontrolledNodes.has(node)) {
              node.removeAttribute(controlAttribute);
            }
            uncontrolledNodes.delete(node);
          }
          if (!markerValue) {
            node.removeAttribute(markerName);
          }
        });
        lockCount--;
        if (!lockCount) {
          counterMap = /* @__PURE__ */ new WeakMap();
          counterMap = /* @__PURE__ */ new WeakMap();
          uncontrolledNodes = /* @__PURE__ */ new WeakMap();
          markerMap = {};
        }
      };
    };
    hideOthers = function(originalTarget, parentNode, markerName) {
      if (markerName === void 0) {
        markerName = "data-aria-hidden";
      }
      var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
      var activeParentNode = parentNode || getDefaultParent(originalTarget);
      if (!activeParentNode) {
        return function() {
          return null;
        };
      }
      targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll("[aria-live]")));
      return applyAttributeToOthers(targets, activeParentNode, markerName, "aria-hidden");
    };
  }
});

// ../../../node_modules/@radix-ui/react-dialog/dist/index.mjs
function getState(open) {
  return open ? "open" : "closed";
}
var React24, import_jsx_runtime16, DIALOG_NAME, createDialogContext, createDialogScope, DialogProvider, useDialogContext, Dialog, TRIGGER_NAME, DialogTrigger, PORTAL_NAME2, PortalProvider, usePortalContext, DialogPortal, OVERLAY_NAME, DialogOverlay, DialogOverlayImpl, CONTENT_NAME, DialogContent, DialogContentModal, DialogContentNonModal, DialogContentImpl, TITLE_NAME, DialogTitle, DESCRIPTION_NAME, DialogDescription, CLOSE_NAME, DialogClose, TITLE_WARNING_NAME, WarningProvider, useWarningContext, TitleWarning, DESCRIPTION_WARNING_NAME, DescriptionWarning, Root, Trigger, Portal2, Overlay, Content, Title, Description, Close;
var init_dist16 = __esm({
  "../../../node_modules/@radix-ui/react-dialog/dist/index.mjs"() {
    "use strict";
    "use client";
    React24 = __toESM(require("react"), 1);
    init_dist3();
    init_dist();
    init_dist4();
    init_dist6();
    init_dist8();
    init_dist11();
    init_dist12();
    init_dist13();
    init_dist14();
    init_dist9();
    init_dist15();
    init_es20156();
    init_es20157();
    init_dist2();
    import_jsx_runtime16 = require("react/jsx-runtime");
    DIALOG_NAME = "Dialog";
    [createDialogContext, createDialogScope] = createContextScope(DIALOG_NAME);
    [DialogProvider, useDialogContext] = createDialogContext(DIALOG_NAME);
    Dialog = (props) => {
      const {
        __scopeDialog,
        children,
        open: openProp,
        defaultOpen,
        onOpenChange,
        modal = true
      } = props;
      const triggerRef = React24.useRef(null);
      const contentRef = React24.useRef(null);
      const [open = false, setOpen] = useControllableState({
        prop: openProp,
        defaultProp: defaultOpen,
        onChange: onOpenChange
      });
      return /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(
        DialogProvider,
        {
          scope: __scopeDialog,
          triggerRef,
          contentRef,
          contentId: useId2(),
          titleId: useId2(),
          descriptionId: useId2(),
          open,
          onOpenChange: setOpen,
          onOpenToggle: React24.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),
          modal,
          children
        }
      );
    };
    Dialog.displayName = DIALOG_NAME;
    TRIGGER_NAME = "DialogTrigger";
    DialogTrigger = React24.forwardRef(
      (props, forwardedRef) => {
        const { __scopeDialog, ...triggerProps } = props;
        const context = useDialogContext(TRIGGER_NAME, __scopeDialog);
        const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);
        return /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(
          Primitive.button,
          {
            type: "button",
            "aria-haspopup": "dialog",
            "aria-expanded": context.open,
            "aria-controls": context.contentId,
            "data-state": getState(context.open),
            ...triggerProps,
            ref: composedTriggerRef,
            onClick: composeEventHandlers(props.onClick, context.onOpenToggle)
          }
        );
      }
    );
    DialogTrigger.displayName = TRIGGER_NAME;
    PORTAL_NAME2 = "DialogPortal";
    [PortalProvider, usePortalContext] = createDialogContext(PORTAL_NAME2, {
      forceMount: void 0
    });
    DialogPortal = (props) => {
      const { __scopeDialog, forceMount, children, container } = props;
      const context = useDialogContext(PORTAL_NAME2, __scopeDialog);
      return /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(PortalProvider, { scope: __scopeDialog, forceMount, children: React24.Children.map(children, (child) => /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(Presence, { present: forceMount || context.open, children: /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(Portal, { asChild: true, container, children: child }) })) });
    };
    DialogPortal.displayName = PORTAL_NAME2;
    OVERLAY_NAME = "DialogOverlay";
    DialogOverlay = React24.forwardRef(
      (props, forwardedRef) => {
        const portalContext = usePortalContext(OVERLAY_NAME, props.__scopeDialog);
        const { forceMount = portalContext.forceMount, ...overlayProps } = props;
        const context = useDialogContext(OVERLAY_NAME, props.__scopeDialog);
        return context.modal ? /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(Presence, { present: forceMount || context.open, children: /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(DialogOverlayImpl, { ...overlayProps, ref: forwardedRef }) }) : null;
      }
    );
    DialogOverlay.displayName = OVERLAY_NAME;
    DialogOverlayImpl = React24.forwardRef(
      (props, forwardedRef) => {
        const { __scopeDialog, ...overlayProps } = props;
        const context = useDialogContext(OVERLAY_NAME, __scopeDialog);
        return (
          // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`
          // ie. when `Overlay` and `Content` are siblings
          /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(Combination_default, { as: Slot, allowPinchZoom: true, shards: [context.contentRef], children: /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(
            Primitive.div,
            {
              "data-state": getState(context.open),
              ...overlayProps,
              ref: forwardedRef,
              style: { pointerEvents: "auto", ...overlayProps.style }
            }
          ) })
        );
      }
    );
    CONTENT_NAME = "DialogContent";
    DialogContent = React24.forwardRef(
      (props, forwardedRef) => {
        const portalContext = usePortalContext(CONTENT_NAME, props.__scopeDialog);
        const { forceMount = portalContext.forceMount, ...contentProps } = props;
        const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);
        return /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(Presence, { present: forceMount || context.open, children: context.modal ? /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(DialogContentModal, { ...contentProps, ref: forwardedRef }) : /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(DialogContentNonModal, { ...contentProps, ref: forwardedRef }) });
      }
    );
    DialogContent.displayName = CONTENT_NAME;
    DialogContentModal = React24.forwardRef(
      (props, forwardedRef) => {
        const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);
        const contentRef = React24.useRef(null);
        const composedRefs = useComposedRefs(forwardedRef, context.contentRef, contentRef);
        React24.useEffect(() => {
          const content = contentRef.current;
          if (content) return hideOthers(content);
        }, []);
        return /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(
          DialogContentImpl,
          {
            ...props,
            ref: composedRefs,
            trapFocus: context.open,
            disableOutsidePointerEvents: true,
            onCloseAutoFocus: composeEventHandlers(props.onCloseAutoFocus, (event) => {
              event.preventDefault();
              context.triggerRef.current?.focus();
            }),
            onPointerDownOutside: composeEventHandlers(props.onPointerDownOutside, (event) => {
              const originalEvent = event.detail.originalEvent;
              const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;
              const isRightClick = originalEvent.button === 2 || ctrlLeftClick;
              if (isRightClick) event.preventDefault();
            }),
            onFocusOutside: composeEventHandlers(
              props.onFocusOutside,
              (event) => event.preventDefault()
            )
          }
        );
      }
    );
    DialogContentNonModal = React24.forwardRef(
      (props, forwardedRef) => {
        const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);
        const hasInteractedOutsideRef = React24.useRef(false);
        const hasPointerDownOutsideRef = React24.useRef(false);
        return /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(
          DialogContentImpl,
          {
            ...props,
            ref: forwardedRef,
            trapFocus: false,
            disableOutsidePointerEvents: false,
            onCloseAutoFocus: (event) => {
              props.onCloseAutoFocus?.(event);
              if (!event.defaultPrevented) {
                if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();
                event.preventDefault();
              }
              hasInteractedOutsideRef.current = false;
              hasPointerDownOutsideRef.current = false;
            },
            onInteractOutside: (event) => {
              props.onInteractOutside?.(event);
              if (!event.defaultPrevented) {
                hasInteractedOutsideRef.current = true;
                if (event.detail.originalEvent.type === "pointerdown") {
                  hasPointerDownOutsideRef.current = true;
                }
              }
              const target = event.target;
              const targetIsTrigger = context.triggerRef.current?.contains(target);
              if (targetIsTrigger) event.preventDefault();
              if (event.detail.originalEvent.type === "focusin" && hasPointerDownOutsideRef.current) {
                event.preventDefault();
              }
            }
          }
        );
      }
    );
    DialogContentImpl = React24.forwardRef(
      (props, forwardedRef) => {
        const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;
        const context = useDialogContext(CONTENT_NAME, __scopeDialog);
        const contentRef = React24.useRef(null);
        const composedRefs = useComposedRefs(forwardedRef, contentRef);
        useFocusGuards();
        return /* @__PURE__ */ (0, import_jsx_runtime16.jsxs)(import_jsx_runtime16.Fragment, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(
            FocusScope,
            {
              asChild: true,
              loop: true,
              trapped: trapFocus,
              onMountAutoFocus: onOpenAutoFocus,
              onUnmountAutoFocus: onCloseAutoFocus,
              children: /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(
                DismissableLayer,
                {
                  role: "dialog",
                  id: context.contentId,
                  "aria-describedby": context.descriptionId,
                  "aria-labelledby": context.titleId,
                  "data-state": getState(context.open),
                  ...contentProps,
                  ref: composedRefs,
                  onDismiss: () => context.onOpenChange(false)
                }
              )
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime16.jsxs)(import_jsx_runtime16.Fragment, { children: [
            /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(TitleWarning, { titleId: context.titleId }),
            /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(DescriptionWarning, { contentRef, descriptionId: context.descriptionId })
          ] })
        ] });
      }
    );
    TITLE_NAME = "DialogTitle";
    DialogTitle = React24.forwardRef(
      (props, forwardedRef) => {
        const { __scopeDialog, ...titleProps } = props;
        const context = useDialogContext(TITLE_NAME, __scopeDialog);
        return /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(Primitive.h2, { id: context.titleId, ...titleProps, ref: forwardedRef });
      }
    );
    DialogTitle.displayName = TITLE_NAME;
    DESCRIPTION_NAME = "DialogDescription";
    DialogDescription = React24.forwardRef(
      (props, forwardedRef) => {
        const { __scopeDialog, ...descriptionProps } = props;
        const context = useDialogContext(DESCRIPTION_NAME, __scopeDialog);
        return /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(Primitive.p, { id: context.descriptionId, ...descriptionProps, ref: forwardedRef });
      }
    );
    DialogDescription.displayName = DESCRIPTION_NAME;
    CLOSE_NAME = "DialogClose";
    DialogClose = React24.forwardRef(
      (props, forwardedRef) => {
        const { __scopeDialog, ...closeProps } = props;
        const context = useDialogContext(CLOSE_NAME, __scopeDialog);
        return /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(
          Primitive.button,
          {
            type: "button",
            ...closeProps,
            ref: forwardedRef,
            onClick: composeEventHandlers(props.onClick, () => context.onOpenChange(false))
          }
        );
      }
    );
    DialogClose.displayName = CLOSE_NAME;
    TITLE_WARNING_NAME = "DialogTitleWarning";
    [WarningProvider, useWarningContext] = createContext22(TITLE_WARNING_NAME, {
      contentName: CONTENT_NAME,
      titleName: TITLE_NAME,
      docsSlug: "dialog"
    });
    TitleWarning = ({ titleId }) => {
      const titleWarningContext = useWarningContext(TITLE_WARNING_NAME);
      const MESSAGE = `\`${titleWarningContext.contentName}\` requires a \`${titleWarningContext.titleName}\` for the component to be accessible for screen reader users.

If you want to hide the \`${titleWarningContext.titleName}\`, you can wrap it with our VisuallyHidden component.

For more information, see https://radix-ui.com/primitives/docs/components/${titleWarningContext.docsSlug}`;
      React24.useEffect(() => {
        if (titleId) {
          const hasTitle = document.getElementById(titleId);
          if (!hasTitle) console.error(MESSAGE);
        }
      }, [MESSAGE, titleId]);
      return null;
    };
    DESCRIPTION_WARNING_NAME = "DialogDescriptionWarning";
    DescriptionWarning = ({ contentRef, descriptionId }) => {
      const descriptionWarningContext = useWarningContext(DESCRIPTION_WARNING_NAME);
      const MESSAGE = `Warning: Missing \`Description\` or \`aria-describedby={undefined}\` for {${descriptionWarningContext.contentName}}.`;
      React24.useEffect(() => {
        const describedById = contentRef.current?.getAttribute("aria-describedby");
        if (descriptionId && describedById) {
          const hasDescription = document.getElementById(descriptionId);
          if (!hasDescription) console.warn(MESSAGE);
        }
      }, [MESSAGE, contentRef, descriptionId]);
      return null;
    };
    Root = Dialog;
    Trigger = DialogTrigger;
    Portal2 = DialogPortal;
    Overlay = DialogOverlay;
    Content = DialogContent;
    Title = DialogTitle;
    Description = DialogDescription;
    Close = DialogClose;
  }
});

// src/components/common/skeleton/skeleton.tsx
var import_ui7, import_jsx_runtime17, Skeleton, TextSkeleton, TableFooterSkeleton, TableSkeleton, SingleColumnPageSkeleton, TwoColumnPageSkeleton;
var init_skeleton = __esm({
  "src/components/common/skeleton/skeleton.tsx"() {
    "use strict";
    import_ui7 = require("@medusajs/ui");
    import_jsx_runtime17 = require("react/jsx-runtime");
    Skeleton = ({ className, style }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(
        "div",
        {
          "aria-hidden": true,
          className: (0, import_ui7.clx)(
            "bg-ui-bg-component h-3 w-3 animate-pulse rounded-[4px]",
            className
          ),
          style
        }
      );
    };
    TextSkeleton = ({
      size: size4 = "small",
      leading = "compact",
      characters = 10
    }) => {
      let charWidth = 9;
      switch (size4) {
        case "xlarge":
          charWidth = 13;
          break;
        case "large":
          charWidth = 11;
          break;
        case "base":
          charWidth = 10;
          break;
        case "small":
          charWidth = 9;
          break;
        case "xsmall":
          charWidth = 8;
          break;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(
        Skeleton,
        {
          className: (0, import_ui7.clx)({
            "h-5": size4 === "xsmall",
            "h-6": size4 === "small",
            "h-7": size4 === "base",
            "h-8": size4 === "xlarge",
            "!h-5": leading === "compact"
          }),
          style: {
            width: `${charWidth * characters}px`
          }
        }
      );
    };
    TableFooterSkeleton = ({ layout }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime17.jsxs)(
        "div",
        {
          className: (0, import_ui7.clx)("flex items-center justify-between p-4", {
            "border-t": layout === "fill"
          }),
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(Skeleton, { className: "h-7 w-[138px]" }),
            /* @__PURE__ */ (0, import_jsx_runtime17.jsxs)("div", { className: "flex items-center gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(Skeleton, { className: "h-7 w-24" }),
              /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(Skeleton, { className: "h-7 w-11" }),
              /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(Skeleton, { className: "h-7 w-11" })
            ] })
          ]
        }
      );
    };
    TableSkeleton = ({
      rowCount = 10,
      search = true,
      filters = true,
      orderBy = true,
      pagination = true,
      layout = "fit"
    }) => {
      const totalRowCount = rowCount + 1;
      const rows = Array.from({ length: totalRowCount }, (_, i) => i);
      const hasToolbar = search || filters || orderBy;
      return /* @__PURE__ */ (0, import_jsx_runtime17.jsxs)(
        "div",
        {
          "aria-hidden": true,
          className: (0, import_ui7.clx)({
            "flex h-full flex-col overflow-hidden": layout === "fill"
          }),
          children: [
            hasToolbar && /* @__PURE__ */ (0, import_jsx_runtime17.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
              filters && /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(Skeleton, { className: "h-7 w-full max-w-[135px]" }),
              (search || orderBy) && /* @__PURE__ */ (0, import_jsx_runtime17.jsxs)("div", { className: "flex items-center gap-x-2", children: [
                search && /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(Skeleton, { className: "h-7 w-[160px]" }),
                orderBy && /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(Skeleton, { className: "h-7 w-7" })
              ] })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime17.jsx)("div", { className: "flex flex-col divide-y border-y", children: rows.map((row) => /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(Skeleton, { className: "h-10 w-full rounded-none" }, row)) }),
            pagination && /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(TableFooterSkeleton, { layout })
          ]
        }
      );
    };
    SingleColumnPageSkeleton = ({
      sections = 2,
      showJSON = false,
      showMetadata = false
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime17.jsxs)("div", { className: "flex flex-col gap-y-3", children: [
        Array.from({ length: sections }, (_, i) => i).map((section) => {
          return /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(
            Skeleton,
            {
              className: (0, import_ui7.clx)("h-full max-h-[460px] w-full rounded-lg", {
                // First section is smaller on most pages, this gives us less
                // layout shifting in general,
                "max-h-[219px]": section === 0
              })
            },
            section
          );
        }),
        showMetadata && /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(Skeleton, { className: "h-[60px] w-full rounded-lg" }),
        showJSON && /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(Skeleton, { className: "h-[60px] w-full rounded-lg" })
      ] });
    };
    TwoColumnPageSkeleton = ({
      mainSections = 2,
      sidebarSections = 1,
      showJSON = false,
      showMetadata = true
    }) => {
      const showExtraData = showJSON || showMetadata;
      return /* @__PURE__ */ (0, import_jsx_runtime17.jsx)("div", { className: "flex flex-col gap-y-3", children: /* @__PURE__ */ (0, import_jsx_runtime17.jsxs)("div", { className: "flex flex-col gap-x-4 gap-y-3 xl:flex-row xl:items-start", children: [
        /* @__PURE__ */ (0, import_jsx_runtime17.jsxs)("div", { className: "flex w-full flex-col gap-y-3", children: [
          Array.from({ length: mainSections }, (_, i) => i).map((section) => {
            return /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(
              Skeleton,
              {
                className: (0, import_ui7.clx)("h-full max-h-[460px] w-full rounded-lg", {
                  "max-h-[219px]": section === 0
                })
              },
              section
            );
          }),
          showExtraData && /* @__PURE__ */ (0, import_jsx_runtime17.jsxs)("div", { className: "hidden flex-col gap-y-3 xl:flex", children: [
            showMetadata && /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(Skeleton, { className: "h-[60px] w-full rounded-lg" }),
            showJSON && /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(Skeleton, { className: "h-[60px] w-full rounded-lg" })
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime17.jsxs)("div", { className: "flex w-full max-w-[100%] flex-col gap-y-3 xl:mt-0 xl:max-w-[440px]", children: [
          Array.from({ length: sidebarSections }, (_, i) => i).map(
            (section) => {
              return /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(
                Skeleton,
                {
                  className: (0, import_ui7.clx)("h-full max-h-[320px] w-full rounded-lg", {
                    "max-h-[140px]": section === 0
                  })
                },
                section
              );
            }
          ),
          showExtraData && /* @__PURE__ */ (0, import_jsx_runtime17.jsxs)("div", { className: "flex flex-col gap-y-3 xl:hidden", children: [
            showMetadata && /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(Skeleton, { className: "h-[60px] w-full rounded-lg" }),
            showJSON && /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(Skeleton, { className: "h-[60px] w-full rounded-lg" })
          ] })
        ] })
      ] }) });
    };
  }
});

// src/components/common/skeleton/index.ts
var init_skeleton2 = __esm({
  "src/components/common/skeleton/index.ts"() {
    "use strict";
    init_skeleton();
  }
});

// src/components/common/thumbnail/thumbnail.tsx
var import_icons3, import_ui8, import_jsx_runtime18, Thumbnail;
var init_thumbnail = __esm({
  "src/components/common/thumbnail/thumbnail.tsx"() {
    "use strict";
    import_icons3 = require("@medusajs/icons");
    import_ui8 = require("@medusajs/ui");
    import_jsx_runtime18 = require("react/jsx-runtime");
    Thumbnail = ({ src, alt, size: size4 = "base" }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime18.jsx)(
        "div",
        {
          className: (0, import_ui8.clx)(
            "bg-ui-bg-component flex items-center justify-center overflow-hidden rounded-[4px]",
            {
              "h-8 w-6": size4 === "base",
              "h-5 w-4": size4 === "small"
            }
          ),
          children: src ? /* @__PURE__ */ (0, import_jsx_runtime18.jsx)(
            "img",
            {
              src,
              alt,
              className: "h-full w-full object-cover object-center"
            }
          ) : /* @__PURE__ */ (0, import_jsx_runtime18.jsx)(import_icons3.Photo, { className: "text-ui-fg-subtle" })
        }
      );
    };
  }
});

// src/components/common/thumbnail/index.ts
var init_thumbnail2 = __esm({
  "src/components/common/thumbnail/index.ts"() {
    "use strict";
    init_thumbnail();
  }
});

// src/hooks/api/inventory.tsx
var import_react_query4, INVENTORY_ITEMS_QUERY_KEY, inventoryItemsQueryKeys, INVENTORY_ITEM_LEVELS_QUERY_KEY, inventoryItemLevelsQueryKeys, useInventoryItems, useInventoryItem, useCreateInventoryItem, useUpdateInventoryItem, useDeleteInventoryItem, useDeleteInventoryItemLevel, useInventoryItemLevels, useUpdateInventoryLevel, useBatchUpdateInventoryLevels;
var init_inventory = __esm({
  "src/hooks/api/inventory.tsx"() {
    "use strict";
    import_react_query4 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    INVENTORY_ITEMS_QUERY_KEY = "inventory_items";
    inventoryItemsQueryKeys = queryKeysFactory(
      INVENTORY_ITEMS_QUERY_KEY
    );
    INVENTORY_ITEM_LEVELS_QUERY_KEY = "inventory_item_levels";
    inventoryItemLevelsQueryKeys = queryKeysFactory(
      INVENTORY_ITEM_LEVELS_QUERY_KEY
    );
    useInventoryItems = (query, options) => {
      const { data, ...rest } = (0, import_react_query4.useQuery)({
        queryFn: () => sdk.admin.inventoryItem.list(query),
        queryKey: inventoryItemsQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useInventoryItem = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query4.useQuery)({
        queryFn: () => sdk.admin.inventoryItem.retrieve(id2, query),
        queryKey: inventoryItemsQueryKeys.detail(id2),
        ...options
      });
      return { ...data, ...rest };
    };
    useCreateInventoryItem = (options) => {
      return (0, import_react_query4.useMutation)({
        mutationFn: (payload) => sdk.admin.inventoryItem.create(payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: inventoryItemsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateInventoryItem = (id2, options) => {
      return (0, import_react_query4.useMutation)({
        mutationFn: (payload) => sdk.admin.inventoryItem.update(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: inventoryItemsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: inventoryItemsQueryKeys.detail(id2)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteInventoryItem = (id2, options) => {
      return (0, import_react_query4.useMutation)({
        mutationFn: () => sdk.admin.inventoryItem.delete(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: inventoryItemsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: inventoryItemsQueryKeys.detail(id2)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteInventoryItemLevel = (inventoryItemId, locationId, options) => {
      return (0, import_react_query4.useMutation)({
        mutationFn: () => sdk.admin.inventoryItem.deleteLevel(inventoryItemId, locationId),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: inventoryItemsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: inventoryItemsQueryKeys.detail(inventoryItemId)
          });
          queryClient.invalidateQueries({
            queryKey: inventoryItemLevelsQueryKeys.detail(inventoryItemId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useInventoryItemLevels = (inventoryItemId, query, options) => {
      const { data, ...rest } = (0, import_react_query4.useQuery)({
        queryFn: () => sdk.admin.inventoryItem.listLevels(inventoryItemId, query),
        queryKey: inventoryItemLevelsQueryKeys.detail(inventoryItemId),
        ...options
      });
      return { ...data, ...rest };
    };
    useUpdateInventoryLevel = (inventoryItemId, locationId, options) => {
      return (0, import_react_query4.useMutation)({
        mutationFn: (payload) => sdk.admin.inventoryItem.updateLevel(inventoryItemId, locationId, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: inventoryItemsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: inventoryItemsQueryKeys.detail(inventoryItemId)
          });
          queryClient.invalidateQueries({
            queryKey: inventoryItemLevelsQueryKeys.detail(inventoryItemId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useBatchUpdateInventoryLevels = (inventoryItemId, options) => {
      return (0, import_react_query4.useMutation)({
        mutationFn: (payload) => sdk.admin.inventoryItem.batchUpdateLevels(inventoryItemId, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: inventoryItemsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: inventoryItemsQueryKeys.detail(inventoryItemId)
          });
          queryClient.invalidateQueries({
            queryKey: inventoryItemLevelsQueryKeys.detail(inventoryItemId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/products.tsx
var import_react_query5, PRODUCTS_QUERY_KEY, productsQueryKeys, VARIANTS_QUERY_KEY, variantsQueryKeys, OPTIONS_QUERY_KEY, optionsQueryKeys, useCreateProductOption, useUpdateProductOption, useDeleteProductOption, useProductVariant, useProductVariants, useCreateProductVariant, useUpdateProductVariant, useUpdateProductVariantsBatch, useProductVariantsInventoryItemsBatch, useDeleteVariant, useProduct, useProducts, useCreateProduct, useUpdateProduct, useDeleteProduct, useExportProducts, useImportProducts, useConfirmImportProducts;
var init_products = __esm({
  "src/hooks/api/products.tsx"() {
    "use strict";
    import_react_query5 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_inventory();
    PRODUCTS_QUERY_KEY = "products";
    productsQueryKeys = queryKeysFactory(PRODUCTS_QUERY_KEY);
    VARIANTS_QUERY_KEY = "product_variants";
    variantsQueryKeys = queryKeysFactory(VARIANTS_QUERY_KEY);
    OPTIONS_QUERY_KEY = "product_options";
    optionsQueryKeys = queryKeysFactory(OPTIONS_QUERY_KEY);
    useCreateProductOption = (productId, options) => {
      return (0, import_react_query5.useMutation)({
        mutationFn: (payload) => sdk.admin.product.createOption(productId, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: optionsQueryKeys.lists() });
          queryClient.invalidateQueries({
            queryKey: productsQueryKeys.detail(productId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateProductOption = (productId, optionId, options) => {
      return (0, import_react_query5.useMutation)({
        mutationFn: (payload) => sdk.admin.product.updateOption(productId, optionId, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: optionsQueryKeys.lists() });
          queryClient.invalidateQueries({
            queryKey: optionsQueryKeys.detail(optionId)
          });
          queryClient.invalidateQueries({
            queryKey: productsQueryKeys.detail(productId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteProductOption = (productId, optionId, options) => {
      return (0, import_react_query5.useMutation)({
        mutationFn: () => sdk.admin.product.deleteOption(productId, optionId),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: optionsQueryKeys.lists() });
          queryClient.invalidateQueries({
            queryKey: optionsQueryKeys.detail(optionId)
          });
          queryClient.invalidateQueries({
            queryKey: productsQueryKeys.detail(productId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useProductVariant = (productId, variantId, query, options) => {
      const { data, ...rest } = (0, import_react_query5.useQuery)({
        queryFn: () => sdk.admin.product.retrieveVariant(productId, variantId, query),
        queryKey: variantsQueryKeys.detail(variantId),
        ...options
      });
      return { ...data, ...rest };
    };
    useProductVariants = (productId, query, options) => {
      const { data, ...rest } = (0, import_react_query5.useQuery)({
        queryFn: () => sdk.admin.product.listVariants(productId, query),
        queryKey: variantsQueryKeys.list({ productId, ...query }),
        ...options
      });
      return { ...data, ...rest };
    };
    useCreateProductVariant = (productId, options) => {
      return (0, import_react_query5.useMutation)({
        mutationFn: (payload) => sdk.admin.product.createVariant(productId, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: variantsQueryKeys.lists() });
          queryClient.invalidateQueries({
            queryKey: productsQueryKeys.detail(productId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateProductVariant = (productId, variantId, options) => {
      return (0, import_react_query5.useMutation)({
        mutationFn: (payload) => sdk.admin.product.updateVariant(productId, variantId, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: variantsQueryKeys.lists() });
          queryClient.invalidateQueries({
            queryKey: variantsQueryKeys.detail(variantId)
          });
          queryClient.invalidateQueries({
            queryKey: productsQueryKeys.detail(productId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateProductVariantsBatch = (productId, options) => {
      return (0, import_react_query5.useMutation)({
        mutationFn: (payload) => sdk.admin.product.batchVariants(productId, {
          update: payload
        }),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: variantsQueryKeys.lists() });
          queryClient.invalidateQueries({ queryKey: variantsQueryKeys.details() });
          queryClient.invalidateQueries({
            queryKey: productsQueryKeys.detail(productId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useProductVariantsInventoryItemsBatch = (productId, options) => {
      return (0, import_react_query5.useMutation)({
        mutationFn: (payload) => sdk.admin.product.batchVariantInventoryItems(productId, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: variantsQueryKeys.lists() });
          queryClient.invalidateQueries({ queryKey: variantsQueryKeys.details() });
          queryClient.invalidateQueries({
            queryKey: productsQueryKeys.detail(productId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteVariant = (productId, variantId, options) => {
      return (0, import_react_query5.useMutation)({
        mutationFn: () => sdk.admin.product.deleteVariant(productId, variantId),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: variantsQueryKeys.lists() });
          queryClient.invalidateQueries({
            queryKey: variantsQueryKeys.detail(variantId)
          });
          queryClient.invalidateQueries({
            queryKey: productsQueryKeys.detail(productId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useProduct = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query5.useQuery)({
        queryFn: () => sdk.admin.product.retrieve(id2, query),
        queryKey: productsQueryKeys.detail(id2),
        ...options
      });
      return { ...data, ...rest };
    };
    useProducts = (query, options) => {
      const { data, ...rest } = (0, import_react_query5.useQuery)({
        queryFn: () => sdk.admin.product.list(query),
        queryKey: productsQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useCreateProduct = (options) => {
      return (0, import_react_query5.useMutation)({
        mutationFn: (payload) => sdk.admin.product.create(payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: productsQueryKeys.lists() });
          queryClient.invalidateQueries({
            queryKey: inventoryItemsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateProduct = (id2, options) => {
      return (0, import_react_query5.useMutation)({
        mutationFn: (payload) => sdk.admin.product.update(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: productsQueryKeys.lists() });
          queryClient.invalidateQueries({ queryKey: productsQueryKeys.detail(id2) });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteProduct = (id2, options) => {
      return (0, import_react_query5.useMutation)({
        mutationFn: () => sdk.admin.product.delete(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: productsQueryKeys.lists() });
          queryClient.invalidateQueries({ queryKey: productsQueryKeys.detail(id2) });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useExportProducts = (query, options) => {
      return (0, import_react_query5.useMutation)({
        mutationFn: (payload) => sdk.admin.product.export(payload, query),
        onSuccess: (data, variables, context) => {
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useImportProducts = (options) => {
      return (0, import_react_query5.useMutation)({
        mutationFn: (payload) => sdk.admin.product.import(payload),
        onSuccess: (data, variables, context) => {
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useConfirmImportProducts = (options) => {
      return (0, import_react_query5.useMutation)({
        mutationFn: (payload) => sdk.admin.product.confirmImport(payload),
        onSuccess: (data, variables, context) => {
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/sales-channels.tsx
var import_react_query6, SALES_CHANNELS_QUERY_KEY, salesChannelsQueryKeys, useSalesChannel, useSalesChannels, useCreateSalesChannel, useUpdateSalesChannel, useDeleteSalesChannel, useSalesChannelRemoveProducts, useSalesChannelAddProducts;
var init_sales_channels = __esm({
  "src/hooks/api/sales-channels.tsx"() {
    "use strict";
    import_react_query6 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_products();
    SALES_CHANNELS_QUERY_KEY = "sales-channels";
    salesChannelsQueryKeys = queryKeysFactory(SALES_CHANNELS_QUERY_KEY);
    useSalesChannel = (id2, options) => {
      const { data, ...rest } = (0, import_react_query6.useQuery)({
        queryKey: salesChannelsQueryKeys.detail(id2),
        queryFn: async () => sdk.admin.salesChannel.retrieve(id2),
        ...options
      });
      return { ...data, ...rest };
    };
    useSalesChannels = (query, options) => {
      const { data, ...rest } = (0, import_react_query6.useQuery)({
        queryFn: () => sdk.admin.salesChannel.list(query),
        queryKey: salesChannelsQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useCreateSalesChannel = (options) => {
      return (0, import_react_query6.useMutation)({
        mutationFn: (payload) => sdk.admin.salesChannel.create(payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: salesChannelsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateSalesChannel = (id2, options) => {
      return (0, import_react_query6.useMutation)({
        mutationFn: (payload) => sdk.admin.salesChannel.update(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: salesChannelsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: salesChannelsQueryKeys.detail(id2)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteSalesChannel = (id2, options) => {
      return (0, import_react_query6.useMutation)({
        mutationFn: () => sdk.admin.salesChannel.delete(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: salesChannelsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: salesChannelsQueryKeys.detail(id2)
          });
          queryClient.invalidateQueries({
            queryKey: productsQueryKeys.all
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useSalesChannelRemoveProducts = (id2, options) => {
      return (0, import_react_query6.useMutation)({
        mutationFn: (payload) => sdk.admin.salesChannel.batchProducts(id2, { remove: payload }),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: salesChannelsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: salesChannelsQueryKeys.detail(id2)
          });
          for (const product of variables || []) {
            queryClient.invalidateQueries({
              queryKey: productsQueryKeys.detail(product)
            });
          }
          queryClient.invalidateQueries({
            queryKey: productsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useSalesChannelAddProducts = (id2, options) => {
      return (0, import_react_query6.useMutation)({
        mutationFn: (payload) => sdk.admin.salesChannel.batchProducts(id2, { add: payload }),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: salesChannelsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: salesChannelsQueryKeys.detail(id2)
          });
          for (const product of variables || []) {
            queryClient.invalidateQueries({
              queryKey: productsQueryKeys.detail(product)
            });
          }
          queryClient.invalidateQueries({
            queryKey: productsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/api-keys.tsx
var import_react_query7, API_KEYS_QUERY_KEY, apiKeysQueryKeys, useApiKey, useApiKeys, useCreateApiKey, useUpdateApiKey, useRevokeApiKey, useDeleteApiKey, useBatchRemoveSalesChannelsFromApiKey, useBatchAddSalesChannelsToApiKey;
var init_api_keys = __esm({
  "src/hooks/api/api-keys.tsx"() {
    "use strict";
    import_react_query7 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_sales_channels();
    API_KEYS_QUERY_KEY = "api_keys";
    apiKeysQueryKeys = queryKeysFactory(API_KEYS_QUERY_KEY);
    useApiKey = (id2, options) => {
      const { data, ...rest } = (0, import_react_query7.useQuery)({
        queryFn: () => sdk.admin.apiKey.retrieve(id2),
        queryKey: apiKeysQueryKeys.detail(id2),
        ...options
      });
      return { ...data, ...rest };
    };
    useApiKeys = (query, options) => {
      const { data, ...rest } = (0, import_react_query7.useQuery)({
        queryFn: () => sdk.admin.apiKey.list(query),
        queryKey: apiKeysQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useCreateApiKey = (options) => {
      return (0, import_react_query7.useMutation)({
        mutationFn: (payload) => sdk.admin.apiKey.create(payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: apiKeysQueryKeys.lists() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateApiKey = (id2, options) => {
      return (0, import_react_query7.useMutation)({
        mutationFn: (payload) => sdk.admin.apiKey.update(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: apiKeysQueryKeys.lists() });
          queryClient.invalidateQueries({ queryKey: apiKeysQueryKeys.detail(id2) });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useRevokeApiKey = (id2, options) => {
      return (0, import_react_query7.useMutation)({
        mutationFn: () => sdk.admin.apiKey.revoke(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: apiKeysQueryKeys.lists() });
          queryClient.invalidateQueries({ queryKey: apiKeysQueryKeys.detail(id2) });
          options?.onSuccess?.(data, variables, context);
        }
      });
    };
    useDeleteApiKey = (id2, options) => {
      return (0, import_react_query7.useMutation)({
        mutationFn: () => sdk.admin.apiKey.delete(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: apiKeysQueryKeys.lists() });
          queryClient.invalidateQueries({ queryKey: apiKeysQueryKeys.detail(id2) });
          options?.onSuccess?.(data, variables, context);
        }
      });
    };
    useBatchRemoveSalesChannelsFromApiKey = (id2, options) => {
      return (0, import_react_query7.useMutation)({
        mutationFn: (payload) => sdk.admin.apiKey.batchSalesChannels(id2, { remove: payload }),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: apiKeysQueryKeys.lists() });
          queryClient.invalidateQueries({ queryKey: apiKeysQueryKeys.detail(id2) });
          queryClient.invalidateQueries({
            queryKey: salesChannelsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useBatchAddSalesChannelsToApiKey = (id2, options) => {
      return (0, import_react_query7.useMutation)({
        mutationFn: (payload) => sdk.admin.apiKey.batchSalesChannels(id2, { add: payload }),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: apiKeysQueryKeys.lists() });
          queryClient.invalidateQueries({ queryKey: apiKeysQueryKeys.detail(id2) });
          queryClient.invalidateQueries({
            queryKey: salesChannelsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/auth.tsx
var import_react_query8, useSignInWithEmailPass, useSignUpWithEmailPass, useResetPasswordForEmailPass, useLogout, useUpdateProviderForEmailPass;
var init_auth = __esm({
  "src/hooks/api/auth.tsx"() {
    "use strict";
    import_react_query8 = require("@tanstack/react-query");
    init_client2();
    useSignInWithEmailPass = (options) => {
      return (0, import_react_query8.useMutation)({
        mutationFn: (payload) => sdk.auth.login("user", "emailpass", payload),
        onSuccess: async (data, variables, context) => {
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useSignUpWithEmailPass = (options) => {
      return (0, import_react_query8.useMutation)({
        mutationFn: (payload) => sdk.auth.register("user", "emailpass", payload),
        onSuccess: async (data, variables, context) => {
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useResetPasswordForEmailPass = (options) => {
      return (0, import_react_query8.useMutation)({
        mutationFn: (payload) => sdk.auth.resetPassword("user", "emailpass", {
          identifier: payload.email
        }),
        onSuccess: async (data, variables, context) => {
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useLogout = (options) => {
      return (0, import_react_query8.useMutation)({
        mutationFn: () => sdk.auth.logout(),
        ...options
      });
    };
    useUpdateProviderForEmailPass = (options) => {
      return (0, import_react_query8.useMutation)({
        mutationFn: (payload) => sdk.auth.updateProvider("user", "emailpass", payload),
        onSuccess: async (data, variables, context) => {
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/promotions.tsx
var import_react_query9, PROMOTIONS_QUERY_KEY, promotionsQueryKeys, usePromotion, usePromotionRules, usePromotions, usePromotionRuleAttributes, usePromotionRuleValues, useDeletePromotion, useCreatePromotion, useUpdatePromotion, usePromotionAddRules, usePromotionRemoveRules, usePromotionUpdateRules;
var init_promotions = __esm({
  "src/hooks/api/promotions.tsx"() {
    "use strict";
    import_react_query9 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_campaigns();
    PROMOTIONS_QUERY_KEY = "promotions";
    promotionsQueryKeys = {
      ...queryKeysFactory(PROMOTIONS_QUERY_KEY),
      // TODO: handle invalidations properly
      listRules: (id2, ruleType, query) => [PROMOTIONS_QUERY_KEY, id2, ruleType, query],
      listRuleAttributes: (ruleType, promotionType) => [
        PROMOTIONS_QUERY_KEY,
        ruleType,
        promotionType
      ],
      listRuleValues: (ruleType, ruleValue, query) => [PROMOTIONS_QUERY_KEY, ruleType, ruleValue, query]
    };
    usePromotion = (id2, options) => {
      const { data, ...rest } = (0, import_react_query9.useQuery)({
        queryKey: promotionsQueryKeys.detail(id2),
        queryFn: async () => sdk.admin.promotion.retrieve(id2),
        ...options
      });
      return { ...data, ...rest };
    };
    usePromotionRules = (id2, ruleType, query, options) => {
      const { data, ...rest } = (0, import_react_query9.useQuery)({
        queryKey: promotionsQueryKeys.listRules(id2, ruleType, query),
        queryFn: async () => sdk.admin.promotion.listRules(id2, ruleType, query),
        ...options
      });
      return { ...data, ...rest };
    };
    usePromotions = (query, options) => {
      const { data, ...rest } = (0, import_react_query9.useQuery)({
        queryKey: promotionsQueryKeys.list(query),
        queryFn: async () => sdk.admin.promotion.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    usePromotionRuleAttributes = (ruleType, promotionType, options) => {
      const { data, ...rest } = (0, import_react_query9.useQuery)({
        queryKey: promotionsQueryKeys.listRuleAttributes(ruleType, promotionType),
        queryFn: async () => sdk.admin.promotion.listRuleAttributes(ruleType, promotionType),
        ...options
      });
      return { ...data, ...rest };
    };
    usePromotionRuleValues = (ruleType, ruleValue, query, options) => {
      const { data, ...rest } = (0, import_react_query9.useQuery)({
        queryKey: promotionsQueryKeys.listRuleValues(
          ruleType,
          ruleValue,
          query || {}
        ),
        queryFn: async () => sdk.admin.promotion.listRuleValues(ruleType, ruleValue, query),
        ...options
      });
      return { ...data, ...rest };
    };
    useDeletePromotion = (id2, options) => {
      return (0, import_react_query9.useMutation)({
        mutationFn: () => sdk.admin.promotion.delete(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: promotionsQueryKeys.lists() });
          queryClient.invalidateQueries({
            queryKey: promotionsQueryKeys.detail(id2)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useCreatePromotion = (options) => {
      return (0, import_react_query9.useMutation)({
        mutationFn: (payload) => sdk.admin.promotion.create(payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: promotionsQueryKeys.lists() });
          queryClient.invalidateQueries({ queryKey: campaignsQueryKeys.lists() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdatePromotion = (id2, options) => {
      return (0, import_react_query9.useMutation)({
        mutationFn: (payload) => sdk.admin.promotion.update(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: promotionsQueryKeys.all });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    usePromotionAddRules = (id2, ruleType, options) => {
      return (0, import_react_query9.useMutation)({
        mutationFn: (payload) => sdk.admin.promotion.addRules(id2, ruleType, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: promotionsQueryKeys.all });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    usePromotionRemoveRules = (id2, ruleType, options) => {
      return (0, import_react_query9.useMutation)({
        mutationFn: (payload) => sdk.admin.promotion.removeRules(id2, ruleType, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: promotionsQueryKeys.all });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    usePromotionUpdateRules = (id2, ruleType, options) => {
      return (0, import_react_query9.useMutation)({
        mutationFn: (payload) => sdk.admin.promotion.updateRules(id2, ruleType, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: promotionsQueryKeys.all });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/campaigns.tsx
var import_react_query10, REGIONS_QUERY_KEY, campaignsQueryKeys, useCampaign, useCampaigns, useCreateCampaign, useUpdateCampaign, useDeleteCampaign, useAddOrRemoveCampaignPromotions;
var init_campaigns = __esm({
  "src/hooks/api/campaigns.tsx"() {
    "use strict";
    import_react_query10 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_promotions();
    REGIONS_QUERY_KEY = "campaigns";
    campaignsQueryKeys = queryKeysFactory(REGIONS_QUERY_KEY);
    useCampaign = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query10.useQuery)({
        queryKey: campaignsQueryKeys.detail(id2),
        queryFn: async () => sdk.admin.campaign.retrieve(id2, query),
        ...options
      });
      return { ...data, ...rest };
    };
    useCampaigns = (query, options) => {
      const { data, ...rest } = (0, import_react_query10.useQuery)({
        queryFn: () => sdk.admin.campaign.list(query),
        queryKey: campaignsQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useCreateCampaign = (options) => {
      return (0, import_react_query10.useMutation)({
        mutationFn: (payload) => sdk.admin.campaign.create(payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: campaignsQueryKeys.lists() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateCampaign = (id2, options) => {
      return (0, import_react_query10.useMutation)({
        mutationFn: (payload) => sdk.admin.campaign.update(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: campaignsQueryKeys.lists() });
          queryClient.invalidateQueries({ queryKey: campaignsQueryKeys.details() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteCampaign = (id2, options) => {
      return (0, import_react_query10.useMutation)({
        mutationFn: () => sdk.admin.campaign.delete(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: campaignsQueryKeys.lists() });
          queryClient.invalidateQueries({ queryKey: campaignsQueryKeys.details() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useAddOrRemoveCampaignPromotions = (id2, options) => {
      return (0, import_react_query10.useMutation)({
        mutationFn: (payload) => sdk.admin.campaign.batchPromotions(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: campaignsQueryKeys.details() });
          queryClient.invalidateQueries({ queryKey: promotionsQueryKeys.lists() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/categories.tsx
var import_react_query11, CATEGORIES_QUERY_KEY, categoriesQueryKeys, useProductCategory, useProductCategories, useCreateProductCategory, useUpdateProductCategory, useDeleteProductCategory, useUpdateProductCategoryProducts;
var init_categories = __esm({
  "src/hooks/api/categories.tsx"() {
    "use strict";
    import_react_query11 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_products();
    CATEGORIES_QUERY_KEY = "categories";
    categoriesQueryKeys = queryKeysFactory(CATEGORIES_QUERY_KEY);
    useProductCategory = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query11.useQuery)({
        queryKey: categoriesQueryKeys.detail(id2, query),
        queryFn: () => sdk.admin.productCategory.retrieve(id2, query),
        ...options
      });
      return { ...data, ...rest };
    };
    useProductCategories = (query, options) => {
      const { data, ...rest } = (0, import_react_query11.useQuery)({
        queryKey: categoriesQueryKeys.list(query),
        queryFn: () => sdk.admin.productCategory.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useCreateProductCategory = (options) => {
      return (0, import_react_query11.useMutation)({
        mutationFn: (payload) => sdk.admin.productCategory.create(payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: categoriesQueryKeys.lists() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateProductCategory = (id2, options) => {
      return (0, import_react_query11.useMutation)({
        mutationFn: (payload) => sdk.admin.productCategory.update(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: categoriesQueryKeys.lists() });
          queryClient.invalidateQueries({
            queryKey: categoriesQueryKeys.detail(id2)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteProductCategory = (id2, options) => {
      return (0, import_react_query11.useMutation)({
        mutationFn: () => sdk.admin.productCategory.delete(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: categoriesQueryKeys.detail(id2)
          });
          queryClient.invalidateQueries({ queryKey: categoriesQueryKeys.lists() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateProductCategoryProducts = (id2, options) => {
      return (0, import_react_query11.useMutation)({
        mutationFn: (payload) => sdk.admin.productCategory.updateProducts(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: categoriesQueryKeys.lists() });
          queryClient.invalidateQueries({
            queryKey: categoriesQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: productsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: productsQueryKeys.details()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/collections.tsx
var import_react_query12, COLLECTION_QUERY_KEY, collectionsQueryKeys, useCollection, useCollections, useUpdateCollection, useUpdateCollectionProducts, useCreateCollection, useDeleteCollection;
var init_collections = __esm({
  "src/hooks/api/collections.tsx"() {
    "use strict";
    import_react_query12 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_products();
    COLLECTION_QUERY_KEY = "collections";
    collectionsQueryKeys = queryKeysFactory(COLLECTION_QUERY_KEY);
    useCollection = (id2, options) => {
      const { data, ...rest } = (0, import_react_query12.useQuery)({
        queryKey: collectionsQueryKeys.detail(id2),
        queryFn: async () => sdk.admin.productCollection.retrieve(id2),
        ...options
      });
      return { ...data, ...rest };
    };
    useCollections = (query, options) => {
      const { data, ...rest } = (0, import_react_query12.useQuery)({
        queryKey: collectionsQueryKeys.list(query),
        queryFn: async () => sdk.admin.productCollection.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useUpdateCollection = (id2, options) => {
      return (0, import_react_query12.useMutation)({
        mutationFn: (payload) => sdk.admin.productCollection.update(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: collectionsQueryKeys.lists() });
          queryClient.invalidateQueries({
            queryKey: collectionsQueryKeys.detail(id2)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateCollectionProducts = (id2, options) => {
      return (0, import_react_query12.useMutation)({
        mutationFn: (payload) => sdk.admin.productCollection.updateProducts(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: collectionsQueryKeys.lists() });
          queryClient.invalidateQueries({
            queryKey: collectionsQueryKeys.detail(id2)
          });
          queryClient.invalidateQueries({
            queryKey: productsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useCreateCollection = (options) => {
      return (0, import_react_query12.useMutation)({
        mutationFn: (payload) => sdk.admin.productCollection.create(payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: collectionsQueryKeys.lists() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteCollection = (id2, options) => {
      return (0, import_react_query12.useMutation)({
        mutationFn: () => sdk.admin.productCollection.delete(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: collectionsQueryKeys.lists() });
          queryClient.invalidateQueries({
            queryKey: collectionsQueryKeys.detail(id2)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/currencies.tsx
var import_react_query13, CURRENCIES_QUERY_KEY, currenciesQueryKeys, useCurrencies;
var init_currencies = __esm({
  "src/hooks/api/currencies.tsx"() {
    "use strict";
    import_react_query13 = require("@tanstack/react-query");
    init_client2();
    init_query_key_factory();
    CURRENCIES_QUERY_KEY = "currencies";
    currenciesQueryKeys = queryKeysFactory(CURRENCIES_QUERY_KEY);
    useCurrencies = (query, options) => {
      const { data, ...rest } = (0, import_react_query13.useQuery)({
        queryFn: () => sdk.admin.currency.list(query),
        queryKey: currenciesQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
  }
});

// src/hooks/api/customers.tsx
var import_react_query14, CUSTOMERS_QUERY_KEY, customersQueryKeys, useCustomer, useCustomers, useCreateCustomer, useUpdateCustomer, useDeleteCustomer, useBatchCustomerCustomerGroups;
var init_customers = __esm({
  "src/hooks/api/customers.tsx"() {
    "use strict";
    import_react_query14 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_customer_groups();
    CUSTOMERS_QUERY_KEY = "customers";
    customersQueryKeys = queryKeysFactory(CUSTOMERS_QUERY_KEY);
    useCustomer = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query14.useQuery)({
        queryKey: customersQueryKeys.detail(id2),
        queryFn: async () => sdk.admin.customer.retrieve(id2, query),
        ...options
      });
      return { ...data, ...rest };
    };
    useCustomers = (query, options) => {
      const { data, ...rest } = (0, import_react_query14.useQuery)({
        queryFn: () => sdk.admin.customer.list(query),
        queryKey: customersQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useCreateCustomer = (options) => {
      return (0, import_react_query14.useMutation)({
        mutationFn: (payload) => sdk.admin.customer.create(payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: customersQueryKeys.lists() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateCustomer = (id2, options) => {
      return (0, import_react_query14.useMutation)({
        mutationFn: (payload) => sdk.admin.customer.update(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: customersQueryKeys.lists() });
          queryClient.invalidateQueries({ queryKey: customersQueryKeys.detail(id2) });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteCustomer = (id2, options) => {
      return (0, import_react_query14.useMutation)({
        mutationFn: () => sdk.admin.customer.delete(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: customersQueryKeys.lists() });
          queryClient.invalidateQueries({
            queryKey: customersQueryKeys.detail(id2)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useBatchCustomerCustomerGroups = (id2, options) => {
      return (0, import_react_query14.useMutation)({
        mutationFn: (payload) => sdk.admin.customer.batchCustomerGroups(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: customerGroupsQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: customerGroupsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: customersQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: customersQueryKeys.details()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/customer-groups.tsx
var import_react_query15, CUSTOMER_GROUPS_QUERY_KEY, customerGroupsQueryKeys, useCustomerGroup, useCustomerGroups, useCreateCustomerGroup, useUpdateCustomerGroup, useDeleteCustomerGroup, useAddCustomersToGroup, useRemoveCustomersFromGroup;
var init_customer_groups = __esm({
  "src/hooks/api/customer-groups.tsx"() {
    "use strict";
    import_react_query15 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_customers();
    CUSTOMER_GROUPS_QUERY_KEY = "customer_groups";
    customerGroupsQueryKeys = queryKeysFactory(
      CUSTOMER_GROUPS_QUERY_KEY
    );
    useCustomerGroup = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query15.useQuery)({
        queryKey: customerGroupsQueryKeys.detail(id2, query),
        queryFn: async () => sdk.admin.customerGroup.retrieve(id2, query),
        ...options
      });
      return { ...data, ...rest };
    };
    useCustomerGroups = (query, options) => {
      const { data, ...rest } = (0, import_react_query15.useQuery)({
        queryFn: () => sdk.admin.customerGroup.list(query),
        queryKey: customerGroupsQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useCreateCustomerGroup = (options) => {
      return (0, import_react_query15.useMutation)({
        mutationFn: (payload) => sdk.admin.customerGroup.create(payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: customerGroupsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateCustomerGroup = (id2, options) => {
      return (0, import_react_query15.useMutation)({
        mutationFn: (payload) => sdk.admin.customerGroup.update(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: customerGroupsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: customerGroupsQueryKeys.detail(id2)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteCustomerGroup = (id2, options) => {
      return (0, import_react_query15.useMutation)({
        mutationFn: () => sdk.admin.customerGroup.delete(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: customerGroupsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: customerGroupsQueryKeys.detail(id2)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useAddCustomersToGroup = (id2, options) => {
      return (0, import_react_query15.useMutation)({
        mutationFn: (payload) => sdk.admin.customerGroup.batchCustomers(id2, { add: payload }),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: customerGroupsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: customerGroupsQueryKeys.detail(id2)
          });
          queryClient.invalidateQueries({
            queryKey: customersQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useRemoveCustomersFromGroup = (id2, options) => {
      return (0, import_react_query15.useMutation)({
        mutationFn: (payload) => sdk.admin.customerGroup.batchCustomers(id2, { remove: payload }),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: customerGroupsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: customerGroupsQueryKeys.detail(id2)
          });
          queryClient.invalidateQueries({
            queryKey: customersQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/reservations.tsx
var import_react_query16, RESERVATION_ITEMS_QUERY_KEY, reservationItemsQueryKeys, useReservationItem, useReservationItems, useUpdateReservationItem, useCreateReservationItem, useDeleteReservationItem;
var init_reservations = __esm({
  "src/hooks/api/reservations.tsx"() {
    "use strict";
    import_react_query16 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_inventory();
    RESERVATION_ITEMS_QUERY_KEY = "reservation_items";
    reservationItemsQueryKeys = queryKeysFactory(
      RESERVATION_ITEMS_QUERY_KEY
    );
    useReservationItem = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query16.useQuery)({
        queryKey: reservationItemsQueryKeys.detail(id2),
        queryFn: async () => sdk.admin.reservation.retrieve(id2, query),
        ...options
      });
      return { ...data, ...rest };
    };
    useReservationItems = (query, options) => {
      const { data, ...rest } = (0, import_react_query16.useQuery)({
        queryFn: () => sdk.admin.reservation.list(query),
        queryKey: reservationItemsQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useUpdateReservationItem = (id2, options) => {
      return (0, import_react_query16.useMutation)({
        mutationFn: (payload) => sdk.admin.reservation.update(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: reservationItemsQueryKeys.detail(id2)
          });
          queryClient.invalidateQueries({
            queryKey: reservationItemsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: inventoryItemsQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: inventoryItemLevelsQueryKeys.details()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useCreateReservationItem = (options) => {
      return (0, import_react_query16.useMutation)({
        mutationFn: (payload) => sdk.admin.reservation.create(payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: reservationItemsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: inventoryItemsQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: inventoryItemLevelsQueryKeys.details()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteReservationItem = (id2, options) => {
      return (0, import_react_query16.useMutation)({
        mutationFn: () => sdk.admin.reservation.delete(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: reservationItemsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: reservationItemsQueryKeys.detail(id2)
          });
          queryClient.invalidateQueries({
            queryKey: inventoryItemsQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: inventoryItemLevelsQueryKeys.details()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/orders.tsx
var import_react_query17, ORDERS_QUERY_KEY, _orderKeys, ordersQueryKeys, useOrder, useOrderPreview, useOrders, useOrderChanges, useOrderLineItems, useCreateOrderFulfillment, useCancelOrderFulfillment, useCreateOrderShipment, useMarkOrderFulfillmentAsDelivered, useCancelOrder;
var init_orders = __esm({
  "src/hooks/api/orders.tsx"() {
    "use strict";
    import_react_query17 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_inventory();
    init_reservations();
    ORDERS_QUERY_KEY = "orders";
    _orderKeys = queryKeysFactory(ORDERS_QUERY_KEY);
    _orderKeys.preview = function(id2) {
      return [this.detail(id2), "preview"];
    };
    _orderKeys.changes = function(id2) {
      return [this.detail(id2), "changes"];
    };
    _orderKeys.lineItems = function(id2) {
      return [this.detail(id2), "lineItems"];
    };
    ordersQueryKeys = _orderKeys;
    useOrder = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query17.useQuery)({
        queryFn: async () => sdk.admin.order.retrieve(id2, query),
        queryKey: ordersQueryKeys.detail(id2, query),
        ...options
      });
      return { ...data, ...rest };
    };
    useOrderPreview = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query17.useQuery)({
        queryFn: async () => sdk.admin.order.retrievePreview(id2, query),
        queryKey: ordersQueryKeys.preview(id2),
        ...options
      });
      return { ...data, ...rest };
    };
    useOrders = (query, options) => {
      const { data, ...rest } = (0, import_react_query17.useQuery)({
        queryFn: async () => sdk.admin.order.list(query),
        queryKey: ordersQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useOrderChanges = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query17.useQuery)({
        queryFn: async () => sdk.admin.order.listChanges(id2, query),
        queryKey: ordersQueryKeys.changes(id2),
        ...options
      });
      return { ...data, ...rest };
    };
    useOrderLineItems = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query17.useQuery)({
        queryFn: async () => sdk.admin.order.listLineItems(id2, query),
        queryKey: ordersQueryKeys.lineItems(id2),
        ...options
      });
      return { ...data, ...rest };
    };
    useCreateOrderFulfillment = (orderId, options) => {
      return (0, import_react_query17.useMutation)({
        mutationFn: (payload) => sdk.admin.order.createFulfillment(orderId, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.all
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          queryClient.invalidateQueries({
            queryKey: reservationItemsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: inventoryItemsQueryKeys.details()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useCancelOrderFulfillment = (orderId, fulfillmentId, options) => {
      return (0, import_react_query17.useMutation)({
        mutationFn: (payload) => sdk.admin.order.cancelFulfillment(orderId, fulfillmentId, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.all
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useCreateOrderShipment = (orderId, fulfillmentId, options) => {
      return (0, import_react_query17.useMutation)({
        mutationFn: (payload) => sdk.admin.order.createShipment(orderId, fulfillmentId, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.all
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useMarkOrderFulfillmentAsDelivered = (orderId, fulfillmentId, options) => {
      return (0, import_react_query17.useMutation)({
        mutationFn: (payload) => sdk.admin.order.markAsDelivered(orderId, fulfillmentId, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.all
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useCancelOrder = (orderId, options) => {
      return (0, import_react_query17.useMutation)({
        mutationFn: (id2) => sdk.admin.order.cancel(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/fulfillment.tsx
var import_react_query18, FULFILLMENTS_QUERY_KEY, fulfillmentsQueryKeys;
var init_fulfillment = __esm({
  "src/hooks/api/fulfillment.tsx"() {
    "use strict";
    import_react_query18 = require("@tanstack/react-query");
    init_query_key_factory();
    init_client2();
    init_query_client();
    init_orders();
    FULFILLMENTS_QUERY_KEY = "fulfillments";
    fulfillmentsQueryKeys = queryKeysFactory(FULFILLMENTS_QUERY_KEY);
  }
});

// src/hooks/api/fulfillment-providers.tsx
var import_react_query19, FULFILLMENT_PROVIDERS_QUERY_KEY, fulfillmentProvidersQueryKeys, useFulfillmentProviders;
var init_fulfillment_providers = __esm({
  "src/hooks/api/fulfillment-providers.tsx"() {
    "use strict";
    import_react_query19 = require("@tanstack/react-query");
    init_client2();
    init_query_key_factory();
    FULFILLMENT_PROVIDERS_QUERY_KEY = "fulfillment_providers";
    fulfillmentProvidersQueryKeys = queryKeysFactory(
      FULFILLMENT_PROVIDERS_QUERY_KEY
    );
    useFulfillmentProviders = (query, options) => {
      const { data, ...rest } = (0, import_react_query19.useQuery)({
        queryFn: () => sdk.admin.fulfillmentProvider.list(query),
        queryKey: fulfillmentProvidersQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
  }
});

// src/hooks/api/stock-locations.tsx
var import_react_query20, STOCK_LOCATIONS_QUERY_KEY, stockLocationsQueryKeys, useStockLocation, useStockLocations, useCreateStockLocation, useUpdateStockLocation, useUpdateStockLocationSalesChannels, useDeleteStockLocation, useCreateStockLocationFulfillmentSet, useUpdateStockLocationFulfillmentProviders;
var init_stock_locations = __esm({
  "src/hooks/api/stock-locations.tsx"() {
    "use strict";
    import_react_query20 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_fulfillment_providers();
    STOCK_LOCATIONS_QUERY_KEY = "stock_locations";
    stockLocationsQueryKeys = queryKeysFactory(
      STOCK_LOCATIONS_QUERY_KEY
    );
    useStockLocation = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query20.useQuery)({
        queryFn: () => sdk.admin.stockLocation.retrieve(id2, query),
        queryKey: stockLocationsQueryKeys.detail(id2, query),
        ...options
      });
      return { ...data, ...rest };
    };
    useStockLocations = (query, options) => {
      const { data, ...rest } = (0, import_react_query20.useQuery)({
        queryFn: () => sdk.admin.stockLocation.list(query),
        queryKey: stockLocationsQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useCreateStockLocation = (options) => {
      return (0, import_react_query20.useMutation)({
        mutationFn: (payload) => sdk.admin.stockLocation.create(payload),
        onSuccess: async (data, variables, context) => {
          await queryClient.invalidateQueries({
            queryKey: stockLocationsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateStockLocation = (id2, options) => {
      return (0, import_react_query20.useMutation)({
        mutationFn: (payload) => sdk.admin.stockLocation.update(id2, payload),
        onSuccess: async (data, variables, context) => {
          await queryClient.invalidateQueries({
            queryKey: stockLocationsQueryKeys.details()
          });
          await queryClient.invalidateQueries({
            queryKey: stockLocationsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateStockLocationSalesChannels = (id2, options) => {
      return (0, import_react_query20.useMutation)({
        mutationFn: (payload) => sdk.admin.stockLocation.updateSalesChannels(id2, payload),
        onSuccess: async (data, variables, context) => {
          await queryClient.invalidateQueries({
            queryKey: stockLocationsQueryKeys.details()
          });
          await queryClient.invalidateQueries({
            queryKey: stockLocationsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteStockLocation = (id2, options) => {
      return (0, import_react_query20.useMutation)({
        mutationFn: () => sdk.admin.stockLocation.delete(id2),
        onSuccess: async (data, variables, context) => {
          await queryClient.invalidateQueries({
            queryKey: stockLocationsQueryKeys.lists()
          });
          await queryClient.invalidateQueries({
            queryKey: stockLocationsQueryKeys.detail(id2)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useCreateStockLocationFulfillmentSet = (locationId, options) => {
      return (0, import_react_query20.useMutation)({
        mutationFn: (payload) => sdk.admin.stockLocation.createFulfillmentSet(locationId, payload),
        onSuccess: async (data, variables, context) => {
          await queryClient.invalidateQueries({
            queryKey: stockLocationsQueryKeys.all
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateStockLocationFulfillmentProviders = (id2, options) => {
      return (0, import_react_query20.useMutation)({
        mutationFn: (payload) => sdk.admin.stockLocation.updateFulfillmentProviders(id2, payload),
        onSuccess: async (data, variables, context) => {
          await queryClient.invalidateQueries({
            queryKey: stockLocationsQueryKeys.details()
          });
          await queryClient.invalidateQueries({
            queryKey: fulfillmentProvidersQueryKeys.all
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/shipping-options.tsx
var import_react_query21, SHIPPING_OPTIONS_QUERY_KEY, shippingOptionsQueryKeys, useShippingOption, useShippingOptions, useCreateShippingOptions, useUpdateShippingOptions, useDeleteShippingOption;
var init_shipping_options = __esm({
  "src/hooks/api/shipping-options.tsx"() {
    "use strict";
    import_react_query21 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_stock_locations();
    SHIPPING_OPTIONS_QUERY_KEY = "shipping_options";
    shippingOptionsQueryKeys = queryKeysFactory(
      SHIPPING_OPTIONS_QUERY_KEY
    );
    useShippingOption = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query21.useQuery)({
        queryFn: () => sdk.admin.shippingOption.retrieve(id2, query),
        queryKey: shippingOptionsQueryKeys.detail(id2),
        ...options
      });
      return { ...data, ...rest };
    };
    useShippingOptions = (query, options) => {
      const { data, ...rest } = (0, import_react_query21.useQuery)({
        queryFn: () => sdk.admin.shippingOption.list(query),
        queryKey: shippingOptionsQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useCreateShippingOptions = (options) => {
      return (0, import_react_query21.useMutation)({
        mutationFn: (payload) => sdk.admin.shippingOption.create(payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: stockLocationsQueryKeys.all
          });
          queryClient.invalidateQueries({
            queryKey: shippingOptionsQueryKeys.all
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateShippingOptions = (id2, options) => {
      return (0, import_react_query21.useMutation)({
        mutationFn: (payload) => sdk.admin.shippingOption.update(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: stockLocationsQueryKeys.all
          });
          queryClient.invalidateQueries({
            queryKey: shippingOptionsQueryKeys.all
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteShippingOption = (optionId, options) => {
      return (0, import_react_query21.useMutation)({
        mutationFn: () => sdk.admin.shippingOption.delete(optionId),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: stockLocationsQueryKeys.all
          });
          queryClient.invalidateQueries({
            queryKey: shippingOptionsQueryKeys.all
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/fulfillment-sets.tsx
var import_react_query22, FULFILLMENT_SETS_QUERY_KEY, fulfillmentSetsQueryKeys, useDeleteFulfillmentSet, useCreateFulfillmentSetServiceZone, useUpdateFulfillmentSetServiceZone, useDeleteFulfillmentServiceZone;
var init_fulfillment_sets = __esm({
  "src/hooks/api/fulfillment-sets.tsx"() {
    "use strict";
    import_react_query22 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_shipping_options();
    init_stock_locations();
    FULFILLMENT_SETS_QUERY_KEY = "fulfillment_sets";
    fulfillmentSetsQueryKeys = queryKeysFactory(
      FULFILLMENT_SETS_QUERY_KEY
    );
    useDeleteFulfillmentSet = (id2, options) => {
      return (0, import_react_query22.useMutation)({
        mutationFn: () => sdk.admin.fulfillmentSet.delete(id2),
        onSuccess: async (data, variables, context) => {
          await queryClient.invalidateQueries({
            queryKey: fulfillmentSetsQueryKeys.detail(id2)
          });
          await queryClient.invalidateQueries({
            queryKey: fulfillmentSetsQueryKeys.lists()
          });
          await queryClient.invalidateQueries({
            queryKey: stockLocationsQueryKeys.all
          });
          await queryClient.invalidateQueries({
            queryKey: shippingOptionsQueryKeys.all
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useCreateFulfillmentSetServiceZone = (fulfillmentSetId, options) => {
      return (0, import_react_query22.useMutation)({
        mutationFn: (payload) => sdk.admin.fulfillmentSet.createServiceZone(fulfillmentSetId, payload),
        onSuccess: async (data, variables, context) => {
          await queryClient.invalidateQueries({
            queryKey: fulfillmentSetsQueryKeys.lists()
          });
          await queryClient.invalidateQueries({
            queryKey: stockLocationsQueryKeys.all
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateFulfillmentSetServiceZone = (fulfillmentSetId, serviceZoneId, options) => {
      return (0, import_react_query22.useMutation)({
        mutationFn: (payload) => sdk.admin.fulfillmentSet.updateServiceZone(
          fulfillmentSetId,
          serviceZoneId,
          payload
        ),
        onSuccess: async (data, variables, context) => {
          await queryClient.invalidateQueries({
            queryKey: fulfillmentSetsQueryKeys.lists()
          });
          await queryClient.invalidateQueries({
            queryKey: stockLocationsQueryKeys.all
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteFulfillmentServiceZone = (fulfillmentSetId, serviceZoneId, options) => {
      return (0, import_react_query22.useMutation)({
        mutationFn: () => sdk.admin.fulfillmentSet.deleteServiceZone(
          fulfillmentSetId,
          serviceZoneId
        ),
        onSuccess: async (data, variables, context) => {
          await queryClient.invalidateQueries({
            queryKey: fulfillmentSetsQueryKeys.lists()
          });
          await queryClient.invalidateQueries({
            queryKey: shippingOptionsQueryKeys.lists()
          });
          await queryClient.invalidateQueries({
            queryKey: stockLocationsQueryKeys.all
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/invites.tsx
var import_react_query23, INVITES_QUERY_KEY, invitesQueryKeys, useInvites, useCreateInvite, useResendInvite, useDeleteInvite, useAcceptInvite;
var init_invites = __esm({
  "src/hooks/api/invites.tsx"() {
    "use strict";
    import_react_query23 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    INVITES_QUERY_KEY = "invites";
    invitesQueryKeys = queryKeysFactory(INVITES_QUERY_KEY);
    useInvites = (query, options) => {
      const { data, ...rest } = (0, import_react_query23.useQuery)({
        queryFn: () => sdk.admin.invite.list(query),
        queryKey: invitesQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useCreateInvite = (options) => {
      return (0, import_react_query23.useMutation)({
        mutationFn: (payload) => sdk.admin.invite.create(payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: invitesQueryKeys.lists() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useResendInvite = (id2, options) => {
      return (0, import_react_query23.useMutation)({
        mutationFn: () => sdk.admin.invite.resend(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: invitesQueryKeys.lists() });
          queryClient.invalidateQueries({ queryKey: invitesQueryKeys.detail(id2) });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteInvite = (id2, options) => {
      return (0, import_react_query23.useMutation)({
        mutationFn: () => sdk.admin.invite.delete(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: invitesQueryKeys.lists() });
          queryClient.invalidateQueries({ queryKey: invitesQueryKeys.detail(id2) });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useAcceptInvite = (inviteToken, options) => {
      return (0, import_react_query23.useMutation)({
        mutationFn: (payload) => {
          const { auth_token, ...rest } = payload;
          return sdk.admin.invite.accept(
            { invite_token: inviteToken, ...rest },
            {},
            {
              Authorization: `Bearer ${auth_token}`
            }
          );
        },
        onSuccess: (data, variables, context) => {
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/notification.tsx
var import_react_query24, NOTIFICATION_QUERY_KEY, notificationQueryKeys, useNotifications;
var init_notification = __esm({
  "src/hooks/api/notification.tsx"() {
    "use strict";
    import_react_query24 = require("@tanstack/react-query");
    init_client2();
    init_query_key_factory();
    NOTIFICATION_QUERY_KEY = "notification";
    notificationQueryKeys = queryKeysFactory(NOTIFICATION_QUERY_KEY);
    useNotifications = (query, options) => {
      const { data, ...rest } = (0, import_react_query24.useQuery)({
        queryFn: () => sdk.admin.notification.list(query),
        queryKey: notificationQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
  }
});

// src/hooks/api/payment-collections.tsx
var import_react_query25, PAYMENT_COLLECTION_QUERY_KEY, paymentCollectionQueryKeys, useMarkPaymentCollectionAsPaid;
var init_payment_collections = __esm({
  "src/hooks/api/payment-collections.tsx"() {
    "use strict";
    import_react_query25 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_orders();
    PAYMENT_COLLECTION_QUERY_KEY = "payment-collection";
    paymentCollectionQueryKeys = queryKeysFactory(
      PAYMENT_COLLECTION_QUERY_KEY
    );
    useMarkPaymentCollectionAsPaid = (orderId, paymentCollectionId, options) => {
      return (0, import_react_query25.useMutation)({
        mutationFn: (payload) => sdk.admin.paymentCollection.markAsPaid(paymentCollectionId, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          queryClient.invalidateQueries({
            queryKey: paymentCollectionQueryKeys.all
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/payments.tsx
var import_react_query26, PAYMENT_QUERY_KEY, paymentQueryKeys, usePaymentProviders, useCapturePayment, useRefundPayment;
var init_payments = __esm({
  "src/hooks/api/payments.tsx"() {
    "use strict";
    import_react_query26 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_orders();
    PAYMENT_QUERY_KEY = "payment";
    paymentQueryKeys = queryKeysFactory(PAYMENT_QUERY_KEY);
    usePaymentProviders = (query, options) => {
      const { data, ...rest } = (0, import_react_query26.useQuery)({
        queryFn: async () => sdk.admin.payment.listPaymentProviders(query),
        queryKey: [],
        ...options
      });
      return { ...data, ...rest };
    };
    useCapturePayment = (orderId, paymentId, options) => {
      return (0, import_react_query26.useMutation)({
        mutationFn: (payload) => sdk.admin.payment.capture(paymentId, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useRefundPayment = (orderId, paymentId, options) => {
      return (0, import_react_query26.useMutation)({
        mutationFn: (payload) => sdk.admin.payment.refund(paymentId, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/price-lists.tsx
var import_react_query27, PRICE_LISTS_QUERY_KEY, priceListsQueryKeys, usePriceList, usePriceLists, useCreatePriceList, useUpdatePriceList, useDeletePriceList, useBatchPriceListPrices, usePriceListLinkProducts;
var init_price_lists = __esm({
  "src/hooks/api/price-lists.tsx"() {
    "use strict";
    import_react_query27 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_customer_groups();
    init_products();
    PRICE_LISTS_QUERY_KEY = "price-lists";
    priceListsQueryKeys = queryKeysFactory(PRICE_LISTS_QUERY_KEY);
    usePriceList = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query27.useQuery)({
        queryFn: () => sdk.admin.priceList.retrieve(id2, query),
        queryKey: priceListsQueryKeys.detail(id2),
        ...options
      });
      return { ...data, ...rest };
    };
    usePriceLists = (query, options) => {
      const { data, ...rest } = (0, import_react_query27.useQuery)({
        queryFn: () => sdk.admin.priceList.list(query),
        queryKey: priceListsQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useCreatePriceList = (query, options) => {
      return (0, import_react_query27.useMutation)({
        mutationFn: (payload) => sdk.admin.priceList.create(payload, query),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: priceListsQueryKeys.lists() });
          queryClient.invalidateQueries({ queryKey: customerGroupsQueryKeys.all });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdatePriceList = (id2, query, options) => {
      return (0, import_react_query27.useMutation)({
        mutationFn: (payload) => sdk.admin.priceList.update(id2, payload, query),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: priceListsQueryKeys.lists() });
          queryClient.invalidateQueries({
            queryKey: priceListsQueryKeys.details()
          });
          queryClient.invalidateQueries({ queryKey: customerGroupsQueryKeys.all });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeletePriceList = (id2, options) => {
      return (0, import_react_query27.useMutation)({
        mutationFn: () => sdk.admin.priceList.delete(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: priceListsQueryKeys.lists() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useBatchPriceListPrices = (id2, query, options) => {
      return (0, import_react_query27.useMutation)({
        mutationFn: (payload) => sdk.admin.priceList.batchPrices(id2, payload, query),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: priceListsQueryKeys.detail(id2)
          });
          queryClient.invalidateQueries({ queryKey: productsQueryKeys.lists() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    usePriceListLinkProducts = (id2, options) => {
      return (0, import_react_query27.useMutation)({
        mutationFn: (payload) => sdk.admin.priceList.linkProducts(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: priceListsQueryKeys.detail(id2)
          });
          queryClient.invalidateQueries({ queryKey: priceListsQueryKeys.lists() });
          queryClient.invalidateQueries({ queryKey: productsQueryKeys.lists() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/product-types.tsx
var import_react_query28, PRODUCT_TYPES_QUERY_KEY, productTypesQueryKeys, useProductType, useProductTypes, useCreateProductType, useUpdateProductType, useDeleteProductType;
var init_product_types = __esm({
  "src/hooks/api/product-types.tsx"() {
    "use strict";
    import_react_query28 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    PRODUCT_TYPES_QUERY_KEY = "product_types";
    productTypesQueryKeys = queryKeysFactory(PRODUCT_TYPES_QUERY_KEY);
    useProductType = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query28.useQuery)({
        queryFn: () => sdk.admin.productType.retrieve(id2, query),
        queryKey: productTypesQueryKeys.detail(id2),
        ...options
      });
      return { ...data, ...rest };
    };
    useProductTypes = (query, options) => {
      const { data, ...rest } = (0, import_react_query28.useQuery)({
        queryFn: () => sdk.admin.productType.list(query),
        queryKey: productTypesQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useCreateProductType = (options) => {
      return (0, import_react_query28.useMutation)({
        mutationFn: (payload) => sdk.admin.productType.create(payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: productTypesQueryKeys.lists() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateProductType = (id2, options) => {
      return (0, import_react_query28.useMutation)({
        mutationFn: (payload) => sdk.admin.productType.update(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: productTypesQueryKeys.detail(id2)
          });
          queryClient.invalidateQueries({ queryKey: productTypesQueryKeys.lists() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteProductType = (id2, options) => {
      return (0, import_react_query28.useMutation)({
        mutationFn: () => sdk.admin.productType.delete(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: productTypesQueryKeys.detail(id2)
          });
          queryClient.invalidateQueries({ queryKey: productTypesQueryKeys.lists() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/product-variants.tsx
var import_react_query29, PRODUCT_VARIANT_QUERY_KEY, productVariantQueryKeys, useVariants;
var init_product_variants = __esm({
  "src/hooks/api/product-variants.tsx"() {
    "use strict";
    import_react_query29 = require("@tanstack/react-query");
    init_client2();
    init_query_key_factory();
    PRODUCT_VARIANT_QUERY_KEY = "product_variant";
    productVariantQueryKeys = queryKeysFactory(
      PRODUCT_VARIANT_QUERY_KEY
    );
    useVariants = (query, options) => {
      const { data, ...rest } = (0, import_react_query29.useQuery)({
        queryFn: () => sdk.admin.productVariant.list(query),
        queryKey: productVariantQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
  }
});

// src/hooks/api/refund-reasons.tsx
var import_react_query30, REFUND_REASON_QUERY_KEY, refundReasonQueryKeys, useRefundReasons;
var init_refund_reasons = __esm({
  "src/hooks/api/refund-reasons.tsx"() {
    "use strict";
    import_react_query30 = require("@tanstack/react-query");
    init_client2();
    init_query_key_factory();
    REFUND_REASON_QUERY_KEY = "refund-reason";
    refundReasonQueryKeys = queryKeysFactory(REFUND_REASON_QUERY_KEY);
    useRefundReasons = (query, options) => {
      const { data, ...rest } = (0, import_react_query30.useQuery)({
        queryFn: () => sdk.admin.refundReason.list(query),
        queryKey: [],
        ...options
      });
      return { ...data, ...rest };
    };
  }
});

// src/hooks/api/price-preferences.tsx
var import_react_query31, PRICE_PREFERENCES_QUERY_KEY, pricePreferencesQueryKeys, usePricePreferences;
var init_price_preferences = __esm({
  "src/hooks/api/price-preferences.tsx"() {
    "use strict";
    import_react_query31 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    PRICE_PREFERENCES_QUERY_KEY = "price-preferences";
    pricePreferencesQueryKeys = queryKeysFactory(
      PRICE_PREFERENCES_QUERY_KEY
    );
    usePricePreferences = (query, options) => {
      const { data, ...rest } = (0, import_react_query31.useQuery)({
        queryFn: () => sdk.admin.pricePreference.list(query),
        queryKey: pricePreferencesQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
  }
});

// src/hooks/api/regions.tsx
var import_react_query32, REGIONS_QUERY_KEY2, regionsQueryKeys, useRegion, useRegions, useCreateRegion, useUpdateRegion, useDeleteRegion;
var init_regions = __esm({
  "src/hooks/api/regions.tsx"() {
    "use strict";
    import_react_query32 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_price_preferences();
    REGIONS_QUERY_KEY2 = "regions";
    regionsQueryKeys = queryKeysFactory(REGIONS_QUERY_KEY2);
    useRegion = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query32.useQuery)({
        queryKey: regionsQueryKeys.detail(id2, query),
        queryFn: async () => sdk.admin.region.retrieve(id2, query),
        ...options
      });
      return { ...data, ...rest };
    };
    useRegions = (query, options) => {
      const { data, ...rest } = (0, import_react_query32.useQuery)({
        queryFn: () => sdk.admin.region.list(query),
        queryKey: regionsQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useCreateRegion = (options) => {
      return (0, import_react_query32.useMutation)({
        mutationFn: (payload) => sdk.admin.region.create(payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: regionsQueryKeys.lists() });
          queryClient.invalidateQueries({
            queryKey: pricePreferencesQueryKeys.list()
          });
          queryClient.invalidateQueries({
            queryKey: pricePreferencesQueryKeys.details()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateRegion = (id2, options) => {
      return (0, import_react_query32.useMutation)({
        mutationFn: (payload) => sdk.admin.region.update(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: regionsQueryKeys.lists() });
          queryClient.invalidateQueries({ queryKey: regionsQueryKeys.details() });
          queryClient.invalidateQueries({
            queryKey: pricePreferencesQueryKeys.list()
          });
          queryClient.invalidateQueries({
            queryKey: pricePreferencesQueryKeys.details()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteRegion = (id2, options) => {
      return (0, import_react_query32.useMutation)({
        mutationFn: () => sdk.admin.region.delete(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: regionsQueryKeys.lists() });
          queryClient.invalidateQueries({ queryKey: regionsQueryKeys.detail(id2) });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/shipping-profiles.tsx
var import_react_query33, SHIPPING_PROFILE_QUERY_KEY, shippingProfileQueryKeys, useCreateShippingProfile, useShippingProfile, useShippingProfiles, useDeleteShippingProfile;
var init_shipping_profiles = __esm({
  "src/hooks/api/shipping-profiles.tsx"() {
    "use strict";
    import_react_query33 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    SHIPPING_PROFILE_QUERY_KEY = "shipping_profile";
    shippingProfileQueryKeys = queryKeysFactory(
      SHIPPING_PROFILE_QUERY_KEY
    );
    useCreateShippingProfile = (options) => {
      return (0, import_react_query33.useMutation)({
        mutationFn: (payload) => sdk.admin.shippingProfile.create(payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: shippingProfileQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useShippingProfile = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query33.useQuery)({
        queryFn: () => sdk.admin.shippingProfile.retrieve(id2, query),
        queryKey: shippingProfileQueryKeys.detail(id2, query),
        ...options
      });
      return { ...data, ...rest };
    };
    useShippingProfiles = (query, options) => {
      const { data, ...rest } = (0, import_react_query33.useQuery)({
        queryFn: () => sdk.admin.shippingProfile.list(query),
        queryKey: shippingProfileQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useDeleteShippingProfile = (id2, options) => {
      return (0, import_react_query33.useMutation)({
        mutationFn: () => sdk.admin.shippingProfile.delete(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: shippingProfileQueryKeys.detail(id2)
          });
          queryClient.invalidateQueries({
            queryKey: shippingProfileQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/store.tsx
async function retrieveActiveStore(query) {
  const response = await sdk.admin.store.list(query);
  const activeStore = response.stores?.[0];
  if (!activeStore) {
    throw new import_js_sdk3.FetchError("No active store found", "Not Found", 404);
  }
  return { store: activeStore };
}
var import_react_query34, import_js_sdk3, STORE_QUERY_KEY, storeQueryKeys, useStore, useUpdateStore;
var init_store = __esm({
  "src/hooks/api/store.tsx"() {
    "use strict";
    import_react_query34 = require("@tanstack/react-query");
    import_js_sdk3 = require("@medusajs/js-sdk");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_price_preferences();
    STORE_QUERY_KEY = "store";
    storeQueryKeys = queryKeysFactory(STORE_QUERY_KEY);
    useStore = (query, options) => {
      const { data, ...rest } = (0, import_react_query34.useQuery)({
        queryFn: () => retrieveActiveStore(query),
        queryKey: storeQueryKeys.details(),
        ...options
      });
      return {
        ...data,
        ...rest
      };
    };
    useUpdateStore = (id2, options) => {
      return (0, import_react_query34.useMutation)({
        mutationFn: (payload) => sdk.admin.store.update(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: pricePreferencesQueryKeys.list()
          });
          queryClient.invalidateQueries({
            queryKey: pricePreferencesQueryKeys.details()
          });
          queryClient.invalidateQueries({ queryKey: storeQueryKeys.details() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/tags.tsx
var import_react_query35, TAGS_QUERY_KEY, productTagsQueryKeys, useProductTag, useProductTags, useCreateProductTag, useUpdateProductTag, useDeleteProductTag;
var init_tags = __esm({
  "src/hooks/api/tags.tsx"() {
    "use strict";
    import_react_query35 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    TAGS_QUERY_KEY = "tags";
    productTagsQueryKeys = queryKeysFactory(TAGS_QUERY_KEY);
    useProductTag = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query35.useQuery)({
        queryKey: productTagsQueryKeys.detail(id2, query),
        queryFn: async () => sdk.admin.productTag.retrieve(id2),
        ...options
      });
      return { ...data, ...rest };
    };
    useProductTags = (query, options) => {
      const { data, ...rest } = (0, import_react_query35.useQuery)({
        queryKey: productTagsQueryKeys.list(query),
        queryFn: async () => sdk.admin.productTag.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useCreateProductTag = (query, options) => {
      return (0, import_react_query35.useMutation)({
        mutationFn: async (data) => sdk.admin.productTag.create(data, query),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: productTagsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateProductTag = (id2, query, options) => {
      return (0, import_react_query35.useMutation)({
        mutationFn: async (data) => sdk.admin.productTag.update(id2, data, query),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: productTagsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: productTagsQueryKeys.detail(data.product_tag.id, query)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteProductTag = (id2, options) => {
      return (0, import_react_query35.useMutation)({
        mutationFn: async () => sdk.admin.productTag.delete(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: productTagsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: productTagsQueryKeys.detail(id2)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/tax-regions.tsx
var import_react_query36, TAX_REGIONS_QUERY_KEY, taxRegionsQueryKeys, useTaxRegion, useTaxRegions, useCreateTaxRegion, useDeleteTaxRegion;
var init_tax_regions = __esm({
  "src/hooks/api/tax-regions.tsx"() {
    "use strict";
    import_react_query36 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    TAX_REGIONS_QUERY_KEY = "tax_regions";
    taxRegionsQueryKeys = queryKeysFactory(TAX_REGIONS_QUERY_KEY);
    useTaxRegion = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query36.useQuery)({
        queryKey: taxRegionsQueryKeys.detail(id2),
        queryFn: async () => sdk.admin.taxRegion.retrieve(id2, query),
        ...options
      });
      return { ...data, ...rest };
    };
    useTaxRegions = (query, options) => {
      const { data, ...rest } = (0, import_react_query36.useQuery)({
        queryFn: () => sdk.admin.taxRegion.list(query),
        queryKey: taxRegionsQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useCreateTaxRegion = (options) => {
      return (0, import_react_query36.useMutation)({
        mutationFn: (payload) => sdk.admin.taxRegion.create(payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: taxRegionsQueryKeys.all });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteTaxRegion = (id2, options) => {
      return (0, import_react_query36.useMutation)({
        mutationFn: () => sdk.admin.taxRegion.delete(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: taxRegionsQueryKeys.lists() });
          queryClient.invalidateQueries({
            queryKey: taxRegionsQueryKeys.detail(id2)
          });
          queryClient.invalidateQueries({ queryKey: taxRegionsQueryKeys.details() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/tax-rates.tsx
var import_react_query37, TAX_RATES_QUERY_KEY, taxRatesQueryKeys, useTaxRate, useTaxRates, useUpdateTaxRate, useCreateTaxRate, useDeleteTaxRate;
var init_tax_rates = __esm({
  "src/hooks/api/tax-rates.tsx"() {
    "use strict";
    import_react_query37 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_tax_regions();
    TAX_RATES_QUERY_KEY = "tax_rates";
    taxRatesQueryKeys = queryKeysFactory(TAX_RATES_QUERY_KEY);
    useTaxRate = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query37.useQuery)({
        queryKey: taxRatesQueryKeys.detail(id2),
        queryFn: async () => sdk.admin.taxRate.retrieve(id2, query),
        ...options
      });
      return { ...data, ...rest };
    };
    useTaxRates = (query, options) => {
      const { data, ...rest } = (0, import_react_query37.useQuery)({
        queryFn: () => sdk.admin.taxRate.list(query),
        queryKey: taxRatesQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useUpdateTaxRate = (id2, options) => {
      return (0, import_react_query37.useMutation)({
        mutationFn: (payload) => sdk.admin.taxRate.update(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: taxRatesQueryKeys.lists() });
          queryClient.invalidateQueries({
            queryKey: taxRatesQueryKeys.detail(id2)
          });
          queryClient.invalidateQueries({ queryKey: taxRegionsQueryKeys.details() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useCreateTaxRate = (options) => {
      return (0, import_react_query37.useMutation)({
        mutationFn: (payload) => sdk.admin.taxRate.create(payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: taxRatesQueryKeys.lists() });
          queryClient.invalidateQueries({ queryKey: taxRegionsQueryKeys.details() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteTaxRate = (id2, options) => {
      return (0, import_react_query37.useMutation)({
        mutationFn: () => sdk.admin.taxRate.delete(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({ queryKey: taxRatesQueryKeys.lists() });
          queryClient.invalidateQueries({
            queryKey: taxRatesQueryKeys.detail(id2)
          });
          queryClient.invalidateQueries({ queryKey: taxRegionsQueryKeys.details() });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/workflow-executions.tsx
var import_react_query38, WORKFLOW_EXECUTIONS_QUERY_KEY, workflowExecutionsQueryKeys, useWorkflowExecutions, useWorkflowExecution;
var init_workflow_executions = __esm({
  "src/hooks/api/workflow-executions.tsx"() {
    "use strict";
    import_react_query38 = require("@tanstack/react-query");
    init_client2();
    init_query_key_factory();
    WORKFLOW_EXECUTIONS_QUERY_KEY = "workflow_executions";
    workflowExecutionsQueryKeys = queryKeysFactory(
      WORKFLOW_EXECUTIONS_QUERY_KEY
    );
    useWorkflowExecutions = (query, options) => {
      const { data, ...rest } = (0, import_react_query38.useQuery)({
        queryFn: () => sdk.admin.workflowExecution.list(query),
        queryKey: workflowExecutionsQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useWorkflowExecution = (id2, options) => {
      const { data, ...rest } = (0, import_react_query38.useQuery)({
        queryFn: () => sdk.admin.workflowExecution.retrieve(id2),
        queryKey: workflowExecutionsQueryKeys.detail(id2),
        ...options
      });
      return { ...data, ...rest };
    };
  }
});

// src/hooks/api/index.ts
var init_api = __esm({
  "src/hooks/api/index.ts"() {
    "use strict";
    init_api_keys();
    init_auth();
    init_campaigns();
    init_categories();
    init_collections();
    init_currencies();
    init_customer_groups();
    init_customers();
    init_fulfillment();
    init_fulfillment_providers();
    init_fulfillment_sets();
    init_inventory();
    init_invites();
    init_notification();
    init_orders();
    init_payment_collections();
    init_payments();
    init_price_lists();
    init_product_types();
    init_product_variants();
    init_products();
    init_promotions();
    init_refund_reasons();
    init_regions();
    init_reservations();
    init_sales_channels();
    init_shipping_options();
    init_shipping_profiles();
    init_stock_locations();
    init_store();
    init_tags();
    init_tax_rates();
    init_tax_regions();
    init_users();
    init_workflow_executions();
  }
});

// src/hooks/api/return-reasons.tsx
var import_react_query39, RETURN_REASONS_QUERY_KEY, returnReasonsQueryKeys, useReturnReasons, useReturnReason, useCreateReturnReason, useUpdateReturnReason, useDeleteReturnReason;
var init_return_reasons = __esm({
  "src/hooks/api/return-reasons.tsx"() {
    "use strict";
    import_react_query39 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    RETURN_REASONS_QUERY_KEY = "return_reasons";
    returnReasonsQueryKeys = queryKeysFactory(RETURN_REASONS_QUERY_KEY);
    useReturnReasons = (query, options) => {
      const { data, ...rest } = (0, import_react_query39.useQuery)({
        queryFn: () => sdk.admin.returnReason.list(query),
        queryKey: returnReasonsQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useReturnReason = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query39.useQuery)({
        queryFn: () => sdk.admin.returnReason.retrieve(id2, query),
        queryKey: returnReasonsQueryKeys.detail(id2),
        ...options
      });
      return { ...data, ...rest };
    };
    useCreateReturnReason = (query, options) => {
      return (0, import_react_query39.useMutation)({
        mutationFn: async (data) => sdk.admin.returnReason.create(data, query),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: returnReasonsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateReturnReason = (id2, query, options) => {
      return (0, import_react_query39.useMutation)({
        mutationFn: async (data) => sdk.admin.returnReason.update(id2, data, query),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: returnReasonsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: returnReasonsQueryKeys.detail(data.return_reason.id, query)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteReturnReason = (id2, options) => {
      return (0, import_react_query39.useMutation)({
        mutationFn: () => sdk.admin.returnReason.delete(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: returnReasonsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: returnReasonsQueryKeys.detail(id2)
          });
          queryClient.invalidateQueries({
            queryKey: returnReasonsQueryKeys.details()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/components/common/divider/divider.tsx
var import_ui10, import_jsx_runtime23, Divider;
var init_divider = __esm({
  "src/components/common/divider/divider.tsx"() {
    "use strict";
    import_ui10 = require("@medusajs/ui");
    import_jsx_runtime23 = require("react/jsx-runtime");
    Divider = ({
      orientation = "horizontal",
      variant = "solid",
      className,
      ...props
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime23.jsx)(
        "div",
        {
          "aria-orientation": orientation,
          role: "separator",
          className: (0, import_ui10.clx)(
            "border-ui-border-base",
            {
              "w-full border-t": orientation === "horizontal" && variant === "solid",
              "h-full border-l": orientation === "vertical" && variant === "solid",
              "bg-transparent": variant === "dashed",
              "h-px w-full bg-[linear-gradient(90deg,var(--border-strong)_1px,transparent_1px)] bg-[length:4px_1px]": variant === "dashed" && orientation === "horizontal",
              "h-full w-px bg-[linear-gradient(0deg,var(--border-strong)_1px,transparent_1px)] bg-[length:1px_4px]": variant === "dashed" && orientation === "vertical"
            },
            className
          ),
          ...props
        }
      );
    };
  }
});

// src/components/common/divider/index.ts
var init_divider2 = __esm({
  "src/components/common/divider/index.ts"() {
    "use strict";
    init_divider();
  }
});

// src/components/common/conditional-tooltip/conditional-tooltip.tsx
var import_ui11, import_jsx_runtime24, ConditionalTooltip;
var init_conditional_tooltip = __esm({
  "src/components/common/conditional-tooltip/conditional-tooltip.tsx"() {
    "use strict";
    import_ui11 = require("@medusajs/ui");
    import_jsx_runtime24 = require("react/jsx-runtime");
    ConditionalTooltip = ({
      children,
      showTooltip = false,
      ...props
    }) => {
      if (showTooltip) {
        return /* @__PURE__ */ (0, import_jsx_runtime24.jsx)(import_ui11.Tooltip, { ...props, children });
      }
      return children;
    };
  }
});

// src/components/common/conditional-tooltip/index.ts
var init_conditional_tooltip2 = __esm({
  "src/components/common/conditional-tooltip/index.ts"() {
    "use strict";
    init_conditional_tooltip();
  }
});

// src/components/common/action-menu/action-menu.tsx
var import_ui13, import_icons6, import_react_router_dom7, import_jsx_runtime27, ActionMenu;
var init_action_menu = __esm({
  "src/components/common/action-menu/action-menu.tsx"() {
    "use strict";
    import_ui13 = require("@medusajs/ui");
    import_icons6 = require("@medusajs/icons");
    import_react_router_dom7 = require("react-router-dom");
    import_jsx_runtime27 = require("react/jsx-runtime");
    ActionMenu = ({ groups }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime27.jsxs)(import_ui13.DropdownMenu, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime27.jsx)(import_ui13.DropdownMenu.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime27.jsx)(import_ui13.IconButton, { size: "small", variant: "transparent", children: /* @__PURE__ */ (0, import_jsx_runtime27.jsx)(import_icons6.EllipsisHorizontal, {}) }) }),
        /* @__PURE__ */ (0, import_jsx_runtime27.jsx)(import_ui13.DropdownMenu.Content, { children: groups.map((group, index2) => {
          if (!group.actions.length) {
            return null;
          }
          const isLast = index2 === groups.length - 1;
          return /* @__PURE__ */ (0, import_jsx_runtime27.jsxs)(import_ui13.DropdownMenu.Group, { children: [
            group.actions.map((action, index3) => {
              if (action.onClick) {
                return /* @__PURE__ */ (0, import_jsx_runtime27.jsxs)(
                  import_ui13.DropdownMenu.Item,
                  {
                    disabled: action.disabled,
                    onClick: (e) => {
                      e.stopPropagation();
                      action.onClick();
                    },
                    className: (0, import_ui13.clx)(
                      "[&_svg]:text-ui-fg-subtle flex items-center gap-x-2",
                      {
                        "[&_svg]:text-ui-fg-disabled": action.disabled
                      }
                    ),
                    children: [
                      action.icon,
                      /* @__PURE__ */ (0, import_jsx_runtime27.jsx)("span", { children: action.label })
                    ]
                  },
                  index3
                );
              }
              return /* @__PURE__ */ (0, import_jsx_runtime27.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime27.jsx)(
                import_ui13.DropdownMenu.Item,
                {
                  className: (0, import_ui13.clx)(
                    "[&_svg]:text-ui-fg-subtle flex items-center gap-x-2",
                    {
                      "[&_svg]:text-ui-fg-disabled": action.disabled
                    }
                  ),
                  asChild: true,
                  disabled: action.disabled,
                  children: /* @__PURE__ */ (0, import_jsx_runtime27.jsxs)(import_react_router_dom7.Link, { to: action.to, onClick: (e) => e.stopPropagation(), children: [
                    action.icon,
                    /* @__PURE__ */ (0, import_jsx_runtime27.jsx)("span", { children: action.label })
                  ] })
                }
              ) }, index3);
            }),
            !isLast && /* @__PURE__ */ (0, import_jsx_runtime27.jsx)(import_ui13.DropdownMenu.Separator, {})
          ] }, index2);
        }) })
      ] });
    };
  }
});

// src/components/common/action-menu/index.ts
var init_action_menu2 = __esm({
  "src/components/common/action-menu/index.ts"() {
    "use strict";
    init_action_menu();
  }
});

// src/components/common/file-preview/file-preview.tsx
var import_icons7, import_ui14, import_jsx_runtime28, FilePreview, FileThumbnail;
var init_file_preview = __esm({
  "src/components/common/file-preview/file-preview.tsx"() {
    "use strict";
    import_icons7 = require("@medusajs/icons");
    import_ui14 = require("@medusajs/ui");
    init_action_menu2();
    import_jsx_runtime28 = require("react/jsx-runtime");
    FilePreview = ({
      filename,
      url,
      loading,
      activity,
      actions,
      hideThumbnail
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime28.jsx)("div", { className: "shadow-elevation-card-rest bg-ui-bg-component transition-fg rounded-md px-3 py-2", children: /* @__PURE__ */ (0, import_jsx_runtime28.jsxs)("div", { className: "flex flex-row items-center justify-between gap-2", children: [
        /* @__PURE__ */ (0, import_jsx_runtime28.jsxs)("div", { className: "flex flex-row items-center gap-3", children: [
          !hideThumbnail && /* @__PURE__ */ (0, import_jsx_runtime28.jsx)(FileThumbnail, {}),
          /* @__PURE__ */ (0, import_jsx_runtime28.jsxs)("div", { className: "flex flex-col justify-center", children: [
            /* @__PURE__ */ (0, import_jsx_runtime28.jsx)(
              import_ui14.Text,
              {
                size: "small",
                leading: "compact",
                className: "truncate max-w-[260px]",
                children: filename
              }
            ),
            loading && !!activity && /* @__PURE__ */ (0, import_jsx_runtime28.jsx)(
              import_ui14.Text,
              {
                leading: "compact",
                size: "xsmall",
                className: "text-ui-fg-interactive",
                children: activity
              }
            )
          ] })
        ] }),
        loading && /* @__PURE__ */ (0, import_jsx_runtime28.jsx)(import_icons7.Spinner, { className: "animate-spin" }),
        !loading && actions && /* @__PURE__ */ (0, import_jsx_runtime28.jsx)(ActionMenu, { groups: actions }),
        !loading && url && /* @__PURE__ */ (0, import_jsx_runtime28.jsx)(import_ui14.IconButton, { variant: "transparent", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime28.jsx)("a", { href: url, download: filename ?? `${Date.now()}`, children: /* @__PURE__ */ (0, import_jsx_runtime28.jsx)(import_icons7.ArrowDownTray, {}) }) })
      ] }) });
    };
    FileThumbnail = () => {
      return /* @__PURE__ */ (0, import_jsx_runtime28.jsxs)(
        "svg",
        {
          width: "24",
          height: "32",
          viewBox: "0 0 24 32",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime28.jsx)(
              "path",
              {
                d: "M20 31.75H4C1.92893 31.75 0.25 30.0711 0.25 28V4C0.25 1.92893 1.92893 0.25 4 0.25H15.9431C16.9377 0.25 17.8915 0.645088 18.5948 1.34835L22.6516 5.4052C23.3549 6.10847 23.75 7.06229 23.75 8.05685V28C23.75 30.0711 22.0711 31.75 20 31.75Z",
                fill: "url(#paint0_linear_6594_388107)",
                stroke: "url(#paint1_linear_6594_388107)",
                "stroke-width": "0.5"
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime28.jsx)(
              "path",
              {
                opacity: "0.4",
                d: "M17.7857 12.8125V13.5357H10.3393V10.9643H15.9375C16.9569 10.9643 17.7857 11.7931 17.7857 12.8125ZM6.21429 16.9107V15.0893H8.78571V16.9107H6.21429ZM10.3393 16.9107V15.0893H17.7857V16.9107H10.3393ZM15.9375 21.0357H10.3393V18.4643H17.7857V19.1875C17.7857 20.2069 16.9569 21.0357 15.9375 21.0357ZM6.21429 19.1875V18.4643H8.78571V21.0357H8.0625C7.0431 21.0357 6.21429 20.2069 6.21429 19.1875ZM8.0625 10.9643H8.78571V13.5357H6.21429V12.8125C6.21429 11.7931 7.0431 10.9643 8.0625 10.9643Z",
                fill: "url(#paint2_linear_6594_388107)",
                stroke: "url(#paint3_linear_6594_388107)",
                "stroke-width": "0.428571"
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime28.jsxs)("defs", { children: [
              /* @__PURE__ */ (0, import_jsx_runtime28.jsxs)(
                "linearGradient",
                {
                  id: "paint0_linear_6594_388107",
                  x1: "12",
                  y1: "0",
                  x2: "12",
                  y2: "32",
                  gradientUnits: "userSpaceOnUse",
                  children: [
                    /* @__PURE__ */ (0, import_jsx_runtime28.jsx)("stop", { "stop-color": "#F4F4F5" }),
                    /* @__PURE__ */ (0, import_jsx_runtime28.jsx)("stop", { offset: "1", "stop-color": "#E4E4E7" })
                  ]
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime28.jsxs)(
                "linearGradient",
                {
                  id: "paint1_linear_6594_388107",
                  x1: "12",
                  y1: "0",
                  x2: "12",
                  y2: "32",
                  gradientUnits: "userSpaceOnUse",
                  children: [
                    /* @__PURE__ */ (0, import_jsx_runtime28.jsx)("stop", { "stop-color": "#E4E4E7" }),
                    /* @__PURE__ */ (0, import_jsx_runtime28.jsx)("stop", { offset: "1", "stop-color": "#D4D4D8" })
                  ]
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime28.jsxs)(
                "linearGradient",
                {
                  id: "paint2_linear_6594_388107",
                  x1: "12",
                  y1: "10.75",
                  x2: "12",
                  y2: "21.25",
                  gradientUnits: "userSpaceOnUse",
                  children: [
                    /* @__PURE__ */ (0, import_jsx_runtime28.jsx)("stop", { "stop-color": "#52525B" }),
                    /* @__PURE__ */ (0, import_jsx_runtime28.jsx)("stop", { offset: "1", "stop-color": "#A1A1AA" })
                  ]
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime28.jsxs)(
                "linearGradient",
                {
                  id: "paint3_linear_6594_388107",
                  x1: "12",
                  y1: "10.75",
                  x2: "12",
                  y2: "21.25",
                  gradientUnits: "userSpaceOnUse",
                  children: [
                    /* @__PURE__ */ (0, import_jsx_runtime28.jsx)("stop", { "stop-color": "#18181B" }),
                    /* @__PURE__ */ (0, import_jsx_runtime28.jsx)("stop", { offset: "1", "stop-color": "#52525B" })
                  ]
                }
              )
            ] })
          ]
        }
      );
    };
  }
});

// src/components/common/file-preview/index.ts
var init_file_preview2 = __esm({
  "src/components/common/file-preview/index.ts"() {
    "use strict";
    init_file_preview();
  }
});

// src/lib/data/countries.ts
function getCountryByIso2(iso2) {
  if (!iso2) {
    return;
  }
  return countries.find((c) => c.iso_2.toLowerCase() === iso2.toLowerCase());
}
var countries;
var init_countries = __esm({
  "src/lib/data/countries.ts"() {
    "use strict";
    countries = [
      {
        iso_2: "af",
        iso_3: "afg",
        num_code: "4",
        name: "AFGHANISTAN",
        display_name: "Afghanistan"
      },
      {
        iso_2: "al",
        iso_3: "alb",
        num_code: "8",
        name: "ALBANIA",
        display_name: "Albania"
      },
      {
        iso_2: "dz",
        iso_3: "dza",
        num_code: "12",
        name: "ALGERIA",
        display_name: "Algeria"
      },
      {
        iso_2: "as",
        iso_3: "asm",
        num_code: "16",
        name: "AMERICAN SAMOA",
        display_name: "American Samoa"
      },
      {
        iso_2: "ad",
        iso_3: "and",
        num_code: "20",
        name: "ANDORRA",
        display_name: "Andorra"
      },
      {
        iso_2: "ao",
        iso_3: "ago",
        num_code: "24",
        name: "ANGOLA",
        display_name: "Angola"
      },
      {
        iso_2: "ai",
        iso_3: "aia",
        num_code: "660",
        name: "ANGUILLA",
        display_name: "Anguilla"
      },
      {
        iso_2: "aq",
        iso_3: "ata",
        num_code: "10",
        name: "ANTARCTICA",
        display_name: "Antarctica"
      },
      {
        iso_2: "ag",
        iso_3: "atg",
        num_code: "28",
        name: "ANTIGUA AND BARBUDA",
        display_name: "Antigua and Barbuda"
      },
      {
        iso_2: "ar",
        iso_3: "arg",
        num_code: "32",
        name: "ARGENTINA",
        display_name: "Argentina"
      },
      {
        iso_2: "am",
        iso_3: "arm",
        num_code: "51",
        name: "ARMENIA",
        display_name: "Armenia"
      },
      {
        iso_2: "aw",
        iso_3: "abw",
        num_code: "533",
        name: "ARUBA",
        display_name: "Aruba"
      },
      {
        iso_2: "au",
        iso_3: "aus",
        num_code: "36",
        name: "AUSTRALIA",
        display_name: "Australia"
      },
      {
        iso_2: "at",
        iso_3: "aut",
        num_code: "40",
        name: "AUSTRIA",
        display_name: "Austria"
      },
      {
        iso_2: "az",
        iso_3: "aze",
        num_code: "31",
        name: "AZERBAIJAN",
        display_name: "Azerbaijan"
      },
      {
        iso_2: "bs",
        iso_3: "bhs",
        num_code: "44",
        name: "BAHAMAS",
        display_name: "Bahamas"
      },
      {
        iso_2: "bh",
        iso_3: "bhr",
        num_code: "48",
        name: "BAHRAIN",
        display_name: "Bahrain"
      },
      {
        iso_2: "bd",
        iso_3: "bgd",
        num_code: "50",
        name: "BANGLADESH",
        display_name: "Bangladesh"
      },
      {
        iso_2: "bb",
        iso_3: "brb",
        num_code: "52",
        name: "BARBADOS",
        display_name: "Barbados"
      },
      {
        iso_2: "by",
        iso_3: "blr",
        num_code: "112",
        name: "BELARUS",
        display_name: "Belarus"
      },
      {
        iso_2: "be",
        iso_3: "bel",
        num_code: "56",
        name: "BELGIUM",
        display_name: "Belgium"
      },
      {
        iso_2: "bz",
        iso_3: "blz",
        num_code: "84",
        name: "BELIZE",
        display_name: "Belize"
      },
      {
        iso_2: "bj",
        iso_3: "ben",
        num_code: "204",
        name: "BENIN",
        display_name: "Benin"
      },
      {
        iso_2: "bm",
        iso_3: "bmu",
        num_code: "60",
        name: "BERMUDA",
        display_name: "Bermuda"
      },
      {
        iso_2: "bt",
        iso_3: "btn",
        num_code: "64",
        name: "BHUTAN",
        display_name: "Bhutan"
      },
      {
        iso_2: "bo",
        iso_3: "bol",
        num_code: "68",
        name: "BOLIVIA",
        display_name: "Bolivia"
      },
      {
        iso_2: "bq",
        iso_3: "bes",
        num_code: "535",
        name: "BONAIRE, SINT EUSTATIUS AND SABA",
        display_name: "Bonaire, Sint Eustatius and Saba"
      },
      {
        iso_2: "ba",
        iso_3: "bih",
        num_code: "70",
        name: "BOSNIA AND HERZEGOVINA",
        display_name: "Bosnia and Herzegovina"
      },
      {
        iso_2: "bw",
        iso_3: "bwa",
        num_code: "72",
        name: "BOTSWANA",
        display_name: "Botswana"
      },
      {
        iso_2: "bv",
        iso_3: "bvd",
        num_code: "74",
        name: "BOUVET ISLAND",
        display_name: "Bouvet Island"
      },
      {
        iso_2: "br",
        iso_3: "bra",
        num_code: "76",
        name: "BRAZIL",
        display_name: "Brazil"
      },
      {
        iso_2: "io",
        iso_3: "iot",
        num_code: "86",
        name: "BRITISH INDIAN OCEAN TERRITORY",
        display_name: "British Indian Ocean Territory"
      },
      {
        iso_2: "bn",
        iso_3: "brn",
        num_code: "96",
        name: "BRUNEI DARUSSALAM",
        display_name: "Brunei Darussalam"
      },
      {
        iso_2: "bg",
        iso_3: "bgr",
        num_code: "100",
        name: "BULGARIA",
        display_name: "Bulgaria"
      },
      {
        iso_2: "bf",
        iso_3: "bfa",
        num_code: "854",
        name: "BURKINA FASO",
        display_name: "Burkina Faso"
      },
      {
        iso_2: "bi",
        iso_3: "bdi",
        num_code: "108",
        name: "BURUNDI",
        display_name: "Burundi"
      },
      {
        iso_2: "kh",
        iso_3: "khm",
        num_code: "116",
        name: "CAMBODIA",
        display_name: "Cambodia"
      },
      {
        iso_2: "cm",
        iso_3: "cmr",
        num_code: "120",
        name: "CAMEROON",
        display_name: "Cameroon"
      },
      {
        iso_2: "ca",
        iso_3: "can",
        num_code: "124",
        name: "CANADA",
        display_name: "Canada"
      },
      {
        iso_2: "cv",
        iso_3: "cpv",
        num_code: "132",
        name: "CAPE VERDE",
        display_name: "Cape Verde"
      },
      {
        iso_2: "ky",
        iso_3: "cym",
        num_code: "136",
        name: "CAYMAN ISLANDS",
        display_name: "Cayman Islands"
      },
      {
        iso_2: "cf",
        iso_3: "caf",
        num_code: "140",
        name: "CENTRAL AFRICAN REPUBLIC",
        display_name: "Central African Republic"
      },
      {
        iso_2: "td",
        iso_3: "tcd",
        num_code: "148",
        name: "CHAD",
        display_name: "Chad"
      },
      {
        iso_2: "cl",
        iso_3: "chl",
        num_code: "152",
        name: "CHILE",
        display_name: "Chile"
      },
      {
        iso_2: "cn",
        iso_3: "chn",
        num_code: "156",
        name: "CHINA",
        display_name: "China"
      },
      {
        iso_2: "cx",
        iso_3: "cxr",
        num_code: "162",
        name: "CHRISTMAS ISLAND",
        display_name: "Christmas Island"
      },
      {
        iso_2: "cc",
        iso_3: "cck",
        num_code: "166",
        name: "COCOS (KEELING) ISLANDS",
        display_name: "Cocos (Keeling) Islands"
      },
      {
        iso_2: "co",
        iso_3: "col",
        num_code: "170",
        name: "COLOMBIA",
        display_name: "Colombia"
      },
      {
        iso_2: "km",
        iso_3: "com",
        num_code: "174",
        name: "COMOROS",
        display_name: "Comoros"
      },
      {
        iso_2: "cg",
        iso_3: "cog",
        num_code: "178",
        name: "CONGO",
        display_name: "Congo"
      },
      {
        iso_2: "cd",
        iso_3: "cod",
        num_code: "180",
        name: "CONGO, THE DEMOCRATIC REPUBLIC OF THE",
        display_name: "Congo, the Democratic Republic of the"
      },
      {
        iso_2: "ck",
        iso_3: "cok",
        num_code: "184",
        name: "COOK ISLANDS",
        display_name: "Cook Islands"
      },
      {
        iso_2: "cr",
        iso_3: "cri",
        num_code: "188",
        name: "COSTA RICA",
        display_name: "Costa Rica"
      },
      {
        iso_2: "ci",
        iso_3: "civ",
        num_code: "384",
        name: "COTE D'IVOIRE",
        display_name: "Cote D'Ivoire"
      },
      {
        iso_2: "hr",
        iso_3: "hrv",
        num_code: "191",
        name: "CROATIA",
        display_name: "Croatia"
      },
      {
        iso_2: "cu",
        iso_3: "cub",
        num_code: "192",
        name: "CUBA",
        display_name: "Cuba"
      },
      {
        iso_2: "cw",
        iso_3: "cuw",
        num_code: "531",
        name: "CURA\xC7AO",
        display_name: "Cura\xE7ao"
      },
      {
        iso_2: "cy",
        iso_3: "cyp",
        num_code: "196",
        name: "CYPRUS",
        display_name: "Cyprus"
      },
      {
        iso_2: "cz",
        iso_3: "cze",
        num_code: "203",
        name: "CZECH REPUBLIC",
        display_name: "Czech Republic"
      },
      {
        iso_2: "dk",
        iso_3: "dnk",
        num_code: "208",
        name: "DENMARK",
        display_name: "Denmark"
      },
      {
        iso_2: "dj",
        iso_3: "dji",
        num_code: "262",
        name: "DJIBOUTI",
        display_name: "Djibouti"
      },
      {
        iso_2: "dm",
        iso_3: "dma",
        num_code: "212",
        name: "DOMINICA",
        display_name: "Dominica"
      },
      {
        iso_2: "do",
        iso_3: "dom",
        num_code: "214",
        name: "DOMINICAN REPUBLIC",
        display_name: "Dominican Republic"
      },
      {
        iso_2: "ec",
        iso_3: "ecu",
        num_code: "218",
        name: "ECUADOR",
        display_name: "Ecuador"
      },
      {
        iso_2: "eg",
        iso_3: "egy",
        num_code: "818",
        name: "EGYPT",
        display_name: "Egypt"
      },
      {
        iso_2: "sv",
        iso_3: "slv",
        num_code: "222",
        name: "EL SALVADOR",
        display_name: "El Salvador"
      },
      {
        iso_2: "gq",
        iso_3: "gnq",
        num_code: "226",
        name: "EQUATORIAL GUINEA",
        display_name: "Equatorial Guinea"
      },
      {
        iso_2: "er",
        iso_3: "eri",
        num_code: "232",
        name: "ERITREA",
        display_name: "Eritrea"
      },
      {
        iso_2: "ee",
        iso_3: "est",
        num_code: "233",
        name: "ESTONIA",
        display_name: "Estonia"
      },
      {
        iso_2: "et",
        iso_3: "eth",
        num_code: "231",
        name: "ETHIOPIA",
        display_name: "Ethiopia"
      },
      {
        iso_2: "fk",
        iso_3: "flk",
        num_code: "238",
        name: "FALKLAND ISLANDS (MALVINAS)",
        display_name: "Falkland Islands (Malvinas)"
      },
      {
        iso_2: "fo",
        iso_3: "fro",
        num_code: "234",
        name: "FAROE ISLANDS",
        display_name: "Faroe Islands"
      },
      {
        iso_2: "fj",
        iso_3: "fji",
        num_code: "242",
        name: "FIJI",
        display_name: "Fiji"
      },
      {
        iso_2: "fi",
        iso_3: "fin",
        num_code: "246",
        name: "FINLAND",
        display_name: "Finland"
      },
      {
        iso_2: "fr",
        iso_3: "fra",
        num_code: "250",
        name: "FRANCE",
        display_name: "France"
      },
      {
        iso_2: "gf",
        iso_3: "guf",
        num_code: "254",
        name: "FRENCH GUIANA",
        display_name: "French Guiana"
      },
      {
        iso_2: "pf",
        iso_3: "pyf",
        num_code: "258",
        name: "FRENCH POLYNESIA",
        display_name: "French Polynesia"
      },
      {
        iso_2: "tf",
        iso_3: "atf",
        num_code: "260",
        name: "FRENCH SOUTHERN TERRITORIES",
        display_name: "French Southern Territories"
      },
      {
        iso_2: "ga",
        iso_3: "gab",
        num_code: "266",
        name: "GABON",
        display_name: "Gabon"
      },
      {
        iso_2: "gm",
        iso_3: "gmb",
        num_code: "270",
        name: "GAMBIA",
        display_name: "Gambia"
      },
      {
        iso_2: "ge",
        iso_3: "geo",
        num_code: "268",
        name: "GEORGIA",
        display_name: "Georgia"
      },
      {
        iso_2: "de",
        iso_3: "deu",
        num_code: "276",
        name: "GERMANY",
        display_name: "Germany"
      },
      {
        iso_2: "gh",
        iso_3: "gha",
        num_code: "288",
        name: "GHANA",
        display_name: "Ghana"
      },
      {
        iso_2: "gi",
        iso_3: "gib",
        num_code: "292",
        name: "GIBRALTAR",
        display_name: "Gibraltar"
      },
      {
        iso_2: "gr",
        iso_3: "grc",
        num_code: "300",
        name: "GREECE",
        display_name: "Greece"
      },
      {
        iso_2: "gl",
        iso_3: "grl",
        num_code: "304",
        name: "GREENLAND",
        display_name: "Greenland"
      },
      {
        iso_2: "gd",
        iso_3: "grd",
        num_code: "308",
        name: "GRENADA",
        display_name: "Grenada"
      },
      {
        iso_2: "gp",
        iso_3: "glp",
        num_code: "312",
        name: "GUADELOUPE",
        display_name: "Guadeloupe"
      },
      {
        iso_2: "gu",
        iso_3: "gum",
        num_code: "316",
        name: "GUAM",
        display_name: "Guam"
      },
      {
        iso_2: "gt",
        iso_3: "gtm",
        num_code: "320",
        name: "GUATEMALA",
        display_name: "Guatemala"
      },
      {
        iso_2: "gg",
        iso_3: "ggy",
        num_code: "831",
        name: "GUERNSEY",
        display_name: "Guernsey"
      },
      {
        iso_2: "gn",
        iso_3: "gin",
        num_code: "324",
        name: "GUINEA",
        display_name: "Guinea"
      },
      {
        iso_2: "gw",
        iso_3: "gnb",
        num_code: "624",
        name: "GUINEA-BISSAU",
        display_name: "Guinea-Bissau"
      },
      {
        iso_2: "gy",
        iso_3: "guy",
        num_code: "328",
        name: "GUYANA",
        display_name: "Guyana"
      },
      {
        iso_2: "ht",
        iso_3: "hti",
        num_code: "332",
        name: "HAITI",
        display_name: "Haiti"
      },
      {
        iso_2: "hm",
        iso_3: "hmd",
        num_code: "334",
        name: "HEARD ISLAND AND MCDONALD ISLANDS",
        display_name: "Heard Island And Mcdonald Islands"
      },
      {
        iso_2: "va",
        iso_3: "vat",
        num_code: "336",
        name: "HOLY SEE (VATICAN CITY STATE)",
        display_name: "Holy See (Vatican City State)"
      },
      {
        iso_2: "hn",
        iso_3: "hnd",
        num_code: "340",
        name: "HONDURAS",
        display_name: "Honduras"
      },
      {
        iso_2: "hk",
        iso_3: "hkg",
        num_code: "344",
        name: "HONG KONG",
        display_name: "Hong Kong"
      },
      {
        iso_2: "hu",
        iso_3: "hun",
        num_code: "348",
        name: "HUNGARY",
        display_name: "Hungary"
      },
      {
        iso_2: "is",
        iso_3: "isl",
        num_code: "352",
        name: "ICELAND",
        display_name: "Iceland"
      },
      {
        iso_2: "in",
        iso_3: "ind",
        num_code: "356",
        name: "INDIA",
        display_name: "India"
      },
      {
        iso_2: "id",
        iso_3: "idn",
        num_code: "360",
        name: "INDONESIA",
        display_name: "Indonesia"
      },
      {
        iso_2: "ir",
        iso_3: "irn",
        num_code: "364",
        name: "IRAN, ISLAMIC REPUBLIC OF",
        display_name: "Iran, Islamic Republic of"
      },
      {
        iso_2: "iq",
        iso_3: "irq",
        num_code: "368",
        name: "IRAQ",
        display_name: "Iraq"
      },
      {
        iso_2: "ie",
        iso_3: "irl",
        num_code: "372",
        name: "IRELAND",
        display_name: "Ireland"
      },
      {
        iso_2: "im",
        iso_3: "imn",
        num_code: "833",
        name: "ISLE OF MAN",
        display_name: "Isle Of Man"
      },
      {
        iso_2: "il",
        iso_3: "isr",
        num_code: "376",
        name: "ISRAEL",
        display_name: "Israel"
      },
      {
        iso_2: "it",
        iso_3: "ita",
        num_code: "380",
        name: "ITALY",
        display_name: "Italy"
      },
      {
        iso_2: "jm",
        iso_3: "jam",
        num_code: "388",
        name: "JAMAICA",
        display_name: "Jamaica"
      },
      {
        iso_2: "jp",
        iso_3: "jpn",
        num_code: "392",
        name: "JAPAN",
        display_name: "Japan"
      },
      {
        iso_2: "je",
        iso_3: "jey",
        num_code: "832",
        name: "JERSEY",
        display_name: "Jersey"
      },
      {
        iso_2: "jo",
        iso_3: "jor",
        num_code: "400",
        name: "JORDAN",
        display_name: "Jordan"
      },
      {
        iso_2: "kz",
        iso_3: "kaz",
        num_code: "398",
        name: "KAZAKHSTAN",
        display_name: "Kazakhstan"
      },
      {
        iso_2: "ke",
        iso_3: "ken",
        num_code: "404",
        name: "KENYA",
        display_name: "Kenya"
      },
      {
        iso_2: "ki",
        iso_3: "kir",
        num_code: "296",
        name: "KIRIBATI",
        display_name: "Kiribati"
      },
      {
        iso_2: "kp",
        iso_3: "prk",
        num_code: "408",
        name: "KOREA, DEMOCRATIC PEOPLE'S REPUBLIC OF",
        display_name: "Korea, Democratic People's Republic of"
      },
      {
        iso_2: "kr",
        iso_3: "kor",
        num_code: "410",
        name: "KOREA, REPUBLIC OF",
        display_name: "Korea, Republic of"
      },
      {
        iso_2: "xk",
        iso_3: "xkx",
        num_code: "900",
        name: "KOSOVO",
        display_name: "Kosovo"
      },
      {
        iso_2: "kw",
        iso_3: "kwt",
        num_code: "414",
        name: "KUWAIT",
        display_name: "Kuwait"
      },
      {
        iso_2: "kg",
        iso_3: "kgz",
        num_code: "417",
        name: "KYRGYZSTAN",
        display_name: "Kyrgyzstan"
      },
      {
        iso_2: "la",
        iso_3: "lao",
        num_code: "418",
        name: "LAO PEOPLE'S DEMOCRATIC REPUBLIC",
        display_name: "Lao People's Democratic Republic"
      },
      {
        iso_2: "lv",
        iso_3: "lva",
        num_code: "428",
        name: "LATVIA",
        display_name: "Latvia"
      },
      {
        iso_2: "lb",
        iso_3: "lbn",
        num_code: "422",
        name: "LEBANON",
        display_name: "Lebanon"
      },
      {
        iso_2: "ls",
        iso_3: "lso",
        num_code: "426",
        name: "LESOTHO",
        display_name: "Lesotho"
      },
      {
        iso_2: "lr",
        iso_3: "lbr",
        num_code: "430",
        name: "LIBERIA",
        display_name: "Liberia"
      },
      {
        iso_2: "ly",
        iso_3: "lby",
        num_code: "434",
        name: "LIBYA",
        display_name: "Libya"
      },
      {
        iso_2: "li",
        iso_3: "lie",
        num_code: "438",
        name: "LIECHTENSTEIN",
        display_name: "Liechtenstein"
      },
      {
        iso_2: "lt",
        iso_3: "ltu",
        num_code: "440",
        name: "LITHUANIA",
        display_name: "Lithuania"
      },
      {
        iso_2: "lu",
        iso_3: "lux",
        num_code: "442",
        name: "LUXEMBOURG",
        display_name: "Luxembourg"
      },
      {
        iso_2: "mo",
        iso_3: "mac",
        num_code: "446",
        name: "MACAO",
        display_name: "Macao"
      },
      {
        iso_2: "mk",
        iso_3: "mkd",
        num_code: "807",
        name: "MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF",
        display_name: "Macedonia, the Former Yugoslav Republic of"
      },
      {
        iso_2: "mg",
        iso_3: "mdg",
        num_code: "450",
        name: "MADAGASCAR",
        display_name: "Madagascar"
      },
      {
        iso_2: "mw",
        iso_3: "mwi",
        num_code: "454",
        name: "MALAWI",
        display_name: "Malawi"
      },
      {
        iso_2: "my",
        iso_3: "mys",
        num_code: "458",
        name: "MALAYSIA",
        display_name: "Malaysia"
      },
      {
        iso_2: "mv",
        iso_3: "mdv",
        num_code: "462",
        name: "MALDIVES",
        display_name: "Maldives"
      },
      {
        iso_2: "ml",
        iso_3: "mli",
        num_code: "466",
        name: "MALI",
        display_name: "Mali"
      },
      {
        iso_2: "mt",
        iso_3: "mlt",
        num_code: "470",
        name: "MALTA",
        display_name: "Malta"
      },
      {
        iso_2: "mh",
        iso_3: "mhl",
        num_code: "584",
        name: "MARSHALL ISLANDS",
        display_name: "Marshall Islands"
      },
      {
        iso_2: "mq",
        iso_3: "mtq",
        num_code: "474",
        name: "MARTINIQUE",
        display_name: "Martinique"
      },
      {
        iso_2: "mr",
        iso_3: "mrt",
        num_code: "478",
        name: "MAURITANIA",
        display_name: "Mauritania"
      },
      {
        iso_2: "mu",
        iso_3: "mus",
        num_code: "480",
        name: "MAURITIUS",
        display_name: "Mauritius"
      },
      {
        iso_2: "yt",
        iso_3: "myt",
        num_code: "175",
        name: "MAYOTTE",
        display_name: "Mayotte"
      },
      {
        iso_2: "mx",
        iso_3: "mex",
        num_code: "484",
        name: "MEXICO",
        display_name: "Mexico"
      },
      {
        iso_2: "fm",
        iso_3: "fsm",
        num_code: "583",
        name: "MICRONESIA, FEDERATED STATES OF",
        display_name: "Micronesia, Federated States of"
      },
      {
        iso_2: "md",
        iso_3: "mda",
        num_code: "498",
        name: "MOLDOVA, REPUBLIC OF",
        display_name: "Moldova, Republic of"
      },
      {
        iso_2: "mc",
        iso_3: "mco",
        num_code: "492",
        name: "MONACO",
        display_name: "Monaco"
      },
      {
        iso_2: "mn",
        iso_3: "mng",
        num_code: "496",
        name: "MONGOLIA",
        display_name: "Mongolia"
      },
      {
        iso_2: "me",
        iso_3: "mne",
        num_code: "499",
        name: "MONTENEGRO",
        display_name: "Montenegro"
      },
      {
        iso_2: "ms",
        iso_3: "msr",
        num_code: "500",
        name: "MONTSERRAT",
        display_name: "Montserrat"
      },
      {
        iso_2: "ma",
        iso_3: "mar",
        num_code: "504",
        name: "MOROCCO",
        display_name: "Morocco"
      },
      {
        iso_2: "mz",
        iso_3: "moz",
        num_code: "508",
        name: "MOZAMBIQUE",
        display_name: "Mozambique"
      },
      {
        iso_2: "mm",
        iso_3: "mmr",
        num_code: "104",
        name: "MYANMAR",
        display_name: "Myanmar"
      },
      {
        iso_2: "na",
        iso_3: "nam",
        num_code: "516",
        name: "NAMIBIA",
        display_name: "Namibia"
      },
      {
        iso_2: "nr",
        iso_3: "nru",
        num_code: "520",
        name: "NAURU",
        display_name: "Nauru"
      },
      {
        iso_2: "np",
        iso_3: "npl",
        num_code: "524",
        name: "NEPAL",
        display_name: "Nepal"
      },
      {
        iso_2: "nl",
        iso_3: "nld",
        num_code: "528",
        name: "NETHERLANDS",
        display_name: "Netherlands"
      },
      {
        iso_2: "nc",
        iso_3: "ncl",
        num_code: "540",
        name: "NEW CALEDONIA",
        display_name: "New Caledonia"
      },
      {
        iso_2: "nz",
        iso_3: "nzl",
        num_code: "554",
        name: "NEW ZEALAND",
        display_name: "New Zealand"
      },
      {
        iso_2: "ni",
        iso_3: "nic",
        num_code: "558",
        name: "NICARAGUA",
        display_name: "Nicaragua"
      },
      {
        iso_2: "ne",
        iso_3: "ner",
        num_code: "562",
        name: "NIGER",
        display_name: "Niger"
      },
      {
        iso_2: "ng",
        iso_3: "nga",
        num_code: "566",
        name: "NIGERIA",
        display_name: "Nigeria"
      },
      {
        iso_2: "nu",
        iso_3: "niu",
        num_code: "570",
        name: "NIUE",
        display_name: "Niue"
      },
      {
        iso_2: "nf",
        iso_3: "nfk",
        num_code: "574",
        name: "NORFOLK ISLAND",
        display_name: "Norfolk Island"
      },
      {
        iso_2: "mp",
        iso_3: "mnp",
        num_code: "580",
        name: "NORTHERN MARIANA ISLANDS",
        display_name: "Northern Mariana Islands"
      },
      {
        iso_2: "no",
        iso_3: "nor",
        num_code: "578",
        name: "NORWAY",
        display_name: "Norway"
      },
      {
        iso_2: "om",
        iso_3: "omn",
        num_code: "512",
        name: "OMAN",
        display_name: "Oman"
      },
      {
        iso_2: "pk",
        iso_3: "pak",
        num_code: "586",
        name: "PAKISTAN",
        display_name: "Pakistan"
      },
      {
        iso_2: "pw",
        iso_3: "plw",
        num_code: "585",
        name: "PALAU",
        display_name: "Palau"
      },
      {
        iso_2: "ps",
        iso_3: "pse",
        num_code: "275",
        name: "PALESTINIAN TERRITORY, OCCUPIED",
        display_name: "Palestinian Territory, Occupied"
      },
      {
        iso_2: "pa",
        iso_3: "pan",
        num_code: "591",
        name: "PANAMA",
        display_name: "Panama"
      },
      {
        iso_2: "pg",
        iso_3: "png",
        num_code: "598",
        name: "PAPUA NEW GUINEA",
        display_name: "Papua New Guinea"
      },
      {
        iso_2: "py",
        iso_3: "pry",
        num_code: "600",
        name: "PARAGUAY",
        display_name: "Paraguay"
      },
      {
        iso_2: "pe",
        iso_3: "per",
        num_code: "604",
        name: "PERU",
        display_name: "Peru"
      },
      {
        iso_2: "ph",
        iso_3: "phl",
        num_code: "608",
        name: "PHILIPPINES",
        display_name: "Philippines"
      },
      {
        iso_2: "pn",
        iso_3: "pcn",
        num_code: "612",
        name: "PITCAIRN",
        display_name: "Pitcairn"
      },
      {
        iso_2: "pl",
        iso_3: "pol",
        num_code: "616",
        name: "POLAND",
        display_name: "Poland"
      },
      {
        iso_2: "pt",
        iso_3: "prt",
        num_code: "620",
        name: "PORTUGAL",
        display_name: "Portugal"
      },
      {
        iso_2: "pr",
        iso_3: "pri",
        num_code: "630",
        name: "PUERTO RICO",
        display_name: "Puerto Rico"
      },
      {
        iso_2: "qa",
        iso_3: "qat",
        num_code: "634",
        name: "QATAR",
        display_name: "Qatar"
      },
      {
        iso_2: "re",
        iso_3: "reu",
        num_code: "638",
        name: "REUNION",
        display_name: "Reunion"
      },
      {
        iso_2: "ro",
        iso_3: "rom",
        num_code: "642",
        name: "ROMANIA",
        display_name: "Romania"
      },
      {
        iso_2: "ru",
        iso_3: "rus",
        num_code: "643",
        name: "RUSSIAN FEDERATION",
        display_name: "Russian Federation"
      },
      {
        iso_2: "rw",
        iso_3: "rwa",
        num_code: "646",
        name: "RWANDA",
        display_name: "Rwanda"
      },
      {
        iso_2: "bl",
        iso_3: "blm",
        num_code: "652",
        name: "SAINT BARTH\xC9LEMY",
        display_name: "Saint Barth\xE9lemy"
      },
      {
        iso_2: "sh",
        iso_3: "shn",
        num_code: "654",
        name: "SAINT HELENA",
        display_name: "Saint Helena"
      },
      {
        iso_2: "kn",
        iso_3: "kna",
        num_code: "659",
        name: "SAINT KITTS AND NEVIS",
        display_name: "Saint Kitts and Nevis"
      },
      {
        iso_2: "lc",
        iso_3: "lca",
        num_code: "662",
        name: "SAINT LUCIA",
        display_name: "Saint Lucia"
      },
      {
        iso_2: "mf",
        iso_3: "maf",
        num_code: "663",
        name: "SAINT MARTIN (FRENCH PART)",
        display_name: "Saint Martin (French part)"
      },
      {
        iso_2: "pm",
        iso_3: "spm",
        num_code: "666",
        name: "SAINT PIERRE AND MIQUELON",
        display_name: "Saint Pierre and Miquelon"
      },
      {
        iso_2: "vc",
        iso_3: "vct",
        num_code: "670",
        name: "SAINT VINCENT AND THE GRENADINES",
        display_name: "Saint Vincent and the Grenadines"
      },
      {
        iso_2: "ws",
        iso_3: "wsm",
        num_code: "882",
        name: "SAMOA",
        display_name: "Samoa"
      },
      {
        iso_2: "sm",
        iso_3: "smr",
        num_code: "674",
        name: "SAN MARINO",
        display_name: "San Marino"
      },
      {
        iso_2: "st",
        iso_3: "stp",
        num_code: "678",
        name: "SAO TOME AND PRINCIPE",
        display_name: "Sao Tome and Principe"
      },
      {
        iso_2: "sa",
        iso_3: "sau",
        num_code: "682",
        name: "SAUDI ARABIA",
        display_name: "Saudi Arabia"
      },
      {
        iso_2: "sn",
        iso_3: "sen",
        num_code: "686",
        name: "SENEGAL",
        display_name: "Senegal"
      },
      {
        iso_2: "rs",
        iso_3: "srb",
        num_code: "688",
        name: "SERBIA",
        display_name: "Serbia"
      },
      {
        iso_2: "sc",
        iso_3: "syc",
        num_code: "690",
        name: "SEYCHELLES",
        display_name: "Seychelles"
      },
      {
        iso_2: "sl",
        iso_3: "sle",
        num_code: "694",
        name: "SIERRA LEONE",
        display_name: "Sierra Leone"
      },
      {
        iso_2: "sg",
        iso_3: "sgp",
        num_code: "702",
        name: "SINGAPORE",
        display_name: "Singapore"
      },
      {
        iso_2: "sx",
        iso_3: "sxm",
        num_code: "534",
        name: "SINT MAARTEN",
        display_name: "Sint Maarten"
      },
      {
        iso_2: "sk",
        iso_3: "svk",
        num_code: "703",
        name: "SLOVAKIA",
        display_name: "Slovakia"
      },
      {
        iso_2: "si",
        iso_3: "svn",
        num_code: "705",
        name: "SLOVENIA",
        display_name: "Slovenia"
      },
      {
        iso_2: "sb",
        iso_3: "slb",
        num_code: "90",
        name: "SOLOMON ISLANDS",
        display_name: "Solomon Islands"
      },
      {
        iso_2: "so",
        iso_3: "som",
        num_code: "706",
        name: "SOMALIA",
        display_name: "Somalia"
      },
      {
        iso_2: "za",
        iso_3: "zaf",
        num_code: "710",
        name: "SOUTH AFRICA",
        display_name: "South Africa"
      },
      {
        iso_2: "gs",
        iso_3: "sgs",
        num_code: "239",
        name: "SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS",
        display_name: "South Georgia and the South Sandwich Islands"
      },
      {
        iso_2: "ss",
        iso_3: "ssd",
        num_code: "728",
        name: "SOUTH SUDAN",
        display_name: "South Sudan"
      },
      {
        iso_2: "es",
        iso_3: "esp",
        num_code: "724",
        name: "SPAIN",
        display_name: "Spain"
      },
      {
        iso_2: "lk",
        iso_3: "lka",
        num_code: "144",
        name: "SRI LANKA",
        display_name: "Sri Lanka"
      },
      {
        iso_2: "sd",
        iso_3: "sdn",
        num_code: "729",
        name: "SUDAN",
        display_name: "Sudan"
      },
      {
        iso_2: "sr",
        iso_3: "sur",
        num_code: "740",
        name: "SURINAME",
        display_name: "Suriname"
      },
      {
        iso_2: "sj",
        iso_3: "sjm",
        num_code: "744",
        name: "SVALBARD AND JAN MAYEN",
        display_name: "Svalbard and Jan Mayen"
      },
      {
        iso_2: "sz",
        iso_3: "swz",
        num_code: "748",
        name: "SWAZILAND",
        display_name: "Swaziland"
      },
      {
        iso_2: "se",
        iso_3: "swe",
        num_code: "752",
        name: "SWEDEN",
        display_name: "Sweden"
      },
      {
        iso_2: "ch",
        iso_3: "che",
        num_code: "756",
        name: "SWITZERLAND",
        display_name: "Switzerland"
      },
      {
        iso_2: "sy",
        iso_3: "syr",
        num_code: "760",
        name: "SYRIAN ARAB REPUBLIC",
        display_name: "Syrian Arab Republic"
      },
      {
        iso_2: "tw",
        iso_3: "twn",
        num_code: "158",
        name: "TAIWAN, PROVINCE OF CHINA",
        display_name: "Taiwan, Province of China"
      },
      {
        iso_2: "tj",
        iso_3: "tjk",
        num_code: "762",
        name: "TAJIKISTAN",
        display_name: "Tajikistan"
      },
      {
        iso_2: "tz",
        iso_3: "tza",
        num_code: "834",
        name: "TANZANIA, UNITED REPUBLIC OF",
        display_name: "Tanzania, United Republic of"
      },
      {
        iso_2: "th",
        iso_3: "tha",
        num_code: "764",
        name: "THAILAND",
        display_name: "Thailand"
      },
      {
        iso_2: "tl",
        iso_3: "tls",
        num_code: "626",
        name: "TIMOR LESTE",
        display_name: "Timor Leste"
      },
      {
        iso_2: "tg",
        iso_3: "tgo",
        num_code: "768",
        name: "TOGO",
        display_name: "Togo"
      },
      {
        iso_2: "tk",
        iso_3: "tkl",
        num_code: "772",
        name: "TOKELAU",
        display_name: "Tokelau"
      },
      {
        iso_2: "to",
        iso_3: "ton",
        num_code: "776",
        name: "TONGA",
        display_name: "Tonga"
      },
      {
        iso_2: "tt",
        iso_3: "tto",
        num_code: "780",
        name: "TRINIDAD AND TOBAGO",
        display_name: "Trinidad and Tobago"
      },
      {
        iso_2: "tn",
        iso_3: "tun",
        num_code: "788",
        name: "TUNISIA",
        display_name: "Tunisia"
      },
      {
        iso_2: "tr",
        iso_3: "tur",
        num_code: "792",
        name: "TURKEY",
        display_name: "Turkey"
      },
      {
        iso_2: "tm",
        iso_3: "tkm",
        num_code: "795",
        name: "TURKMENISTAN",
        display_name: "Turkmenistan"
      },
      {
        iso_2: "tc",
        iso_3: "tca",
        num_code: "796",
        name: "TURKS AND CAICOS ISLANDS",
        display_name: "Turks and Caicos Islands"
      },
      {
        iso_2: "tv",
        iso_3: "tuv",
        num_code: "798",
        name: "TUVALU",
        display_name: "Tuvalu"
      },
      {
        iso_2: "ug",
        iso_3: "uga",
        num_code: "800",
        name: "UGANDA",
        display_name: "Uganda"
      },
      {
        iso_2: "ua",
        iso_3: "ukr",
        num_code: "804",
        name: "UKRAINE",
        display_name: "Ukraine"
      },
      {
        iso_2: "ae",
        iso_3: "are",
        num_code: "784",
        name: "UNITED ARAB EMIRATES",
        display_name: "United Arab Emirates"
      },
      {
        iso_2: "gb",
        iso_3: "gbr",
        num_code: "826",
        name: "UNITED KINGDOM",
        display_name: "United Kingdom"
      },
      {
        iso_2: "us",
        iso_3: "usa",
        num_code: "840",
        name: "UNITED STATES",
        display_name: "United States"
      },
      {
        iso_2: "um",
        iso_3: "umi",
        num_code: "581",
        name: "UNITED STATES MINOR OUTLYING ISLANDS",
        display_name: "United States Minor Outlying Islands"
      },
      {
        iso_2: "uy",
        iso_3: "ury",
        num_code: "858",
        name: "URUGUAY",
        display_name: "Uruguay"
      },
      {
        iso_2: "uz",
        iso_3: "uzb",
        num_code: "860",
        name: "UZBEKISTAN",
        display_name: "Uzbekistan"
      },
      {
        iso_2: "vu",
        iso_3: "vut",
        num_code: "548",
        name: "VANUATU",
        display_name: "Vanuatu"
      },
      {
        iso_2: "ve",
        iso_3: "ven",
        num_code: "862",
        name: "VENEZUELA",
        display_name: "Venezuela"
      },
      {
        iso_2: "vn",
        iso_3: "vnm",
        num_code: "704",
        name: "VIET NAM",
        display_name: "Viet Nam"
      },
      {
        iso_2: "vg",
        iso_3: "vgb",
        num_code: "92",
        name: "VIRGIN ISLANDS, BRITISH",
        display_name: "Virgin Islands, British"
      },
      {
        iso_2: "vi",
        iso_3: "vir",
        num_code: "850",
        name: "VIRGIN ISLANDS, U.S.",
        display_name: "Virgin Islands, U.S."
      },
      {
        iso_2: "wf",
        iso_3: "wlf",
        num_code: "876",
        name: "WALLIS AND FUTUNA",
        display_name: "Wallis and Futuna"
      },
      {
        iso_2: "eh",
        iso_3: "esh",
        num_code: "732",
        name: "WESTERN SAHARA",
        display_name: "Western Sahara"
      },
      {
        iso_2: "ye",
        iso_3: "yem",
        num_code: "887",
        name: "YEMEN",
        display_name: "Yemen"
      },
      {
        iso_2: "zm",
        iso_3: "zmb",
        num_code: "894",
        name: "ZAMBIA",
        display_name: "Zambia"
      },
      {
        iso_2: "zw",
        iso_3: "zwe",
        num_code: "716",
        name: "ZIMBABWE",
        display_name: "Zimbabwe"
      },
      {
        iso_2: "ax",
        iso_3: "ala",
        num_code: "248",
        name: "\xC5LAND ISLANDS",
        display_name: "\xC5land Islands"
      }
    ];
  }
});

// src/lib/data/country-states.ts
function getCountryProvinceObjectByIso2(iso2) {
  if (!iso2) {
    return null;
  }
  const code = iso2.toUpperCase();
  return countryProvinceMap[code] || null;
}
function getProvinceByIso2(iso2) {
  if (!iso2) {
    return null;
  }
  const key = iso2.toUpperCase();
  for (const country in countryProvinceMap) {
    if (countryProvinceMap[country].options[key]) {
      return countryProvinceMap[country].options[key];
    }
  }
  return null;
}
function isProvinceInCountry(countryCode, provinceCode) {
  if (!countryCode || !provinceCode) {
    return false;
  }
  const code = provinceCode.toUpperCase();
  const country = countryProvinceMap[countryCode.toUpperCase()];
  return country?.options[code] !== void 0;
}
var countryProvinceMap;
var init_country_states = __esm({
  "src/lib/data/country-states.ts"() {
    "use strict";
    countryProvinceMap = {
      AR: {
        type: "province",
        options: {
          "AR-B": "Buenos Aires",
          "AR-C": "Ciudad Aut\xF3noma de Buenos Aires",
          "AR-K": "Catamarca",
          "AR-H": "Chaco",
          "AR-U": "Chubut",
          "AR-X": "C\xF3rdoba",
          "AR-W": "Corrientes",
          "AR-E": "Entre R\xEDos",
          "AR-P": "Formosa",
          "AR-Y": "Jujuy",
          "AR-L": "La Pampa",
          "AR-F": "La Rioja",
          "AR-M": "Mendoza",
          "AR-N": "Misiones",
          "AR-Q": "Neuqu\xE9n",
          "AR-R": "R\xEDo Negro",
          "AR-A": "Salta",
          "AR-J": "San Juan",
          "AR-D": "San Luis",
          "AR-Z": "Santa Cruz",
          "AR-S": "Santa Fe",
          "AR-G": "Santiago del Estero",
          "AR-V": "Tierra del Fuego",
          "AR-T": "Tucum\xE1n"
        }
      },
      AU: {
        type: "stateOrTerritory",
        options: {
          "AU-ACT": "Australian Capital Territory",
          "AU-NSW": "New South Wales",
          "AU-NT": "Northern Territory",
          "AU-QLD": "Queensland",
          "AU-SA": "South Australia",
          "AU-TAS": "Tasmania",
          "AU-VIC": "Victoria",
          "AU-WA": "Western Australia"
        }
      },
      BR: {
        type: "state",
        options: {
          "BR-AC": "Acre",
          "BR-AL": "Alagoas",
          "BR-AP": "Amap\xE1",
          "BR-AM": "Amazonas",
          "BR-BA": "Bahia",
          "BR-CE": "Cear\xE1",
          "BR-DF": "Distrito Federal",
          "BR-ES": "Esp\xEDrito Santo",
          "BR-GO": "Goi\xE1s",
          "BR-MA": "Maranh\xE3o",
          "BR-MT": "Mato Grosso",
          "BR-MS": "Mato Grosso do Sul",
          "BR-MG": "Minas Gerais",
          "BR-PA": "Par\xE1",
          "BR-PB": "Para\xEDba",
          "BR-PR": "Paran\xE1",
          "BR-PE": "Pernambuco",
          "BR-PI": "Piau\xED",
          "BR-RJ": "Rio de Janeiro",
          "BR-RN": "Rio Grande do Norte",
          "BR-RS": "Rio Grande do Sul",
          "BR-RO": "Rond\xF4nia",
          "BR-RR": "Roraima",
          "BR-SC": "Santa Catarina",
          "BR-SP": "S\xE3o Paulo",
          "BR-SE": "Sergipe",
          "BR-TO": "Tocantins"
        }
      },
      CA: {
        type: "province",
        options: {
          "CA-AB": "Alberta",
          "CA-BC": "British Columbia",
          "CA-MB": "Manitoba",
          "CA-NB": "New Brunswick",
          "CA-NL": "Newfoundland and Labrador",
          "CA-NS": "Nova Scotia",
          "CA-NT": "Northwest Territories",
          "CA-NU": "Nunavut",
          "CA-ON": "Ontario",
          "CA-PE": "Prince Edward Island",
          "CA-QC": "Quebec",
          "CA-SK": "Saskatchewan",
          "CA-YT": "Yukon"
        }
      },
      CL: {
        type: "region",
        options: {
          "CL-AI": "Ais\xE9n del General Carlos Ib\xE1\xF1ez del Campo",
          "CL-AN": "Antofagasta",
          "CL-AR": "Araucan\xEDa",
          "CL-AP": "Arica y Parinacota",
          "CL-AT": "Atacama",
          "CL-BI": "B\xEDo B\xEDo",
          "CL-CO": "Coquimbo",
          "CL-LI": "Libertador General Bernardo O'Higgins",
          "CL-LL": "Los Lagos",
          "CL-LR": "Los R\xEDos",
          "CL-MA": "Magallanes y de la Ant\xE1rtica Chilena",
          "CL-ML": "Maule",
          "CL-RM": "Regi\xF3n Metropolitana de Santiago",
          "CL-TA": "Tarapac\xE1",
          "CL-VS": "Valpara\xEDso"
        }
      },
      CN: {
        type: "province",
        options: {
          "CN-AH": "Anhui",
          "CN-BJ": "Beijing",
          "CN-CQ": "Chongqing",
          "CN-FJ": "Fujian",
          "CN-GD": "Guangdong",
          "CN-GS": "Gansu",
          "CN-GX": "Guangxi Zhuang",
          "CN-GZ": "Guizhou",
          "CN-HA": "Henan",
          "CN-HB": "Hubei",
          "CN-HE": "Hebei",
          "CN-HI": "Hainan",
          "CN-HK": "Hong Kong",
          "CN-HL": "Heilongjiang",
          "CN-HN": "Hunan",
          "CN-JL": "Jilin",
          "CN-JS": "Jiangsu",
          "CN-JX": "Jiangxi",
          "CN-LN": "Liaoning",
          "CN-NM": "Inner Mongolia",
          "CN-NX": "Ningxia Hui",
          "CN-QH": "Qinghai",
          "CN-SA": "Shaanxi",
          "CN-SC": "Sichuan",
          "CN-SD": "Shandong",
          "CN-SH": "Shanghai",
          "CN-SN": "Shanxi",
          "CN-TJ": "Tianjin",
          "CN-XJ": "Xinjiang Uygur",
          "CN-XZ": "Tibet",
          "CN-YN": "Yunnan",
          "CN-ZJ": "Zhejiang"
        }
      },
      CO: {
        type: "province",
        options: {
          "CO-AMA": "Amazonas",
          "CO-ANT": "Antioquia",
          "CO-ARA": "Arauca",
          "CO-ATL": "Atl\xE1ntico",
          "CO-BOL": "Bol\xEDvar",
          "CO-BOY": "Boyac\xE1",
          "CO-CAL": "Caldas",
          "CO-CAQ": "Caquet\xE1",
          "CO-CAS": "Casanare",
          "CO-CAU": "Cauca",
          "CO-CES": "Cesar",
          "CO-COR": "C\xF3rdoba",
          "CO-CUN": "Cundinamarca",
          "CO-DC": "Bogot\xE1 D.C.",
          "CO-GUA": "Guain\xEDa",
          "CO-GUV": "Guaviare",
          "CO-HUI": "Huila",
          "CO-LAG": "La Guajira",
          "CO-MAG": "Magdalena",
          "CO-MET": "Meta",
          "CO-NAR": "Nari\xF1o",
          "CO-NSA": "Norte de Santander",
          "CO-PUT": "Putumayo",
          "CO-QUI": "Quind\xEDo",
          "CO-RIS": "Risaralda",
          "CO-SAP": "San Andr\xE9s y Providencia",
          "CO-SAN": "Santander",
          "CO-SUC": "Sucre",
          "CO-TOL": "Tolima",
          "CO-VAC": "Valle del Cauca",
          "CO-VAU": "Vaup\xE9s",
          "CO-VID": "Vichada"
        }
      },
      CR: {
        type: "province",
        options: {
          "CR-A": "Alajuela",
          "CR-C": "Cartago",
          "CR-G": "Guanacaste",
          "CR-H": "Heredia",
          "CR-L": "Lim\xF3n",
          "CR-P": "Puntarenas",
          "CR-SJ": "San Jos\xE9"
        }
      },
      CH: {
        type: "canton",
        options: {
          "CH-AG": "Aargau",
          "CH-AR": "Appenzell Ausserrhoden",
          "CH-AI": "Appenzell Innerrhoden",
          "CH-BL": "Basel-Landschaft",
          "CH-BS": "Basel-Stadt",
          "CH-BE": "Bern",
          "CH-FR": "Fribourg",
          "CH-GE": "Geneva",
          "CH-GL": "Glarus",
          "CH-GR": "Graub\xFCnden",
          "CH-JU": "Jura",
          "CH-LU": "Lucerne",
          "CH-NE": "Neuch\xE2tel",
          "CH-NW": "Nidwalden",
          "CH-OW": "Obwalden",
          "CH-SG": "St. Gallen",
          "CH-SH": "Schaffhausen",
          "CH-SZ": "Schwyz",
          "CH-SO": "Solothurn",
          "CH-TG": "Thurgau",
          "CH-TI": "Ticino",
          "CH-UR": "Uri",
          "CH-VS": "Valais",
          "CH-VD": "Vaud",
          "CH-ZG": "Zug",
          "CH-ZH": "Zurich"
        }
      },
      EG: {
        type: "governorate",
        options: {
          "EG-ALX": "Alexandria",
          "EG-ASN": "Aswan",
          "EG-AST": "Asyut",
          "EG-BA": "Red Sea",
          "EG-BH": "Beheira",
          "EG-BNS": "Beni Suef",
          "EG-C": "Cairo",
          "EG-DK": "Dakahlia",
          "EG-DT": "Damietta",
          "EG-FYM": "Faiyum",
          "EG-GH": "Gharbia",
          "EG-GZ": "Giza",
          "EG-IS": "Ismailia",
          "EG-JS": "South Sinai",
          "EG-KB": "Qalyubia",
          "EG-KFS": "Kafr el-Sheikh",
          "EG-KN": "Qena",
          "EG-LX": "Luxor",
          "EG-MNF": "Monufia",
          "EG-MT": "Matrouh",
          "EG-PTS": "Port Said",
          "EG-SHG": "Sohag",
          "EG-SHR": "Al Sharqia",
          "EG-SIN": "North Sinai",
          "EG-SUZ": "Suez"
        }
      },
      GT: {
        type: "department",
        options: {
          "GT-AV": "Alta Verapaz",
          "GT-BV": "Baja Verapaz",
          "GT-CM": "Chimaltenango",
          "GT-CQ": "Chiquimula",
          "GT-PR": "El Progreso",
          "GT-ES": "Escuintla",
          "GT-GU": "Guatemala",
          "GT-HU": "Huehuetenango",
          "GT-IZ": "Izabal",
          "GT-JA": "Jalapa",
          "GT-JU": "Jutiapa",
          "GT-PE": "Pet\xE9n",
          "GT-QZ": "Quetzaltenango",
          "GT-QC": "Quich\xE9",
          "GT-RE": "Retalhuleu",
          "GT-SA": "Sacatep\xE9quez",
          "GT-SM": "San Marcos",
          "GT-SR": "Santa Rosa",
          "GT-SO": "Solol\xE1",
          "GT-SU": "Suchitep\xE9quez",
          "GT-TO": "Totonicap\xE1n",
          "GT-ZA": "Zacapa"
        }
      },
      HK: {
        type: "region",
        options: {
          "HK-HKI": "Hong Kong Island",
          "HK-KLN": "Kowloon",
          "HK-NT": "New Territories"
        }
      },
      IN: {
        type: "state",
        options: {
          "IN-AN": "Andaman and Nicobar Islands",
          "IN-AP": "Andhra Pradesh",
          "IN-AR": "Arunachal Pradesh",
          "IN-AS": "Assam",
          "IN-BR": "Bihar",
          "IN-CH": "Chandigarh",
          "IN-CT": "Chhattisgarh",
          "IN-DN": "Dadra and Nagar Haveli and Daman and Diu",
          "IN-DL": "Delhi",
          "IN-GA": "Goa",
          "IN-GJ": "Gujarat",
          "IN-HR": "Haryana",
          "IN-HP": "Himachal Pradesh",
          "IN-JH": "Jharkhand",
          "IN-KA": "Karnataka",
          "IN-KL": "Kerala",
          "IN-LD": "Lakshadweep",
          "IN-MP": "Madhya Pradesh",
          "IN-MH": "Maharashtra",
          "IN-MN": "Manipur",
          "IN-ML": "Meghalaya",
          "IN-MZ": "Mizoram",
          "IN-NL": "Nagaland",
          "IN-OR": "Odisha",
          "IN-PY": "Puducherry",
          "IN-PB": "Punjab",
          "IN-RJ": "Rajasthan",
          "IN-SK": "Sikkim",
          "IN-TN": "Tamil Nadu",
          "IN-TG": "Telangana",
          "IN-TR": "Tripura",
          "IN-UP": "Uttar Pradesh",
          "IN-UT": "Uttarakhand",
          "IN-WB": "West Bengal"
        }
      },
      IE: {
        type: "county",
        options: {
          "IE-CW": "Carlow",
          "IE-CN": "Cavan",
          "IE-CE": "Clare",
          "IE-C": "Cork",
          "IE-D": "Dublin",
          "IE-DL": "Donegal",
          "IE-G": "Galway",
          "IE-KY": "Kerry",
          "IE-KE": "Kildare",
          "IE-KK": "Kilkenny",
          "IE-LS": "Laois",
          "IE-LM": "Leitrim",
          "IE-LK": "Limerick",
          "IE-LD": "Longford",
          "IE-LH": "Louth",
          "IE-MO": "Mayo",
          "IE-MH": "Meath",
          "IE-MN": "Monaghan",
          "IE-OY": "Offaly",
          "IE-RN": "Roscommon",
          "IE-SO": "Sligo",
          "IE-TA": "Tipperary",
          "IE-WD": "Waterford",
          "IE-WH": "Westmeath",
          "IE-WX": "Wexford",
          "IE-WW": "Wicklow"
        }
      },
      IT: {
        type: "province",
        options: {
          "IT-AG": "Agrigento",
          "IT-AL": "Alessandria",
          "IT-AN": "Ancona",
          "IT-AO": "Aosta",
          "IT-AR": "Arezzo",
          "IT-AP": "Ascoli Piceno",
          "IT-AT": "Asti",
          "IT-AV": "Avellino",
          "IT-BA": "Bari",
          "IT-BT": "Barletta-Andria-Trani",
          "IT-BL": "Belluno",
          "IT-BN": "Benevento",
          "IT-BG": "Bergamo",
          "IT-BI": "Biella",
          "IT-BO": "Bologna",
          "IT-BZ": "Bolzano",
          "IT-BS": "Brescia",
          "IT-BR": "Brindisi",
          "IT-CA": "Cagliari",
          "IT-CL": "Caltanissetta",
          "IT-CB": "Campobasso",
          "IT-CI": "Carbonia-Iglesias",
          "IT-CE": "Caserta",
          "IT-CT": "Catania",
          "IT-CZ": "Catanzaro",
          "IT-CH": "Chieti",
          "IT-CO": "Como",
          "IT-CS": "Cosenza",
          "IT-CR": "Cremona",
          "IT-KR": "Crotone",
          "IT-CN": "Cuneo",
          "IT-EN": "Enna",
          "IT-FM": "Fermo",
          "IT-FE": "Ferrara",
          "IT-FI": "Firenze",
          "IT-FG": "Foggia",
          "IT-FC": "Forl\xEC-Cesena",
          "IT-FR": "Frosinone",
          "IT-GE": "Genova",
          "IT-GO": "Gorizia",
          "IT-GR": "Grosseto",
          "IT-IM": "Imperia",
          "IT-IS": "Isernia",
          "IT-SP": "La Spezia",
          "IT-AQ": "L'Aquila",
          "IT-LT": "Latina",
          "IT-LE": "Lecce",
          "IT-LC": "Lecco",
          "IT-LI": "Livorno",
          "IT-LO": "Lodi",
          "IT-LU": "Lucca",
          "IT-MC": "Macerata",
          "IT-MN": "Mantova",
          "IT-MS": "Massa-Carrara",
          "IT-MT": "Matera",
          "IT-VS": "Medio Campidano",
          "IT-ME": "Messina",
          "IT-MI": "Milano",
          "IT-MO": "Modena",
          "IT-MB": "Monza e Brianza",
          "IT-NA": "Napoli",
          "IT-NO": "Novara",
          "IT-NU": "Nuoro",
          "IT-OG": "Ogliastra",
          "IT-OT": "Olbia-Tempio",
          "IT-OR": "Oristano",
          "IT-PD": "Padova",
          "IT-PA": "Palermo",
          "IT-PR": "Parma",
          "IT-PV": "Pavia",
          "IT-PG": "Perugia",
          "IT-PU": "Pesaro e Urbino",
          "IT-PE": "Pescara",
          "IT-PC": "Piacenza",
          "IT-PI": "Pisa",
          "IT-PT": "Pistoia",
          "IT-PN": "Pordenone",
          "IT-PZ": "Potenza",
          "IT-PO": "Prato",
          "IT-RG": "Ragusa",
          "IT-RA": "Ravenna",
          "IT-RC": "Reggio Calabria",
          "IT-RE": "Reggio Emilia",
          "IT-RI": "Rieti",
          "IT-RN": "Rimini",
          "IT-RM": "Roma",
          "IT-RO": "Rovigo",
          "IT-SA": "Salerno",
          "IT-SS": "Sassari",
          "IT-SV": "Savona",
          "IT-SI": "Siena",
          "IT-SR": "Siracusa",
          "IT-SO": "Sondrio",
          "IT-TA": "Taranto",
          "IT-TE": "Teramo",
          "IT-TR": "Terni",
          "IT-TO": "Torino",
          "IT-TP": "Trapani",
          "IT-TN": "Trento",
          "IT-TV": "Treviso",
          "IT-TS": "Trieste",
          "IT-UD": "Udine",
          "IT-VA": "Varese",
          "IT-VE": "Venezia",
          "IT-VB": "Verbano-Cusio-Ossola",
          "IT-VC": "Vercelli",
          "IT-VR": "Verona",
          "IT-VV": "Vibo Valentia",
          "IT-VI": "Vicenza",
          "IT-VT": "Viterbo"
        }
      },
      JP: {
        type: "prefecture",
        options: {
          "JP-01": "Hokkaido",
          "JP-02": "Aomori",
          "JP-03": "Iwate",
          "JP-04": "Miyagi",
          "JP-05": "Akita",
          "JP-06": "Yamagata",
          "JP-07": "Fukushima",
          "JP-08": "Ibaraki",
          "JP-09": "Tochigi",
          "JP-10": "Gunma",
          "JP-11": "Saitama",
          "JP-12": "Chiba",
          "JP-13": "Tokyo",
          "JP-14": "Kanagawa",
          "JP-15": "Niigata",
          "JP-16": "Toyama",
          "JP-17": "Ishikawa",
          "JP-18": "Fukui",
          "JP-19": "Yamanashi",
          "JP-20": "Nagano",
          "JP-21": "Gifu",
          "JP-22": "Shizuoka",
          "JP-23": "Aichi",
          "JP-24": "Mie",
          "JP-25": "Shiga",
          "JP-26": "Kyoto",
          "JP-27": "Osaka",
          "JP-28": "Hyogo",
          "JP-29": "Nara",
          "JP-30": "Wakayama",
          "JP-31": "Tottori",
          "JP-32": "Shimane",
          "JP-33": "Okayama",
          "JP-34": "Hiroshima",
          "JP-35": "Yamaguchi",
          "JP-36": "Tokushima",
          "JP-37": "Kagawa",
          "JP-38": "Ehime",
          "JP-39": "Kochi",
          "JP-40": "Fukuoka",
          "JP-41": "Saga",
          "JP-42": "Nagasaki",
          "JP-43": "Kumamoto",
          "JP-44": "Oita",
          "JP-45": "Miyazaki",
          "JP-46": "Kagoshima",
          "JP-47": "Okinawa"
        }
      },
      KW: {
        type: "governorate",
        options: {
          "KW-AH": "Al Ahmadi",
          "KW-FA": "Al Farwaniyah",
          "KW-HA": "Hawalli",
          "KW-JA": "Al Jahra",
          "KW-KU": "Capital",
          "KW-MU": "Mubarak Al-Kabeer"
        }
      },
      MY: {
        type: "stateOrTerritory",
        options: {
          "MY-01": "Johor",
          "MY-02": "Kedah",
          "MY-03": "Kelantan",
          "MY-04": "Melaka",
          "MY-05": "Negeri Sembilan",
          "MY-06": "Pahang",
          "MY-08": "Perak",
          "MY-09": "Perlis",
          "MY-07": "Pulau Pinang",
          "MY-12": "Sabah",
          "MY-13": "Sarawak",
          "MY-10": "Selangor",
          "MY-11": "Terengganu",
          "MY-14": "Wilayah Persekutuan Kuala Lumpur",
          "MY-15": "Wilayah Persekutuan Labuan",
          "MY-16": "Wilayah Persekutuan Putrajaya"
        }
      },
      MX: {
        type: "state",
        options: {
          "MX-AGU": "Aguascalientes",
          "MX-BCN": "Baja California",
          "MX-BCS": "Baja California Sur",
          "MX-CAM": "Campeche",
          "MX-CMX": "Ciudad de M\xE9xico",
          "MX-COA": "Coahuila de Zaragoza",
          "MX-COL": "Colima",
          "MX-CHP": "Chiapas",
          "MX-CHH": "Chihuahua",
          "MX-DUR": "Durango",
          "MX-GUA": "Guanajuato",
          "MX-GRO": "Guerrero",
          "MX-HID": "Hidalgo",
          "MX-JAL": "Jalisco",
          "MX-MEX": "M\xE9xico",
          "MX-MIC": "Michoac\xE1n de Ocampo",
          "MX-MOR": "Morelos",
          "MX-NAY": "Nayarit",
          "MX-NLE": "Nuevo Le\xF3n",
          "MX-OAX": "Oaxaca",
          "MX-PUE": "Puebla",
          "MX-QUE": "Quer\xE9taro",
          "MX-ROO": "Quintana Roo",
          "MX-SLP": "San Luis Potos\xED",
          "MX-SIN": "Sinaloa",
          "MX-SON": "Sonora",
          "MX-TAB": "Tabasco",
          "MX-TAM": "Tamaulipas",
          "MX-TLA": "Tlaxcala",
          "MX-VER": "Veracruz de Ignacio de la Llave",
          "MX-YUC": "Yucat\xE1n",
          "MX-ZAC": "Zacatecas"
        }
      },
      NZ: {
        type: "region",
        options: {
          "NZ-AUK": "Auckland",
          "NZ-BOP": "Bay of Plenty",
          "NZ-CAN": "Canterbury",
          "NZ-CIT": "Chatham Islands Territory",
          "NZ-GIS": "Gisborne",
          "NZ-WGN": "Greater Wellington",
          "NZ-HKB": "Hawke's Bay",
          "NZ-MWT": "Manawat\u016B-Whanganui",
          "NZ-MBH": "Marlborough",
          "NZ-NSN": "Nelson",
          "NZ-NTL": "Northland",
          "NZ-OTA": "Otago",
          "NZ-STL": "Southland",
          "NZ-TKI": "Taranaki",
          "NZ-TAS": "Tasman",
          "NZ-WKO": "Waikato",
          "NZ-WTC": "West Coast"
        }
      },
      NG: {
        type: "state",
        options: {
          "NG-AB": "Abia",
          "NG-AD": "Adamawa",
          "NG-AK": "Akwa Ibom",
          "NG-AN": "Anambra",
          "NG-BA": "Bauchi",
          "NG-BY": "Bayelsa",
          "NG-BE": "Benue",
          "NG-BO": "Borno",
          "NG-CR": "Cross River",
          "NG-DE": "Delta",
          "NG-EB": "Ebonyi",
          "NG-ED": "Edo",
          "NG-EK": "Ekiti",
          "NG-EN": "Enugu",
          "NG-FC": "Federal Capital Territory",
          "NG-GO": "Gombe",
          "NG-IM": "Imo",
          "NG-JI": "Jigawa",
          "NG-KD": "Kaduna",
          "NG-KN": "Kano",
          "NG-KT": "Katsina",
          "NG-KE": "Kebbi",
          "NG-KO": "Kogi",
          "NG-KW": "Kwara",
          "NG-LA": "Lagos",
          "NG-NA": "Nasarawa",
          "NG-NI": "Niger",
          "NG-OG": "Ogun",
          "NG-ON": "Ondo",
          "NG-OS": "Osun",
          "NG-OY": "Oyo",
          "NG-PL": "Plateau",
          "NG-RI": "Rivers",
          "NG-SO": "Sokoto",
          "NG-TA": "Taraba",
          "NG-YO": "Yobe",
          "NG-ZA": "Zamfara"
        }
      },
      PA: {
        type: "province",
        options: {
          "PA-1": "Bocas del Toro",
          "PA-4": "Chiriqu\xED",
          "PA-2": "Cocl\xE9",
          "PA-3": "Col\xF3n",
          "PA-5": "Dari\xE9n",
          "PA-6": "Herrera",
          "PA-7": "Los Santos",
          "PA-8": "Panam\xE1",
          "PA-9": "Panam\xE1 Oeste",
          "PA-10": "Veraguas",
          "PA-EM": "Ember\xE1",
          "PA-KY": "Guna Yala",
          "PA-NB": "Ng\xE4be-Bugl\xE9"
        }
      },
      PE: {
        type: "province",
        options: {
          "PE-AMA": "Amazonas",
          "PE-ANC": "Ancash",
          "PE-APU": "Apur\xEDmac",
          "PE-ARE": "Arequipa",
          "PE-AYA": "Ayacucho",
          "PE-CAJ": "Cajamarca",
          "PE-CAL": "El Callao",
          "PE-CUS": "Cusco",
          "PE-HUV": "Huancavelica",
          "PE-HUC": "Hu\xE1nuco",
          "PE-ICA": "Ica",
          "PE-JUN": "Jun\xEDn",
          "PE-LAL": "La Libertad",
          "PE-LAM": "Lambayeque",
          "PE-LIMD": "Lima (Department)",
          "PE-LIM": "Lima (Metropolitan)",
          "PE-LOR": "Loreto",
          "PE-MDD": "Madre de Dios",
          "PE-MOQ": "Moquegua",
          "PE-PAS": "Pasco",
          "PE-PIU": "Piura",
          "PE-PUN": "Puno",
          "PE-SAM": "San Mart\xEDn",
          "PE-TAC": "Tacna",
          "PE-TUM": "Tumbes",
          "PE-UCA": "Ucayali"
        }
      },
      PH: {
        type: "region",
        options: {
          "PH-ABR": "Abra",
          "PH-AGN": "Agusan del Norte",
          "PH-AGS": "Agusan del Sur",
          "PH-AKL": "Aklan",
          "PH-ALB": "Albay",
          "PH-ANT": "Antique",
          "PH-APA": "Apayao",
          "PH-AUR": "Aurora",
          "PH-BAS": "Basilan",
          "PH-BAN": "Bataan",
          "PH-BTG": "Batangas",
          "PH-BEN": "Benguet",
          "PH-BOH": "Bohol",
          "PH-BUK": "Bukidnon",
          "PH-BUL": "Bulacan",
          "PH-CAG": "Cagayan",
          "PH-CAM": "Camiguin",
          "PH-CAN": "Camarines Norte",
          "PH-CAS": "Camarines Sur",
          "PH-CAP": "Capiz",
          "PH-CAT": "Catanduanes",
          "PH-CAV": "Cavite",
          "PH-CEB": "Cebu",
          "PH-COM": "Compostela Valley",
          "PH-COT": "Cotabato",
          "PH-DAV": "Davao del Norte",
          "PH-DAS": "Davao del Sur",
          "PH-DAO": "Davao Oriental",
          "PH-EAS": "Eastern Samar",
          "PH-GUI": "Guimaras",
          "PH-IFU": "Ifugao",
          "PH-ILN": "Ilocos Norte",
          "PH-ILS": "Ilocos Sur",
          "PH-ILI": "Iloilo",
          "PH-ISA": "Isabela",
          "PH-KAL": "Kalinga",
          "PH-LUN": "La Union",
          "PH-LAG": "Laguna",
          "PH-LAN": "Lanao del Norte",
          "PH-LAS": "Lanao del Sur",
          "PH-LEY": "Leyte",
          "PH-MAG": "Maguindanao",
          "PH-MAD": "Marinduque",
          "PH-MAS": "Masbate",
          "PH-MDC": "Misamis Occidental",
          "PH-MDR": "Misamis Oriental",
          "PH-MOU": "Mountain Province",
          "PH-NEC": "Negros Occidental",
          "PH-NER": "Negros Oriental",
          "PH-NCO": "North Cotabato",
          "PH-NSA": "Northern Samar",
          "PH-NUE": "Nueva Ecija",
          "PH-NUV": "Nueva Vizcaya",
          "PH-PLW": "Palawan",
          "PH-PAM": "Pampanga",
          "PH-PAN": "Pangasinan",
          "PH-QUE": "Quezon",
          "PH-QUI": "Quirino",
          "PH-RIZ": "Rizal",
          "PH-ROM": "Romblon",
          "PH-WSA": "Samar",
          "PH-SAR": "Sarangani",
          "PH-SIG": "Siquijor",
          "PH-SOR": "Sorsogon",
          "PH-SCO": "South Cotabato",
          "PH-SLE": "Southern Leyte",
          "PH-SUK": "Sultan Kudarat",
          "PH-SLU": "Sulu",
          "PH-SUN": "Surigao del Norte",
          "PH-SUR": "Surigao del Sur",
          "PH-TAR": "Tarlac",
          "PH-TAW": "Tawi-Tawi",
          "PH-ZMB": "Zambales",
          "PH-ZAN": "Zamboanga del Norte",
          "PH-ZAS": "Zamboanga del Sur",
          "PH-ZSI": "Zamboanga Sibugay",
          "PH-00": "Metro Manila"
        }
      },
      PT: {
        type: "district",
        options: {
          "PT-01": "Aveiro",
          "PT-02": "Beja",
          "PT-03": "Braga",
          "PT-04": "Bragan\xE7a",
          "PT-05": "Castelo Branco",
          "PT-06": "Coimbra",
          "PT-07": "\xC9vora",
          "PT-08": "Faro",
          "PT-09": "Guarda",
          "PT-10": "Leiria",
          "PT-11": "Lisboa",
          "PT-12": "Portalegre",
          "PT-13": "Porto",
          "PT-14": "Santar\xE9m",
          "PT-15": "Set\xFAbal",
          "PT-16": "Viana do Castelo",
          "PT-17": "Vila Real",
          "PT-18": "Viseu",
          "PT-20": "Azores",
          "PT-30": "Madeira"
        }
      },
      RO: {
        type: "county",
        options: {
          "RO-AB": "Alba",
          "RO-AR": "Arad",
          "RO-AG": "Arge\u0219",
          "RO-BC": "Bac\u0103u",
          "RO-BH": "Bihor",
          "RO-BN": "Bistri\u021Ba-N\u0103s\u0103ud",
          "RO-BT": "Boto\u0219ani",
          "RO-BV": "Bra\u0219ov",
          "RO-BR": "Br\u0103ila",
          "RO-BZ": "Buz\u0103u",
          "RO-CS": "Cara\u0219-Severin",
          "RO-CL": "C\u0103l\u0103ra\u0219i",
          "RO-CJ": "Cluj",
          "RO-CT": "Constan\u021Ba",
          "RO-CV": "Covasna",
          "RO-DB": "D\xE2mbovi\u021Ba",
          "RO-DJ": "Dolj",
          "RO-GL": "Gala\u021Bi",
          "RO-GR": "Giurgiu",
          "RO-GJ": "Gorj",
          "RO-HR": "Harghita",
          "RO-HD": "Hunedoara",
          "RO-IL": "Ialomi\u021Ba",
          "RO-IS": "Ia\u0219i",
          "RO-MM": "Maramure\u0219",
          "RO-MH": "Mehedin\u021Bi",
          "RO-MS": "Mure\u0219",
          "RO-NT": "Neam\u021B",
          "RO-OT": "Olt",
          "RO-PH": "Prahova",
          "RO-SJ": "S\u0103laj",
          "RO-SM": "Satu Mare",
          "RO-SB": "Sibiu",
          "RO-SV": "Suceava",
          "RO-TR": "Teleorman",
          "RO-TM": "Timi\u0219",
          "RO-TL": "Tulcea",
          "RO-VS": "Vaslui",
          "RO-VL": "V\xE2lcea",
          "RO-VN": "Vrancea"
        }
      },
      RU: {
        type: "region",
        options: {
          "RU-AD": "Adygea",
          "RU-AL": "Altai",
          "RU-ALT": "Altai Krai",
          "RU-AMU": "Amur",
          "RU-ARK": "Arkhangelsk",
          "RU-AST": "Astrakhan",
          "RU-BA": "Bashkortostan",
          "RU-BEL": "Belgorod",
          "RU-BRY": "Bryansk",
          "RU-BU": "Buryat",
          "RU-CE": "Chechen",
          "RU-CHE": "Chelyabinsk",
          "RU-CHU": "Chukotka Okrug",
          "RU-CU": "Chuvash",
          "RU-DA": "Dagestan",
          "RU-IRK": "Irkutsk",
          "RU-IVA": "Ivanovo",
          "RU-YEV": "Jewish",
          "RU-KB": "Kabardino-Balkar",
          "RU-KGD": "Kaliningrad",
          "RU-KLU": "Kaluga",
          "RU-KAM": "Kamchatka Krai",
          "RU-KC": "Karachay-Cherkess",
          "RU-KEM": "Kemerovo",
          "RU-KHA": "Khabarovsk Krai",
          "RU-KHM": "Khanty-Mansi",
          "RU-KIR": "Kirov",
          "RU-KO": "Komi",
          "RU-KOS": "Kostroma",
          "RU-KDA": "Krasnodar Krai",
          "RU-KYA": "Krasnoyarsk Krai",
          "RU-KGN": "Kurgan",
          "RU-KRS": "Kursk",
          "RU-LEN": "Leningrad",
          "RU-LIP": "Lipetsk",
          "RU-MAG": "Magadan",
          "RU-ME": "Mari El",
          "RU-MOW": "Moscow",
          "RU-MOS": "Moscow Province",
          "RU-MUR": "Murmansk",
          "RU-NIZ": "Nizhny Novgorod",
          "RU-NGR": "Novgorod",
          "RU-NVS": "Novosibirsk",
          "RU-OMS": "Omsk",
          "RU-ORE": "Orenburg",
          "RU-ORL": "Oryol",
          "RU-PNZ": "Penza",
          "RU-PER": "Perm Krai",
          "RU-PRI": "Primorsky Krai",
          "RU-PSK": "Pskov",
          "RU-SA": "Sakha",
          "RU-SAK": "Sakhalin",
          "RU-SAM": "Samara",
          "RU-SAR": "Saratov",
          "RU-SMO": "Smolensk",
          "RU-SE": "North Ossetia-Alania",
          "RU-STA": "Stavropol Krai",
          "RU-SVE": "Sverdlovsk",
          "RU-TAM": "Tambov",
          "RU-TOM": "Tomsk",
          "RU-TUL": "Tula",
          "RU-TVE": "Tver",
          "RU-TYU": "Tyumen",
          "RU-TY": "Tuva",
          "RU-UD": "Udmurt",
          "RU-ULY": "Ulyanovsk",
          "RU-VLA": "Vladimir",
          "RU-VGG": "Volgograd",
          "RU-VLG": "Vologda",
          "RU-VOR": "Voronezh",
          "RU-YAN": "Yamalo-Nenets Okrug",
          "RU-YAR": "Yaroslavl",
          "RU-ZAB": "Zabaykalsky Krai"
        }
      },
      ZA: {
        type: "province",
        options: {
          "ZA-EC": "Eastern Cape",
          "ZA-FS": "Free State",
          "ZA-GT": "Gauteng",
          "ZA-NL": "KwaZulu-Natal",
          "ZA-LP": "Limpopo",
          "ZA-MP": "Mpumalanga",
          "ZA-NC": "Northern Cape",
          "ZA-NW": "North West",
          "ZA-WC": "Western Cape"
        }
      },
      KR: {
        type: "province",
        options: {
          "KR-11": "Seoul",
          "KR-26": "Busan",
          "KR-27": "Daegu",
          "KR-28": "Incheon",
          "KR-29": "Gwangju",
          "KR-30": "Daejeon",
          "KR-31": "Ulsan",
          "KR-41": "Gyeonggi",
          "KR-42": "Gangwon",
          "KR-43": "North Chungcheong",
          "KR-44": "South Chungcheong",
          "KR-45": "North Jeolla",
          "KR-46": "South Jeolla",
          "KR-47": "North Gyeongsang",
          "KR-48": "South Gyeongsang",
          "KR-49": "Jeju"
        }
      },
      ES: {
        type: "province",
        options: {
          "ES-A": "A Coru\xF1a",
          "ES-AB": "Albacete",
          "ES-AL": "Almer\xEDa",
          "ES-AN": "Andaluc\xEDa",
          "ES-AR": "Arag\xF3n",
          "ES-AS": "Asturias",
          "ES-AV": "\xC1vila",
          "ES-B": "Barcelona",
          "ES-BA": "Badajoz",
          "ES-BI": "Bizkaia",
          "ES-BU": "Burgos",
          "ES-C": "C\xE1ceres",
          "ES-CA": "C\xE1diz",
          "ES-CM": "Castilla-La Mancha",
          "ES-CL": "Castilla y Le\xF3n",
          "ES-CN": "Canarias",
          "ES-CT": "Catalunya",
          "ES-CE": "Ceuta",
          "ES-CR": "Ciudad Real",
          "ES-CO": "C\xF3rdoba",
          "ES-CU": "Cuenca",
          "ES-EX": "Extremadura",
          "ES-GA": "Galicia",
          "ES-GI": "Girona",
          "ES-GR": "Granada",
          "ES-GU": "Guadalajara",
          "ES-H": "Huelva",
          "ES-HU": "Huesca",
          "ES-IB": "Illes Balears",
          "ES-J": "Ja\xE9n",
          "ES-JA": "Jerez",
          "ES-LE": "Le\xF3n",
          "ES-L": "Lleida",
          "ES-LO": "La Rioja",
          "ES-LU": "Lugo",
          "ES-M": "Madrid",
          "ES-MA": "M\xE1laga",
          "ES-MU": "Murcia",
          "ES-NA": "Navarra",
          "ES-NC": "Nouvelle-Cal\xE9donie",
          "ES-O": "Ourense",
          "ES-P": "Palencia",
          "ES-PM": "Palma",
          "ES-PO": "Pontevedra",
          "ES-SA": "Salamanca",
          "ES-SG": "Segovia",
          "ES-SE": "Sevilla",
          "ES-SO": "Soria",
          "ES-T": "Tarragona",
          "ES-TE": "Teruel",
          "ES-TO": "Toledo",
          "ES-V": "Valencia",
          "ES-VA": "Valladolid",
          "ES-VI": "Vizcaya",
          "ES-Z": "Zaragoza",
          "ES-ZA": "Zamora"
        }
      },
      TH: {
        type: "province",
        options: {
          "TH-10": "Bangkok",
          "TH-11": "Samut Prakan",
          "TH-12": "Nonthaburi",
          "TH-13": "Pathum Thani",
          "TH-14": "Phra Nakhon Si Ayutthaya",
          "TH-15": "Ang Thong",
          "TH-16": "Lop Buri",
          "TH-17": "Sing Buri",
          "TH-18": "Chai Nat",
          "TH-19": "Saraburi",
          "TH-20": "Chon Buri",
          "TH-21": "Rayong",
          "TH-22": "Chanthaburi",
          "TH-23": "Trat",
          "TH-24": "Chachoengsao",
          "TH-25": "Prachin Buri",
          "TH-26": "Nakhon Nayok",
          "TH-27": "Sa Kaeo",
          "TH-30": "Nakhon Ratchasima",
          "TH-31": "Buri Ram",
          "TH-32": "Surin",
          "TH-33": "Si Sa Ket",
          "TH-34": "Ubon Ratchathani",
          "TH-35": "Yasothon",
          "TH-36": "Chaiyaphum",
          "TH-37": "Amnat Charoen",
          "TH-38": "Bueng Kan",
          "TH-39": "Nong Bua Lam Phu",
          "TH-40": "Khon Kaen",
          "TH-41": "Udon Thani",
          "TH-42": "Loei",
          "TH-43": "Nong Khai",
          "TH-44": "Maha Sarakham",
          "TH-45": "Roi Et",
          "TH-46": "Kalasin",
          "TH-47": "Sakon Nakhon",
          "TH-48": "Nakhon Phanom",
          "TH-49": "Mukdahan",
          "TH-50": "Chiang Mai",
          "TH-51": "Lamphun",
          "TH-52": "Lampang",
          "TH-53": "Uttaradit",
          "TH-54": "Phrae",
          "TH-55": "Nan",
          "TH-56": "Phayao",
          "TH-57": "Chiang Rai",
          "TH-58": "Mae Hong Son",
          "TH-60": "Nakhon Sawan",
          "TH-61": "Uthai Thani",
          "TH-62": "Kamphaeng Phet",
          "TH-63": "Tak",
          "TH-64": "Sukhothai",
          "TH-65": "Phitsanulok",
          "TH-66": "Phichit",
          "TH-67": "Phetchabun",
          "TH-70": "Ratchaburi",
          "TH-71": "Kanchanaburi",
          "TH-72": "Suphan Buri",
          "TH-73": "Nakhon Pathom",
          "TH-74": "Samut Sakhon",
          "TH-75": "Samut Songkhram",
          "TH-76": "Phetchaburi",
          "TH-77": "Prachuap Khiri Khan",
          "TH-80": "Nakhon Si Thammarat",
          "TH-81": "Krabi",
          "TH-82": "Phang Nga",
          "TH-83": "Phuket",
          "TH-84": "Surat Thani",
          "TH-85": "Ranong",
          "TH-86": "Chumphon",
          "TH-90": "Songkhla",
          "TH-91": "Satun",
          "TH-92": "Trang",
          "TH-93": "Phatthalung",
          "TH-94": "Pattani",
          "TH-95": "Yala",
          "TH-96": "Narathiwat"
        }
      },
      AE: {
        type: "emirate",
        options: {
          "AE-AJ": "Ajman",
          "AE-AZ": "Abu Dhabi",
          "AE-DU": "Dubai",
          "AE-FU": "Fujairah",
          "AE-RK": "Ras al-Khaimah",
          "AE-SH": "Sharjah",
          "AE-UQ": "Umm al-Quwain"
        }
      },
      UY: {
        type: "department",
        options: {
          "UY-AR": "Artigas",
          "UY-CA": "Canelones",
          "UY-CL": "Cerro Largo",
          "UY-CO": "Colonia",
          "UY-DU": "Durazno",
          "UY-FD": "Flores",
          "UY-FS": "Florida",
          "UY-LA": "Lavalleja",
          "UY-MA": "Maldonado",
          "UY-MO": "Montevideo",
          "UY-PA": "Paysand\xFA",
          "UY-RN": "R\xEDo Negro",
          "UY-RV": "Rivera",
          "UY-RO": "Rocha",
          "UY-SA": "Salto",
          "UY-SJ": "San Jos\xE9",
          "UY-SO": "Soriano",
          "UY-TA": "Tacuaremb\xF3",
          "UY-TT": "Treinta y Tres"
        }
      },
      US: {
        type: "state",
        options: {
          "US-AL": "Alabama",
          "US-AK": "Alaska",
          "US-AZ": "Arizona",
          "US-AR": "Arkansas",
          "US-CA": "California",
          "US-CO": "Colorado",
          "US-CT": "Connecticut",
          "US-FL": "Florida",
          "US-GA": "Georgia",
          "US-HI": "Hawaii",
          "US-ID": "Idaho",
          "US-IL": "Illinois",
          "US-IN": "Indiana",
          "US-IA": "Iowa",
          "US-KS": "Kansas",
          "US-KY": "Kentucky",
          "US-LA": "Louisiana",
          "US-ME": "Maine",
          "US-MD": "Maryland",
          "US-MA": "Massachusetts",
          "US-MI": "Michigan",
          "US-MN": "Minnesota",
          "US-MS": "Mississippi",
          "US-MO": "Missouri",
          "US-NE": "Nebraska",
          "US-NV": "Nevada",
          "US-NJ": "New Jersey",
          "US-NM": "New Mexico",
          "US-NY": "New York",
          "US-NC": "North Carolina",
          "US-ND": "North Dakota",
          "US-OH": "Ohio",
          "US-OK": "Oklahoma",
          "US-PA": "Pennsylvania",
          "US-PR": "Puerto Rico",
          "US-RI": "Rhode Island",
          "US-SC": "South Carolina",
          "US-SD": "South Dakota",
          "US-TN": "Tennessee",
          "US-TX": "Texas",
          "US-UT": "Utah",
          "US-VT": "Vermont",
          "US-VA": "Virginia",
          "US-WA": "Washington",
          "US-DC": "Washington DC",
          "US-WV": "West Virginia",
          "US-WI": "Wisconsin",
          "US-WY": "Wyoming"
        }
      },
      VE: {
        type: "state",
        options: {
          "VE-A": "Distrito Capital",
          "VE-B": "Anzo\xE1tegui",
          "VE-C": "Apure",
          "VE-D": "Aragua",
          "VE-E": "Barinas",
          "VE-F": "Bol\xEDvar",
          "VE-G": "Carabobo",
          "VE-H": "Cojedes",
          "VE-I": "Falc\xF3n",
          "VE-J": "Gu\xE1rico",
          "VE-K": "Lara",
          "VE-L": "M\xE9rida",
          "VE-M": "Miranda",
          "VE-N": "Monagas",
          "VE-O": "Nueva Esparta",
          "VE-P": "Portuguesa",
          "VE-R": "Sucre",
          "VE-S": "T\xE1chira",
          "VE-T": "Trujillo",
          "VE-U": "La Guaira",
          "VE-V": "Yaracuy",
          "VE-W": "Zulia",
          "VE-X": "Dependencias Federales",
          "VE-Y": "Vargas"
        }
      }
    };
  }
});

// src/routes/products/product-detail/constants.ts
var PRODUCT_DETAIL_FIELDS;
var init_constants2 = __esm({
  "src/routes/products/product-detail/constants.ts"() {
    "use strict";
    init_extensions();
    PRODUCT_DETAIL_FIELDS = getLinkedFields("product", "*categories");
  }
});

// src/routes/products/product-detail/loader.ts
var productDetailQuery, productLoader;
var init_loader = __esm({
  "src/routes/products/product-detail/loader.ts"() {
    "use strict";
    init_products();
    init_client2();
    init_query_client();
    init_constants2();
    productDetailQuery = (id2) => ({
      queryKey: productsQueryKeys.detail(id2),
      queryFn: async () => sdk.admin.product.retrieve(id2, { fields: PRODUCT_DETAIL_FIELDS })
    });
    productLoader = async ({ params: params2 }) => {
      const id2 = params2.id;
      const query = productDetailQuery(id2);
      return queryClient.getQueryData(query.queryKey) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/routes/tax-regions/tax-region-detail/loader.ts
var taxRegionDetailQuery, taxRegionLoader;
var init_loader2 = __esm({
  "src/routes/tax-regions/tax-region-detail/loader.ts"() {
    "use strict";
    init_tax_regions();
    init_client2();
    init_query_client();
    taxRegionDetailQuery = (id2) => ({
      queryKey: taxRegionsQueryKeys.detail(id2),
      queryFn: async () => sdk.admin.taxRegion.retrieve(id2)
    });
    taxRegionLoader = async ({ params: params2 }) => {
      const id2 = params2.id;
      const query = taxRegionDetailQuery(id2);
      return queryClient.getQueryData(query.queryKey) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/routes/home/home.tsx
var import_react25, import_react_router_dom13, import_jsx_runtime36, Home;
var init_home = __esm({
  "src/routes/home/home.tsx"() {
    "use strict";
    import_react25 = require("react");
    import_react_router_dom13 = require("react-router-dom");
    import_jsx_runtime36 = require("react/jsx-runtime");
    Home = () => {
      const navigate = (0, import_react_router_dom13.useNavigate)();
      (0, import_react25.useEffect)(() => {
        navigate("/orders", { replace: true });
      }, [navigate]);
      return /* @__PURE__ */ (0, import_jsx_runtime36.jsx)("div", {});
    };
  }
});

// src/routes/home/index.ts
var home_exports = {};
__export(home_exports, {
  Component: () => Home
});
var init_home2 = __esm({
  "src/routes/home/index.ts"() {
    "use strict";
    init_home();
  }
});

// src/routes/products/product-list/loader.ts
var productsListQuery, productsLoader;
var init_loader3 = __esm({
  "src/routes/products/product-list/loader.ts"() {
    "use strict";
    init_products();
    init_client2();
    init_query_client();
    productsListQuery = () => ({
      queryKey: productsQueryKeys.list({ limit: 20, offset: 0 }),
      queryFn: async () => sdk.admin.product.list({ limit: 20, offset: 0 })
    });
    productsLoader = (client) => {
      return async () => {
        const query = productsListQuery();
        return queryClient.getQueryData(
          query.queryKey
        ) ?? await client.fetchQuery(query);
      };
    };
  }
});

// src/components/common/json-view-section/json-view-section.tsx
var import_icons14, import_ui21, import_react_json_view, import_react26, import_react_i18next15, import_jsx_runtime37, JsonViewSection, Copied;
var init_json_view_section = __esm({
  "src/components/common/json-view-section/json-view-section.tsx"() {
    "use strict";
    import_icons14 = require("@medusajs/icons");
    import_ui21 = require("@medusajs/ui");
    import_react_json_view = __toESM(require("@uiw/react-json-view"));
    import_react26 = require("react");
    import_react_i18next15 = require("react-i18next");
    import_jsx_runtime37 = require("react/jsx-runtime");
    JsonViewSection = ({ data }) => {
      const { t: t4 } = (0, import_react_i18next15.useTranslation)();
      const numberOfKeys = Object.keys(data).length;
      return /* @__PURE__ */ (0, import_jsx_runtime37.jsxs)(import_ui21.Container, { className: "flex items-center justify-between px-6 py-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime37.jsxs)("div", { className: "flex items-center gap-x-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(import_ui21.Heading, { level: "h2", children: t4("json.header") }),
          /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(import_ui21.Badge, { size: "2xsmall", rounded: "full", children: t4("json.numberOfKeys", {
            count: numberOfKeys
          }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime37.jsxs)(import_ui21.Drawer, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(import_ui21.Drawer.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(
            import_ui21.IconButton,
            {
              size: "small",
              variant: "transparent",
              className: "text-ui-fg-muted hover:text-ui-fg-subtle",
              children: /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(import_icons14.ArrowUpRightOnBox, {})
            }
          ) }),
          /* @__PURE__ */ (0, import_jsx_runtime37.jsxs)(import_ui21.Drawer.Content, { className: "bg-ui-contrast-bg-base text-ui-code-fg-subtle !shadow-elevation-commandbar overflow-hidden border border-none max-md:inset-x-2 max-md:max-w-[calc(100%-16px)]", children: [
            /* @__PURE__ */ (0, import_jsx_runtime37.jsxs)("div", { className: "bg-ui-code-bg-base flex items-center justify-between px-6 py-4", children: [
              /* @__PURE__ */ (0, import_jsx_runtime37.jsxs)("div", { className: "flex items-center gap-x-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(import_ui21.Drawer.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(import_ui21.Heading, { className: "text-ui-contrast-fg-primary", children: /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(
                  import_react_i18next15.Trans,
                  {
                    i18nKey: "json.drawer.header",
                    count: numberOfKeys,
                    components: [
                      /* @__PURE__ */ (0, import_jsx_runtime37.jsx)("span", { className: "text-ui-fg-subtle" }, "count-span")
                    ]
                  }
                ) }) }),
                /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(import_ui21.Drawer.Description, { className: "sr-only", children: t4("json.drawer.description") })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime37.jsxs)("div", { className: "flex items-center gap-x-2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(import_ui21.Kbd, { className: "bg-ui-contrast-bg-subtle border-ui-contrast-border-base text-ui-contrast-fg-secondary", children: "esc" }),
                /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(import_ui21.Drawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(
                  import_ui21.IconButton,
                  {
                    size: "small",
                    variant: "transparent",
                    className: "text-ui-contrast-fg-secondary hover:text-ui-contrast-fg-primary hover:bg-ui-contrast-bg-base-hover active:bg-ui-contrast-bg-base-pressed focus-visible:bg-ui-contrast-bg-base-hover focus-visible:shadow-borders-interactive-with-active",
                    children: /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(import_icons14.XMarkMini, {})
                  }
                ) })
              ] })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(import_ui21.Drawer.Body, { className: "flex flex-1 flex-col overflow-hidden px-[5px] py-0 pb-[5px]", children: /* @__PURE__ */ (0, import_jsx_runtime37.jsx)("div", { className: "bg-ui-contrast-bg-subtle flex-1 overflow-auto rounded-b-[4px] rounded-t-lg p-3", children: /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(
              import_react26.Suspense,
              {
                fallback: /* @__PURE__ */ (0, import_jsx_runtime37.jsx)("div", { className: "flex size-full flex-col" }),
                children: /* @__PURE__ */ (0, import_jsx_runtime37.jsxs)(
                  import_react_json_view.default,
                  {
                    value: data,
                    displayDataTypes: false,
                    style: {
                      "--w-rjv-font-family": "Roboto Mono, monospace",
                      "--w-rjv-line-color": "var(--contrast-border-base)",
                      "--w-rjv-curlybraces-color": "var(--contrast-fg-secondary)",
                      "--w-rjv-brackets-color": "var(--contrast-fg-secondary)",
                      "--w-rjv-key-string": "var(--contrast-fg-primary)",
                      "--w-rjv-info-color": "var(--contrast-fg-secondary)",
                      "--w-rjv-type-string-color": "var(--tag-green-icon)",
                      "--w-rjv-quotes-string-color": "var(--tag-green-icon)",
                      "--w-rjv-type-boolean-color": "var(--tag-orange-icon)",
                      "--w-rjv-type-int-color": "var(--tag-orange-icon)",
                      "--w-rjv-type-float-color": "var(--tag-orange-icon)",
                      "--w-rjv-type-bigint-color": "var(--tag-orange-icon)",
                      "--w-rjv-key-number": "var(--contrast-fg-secondary)",
                      "--w-rjv-arrow-color": "var(--contrast-fg-secondary)",
                      "--w-rjv-copied-color": "var(--contrast-fg-secondary)",
                      "--w-rjv-copied-success-color": "var(--contrast-fg-primary)",
                      "--w-rjv-colon-color": "var(--contrast-fg-primary)",
                      "--w-rjv-ellipsis-color": "var(--contrast-fg-secondary)"
                    },
                    collapsed: 1,
                    children: [
                      /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(import_react_json_view.default.Quote, { render: () => /* @__PURE__ */ (0, import_jsx_runtime37.jsx)("span", {}) }),
                      /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(
                        import_react_json_view.default.Null,
                        {
                          render: () => /* @__PURE__ */ (0, import_jsx_runtime37.jsx)("span", { className: "text-ui-tag-red-icon", children: "null" })
                        }
                      ),
                      /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(
                        import_react_json_view.default.Undefined,
                        {
                          render: () => /* @__PURE__ */ (0, import_jsx_runtime37.jsx)("span", { className: "text-ui-tag-blue-icon", children: "undefined" })
                        }
                      ),
                      /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(
                        import_react_json_view.default.CountInfo,
                        {
                          render: (_props, { value }) => {
                            return /* @__PURE__ */ (0, import_jsx_runtime37.jsx)("span", { className: "text-ui-contrast-fg-secondary ml-2", children: t4("general.items", {
                              count: Object.keys(value).length
                            }) });
                          }
                        }
                      ),
                      /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(import_react_json_view.default.Arrow, { children: /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(import_icons14.TriangleDownMini, { className: "text-ui-contrast-fg-secondary -ml-[0.5px]" }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(import_react_json_view.default.Colon, { children: /* @__PURE__ */ (0, import_jsx_runtime37.jsx)("span", { className: "mr-1", children: ":" }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(
                        import_react_json_view.default.Copied,
                        {
                          render: ({ style }, { value }) => {
                            return /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(Copied, { style, value });
                          }
                        }
                      )
                    ]
                  }
                )
              }
            ) }) })
          ] })
        ] })
      ] });
    };
    Copied = ({ style, value }) => {
      const [copied, setCopied] = (0, import_react26.useState)(false);
      const handler = (e) => {
        e.stopPropagation();
        setCopied(true);
        if (typeof value === "string") {
          navigator.clipboard.writeText(value);
        } else {
          const json11 = JSON.stringify(value, null, 2);
          navigator.clipboard.writeText(json11);
        }
        setTimeout(() => {
          setCopied(false);
        }, 2e3);
      };
      const styl = { whiteSpace: "nowrap", width: "20px" };
      if (copied) {
        return /* @__PURE__ */ (0, import_jsx_runtime37.jsx)("span", { style: { ...style, ...styl }, children: /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(import_icons14.Check, { className: "text-ui-contrast-fg-primary" }) });
      }
      return /* @__PURE__ */ (0, import_jsx_runtime37.jsx)("span", { style: { ...style, ...styl }, onClick: handler, children: /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(import_icons14.SquareTwoStack, { className: "text-ui-contrast-fg-secondary" }) });
    };
  }
});

// src/components/common/json-view-section/index.ts
var init_json_view_section2 = __esm({
  "src/components/common/json-view-section/index.ts"() {
    "use strict";
    init_json_view_section();
  }
});

// src/components/common/metadata-section/metadata-section.tsx
var import_icons15, import_ui22, import_react_i18next16, import_react_router_dom14, import_jsx_runtime38, MetadataSection;
var init_metadata_section = __esm({
  "src/components/common/metadata-section/metadata-section.tsx"() {
    "use strict";
    import_icons15 = require("@medusajs/icons");
    import_ui22 = require("@medusajs/ui");
    import_react_i18next16 = require("react-i18next");
    import_react_router_dom14 = require("react-router-dom");
    import_jsx_runtime38 = require("react/jsx-runtime");
    MetadataSection = ({
      data,
      href = "metadata/edit"
    }) => {
      const { t: t4 } = (0, import_react_i18next16.useTranslation)();
      if (!data) {
        return null;
      }
      if (!("metadata" in data)) {
        return null;
      }
      const numberOfKeys = data.metadata ? Object.keys(data.metadata).length : 0;
      return /* @__PURE__ */ (0, import_jsx_runtime38.jsxs)(import_ui22.Container, { className: "flex items-center justify-between", children: [
        /* @__PURE__ */ (0, import_jsx_runtime38.jsxs)("div", { className: "flex items-center gap-x-3", children: [
          /* @__PURE__ */ (0, import_jsx_runtime38.jsx)(import_ui22.Heading, { level: "h2", children: t4("metadata.header") }),
          /* @__PURE__ */ (0, import_jsx_runtime38.jsx)(import_ui22.Badge, { size: "2xsmall", rounded: "full", children: t4("metadata.numberOfKeys", {
            count: numberOfKeys
          }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime38.jsx)(
          import_ui22.IconButton,
          {
            size: "small",
            variant: "transparent",
            className: "text-ui-fg-muted hover:text-ui-fg-subtle",
            asChild: true,
            children: /* @__PURE__ */ (0, import_jsx_runtime38.jsx)(import_react_router_dom14.Link, { to: href, children: /* @__PURE__ */ (0, import_jsx_runtime38.jsx)(import_icons15.ArrowUpRightOnBox, {}) })
          }
        )
      ] });
    };
  }
});

// src/components/common/metadata-section/index.ts
var init_metadata_section2 = __esm({
  "src/components/common/metadata-section/index.ts"() {
    "use strict";
    init_metadata_section();
  }
});

// src/components/layout/pages/single-column-page/single-column-page.tsx
var import_react_router_dom15, import_jsx_runtime39, import_react27, SingleColumnPage;
var init_single_column_page = __esm({
  "src/components/layout/pages/single-column-page/single-column-page.tsx"() {
    "use strict";
    import_react_router_dom15 = require("react-router-dom");
    init_json_view_section2();
    init_metadata_section2();
    import_jsx_runtime39 = require("react/jsx-runtime");
    import_react27 = require("react");
    SingleColumnPage = ({
      children,
      widgets,
      /**
       * Data of the page which is passed to Widgets, JSON view, and Metadata view.
       */
      data,
      /**
       * Whether the page should render an outlet for children routes. Defaults to true.
       */
      hasOutlet = true,
      /**
       * Whether to show JSON view of the data. Defaults to false.
       */
      showJSON,
      /**
       * Whether to show metadata view of the data. Defaults to false.
       */
      showMetadata
    }) => {
      const { before, after } = widgets;
      const widgetProps = { data };
      if (showJSON && !data) {
        if (process.env.NODE_ENV === "development") {
          console.warn(
            "`showJSON` is true but no data is provided. To display JSON, provide data prop."
          );
        }
        showJSON = false;
      }
      if (showMetadata && !data) {
        if (process.env.NODE_ENV === "development") {
          console.warn(
            "`showMetadata` is true but no data is provided. To display metadata, provide data prop."
          );
        }
        showMetadata = false;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime39.jsxs)("div", { className: "flex flex-col gap-y-3", children: [
        before.map((Component5, i) => {
          return /* @__PURE__ */ (0, import_react27.createElement)(Component5, { ...widgetProps, key: i });
        }),
        children,
        after.map((Component5, i) => {
          return /* @__PURE__ */ (0, import_react27.createElement)(Component5, { ...widgetProps, key: i });
        }),
        showMetadata && /* @__PURE__ */ (0, import_jsx_runtime39.jsx)(MetadataSection, { data }),
        showJSON && /* @__PURE__ */ (0, import_jsx_runtime39.jsx)(JsonViewSection, { data }),
        hasOutlet && /* @__PURE__ */ (0, import_jsx_runtime39.jsx)(import_react_router_dom15.Outlet, {})
      ] });
    };
  }
});

// src/components/layout/pages/single-column-page/index.ts
var init_single_column_page2 = __esm({
  "src/components/layout/pages/single-column-page/index.ts"() {
    "use strict";
    init_single_column_page();
  }
});

// src/components/layout/pages/two-column-page/two-column-page.tsx
var import_ui23, import_react28, import_react_router_dom16, import_jsx_runtime40, import_react29, Root5, Main, Sidebar, TwoColumnPage;
var init_two_column_page = __esm({
  "src/components/layout/pages/two-column-page/two-column-page.tsx"() {
    "use strict";
    import_ui23 = require("@medusajs/ui");
    import_react28 = require("react");
    import_react_router_dom16 = require("react-router-dom");
    init_json_view_section2();
    init_metadata_section2();
    import_jsx_runtime40 = require("react/jsx-runtime");
    import_react29 = require("react");
    Root5 = ({
      children,
      /**
       * Widgets to be rendered in the main content area and sidebar.
       */
      widgets,
      /**
       * Data to be passed to widgets, JSON view, and Metadata view.
       */
      data,
      /**
       * Whether to show JSON view of the data. Defaults to false.
       */
      showJSON = false,
      /**
       * Whether to show metadata view of the data. Defaults to false.
       */
      showMetadata = false,
      /**
       * Whether to render an outlet for children routes. Defaults to true.
       */
      hasOutlet = true
    }) => {
      const widgetProps = { data };
      const { before, after, sideBefore, sideAfter } = widgets;
      if (showJSON && !data) {
        if (process.env.NODE_ENV === "development") {
          console.warn(
            "`showJSON` is true but no data is provided. To display JSON, provide data prop."
          );
        }
        showJSON = false;
      }
      if (showMetadata && !data) {
        if (process.env.NODE_ENV === "development") {
          console.warn(
            "`showMetadata` is true but no data is provided. To display metadata, provide data prop."
          );
        }
        showMetadata = false;
      }
      const childrenArray = import_react28.Children.toArray(children);
      if (childrenArray.length !== 2) {
        throw new Error("TwoColumnPage expects exactly two children");
      }
      const [main, sidebar] = childrenArray;
      const showExtraData = showJSON || showMetadata;
      return /* @__PURE__ */ (0, import_jsx_runtime40.jsxs)("div", { className: "flex flex-col gap-y-3", children: [
        before.map((Component5, i) => {
          return /* @__PURE__ */ (0, import_react29.createElement)(Component5, { ...widgetProps, key: i });
        }),
        /* @__PURE__ */ (0, import_jsx_runtime40.jsxs)("div", { className: "flex flex-col gap-x-4 gap-y-3 xl:flex-row xl:items-start", children: [
          /* @__PURE__ */ (0, import_jsx_runtime40.jsxs)("div", { className: "flex w-full flex-col gap-y-3", children: [
            main,
            after.map((Component5, i) => {
              return /* @__PURE__ */ (0, import_react29.createElement)(Component5, { ...widgetProps, key: i });
            }),
            showExtraData && /* @__PURE__ */ (0, import_jsx_runtime40.jsxs)("div", { className: "hidden flex-col gap-y-3 xl:flex", children: [
              showMetadata && /* @__PURE__ */ (0, import_jsx_runtime40.jsx)(MetadataSection, { data }),
              showJSON && /* @__PURE__ */ (0, import_jsx_runtime40.jsx)(JsonViewSection, { data })
            ] })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime40.jsxs)("div", { className: "flex w-full max-w-[100%] flex-col gap-y-3 xl:mt-0 xl:max-w-[440px]", children: [
            sideBefore.map((Component5, i) => {
              return /* @__PURE__ */ (0, import_react29.createElement)(Component5, { ...widgetProps, key: i });
            }),
            sidebar,
            sideAfter.map((Component5, i) => {
              return /* @__PURE__ */ (0, import_react29.createElement)(Component5, { ...widgetProps, key: i });
            }),
            showExtraData && /* @__PURE__ */ (0, import_jsx_runtime40.jsxs)("div", { className: "flex flex-col gap-y-3 xl:hidden", children: [
              showMetadata && /* @__PURE__ */ (0, import_jsx_runtime40.jsx)(MetadataSection, { data }),
              showJSON && /* @__PURE__ */ (0, import_jsx_runtime40.jsx)(JsonViewSection, { data })
            ] })
          ] })
        ] }),
        hasOutlet && /* @__PURE__ */ (0, import_jsx_runtime40.jsx)(import_react_router_dom16.Outlet, {})
      ] });
    };
    Main = ({
      children,
      className,
      ...props
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime40.jsx)("div", { className: (0, import_ui23.clx)("flex w-full flex-col gap-y-3", className), ...props, children });
    };
    Sidebar = ({
      children,
      className,
      ...props
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime40.jsx)(
        "div",
        {
          className: (0, import_ui23.clx)(
            "flex w-full max-w-[100%] flex-col gap-y-3 xl:mt-0 xl:max-w-[440px]",
            className
          ),
          ...props,
          children
        }
      );
    };
    TwoColumnPage = Object.assign(Root5, { Main, Sidebar });
  }
});

// src/components/layout/pages/two-column-page/index.ts
var init_two_column_page2 = __esm({
  "src/components/layout/pages/two-column-page/index.ts"() {
    "use strict";
    init_two_column_page();
  }
});

// src/components/layout/pages/index.ts
var init_pages = __esm({
  "src/components/layout/pages/index.ts"() {
    "use strict";
    init_single_column_page2();
    init_two_column_page2();
  }
});

// src/components/common/empty-table-content/empty-table-content.tsx
var import_icons16, import_ui24, import_react_i18next17, import_react_router_dom17, import_jsx_runtime41, NoResults, DefaultButton, TransparentIconLeftButton, NoRecords;
var init_empty_table_content = __esm({
  "src/components/common/empty-table-content/empty-table-content.tsx"() {
    "use strict";
    import_icons16 = require("@medusajs/icons");
    import_ui24 = require("@medusajs/ui");
    import_react_i18next17 = require("react-i18next");
    import_react_router_dom17 = require("react-router-dom");
    import_jsx_runtime41 = require("react/jsx-runtime");
    NoResults = ({ title, message, className }) => {
      const { t: t4 } = (0, import_react_i18next17.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(
        "div",
        {
          className: (0, import_ui24.clx)(
            "flex h-[400px] w-full items-center justify-center",
            className
          ),
          children: /* @__PURE__ */ (0, import_jsx_runtime41.jsxs)("div", { className: "flex flex-col items-center gap-y-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(import_icons16.MagnifyingGlass, {}),
            /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(import_ui24.Text, { size: "small", leading: "compact", weight: "plus", children: title ?? t4("general.noResultsTitle") }),
            /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(import_ui24.Text, { size: "small", className: "text-ui-fg-subtle", children: message ?? t4("general.noResultsMessage") })
          ] })
        }
      );
    };
    DefaultButton = ({ action }) => action && /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(import_react_router_dom17.Link, { to: action.to, children: /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(import_ui24.Button, { variant: "secondary", size: "small", children: action.label }) });
    TransparentIconLeftButton = ({ action }) => action && /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(import_react_router_dom17.Link, { to: action.to, children: /* @__PURE__ */ (0, import_jsx_runtime41.jsxs)(import_ui24.Button, { variant: "transparent", className: "text-ui-fg-interactive", children: [
      /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(import_icons16.PlusMini, {}),
      " ",
      action.label
    ] }) });
    NoRecords = ({
      title,
      message,
      action,
      className,
      buttonVariant = "default"
    }) => {
      const { t: t4 } = (0, import_react_i18next17.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime41.jsxs)(
        "div",
        {
          className: (0, import_ui24.clx)(
            "flex h-[400px] w-full flex-col items-center justify-center gap-y-4",
            className
          ),
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime41.jsxs)("div", { className: "flex flex-col items-center gap-y-3", children: [
              /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(import_icons16.ExclamationCircle, { className: "text-ui-fg-subtle" }),
              /* @__PURE__ */ (0, import_jsx_runtime41.jsxs)("div", { className: "flex flex-col items-center gap-y-1", children: [
                /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(import_ui24.Text, { size: "small", leading: "compact", weight: "plus", children: title ?? t4("general.noRecordsTitle") }),
                /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(import_ui24.Text, { size: "small", className: "text-ui-fg-muted", children: message ?? t4("general.noRecordsMessage") })
              ] })
            ] }),
            buttonVariant === "default" && /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(DefaultButton, { action }),
            buttonVariant === "transparentIconLeft" && /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(TransparentIconLeftButton, { action })
          ]
        }
      );
    };
  }
});

// src/components/common/empty-table-content/index.ts
var init_empty_table_content2 = __esm({
  "src/components/common/empty-table-content/index.ts"() {
    "use strict";
    init_empty_table_content();
  }
});

// ../../../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs
function clamp(start, value, end) {
  return max(start, min(value, end));
}
function evaluate(value, param) {
  return typeof value === "function" ? value(param) : value;
}
function getSide(placement) {
  return placement.split("-")[0];
}
function getAlignment(placement) {
  return placement.split("-")[1];
}
function getOppositeAxis(axis) {
  return axis === "x" ? "y" : "x";
}
function getAxisLength(axis) {
  return axis === "y" ? "height" : "width";
}
function getSideAxis(placement) {
  return ["top", "bottom"].includes(getSide(placement)) ? "y" : "x";
}
function getAlignmentAxis(placement) {
  return getOppositeAxis(getSideAxis(placement));
}
function getAlignmentSides(placement, rects, rtl) {
  if (rtl === void 0) {
    rtl = false;
  }
  const alignment = getAlignment(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const length = getAxisLength(alignmentAxis);
  let mainAlignmentSide = alignmentAxis === "x" ? alignment === (rtl ? "end" : "start") ? "right" : "left" : alignment === "start" ? "bottom" : "top";
  if (rects.reference[length] > rects.floating[length]) {
    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);
  }
  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];
}
function getExpandedPlacements(placement) {
  const oppositePlacement = getOppositePlacement(placement);
  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
}
function getOppositeAlignmentPlacement(placement) {
  return placement.replace(/start|end/g, (alignment) => oppositeAlignmentMap[alignment]);
}
function getSideList(side, isStart, rtl) {
  const lr = ["left", "right"];
  const rl = ["right", "left"];
  const tb = ["top", "bottom"];
  const bt = ["bottom", "top"];
  switch (side) {
    case "top":
    case "bottom":
      if (rtl) return isStart ? rl : lr;
      return isStart ? lr : rl;
    case "left":
    case "right":
      return isStart ? tb : bt;
    default:
      return [];
  }
}
function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {
  const alignment = getAlignment(placement);
  let list = getSideList(getSide(placement), direction === "start", rtl);
  if (alignment) {
    list = list.map((side) => side + "-" + alignment);
    if (flipAlignment) {
      list = list.concat(list.map(getOppositeAlignmentPlacement));
    }
  }
  return list;
}
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, (side) => oppositeSideMap[side]);
}
function expandPaddingObject(padding) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...padding
  };
}
function getPaddingObject(padding) {
  return typeof padding !== "number" ? expandPaddingObject(padding) : {
    top: padding,
    right: padding,
    bottom: padding,
    left: padding
  };
}
function rectToClientRect(rect) {
  const {
    x,
    y,
    width,
    height
  } = rect;
  return {
    width,
    height,
    top: y,
    left: x,
    right: x + width,
    bottom: y + height,
    x,
    y
  };
}
var sides, min, max, round, floor, createCoords, oppositeSideMap, oppositeAlignmentMap;
var init_floating_ui_utils = __esm({
  "../../../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs"() {
    "use strict";
    sides = ["top", "right", "bottom", "left"];
    min = Math.min;
    max = Math.max;
    round = Math.round;
    floor = Math.floor;
    createCoords = (v) => ({
      x: v,
      y: v
    });
    oppositeSideMap = {
      left: "right",
      right: "left",
      bottom: "top",
      top: "bottom"
    };
    oppositeAlignmentMap = {
      start: "end",
      end: "start"
    };
  }
});

// ../../../node_modules/@floating-ui/core/dist/floating-ui.core.mjs
function computeCoordsFromPlacement(_ref, placement, rtl) {
  let {
    reference,
    floating
  } = _ref;
  const sideAxis = getSideAxis(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const alignLength = getAxisLength(alignmentAxis);
  const side = getSide(placement);
  const isVertical = sideAxis === "y";
  const commonX = reference.x + reference.width / 2 - floating.width / 2;
  const commonY = reference.y + reference.height / 2 - floating.height / 2;
  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;
  let coords;
  switch (side) {
    case "top":
      coords = {
        x: commonX,
        y: reference.y - floating.height
      };
      break;
    case "bottom":
      coords = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;
    case "right":
      coords = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;
    case "left":
      coords = {
        x: reference.x - floating.width,
        y: commonY
      };
      break;
    default:
      coords = {
        x: reference.x,
        y: reference.y
      };
  }
  switch (getAlignment(placement)) {
    case "start":
      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
      break;
    case "end":
      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
      break;
  }
  return coords;
}
async function detectOverflow(state, options) {
  var _await$platform$isEle;
  if (options === void 0) {
    options = {};
  }
  const {
    x,
    y,
    platform: platform2,
    rects,
    elements,
    strategy
  } = state;
  const {
    boundary = "clippingAncestors",
    rootBoundary = "viewport",
    elementContext = "floating",
    altBoundary = false,
    padding = 0
  } = evaluate(options, state);
  const paddingObject = getPaddingObject(padding);
  const altContext = elementContext === "floating" ? "reference" : "floating";
  const element = elements[altBoundary ? altContext : elementContext];
  const clippingClientRect = rectToClientRect(await platform2.getClippingRect({
    element: ((_await$platform$isEle = await (platform2.isElement == null ? void 0 : platform2.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || await (platform2.getDocumentElement == null ? void 0 : platform2.getDocumentElement(elements.floating)),
    boundary,
    rootBoundary,
    strategy
  }));
  const rect = elementContext === "floating" ? {
    x,
    y,
    width: rects.floating.width,
    height: rects.floating.height
  } : rects.reference;
  const offsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(elements.floating));
  const offsetScale = await (platform2.isElement == null ? void 0 : platform2.isElement(offsetParent)) ? await (platform2.getScale == null ? void 0 : platform2.getScale(offsetParent)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  };
  const elementClientRect = rectToClientRect(platform2.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform2.convertOffsetParentRelativeRectToViewportRelativeRect({
    elements,
    rect,
    offsetParent,
    strategy
  }) : rect);
  return {
    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,
    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,
    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,
    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x
  };
}
function getSideOffsets(overflow, rect) {
  return {
    top: overflow.top - rect.height,
    right: overflow.right - rect.width,
    bottom: overflow.bottom - rect.height,
    left: overflow.left - rect.width
  };
}
function isAnySideFullyClipped(overflow) {
  return sides.some((side) => overflow[side] >= 0);
}
async function convertValueToCoords(state, options) {
  const {
    placement,
    platform: platform2,
    elements
  } = state;
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
  const side = getSide(placement);
  const alignment = getAlignment(placement);
  const isVertical = getSideAxis(placement) === "y";
  const mainAxisMulti = ["left", "top"].includes(side) ? -1 : 1;
  const crossAxisMulti = rtl && isVertical ? -1 : 1;
  const rawValue = evaluate(options, state);
  let {
    mainAxis,
    crossAxis,
    alignmentAxis
  } = typeof rawValue === "number" ? {
    mainAxis: rawValue,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: rawValue.mainAxis || 0,
    crossAxis: rawValue.crossAxis || 0,
    alignmentAxis: rawValue.alignmentAxis
  };
  if (alignment && typeof alignmentAxis === "number") {
    crossAxis = alignment === "end" ? alignmentAxis * -1 : alignmentAxis;
  }
  return isVertical ? {
    x: crossAxis * crossAxisMulti,
    y: mainAxis * mainAxisMulti
  } : {
    x: mainAxis * mainAxisMulti,
    y: crossAxis * crossAxisMulti
  };
}
var computePosition, arrow, flip, hide, offset, shift, limitShift, size;
var init_floating_ui_core = __esm({
  "../../../node_modules/@floating-ui/core/dist/floating-ui.core.mjs"() {
    "use strict";
    init_floating_ui_utils();
    init_floating_ui_utils();
    computePosition = async (reference, floating, config) => {
      const {
        placement = "bottom",
        strategy = "absolute",
        middleware = [],
        platform: platform2
      } = config;
      const validMiddleware = middleware.filter(Boolean);
      const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(floating));
      let rects = await platform2.getElementRects({
        reference,
        floating,
        strategy
      });
      let {
        x,
        y
      } = computeCoordsFromPlacement(rects, placement, rtl);
      let statefulPlacement = placement;
      let middlewareData = {};
      let resetCount = 0;
      for (let i = 0; i < validMiddleware.length; i++) {
        const {
          name,
          fn
        } = validMiddleware[i];
        const {
          x: nextX,
          y: nextY,
          data,
          reset
        } = await fn({
          x,
          y,
          initialPlacement: placement,
          placement: statefulPlacement,
          strategy,
          middlewareData,
          rects,
          platform: platform2,
          elements: {
            reference,
            floating
          }
        });
        x = nextX != null ? nextX : x;
        y = nextY != null ? nextY : y;
        middlewareData = {
          ...middlewareData,
          [name]: {
            ...middlewareData[name],
            ...data
          }
        };
        if (reset && resetCount <= 50) {
          resetCount++;
          if (typeof reset === "object") {
            if (reset.placement) {
              statefulPlacement = reset.placement;
            }
            if (reset.rects) {
              rects = reset.rects === true ? await platform2.getElementRects({
                reference,
                floating,
                strategy
              }) : reset.rects;
            }
            ({
              x,
              y
            } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));
          }
          i = -1;
        }
      }
      return {
        x,
        y,
        placement: statefulPlacement,
        strategy,
        middlewareData
      };
    };
    arrow = (options) => ({
      name: "arrow",
      options,
      async fn(state) {
        const {
          x,
          y,
          placement,
          rects,
          platform: platform2,
          elements,
          middlewareData
        } = state;
        const {
          element,
          padding = 0
        } = evaluate(options, state) || {};
        if (element == null) {
          return {};
        }
        const paddingObject = getPaddingObject(padding);
        const coords = {
          x,
          y
        };
        const axis = getAlignmentAxis(placement);
        const length = getAxisLength(axis);
        const arrowDimensions = await platform2.getDimensions(element);
        const isYAxis = axis === "y";
        const minProp = isYAxis ? "top" : "left";
        const maxProp = isYAxis ? "bottom" : "right";
        const clientProp = isYAxis ? "clientHeight" : "clientWidth";
        const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];
        const startDiff = coords[axis] - rects.reference[axis];
        const arrowOffsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(element));
        let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;
        if (!clientSize || !await (platform2.isElement == null ? void 0 : platform2.isElement(arrowOffsetParent))) {
          clientSize = elements.floating[clientProp] || rects.floating[length];
        }
        const centerToReference = endDiff / 2 - startDiff / 2;
        const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;
        const minPadding = min(paddingObject[minProp], largestPossiblePadding);
        const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);
        const min$1 = minPadding;
        const max2 = clientSize - arrowDimensions[length] - maxPadding;
        const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;
        const offset4 = clamp(min$1, center, max2);
        const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset4 && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;
        const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max2 : 0;
        return {
          [axis]: coords[axis] + alignmentOffset,
          data: {
            [axis]: offset4,
            centerOffset: center - offset4 - alignmentOffset,
            ...shouldAddOffset && {
              alignmentOffset
            }
          },
          reset: shouldAddOffset
        };
      }
    });
    flip = function(options) {
      if (options === void 0) {
        options = {};
      }
      return {
        name: "flip",
        options,
        async fn(state) {
          var _middlewareData$arrow, _middlewareData$flip;
          const {
            placement,
            middlewareData,
            rects,
            initialPlacement,
            platform: platform2,
            elements
          } = state;
          const {
            mainAxis: checkMainAxis = true,
            crossAxis: checkCrossAxis = true,
            fallbackPlacements: specifiedFallbackPlacements,
            fallbackStrategy = "bestFit",
            fallbackAxisSideDirection = "none",
            flipAlignment = true,
            ...detectOverflowOptions
          } = evaluate(options, state);
          if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {
            return {};
          }
          const side = getSide(placement);
          const initialSideAxis = getSideAxis(initialPlacement);
          const isBasePlacement = getSide(initialPlacement) === initialPlacement;
          const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
          const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));
          const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== "none";
          if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {
            fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));
          }
          const placements2 = [initialPlacement, ...fallbackPlacements];
          const overflow = await detectOverflow(state, detectOverflowOptions);
          const overflows = [];
          let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
          if (checkMainAxis) {
            overflows.push(overflow[side]);
          }
          if (checkCrossAxis) {
            const sides2 = getAlignmentSides(placement, rects, rtl);
            overflows.push(overflow[sides2[0]], overflow[sides2[1]]);
          }
          overflowsData = [...overflowsData, {
            placement,
            overflows
          }];
          if (!overflows.every((side2) => side2 <= 0)) {
            var _middlewareData$flip2, _overflowsData$filter;
            const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;
            const nextPlacement = placements2[nextIndex];
            if (nextPlacement) {
              return {
                data: {
                  index: nextIndex,
                  overflows: overflowsData
                },
                reset: {
                  placement: nextPlacement
                }
              };
            }
            let resetPlacement = (_overflowsData$filter = overflowsData.filter((d) => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;
            if (!resetPlacement) {
              switch (fallbackStrategy) {
                case "bestFit": {
                  var _overflowsData$filter2;
                  const placement2 = (_overflowsData$filter2 = overflowsData.filter((d) => {
                    if (hasFallbackAxisSideDirection) {
                      const currentSideAxis = getSideAxis(d.placement);
                      return currentSideAxis === initialSideAxis || // Create a bias to the `y` side axis due to horizontal
                      // reading directions favoring greater width.
                      currentSideAxis === "y";
                    }
                    return true;
                  }).map((d) => [d.placement, d.overflows.filter((overflow2) => overflow2 > 0).reduce((acc, overflow2) => acc + overflow2, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];
                  if (placement2) {
                    resetPlacement = placement2;
                  }
                  break;
                }
                case "initialPlacement":
                  resetPlacement = initialPlacement;
                  break;
              }
            }
            if (placement !== resetPlacement) {
              return {
                reset: {
                  placement: resetPlacement
                }
              };
            }
          }
          return {};
        }
      };
    };
    hide = function(options) {
      if (options === void 0) {
        options = {};
      }
      return {
        name: "hide",
        options,
        async fn(state) {
          const {
            rects
          } = state;
          const {
            strategy = "referenceHidden",
            ...detectOverflowOptions
          } = evaluate(options, state);
          switch (strategy) {
            case "referenceHidden": {
              const overflow = await detectOverflow(state, {
                ...detectOverflowOptions,
                elementContext: "reference"
              });
              const offsets = getSideOffsets(overflow, rects.reference);
              return {
                data: {
                  referenceHiddenOffsets: offsets,
                  referenceHidden: isAnySideFullyClipped(offsets)
                }
              };
            }
            case "escaped": {
              const overflow = await detectOverflow(state, {
                ...detectOverflowOptions,
                altBoundary: true
              });
              const offsets = getSideOffsets(overflow, rects.floating);
              return {
                data: {
                  escapedOffsets: offsets,
                  escaped: isAnySideFullyClipped(offsets)
                }
              };
            }
            default: {
              return {};
            }
          }
        }
      };
    };
    offset = function(options) {
      if (options === void 0) {
        options = 0;
      }
      return {
        name: "offset",
        options,
        async fn(state) {
          var _middlewareData$offse, _middlewareData$arrow;
          const {
            x,
            y,
            placement,
            middlewareData
          } = state;
          const diffCoords = await convertValueToCoords(state, options);
          if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {
            return {};
          }
          return {
            x: x + diffCoords.x,
            y: y + diffCoords.y,
            data: {
              ...diffCoords,
              placement
            }
          };
        }
      };
    };
    shift = function(options) {
      if (options === void 0) {
        options = {};
      }
      return {
        name: "shift",
        options,
        async fn(state) {
          const {
            x,
            y,
            placement
          } = state;
          const {
            mainAxis: checkMainAxis = true,
            crossAxis: checkCrossAxis = false,
            limiter = {
              fn: (_ref) => {
                let {
                  x: x2,
                  y: y2
                } = _ref;
                return {
                  x: x2,
                  y: y2
                };
              }
            },
            ...detectOverflowOptions
          } = evaluate(options, state);
          const coords = {
            x,
            y
          };
          const overflow = await detectOverflow(state, detectOverflowOptions);
          const crossAxis = getSideAxis(getSide(placement));
          const mainAxis = getOppositeAxis(crossAxis);
          let mainAxisCoord = coords[mainAxis];
          let crossAxisCoord = coords[crossAxis];
          if (checkMainAxis) {
            const minSide = mainAxis === "y" ? "top" : "left";
            const maxSide = mainAxis === "y" ? "bottom" : "right";
            const min2 = mainAxisCoord + overflow[minSide];
            const max2 = mainAxisCoord - overflow[maxSide];
            mainAxisCoord = clamp(min2, mainAxisCoord, max2);
          }
          if (checkCrossAxis) {
            const minSide = crossAxis === "y" ? "top" : "left";
            const maxSide = crossAxis === "y" ? "bottom" : "right";
            const min2 = crossAxisCoord + overflow[minSide];
            const max2 = crossAxisCoord - overflow[maxSide];
            crossAxisCoord = clamp(min2, crossAxisCoord, max2);
          }
          const limitedCoords = limiter.fn({
            ...state,
            [mainAxis]: mainAxisCoord,
            [crossAxis]: crossAxisCoord
          });
          return {
            ...limitedCoords,
            data: {
              x: limitedCoords.x - x,
              y: limitedCoords.y - y,
              enabled: {
                [mainAxis]: checkMainAxis,
                [crossAxis]: checkCrossAxis
              }
            }
          };
        }
      };
    };
    limitShift = function(options) {
      if (options === void 0) {
        options = {};
      }
      return {
        options,
        fn(state) {
          const {
            x,
            y,
            placement,
            rects,
            middlewareData
          } = state;
          const {
            offset: offset4 = 0,
            mainAxis: checkMainAxis = true,
            crossAxis: checkCrossAxis = true
          } = evaluate(options, state);
          const coords = {
            x,
            y
          };
          const crossAxis = getSideAxis(placement);
          const mainAxis = getOppositeAxis(crossAxis);
          let mainAxisCoord = coords[mainAxis];
          let crossAxisCoord = coords[crossAxis];
          const rawOffset = evaluate(offset4, state);
          const computedOffset = typeof rawOffset === "number" ? {
            mainAxis: rawOffset,
            crossAxis: 0
          } : {
            mainAxis: 0,
            crossAxis: 0,
            ...rawOffset
          };
          if (checkMainAxis) {
            const len = mainAxis === "y" ? "height" : "width";
            const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;
            const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;
            if (mainAxisCoord < limitMin) {
              mainAxisCoord = limitMin;
            } else if (mainAxisCoord > limitMax) {
              mainAxisCoord = limitMax;
            }
          }
          if (checkCrossAxis) {
            var _middlewareData$offse, _middlewareData$offse2;
            const len = mainAxis === "y" ? "width" : "height";
            const isOriginSide = ["top", "left"].includes(getSide(placement));
            const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);
            const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);
            if (crossAxisCoord < limitMin) {
              crossAxisCoord = limitMin;
            } else if (crossAxisCoord > limitMax) {
              crossAxisCoord = limitMax;
            }
          }
          return {
            [mainAxis]: mainAxisCoord,
            [crossAxis]: crossAxisCoord
          };
        }
      };
    };
    size = function(options) {
      if (options === void 0) {
        options = {};
      }
      return {
        name: "size",
        options,
        async fn(state) {
          var _state$middlewareData, _state$middlewareData2;
          const {
            placement,
            rects,
            platform: platform2,
            elements
          } = state;
          const {
            apply = () => {
            },
            ...detectOverflowOptions
          } = evaluate(options, state);
          const overflow = await detectOverflow(state, detectOverflowOptions);
          const side = getSide(placement);
          const alignment = getAlignment(placement);
          const isYAxis = getSideAxis(placement) === "y";
          const {
            width,
            height
          } = rects.floating;
          let heightSide;
          let widthSide;
          if (side === "top" || side === "bottom") {
            heightSide = side;
            widthSide = alignment === (await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating)) ? "start" : "end") ? "left" : "right";
          } else {
            widthSide = side;
            heightSide = alignment === "end" ? "top" : "bottom";
          }
          const maximumClippingHeight = height - overflow.top - overflow.bottom;
          const maximumClippingWidth = width - overflow.left - overflow.right;
          const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);
          const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);
          const noShift = !state.middlewareData.shift;
          let availableHeight = overflowAvailableHeight;
          let availableWidth = overflowAvailableWidth;
          if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {
            availableWidth = maximumClippingWidth;
          }
          if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {
            availableHeight = maximumClippingHeight;
          }
          if (noShift && !alignment) {
            const xMin = max(overflow.left, 0);
            const xMax = max(overflow.right, 0);
            const yMin = max(overflow.top, 0);
            const yMax = max(overflow.bottom, 0);
            if (isYAxis) {
              availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));
            } else {
              availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));
            }
          }
          await apply({
            ...state,
            availableWidth,
            availableHeight
          });
          const nextDimensions = await platform2.getDimensions(elements.floating);
          if (width !== nextDimensions.width || height !== nextDimensions.height) {
            return {
              reset: {
                rects: true
              }
            };
          }
          return {};
        }
      };
    };
  }
});

// ../../../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs
function hasWindow() {
  return typeof window !== "undefined";
}
function getNodeName(node) {
  if (isNode(node)) {
    return (node.nodeName || "").toLowerCase();
  }
  return "#document";
}
function getWindow(node) {
  var _node$ownerDocument;
  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}
function getDocumentElement(node) {
  var _ref;
  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;
}
function isNode(value) {
  if (!hasWindow()) {
    return false;
  }
  return value instanceof Node || value instanceof getWindow(value).Node;
}
function isElement(value) {
  if (!hasWindow()) {
    return false;
  }
  return value instanceof Element || value instanceof getWindow(value).Element;
}
function isHTMLElement(value) {
  if (!hasWindow()) {
    return false;
  }
  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;
}
function isShadowRoot(value) {
  if (!hasWindow() || typeof ShadowRoot === "undefined") {
    return false;
  }
  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;
}
function isOverflowElement(element) {
  const {
    overflow,
    overflowX,
    overflowY,
    display
  } = getComputedStyle2(element);
  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !["inline", "contents"].includes(display);
}
function isTableElement(element) {
  return ["table", "td", "th"].includes(getNodeName(element));
}
function isTopLayer(element) {
  return [":popover-open", ":modal"].some((selector) => {
    try {
      return element.matches(selector);
    } catch (e) {
      return false;
    }
  });
}
function isContainingBlock(elementOrCss) {
  const webkit = isWebKit();
  const css = isElement(elementOrCss) ? getComputedStyle2(elementOrCss) : elementOrCss;
  return css.transform !== "none" || css.perspective !== "none" || (css.containerType ? css.containerType !== "normal" : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== "none" : false) || !webkit && (css.filter ? css.filter !== "none" : false) || ["transform", "perspective", "filter"].some((value) => (css.willChange || "").includes(value)) || ["paint", "layout", "strict", "content"].some((value) => (css.contain || "").includes(value));
}
function getContainingBlock(element) {
  let currentNode = getParentNode(element);
  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {
    if (isContainingBlock(currentNode)) {
      return currentNode;
    } else if (isTopLayer(currentNode)) {
      return null;
    }
    currentNode = getParentNode(currentNode);
  }
  return null;
}
function isWebKit() {
  if (typeof CSS === "undefined" || !CSS.supports) return false;
  return CSS.supports("-webkit-backdrop-filter", "none");
}
function isLastTraversableNode(node) {
  return ["html", "body", "#document"].includes(getNodeName(node));
}
function getComputedStyle2(element) {
  return getWindow(element).getComputedStyle(element);
}
function getNodeScroll(element) {
  if (isElement(element)) {
    return {
      scrollLeft: element.scrollLeft,
      scrollTop: element.scrollTop
    };
  }
  return {
    scrollLeft: element.scrollX,
    scrollTop: element.scrollY
  };
}
function getParentNode(node) {
  if (getNodeName(node) === "html") {
    return node;
  }
  const result = (
    // Step into the shadow DOM of the parent of a slotted node.
    node.assignedSlot || // DOM Element detected.
    node.parentNode || // ShadowRoot detected.
    isShadowRoot(node) && node.host || // Fallback.
    getDocumentElement(node)
  );
  return isShadowRoot(result) ? result.host : result;
}
function getNearestOverflowAncestor(node) {
  const parentNode = getParentNode(node);
  if (isLastTraversableNode(parentNode)) {
    return node.ownerDocument ? node.ownerDocument.body : node.body;
  }
  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {
    return parentNode;
  }
  return getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node, list, traverseIframes) {
  var _node$ownerDocument2;
  if (list === void 0) {
    list = [];
  }
  if (traverseIframes === void 0) {
    traverseIframes = true;
  }
  const scrollableAncestor = getNearestOverflowAncestor(node);
  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);
  const win = getWindow(scrollableAncestor);
  if (isBody) {
    const frameElement = getFrameElement(win);
    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);
  }
  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));
}
function getFrameElement(win) {
  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;
}
var init_floating_ui_utils_dom = __esm({
  "../../../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs"() {
    "use strict";
  }
});

// ../../../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs
function getCssDimensions(element) {
  const css = getComputedStyle2(element);
  let width = parseFloat(css.width) || 0;
  let height = parseFloat(css.height) || 0;
  const hasOffset = isHTMLElement(element);
  const offsetWidth = hasOffset ? element.offsetWidth : width;
  const offsetHeight = hasOffset ? element.offsetHeight : height;
  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;
  if (shouldFallback) {
    width = offsetWidth;
    height = offsetHeight;
  }
  return {
    width,
    height,
    $: shouldFallback
  };
}
function unwrapElement(element) {
  return !isElement(element) ? element.contextElement : element;
}
function getScale(element) {
  const domElement = unwrapElement(element);
  if (!isHTMLElement(domElement)) {
    return createCoords(1);
  }
  const rect = domElement.getBoundingClientRect();
  const {
    width,
    height,
    $
  } = getCssDimensions(domElement);
  let x = ($ ? round(rect.width) : rect.width) / width;
  let y = ($ ? round(rect.height) : rect.height) / height;
  if (!x || !Number.isFinite(x)) {
    x = 1;
  }
  if (!y || !Number.isFinite(y)) {
    y = 1;
  }
  return {
    x,
    y
  };
}
function getVisualOffsets(element) {
  const win = getWindow(element);
  if (!isWebKit() || !win.visualViewport) {
    return noOffsets;
  }
  return {
    x: win.visualViewport.offsetLeft,
    y: win.visualViewport.offsetTop
  };
}
function shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {
    return false;
  }
  return isFixed;
}
function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  const clientRect = element.getBoundingClientRect();
  const domElement = unwrapElement(element);
  let scale = createCoords(1);
  if (includeScale) {
    if (offsetParent) {
      if (isElement(offsetParent)) {
        scale = getScale(offsetParent);
      }
    } else {
      scale = getScale(element);
    }
  }
  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);
  let x = (clientRect.left + visualOffsets.x) / scale.x;
  let y = (clientRect.top + visualOffsets.y) / scale.y;
  let width = clientRect.width / scale.x;
  let height = clientRect.height / scale.y;
  if (domElement) {
    const win = getWindow(domElement);
    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;
    let currentWin = win;
    let currentIFrame = getFrameElement(currentWin);
    while (currentIFrame && offsetParent && offsetWin !== currentWin) {
      const iframeScale = getScale(currentIFrame);
      const iframeRect = currentIFrame.getBoundingClientRect();
      const css = getComputedStyle2(currentIFrame);
      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;
      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;
      x *= iframeScale.x;
      y *= iframeScale.y;
      width *= iframeScale.x;
      height *= iframeScale.y;
      x += left;
      y += top;
      currentWin = getWindow(currentIFrame);
      currentIFrame = getFrameElement(currentWin);
    }
  }
  return rectToClientRect({
    width,
    height,
    x,
    y
  });
}
function getWindowScrollBarX(element, rect) {
  const leftScroll = getNodeScroll(element).scrollLeft;
  if (!rect) {
    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;
  }
  return rect.left + leftScroll;
}
function getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {
  if (ignoreScrollbarX === void 0) {
    ignoreScrollbarX = false;
  }
  const htmlRect = documentElement.getBoundingClientRect();
  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 : (
    // RTL <body> scrollbar.
    getWindowScrollBarX(documentElement, htmlRect)
  ));
  const y = htmlRect.top + scroll.scrollTop;
  return {
    x,
    y
  };
}
function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
  let {
    elements,
    rect,
    offsetParent,
    strategy
  } = _ref;
  const isFixed = strategy === "fixed";
  const documentElement = getDocumentElement(offsetParent);
  const topLayer = elements ? isTopLayer(elements.floating) : false;
  if (offsetParent === documentElement || topLayer && isFixed) {
    return rect;
  }
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  let scale = createCoords(1);
  const offsets = createCoords(0);
  const isOffsetParentAnElement = isHTMLElement(offsetParent);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      const offsetRect = getBoundingClientRect(offsetParent);
      scale = getScale(offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    }
  }
  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);
  return {
    width: rect.width * scale.x,
    height: rect.height * scale.y,
    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,
    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y
  };
}
function getClientRects(element) {
  return Array.from(element.getClientRects());
}
function getDocumentRect(element) {
  const html = getDocumentElement(element);
  const scroll = getNodeScroll(element);
  const body = element.ownerDocument.body;
  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);
  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);
  let x = -scroll.scrollLeft + getWindowScrollBarX(element);
  const y = -scroll.scrollTop;
  if (getComputedStyle2(body).direction === "rtl") {
    x += max(html.clientWidth, body.clientWidth) - width;
  }
  return {
    width,
    height,
    x,
    y
  };
}
function getViewportRect(element, strategy) {
  const win = getWindow(element);
  const html = getDocumentElement(element);
  const visualViewport = win.visualViewport;
  let width = html.clientWidth;
  let height = html.clientHeight;
  let x = 0;
  let y = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    const visualViewportBased = isWebKit();
    if (!visualViewportBased || visualViewportBased && strategy === "fixed") {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x,
    y
  };
}
function getInnerBoundingClientRect(element, strategy) {
  const clientRect = getBoundingClientRect(element, true, strategy === "fixed");
  const top = clientRect.top + element.clientTop;
  const left = clientRect.left + element.clientLeft;
  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);
  const width = element.clientWidth * scale.x;
  const height = element.clientHeight * scale.y;
  const x = left * scale.x;
  const y = top * scale.y;
  return {
    width,
    height,
    x,
    y
  };
}
function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {
  let rect;
  if (clippingAncestor === "viewport") {
    rect = getViewportRect(element, strategy);
  } else if (clippingAncestor === "document") {
    rect = getDocumentRect(getDocumentElement(element));
  } else if (isElement(clippingAncestor)) {
    rect = getInnerBoundingClientRect(clippingAncestor, strategy);
  } else {
    const visualOffsets = getVisualOffsets(element);
    rect = {
      x: clippingAncestor.x - visualOffsets.x,
      y: clippingAncestor.y - visualOffsets.y,
      width: clippingAncestor.width,
      height: clippingAncestor.height
    };
  }
  return rectToClientRect(rect);
}
function hasFixedPositionAncestor(element, stopNode) {
  const parentNode = getParentNode(element);
  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {
    return false;
  }
  return getComputedStyle2(parentNode).position === "fixed" || hasFixedPositionAncestor(parentNode, stopNode);
}
function getClippingElementAncestors(element, cache) {
  const cachedResult = cache.get(element);
  if (cachedResult) {
    return cachedResult;
  }
  let result = getOverflowAncestors(element, [], false).filter((el) => isElement(el) && getNodeName(el) !== "body");
  let currentContainingBlockComputedStyle = null;
  const elementIsFixed = getComputedStyle2(element).position === "fixed";
  let currentNode = elementIsFixed ? getParentNode(element) : element;
  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {
    const computedStyle = getComputedStyle2(currentNode);
    const currentNodeIsContaining = isContainingBlock(currentNode);
    if (!currentNodeIsContaining && computedStyle.position === "fixed") {
      currentContainingBlockComputedStyle = null;
    }
    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === "static" && !!currentContainingBlockComputedStyle && ["absolute", "fixed"].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);
    if (shouldDropCurrentNode) {
      result = result.filter((ancestor) => ancestor !== currentNode);
    } else {
      currentContainingBlockComputedStyle = computedStyle;
    }
    currentNode = getParentNode(currentNode);
  }
  cache.set(element, result);
  return result;
}
function getClippingRect(_ref) {
  let {
    element,
    boundary,
    rootBoundary,
    strategy
  } = _ref;
  const elementClippingAncestors = boundary === "clippingAncestors" ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);
  const clippingAncestors = [...elementClippingAncestors, rootBoundary];
  const firstClippingAncestor = clippingAncestors[0];
  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {
    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));
  return {
    width: clippingRect.right - clippingRect.left,
    height: clippingRect.bottom - clippingRect.top,
    x: clippingRect.left,
    y: clippingRect.top
  };
}
function getDimensions(element) {
  const {
    width,
    height
  } = getCssDimensions(element);
  return {
    width,
    height
  };
}
function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
  const isOffsetParentAnElement = isHTMLElement(offsetParent);
  const documentElement = getDocumentElement(offsetParent);
  const isFixed = strategy === "fixed";
  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const offsets = createCoords(0);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isOffsetParentAnElement) {
      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);
  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;
  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;
  return {
    x,
    y,
    width: rect.width,
    height: rect.height
  };
}
function isStaticPositioned(element) {
  return getComputedStyle2(element).position === "static";
}
function getTrueOffsetParent(element, polyfill) {
  if (!isHTMLElement(element) || getComputedStyle2(element).position === "fixed") {
    return null;
  }
  if (polyfill) {
    return polyfill(element);
  }
  let rawOffsetParent = element.offsetParent;
  if (getDocumentElement(element) === rawOffsetParent) {
    rawOffsetParent = rawOffsetParent.ownerDocument.body;
  }
  return rawOffsetParent;
}
function getOffsetParent(element, polyfill) {
  const win = getWindow(element);
  if (isTopLayer(element)) {
    return win;
  }
  if (!isHTMLElement(element)) {
    let svgOffsetParent = getParentNode(element);
    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {
      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {
        return svgOffsetParent;
      }
      svgOffsetParent = getParentNode(svgOffsetParent);
    }
    return win;
  }
  let offsetParent = getTrueOffsetParent(element, polyfill);
  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {
    offsetParent = getTrueOffsetParent(offsetParent, polyfill);
  }
  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {
    return win;
  }
  return offsetParent || getContainingBlock(element) || win;
}
function isRTL(element) {
  return getComputedStyle2(element).direction === "rtl";
}
function observeMove(element, onMove) {
  let io = null;
  let timeoutId;
  const root = getDocumentElement(element);
  function cleanup() {
    var _io;
    clearTimeout(timeoutId);
    (_io = io) == null || _io.disconnect();
    io = null;
  }
  function refresh(skip, threshold) {
    if (skip === void 0) {
      skip = false;
    }
    if (threshold === void 0) {
      threshold = 1;
    }
    cleanup();
    const {
      left,
      top,
      width,
      height
    } = element.getBoundingClientRect();
    if (!skip) {
      onMove();
    }
    if (!width || !height) {
      return;
    }
    const insetTop = floor(top);
    const insetRight = floor(root.clientWidth - (left + width));
    const insetBottom = floor(root.clientHeight - (top + height));
    const insetLeft = floor(left);
    const rootMargin = -insetTop + "px " + -insetRight + "px " + -insetBottom + "px " + -insetLeft + "px";
    const options = {
      rootMargin,
      threshold: max(0, min(1, threshold)) || 1
    };
    let isFirstUpdate = true;
    function handleObserve(entries) {
      const ratio = entries[0].intersectionRatio;
      if (ratio !== threshold) {
        if (!isFirstUpdate) {
          return refresh();
        }
        if (!ratio) {
          timeoutId = setTimeout(() => {
            refresh(false, 1e-7);
          }, 1e3);
        } else {
          refresh(false, ratio);
        }
      }
      isFirstUpdate = false;
    }
    try {
      io = new IntersectionObserver(handleObserve, {
        ...options,
        // Handle <iframe>s
        root: root.ownerDocument
      });
    } catch (e) {
      io = new IntersectionObserver(handleObserve, options);
    }
    io.observe(element);
  }
  refresh(true);
  return cleanup;
}
function autoUpdate(reference, floating, update, options) {
  if (options === void 0) {
    options = {};
  }
  const {
    ancestorScroll = true,
    ancestorResize = true,
    elementResize = typeof ResizeObserver === "function",
    layoutShift = typeof IntersectionObserver === "function",
    animationFrame = false
  } = options;
  const referenceEl = unwrapElement(reference);
  const ancestors = ancestorScroll || ancestorResize ? [...referenceEl ? getOverflowAncestors(referenceEl) : [], ...getOverflowAncestors(floating)] : [];
  ancestors.forEach((ancestor) => {
    ancestorScroll && ancestor.addEventListener("scroll", update, {
      passive: true
    });
    ancestorResize && ancestor.addEventListener("resize", update);
  });
  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;
  let reobserveFrame = -1;
  let resizeObserver = null;
  if (elementResize) {
    resizeObserver = new ResizeObserver((_ref) => {
      let [firstEntry] = _ref;
      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {
        resizeObserver.unobserve(floating);
        cancelAnimationFrame(reobserveFrame);
        reobserveFrame = requestAnimationFrame(() => {
          var _resizeObserver;
          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);
        });
      }
      update();
    });
    if (referenceEl && !animationFrame) {
      resizeObserver.observe(referenceEl);
    }
    resizeObserver.observe(floating);
  }
  let frameId;
  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;
  if (animationFrame) {
    frameLoop();
  }
  function frameLoop() {
    const nextRefRect = getBoundingClientRect(reference);
    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {
      update();
    }
    prevRefRect = nextRefRect;
    frameId = requestAnimationFrame(frameLoop);
  }
  update();
  return () => {
    var _resizeObserver2;
    ancestors.forEach((ancestor) => {
      ancestorScroll && ancestor.removeEventListener("scroll", update);
      ancestorResize && ancestor.removeEventListener("resize", update);
    });
    cleanupIo == null || cleanupIo();
    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();
    resizeObserver = null;
    if (animationFrame) {
      cancelAnimationFrame(frameId);
    }
  };
}
var noOffsets, getElementRects, platform, offset2, shift2, flip2, size2, hide2, arrow2, limitShift2, computePosition2;
var init_floating_ui_dom = __esm({
  "../../../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs"() {
    "use strict";
    init_floating_ui_core();
    init_floating_ui_utils();
    init_floating_ui_utils_dom();
    noOffsets = /* @__PURE__ */ createCoords(0);
    getElementRects = async function(data) {
      const getOffsetParentFn = this.getOffsetParent || getOffsetParent;
      const getDimensionsFn = this.getDimensions;
      const floatingDimensions = await getDimensionsFn(data.floating);
      return {
        reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),
        floating: {
          x: 0,
          y: 0,
          width: floatingDimensions.width,
          height: floatingDimensions.height
        }
      };
    };
    platform = {
      convertOffsetParentRelativeRectToViewportRelativeRect,
      getDocumentElement,
      getClippingRect,
      getOffsetParent,
      getElementRects,
      getClientRects,
      getDimensions,
      getScale,
      isElement,
      isRTL
    };
    offset2 = offset;
    shift2 = shift;
    flip2 = flip;
    size2 = size;
    hide2 = hide;
    arrow2 = arrow;
    limitShift2 = limitShift;
    computePosition2 = (reference, floating, options) => {
      const cache = /* @__PURE__ */ new Map();
      const mergedOptions = {
        platform,
        ...options
      };
      const platformWithCache = {
        ...mergedOptions.platform,
        _c: cache
      };
      return computePosition(reference, floating, {
        ...mergedOptions,
        platform: platformWithCache
      });
    };
  }
});

// ../../../node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs
function deepEqual(a, b) {
  if (a === b) {
    return true;
  }
  if (typeof a !== typeof b) {
    return false;
  }
  if (typeof a === "function" && a.toString() === b.toString()) {
    return true;
  }
  let length;
  let i;
  let keys;
  if (a && b && typeof a === "object") {
    if (Array.isArray(a)) {
      length = a.length;
      if (length !== b.length) return false;
      for (i = length; i-- !== 0; ) {
        if (!deepEqual(a[i], b[i])) {
          return false;
        }
      }
      return true;
    }
    keys = Object.keys(a);
    length = keys.length;
    if (length !== Object.keys(b).length) {
      return false;
    }
    for (i = length; i-- !== 0; ) {
      if (!{}.hasOwnProperty.call(b, keys[i])) {
        return false;
      }
    }
    for (i = length; i-- !== 0; ) {
      const key = keys[i];
      if (key === "_owner" && a.$$typeof) {
        continue;
      }
      if (!deepEqual(a[key], b[key])) {
        return false;
      }
    }
    return true;
  }
  return a !== a && b !== b;
}
function getDPR(element) {
  if (typeof window === "undefined") {
    return 1;
  }
  const win = element.ownerDocument.defaultView || window;
  return win.devicePixelRatio || 1;
}
function roundByDPR(element, value) {
  const dpr = getDPR(element);
  return Math.round(value * dpr) / dpr;
}
function useLatestRef(value) {
  const ref = React25.useRef(value);
  index(() => {
    ref.current = value;
  });
  return ref;
}
function useFloating(options) {
  if (options === void 0) {
    options = {};
  }
  const {
    placement = "bottom",
    strategy = "absolute",
    middleware = [],
    platform: platform2,
    elements: {
      reference: externalReference,
      floating: externalFloating
    } = {},
    transform = true,
    whileElementsMounted,
    open
  } = options;
  const [data, setData] = React25.useState({
    x: 0,
    y: 0,
    strategy,
    placement,
    middlewareData: {},
    isPositioned: false
  });
  const [latestMiddleware, setLatestMiddleware] = React25.useState(middleware);
  if (!deepEqual(latestMiddleware, middleware)) {
    setLatestMiddleware(middleware);
  }
  const [_reference, _setReference] = React25.useState(null);
  const [_floating, _setFloating] = React25.useState(null);
  const setReference = React25.useCallback((node) => {
    if (node !== referenceRef.current) {
      referenceRef.current = node;
      _setReference(node);
    }
  }, []);
  const setFloating = React25.useCallback((node) => {
    if (node !== floatingRef.current) {
      floatingRef.current = node;
      _setFloating(node);
    }
  }, []);
  const referenceEl = externalReference || _reference;
  const floatingEl = externalFloating || _floating;
  const referenceRef = React25.useRef(null);
  const floatingRef = React25.useRef(null);
  const dataRef = React25.useRef(data);
  const hasWhileElementsMounted = whileElementsMounted != null;
  const whileElementsMountedRef = useLatestRef(whileElementsMounted);
  const platformRef = useLatestRef(platform2);
  const openRef = useLatestRef(open);
  const update = React25.useCallback(() => {
    if (!referenceRef.current || !floatingRef.current) {
      return;
    }
    const config = {
      placement,
      strategy,
      middleware: latestMiddleware
    };
    if (platformRef.current) {
      config.platform = platformRef.current;
    }
    computePosition2(referenceRef.current, floatingRef.current, config).then((data2) => {
      const fullData = {
        ...data2,
        // The floating element's position may be recomputed while it's closed
        // but still mounted (such as when transitioning out). To ensure
        // `isPositioned` will be `false` initially on the next open, avoid
        // setting it to `true` when `open === false` (must be specified).
        isPositioned: openRef.current !== false
      };
      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {
        dataRef.current = fullData;
        ReactDOM4.flushSync(() => {
          setData(fullData);
        });
      }
    });
  }, [latestMiddleware, placement, strategy, platformRef, openRef]);
  index(() => {
    if (open === false && dataRef.current.isPositioned) {
      dataRef.current.isPositioned = false;
      setData((data2) => ({
        ...data2,
        isPositioned: false
      }));
    }
  }, [open]);
  const isMountedRef = React25.useRef(false);
  index(() => {
    isMountedRef.current = true;
    return () => {
      isMountedRef.current = false;
    };
  }, []);
  index(() => {
    if (referenceEl) referenceRef.current = referenceEl;
    if (floatingEl) floatingRef.current = floatingEl;
    if (referenceEl && floatingEl) {
      if (whileElementsMountedRef.current) {
        return whileElementsMountedRef.current(referenceEl, floatingEl, update);
      }
      update();
    }
  }, [referenceEl, floatingEl, update, whileElementsMountedRef, hasWhileElementsMounted]);
  const refs = React25.useMemo(() => ({
    reference: referenceRef,
    floating: floatingRef,
    setReference,
    setFloating
  }), [setReference, setFloating]);
  const elements = React25.useMemo(() => ({
    reference: referenceEl,
    floating: floatingEl
  }), [referenceEl, floatingEl]);
  const floatingStyles = React25.useMemo(() => {
    const initialStyles = {
      position: strategy,
      left: 0,
      top: 0
    };
    if (!elements.floating) {
      return initialStyles;
    }
    const x = roundByDPR(elements.floating, data.x);
    const y = roundByDPR(elements.floating, data.y);
    if (transform) {
      return {
        ...initialStyles,
        transform: "translate(" + x + "px, " + y + "px)",
        ...getDPR(elements.floating) >= 1.5 && {
          willChange: "transform"
        }
      };
    }
    return {
      position: strategy,
      left: x,
      top: y
    };
  }, [strategy, transform, elements.floating, data.x, data.y]);
  return React25.useMemo(() => ({
    ...data,
    update,
    refs,
    elements,
    floatingStyles
  }), [data, update, refs, elements, floatingStyles]);
}
var React25, import_react30, ReactDOM4, index, arrow$1, offset3, shift3, limitShift3, flip3, size3, hide3, arrow3;
var init_floating_ui_react_dom = __esm({
  "../../../node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs"() {
    "use strict";
    init_floating_ui_dom();
    init_floating_ui_dom();
    React25 = __toESM(require("react"), 1);
    import_react30 = require("react");
    ReactDOM4 = __toESM(require("react-dom"), 1);
    index = typeof document !== "undefined" ? import_react30.useLayoutEffect : import_react30.useEffect;
    arrow$1 = (options) => {
      function isRef(value) {
        return {}.hasOwnProperty.call(value, "current");
      }
      return {
        name: "arrow",
        options,
        fn(state) {
          const {
            element,
            padding
          } = typeof options === "function" ? options(state) : options;
          if (element && isRef(element)) {
            if (element.current != null) {
              return arrow2({
                element: element.current,
                padding
              }).fn(state);
            }
            return {};
          }
          if (element) {
            return arrow2({
              element,
              padding
            }).fn(state);
          }
          return {};
        }
      };
    };
    offset3 = (options, deps) => ({
      ...offset2(options),
      options: [options, deps]
    });
    shift3 = (options, deps) => ({
      ...shift2(options),
      options: [options, deps]
    });
    limitShift3 = (options, deps) => ({
      ...limitShift2(options),
      options: [options, deps]
    });
    flip3 = (options, deps) => ({
      ...flip2(options),
      options: [options, deps]
    });
    size3 = (options, deps) => ({
      ...size2(options),
      options: [options, deps]
    });
    hide3 = (options, deps) => ({
      ...hide2(options),
      options: [options, deps]
    });
    arrow3 = (options, deps) => ({
      ...arrow$1(options),
      options: [options, deps]
    });
  }
});

// ../../../node_modules/@radix-ui/react-arrow/dist/index.mjs
var React26, import_jsx_runtime42, NAME, Arrow, Root6;
var init_dist17 = __esm({
  "../../../node_modules/@radix-ui/react-arrow/dist/index.mjs"() {
    "use strict";
    React26 = __toESM(require("react"), 1);
    init_dist9();
    import_jsx_runtime42 = require("react/jsx-runtime");
    NAME = "Arrow";
    Arrow = React26.forwardRef((props, forwardedRef) => {
      const { children, width = 10, height = 5, ...arrowProps } = props;
      return /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(
        Primitive.svg,
        {
          ...arrowProps,
          ref: forwardedRef,
          width,
          height,
          viewBox: "0 0 30 10",
          preserveAspectRatio: "none",
          children: props.asChild ? children : /* @__PURE__ */ (0, import_jsx_runtime42.jsx)("polygon", { points: "0,0 30,0 15,10" })
        }
      );
    });
    Arrow.displayName = NAME;
    Root6 = Arrow;
  }
});

// ../../../node_modules/@radix-ui/react-use-size/dist/index.mjs
function useSize(element) {
  const [size4, setSize] = React27.useState(void 0);
  useLayoutEffect2(() => {
    if (element) {
      setSize({ width: element.offsetWidth, height: element.offsetHeight });
      const resizeObserver = new ResizeObserver((entries) => {
        if (!Array.isArray(entries)) {
          return;
        }
        if (!entries.length) {
          return;
        }
        const entry = entries[0];
        let width;
        let height;
        if ("borderBoxSize" in entry) {
          const borderSizeEntry = entry["borderBoxSize"];
          const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;
          width = borderSize["inlineSize"];
          height = borderSize["blockSize"];
        } else {
          width = element.offsetWidth;
          height = element.offsetHeight;
        }
        setSize({ width, height });
      });
      resizeObserver.observe(element, { box: "border-box" });
      return () => resizeObserver.unobserve(element);
    } else {
      setSize(void 0);
    }
  }, [element]);
  return size4;
}
var React27;
var init_dist18 = __esm({
  "../../../node_modules/@radix-ui/react-use-size/dist/index.mjs"() {
    "use strict";
    React27 = __toESM(require("react"), 1);
    init_dist5();
  }
});

// ../../../node_modules/@radix-ui/react-popper/dist/index.mjs
function isNotNull(value) {
  return value !== null;
}
function getSideAndAlignFromPlacement(placement) {
  const [side, align = "center"] = placement.split("-");
  return [side, align];
}
var React28, import_jsx_runtime43, POPPER_NAME, createPopperContext, createPopperScope, PopperProvider, usePopperContext, Popper, ANCHOR_NAME, PopperAnchor, CONTENT_NAME2, PopperContentProvider, useContentContext, PopperContent, ARROW_NAME, OPPOSITE_SIDE, PopperArrow, transformOrigin, Root22, Anchor, Content5, Arrow2;
var init_dist19 = __esm({
  "../../../node_modules/@radix-ui/react-popper/dist/index.mjs"() {
    "use strict";
    "use client";
    React28 = __toESM(require("react"), 1);
    init_floating_ui_react_dom();
    init_dist17();
    init_dist();
    init_dist4();
    init_dist9();
    init_dist7();
    init_dist5();
    init_dist18();
    import_jsx_runtime43 = require("react/jsx-runtime");
    POPPER_NAME = "Popper";
    [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);
    [PopperProvider, usePopperContext] = createPopperContext(POPPER_NAME);
    Popper = (props) => {
      const { __scopePopper, children } = props;
      const [anchor, setAnchor] = React28.useState(null);
      return /* @__PURE__ */ (0, import_jsx_runtime43.jsx)(PopperProvider, { scope: __scopePopper, anchor, onAnchorChange: setAnchor, children });
    };
    Popper.displayName = POPPER_NAME;
    ANCHOR_NAME = "PopperAnchor";
    PopperAnchor = React28.forwardRef(
      (props, forwardedRef) => {
        const { __scopePopper, virtualRef, ...anchorProps } = props;
        const context = usePopperContext(ANCHOR_NAME, __scopePopper);
        const ref = React28.useRef(null);
        const composedRefs = useComposedRefs(forwardedRef, ref);
        React28.useEffect(() => {
          context.onAnchorChange(virtualRef?.current || ref.current);
        });
        return virtualRef ? null : /* @__PURE__ */ (0, import_jsx_runtime43.jsx)(Primitive.div, { ...anchorProps, ref: composedRefs });
      }
    );
    PopperAnchor.displayName = ANCHOR_NAME;
    CONTENT_NAME2 = "PopperContent";
    [PopperContentProvider, useContentContext] = createPopperContext(CONTENT_NAME2);
    PopperContent = React28.forwardRef(
      (props, forwardedRef) => {
        const {
          __scopePopper,
          side = "bottom",
          sideOffset = 0,
          align = "center",
          alignOffset = 0,
          arrowPadding = 0,
          avoidCollisions = true,
          collisionBoundary = [],
          collisionPadding: collisionPaddingProp = 0,
          sticky = "partial",
          hideWhenDetached = false,
          updatePositionStrategy = "optimized",
          onPlaced,
          ...contentProps
        } = props;
        const context = usePopperContext(CONTENT_NAME2, __scopePopper);
        const [content, setContent] = React28.useState(null);
        const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));
        const [arrow4, setArrow] = React28.useState(null);
        const arrowSize = useSize(arrow4);
        const arrowWidth = arrowSize?.width ?? 0;
        const arrowHeight = arrowSize?.height ?? 0;
        const desiredPlacement = side + (align !== "center" ? "-" + align : "");
        const collisionPadding = typeof collisionPaddingProp === "number" ? collisionPaddingProp : { top: 0, right: 0, bottom: 0, left: 0, ...collisionPaddingProp };
        const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [collisionBoundary];
        const hasExplicitBoundaries = boundary.length > 0;
        const detectOverflowOptions = {
          padding: collisionPadding,
          boundary: boundary.filter(isNotNull),
          // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries
          altBoundary: hasExplicitBoundaries
        };
        const { refs, floatingStyles, placement, isPositioned, middlewareData } = useFloating({
          // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues
          strategy: "fixed",
          placement: desiredPlacement,
          whileElementsMounted: (...args) => {
            const cleanup = autoUpdate(...args, {
              animationFrame: updatePositionStrategy === "always"
            });
            return cleanup;
          },
          elements: {
            reference: context.anchor
          },
          middleware: [
            offset3({ mainAxis: sideOffset + arrowHeight, alignmentAxis: alignOffset }),
            avoidCollisions && shift3({
              mainAxis: true,
              crossAxis: false,
              limiter: sticky === "partial" ? limitShift3() : void 0,
              ...detectOverflowOptions
            }),
            avoidCollisions && flip3({ ...detectOverflowOptions }),
            size3({
              ...detectOverflowOptions,
              apply: ({ elements, rects, availableWidth, availableHeight }) => {
                const { width: anchorWidth, height: anchorHeight } = rects.reference;
                const contentStyle = elements.floating.style;
                contentStyle.setProperty("--radix-popper-available-width", `${availableWidth}px`);
                contentStyle.setProperty("--radix-popper-available-height", `${availableHeight}px`);
                contentStyle.setProperty("--radix-popper-anchor-width", `${anchorWidth}px`);
                contentStyle.setProperty("--radix-popper-anchor-height", `${anchorHeight}px`);
              }
            }),
            arrow4 && arrow3({ element: arrow4, padding: arrowPadding }),
            transformOrigin({ arrowWidth, arrowHeight }),
            hideWhenDetached && hide3({ strategy: "referenceHidden", ...detectOverflowOptions })
          ]
        });
        const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);
        const handlePlaced = useCallbackRef(onPlaced);
        useLayoutEffect2(() => {
          if (isPositioned) {
            handlePlaced?.();
          }
        }, [isPositioned, handlePlaced]);
        const arrowX = middlewareData.arrow?.x;
        const arrowY = middlewareData.arrow?.y;
        const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;
        const [contentZIndex, setContentZIndex] = React28.useState();
        useLayoutEffect2(() => {
          if (content) setContentZIndex(window.getComputedStyle(content).zIndex);
        }, [content]);
        return /* @__PURE__ */ (0, import_jsx_runtime43.jsx)(
          "div",
          {
            ref: refs.setFloating,
            "data-radix-popper-content-wrapper": "",
            style: {
              ...floatingStyles,
              transform: isPositioned ? floatingStyles.transform : "translate(0, -200%)",
              // keep off the page when measuring
              minWidth: "max-content",
              zIndex: contentZIndex,
              ["--radix-popper-transform-origin"]: [
                middlewareData.transformOrigin?.x,
                middlewareData.transformOrigin?.y
              ].join(" "),
              // hide the content if using the hide middleware and should be hidden
              // set visibility to hidden and disable pointer events so the UI behaves
              // as if the PopperContent isn't there at all
              ...middlewareData.hide?.referenceHidden && {
                visibility: "hidden",
                pointerEvents: "none"
              }
            },
            dir: props.dir,
            children: /* @__PURE__ */ (0, import_jsx_runtime43.jsx)(
              PopperContentProvider,
              {
                scope: __scopePopper,
                placedSide,
                onArrowChange: setArrow,
                arrowX,
                arrowY,
                shouldHideArrow: cannotCenterArrow,
                children: /* @__PURE__ */ (0, import_jsx_runtime43.jsx)(
                  Primitive.div,
                  {
                    "data-side": placedSide,
                    "data-align": placedAlign,
                    ...contentProps,
                    ref: composedRefs,
                    style: {
                      ...contentProps.style,
                      // if the PopperContent hasn't been placed yet (not all measurements done)
                      // we prevent animations so that users's animation don't kick in too early referring wrong sides
                      animation: !isPositioned ? "none" : void 0
                    }
                  }
                )
              }
            )
          }
        );
      }
    );
    PopperContent.displayName = CONTENT_NAME2;
    ARROW_NAME = "PopperArrow";
    OPPOSITE_SIDE = {
      top: "bottom",
      right: "left",
      bottom: "top",
      left: "right"
    };
    PopperArrow = React28.forwardRef(function PopperArrow2(props, forwardedRef) {
      const { __scopePopper, ...arrowProps } = props;
      const contentContext = useContentContext(ARROW_NAME, __scopePopper);
      const baseSide = OPPOSITE_SIDE[contentContext.placedSide];
      return (
        // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)
        // doesn't report size as we'd expect on SVG elements.
        // it reports their bounding box which is effectively the largest path inside the SVG.
        /* @__PURE__ */ (0, import_jsx_runtime43.jsx)(
          "span",
          {
            ref: contentContext.onArrowChange,
            style: {
              position: "absolute",
              left: contentContext.arrowX,
              top: contentContext.arrowY,
              [baseSide]: 0,
              transformOrigin: {
                top: "",
                right: "0 0",
                bottom: "center 0",
                left: "100% 0"
              }[contentContext.placedSide],
              transform: {
                top: "translateY(100%)",
                right: "translateY(50%) rotate(90deg) translateX(-50%)",
                bottom: `rotate(180deg)`,
                left: "translateY(50%) rotate(-90deg) translateX(50%)"
              }[contentContext.placedSide],
              visibility: contentContext.shouldHideArrow ? "hidden" : void 0
            },
            children: /* @__PURE__ */ (0, import_jsx_runtime43.jsx)(
              Root6,
              {
                ...arrowProps,
                ref: forwardedRef,
                style: {
                  ...arrowProps.style,
                  // ensures the element can be measured correctly (mostly for if SVG)
                  display: "block"
                }
              }
            )
          }
        )
      );
    });
    PopperArrow.displayName = ARROW_NAME;
    transformOrigin = (options) => ({
      name: "transformOrigin",
      options,
      fn(data) {
        const { placement, rects, middlewareData } = data;
        const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;
        const isArrowHidden = cannotCenterArrow;
        const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;
        const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;
        const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);
        const noArrowAlign = { start: "0%", center: "50%", end: "100%" }[placedAlign];
        const arrowXCenter = (middlewareData.arrow?.x ?? 0) + arrowWidth / 2;
        const arrowYCenter = (middlewareData.arrow?.y ?? 0) + arrowHeight / 2;
        let x = "";
        let y = "";
        if (placedSide === "bottom") {
          x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;
          y = `${-arrowHeight}px`;
        } else if (placedSide === "top") {
          x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;
          y = `${rects.floating.height + arrowHeight}px`;
        } else if (placedSide === "right") {
          x = `${-arrowHeight}px`;
          y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;
        } else if (placedSide === "left") {
          x = `${rects.floating.width + arrowHeight}px`;
          y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;
        }
        return { data: { x, y } };
      }
    });
    Root22 = Popper;
    Anchor = PopperAnchor;
    Content5 = PopperContent;
    Arrow2 = PopperArrow;
  }
});

// ../../../node_modules/@radix-ui/react-popover/dist/index.mjs
function getState2(open) {
  return open ? "open" : "closed";
}
var React29, import_jsx_runtime44, POPOVER_NAME, createPopoverContext, createPopoverScope, usePopperScope, PopoverProvider, usePopoverContext, Popover, ANCHOR_NAME2, PopoverAnchor, TRIGGER_NAME2, PopoverTrigger, PORTAL_NAME3, PortalProvider2, usePortalContext2, PopoverPortal, CONTENT_NAME3, PopoverContent, PopoverContentModal, PopoverContentNonModal, PopoverContentImpl, CLOSE_NAME2, PopoverClose, ARROW_NAME2, PopoverArrow, Root23, Anchor2, Trigger5, Portal3, Content22;
var init_dist20 = __esm({
  "../../../node_modules/@radix-ui/react-popover/dist/index.mjs"() {
    "use strict";
    "use client";
    React29 = __toESM(require("react"), 1);
    init_dist3();
    init_dist();
    init_dist4();
    init_dist11();
    init_dist15();
    init_dist12();
    init_dist6();
    init_dist19();
    init_dist19();
    init_dist13();
    init_dist14();
    init_dist9();
    init_dist2();
    init_dist8();
    init_es20157();
    init_es20156();
    import_jsx_runtime44 = require("react/jsx-runtime");
    POPOVER_NAME = "Popover";
    [createPopoverContext, createPopoverScope] = createContextScope(POPOVER_NAME, [
      createPopperScope
    ]);
    usePopperScope = createPopperScope();
    [PopoverProvider, usePopoverContext] = createPopoverContext(POPOVER_NAME);
    Popover = (props) => {
      const {
        __scopePopover,
        children,
        open: openProp,
        defaultOpen,
        onOpenChange,
        modal = false
      } = props;
      const popperScope = usePopperScope(__scopePopover);
      const triggerRef = React29.useRef(null);
      const [hasCustomAnchor, setHasCustomAnchor] = React29.useState(false);
      const [open = false, setOpen] = useControllableState({
        prop: openProp,
        defaultProp: defaultOpen,
        onChange: onOpenChange
      });
      return /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(Root22, { ...popperScope, children: /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(
        PopoverProvider,
        {
          scope: __scopePopover,
          contentId: useId2(),
          triggerRef,
          open,
          onOpenChange: setOpen,
          onOpenToggle: React29.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),
          hasCustomAnchor,
          onCustomAnchorAdd: React29.useCallback(() => setHasCustomAnchor(true), []),
          onCustomAnchorRemove: React29.useCallback(() => setHasCustomAnchor(false), []),
          modal,
          children
        }
      ) });
    };
    Popover.displayName = POPOVER_NAME;
    ANCHOR_NAME2 = "PopoverAnchor";
    PopoverAnchor = React29.forwardRef(
      (props, forwardedRef) => {
        const { __scopePopover, ...anchorProps } = props;
        const context = usePopoverContext(ANCHOR_NAME2, __scopePopover);
        const popperScope = usePopperScope(__scopePopover);
        const { onCustomAnchorAdd, onCustomAnchorRemove } = context;
        React29.useEffect(() => {
          onCustomAnchorAdd();
          return () => onCustomAnchorRemove();
        }, [onCustomAnchorAdd, onCustomAnchorRemove]);
        return /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(Anchor, { ...popperScope, ...anchorProps, ref: forwardedRef });
      }
    );
    PopoverAnchor.displayName = ANCHOR_NAME2;
    TRIGGER_NAME2 = "PopoverTrigger";
    PopoverTrigger = React29.forwardRef(
      (props, forwardedRef) => {
        const { __scopePopover, ...triggerProps } = props;
        const context = usePopoverContext(TRIGGER_NAME2, __scopePopover);
        const popperScope = usePopperScope(__scopePopover);
        const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);
        const trigger = /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(
          Primitive.button,
          {
            type: "button",
            "aria-haspopup": "dialog",
            "aria-expanded": context.open,
            "aria-controls": context.contentId,
            "data-state": getState2(context.open),
            ...triggerProps,
            ref: composedTriggerRef,
            onClick: composeEventHandlers(props.onClick, context.onOpenToggle)
          }
        );
        return context.hasCustomAnchor ? trigger : /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(Anchor, { asChild: true, ...popperScope, children: trigger });
      }
    );
    PopoverTrigger.displayName = TRIGGER_NAME2;
    PORTAL_NAME3 = "PopoverPortal";
    [PortalProvider2, usePortalContext2] = createPopoverContext(PORTAL_NAME3, {
      forceMount: void 0
    });
    PopoverPortal = (props) => {
      const { __scopePopover, forceMount, children, container } = props;
      const context = usePopoverContext(PORTAL_NAME3, __scopePopover);
      return /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(PortalProvider2, { scope: __scopePopover, forceMount, children: /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(Presence, { present: forceMount || context.open, children: /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(Portal, { asChild: true, container, children }) }) });
    };
    PopoverPortal.displayName = PORTAL_NAME3;
    CONTENT_NAME3 = "PopoverContent";
    PopoverContent = React29.forwardRef(
      (props, forwardedRef) => {
        const portalContext = usePortalContext2(CONTENT_NAME3, props.__scopePopover);
        const { forceMount = portalContext.forceMount, ...contentProps } = props;
        const context = usePopoverContext(CONTENT_NAME3, props.__scopePopover);
        return /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(Presence, { present: forceMount || context.open, children: context.modal ? /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(PopoverContentModal, { ...contentProps, ref: forwardedRef }) : /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(PopoverContentNonModal, { ...contentProps, ref: forwardedRef }) });
      }
    );
    PopoverContent.displayName = CONTENT_NAME3;
    PopoverContentModal = React29.forwardRef(
      (props, forwardedRef) => {
        const context = usePopoverContext(CONTENT_NAME3, props.__scopePopover);
        const contentRef = React29.useRef(null);
        const composedRefs = useComposedRefs(forwardedRef, contentRef);
        const isRightClickOutsideRef = React29.useRef(false);
        React29.useEffect(() => {
          const content = contentRef.current;
          if (content) return hideOthers(content);
        }, []);
        return /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(Combination_default, { as: Slot, allowPinchZoom: true, children: /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(
          PopoverContentImpl,
          {
            ...props,
            ref: composedRefs,
            trapFocus: context.open,
            disableOutsidePointerEvents: true,
            onCloseAutoFocus: composeEventHandlers(props.onCloseAutoFocus, (event) => {
              event.preventDefault();
              if (!isRightClickOutsideRef.current) context.triggerRef.current?.focus();
            }),
            onPointerDownOutside: composeEventHandlers(
              props.onPointerDownOutside,
              (event) => {
                const originalEvent = event.detail.originalEvent;
                const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;
                const isRightClick = originalEvent.button === 2 || ctrlLeftClick;
                isRightClickOutsideRef.current = isRightClick;
              },
              { checkForDefaultPrevented: false }
            ),
            onFocusOutside: composeEventHandlers(
              props.onFocusOutside,
              (event) => event.preventDefault(),
              { checkForDefaultPrevented: false }
            )
          }
        ) });
      }
    );
    PopoverContentNonModal = React29.forwardRef(
      (props, forwardedRef) => {
        const context = usePopoverContext(CONTENT_NAME3, props.__scopePopover);
        const hasInteractedOutsideRef = React29.useRef(false);
        const hasPointerDownOutsideRef = React29.useRef(false);
        return /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(
          PopoverContentImpl,
          {
            ...props,
            ref: forwardedRef,
            trapFocus: false,
            disableOutsidePointerEvents: false,
            onCloseAutoFocus: (event) => {
              props.onCloseAutoFocus?.(event);
              if (!event.defaultPrevented) {
                if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();
                event.preventDefault();
              }
              hasInteractedOutsideRef.current = false;
              hasPointerDownOutsideRef.current = false;
            },
            onInteractOutside: (event) => {
              props.onInteractOutside?.(event);
              if (!event.defaultPrevented) {
                hasInteractedOutsideRef.current = true;
                if (event.detail.originalEvent.type === "pointerdown") {
                  hasPointerDownOutsideRef.current = true;
                }
              }
              const target = event.target;
              const targetIsTrigger = context.triggerRef.current?.contains(target);
              if (targetIsTrigger) event.preventDefault();
              if (event.detail.originalEvent.type === "focusin" && hasPointerDownOutsideRef.current) {
                event.preventDefault();
              }
            }
          }
        );
      }
    );
    PopoverContentImpl = React29.forwardRef(
      (props, forwardedRef) => {
        const {
          __scopePopover,
          trapFocus,
          onOpenAutoFocus,
          onCloseAutoFocus,
          disableOutsidePointerEvents,
          onEscapeKeyDown,
          onPointerDownOutside,
          onFocusOutside,
          onInteractOutside,
          ...contentProps
        } = props;
        const context = usePopoverContext(CONTENT_NAME3, __scopePopover);
        const popperScope = usePopperScope(__scopePopover);
        useFocusGuards();
        return /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(
          FocusScope,
          {
            asChild: true,
            loop: true,
            trapped: trapFocus,
            onMountAutoFocus: onOpenAutoFocus,
            onUnmountAutoFocus: onCloseAutoFocus,
            children: /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(
              DismissableLayer,
              {
                asChild: true,
                disableOutsidePointerEvents,
                onInteractOutside,
                onEscapeKeyDown,
                onPointerDownOutside,
                onFocusOutside,
                onDismiss: () => context.onOpenChange(false),
                children: /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(
                  Content5,
                  {
                    "data-state": getState2(context.open),
                    role: "dialog",
                    id: context.contentId,
                    ...popperScope,
                    ...contentProps,
                    ref: forwardedRef,
                    style: {
                      ...contentProps.style,
                      // re-namespace exposed content custom properties
                      ...{
                        "--radix-popover-content-transform-origin": "var(--radix-popper-transform-origin)",
                        "--radix-popover-content-available-width": "var(--radix-popper-available-width)",
                        "--radix-popover-content-available-height": "var(--radix-popper-available-height)",
                        "--radix-popover-trigger-width": "var(--radix-popper-anchor-width)",
                        "--radix-popover-trigger-height": "var(--radix-popper-anchor-height)"
                      }
                    }
                  }
                )
              }
            )
          }
        );
      }
    );
    CLOSE_NAME2 = "PopoverClose";
    PopoverClose = React29.forwardRef(
      (props, forwardedRef) => {
        const { __scopePopover, ...closeProps } = props;
        const context = usePopoverContext(CLOSE_NAME2, __scopePopover);
        return /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(
          Primitive.button,
          {
            type: "button",
            ...closeProps,
            ref: forwardedRef,
            onClick: composeEventHandlers(props.onClick, () => context.onOpenChange(false))
          }
        );
      }
    );
    PopoverClose.displayName = CLOSE_NAME2;
    ARROW_NAME2 = "PopoverArrow";
    PopoverArrow = React29.forwardRef(
      (props, forwardedRef) => {
        const { __scopePopover, ...arrowProps } = props;
        const popperScope = usePopperScope(__scopePopover);
        return /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(Arrow2, { ...popperScope, ...arrowProps, ref: forwardedRef });
      }
    );
    PopoverArrow.displayName = ARROW_NAME2;
    Root23 = Popover;
    Anchor2 = PopoverAnchor;
    Trigger5 = PopoverTrigger;
    Portal3 = PopoverPortal;
    Content22 = PopoverContent;
  }
});

// src/components/table/data-table/data-table-filter/context.tsx
var import_react31, DataTableFilterContext, useDataTableFilterContext;
var init_context = __esm({
  "src/components/table/data-table/data-table-filter/context.tsx"() {
    "use strict";
    import_react31 = require("react");
    DataTableFilterContext = (0, import_react31.createContext)(null);
    useDataTableFilterContext = () => {
      const ctx = (0, import_react31.useContext)(DataTableFilterContext);
      if (!ctx) {
        throw new Error(
          "useDataTableFacetedFilterContext must be used within a DataTableFacetedFilter"
        );
      }
      return ctx;
    };
  }
});

// src/hooks/use-date.tsx
var import_date_fns2, import_locale2, import_react_i18next18, useDate;
var init_use_date = __esm({
  "src/hooks/use-date.tsx"() {
    "use strict";
    import_date_fns2 = require("date-fns");
    import_locale2 = require("date-fns/locale");
    import_react_i18next18 = require("react-i18next");
    init_languages();
    useDate = () => {
      const { i18n: i18n4 } = (0, import_react_i18next18.useTranslation)();
      const locale = languages.find((l) => l.code === i18n4.language)?.date_locale || import_locale2.enUS;
      const getFullDate = ({
        date: date3,
        includeTime = false
      }) => {
        const ensuredDate = new Date(date3);
        if (isNaN(ensuredDate.getTime())) {
          return "";
        }
        const timeFormat = includeTime ? "p" : "";
        return (0, import_date_fns2.format)(ensuredDate, `PP ${timeFormat}`, {
          locale
        });
      };
      function getRelativeDate(date3) {
        const now = /* @__PURE__ */ new Date();
        return (0, import_date_fns2.formatDistance)((0, import_date_fns2.sub)(new Date(date3), { minutes: 0 }), now, {
          addSuffix: true,
          locale
        });
      }
      return {
        getFullDate,
        getRelativeDate
      };
    };
  }
});

// src/components/table/data-table/hooks.tsx
var import_react_router_dom18, useSelectedParams;
var init_hooks2 = __esm({
  "src/components/table/data-table/hooks.tsx"() {
    "use strict";
    import_react_router_dom18 = require("react-router-dom");
    useSelectedParams = ({
      param,
      prefix,
      multiple = false
    }) => {
      const [searchParams, setSearchParams] = (0, import_react_router_dom18.useSearchParams)();
      const identifier = prefix ? `${prefix}_${param}` : param;
      const offsetKey = prefix ? `${prefix}_offset` : "offset";
      const add = (value) => {
        setSearchParams((prev) => {
          const newValue = new URLSearchParams(prev);
          const updateMultipleValues = () => {
            const existingValues = newValue.get(identifier)?.split(",") || [];
            if (!existingValues.includes(value)) {
              existingValues.push(value);
              newValue.set(identifier, existingValues.join(","));
            }
          };
          const updateSingleValue = () => {
            newValue.set(identifier, value);
          };
          multiple ? updateMultipleValues() : updateSingleValue();
          newValue.delete(offsetKey);
          return newValue;
        });
      };
      const deleteParam = (value) => {
        const deleteMultipleValues = (prev) => {
          const existingValues = prev.get(identifier)?.split(",") || [];
          const index2 = existingValues.indexOf(value || "");
          if (index2 > -1) {
            existingValues.splice(index2, 1);
            prev.set(identifier, existingValues.join(","));
          }
        };
        const deleteSingleValue = (prev) => {
          prev.delete(identifier);
        };
        setSearchParams((prev) => {
          if (value) {
            multiple ? deleteMultipleValues(prev) : deleteSingleValue(prev);
            if (!prev.get(identifier)) {
              prev.delete(identifier);
            }
          } else {
            prev.delete(identifier);
          }
          prev.delete(offsetKey);
          return prev;
        });
      };
      const get3 = () => {
        return searchParams.get(identifier)?.split(",").filter(Boolean) || [];
      };
      return { add, delete: deleteParam, get: get3 };
    };
  }
});

// src/components/table/data-table/data-table-filter/filter-chip.tsx
var import_icons17, import_ui25, import_react_i18next19, import_jsx_runtime45, FilterChip, filter_chip_default;
var init_filter_chip = __esm({
  "src/components/table/data-table/data-table-filter/filter-chip.tsx"() {
    "use strict";
    import_icons17 = require("@medusajs/icons");
    import_ui25 = require("@medusajs/ui");
    import_react_i18next19 = require("react-i18next");
    init_dist20();
    import_jsx_runtime45 = require("react/jsx-runtime");
    FilterChip = ({
      hadPreviousValue,
      label,
      value,
      readonly,
      hasOperator,
      onRemove
    }) => {
      const { t: t4 } = (0, import_react_i18next19.useTranslation)();
      const handleRemove = (e) => {
        e.stopPropagation();
        onRemove();
      };
      return /* @__PURE__ */ (0, import_jsx_runtime45.jsxs)(
        "div",
        {
          className: "bg-ui-bg-field transition-fg shadow-borders-base text-ui-fg-subtle flex cursor-default select-none items-stretch overflow-hidden rounded-md",
          children: [
            !hadPreviousValue && /* @__PURE__ */ (0, import_jsx_runtime45.jsx)(Anchor2, {}),
            /* @__PURE__ */ (0, import_jsx_runtime45.jsx)(
              "div",
              {
                className: (0, import_ui25.clx)(
                  "flex items-center justify-center whitespace-nowrap px-2 py-1",
                  {
                    "border-r": !!(value || hadPreviousValue)
                  }
                ),
                children: /* @__PURE__ */ (0, import_jsx_runtime45.jsx)(import_ui25.Text, { size: "small", weight: "plus", leading: "compact", children: label })
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime45.jsxs)("div", { className: "flex w-full items-center overflow-hidden", children: [
              hasOperator && !!(value || hadPreviousValue) && /* @__PURE__ */ (0, import_jsx_runtime45.jsx)("div", { className: "border-r p-1 px-2", children: /* @__PURE__ */ (0, import_jsx_runtime45.jsx)(
                import_ui25.Text,
                {
                  size: "small",
                  weight: "plus",
                  leading: "compact",
                  className: "text-ui-fg-muted",
                  children: t4("general.is")
                }
              ) }),
              !!(value || hadPreviousValue) && /* @__PURE__ */ (0, import_jsx_runtime45.jsx)(Trigger5, { asChild: true, className: (0, import_ui25.clx)(
                "flex-1 cursor-pointer overflow-hidden border-r p-1 px-2",
                {
                  "hover:bg-ui-bg-field-hover": !readonly,
                  "data-[state=open]:bg-ui-bg-field-hover": !readonly
                }
              ), children: /* @__PURE__ */ (0, import_jsx_runtime45.jsx)(
                import_ui25.Text,
                {
                  size: "small",
                  leading: "compact",
                  weight: "plus",
                  className: "truncate text-nowrap",
                  children: value || "\xA0"
                }
              ) })
            ] }),
            !readonly && !!(value || hadPreviousValue) && /* @__PURE__ */ (0, import_jsx_runtime45.jsx)(
              "button",
              {
                onClick: handleRemove,
                className: (0, import_ui25.clx)(
                  "text-ui-fg-muted transition-fg flex items-center justify-center p-1",
                  "hover:bg-ui-bg-subtle-hover",
                  "active:bg-ui-bg-subtle-pressed active:text-ui-fg-base"
                ),
                children: /* @__PURE__ */ (0, import_jsx_runtime45.jsx)(import_icons17.XMarkMini, {})
              }
            )
          ]
        }
      );
    };
    filter_chip_default = FilterChip;
  }
});

// src/components/table/data-table/data-table-filter/date-filter.tsx
var import_icons18, import_ui26, import_isEqual, import_react32, import_i18next2, import_react_i18next20, import_jsx_runtime46, DateFilter, today, usePresets, parseDateComparison, getDateFromComparison;
var init_date_filter = __esm({
  "src/components/table/data-table/data-table-filter/date-filter.tsx"() {
    "use strict";
    import_icons18 = require("@medusajs/icons");
    import_ui26 = require("@medusajs/ui");
    init_dist20();
    import_isEqual = __toESM(require("lodash/isEqual"));
    import_react32 = require("react");
    import_i18next2 = require("i18next");
    import_react_i18next20 = require("react-i18next");
    init_use_date();
    init_hooks2();
    init_context();
    init_filter_chip();
    import_jsx_runtime46 = require("react/jsx-runtime");
    DateFilter = ({
      filter,
      prefix,
      readonly,
      openOnMount
    }) => {
      const [open, setOpen] = (0, import_react32.useState)(openOnMount);
      const [showCustom, setShowCustom] = (0, import_react32.useState)(false);
      const { getFullDate } = useDate();
      const { key, label } = filter;
      const { removeFilter } = useDataTableFilterContext();
      const selectedParams = useSelectedParams({ param: key, prefix });
      const presets = usePresets();
      const handleSelectPreset = (value) => {
        selectedParams.add(JSON.stringify(value));
        setShowCustom(false);
      };
      const handleSelectCustom = () => {
        selectedParams.delete();
        setShowCustom((prev) => !prev);
      };
      const currentValue = selectedParams.get();
      const currentDateComparison = parseDateComparison(currentValue);
      const customStartValue = getDateFromComparison(currentDateComparison, "$gte");
      const customEndValue = getDateFromComparison(currentDateComparison, "$lte");
      const handleCustomDateChange = (value, pos) => {
        const key2 = pos === "start" ? "$gte" : "$lte";
        const dateValue = value ? value.toISOString() : void 0;
        selectedParams.add(
          JSON.stringify({
            ...currentDateComparison || {},
            [key2]: dateValue
          })
        );
      };
      const getDisplayValueFromPresets = () => {
        const preset = presets.find((p) => (0, import_isEqual.default)(p.value, currentDateComparison));
        return preset?.label;
      };
      const formatCustomDate = (date3) => {
        return date3 ? getFullDate({ date: date3 }) : void 0;
      };
      const getCustomDisplayValue = () => {
        const formattedDates = [customStartValue, customEndValue].map(
          formatCustomDate
        );
        return formattedDates.filter(Boolean).join(" - ");
      };
      const displayValue = getDisplayValueFromPresets() || getCustomDisplayValue();
      const [previousValue, setPreviousValue] = (0, import_react32.useState)(
        displayValue
      );
      const handleRemove = () => {
        selectedParams.delete();
        removeFilter(key);
      };
      let timeoutId = null;
      const handleOpenChange = (open2) => {
        setOpen(open2);
        setPreviousValue(displayValue);
        if (timeoutId) {
          clearTimeout(timeoutId);
        }
        if (!open2 && !currentValue.length) {
          timeoutId = setTimeout(() => {
            removeFilter(key);
          }, 200);
        }
      };
      return /* @__PURE__ */ (0, import_jsx_runtime46.jsxs)(Root23, { modal: true, open, onOpenChange: handleOpenChange, children: [
        /* @__PURE__ */ (0, import_jsx_runtime46.jsx)(
          filter_chip_default,
          {
            hadPreviousValue: !!previousValue,
            label,
            value: displayValue,
            onRemove: handleRemove,
            readonly
          }
        ),
        !readonly && /* @__PURE__ */ (0, import_jsx_runtime46.jsx)(Portal3, { children: /* @__PURE__ */ (0, import_jsx_runtime46.jsxs)(
          Content22,
          {
            "data-name": "date_filter_content",
            align: "start",
            sideOffset: 8,
            collisionPadding: 24,
            className: (0, import_ui26.clx)(
              "bg-ui-bg-base text-ui-fg-base shadow-elevation-flyout h-full max-h-[var(--radix-popper-available-height)] w-[300px] overflow-auto rounded-lg"
            ),
            onInteractOutside: (e) => {
              if (e.target instanceof HTMLElement) {
                if (e.target.attributes.getNamedItem("data-name")?.value === "filters_menu_content") {
                  e.preventDefault();
                }
              }
            },
            children: [
              /* @__PURE__ */ (0, import_jsx_runtime46.jsxs)("ul", { className: "w-full p-1", children: [
                presets.map((preset) => {
                  const isSelected2 = selectedParams.get().includes(JSON.stringify(preset.value));
                  return /* @__PURE__ */ (0, import_jsx_runtime46.jsx)("li", { children: /* @__PURE__ */ (0, import_jsx_runtime46.jsxs)(
                    "button",
                    {
                      className: "bg-ui-bg-base hover:bg-ui-bg-base-hover focus-visible:bg-ui-bg-base-pressed text-ui-fg-base data-[disabled]:text-ui-fg-disabled txt-compact-small relative flex w-full cursor-pointer select-none items-center rounded-md px-2 py-1.5 outline-none transition-colors data-[disabled]:pointer-events-none",
                      type: "button",
                      onClick: () => {
                        handleSelectPreset(preset.value);
                      },
                      children: [
                        /* @__PURE__ */ (0, import_jsx_runtime46.jsx)(
                          "div",
                          {
                            className: (0, import_ui26.clx)(
                              "transition-fg flex h-5 w-5 items-center justify-center",
                              {
                                "[&_svg]:invisible": !isSelected2
                              }
                            ),
                            children: /* @__PURE__ */ (0, import_jsx_runtime46.jsx)(import_icons18.EllipseMiniSolid, {})
                          }
                        ),
                        preset.label
                      ]
                    }
                  ) }, preset.label);
                }),
                /* @__PURE__ */ (0, import_jsx_runtime46.jsx)("li", { children: /* @__PURE__ */ (0, import_jsx_runtime46.jsxs)(
                  "button",
                  {
                    className: "bg-ui-bg-base hover:bg-ui-bg-base-hover focus-visible:bg-ui-bg-base-pressed text-ui-fg-base data-[disabled]:text-ui-fg-disabled txt-compact-small relative flex w-full cursor-pointer select-none items-center rounded-md px-2 py-1.5 outline-none transition-colors data-[disabled]:pointer-events-none",
                    type: "button",
                    onClick: handleSelectCustom,
                    children: [
                      /* @__PURE__ */ (0, import_jsx_runtime46.jsx)(
                        "div",
                        {
                          className: (0, import_ui26.clx)(
                            "transition-fg flex h-5 w-5 items-center justify-center",
                            {
                              "[&_svg]:invisible": !showCustom
                            }
                          ),
                          children: /* @__PURE__ */ (0, import_jsx_runtime46.jsx)(import_icons18.EllipseMiniSolid, {})
                        }
                      ),
                      (0, import_i18next2.t)("filters.date.custom")
                    ]
                  }
                ) })
              ] }),
              showCustom && /* @__PURE__ */ (0, import_jsx_runtime46.jsxs)("div", { className: "border-t px-1 pb-3 pt-1", children: [
                /* @__PURE__ */ (0, import_jsx_runtime46.jsxs)("div", { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime46.jsx)("div", { className: "px-2 py-1", children: /* @__PURE__ */ (0, import_jsx_runtime46.jsx)(import_ui26.Text, { size: "xsmall", leading: "compact", weight: "plus", children: (0, import_i18next2.t)("filters.date.from") }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime46.jsx)("div", { className: "px-2 py-1", children: /* @__PURE__ */ (0, import_jsx_runtime46.jsx)(
                    import_ui26.DatePicker,
                    {
                      modal: true,
                      maxValue: customEndValue,
                      value: customStartValue,
                      onChange: (d) => handleCustomDateChange(d, "start")
                    }
                  ) })
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime46.jsxs)("div", { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime46.jsx)("div", { className: "px-2 py-1", children: /* @__PURE__ */ (0, import_jsx_runtime46.jsx)(import_ui26.Text, { size: "xsmall", leading: "compact", weight: "plus", children: (0, import_i18next2.t)("filters.date.to") }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime46.jsx)("div", { className: "px-2 py-1", children: /* @__PURE__ */ (0, import_jsx_runtime46.jsx)(
                    import_ui26.DatePicker,
                    {
                      modal: true,
                      minValue: customStartValue,
                      value: customEndValue || void 0,
                      onChange: (d) => {
                        handleCustomDateChange(d, "end");
                      }
                    }
                  ) })
                ] })
              ] })
            ]
          }
        ) })
      ] });
    };
    today = /* @__PURE__ */ new Date();
    today.setHours(0, 0, 0, 0);
    usePresets = () => {
      const { t: t4 } = (0, import_react_i18next20.useTranslation)();
      return (0, import_react32.useMemo)(
        () => [
          {
            label: t4("filters.date.today"),
            value: {
              $gte: today.toISOString()
            }
          },
          {
            label: t4("filters.date.lastSevenDays"),
            value: {
              $gte: new Date(
                today.getTime() - 7 * 24 * 60 * 60 * 1e3
              ).toISOString()
              // 7 days ago
            }
          },
          {
            label: t4("filters.date.lastThirtyDays"),
            value: {
              $gte: new Date(
                today.getTime() - 30 * 24 * 60 * 60 * 1e3
              ).toISOString()
              // 30 days ago
            }
          },
          {
            label: t4("filters.date.lastNinetyDays"),
            value: {
              $gte: new Date(
                today.getTime() - 90 * 24 * 60 * 60 * 1e3
              ).toISOString()
              // 90 days ago
            }
          },
          {
            label: t4("filters.date.lastTwelveMonths"),
            value: {
              $gte: new Date(
                today.getTime() - 365 * 24 * 60 * 60 * 1e3
              ).toISOString()
              // 365 days ago
            }
          }
        ],
        [t4]
      );
    };
    parseDateComparison = (value) => {
      return value?.length ? JSON.parse(value.join(",")) : null;
    };
    getDateFromComparison = (comparison, key) => {
      return comparison?.[key] ? new Date(comparison[key]) : void 0;
    };
  }
});

// ../../../node_modules/@radix-ui/react-collection/dist/index.mjs
function createCollection(name) {
  const PROVIDER_NAME = name + "CollectionProvider";
  const [createCollectionContext, createCollectionScope2] = createContextScope(PROVIDER_NAME);
  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext(
    PROVIDER_NAME,
    { collectionRef: { current: null }, itemMap: /* @__PURE__ */ new Map() }
  );
  const CollectionProvider = (props) => {
    const { scope, children } = props;
    const ref = import_react33.default.useRef(null);
    const itemMap = import_react33.default.useRef(/* @__PURE__ */ new Map()).current;
    return /* @__PURE__ */ (0, import_jsx_runtime47.jsx)(CollectionProviderImpl, { scope, itemMap, collectionRef: ref, children });
  };
  CollectionProvider.displayName = PROVIDER_NAME;
  const COLLECTION_SLOT_NAME = name + "CollectionSlot";
  const CollectionSlot = import_react33.default.forwardRef(
    (props, forwardedRef) => {
      const { scope, children } = props;
      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);
      const composedRefs = useComposedRefs(forwardedRef, context.collectionRef);
      return /* @__PURE__ */ (0, import_jsx_runtime47.jsx)(Slot, { ref: composedRefs, children });
    }
  );
  CollectionSlot.displayName = COLLECTION_SLOT_NAME;
  const ITEM_SLOT_NAME = name + "CollectionItemSlot";
  const ITEM_DATA_ATTR = "data-radix-collection-item";
  const CollectionItemSlot = import_react33.default.forwardRef(
    (props, forwardedRef) => {
      const { scope, children, ...itemData } = props;
      const ref = import_react33.default.useRef(null);
      const composedRefs = useComposedRefs(forwardedRef, ref);
      const context = useCollectionContext(ITEM_SLOT_NAME, scope);
      import_react33.default.useEffect(() => {
        context.itemMap.set(ref, { ref, ...itemData });
        return () => void context.itemMap.delete(ref);
      });
      return /* @__PURE__ */ (0, import_jsx_runtime47.jsx)(Slot, { ...{ [ITEM_DATA_ATTR]: "" }, ref: composedRefs, children });
    }
  );
  CollectionItemSlot.displayName = ITEM_SLOT_NAME;
  function useCollection3(scope) {
    const context = useCollectionContext(name + "CollectionConsumer", scope);
    const getItems = import_react33.default.useCallback(() => {
      const collectionNode = context.collectionRef.current;
      if (!collectionNode) return [];
      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));
      const items = Array.from(context.itemMap.values());
      const orderedItems = items.sort(
        (a, b) => orderedNodes.indexOf(a.ref.current) - orderedNodes.indexOf(b.ref.current)
      );
      return orderedItems;
    }, [context.collectionRef, context.itemMap]);
    return getItems;
  }
  return [
    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },
    useCollection3,
    createCollectionScope2
  ];
}
var import_react33, import_jsx_runtime47;
var init_dist21 = __esm({
  "../../../node_modules/@radix-ui/react-collection/dist/index.mjs"() {
    "use strict";
    "use client";
    import_react33 = __toESM(require("react"), 1);
    init_dist4();
    init_dist();
    init_dist2();
    import_jsx_runtime47 = require("react/jsx-runtime");
  }
});

// ../../../node_modules/@radix-ui/react-direction/dist/index.mjs
function useDirection(localDir) {
  const globalDir = React31.useContext(DirectionContext);
  return localDir || globalDir || "ltr";
}
var React31, import_jsx_runtime48, DirectionContext;
var init_dist22 = __esm({
  "../../../node_modules/@radix-ui/react-direction/dist/index.mjs"() {
    "use strict";
    React31 = __toESM(require("react"), 1);
    import_jsx_runtime48 = require("react/jsx-runtime");
    DirectionContext = React31.createContext(void 0);
  }
});

// ../../../node_modules/@radix-ui/react-roving-focus/dist/index.mjs
function getDirectionAwareKey(key, dir) {
  if (dir !== "rtl") return key;
  return key === "ArrowLeft" ? "ArrowRight" : key === "ArrowRight" ? "ArrowLeft" : key;
}
function getFocusIntent(event, orientation, dir) {
  const key = getDirectionAwareKey(event.key, dir);
  if (orientation === "vertical" && ["ArrowLeft", "ArrowRight"].includes(key)) return void 0;
  if (orientation === "horizontal" && ["ArrowUp", "ArrowDown"].includes(key)) return void 0;
  return MAP_KEY_TO_FOCUS_INTENT[key];
}
function focusFirst2(candidates, preventScroll = false) {
  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
  for (const candidate of candidates) {
    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;
    candidate.focus({ preventScroll });
    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;
  }
}
function wrapArray(array17, startIndex) {
  return array17.map((_, index2) => array17[(startIndex + index2) % array17.length]);
}
var React32, import_jsx_runtime49, ENTRY_FOCUS, EVENT_OPTIONS2, GROUP_NAME, Collection, useCollection2, createCollectionScope, createRovingFocusGroupContext, createRovingFocusGroupScope, RovingFocusProvider, useRovingFocusContext, RovingFocusGroup, RovingFocusGroupImpl, ITEM_NAME, RovingFocusGroupItem, MAP_KEY_TO_FOCUS_INTENT, Root7, Item2;
var init_dist23 = __esm({
  "../../../node_modules/@radix-ui/react-roving-focus/dist/index.mjs"() {
    "use strict";
    "use client";
    React32 = __toESM(require("react"), 1);
    init_dist3();
    init_dist21();
    init_dist();
    init_dist4();
    init_dist6();
    init_dist9();
    init_dist7();
    init_dist8();
    init_dist22();
    import_jsx_runtime49 = require("react/jsx-runtime");
    ENTRY_FOCUS = "rovingFocusGroup.onEntryFocus";
    EVENT_OPTIONS2 = { bubbles: false, cancelable: true };
    GROUP_NAME = "RovingFocusGroup";
    [Collection, useCollection2, createCollectionScope] = createCollection(GROUP_NAME);
    [createRovingFocusGroupContext, createRovingFocusGroupScope] = createContextScope(
      GROUP_NAME,
      [createCollectionScope]
    );
    [RovingFocusProvider, useRovingFocusContext] = createRovingFocusGroupContext(GROUP_NAME);
    RovingFocusGroup = React32.forwardRef(
      (props, forwardedRef) => {
        return /* @__PURE__ */ (0, import_jsx_runtime49.jsx)(Collection.Provider, { scope: props.__scopeRovingFocusGroup, children: /* @__PURE__ */ (0, import_jsx_runtime49.jsx)(Collection.Slot, { scope: props.__scopeRovingFocusGroup, children: /* @__PURE__ */ (0, import_jsx_runtime49.jsx)(RovingFocusGroupImpl, { ...props, ref: forwardedRef }) }) });
      }
    );
    RovingFocusGroup.displayName = GROUP_NAME;
    RovingFocusGroupImpl = React32.forwardRef((props, forwardedRef) => {
      const {
        __scopeRovingFocusGroup,
        orientation,
        loop = false,
        dir,
        currentTabStopId: currentTabStopIdProp,
        defaultCurrentTabStopId,
        onCurrentTabStopIdChange,
        onEntryFocus,
        preventScrollOnEntryFocus = false,
        ...groupProps
      } = props;
      const ref = React32.useRef(null);
      const composedRefs = useComposedRefs(forwardedRef, ref);
      const direction = useDirection(dir);
      const [currentTabStopId = null, setCurrentTabStopId] = useControllableState({
        prop: currentTabStopIdProp,
        defaultProp: defaultCurrentTabStopId,
        onChange: onCurrentTabStopIdChange
      });
      const [isTabbingBackOut, setIsTabbingBackOut] = React32.useState(false);
      const handleEntryFocus = useCallbackRef(onEntryFocus);
      const getItems = useCollection2(__scopeRovingFocusGroup);
      const isClickFocusRef = React32.useRef(false);
      const [focusableItemsCount, setFocusableItemsCount] = React32.useState(0);
      React32.useEffect(() => {
        const node = ref.current;
        if (node) {
          node.addEventListener(ENTRY_FOCUS, handleEntryFocus);
          return () => node.removeEventListener(ENTRY_FOCUS, handleEntryFocus);
        }
      }, [handleEntryFocus]);
      return /* @__PURE__ */ (0, import_jsx_runtime49.jsx)(
        RovingFocusProvider,
        {
          scope: __scopeRovingFocusGroup,
          orientation,
          dir: direction,
          loop,
          currentTabStopId,
          onItemFocus: React32.useCallback(
            (tabStopId) => setCurrentTabStopId(tabStopId),
            [setCurrentTabStopId]
          ),
          onItemShiftTab: React32.useCallback(() => setIsTabbingBackOut(true), []),
          onFocusableItemAdd: React32.useCallback(
            () => setFocusableItemsCount((prevCount) => prevCount + 1),
            []
          ),
          onFocusableItemRemove: React32.useCallback(
            () => setFocusableItemsCount((prevCount) => prevCount - 1),
            []
          ),
          children: /* @__PURE__ */ (0, import_jsx_runtime49.jsx)(
            Primitive.div,
            {
              tabIndex: isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0,
              "data-orientation": orientation,
              ...groupProps,
              ref: composedRefs,
              style: { outline: "none", ...props.style },
              onMouseDown: composeEventHandlers(props.onMouseDown, () => {
                isClickFocusRef.current = true;
              }),
              onFocus: composeEventHandlers(props.onFocus, (event) => {
                const isKeyboardFocus = !isClickFocusRef.current;
                if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {
                  const entryFocusEvent = new CustomEvent(ENTRY_FOCUS, EVENT_OPTIONS2);
                  event.currentTarget.dispatchEvent(entryFocusEvent);
                  if (!entryFocusEvent.defaultPrevented) {
                    const items = getItems().filter((item) => item.focusable);
                    const activeItem = items.find((item) => item.active);
                    const currentItem = items.find((item) => item.id === currentTabStopId);
                    const candidateItems = [activeItem, currentItem, ...items].filter(
                      Boolean
                    );
                    const candidateNodes = candidateItems.map((item) => item.ref.current);
                    focusFirst2(candidateNodes, preventScrollOnEntryFocus);
                  }
                }
                isClickFocusRef.current = false;
              }),
              onBlur: composeEventHandlers(props.onBlur, () => setIsTabbingBackOut(false))
            }
          )
        }
      );
    });
    ITEM_NAME = "RovingFocusGroupItem";
    RovingFocusGroupItem = React32.forwardRef(
      (props, forwardedRef) => {
        const {
          __scopeRovingFocusGroup,
          focusable = true,
          active = false,
          tabStopId,
          ...itemProps
        } = props;
        const autoId = useId2();
        const id2 = tabStopId || autoId;
        const context = useRovingFocusContext(ITEM_NAME, __scopeRovingFocusGroup);
        const isCurrentTabStop = context.currentTabStopId === id2;
        const getItems = useCollection2(__scopeRovingFocusGroup);
        const { onFocusableItemAdd, onFocusableItemRemove } = context;
        React32.useEffect(() => {
          if (focusable) {
            onFocusableItemAdd();
            return () => onFocusableItemRemove();
          }
        }, [focusable, onFocusableItemAdd, onFocusableItemRemove]);
        return /* @__PURE__ */ (0, import_jsx_runtime49.jsx)(
          Collection.ItemSlot,
          {
            scope: __scopeRovingFocusGroup,
            id: id2,
            focusable,
            active,
            children: /* @__PURE__ */ (0, import_jsx_runtime49.jsx)(
              Primitive.span,
              {
                tabIndex: isCurrentTabStop ? 0 : -1,
                "data-orientation": context.orientation,
                ...itemProps,
                ref: forwardedRef,
                onMouseDown: composeEventHandlers(props.onMouseDown, (event) => {
                  if (!focusable) event.preventDefault();
                  else context.onItemFocus(id2);
                }),
                onFocus: composeEventHandlers(props.onFocus, () => context.onItemFocus(id2)),
                onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {
                  if (event.key === "Tab" && event.shiftKey) {
                    context.onItemShiftTab();
                    return;
                  }
                  if (event.target !== event.currentTarget) return;
                  const focusIntent = getFocusIntent(event, context.orientation, context.dir);
                  if (focusIntent !== void 0) {
                    if (event.metaKey || event.ctrlKey || event.altKey || event.shiftKey) return;
                    event.preventDefault();
                    const items = getItems().filter((item) => item.focusable);
                    let candidateNodes = items.map((item) => item.ref.current);
                    if (focusIntent === "last") candidateNodes.reverse();
                    else if (focusIntent === "prev" || focusIntent === "next") {
                      if (focusIntent === "prev") candidateNodes.reverse();
                      const currentIndex = candidateNodes.indexOf(event.currentTarget);
                      candidateNodes = context.loop ? wrapArray(candidateNodes, currentIndex + 1) : candidateNodes.slice(currentIndex + 1);
                    }
                    setTimeout(() => focusFirst2(candidateNodes));
                  }
                })
              }
            )
          }
        );
      }
    );
    RovingFocusGroupItem.displayName = ITEM_NAME;
    MAP_KEY_TO_FOCUS_INTENT = {
      ArrowLeft: "prev",
      ArrowUp: "prev",
      ArrowRight: "next",
      ArrowDown: "next",
      PageUp: "first",
      Home: "first",
      PageDown: "last",
      End: "last"
    };
    Root7 = RovingFocusGroup;
    Item2 = RovingFocusGroupItem;
  }
});

// ../../../node_modules/@radix-ui/react-use-previous/dist/index.mjs
function usePrevious(value) {
  const ref = React33.useRef({ value, previous: value });
  return React33.useMemo(() => {
    if (ref.current.value !== value) {
      ref.current.previous = ref.current.value;
      ref.current.value = value;
    }
    return ref.current.previous;
  }, [value]);
}
var React33;
var init_dist24 = __esm({
  "../../../node_modules/@radix-ui/react-use-previous/dist/index.mjs"() {
    "use strict";
    React33 = __toESM(require("react"), 1);
  }
});

// ../../../node_modules/@radix-ui/react-radio-group/dist/index.mjs
function getState3(checked) {
  return checked ? "checked" : "unchecked";
}
var React210, React34, import_jsx_runtime50, import_jsx_runtime51, RADIO_NAME, createRadioContext, createRadioScope, RadioProvider, useRadioContext, Radio, INDICATOR_NAME, RadioIndicator, BubbleInput, ARROW_KEYS, RADIO_GROUP_NAME, createRadioGroupContext, createRadioGroupScope, useRovingFocusGroupScope, useRadioScope, RadioGroupProvider, useRadioGroupContext, RadioGroup, ITEM_NAME2, RadioGroupItem, INDICATOR_NAME2, RadioGroupIndicator, Root24, Item22, Indicator;
var init_dist25 = __esm({
  "../../../node_modules/@radix-ui/react-radio-group/dist/index.mjs"() {
    "use strict";
    "use client";
    React210 = __toESM(require("react"), 1);
    init_dist3();
    init_dist();
    init_dist4();
    init_dist9();
    init_dist23();
    init_dist23();
    init_dist8();
    init_dist22();
    React34 = __toESM(require("react"), 1);
    init_dist3();
    init_dist();
    init_dist4();
    init_dist18();
    init_dist24();
    init_dist14();
    init_dist9();
    import_jsx_runtime50 = require("react/jsx-runtime");
    import_jsx_runtime51 = require("react/jsx-runtime");
    RADIO_NAME = "Radio";
    [createRadioContext, createRadioScope] = createContextScope(RADIO_NAME);
    [RadioProvider, useRadioContext] = createRadioContext(RADIO_NAME);
    Radio = React34.forwardRef(
      (props, forwardedRef) => {
        const {
          __scopeRadio,
          name,
          checked = false,
          required,
          disabled,
          value = "on",
          onCheck,
          ...radioProps
        } = props;
        const [button, setButton] = React34.useState(null);
        const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));
        const hasConsumerStoppedPropagationRef = React34.useRef(false);
        const isFormControl = button ? Boolean(button.closest("form")) : true;
        return /* @__PURE__ */ (0, import_jsx_runtime50.jsxs)(RadioProvider, { scope: __scopeRadio, checked, disabled, children: [
          /* @__PURE__ */ (0, import_jsx_runtime50.jsx)(
            Primitive.button,
            {
              type: "button",
              role: "radio",
              "aria-checked": checked,
              "data-state": getState3(checked),
              "data-disabled": disabled ? "" : void 0,
              disabled,
              value,
              ...radioProps,
              ref: composedRefs,
              onClick: composeEventHandlers(props.onClick, (event) => {
                if (!checked) onCheck?.();
                if (isFormControl) {
                  hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();
                  if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();
                }
              })
            }
          ),
          isFormControl && /* @__PURE__ */ (0, import_jsx_runtime50.jsx)(
            BubbleInput,
            {
              control: button,
              bubbles: !hasConsumerStoppedPropagationRef.current,
              name,
              value,
              checked,
              required,
              disabled,
              style: { transform: "translateX(-100%)" }
            }
          )
        ] });
      }
    );
    Radio.displayName = RADIO_NAME;
    INDICATOR_NAME = "RadioIndicator";
    RadioIndicator = React34.forwardRef(
      (props, forwardedRef) => {
        const { __scopeRadio, forceMount, ...indicatorProps } = props;
        const context = useRadioContext(INDICATOR_NAME, __scopeRadio);
        return /* @__PURE__ */ (0, import_jsx_runtime50.jsx)(Presence, { present: forceMount || context.checked, children: /* @__PURE__ */ (0, import_jsx_runtime50.jsx)(
          Primitive.span,
          {
            "data-state": getState3(context.checked),
            "data-disabled": context.disabled ? "" : void 0,
            ...indicatorProps,
            ref: forwardedRef
          }
        ) });
      }
    );
    RadioIndicator.displayName = INDICATOR_NAME;
    BubbleInput = (props) => {
      const { control, checked, bubbles = true, ...inputProps } = props;
      const ref = React34.useRef(null);
      const prevChecked = usePrevious(checked);
      const controlSize = useSize(control);
      React34.useEffect(() => {
        const input = ref.current;
        const inputProto = window.HTMLInputElement.prototype;
        const descriptor = Object.getOwnPropertyDescriptor(inputProto, "checked");
        const setChecked = descriptor.set;
        if (prevChecked !== checked && setChecked) {
          const event = new Event("click", { bubbles });
          setChecked.call(input, checked);
          input.dispatchEvent(event);
        }
      }, [prevChecked, checked, bubbles]);
      return /* @__PURE__ */ (0, import_jsx_runtime50.jsx)(
        "input",
        {
          type: "radio",
          "aria-hidden": true,
          defaultChecked: checked,
          ...inputProps,
          tabIndex: -1,
          ref,
          style: {
            ...props.style,
            ...controlSize,
            position: "absolute",
            pointerEvents: "none",
            opacity: 0,
            margin: 0
          }
        }
      );
    };
    ARROW_KEYS = ["ArrowUp", "ArrowDown", "ArrowLeft", "ArrowRight"];
    RADIO_GROUP_NAME = "RadioGroup";
    [createRadioGroupContext, createRadioGroupScope] = createContextScope(RADIO_GROUP_NAME, [
      createRovingFocusGroupScope,
      createRadioScope
    ]);
    useRovingFocusGroupScope = createRovingFocusGroupScope();
    useRadioScope = createRadioScope();
    [RadioGroupProvider, useRadioGroupContext] = createRadioGroupContext(RADIO_GROUP_NAME);
    RadioGroup = React210.forwardRef(
      (props, forwardedRef) => {
        const {
          __scopeRadioGroup,
          name,
          defaultValue,
          value: valueProp,
          required = false,
          disabled = false,
          orientation,
          dir,
          loop = true,
          onValueChange,
          ...groupProps
        } = props;
        const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeRadioGroup);
        const direction = useDirection(dir);
        const [value, setValue] = useControllableState({
          prop: valueProp,
          defaultProp: defaultValue,
          onChange: onValueChange
        });
        return /* @__PURE__ */ (0, import_jsx_runtime51.jsx)(
          RadioGroupProvider,
          {
            scope: __scopeRadioGroup,
            name,
            required,
            disabled,
            value,
            onValueChange: setValue,
            children: /* @__PURE__ */ (0, import_jsx_runtime51.jsx)(
              Root7,
              {
                asChild: true,
                ...rovingFocusGroupScope,
                orientation,
                dir: direction,
                loop,
                children: /* @__PURE__ */ (0, import_jsx_runtime51.jsx)(
                  Primitive.div,
                  {
                    role: "radiogroup",
                    "aria-required": required,
                    "aria-orientation": orientation,
                    "data-disabled": disabled ? "" : void 0,
                    dir: direction,
                    ...groupProps,
                    ref: forwardedRef
                  }
                )
              }
            )
          }
        );
      }
    );
    RadioGroup.displayName = RADIO_GROUP_NAME;
    ITEM_NAME2 = "RadioGroupItem";
    RadioGroupItem = React210.forwardRef(
      (props, forwardedRef) => {
        const { __scopeRadioGroup, disabled, ...itemProps } = props;
        const context = useRadioGroupContext(ITEM_NAME2, __scopeRadioGroup);
        const isDisabled = context.disabled || disabled;
        const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeRadioGroup);
        const radioScope = useRadioScope(__scopeRadioGroup);
        const ref = React210.useRef(null);
        const composedRefs = useComposedRefs(forwardedRef, ref);
        const checked = context.value === itemProps.value;
        const isArrowKeyPressedRef = React210.useRef(false);
        React210.useEffect(() => {
          const handleKeyDown = (event) => {
            if (ARROW_KEYS.includes(event.key)) {
              isArrowKeyPressedRef.current = true;
            }
          };
          const handleKeyUp = () => isArrowKeyPressedRef.current = false;
          document.addEventListener("keydown", handleKeyDown);
          document.addEventListener("keyup", handleKeyUp);
          return () => {
            document.removeEventListener("keydown", handleKeyDown);
            document.removeEventListener("keyup", handleKeyUp);
          };
        }, []);
        return /* @__PURE__ */ (0, import_jsx_runtime51.jsx)(
          Item2,
          {
            asChild: true,
            ...rovingFocusGroupScope,
            focusable: !isDisabled,
            active: checked,
            children: /* @__PURE__ */ (0, import_jsx_runtime51.jsx)(
              Radio,
              {
                disabled: isDisabled,
                required: context.required,
                checked,
                ...radioScope,
                ...itemProps,
                name: context.name,
                ref: composedRefs,
                onCheck: () => context.onValueChange(itemProps.value),
                onKeyDown: composeEventHandlers((event) => {
                  if (event.key === "Enter") event.preventDefault();
                }),
                onFocus: composeEventHandlers(itemProps.onFocus, () => {
                  if (isArrowKeyPressedRef.current) ref.current?.click();
                })
              }
            )
          }
        );
      }
    );
    RadioGroupItem.displayName = ITEM_NAME2;
    INDICATOR_NAME2 = "RadioGroupIndicator";
    RadioGroupIndicator = React210.forwardRef(
      (props, forwardedRef) => {
        const { __scopeRadioGroup, ...indicatorProps } = props;
        const radioScope = useRadioScope(__scopeRadioGroup);
        return /* @__PURE__ */ (0, import_jsx_runtime51.jsx)(RadioIndicator, { ...radioScope, ...indicatorProps, ref: forwardedRef });
      }
    );
    RadioGroupIndicator.displayName = INDICATOR_NAME2;
    Root24 = RadioGroup;
    Item22 = RadioGroupItem;
    Indicator = RadioGroupIndicator;
  }
});

// src/components/table/data-table/data-table-filter/number-filter.tsx
var import_icons19, import_ui27, import_lodash, import_react34, import_react_i18next21, import_jsx_runtime52, NumberFilter, parseDisplayValue, parseValue, getValue, getOperator;
var init_number_filter = __esm({
  "src/components/table/data-table/data-table-filter/number-filter.tsx"() {
    "use strict";
    import_icons19 = require("@medusajs/icons");
    import_ui27 = require("@medusajs/ui");
    init_dist20();
    init_dist25();
    import_lodash = require("lodash");
    import_react34 = require("react");
    import_react_i18next21 = require("react-i18next");
    init_hooks2();
    init_context();
    init_filter_chip();
    import_jsx_runtime52 = require("react/jsx-runtime");
    NumberFilter = ({
      filter,
      prefix,
      readonly,
      openOnMount
    }) => {
      const { t: t4 } = (0, import_react_i18next21.useTranslation)();
      const [open, setOpen] = (0, import_react34.useState)(openOnMount);
      const { key, label } = filter;
      const { removeFilter } = useDataTableFilterContext();
      const selectedParams = useSelectedParams({
        param: key,
        prefix,
        multiple: false
      });
      const currentValue = selectedParams.get();
      const [previousValue, setPreviousValue] = (0, import_react34.useState)(
        currentValue
      );
      const [operator, setOperator] = (0, import_react34.useState)(
        getOperator(currentValue)
      );
      const debouncedOnChange = (0, import_react34.useCallback)(
        (0, import_lodash.debounce)((e, operator2) => {
          const value = e.target.value;
          const curr = JSON.parse(currentValue?.join(",") || "{}");
          const isCurrentNumber = !isNaN(Number(curr));
          const handleValue = (operator3) => {
            if (!value && isCurrentNumber) {
              selectedParams.delete();
              return;
            }
            if (curr && !value) {
              delete curr[operator3];
              selectedParams.add(JSON.stringify(curr));
              return;
            }
            if (!curr) {
              selectedParams.add(JSON.stringify({ [operator3]: value }));
              return;
            }
            selectedParams.add(JSON.stringify({ ...curr, [operator3]: value }));
          };
          switch (operator2) {
            case "eq":
              if (!value) {
                selectedParams.delete();
              } else {
                selectedParams.add(value);
              }
              break;
            case "lt":
            case "gt":
              handleValue(operator2);
              break;
          }
        }, 500),
        [selectedParams, currentValue]
      );
      (0, import_react34.useEffect)(() => {
        return () => {
          debouncedOnChange.cancel();
        };
      }, [debouncedOnChange]);
      let timeoutId = null;
      const handleOpenChange = (open2) => {
        setOpen(open2);
        setPreviousValue(currentValue);
        if (timeoutId) {
          clearTimeout(timeoutId);
        }
        if (!open2 && !currentValue.length) {
          timeoutId = setTimeout(() => {
            removeFilter(key);
          }, 200);
        }
      };
      const handleRemove = () => {
        selectedParams.delete();
        removeFilter(key);
      };
      const operators = [
        {
          operator: "exact",
          label: t4("filters.compare.exact")
        },
        {
          operator: "range",
          label: t4("filters.compare.range")
        }
      ];
      const GT_KEY = `${key}-gt`;
      const LT_KEY = `${key}-lt`;
      const EQ_KEY = key;
      const displayValue = parseDisplayValue(currentValue, t4);
      const previousDisplayValue = parseDisplayValue(previousValue, t4);
      return /* @__PURE__ */ (0, import_jsx_runtime52.jsxs)(Root23, { modal: true, open, onOpenChange: handleOpenChange, children: [
        /* @__PURE__ */ (0, import_jsx_runtime52.jsx)(
          filter_chip_default,
          {
            hasOperator: true,
            hadPreviousValue: !!previousDisplayValue,
            label,
            value: displayValue,
            onRemove: handleRemove,
            readonly
          }
        ),
        !readonly && /* @__PURE__ */ (0, import_jsx_runtime52.jsx)(Portal3, { children: /* @__PURE__ */ (0, import_jsx_runtime52.jsxs)(
          Content22,
          {
            "data-name": "number_filter_content",
            align: "start",
            sideOffset: 8,
            collisionPadding: 24,
            className: (0, import_ui27.clx)(
              "bg-ui-bg-base text-ui-fg-base shadow-elevation-flyout max-h-[var(--radix-popper-available-height)] w-[300px] divide-y overflow-y-auto rounded-lg outline-none"
            ),
            onInteractOutside: (e) => {
              if (e.target instanceof HTMLElement) {
                if (e.target.attributes.getNamedItem("data-name")?.value === "filters_menu_content") {
                  e.preventDefault();
                }
              }
            },
            children: [
              /* @__PURE__ */ (0, import_jsx_runtime52.jsx)("div", { className: "p-1", children: /* @__PURE__ */ (0, import_jsx_runtime52.jsx)(
                Root24,
                {
                  value: operator,
                  onValueChange: (val) => setOperator(val),
                  className: "flex flex-col items-start",
                  orientation: "vertical",
                  autoFocus: true,
                  children: operators.map((o) => /* @__PURE__ */ (0, import_jsx_runtime52.jsxs)(
                    Item22,
                    {
                      value: o.operator,
                      className: "txt-compact-small hover:bg-ui-bg-base-hover focus-visible:bg-ui-bg-base-hover active:bg-ui-bg-base-pressed transition-fg grid w-full grid-cols-[20px_1fr] gap-2 rounded-[4px] px-2 py-1.5 text-left outline-none",
                      children: [
                        /* @__PURE__ */ (0, import_jsx_runtime52.jsx)("div", { className: "size-5", children: /* @__PURE__ */ (0, import_jsx_runtime52.jsx)(Indicator, { children: /* @__PURE__ */ (0, import_jsx_runtime52.jsx)(import_icons19.EllipseMiniSolid, {}) }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime52.jsx)("span", { className: "w-full", children: o.label })
                      ]
                    },
                    o.operator
                  ))
                }
              ) }),
              /* @__PURE__ */ (0, import_jsx_runtime52.jsx)("div", { children: operator === "range" ? /* @__PURE__ */ (0, import_jsx_runtime52.jsxs)("div", { className: "px-1 pb-3 pt-1", children: [
                /* @__PURE__ */ (0, import_jsx_runtime52.jsx)("div", { className: "px-2 py-1.5", children: /* @__PURE__ */ (0, import_jsx_runtime52.jsx)(import_ui27.Label, { size: "xsmall", weight: "plus", htmlFor: GT_KEY, children: t4("filters.compare.greaterThan") }) }),
                /* @__PURE__ */ (0, import_jsx_runtime52.jsx)("div", { className: "px-2 py-0.5", children: /* @__PURE__ */ (0, import_jsx_runtime52.jsx)(
                  import_ui27.Input,
                  {
                    name: GT_KEY,
                    size: "small",
                    type: "number",
                    defaultValue: getValue(currentValue, "gt"),
                    onChange: (e) => debouncedOnChange(e, "gt")
                  }
                ) }),
                /* @__PURE__ */ (0, import_jsx_runtime52.jsx)("div", { className: "px-2 py-1.5", children: /* @__PURE__ */ (0, import_jsx_runtime52.jsx)(import_ui27.Label, { size: "xsmall", weight: "plus", htmlFor: LT_KEY, children: t4("filters.compare.lessThan") }) }),
                /* @__PURE__ */ (0, import_jsx_runtime52.jsx)("div", { className: "px-2 py-0.5", children: /* @__PURE__ */ (0, import_jsx_runtime52.jsx)(
                  import_ui27.Input,
                  {
                    name: LT_KEY,
                    size: "small",
                    type: "number",
                    defaultValue: getValue(currentValue, "lt"),
                    onChange: (e) => debouncedOnChange(e, "lt")
                  }
                ) })
              ] }, "range") : /* @__PURE__ */ (0, import_jsx_runtime52.jsxs)("div", { className: "px-1 pb-3 pt-1", children: [
                /* @__PURE__ */ (0, import_jsx_runtime52.jsx)("div", { className: "px-2 py-1.5", children: /* @__PURE__ */ (0, import_jsx_runtime52.jsx)(import_ui27.Label, { size: "xsmall", weight: "plus", htmlFor: EQ_KEY, children: label }) }),
                /* @__PURE__ */ (0, import_jsx_runtime52.jsx)("div", { className: "px-2 py-0.5", children: /* @__PURE__ */ (0, import_jsx_runtime52.jsx)(
                  import_ui27.Input,
                  {
                    name: EQ_KEY,
                    size: "small",
                    type: "number",
                    defaultValue: getValue(currentValue, "eq"),
                    onChange: (e) => debouncedOnChange(e, "eq")
                  }
                ) })
              ] }, "exact") })
            ]
          }
        ) })
      ] });
    };
    parseDisplayValue = (value, t4) => {
      const parsed = JSON.parse(value?.join(",") || "{}");
      let displayValue = "";
      if (typeof parsed === "object") {
        const parts = [];
        if (parsed.gt) {
          parts.push(t4("filters.compare.greaterThanLabel", { value: parsed.gt }));
        }
        if (parsed.lt) {
          parts.push(
            t4("filters.compare.lessThanLabel", {
              value: parsed.lt
            })
          );
        }
        displayValue = parts.join(` ${t4("filters.compare.andLabel")} `);
      }
      if (typeof parsed === "number") {
        displayValue = parsed.toString();
      }
      return displayValue;
    };
    parseValue = (value) => {
      if (!value) {
        return void 0;
      }
      const val = value.join(",");
      if (!val) {
        return void 0;
      }
      return JSON.parse(val);
    };
    getValue = (value, key) => {
      const parsed = parseValue(value);
      if (typeof parsed === "object") {
        return parsed[key];
      }
      if (typeof parsed === "number" && key === "eq") {
        return parsed;
      }
      return void 0;
    };
    getOperator = (value) => {
      const parsed = parseValue(value);
      return typeof parsed === "object" ? "range" : "exact";
    };
  }
});

// src/components/table/data-table/data-table-filter/select-filter.tsx
var import_icons20, import_ui28, import_cmdk2, import_react35, import_react_i18next22, import_jsx_runtime53, SelectFilter;
var init_select_filter = __esm({
  "src/components/table/data-table/data-table-filter/select-filter.tsx"() {
    "use strict";
    import_icons20 = require("@medusajs/icons");
    import_ui28 = require("@medusajs/ui");
    init_dist20();
    import_cmdk2 = require("cmdk");
    import_react35 = require("react");
    import_react_i18next22 = require("react-i18next");
    init_hooks2();
    init_context();
    init_filter_chip();
    import_jsx_runtime53 = require("react/jsx-runtime");
    SelectFilter = ({
      filter,
      prefix,
      readonly,
      multiple,
      searchable,
      options,
      openOnMount
    }) => {
      const [open, setOpen] = (0, import_react35.useState)(openOnMount);
      const [search, setSearch] = (0, import_react35.useState)("");
      const [searchRef, setSearchRef] = (0, import_react35.useState)(null);
      const { t: t4 } = (0, import_react_i18next22.useTranslation)();
      const { removeFilter } = useDataTableFilterContext();
      const { key, label } = filter;
      const selectedParams = useSelectedParams({ param: key, prefix, multiple });
      const currentValue = selectedParams.get();
      const labelValues = currentValue.map((v) => options.find((o) => o.value === v)?.label).filter(Boolean);
      const [previousValue, setPreviousValue] = (0, import_react35.useState)(labelValues);
      const handleRemove = () => {
        selectedParams.delete();
        removeFilter(key);
      };
      let timeoutId = null;
      const handleOpenChange = (open2) => {
        setOpen(open2);
        setPreviousValue(labelValues);
        if (timeoutId) {
          clearTimeout(timeoutId);
        }
        if (!open2 && !currentValue.length) {
          timeoutId = setTimeout(() => {
            removeFilter(key);
          }, 200);
        }
      };
      const handleClearSearch = () => {
        setSearch("");
        if (searchRef) {
          searchRef.focus();
        }
      };
      const handleSelect = (value) => {
        const isSelected2 = selectedParams.get().includes(String(value));
        if (isSelected2) {
          selectedParams.delete(String(value));
        } else {
          selectedParams.add(String(value));
        }
      };
      const normalizedValues = labelValues ? Array.isArray(labelValues) ? labelValues : [labelValues] : null;
      const normalizedPrev = previousValue ? Array.isArray(previousValue) ? previousValue : [previousValue] : null;
      return /* @__PURE__ */ (0, import_jsx_runtime53.jsxs)(Root23, { modal: true, open, onOpenChange: handleOpenChange, children: [
        /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(
          filter_chip_default,
          {
            hasOperator: true,
            hadPreviousValue: !!normalizedPrev?.length,
            readonly,
            label,
            value: normalizedValues?.join(", "),
            onRemove: handleRemove
          }
        ),
        !readonly && /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(Portal3, { children: /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(
          Content22,
          {
            hideWhenDetached: true,
            align: "start",
            sideOffset: 8,
            collisionPadding: 8,
            className: (0, import_ui28.clx)(
              "bg-ui-bg-base text-ui-fg-base shadow-elevation-flyout z-[1] h-full max-h-[200px] w-[300px] overflow-hidden rounded-lg outline-none"
            ),
            onInteractOutside: (e) => {
              if (e.target instanceof HTMLElement) {
                if (e.target.attributes.getNamedItem("data-name")?.value === "filters_menu_content") {
                  e.preventDefault();
                  e.stopPropagation();
                }
              }
            },
            children: /* @__PURE__ */ (0, import_jsx_runtime53.jsxs)(import_cmdk2.Command, { className: "h-full", children: [
              searchable && /* @__PURE__ */ (0, import_jsx_runtime53.jsx)("div", { className: "border-b p-1", children: /* @__PURE__ */ (0, import_jsx_runtime53.jsxs)("div", { className: "grid grid-cols-[1fr_20px] gap-x-2 rounded-md px-2 py-1", children: [
                /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(
                  import_cmdk2.Command.Input,
                  {
                    ref: setSearchRef,
                    value: search,
                    onValueChange: setSearch,
                    className: "txt-compact-small placeholder:text-ui-fg-muted bg-transparent outline-none",
                    placeholder: "Search"
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime53.jsx)("div", { className: "flex h-5 w-5 items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(
                  "button",
                  {
                    disabled: !search,
                    onClick: handleClearSearch,
                    className: (0, import_ui28.clx)(
                      "transition-fg text-ui-fg-muted focus-visible:bg-ui-bg-base-pressed rounded-md outline-none",
                      {
                        invisible: !search
                      }
                    ),
                    children: /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(import_icons20.XMarkMini, {})
                  }
                ) })
              ] }) }),
              /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(import_cmdk2.Command.Empty, { className: "txt-compact-small flex items-center justify-center p-1", children: /* @__PURE__ */ (0, import_jsx_runtime53.jsx)("span", { className: "w-full px-2 py-1 text-center", children: t4("general.noResultsTitle") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(import_cmdk2.Command.List, { className: "h-full max-h-[163px] min-h-[0] overflow-auto p-1 outline-none", children: options.map((option) => {
                const isSelected2 = selectedParams.get().includes(String(option.value));
                return /* @__PURE__ */ (0, import_jsx_runtime53.jsxs)(
                  import_cmdk2.Command.Item,
                  {
                    className: "bg-ui-bg-base hover:bg-ui-bg-base-hover aria-selected:bg-ui-bg-base-pressed focus-visible:bg-ui-bg-base-pressed text-ui-fg-base data-[disabled]:text-ui-fg-disabled txt-compact-small relative flex cursor-pointer select-none items-center gap-x-2 rounded-md px-2 py-1.5 outline-none transition-colors data-[disabled]:pointer-events-none",
                    value: option.label,
                    onSelect: () => {
                      handleSelect(option.value);
                    },
                    children: [
                      /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(
                        "div",
                        {
                          className: (0, import_ui28.clx)(
                            "transition-fg flex h-5 w-5 items-center justify-center",
                            {
                              "[&_svg]:invisible": !isSelected2
                            }
                          ),
                          children: multiple ? /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(import_icons20.CheckMini, {}) : /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(import_icons20.EllipseMiniSolid, {})
                        }
                      ),
                      option.label
                    ]
                  },
                  String(option.value)
                );
              }) })
            ] })
          }
        ) })
      ] });
    };
  }
});

// src/components/table/data-table/data-table-filter/string-filter.tsx
var import_ui29, import_lodash2, import_react36, import_jsx_runtime54, StringFilter;
var init_string_filter = __esm({
  "src/components/table/data-table/data-table-filter/string-filter.tsx"() {
    "use strict";
    import_ui29 = require("@medusajs/ui");
    init_dist20();
    import_lodash2 = require("lodash");
    import_react36 = require("react");
    init_hooks2();
    init_context();
    init_filter_chip();
    import_jsx_runtime54 = require("react/jsx-runtime");
    StringFilter = ({
      filter,
      prefix,
      readonly,
      openOnMount
    }) => {
      const [open, setOpen] = (0, import_react36.useState)(openOnMount);
      const { key, label } = filter;
      const { removeFilter } = useDataTableFilterContext();
      const selectedParams = useSelectedParams({ param: key, prefix });
      const query = selectedParams.get();
      const [previousValue, setPreviousValue] = (0, import_react36.useState)(query?.[0]);
      const debouncedOnChange = (0, import_react36.useCallback)(
        (0, import_lodash2.debounce)((e) => {
          const value = e.target.value;
          if (!value) {
            selectedParams.delete();
          } else {
            selectedParams.add(value);
          }
        }, 500),
        [selectedParams]
      );
      (0, import_react36.useEffect)(() => {
        return () => {
          debouncedOnChange.cancel();
        };
      }, [debouncedOnChange]);
      let timeoutId = null;
      const handleOpenChange = (open2) => {
        setOpen(open2);
        setPreviousValue(query?.[0]);
        if (timeoutId) {
          clearTimeout(timeoutId);
        }
        if (!open2 && !query.length) {
          timeoutId = setTimeout(() => {
            removeFilter(key);
          }, 200);
        }
      };
      const handleRemove = () => {
        selectedParams.delete();
        removeFilter(key);
      };
      return /* @__PURE__ */ (0, import_jsx_runtime54.jsxs)(Root23, { modal: true, open, onOpenChange: handleOpenChange, children: [
        /* @__PURE__ */ (0, import_jsx_runtime54.jsx)(
          filter_chip_default,
          {
            hasOperator: true,
            hadPreviousValue: !!previousValue,
            label,
            value: query?.[0],
            onRemove: handleRemove,
            readonly
          }
        ),
        !readonly && /* @__PURE__ */ (0, import_jsx_runtime54.jsx)(Portal3, { children: /* @__PURE__ */ (0, import_jsx_runtime54.jsx)(
          Content22,
          {
            hideWhenDetached: true,
            align: "start",
            sideOffset: 8,
            collisionPadding: 8,
            className: (0, import_ui29.clx)(
              "bg-ui-bg-base text-ui-fg-base shadow-elevation-flyout z-[1] h-full max-h-[200px] w-[300px] overflow-hidden rounded-lg outline-none"
            ),
            onInteractOutside: (e) => {
              if (e.target instanceof HTMLElement) {
                if (e.target.attributes.getNamedItem("data-name")?.value === "filters_menu_content") {
                  e.preventDefault();
                  e.stopPropagation();
                }
              }
            },
            children: /* @__PURE__ */ (0, import_jsx_runtime54.jsxs)("div", { className: "px-1 pb-3 pt-1", children: [
              /* @__PURE__ */ (0, import_jsx_runtime54.jsx)("div", { className: "px-2 py-1.5", children: /* @__PURE__ */ (0, import_jsx_runtime54.jsx)(import_ui29.Label, { size: "xsmall", weight: "plus", htmlFor: key, children: label }) }),
              /* @__PURE__ */ (0, import_jsx_runtime54.jsx)("div", { className: "px-2 py-0.5", children: /* @__PURE__ */ (0, import_jsx_runtime54.jsx)(
                import_ui29.Input,
                {
                  name: key,
                  size: "small",
                  defaultValue: query?.[0] || void 0,
                  onChange: debouncedOnChange
                }
              ) })
            ] })
          }
        ) })
      ] });
    };
  }
});

// src/components/table/data-table/data-table-filter/data-table-filter.tsx
var import_ui30, import_react37, import_react_router_dom19, import_react_i18next23, import_jsx_runtime55, DataTableFilter, ClearAllFilters, getInitialFilters;
var init_data_table_filter = __esm({
  "src/components/table/data-table/data-table-filter/data-table-filter.tsx"() {
    "use strict";
    import_ui30 = require("@medusajs/ui");
    init_dist20();
    import_react37 = require("react");
    import_react_router_dom19 = require("react-router-dom");
    import_react_i18next23 = require("react-i18next");
    init_context();
    init_date_filter();
    init_number_filter();
    init_select_filter();
    init_string_filter();
    import_jsx_runtime55 = require("react/jsx-runtime");
    DataTableFilter = ({
      filters,
      readonly,
      prefix
    }) => {
      const { t: t4 } = (0, import_react_i18next23.useTranslation)();
      const [searchParams] = (0, import_react_router_dom19.useSearchParams)();
      const [open, setOpen] = (0, import_react37.useState)(false);
      const [activeFilters, setActiveFilters] = (0, import_react37.useState)(
        getInitialFilters({ searchParams, filters, prefix })
      );
      const availableFilters = filters.filter(
        (f) => !activeFilters.find((af) => af.key === f.key)
      );
      const initialMount = (0, import_react37.useRef)(true);
      (0, import_react37.useEffect)(() => {
        if (initialMount.current) {
          const params2 = new URLSearchParams(searchParams);
          filters.forEach((filter) => {
            const key = prefix ? `${prefix}_${filter.key}` : filter.key;
            const value = params2.get(key);
            if (value && !activeFilters.find((af) => af.key === filter.key)) {
              if (filter.type === "select") {
                setActiveFilters((prev) => [
                  ...prev,
                  {
                    ...filter,
                    multiple: filter.multiple,
                    options: filter.options,
                    openOnMount: false
                  }
                ]);
              } else {
                setActiveFilters((prev) => [
                  ...prev,
                  { ...filter, openOnMount: false }
                ]);
              }
            }
          });
        }
        initialMount.current = false;
      }, [activeFilters, filters, prefix, searchParams]);
      const addFilter = (filter) => {
        setOpen(false);
        setActiveFilters((prev) => [...prev, { ...filter, openOnMount: true }]);
      };
      const removeFilter = (0, import_react37.useCallback)((key) => {
        setActiveFilters((prev) => prev.filter((f) => f.key !== key));
      }, []);
      const removeAllFilters = (0, import_react37.useCallback)(() => {
        setActiveFilters([]);
      }, []);
      return /* @__PURE__ */ (0, import_jsx_runtime55.jsx)(
        DataTableFilterContext.Provider,
        {
          value: (0, import_react37.useMemo)(
            () => ({
              removeFilter,
              removeAllFilters
            }),
            [removeAllFilters, removeFilter]
          ),
          children: /* @__PURE__ */ (0, import_jsx_runtime55.jsxs)("div", { className: "max-w-2/3 flex flex-wrap items-center gap-2", children: [
            activeFilters.map((filter) => {
              switch (filter.type) {
                case "select":
                  return /* @__PURE__ */ (0, import_jsx_runtime55.jsx)(
                    SelectFilter,
                    {
                      filter,
                      prefix,
                      readonly,
                      options: filter.options,
                      multiple: filter.multiple,
                      searchable: filter.searchable,
                      openOnMount: filter.openOnMount
                    },
                    filter.key
                  );
                case "date":
                  return /* @__PURE__ */ (0, import_jsx_runtime55.jsx)(
                    DateFilter,
                    {
                      filter,
                      prefix,
                      readonly,
                      openOnMount: filter.openOnMount
                    },
                    filter.key
                  );
                case "string":
                  return /* @__PURE__ */ (0, import_jsx_runtime55.jsx)(
                    StringFilter,
                    {
                      filter,
                      prefix,
                      readonly,
                      openOnMount: filter.openOnMount
                    },
                    filter.key
                  );
                case "number":
                  return /* @__PURE__ */ (0, import_jsx_runtime55.jsx)(
                    NumberFilter,
                    {
                      filter,
                      prefix,
                      readonly,
                      openOnMount: filter.openOnMount
                    },
                    filter.key
                  );
                default:
                  break;
              }
            }),
            !readonly && availableFilters.length > 0 && /* @__PURE__ */ (0, import_jsx_runtime55.jsxs)(Root23, { modal: true, open, onOpenChange: setOpen, children: [
              /* @__PURE__ */ (0, import_jsx_runtime55.jsx)(Trigger5, { asChild: true, id: "filters_menu_trigger", children: /* @__PURE__ */ (0, import_jsx_runtime55.jsx)(import_ui30.Button, { size: "small", variant: "secondary", children: t4("filters.addFilter") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime55.jsx)(Portal3, { children: /* @__PURE__ */ (0, import_jsx_runtime55.jsx)(
                Content22,
                {
                  className: (0, import_ui30.clx)(
                    "bg-ui-bg-base text-ui-fg-base shadow-elevation-flyout z-[1] h-full max-h-[200px] w-[300px] overflow-auto rounded-lg p-1 outline-none"
                  ),
                  "data-name": "filters_menu_content",
                  align: "start",
                  sideOffset: 8,
                  collisionPadding: 8,
                  onCloseAutoFocus: (e) => {
                    const hasOpenFilter = activeFilters.find(
                      (filter) => filter.openOnMount
                    );
                    if (hasOpenFilter) {
                      e.preventDefault();
                    }
                  },
                  children: availableFilters.map((filter) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime55.jsx)(
                      "div",
                      {
                        className: "bg-ui-bg-base hover:bg-ui-bg-base-hover focus-visible:bg-ui-bg-base-pressed text-ui-fg-base data-[disabled]:text-ui-fg-disabled txt-compact-small relative flex cursor-pointer select-none items-center rounded-md px-2 py-1.5 outline-none transition-colors data-[disabled]:pointer-events-none",
                        role: "menuitem",
                        onClick: () => {
                          addFilter(filter);
                        },
                        children: filter.label
                      },
                      filter.key
                    );
                  })
                }
              ) })
            ] }),
            !readonly && activeFilters.length > 0 && /* @__PURE__ */ (0, import_jsx_runtime55.jsx)(ClearAllFilters, { filters, prefix })
          ] })
        }
      );
    };
    ClearAllFilters = ({ filters, prefix }) => {
      const { removeAllFilters } = useDataTableFilterContext();
      const [_, setSearchParams] = (0, import_react_router_dom19.useSearchParams)();
      const handleRemoveAll = () => {
        setSearchParams((prev) => {
          const newValues = new URLSearchParams(prev);
          filters.forEach((filter) => {
            newValues.delete(prefix ? `${prefix}_${filter.key}` : filter.key);
          });
          return newValues;
        });
        removeAllFilters();
      };
      return /* @__PURE__ */ (0, import_jsx_runtime55.jsx)(
        "button",
        {
          type: "button",
          onClick: handleRemoveAll,
          className: (0, import_ui30.clx)(
            "text-ui-fg-muted transition-fg txt-compact-small-plus rounded-md px-2 py-1",
            "hover:text-ui-fg-subtle",
            "focus-visible:shadow-borders-focus"
          ),
          children: "Clear all"
        }
      );
    };
    getInitialFilters = ({
      searchParams,
      filters,
      prefix
    }) => {
      const params2 = new URLSearchParams(searchParams);
      const activeFilters = [];
      filters.forEach((filter) => {
        const key = prefix ? `${prefix}_${filter.key}` : filter.key;
        const value = params2.get(key);
        if (value) {
          if (filter.type === "select") {
            activeFilters.push({
              ...filter,
              multiple: filter.multiple,
              options: filter.options,
              openOnMount: false
            });
          } else {
            activeFilters.push({ ...filter, openOnMount: false });
          }
        }
      });
      return activeFilters;
    };
  }
});

// src/components/table/data-table/data-table-filter/index.ts
var init_data_table_filter2 = __esm({
  "src/components/table/data-table/data-table-filter/index.ts"() {
    "use strict";
    init_data_table_filter();
  }
});

// src/components/table/data-table/data-table-order-by/data-table-order-by.tsx
var import_icons21, import_ui31, import_react38, import_react_i18next24, import_react_router_dom20, import_jsx_runtime56, initState, DataTableOrderBy;
var init_data_table_order_by = __esm({
  "src/components/table/data-table/data-table-order-by/data-table-order-by.tsx"() {
    "use strict";
    import_icons21 = require("@medusajs/icons");
    import_ui31 = require("@medusajs/ui");
    import_react38 = require("react");
    import_react_i18next24 = require("react-i18next");
    import_react_router_dom20 = require("react-router-dom");
    import_jsx_runtime56 = require("react/jsx-runtime");
    initState = (params2, prefix) => {
      const param = prefix ? `${prefix}_order` : "order";
      const sortParam = params2.get(param);
      if (!sortParam) {
        return {
          dir: "asc" /* ASC */
        };
      }
      const dir = sortParam.startsWith("-") ? "desc" /* DESC */ : "asc" /* ASC */;
      const key = sortParam.replace("-", "");
      return {
        key,
        dir
      };
    };
    DataTableOrderBy = ({
      keys,
      prefix
    }) => {
      const [searchParams, setSearchParams] = (0, import_react_router_dom20.useSearchParams)();
      const [state, setState] = (0, import_react38.useState)(initState(searchParams, prefix));
      const param = prefix ? `${prefix}_order` : "order";
      const { t: t4 } = (0, import_react_i18next24.useTranslation)();
      const handleDirChange = (dir) => {
        setState((prev) => ({
          ...prev,
          dir
        }));
        updateOrderParam({
          key: state.key,
          dir
        });
      };
      const handleKeyChange = (value) => {
        setState((prev) => ({
          ...prev,
          key: value
        }));
        updateOrderParam({
          key: value,
          dir: state.dir
        });
      };
      const updateOrderParam = (state2) => {
        if (!state2.key) {
          setSearchParams((prev) => {
            prev.delete(param);
            return prev;
          });
          return;
        }
        const orderParam = state2.dir === "asc" /* ASC */ ? state2.key : `-${state2.key}`;
        setSearchParams((prev) => {
          prev.set(param, orderParam);
          return prev;
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime56.jsxs)(import_ui31.DropdownMenu, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime56.jsx)(import_ui31.DropdownMenu.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime56.jsx)(import_ui31.IconButton, { size: "small", children: /* @__PURE__ */ (0, import_jsx_runtime56.jsx)(import_icons21.DescendingSorting, {}) }) }),
        /* @__PURE__ */ (0, import_jsx_runtime56.jsxs)(import_ui31.DropdownMenu.Content, { className: "z-[1]", align: "end", children: [
          /* @__PURE__ */ (0, import_jsx_runtime56.jsx)(
            import_ui31.DropdownMenu.RadioGroup,
            {
              value: state.key,
              onValueChange: handleKeyChange,
              children: keys.map((key) => {
                const stringKey = String(key.key);
                return /* @__PURE__ */ (0, import_jsx_runtime56.jsx)(
                  import_ui31.DropdownMenu.RadioItem,
                  {
                    value: stringKey,
                    onSelect: (event) => event.preventDefault(),
                    children: key.label
                  },
                  stringKey
                );
              })
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime56.jsx)(import_ui31.DropdownMenu.Separator, {}),
          /* @__PURE__ */ (0, import_jsx_runtime56.jsxs)(
            import_ui31.DropdownMenu.RadioGroup,
            {
              value: state.dir,
              onValueChange: handleDirChange,
              children: [
                /* @__PURE__ */ (0, import_jsx_runtime56.jsxs)(
                  import_ui31.DropdownMenu.RadioItem,
                  {
                    className: "flex items-center justify-between",
                    value: "asc",
                    onSelect: (event) => event.preventDefault(),
                    children: [
                      t4("general.ascending"),
                      /* @__PURE__ */ (0, import_jsx_runtime56.jsx)(import_ui31.DropdownMenu.Label, { children: "1 - 30" })
                    ]
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime56.jsxs)(
                  import_ui31.DropdownMenu.RadioItem,
                  {
                    className: "flex items-center justify-between",
                    value: "desc",
                    onSelect: (event) => event.preventDefault(),
                    children: [
                      t4("general.descending"),
                      /* @__PURE__ */ (0, import_jsx_runtime56.jsx)(import_ui31.DropdownMenu.Label, { children: "30 - 1" })
                    ]
                  }
                )
              ]
            }
          )
        ] })
      ] });
    };
  }
});

// src/components/table/data-table/data-table-order-by/index.ts
var init_data_table_order_by2 = __esm({
  "src/components/table/data-table/data-table-order-by/index.ts"() {
    "use strict";
    init_data_table_order_by();
  }
});

// src/components/table/data-table/data-table-search/data-table-search.tsx
var import_ui32, import_react39, import_react_i18next25, import_lodash3, import_jsx_runtime57, DataTableSearch;
var init_data_table_search = __esm({
  "src/components/table/data-table/data-table-search/data-table-search.tsx"() {
    "use strict";
    import_ui32 = require("@medusajs/ui");
    import_react39 = require("react");
    import_react_i18next25 = require("react-i18next");
    import_lodash3 = require("lodash");
    init_hooks2();
    import_jsx_runtime57 = require("react/jsx-runtime");
    DataTableSearch = ({
      placeholder,
      prefix,
      autofocus
    }) => {
      const { t: t4 } = (0, import_react_i18next25.useTranslation)();
      const placeholderText = placeholder || t4("general.search");
      const selectedParams = useSelectedParams({
        param: "q",
        prefix,
        multiple: false
      });
      const query = selectedParams.get();
      const debouncedOnChange = (0, import_react39.useCallback)(
        (0, import_lodash3.debounce)((e) => {
          const value = e.target.value;
          if (!value) {
            selectedParams.delete();
          } else {
            selectedParams.add(value);
          }
        }, 500),
        [selectedParams]
      );
      (0, import_react39.useEffect)(() => {
        return () => {
          debouncedOnChange.cancel();
        };
      }, [debouncedOnChange]);
      return /* @__PURE__ */ (0, import_jsx_runtime57.jsx)(
        import_ui32.Input,
        {
          autoComplete: "off",
          name: "q",
          type: "search",
          size: "small",
          autoFocus: autofocus,
          defaultValue: query?.[0] || void 0,
          onChange: debouncedOnChange,
          placeholder: placeholderText
        }
      );
    };
  }
});

// src/components/table/data-table/data-table-search/index.ts
var init_data_table_search2 = __esm({
  "src/components/table/data-table/data-table-search/index.ts"() {
    "use strict";
    init_data_table_search();
  }
});

// src/components/table/data-table/data-table-query/data-table-query.tsx
var import_jsx_runtime58, DataTableQuery;
var init_data_table_query = __esm({
  "src/components/table/data-table/data-table-query/data-table-query.tsx"() {
    "use strict";
    init_data_table_filter2();
    init_data_table_order_by2();
    init_data_table_search2();
    import_jsx_runtime58 = require("react/jsx-runtime");
    DataTableQuery = ({
      search,
      orderBy,
      filters,
      prefix
    }) => {
      return (search || orderBy || filters || prefix) && /* @__PURE__ */ (0, import_jsx_runtime58.jsxs)("div", { className: "flex items-start justify-between gap-x-4 px-6 py-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime58.jsx)("div", { className: "w-full max-w-[60%]", children: filters && filters.length > 0 && /* @__PURE__ */ (0, import_jsx_runtime58.jsx)(DataTableFilter, { filters, prefix }) }),
        /* @__PURE__ */ (0, import_jsx_runtime58.jsxs)("div", { className: "flex shrink-0 items-center gap-x-2", children: [
          search && /* @__PURE__ */ (0, import_jsx_runtime58.jsx)(
            DataTableSearch,
            {
              prefix,
              autofocus: search === "autofocus"
            }
          ),
          orderBy && /* @__PURE__ */ (0, import_jsx_runtime58.jsx)(DataTableOrderBy, { keys: orderBy, prefix })
        ] })
      ] });
    };
  }
});

// src/components/table/data-table/data-table-query/index.ts
var init_data_table_query2 = __esm({
  "src/components/table/data-table/data-table-query/index.ts"() {
    "use strict";
    init_data_table_query();
  }
});

// src/components/table/data-table/data-table-root/data-table-root.tsx
var import_ui33, import_react_table, import_react40, import_react_i18next26, import_react_router_dom21, import_jsx_runtime59, DataTableRoot, Pagination;
var init_data_table_root = __esm({
  "src/components/table/data-table/data-table-root/data-table-root.tsx"() {
    "use strict";
    import_ui33 = require("@medusajs/ui");
    import_react_table = require("@tanstack/react-table");
    import_react40 = require("react");
    import_react_i18next26 = require("react-i18next");
    import_react_router_dom21 = require("react-router-dom");
    init_empty_table_content2();
    import_jsx_runtime59 = require("react/jsx-runtime");
    DataTableRoot = ({
      table,
      columns,
      pagination,
      navigateTo,
      commands,
      count: count3 = 0,
      noResults = false,
      noHeader = false,
      layout = "fit"
    }) => {
      const { t: t4 } = (0, import_react_i18next26.useTranslation)();
      const [showStickyBorder, setShowStickyBorder] = (0, import_react40.useState)(false);
      const scrollableRef = (0, import_react40.useRef)(null);
      const hasSelect = columns.find((c) => c.id === "select");
      const hasActions = columns.find((c) => c.id === "actions");
      const hasCommandBar = commands && commands.length > 0;
      const rowSelection = table.getState().rowSelection;
      const { pageIndex, pageSize } = table.getState().pagination;
      const colCount = columns.length - (hasSelect ? 1 : 0) - (hasActions ? 1 : 0);
      const colWidth = 100 / colCount;
      const handleHorizontalScroll = (e) => {
        const scrollLeft = e.currentTarget.scrollLeft;
        if (scrollLeft > 0) {
          setShowStickyBorder(true);
        } else {
          setShowStickyBorder(false);
        }
      };
      const handleAction = async (action) => {
        await action(rowSelection).then(() => {
          table.resetRowSelection();
        });
      };
      (0, import_react40.useEffect)(() => {
        scrollableRef.current?.scroll({ top: 0, left: 0 });
      }, [pageIndex]);
      return /* @__PURE__ */ (0, import_jsx_runtime59.jsxs)(
        "div",
        {
          className: (0, import_ui33.clx)("flex w-full flex-col overflow-hidden", {
            "flex flex-1 flex-col": layout === "fill"
          }),
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(
              "div",
              {
                ref: scrollableRef,
                onScroll: handleHorizontalScroll,
                className: (0, import_ui33.clx)("w-full", {
                  "min-h-0 flex-grow overflow-auto": layout === "fill",
                  "overflow-x-auto": layout === "fit"
                }),
                children: !noResults ? /* @__PURE__ */ (0, import_jsx_runtime59.jsxs)(import_ui33.Table, { className: "relative w-full", children: [
                  !noHeader && /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(import_ui33.Table.Header, { className: "border-t-0", children: table.getHeaderGroups().map((headerGroup) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(
                      import_ui33.Table.Row,
                      {
                        className: (0, import_ui33.clx)({
                          "relative border-b-0 [&_th:last-of-type]:w-[1%] [&_th:last-of-type]:whitespace-nowrap": hasActions,
                          "[&_th:first-of-type]:w-[1%] [&_th:first-of-type]:whitespace-nowrap": hasSelect
                        }),
                        children: headerGroup.headers.map((header, index2) => {
                          const isActionHeader = header.id === "actions";
                          const isSelectHeader = header.id === "select";
                          const isSpecialHeader = isActionHeader || isSelectHeader;
                          const firstHeader = headerGroup.headers.findIndex(
                            (h) => h.id !== "select"
                          );
                          const isFirstHeader = firstHeader !== -1 ? header.id === headerGroup.headers[firstHeader].id : index2 === 0;
                          const isStickyHeader = isSelectHeader || isFirstHeader;
                          return /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(
                            import_ui33.Table.HeaderCell,
                            {
                              "data-table-header-id": header.id,
                              style: {
                                width: !isSpecialHeader ? `${colWidth}%` : void 0
                              },
                              className: (0, import_ui33.clx)({
                                "bg-ui-bg-base sticky left-0 after:absolute after:inset-y-0 after:right-0 after:h-full after:w-px after:bg-transparent after:content-['']": isStickyHeader,
                                "left-[68px]": isStickyHeader && hasSelect && !isSelectHeader,
                                "after:bg-ui-border-base": showStickyBorder && isStickyHeader && !isSpecialHeader
                              }),
                              children: (0, import_react_table.flexRender)(
                                header.column.columnDef.header,
                                header.getContext()
                              )
                            },
                            header.id
                          );
                        })
                      },
                      headerGroup.id
                    );
                  }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(import_ui33.Table.Body, { className: "border-b-0", children: table.getRowModel().rows.map((row) => {
                    const to = navigateTo ? navigateTo(row) : void 0;
                    const isRowDisabled = hasSelect && !row.getCanSelect();
                    const isOdd = row.depth % 2 !== 0;
                    const cells = row.getVisibleCells();
                    return /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(
                      import_ui33.Table.Row,
                      {
                        "data-selected": row.getIsSelected(),
                        className: (0, import_ui33.clx)(
                          "transition-fg group/row group relative [&_td:last-of-type]:w-[1%] [&_td:last-of-type]:whitespace-nowrap",
                          "has-[[data-row-link]:focus-visible]:bg-ui-bg-base-hover",
                          {
                            "bg-ui-bg-subtle hover:bg-ui-bg-subtle-hover": isOdd,
                            "cursor-pointer": !!to,
                            "bg-ui-bg-highlight hover:bg-ui-bg-highlight-hover": row.getIsSelected(),
                            "!bg-ui-bg-disabled !hover:bg-ui-bg-disabled": isRowDisabled
                          }
                        ),
                        children: cells.map((cell, index2) => {
                          const visibleCells = row.getVisibleCells();
                          const isSelectCell = cell.column.id === "select";
                          const firstCell = visibleCells.findIndex(
                            (h) => h.column.id !== "select"
                          );
                          const isFirstCell = firstCell !== -1 ? cell.column.id === visibleCells[firstCell].column.id : index2 === 0;
                          const isStickyCell = isSelectCell || isFirstCell;
                          const depthOffset = row.depth > 0 && isFirstCell ? row.depth * 14 + 24 : void 0;
                          const hasLeftOffset = isStickyCell && hasSelect && !isSelectCell;
                          const Inner5 = (0, import_react_table.flexRender)(
                            cell.column.columnDef.cell,
                            cell.getContext()
                          );
                          const isTabableLink = isFirstCell && !!to;
                          const shouldRenderAsLink = !!to && !isSelectCell;
                          return /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(
                            import_ui33.Table.Cell,
                            {
                              className: (0, import_ui33.clx)({
                                "!pl-0 !pr-0": shouldRenderAsLink,
                                "bg-ui-bg-base group-data-[selected=true]/row:bg-ui-bg-highlight group-data-[selected=true]/row:group-hover/row:bg-ui-bg-highlight-hover group-hover/row:bg-ui-bg-base-hover transition-fg group-has-[[data-row-link]:focus-visible]:bg-ui-bg-base-hover sticky left-0 after:absolute after:inset-y-0 after:right-0 after:h-full after:w-px after:bg-transparent after:content-['']": isStickyCell,
                                "bg-ui-bg-subtle group-hover/row:bg-ui-bg-subtle-hover": isOdd && isStickyCell,
                                "left-[68px]": hasLeftOffset,
                                "after:bg-ui-border-base": showStickyBorder && isStickyCell && !isSelectCell,
                                "!bg-ui-bg-disabled !hover:bg-ui-bg-disabled": isRowDisabled
                              }),
                              style: {
                                paddingLeft: depthOffset ? `${depthOffset}px` : void 0
                              },
                              children: shouldRenderAsLink ? /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(
                                import_react_router_dom21.Link,
                                {
                                  to,
                                  className: "size-full outline-none",
                                  "data-row-link": true,
                                  tabIndex: isTabableLink ? 0 : -1,
                                  children: /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(
                                    "div",
                                    {
                                      className: (0, import_ui33.clx)(
                                        "flex size-full items-center pr-6",
                                        {
                                          "pl-6": isTabableLink && !hasLeftOffset
                                        }
                                      ),
                                      children: Inner5
                                    }
                                  )
                                }
                              ) : Inner5
                            },
                            cell.id
                          );
                        })
                      },
                      row.id
                    );
                  }) })
                ] }) : /* @__PURE__ */ (0, import_jsx_runtime59.jsx)("div", { className: (0, import_ui33.clx)({ "border-b": layout === "fit" }), children: /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(NoResults, {}) })
              }
            ),
            pagination && /* @__PURE__ */ (0, import_jsx_runtime59.jsx)("div", { className: (0, import_ui33.clx)({ "border-t": layout === "fill" }), children: /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(
              Pagination,
              {
                canNextPage: table.getCanNextPage(),
                canPreviousPage: table.getCanPreviousPage(),
                nextPage: table.nextPage,
                previousPage: table.previousPage,
                count: count3,
                pageIndex,
                pageCount: table.getPageCount(),
                pageSize
              }
            ) }),
            hasCommandBar && /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(import_ui33.CommandBar, { open: !!Object.keys(rowSelection).length, children: /* @__PURE__ */ (0, import_jsx_runtime59.jsxs)(import_ui33.CommandBar.Bar, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(import_ui33.CommandBar.Value, { children: t4("general.countSelected", {
                count: Object.keys(rowSelection).length
              }) }),
              /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(import_ui33.CommandBar.Seperator, {}),
              commands?.map((command, index2) => {
                return /* @__PURE__ */ (0, import_jsx_runtime59.jsxs)(import_react40.Fragment, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(
                    import_ui33.CommandBar.Command,
                    {
                      label: command.label,
                      shortcut: command.shortcut,
                      action: () => handleAction(command.action)
                    }
                  ),
                  index2 < commands.length - 1 && /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(import_ui33.CommandBar.Seperator, {})
                ] }, index2);
              })
            ] }) })
          ]
        }
      );
    };
    Pagination = (props) => {
      const { t: t4 } = (0, import_react_i18next26.useTranslation)();
      const translations = {
        of: t4("general.of"),
        results: t4("general.results"),
        pages: t4("general.pages"),
        prev: t4("general.prev"),
        next: t4("general.next")
      };
      return /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(
        import_ui33.Table.Pagination,
        {
          className: "flex-shrink-0",
          ...props,
          translations
        }
      );
    };
  }
});

// src/components/table/data-table/data-table-root/index.ts
var init_data_table_root2 = __esm({
  "src/components/table/data-table/data-table-root/index.ts"() {
    "use strict";
    init_data_table_root();
  }
});

// src/components/table/data-table/data-table.tsx
var import_ui34, import_react41, import_jsx_runtime60, MemoizedDataTableQuery, DataTable;
var init_data_table = __esm({
  "src/components/table/data-table/data-table.tsx"() {
    "use strict";
    import_ui34 = require("@medusajs/ui");
    import_react41 = require("react");
    init_empty_table_content2();
    init_skeleton2();
    init_data_table_query2();
    init_data_table_root2();
    import_jsx_runtime60 = require("react/jsx-runtime");
    MemoizedDataTableQuery = (0, import_react41.memo)(DataTableQuery);
    DataTable = ({
      table,
      columns,
      pagination,
      navigateTo,
      commands,
      count: count3 = 0,
      search = false,
      orderBy,
      filters,
      prefix,
      queryObject = {},
      pageSize,
      isLoading = false,
      noHeader = false,
      layout = "fit",
      noRecords: noRecordsProps = {}
    }) => {
      if (isLoading) {
        return /* @__PURE__ */ (0, import_jsx_runtime60.jsx)(
          TableSkeleton,
          {
            layout,
            rowCount: pageSize,
            search: !!search,
            filters: !!filters?.length,
            orderBy: !!orderBy?.length,
            pagination: !!pagination
          }
        );
      }
      const noQuery = Object.values(queryObject).filter((v) => Boolean(v)).length === 0;
      const noResults = !isLoading && count3 === 0 && !noQuery;
      const noRecords = !isLoading && count3 === 0 && noQuery;
      if (noRecords) {
        return /* @__PURE__ */ (0, import_jsx_runtime60.jsx)(
          NoRecords,
          {
            className: (0, import_ui34.clx)({
              "flex h-full flex-col overflow-hidden": layout === "fill"
            }),
            ...noRecordsProps
          }
        );
      }
      return /* @__PURE__ */ (0, import_jsx_runtime60.jsxs)(
        "div",
        {
          className: (0, import_ui34.clx)("divide-y", {
            "flex h-full flex-col overflow-hidden": layout === "fill"
          }),
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime60.jsx)(
              MemoizedDataTableQuery,
              {
                search,
                orderBy,
                filters,
                prefix
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime60.jsx)(
              DataTableRoot,
              {
                table,
                count: count3,
                columns,
                pagination: true,
                navigateTo,
                commands,
                noResults,
                noHeader,
                layout
              }
            )
          ]
        }
      );
    };
  }
});

// src/components/table/data-table/index.ts
var init_data_table2 = __esm({
  "src/components/table/data-table/index.ts"() {
    "use strict";
    init_data_table();
  }
});

// src/components/table/table-cells/common/placeholder-cell/placeholder-cell.tsx
var import_jsx_runtime61, PlaceholderCell;
var init_placeholder_cell = __esm({
  "src/components/table/table-cells/common/placeholder-cell/placeholder-cell.tsx"() {
    "use strict";
    import_jsx_runtime61 = require("react/jsx-runtime");
    PlaceholderCell = () => {
      return /* @__PURE__ */ (0, import_jsx_runtime61.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime61.jsx)("span", { className: "text-ui-fg-muted", children: "-" }) });
    };
  }
});

// src/components/table/table-cells/common/placeholder-cell/index.ts
var init_placeholder_cell2 = __esm({
  "src/components/table/table-cells/common/placeholder-cell/index.ts"() {
    "use strict";
    init_placeholder_cell();
  }
});

// src/components/table/table-cells/product/collection-cell/collection-cell.tsx
var import_react_i18next27, import_jsx_runtime62, CollectionCell, CollectionHeader;
var init_collection_cell = __esm({
  "src/components/table/table-cells/product/collection-cell/collection-cell.tsx"() {
    "use strict";
    import_react_i18next27 = require("react-i18next");
    init_placeholder_cell2();
    import_jsx_runtime62 = require("react/jsx-runtime");
    CollectionCell = ({ collection }) => {
      if (!collection) {
        return /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(PlaceholderCell, {});
      }
      return /* @__PURE__ */ (0, import_jsx_runtime62.jsx)("div", { className: "flex h-full w-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime62.jsx)("span", { className: "truncate", children: collection.title }) });
    };
    CollectionHeader = () => {
      const { t: t4 } = (0, import_react_i18next27.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime62.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime62.jsx)("span", { children: t4("fields.collection") }) });
    };
  }
});

// src/components/table/table-cells/product/product-cell/product-cell.tsx
var import_react_i18next28, import_jsx_runtime63, ProductCell, ProductHeader;
var init_product_cell = __esm({
  "src/components/table/table-cells/product/product-cell/product-cell.tsx"() {
    "use strict";
    import_react_i18next28 = require("react-i18next");
    init_thumbnail2();
    import_jsx_runtime63 = require("react/jsx-runtime");
    ProductCell = ({ product }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime63.jsxs)("div", { className: "flex h-full w-full items-center gap-x-3 overflow-hidden max-w-[250px]", children: [
        /* @__PURE__ */ (0, import_jsx_runtime63.jsx)("div", { className: "w-fit flex-shrink-0", children: /* @__PURE__ */ (0, import_jsx_runtime63.jsx)(Thumbnail, { src: product.thumbnail }) }),
        /* @__PURE__ */ (0, import_jsx_runtime63.jsx)("span", { title: product.title, className: "truncate", children: product.title })
      ] });
    };
    ProductHeader = () => {
      const { t: t4 } = (0, import_react_i18next28.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime63.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime63.jsx)("span", { children: t4("fields.product") }) });
    };
  }
});

// src/components/table/table-cells/product/product-cell/index.ts
var init_product_cell2 = __esm({
  "src/components/table/table-cells/product/product-cell/index.ts"() {
    "use strict";
    init_product_cell();
  }
});

// src/components/table/table-cells/common/status-cell/status-cell.tsx
var import_ui35, import_jsx_runtime64, StatusCell;
var init_status_cell = __esm({
  "src/components/table/table-cells/common/status-cell/status-cell.tsx"() {
    "use strict";
    import_ui35 = require("@medusajs/ui");
    import_jsx_runtime64 = require("react/jsx-runtime");
    StatusCell = ({ color, children }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime64.jsxs)("div", { className: "txt-compact-small text-ui-fg-subtle flex h-full w-full items-center gap-x-2 overflow-hidden", children: [
        /* @__PURE__ */ (0, import_jsx_runtime64.jsx)(
          "div",
          {
            role: "presentation",
            className: "flex h-5 w-2 items-center justify-center",
            children: /* @__PURE__ */ (0, import_jsx_runtime64.jsx)(
              "div",
              {
                className: (0, import_ui35.clx)(
                  "h-2 w-2 rounded-sm shadow-[0px_0px_0px_1px_rgba(0,0,0,0.12)_inset]",
                  {
                    "bg-ui-tag-neutral-icon": color === "grey",
                    "bg-ui-tag-green-icon": color === "green",
                    "bg-ui-tag-red-icon": color === "red",
                    "bg-ui-tag-blue-icon": color === "blue",
                    "bg-ui-tag-orange-icon": color === "orange",
                    "bg-ui-tag-purple-icon": color === "purple"
                  }
                )
              }
            )
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime64.jsx)("span", { className: "truncate", children })
      ] });
    };
  }
});

// src/components/table/table-cells/common/status-cell/index.ts
var init_status_cell2 = __esm({
  "src/components/table/table-cells/common/status-cell/index.ts"() {
    "use strict";
    init_status_cell();
  }
});

// src/components/table/table-cells/product/product-status-cell/product-status-cell.tsx
var import_react_i18next29, import_jsx_runtime65, ProductStatusCell, ProductStatusHeader;
var init_product_status_cell = __esm({
  "src/components/table/table-cells/product/product-status-cell/product-status-cell.tsx"() {
    "use strict";
    import_react_i18next29 = require("react-i18next");
    init_status_cell2();
    import_jsx_runtime65 = require("react/jsx-runtime");
    ProductStatusCell = ({ status }) => {
      const { t: t4 } = (0, import_react_i18next29.useTranslation)();
      const [color, text] = {
        draft: ["grey", t4("products.productStatus.draft")],
        proposed: ["orange", t4("products.productStatus.proposed")],
        published: ["green", t4("products.productStatus.published")],
        rejected: ["red", t4("products.productStatus.rejected")]
      }[status];
      return /* @__PURE__ */ (0, import_jsx_runtime65.jsx)(StatusCell, { color, children: text });
    };
    ProductStatusHeader = () => {
      const { t: t4 } = (0, import_react_i18next29.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime65.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime65.jsx)("span", { children: t4("fields.status") }) });
    };
  }
});

// src/components/table/table-cells/product/product-status-cell/index.ts
var init_product_status_cell2 = __esm({
  "src/components/table/table-cells/product/product-status-cell/index.ts"() {
    "use strict";
    init_product_status_cell();
  }
});

// src/components/table/table-cells/product/sales-channels-cell/sales-channels-cell.tsx
var import_ui36, import_react_i18next30, import_jsx_runtime66, SalesChannelsCell, SalesChannelHeader;
var init_sales_channels_cell = __esm({
  "src/components/table/table-cells/product/sales-channels-cell/sales-channels-cell.tsx"() {
    "use strict";
    import_ui36 = require("@medusajs/ui");
    import_react_i18next30 = require("react-i18next");
    init_placeholder_cell2();
    import_jsx_runtime66 = require("react/jsx-runtime");
    SalesChannelsCell = ({
      salesChannels
    }) => {
      const { t: t4 } = (0, import_react_i18next30.useTranslation)();
      if (!salesChannels || !salesChannels.length) {
        return /* @__PURE__ */ (0, import_jsx_runtime66.jsx)(PlaceholderCell, {});
      }
      if (salesChannels.length > 2) {
        return /* @__PURE__ */ (0, import_jsx_runtime66.jsxs)("div", { className: "flex h-full w-full items-center gap-x-1 overflow-hidden", children: [
          /* @__PURE__ */ (0, import_jsx_runtime66.jsx)("span", { className: "truncate", children: salesChannels.slice(0, 2).map((sc) => sc.name).join(", ") }),
          /* @__PURE__ */ (0, import_jsx_runtime66.jsx)(
            import_ui36.Tooltip,
            {
              content: /* @__PURE__ */ (0, import_jsx_runtime66.jsx)("ul", { children: salesChannels.slice(2).map((sc) => /* @__PURE__ */ (0, import_jsx_runtime66.jsx)("li", { children: sc.name }, sc.id)) }),
              children: /* @__PURE__ */ (0, import_jsx_runtime66.jsx)("span", { className: "text-xs", children: t4("general.plusCountMore", {
                count: salesChannels.length - 2
              }) })
            }
          )
        ] });
      }
      const channels = salesChannels.map((sc) => sc.name).join(", ");
      return /* @__PURE__ */ (0, import_jsx_runtime66.jsx)("div", { className: "flex h-full w-full items-center overflow-hidden max-w-[250px]", children: /* @__PURE__ */ (0, import_jsx_runtime66.jsx)("span", { title: channels, className: "truncate", children: channels }) });
    };
    SalesChannelHeader = () => {
      const { t: t4 } = (0, import_react_i18next30.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime66.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime66.jsx)("span", { children: t4("fields.salesChannels") }) });
    };
  }
});

// src/components/table/table-cells/product/sales-channels-cell/index.ts
var init_sales_channels_cell2 = __esm({
  "src/components/table/table-cells/product/sales-channels-cell/index.ts"() {
    "use strict";
    init_sales_channels_cell();
  }
});

// src/components/table/table-cells/product/variant-cell/variant-cell.tsx
var import_react_i18next31, import_jsx_runtime67, VariantCell, VariantHeader;
var init_variant_cell = __esm({
  "src/components/table/table-cells/product/variant-cell/variant-cell.tsx"() {
    "use strict";
    import_react_i18next31 = require("react-i18next");
    init_placeholder_cell2();
    import_jsx_runtime67 = require("react/jsx-runtime");
    VariantCell = ({ variants }) => {
      const { t: t4 } = (0, import_react_i18next31.useTranslation)();
      if (!variants || !variants.length) {
        return /* @__PURE__ */ (0, import_jsx_runtime67.jsx)(PlaceholderCell, {});
      }
      return /* @__PURE__ */ (0, import_jsx_runtime67.jsx)("div", { className: "flex h-full w-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime67.jsx)("span", { className: "truncate", children: t4("products.variantCount", { count: variants.length }) }) });
    };
    VariantHeader = () => {
      const { t: t4 } = (0, import_react_i18next31.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime67.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime67.jsx)("span", { children: t4("fields.variants") }) });
    };
  }
});

// src/components/table/table-cells/product/variant-cell/index.ts
var init_variant_cell2 = __esm({
  "src/components/table/table-cells/product/variant-cell/index.ts"() {
    "use strict";
    init_variant_cell();
  }
});

// src/hooks/table/columns/use-product-table-columns.tsx
var import_react_table2, import_react42, import_jsx_runtime68, columnHelper, useProductTableColumns;
var init_use_product_table_columns = __esm({
  "src/hooks/table/columns/use-product-table-columns.tsx"() {
    "use strict";
    import_react_table2 = require("@tanstack/react-table");
    import_react42 = require("react");
    init_collection_cell();
    init_product_cell2();
    init_product_status_cell2();
    init_sales_channels_cell2();
    init_variant_cell2();
    import_jsx_runtime68 = require("react/jsx-runtime");
    columnHelper = (0, import_react_table2.createColumnHelper)();
    useProductTableColumns = () => {
      return (0, import_react42.useMemo)(
        () => [
          columnHelper.display({
            id: "product",
            header: () => /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(ProductHeader, {}),
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(ProductCell, { product: row.original })
          }),
          columnHelper.accessor("collection", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(CollectionHeader, {}),
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(CollectionCell, { collection: row.original.collection })
          }),
          columnHelper.accessor("sales_channels", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(SalesChannelHeader, {}),
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(SalesChannelsCell, { salesChannels: row.original.sales_channels })
          }),
          columnHelper.accessor("variants", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(VariantHeader, {}),
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(VariantCell, { variants: row.original.variants })
          }),
          columnHelper.accessor("status", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(ProductStatusHeader, {}),
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(ProductStatusCell, { status: row.original.status })
          })
        ],
        []
      );
    };
  }
});

// src/hooks/table/filters/use-product-table-filters.tsx
var import_react_i18next32, useProductTableFilters;
var init_use_product_table_filters = __esm({
  "src/hooks/table/filters/use-product-table-filters.tsx"() {
    "use strict";
    import_react_i18next32 = require("react-i18next");
    init_api();
    init_product_types();
    init_sales_channels();
    useProductTableFilters = (exclude) => {
      const { t: t4 } = (0, import_react_i18next32.useTranslation)();
      const isProductTypeExcluded = exclude?.includes("product_types");
      const { product_types } = useProductTypes(
        {
          limit: 1e3,
          offset: 0
        },
        {
          enabled: !isProductTypeExcluded
        }
      );
      const isProductTagExcluded = exclude?.includes("product_tags");
      const { product_tags } = useProductTags({
        limit: 1e3,
        offset: 0
      });
      const isSalesChannelExcluded = exclude?.includes("sales_channel_id");
      const { sales_channels } = useSalesChannels(
        {
          limit: 1e3,
          fields: "id,name"
        },
        {
          enabled: !isSalesChannelExcluded
        }
      );
      const isCategoryExcluded = exclude?.includes("categories");
      const isCollectionExcluded = exclude?.includes("collections");
      let filters = [];
      if (product_types && !isProductTypeExcluded) {
        const typeFilter = {
          key: "type_id",
          label: t4("fields.type"),
          type: "select",
          multiple: true,
          options: product_types.map((t5) => ({
            label: t5.value,
            value: t5.id
          }))
        };
        filters = [...filters, typeFilter];
      }
      if (product_tags && !isProductTagExcluded) {
        const tagFilter = {
          key: "tag_id",
          label: t4("fields.tag"),
          type: "select",
          multiple: true,
          options: product_tags.map((t5) => ({
            label: t5.value,
            value: t5.id
          }))
        };
        filters = [...filters, tagFilter];
      }
      if (sales_channels) {
        const salesChannelFilter = {
          key: "sales_channel_id",
          label: t4("fields.salesChannel"),
          type: "select",
          multiple: true,
          options: sales_channels.map((s) => ({
            label: s.name,
            value: s.id
          }))
        };
        filters = [...filters, salesChannelFilter];
      }
      const statusFilter = {
        key: "status",
        label: t4("fields.status"),
        type: "select",
        multiple: true,
        options: [
          {
            label: t4("products.productStatus.draft"),
            value: "draft"
          },
          {
            label: t4("products.productStatus.proposed"),
            value: "proposed"
          },
          {
            label: t4("products.productStatus.published"),
            value: "published"
          },
          {
            label: t4("products.productStatus.rejected"),
            value: "rejected"
          }
        ]
      };
      const dateFilters = [
        { label: t4("fields.createdAt"), key: "created_at" },
        { label: t4("fields.updatedAt"), key: "updated_at" }
      ].map((f) => ({
        key: f.key,
        label: f.label,
        type: "date"
      }));
      filters = [...filters, statusFilter, ...dateFilters];
      return filters;
    };
  }
});

// src/hooks/use-query-params.tsx
function useQueryParams(keys, prefix) {
  const [params2] = (0, import_react_router_dom22.useSearchParams)();
  const result = {};
  keys.forEach((key) => {
    const prefixedKey = prefix ? `${prefix}_${key}` : key;
    const value = params2.get(prefixedKey) || void 0;
    result[key] = value;
  });
  return result;
}
var import_react_router_dom22;
var init_use_query_params = __esm({
  "src/hooks/use-query-params.tsx"() {
    "use strict";
    import_react_router_dom22 = require("react-router-dom");
  }
});

// src/hooks/table/query/use-product-table-query.tsx
var useProductTableQuery;
var init_use_product_table_query = __esm({
  "src/hooks/table/query/use-product-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useProductTableQuery = ({
      prefix,
      pageSize = 20
    }) => {
      const queryObject = useQueryParams(
        [
          "offset",
          "order",
          "q",
          "created_at",
          "updated_at",
          "sales_channel_id",
          "category_id",
          "collection_id",
          "is_giftcard",
          "tag_id",
          "type_id",
          "status",
          "id"
        ],
        prefix
      );
      const {
        offset: offset4,
        sales_channel_id,
        created_at,
        updated_at,
        category_id,
        collection_id,
        tag_id,
        type_id,
        is_giftcard,
        status,
        order,
        q
      } = queryObject;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        sales_channel_id: sales_channel_id?.split(","),
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0,
        category_id: category_id?.split(","),
        collection_id: collection_id?.split(","),
        is_giftcard: is_giftcard ? is_giftcard === "true" : void 0,
        order,
        tag_id: tag_id ? tag_id.split(",") : void 0,
        type_id: type_id?.split(","),
        status: status?.split(","),
        q
      };
      return {
        searchParams,
        raw: queryObject
      };
    };
  }
});

// src/hooks/use-data-table.tsx
var import_react_table3, import_react43, import_react_router_dom23, useDataTable;
var init_use_data_table = __esm({
  "src/hooks/use-data-table.tsx"() {
    "use strict";
    import_react_table3 = require("@tanstack/react-table");
    import_react43 = require("react");
    import_react_router_dom23 = require("react-router-dom");
    useDataTable = ({
      data = [],
      columns,
      count: count3 = 0,
      pageSize: _pageSize = 20,
      enablePagination = true,
      enableRowSelection = false,
      enableExpandableRows = false,
      rowSelection: _rowSelection,
      getSubRows,
      getRowId,
      meta,
      prefix
    }) => {
      const [searchParams, setSearchParams] = (0, import_react_router_dom23.useSearchParams)();
      const offsetKey = `${prefix ? `${prefix}_` : ""}offset`;
      const offset4 = searchParams.get(offsetKey);
      const [{ pageIndex, pageSize }, setPagination] = (0, import_react43.useState)({
        pageIndex: offset4 ? Math.ceil(Number(offset4) / _pageSize) : 0,
        pageSize: _pageSize
      });
      const pagination = (0, import_react43.useMemo)(
        () => ({
          pageIndex,
          pageSize
        }),
        [pageIndex, pageSize]
      );
      const [localRowSelection, setLocalRowSelection] = (0, import_react43.useState)({});
      const rowSelection = _rowSelection?.state ?? localRowSelection;
      const setRowSelection = _rowSelection?.updater ?? setLocalRowSelection;
      (0, import_react43.useEffect)(() => {
        if (!enablePagination) {
          return;
        }
        const index2 = offset4 ? Math.ceil(Number(offset4) / _pageSize) : 0;
        if (index2 === pageIndex) {
          return;
        }
        setPagination((prev) => ({
          ...prev,
          pageIndex: index2
        }));
      }, [offset4, enablePagination, _pageSize, pageIndex]);
      const onPaginationChange = (updater) => {
        const state = updater(pagination);
        const { pageIndex: pageIndex2, pageSize: pageSize2 } = state;
        setSearchParams((prev) => {
          if (!pageIndex2) {
            prev.delete(offsetKey);
            return prev;
          }
          const newSearch = new URLSearchParams(prev);
          newSearch.set(offsetKey, String(pageIndex2 * pageSize2));
          return newSearch;
        });
        setPagination(state);
        return state;
      };
      const table = (0, import_react_table3.useReactTable)({
        data,
        columns,
        state: {
          rowSelection,
          // We always pass a selection state to the table even if it's not enabled
          pagination: enablePagination ? pagination : void 0
        },
        pageCount: Math.ceil((count3 ?? 0) / pageSize),
        enableRowSelection,
        getRowId,
        getSubRows,
        onRowSelectionChange: enableRowSelection ? setRowSelection : void 0,
        onPaginationChange: enablePagination ? onPaginationChange : void 0,
        getCoreRowModel: (0, import_react_table3.getCoreRowModel)(),
        getPaginationRowModel: enablePagination ? (0, import_react_table3.getPaginationRowModel)() : void 0,
        getExpandedRowModel: enableExpandableRows ? (0, import_react_table3.getExpandedRowModel)() : void 0,
        manualPagination: enablePagination ? true : void 0,
        meta
      });
      return { table };
    };
  }
});

// src/routes/products/product-list/components/product-list-table/product-list-table.tsx
var import_icons22, import_ui37, import_react_query42, import_react_table4, import_react44, import_react_i18next33, import_react_router_dom24, import_jsx_runtime69, PAGE_SIZE, ProductListTable, ProductActions, columnHelper2, useColumns;
var init_product_list_table = __esm({
  "src/routes/products/product-list/components/product-list-table/product-list-table.tsx"() {
    "use strict";
    import_icons22 = require("@medusajs/icons");
    import_ui37 = require("@medusajs/ui");
    import_react_query42 = require("@tanstack/react-query");
    import_react_table4 = require("@tanstack/react-table");
    import_react44 = require("react");
    import_react_i18next33 = require("react-i18next");
    import_react_router_dom24 = require("react-router-dom");
    init_action_menu2();
    init_data_table2();
    init_products();
    init_use_product_table_columns();
    init_use_product_table_filters();
    init_use_product_table_query();
    init_use_data_table();
    import_jsx_runtime69 = require("react/jsx-runtime");
    PAGE_SIZE = 20;
    ProductListTable = () => {
      const { t: t4 } = (0, import_react_i18next33.useTranslation)();
      const location = (0, import_react_router_dom24.useLocation)();
      const initialData = (0, import_react_router_dom24.useLoaderData)();
      const { searchParams, raw } = useProductTableQuery({ pageSize: PAGE_SIZE });
      const { products, count: count3, isLoading, isError, error } = useProducts(
        {
          ...searchParams
        },
        {
          initialData,
          placeholderData: import_react_query42.keepPreviousData
        }
      );
      const filters = useProductTableFilters();
      const columns = useColumns();
      const { table } = useDataTable({
        data: products ?? [],
        columns,
        count: count3,
        enablePagination: true,
        pageSize: PAGE_SIZE,
        getRowId: (row) => row.id
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime69.jsxs)(import_ui37.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime69.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime69.jsx)(import_ui37.Heading, { level: "h2", children: t4("products.domain") }),
          /* @__PURE__ */ (0, import_jsx_runtime69.jsxs)("div", { className: "flex items-center justify-center gap-x-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime69.jsx)(import_ui37.Button, { size: "small", variant: "secondary", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime69.jsx)(import_react_router_dom24.Link, { to: `export${location.search}`, children: t4("actions.export") }) }),
            /* @__PURE__ */ (0, import_jsx_runtime69.jsx)(import_ui37.Button, { size: "small", variant: "secondary", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime69.jsx)(import_react_router_dom24.Link, { to: "import", children: t4("actions.import") }) }),
            /* @__PURE__ */ (0, import_jsx_runtime69.jsx)(import_ui37.Button, { size: "small", variant: "secondary", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime69.jsx)(import_react_router_dom24.Link, { to: "create", children: t4("actions.create") }) })
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime69.jsx)(
          DataTable,
          {
            table,
            columns,
            count: count3,
            pageSize: PAGE_SIZE,
            filters,
            search: true,
            pagination: true,
            isLoading,
            queryObject: raw,
            navigateTo: (row) => `${row.original.id}`,
            orderBy: [
              { key: "title", label: t4("fields.title") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            noRecords: {
              message: t4("products.list.noRecordsMessage")
            }
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime69.jsx)(import_react_router_dom24.Outlet, {})
      ] });
    };
    ProductActions = ({ product }) => {
      const { t: t4 } = (0, import_react_i18next33.useTranslation)();
      const prompt = (0, import_ui37.usePrompt)();
      const { mutateAsync } = useDeleteProduct(product.id);
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("products.deleteWarning", {
            title: product.title
          }),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            import_ui37.toast.success(t4("products.toasts.delete.success.header"), {
              description: t4("products.toasts.delete.success.description", {
                title: product.title
              })
            });
          },
          onError: (e) => {
            import_ui37.toast.error(t4("products.toasts.delete.error.header"), {
              description: e.message
            });
          }
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime69.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime69.jsx)(import_icons22.PencilSquare, {}),
                  label: t4("actions.edit"),
                  to: `/products/${product.id}/edit`
                }
              ]
            },
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime69.jsx)(import_icons22.Trash, {}),
                  label: t4("actions.delete"),
                  onClick: handleDelete
                }
              ]
            }
          ]
        }
      );
    };
    columnHelper2 = (0, import_react_table4.createColumnHelper)();
    useColumns = () => {
      const base = useProductTableColumns();
      const columns = (0, import_react44.useMemo)(
        () => [
          ...base,
          columnHelper2.display({
            id: "actions",
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime69.jsx)(ProductActions, { product: row.original });
            }
          })
        ],
        [base]
      );
      return columns;
    };
  }
});

// src/routes/products/product-list/components/product-list-table/index.ts
var init_product_list_table2 = __esm({
  "src/routes/products/product-list/components/product-list-table/index.ts"() {
    "use strict";
    init_product_list_table();
  }
});

// src/routes/products/product-list/product-list.tsx
var import_jsx_runtime70, ProductList;
var init_product_list = __esm({
  "src/routes/products/product-list/product-list.tsx"() {
    "use strict";
    init_pages();
    init_extensions();
    init_product_list_table2();
    import_jsx_runtime70 = require("react/jsx-runtime");
    ProductList = () => {
      const { getWidgets } = useDashboardExtension();
      return /* @__PURE__ */ (0, import_jsx_runtime70.jsx)(
        SingleColumnPage,
        {
          widgets: {
            after: getWidgets("product.list.after"),
            before: getWidgets("product.list.before")
          },
          children: /* @__PURE__ */ (0, import_jsx_runtime70.jsx)(ProductListTable, {})
        }
      );
    };
  }
});

// src/routes/products/product-list/index.ts
var product_list_exports = {};
__export(product_list_exports, {
  Component: () => ProductList,
  productLoader: () => productsLoader
});
var init_product_list2 = __esm({
  "src/routes/products/product-list/index.ts"() {
    "use strict";
    init_loader3();
    init_product_list();
  }
});

// src/components/modals/route-modal-form/route-modal-form.tsx
var import_ui38, import_react_i18next34, import_react_router_dom25, import_jsx_runtime71, RouteModalForm;
var init_route_modal_form = __esm({
  "src/components/modals/route-modal-form/route-modal-form.tsx"() {
    "use strict";
    import_ui38 = require("@medusajs/ui");
    import_react_i18next34 = require("react-i18next");
    import_react_router_dom25 = require("react-router-dom");
    init_form2();
    import_jsx_runtime71 = require("react/jsx-runtime");
    RouteModalForm = ({
      form,
      blockSearch = false,
      children,
      onClose
    }) => {
      const { t: t4 } = (0, import_react_i18next34.useTranslation)();
      const {
        formState: { isDirty }
      } = form;
      const blocker = (0, import_react_router_dom25.useBlocker)(({ currentLocation, nextLocation }) => {
        const { isSubmitSuccessful } = nextLocation.state || {};
        if (isSubmitSuccessful) {
          onClose?.(true);
          return false;
        }
        const isPathChanged = currentLocation.pathname !== nextLocation.pathname;
        const isSearchChanged = currentLocation.search !== nextLocation.search;
        if (blockSearch) {
          const ret2 = isDirty && (isPathChanged || isSearchChanged);
          if (!ret2) {
            onClose?.(isSubmitSuccessful);
          }
          return ret2;
        }
        const ret = isDirty && isPathChanged;
        if (!ret) {
          onClose?.(isSubmitSuccessful);
        }
        return ret;
      });
      const handleCancel = () => {
        blocker?.reset?.();
      };
      const handleContinue = () => {
        blocker?.proceed?.();
        onClose?.(false);
      };
      return /* @__PURE__ */ (0, import_jsx_runtime71.jsxs)(Form, { ...form, children: [
        children,
        /* @__PURE__ */ (0, import_jsx_runtime71.jsx)(import_ui38.Prompt, { open: blocker.state === "blocked", variant: "confirmation", children: /* @__PURE__ */ (0, import_jsx_runtime71.jsxs)(import_ui38.Prompt.Content, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime71.jsxs)(import_ui38.Prompt.Header, { children: [
            /* @__PURE__ */ (0, import_jsx_runtime71.jsx)(import_ui38.Prompt.Title, { children: t4("general.unsavedChangesTitle") }),
            /* @__PURE__ */ (0, import_jsx_runtime71.jsx)(import_ui38.Prompt.Description, { children: t4("general.unsavedChangesDescription") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime71.jsxs)(import_ui38.Prompt.Footer, { children: [
            /* @__PURE__ */ (0, import_jsx_runtime71.jsx)(import_ui38.Prompt.Cancel, { onClick: handleCancel, type: "button", children: t4("actions.cancel") }),
            /* @__PURE__ */ (0, import_jsx_runtime71.jsx)(import_ui38.Prompt.Action, { onClick: handleContinue, type: "button", children: t4("actions.continue") })
          ] })
        ] }) })
      ] });
    };
  }
});

// src/components/modals/route-modal-form/index.ts
var init_route_modal_form2 = __esm({
  "src/components/modals/route-modal-form/index.ts"() {
    "use strict";
    init_route_modal_form();
  }
});

// src/components/modals/route-modal-provider/route-modal-context.tsx
var import_react45, RouteModalProviderContext;
var init_route_modal_context = __esm({
  "src/components/modals/route-modal-provider/route-modal-context.tsx"() {
    "use strict";
    import_react45 = require("react");
    RouteModalProviderContext = (0, import_react45.createContext)(null);
  }
});

// src/components/modals/route-modal-provider/route-provider.tsx
var import_react46, import_react_router_dom26, import_jsx_runtime72, RouteModalProvider;
var init_route_provider = __esm({
  "src/components/modals/route-modal-provider/route-provider.tsx"() {
    "use strict";
    import_react46 = require("react");
    import_react_router_dom26 = require("react-router-dom");
    init_route_modal_context();
    import_jsx_runtime72 = require("react/jsx-runtime");
    RouteModalProvider = ({
      prev,
      children
    }) => {
      const navigate = (0, import_react_router_dom26.useNavigate)();
      const [closeOnEscape, setCloseOnEscape] = (0, import_react46.useState)(true);
      const handleSuccess = (0, import_react46.useCallback)(
        (path) => {
          const to = path || prev;
          navigate(to, { replace: true, state: { isSubmitSuccessful: true } });
        },
        [navigate, prev]
      );
      const value = (0, import_react46.useMemo)(
        () => ({
          handleSuccess,
          setCloseOnEscape,
          __internal: { closeOnEscape }
        }),
        [handleSuccess, setCloseOnEscape, closeOnEscape]
      );
      return /* @__PURE__ */ (0, import_jsx_runtime72.jsx)(RouteModalProviderContext.Provider, { value, children });
    };
  }
});

// src/components/modals/stacked-modal-provider/stacked-modal-context.tsx
var import_react47, StackedModalContext;
var init_stacked_modal_context = __esm({
  "src/components/modals/stacked-modal-provider/stacked-modal-context.tsx"() {
    "use strict";
    import_react47 = require("react");
    StackedModalContext = (0, import_react47.createContext)(null);
  }
});

// src/components/modals/stacked-modal-provider/stacked-modal-provider.tsx
var import_react48, import_jsx_runtime73, StackedModalProvider;
var init_stacked_modal_provider = __esm({
  "src/components/modals/stacked-modal-provider/stacked-modal-provider.tsx"() {
    "use strict";
    import_react48 = require("react");
    init_stacked_modal_context();
    import_jsx_runtime73 = require("react/jsx-runtime");
    StackedModalProvider = ({
      children,
      onOpenChange
    }) => {
      const [state, setState] = (0, import_react48.useState)({});
      const getIsOpen2 = (id2) => {
        return state[id2] || false;
      };
      const setIsOpen = (id2, open) => {
        setState((prevState) => ({
          ...prevState,
          [id2]: open
        }));
        onOpenChange(open);
      };
      const register = (id2) => {
        setState((prevState) => ({
          ...prevState,
          [id2]: false
        }));
      };
      const unregister = (id2) => {
        setState((prevState) => {
          const newState = { ...prevState };
          delete newState[id2];
          return newState;
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime73.jsx)(
        StackedModalContext.Provider,
        {
          value: {
            getIsOpen: getIsOpen2,
            setIsOpen,
            register,
            unregister
          },
          children
        }
      );
    };
  }
});

// src/components/modals/stacked-modal-provider/use-stacked-modal.ts
var import_react49, useStackedModal;
var init_use_stacked_modal = __esm({
  "src/components/modals/stacked-modal-provider/use-stacked-modal.ts"() {
    "use strict";
    import_react49 = require("react");
    init_stacked_modal_context();
    useStackedModal = () => {
      const context = (0, import_react49.useContext)(StackedModalContext);
      if (!context) {
        throw new Error(
          "useStackedModal must be used within a StackedModalProvider"
        );
      }
      return context;
    };
  }
});

// src/components/modals/stacked-modal-provider/index.ts
var init_stacked_modal_provider2 = __esm({
  "src/components/modals/stacked-modal-provider/index.ts"() {
    "use strict";
    init_stacked_modal_provider();
    init_use_stacked_modal();
  }
});

// src/components/modals/route-drawer/route-drawer.tsx
var import_ui39, import_react50, import_react_router_dom27, import_jsx_runtime74, Root8, Header3, Title2, Description2, Body, Footer, Close2, Form2, RouteDrawer;
var init_route_drawer = __esm({
  "src/components/modals/route-drawer/route-drawer.tsx"() {
    "use strict";
    import_ui39 = require("@medusajs/ui");
    import_react50 = require("react");
    import_react_router_dom27 = require("react-router-dom");
    init_route_modal_form2();
    init_route_provider();
    init_stacked_modal_provider2();
    import_jsx_runtime74 = require("react/jsx-runtime");
    Root8 = ({ prev = "..", children }) => {
      const navigate = (0, import_react_router_dom27.useNavigate)();
      const [open, setOpen] = (0, import_react50.useState)(false);
      const [stackedModalOpen, onStackedModalOpen] = (0, import_react50.useState)(false);
      (0, import_react50.useEffect)(() => {
        setOpen(true);
        return () => {
          setOpen(false);
          onStackedModalOpen(false);
        };
      }, []);
      const handleOpenChange = (open2) => {
        if (!open2) {
          document.body.style.pointerEvents = "auto";
          navigate(prev, { replace: true });
          return;
        }
        setOpen(open2);
      };
      return /* @__PURE__ */ (0, import_jsx_runtime74.jsx)(import_ui39.Drawer, { open, onOpenChange: handleOpenChange, children: /* @__PURE__ */ (0, import_jsx_runtime74.jsx)(RouteModalProvider, { prev, children: /* @__PURE__ */ (0, import_jsx_runtime74.jsx)(StackedModalProvider, { onOpenChange: onStackedModalOpen, children: /* @__PURE__ */ (0, import_jsx_runtime74.jsx)(
        import_ui39.Drawer.Content,
        {
          "aria-describedby": void 0,
          className: (0, import_ui39.clx)({
            "!bg-ui-bg-disabled !inset-y-5 !right-5": stackedModalOpen
          }),
          children
        }
      ) }) }) });
    };
    Header3 = import_ui39.Drawer.Header;
    Title2 = import_ui39.Drawer.Title;
    Description2 = import_ui39.Drawer.Description;
    Body = import_ui39.Drawer.Body;
    Footer = import_ui39.Drawer.Footer;
    Close2 = import_ui39.Drawer.Close;
    Form2 = RouteModalForm;
    RouteDrawer = Object.assign(Root8, {
      Header: Header3,
      Title: Title2,
      Body,
      Description: Description2,
      Footer,
      Close: Close2,
      Form: Form2
    });
  }
});

// src/components/modals/route-drawer/index.ts
var init_route_drawer2 = __esm({
  "src/components/modals/route-drawer/index.ts"() {
    "use strict";
    init_route_drawer();
  }
});

// src/components/modals/route-modal-provider/use-route-modal.tsx
var import_react51, useRouteModal;
var init_use_route_modal = __esm({
  "src/components/modals/route-modal-provider/use-route-modal.tsx"() {
    "use strict";
    import_react51 = require("react");
    init_route_modal_context();
    useRouteModal = () => {
      const context = (0, import_react51.useContext)(RouteModalProviderContext);
      if (!context) {
        throw new Error("useRouteModal must be used within a RouteModalProvider");
      }
      return context;
    };
  }
});

// src/components/modals/route-modal-provider/index.ts
var init_route_modal_provider = __esm({
  "src/components/modals/route-modal-provider/index.ts"() {
    "use strict";
    init_route_provider();
    init_use_route_modal();
  }
});

// src/components/modals/route-focus-modal/route-focus-modal.tsx
var import_ui40, import_react52, import_react_router_dom28, import_jsx_runtime75, Root9, Content6, Header4, Title3, Description3, Footer2, Body2, Close3, Form3, RouteFocusModal;
var init_route_focus_modal = __esm({
  "src/components/modals/route-focus-modal/route-focus-modal.tsx"() {
    "use strict";
    import_ui40 = require("@medusajs/ui");
    import_react52 = require("react");
    import_react_router_dom28 = require("react-router-dom");
    init_route_modal_form2();
    init_route_modal_provider();
    init_route_provider();
    init_stacked_modal_provider2();
    import_jsx_runtime75 = require("react/jsx-runtime");
    Root9 = ({ prev = "..", children }) => {
      const navigate = (0, import_react_router_dom28.useNavigate)();
      const [open, setOpen] = (0, import_react52.useState)(false);
      const [stackedModalOpen, onStackedModalOpen] = (0, import_react52.useState)(false);
      (0, import_react52.useEffect)(() => {
        setOpen(true);
        return () => {
          setOpen(false);
          onStackedModalOpen(false);
        };
      }, []);
      const handleOpenChange = (open2) => {
        if (!open2) {
          document.body.style.pointerEvents = "auto";
          navigate(prev, { replace: true });
          return;
        }
        setOpen(open2);
      };
      return /* @__PURE__ */ (0, import_jsx_runtime75.jsx)(import_ui40.FocusModal, { open, onOpenChange: handleOpenChange, children: /* @__PURE__ */ (0, import_jsx_runtime75.jsx)(RouteModalProvider, { prev, children: /* @__PURE__ */ (0, import_jsx_runtime75.jsx)(StackedModalProvider, { onOpenChange: onStackedModalOpen, children: /* @__PURE__ */ (0, import_jsx_runtime75.jsx)(Content6, { stackedModalOpen, children }) }) }) });
    };
    Content6 = ({ stackedModalOpen, children }) => {
      const { __internal } = useRouteModal();
      const shouldPreventClose = !__internal.closeOnEscape;
      return /* @__PURE__ */ (0, import_jsx_runtime75.jsx)(
        import_ui40.FocusModal.Content,
        {
          onEscapeKeyDown: shouldPreventClose ? (e) => {
            e.preventDefault();
          } : void 0,
          className: (0, import_ui40.clx)({
            "!bg-ui-bg-disabled !inset-x-5 !inset-y-3": stackedModalOpen
          }),
          children
        }
      );
    };
    Header4 = import_ui40.FocusModal.Header;
    Title3 = import_ui40.FocusModal.Title;
    Description3 = import_ui40.FocusModal.Description;
    Footer2 = import_ui40.FocusModal.Footer;
    Body2 = import_ui40.FocusModal.Body;
    Close3 = import_ui40.FocusModal.Close;
    Form3 = RouteModalForm;
    RouteFocusModal = Object.assign(Root9, {
      Header: Header4,
      Title: Title3,
      Body: Body2,
      Description: Description3,
      Footer: Footer2,
      Close: Close3,
      Form: Form3
    });
  }
});

// src/components/modals/route-focus-modal/index.ts
var init_route_focus_modal2 = __esm({
  "src/components/modals/route-focus-modal/index.ts"() {
    "use strict";
    init_route_focus_modal();
  }
});

// src/components/modals/stacked-drawer/stacked-drawer.tsx
var import_ui41, import_react53, import_jsx_runtime76, Root10, Close4, Header5, Body3, Trigger6, Footer3, Title4, Description4, Content7, StackedDrawer;
var init_stacked_drawer = __esm({
  "src/components/modals/stacked-drawer/stacked-drawer.tsx"() {
    "use strict";
    import_ui41 = require("@medusajs/ui");
    import_react53 = require("react");
    init_stacked_modal_provider2();
    import_jsx_runtime76 = require("react/jsx-runtime");
    Root10 = ({ id: id2, children }) => {
      const { register, unregister, getIsOpen: getIsOpen2, setIsOpen } = useStackedModal();
      (0, import_react53.useEffect)(() => {
        register(id2);
        return () => unregister(id2);
      }, []);
      return /* @__PURE__ */ (0, import_jsx_runtime76.jsx)(import_ui41.Drawer, { open: getIsOpen2(id2), onOpenChange: (open) => setIsOpen(id2, open), children });
    };
    Close4 = import_ui41.Drawer.Close;
    Close4.displayName = "StackedDrawer.Close";
    Header5 = import_ui41.Drawer.Header;
    Header5.displayName = "StackedDrawer.Header";
    Body3 = import_ui41.Drawer.Body;
    Body3.displayName = "StackedDrawer.Body";
    Trigger6 = import_ui41.Drawer.Trigger;
    Trigger6.displayName = "StackedDrawer.Trigger";
    Footer3 = import_ui41.Drawer.Footer;
    Footer3.displayName = "StackedDrawer.Footer";
    Title4 = import_ui41.Drawer.Title;
    Title4.displayName = "StackedDrawer.Title";
    Description4 = import_ui41.Drawer.Description;
    Description4.displayName = "StackedDrawer.Description";
    Content7 = (0, import_react53.forwardRef)(({ className, ...props }, ref) => {
      return /* @__PURE__ */ (0, import_jsx_runtime76.jsx)(
        import_ui41.Drawer.Content,
        {
          ref,
          className: (0, import_ui41.clx)(className),
          overlayProps: {
            className: "bg-transparent"
          },
          ...props
        }
      );
    });
    Content7.displayName = "StackedDrawer.Content";
    StackedDrawer = Object.assign(Root10, {
      Close: Close4,
      Header: Header5,
      Body: Body3,
      Content: Content7,
      Trigger: Trigger6,
      Footer: Footer3,
      Description: Description4,
      Title: Title4
    });
  }
});

// src/components/modals/stacked-drawer/index.ts
var init_stacked_drawer2 = __esm({
  "src/components/modals/stacked-drawer/index.ts"() {
    "use strict";
    init_stacked_drawer();
  }
});

// src/components/modals/stacked-focus-modal/stacked-focus-modal.tsx
var import_ui42, import_react54, import_jsx_runtime77, Root11, Close5, Header6, Body4, Trigger7, Footer4, Title5, Description5, Content8, StackedFocusModal;
var init_stacked_focus_modal = __esm({
  "src/components/modals/stacked-focus-modal/stacked-focus-modal.tsx"() {
    "use strict";
    import_ui42 = require("@medusajs/ui");
    import_react54 = require("react");
    init_stacked_modal_provider2();
    import_jsx_runtime77 = require("react/jsx-runtime");
    Root11 = ({ id: id2, children }) => {
      const { register, unregister, getIsOpen: getIsOpen2, setIsOpen } = useStackedModal();
      (0, import_react54.useEffect)(() => {
        register(id2);
        return () => unregister(id2);
      }, []);
      return /* @__PURE__ */ (0, import_jsx_runtime77.jsx)(
        import_ui42.FocusModal,
        {
          open: getIsOpen2(id2),
          onOpenChange: (open) => setIsOpen(id2, open),
          children
        }
      );
    };
    Close5 = import_ui42.FocusModal.Close;
    Close5.displayName = "StackedFocusModal.Close";
    Header6 = import_ui42.FocusModal.Header;
    Header6.displayName = "StackedFocusModal.Header";
    Body4 = import_ui42.FocusModal.Body;
    Body4.displayName = "StackedFocusModal.Body";
    Trigger7 = import_ui42.FocusModal.Trigger;
    Trigger7.displayName = "StackedFocusModal.Trigger";
    Footer4 = import_ui42.FocusModal.Footer;
    Footer4.displayName = "StackedFocusModal.Footer";
    Title5 = import_ui42.FocusModal.Title;
    Title5.displayName = "StackedFocusModal.Title";
    Description5 = import_ui42.FocusModal.Description;
    Description5.displayName = "StackedFocusModal.Description";
    Content8 = (0, import_react54.forwardRef)(({ className, ...props }, ref) => {
      return /* @__PURE__ */ (0, import_jsx_runtime77.jsx)(
        import_ui42.FocusModal.Content,
        {
          ref,
          className: (0, import_ui42.clx)("!top-6", className),
          overlayProps: {
            className: "bg-transparent"
          },
          ...props
        }
      );
    });
    Content8.displayName = "StackedFocusModal.Content";
    StackedFocusModal = Object.assign(Root11, {
      Close: Close5,
      Header: Header6,
      Body: Body4,
      Content: Content8,
      Trigger: Trigger7,
      Footer: Footer4,
      Description: Description5,
      Title: Title5
    });
  }
});

// src/components/modals/stacked-focus-modal/index.ts
var init_stacked_focus_modal2 = __esm({
  "src/components/modals/stacked-focus-modal/index.ts"() {
    "use strict";
    init_stacked_focus_modal();
  }
});

// src/components/modals/index.ts
var init_modals = __esm({
  "src/components/modals/index.ts"() {
    "use strict";
    init_route_drawer2();
    init_route_focus_modal2();
    init_route_modal_provider();
    init_stacked_drawer2();
    init_stacked_focus_modal2();
    init_stacked_modal_provider2();
  }
});

// src/components/utilities/keybound-form/keybound-form.tsx
var import_react55, import_jsx_runtime78, KeyboundForm;
var init_keybound_form = __esm({
  "src/components/utilities/keybound-form/keybound-form.tsx"() {
    "use strict";
    import_react55 = __toESM(require("react"));
    import_jsx_runtime78 = require("react/jsx-runtime");
    KeyboundForm = import_react55.default.forwardRef(({ onSubmit, onKeyDown, ...rest }, ref) => {
      const handleSubmit = (event) => {
        event.preventDefault();
        onSubmit?.(event);
      };
      const handleKeyDown = (event) => {
        if (event.key === "Enter") {
          event.preventDefault();
          if (event.metaKey || event.ctrlKey) {
            handleSubmit(event);
          }
        }
      };
      return /* @__PURE__ */ (0, import_jsx_runtime78.jsx)(
        "form",
        {
          ...rest,
          onSubmit: handleSubmit,
          onKeyDown: onKeyDown ?? handleKeyDown,
          ref
        }
      );
    });
    KeyboundForm.displayName = "KeyboundForm";
  }
});

// src/components/utilities/keybound-form/index.ts
var init_keybound_form2 = __esm({
  "src/components/utilities/keybound-form/index.ts"() {
    "use strict";
    init_keybound_form();
  }
});

// src/lib/cast-number.ts
var castNumber;
var init_cast_number = __esm({
  "src/lib/cast-number.ts"() {
    "use strict";
    castNumber = (number14) => {
      return typeof number14 === "string" ? Number(number14.replace(",", ".")) : number14;
    };
  }
});

// src/lib/validation.ts
function partialFormValidation(form, fields, schema) {
  form.clearErrors(fields);
  const values = fields.reduce((acc, key) => {
    acc[key] = form.getValues(key);
    return acc;
  }, {});
  const validationResult = schema.safeParse(values);
  if (!validationResult.success) {
    validationResult.error.errors.forEach(({ path, message, code }) => {
      form.setError(path.join("."), {
        type: code,
        message
      });
    });
    return false;
  }
  return true;
}
var import_i18next3, import_zod4, optionalInt, optionalFloat, metadataFormSchema;
var init_validation = __esm({
  "src/lib/validation.ts"() {
    "use strict";
    import_i18next3 = __toESM(require("i18next"));
    import_zod4 = require("zod");
    init_cast_number();
    optionalInt = import_zod4.z.union([import_zod4.z.string(), import_zod4.z.number()]).optional().refine(
      (value) => {
        if (value === "" || value === void 0) {
          return true;
        }
        return Number.isInteger(castNumber(value));
      },
      {
        message: import_i18next3.default.t("validation.mustBeInt")
      }
    ).refine(
      (value) => {
        if (value === "" || value === void 0) {
          return true;
        }
        return castNumber(value) >= 0;
      },
      {
        message: import_i18next3.default.t("validation.mustBePositive")
      }
    );
    optionalFloat = import_zod4.z.union([import_zod4.z.string(), import_zod4.z.number()]).optional().refine(
      (value) => {
        if (value === "" || value === void 0) {
          return true;
        }
        return castNumber(value) >= 0;
      },
      {
        message: import_i18next3.default.t("validation.mustBePositive")
      }
    );
    metadataFormSchema = import_zod4.z.array(
      import_zod4.z.object({
        key: import_zod4.z.string(),
        value: import_zod4.z.unknown(),
        isInitial: import_zod4.z.boolean().optional(),
        isDeleted: import_zod4.z.boolean().optional(),
        isIgnored: import_zod4.z.boolean().optional()
      })
    );
  }
});

// src/routes/products/product-create/utils.ts
var normalizeProductFormValues, normalizeVariants, decorateVariantsWithDefaultValues;
var init_utils5 = __esm({
  "src/routes/products/product-create/utils.ts"() {
    "use strict";
    init_cast_number();
    normalizeProductFormValues = (values) => {
      const thumbnail = values.media?.find((media) => media.isThumbnail)?.url;
      const images = values.media?.filter((media) => !media.isThumbnail).map((media) => ({ url: media.url }));
      return {
        status: values.status,
        is_giftcard: false,
        tags: values?.tags?.length ? values.tags?.map((tag) => ({ id: tag })) : void 0,
        sales_channels: values?.sales_channels?.length ? values.sales_channels?.map((sc) => ({ id: sc.id })) : void 0,
        images,
        collection_id: values.collection_id || void 0,
        categories: values.categories.map((id2) => ({ id: id2 })),
        type_id: values.type_id || void 0,
        handle: values.handle || void 0,
        origin_country: values.origin_country || void 0,
        material: values.material || void 0,
        mid_code: values.mid_code || void 0,
        hs_code: values.hs_code || void 0,
        thumbnail,
        title: values.title,
        subtitle: values.subtitle || void 0,
        description: values.description || void 0,
        discountable: values.discountable || void 0,
        width: values.width ? parseFloat(values.width) : void 0,
        length: values.length ? parseFloat(values.length) : void 0,
        height: values.height ? parseFloat(values.height) : void 0,
        weight: values.weight ? parseFloat(values.weight) : void 0,
        options: values.options.filter((o) => o.title),
        // clean temp. values
        variants: normalizeVariants(
          values.variants.filter((variant) => variant.should_create),
          values.regionsCurrencyMap
        )
      };
    };
    normalizeVariants = (variants, regionsCurrencyMap) => {
      return variants.map((variant) => ({
        title: variant.custom_title || Object.values(variant.options || {}).join(" / "),
        options: variant.options,
        sku: variant.sku || void 0,
        manage_inventory: !!variant.manage_inventory,
        allow_backorder: !!variant.allow_backorder,
        inventory_items: variant.inventory.map((i) => {
          const quantity = castNumber(i.required_quantity);
          if (!i.inventory_item_id || !quantity) {
            return false;
          }
          return {
            ...i,
            required_quantity: quantity
          };
        }).filter(Boolean),
        prices: Object.entries(variant.prices || {}).map(([key, value]) => {
          if (value === "" || value === void 0) {
            return void 0;
          }
          if (key.startsWith("reg_")) {
            return {
              currency_code: regionsCurrencyMap[key],
              amount: castNumber(value),
              rules: { region_id: key }
            };
          } else {
            return {
              currency_code: key,
              amount: castNumber(value)
            };
          }
        }).filter((v) => !!v)
      }));
    };
    decorateVariantsWithDefaultValues = (variants) => {
      return variants.map((variant) => ({
        ...variant,
        title: variant.title || "",
        sku: variant.sku || "",
        manage_inventory: variant.manage_inventory || false,
        allow_backorder: variant.allow_backorder || false,
        inventory_kit: variant.inventory_kit || false
      }));
    };
  }
});

// src/routes/products/product-create/constants.ts
var import_zod5, MediaSchema, ProductCreateVariantSchema, ProductCreateOptionSchema, ProductCreateSchema, EditProductMediaSchema, PRODUCT_CREATE_FORM_DEFAULTS;
var init_constants3 = __esm({
  "src/routes/products/product-create/constants.ts"() {
    "use strict";
    import_zod5 = require("zod");
    init_i18n();
    init_validation();
    init_utils5();
    MediaSchema = import_zod5.z.object({
      id: import_zod5.z.string().optional(),
      url: import_zod5.z.string(),
      isThumbnail: import_zod5.z.boolean(),
      file: import_zod5.z.any().nullable()
      // File
    });
    ProductCreateVariantSchema = import_zod5.z.object({
      should_create: import_zod5.z.boolean(),
      is_default: import_zod5.z.boolean().optional(),
      title: import_zod5.z.string(),
      upc: import_zod5.z.string().optional(),
      ean: import_zod5.z.string().optional(),
      barcode: import_zod5.z.string().optional(),
      mid_code: import_zod5.z.string().optional(),
      hs_code: import_zod5.z.string().optional(),
      width: optionalInt,
      height: optionalInt,
      length: optionalInt,
      weight: optionalInt,
      material: import_zod5.z.string().optional(),
      origin_country: import_zod5.z.string().optional(),
      custom_title: import_zod5.z.string().optional(),
      sku: import_zod5.z.string().optional(),
      manage_inventory: import_zod5.z.boolean().optional(),
      allow_backorder: import_zod5.z.boolean().optional(),
      inventory_kit: import_zod5.z.boolean().optional(),
      options: import_zod5.z.record(import_zod5.z.string(), import_zod5.z.string()),
      variant_rank: import_zod5.z.number(),
      prices: import_zod5.z.record(import_zod5.z.string(), optionalFloat).optional(),
      inventory: import_zod5.z.array(
        import_zod5.z.object({
          inventory_item_id: import_zod5.z.string(),
          required_quantity: optionalInt
        })
      ).optional()
    });
    ProductCreateOptionSchema = import_zod5.z.object({
      title: import_zod5.z.string(),
      values: import_zod5.z.array(import_zod5.z.string()).min(1)
    });
    ProductCreateSchema = import_zod5.z.object({
      title: import_zod5.z.string().min(1),
      subtitle: import_zod5.z.string().optional(),
      handle: import_zod5.z.string().optional(),
      description: import_zod5.z.string().optional(),
      discountable: import_zod5.z.boolean(),
      type_id: import_zod5.z.string().optional(),
      collection_id: import_zod5.z.string().optional(),
      categories: import_zod5.z.array(import_zod5.z.string()),
      tags: import_zod5.z.array(import_zod5.z.string()).optional(),
      sales_channels: import_zod5.z.array(
        import_zod5.z.object({
          id: import_zod5.z.string(),
          name: import_zod5.z.string()
        })
      ).optional(),
      origin_country: import_zod5.z.string().optional(),
      material: import_zod5.z.string().optional(),
      width: import_zod5.z.string().optional(),
      length: import_zod5.z.string().optional(),
      height: import_zod5.z.string().optional(),
      weight: import_zod5.z.string().optional(),
      mid_code: import_zod5.z.string().optional(),
      hs_code: import_zod5.z.string().optional(),
      options: import_zod5.z.array(ProductCreateOptionSchema).min(1),
      enable_variants: import_zod5.z.boolean(),
      variants: import_zod5.z.array(ProductCreateVariantSchema).min(1),
      media: import_zod5.z.array(MediaSchema).optional()
    }).superRefine((data, ctx) => {
      if (data.variants.every((v) => !v.should_create)) {
        return ctx.addIssue({
          code: import_zod5.z.ZodIssueCode.custom,
          path: ["variants"],
          message: "invalid_length"
        });
      }
      const skus = /* @__PURE__ */ new Set();
      data.variants.forEach((v, index2) => {
        if (v.sku) {
          if (skus.has(v.sku)) {
            ctx.addIssue({
              code: import_zod5.z.ZodIssueCode.custom,
              path: [`variants.${index2}.sku`],
              message: import_i18next.default.t("products.create.errors.uniqueSku")
            });
          }
          skus.add(v.sku);
        }
      });
    });
    EditProductMediaSchema = import_zod5.z.object({
      media: import_zod5.z.array(MediaSchema)
    });
    PRODUCT_CREATE_FORM_DEFAULTS = {
      discountable: true,
      tags: [],
      sales_channels: [],
      options: [
        {
          title: "Default option",
          values: ["Default option value"]
        }
      ],
      variants: decorateVariantsWithDefaultValues([
        {
          title: "Default variant",
          should_create: true,
          variant_rank: 0,
          options: {
            "Default option": "Default option value"
          },
          inventory: [{ inventory_item_id: "", required_quantity: "" }],
          is_default: true
        }
      ]),
      enable_variants: false,
      media: [],
      categories: [],
      collection_id: "",
      description: "",
      handle: "",
      height: "",
      hs_code: "",
      length: "",
      material: "",
      mid_code: "",
      origin_country: "",
      subtitle: "",
      title: "",
      type_id: "",
      weight: "",
      width: ""
    };
  }
});

// src/components/inputs/handle-input/handle-input.tsx
var import_ui43, import_react56, import_jsx_runtime79, HandleInput;
var init_handle_input = __esm({
  "src/components/inputs/handle-input/handle-input.tsx"() {
    "use strict";
    import_ui43 = require("@medusajs/ui");
    import_react56 = require("react");
    import_jsx_runtime79 = require("react/jsx-runtime");
    HandleInput = (0, import_react56.forwardRef)((props, ref) => {
      return /* @__PURE__ */ (0, import_jsx_runtime79.jsxs)("div", { className: "relative", children: [
        /* @__PURE__ */ (0, import_jsx_runtime79.jsx)("div", { className: "absolute inset-y-0 left-0 z-10 flex w-8 items-center justify-center border-r", children: /* @__PURE__ */ (0, import_jsx_runtime79.jsx)(
          import_ui43.Text,
          {
            className: "text-ui-fg-muted",
            size: "small",
            leading: "compact",
            weight: "plus",
            children: "/"
          }
        ) }),
        /* @__PURE__ */ (0, import_jsx_runtime79.jsx)(import_ui43.Input, { ref, ...props, className: "pl-10" })
      ] });
    });
    HandleInput.displayName = "HandleInput";
  }
});

// src/components/inputs/handle-input/index.ts
var init_handle_input2 = __esm({
  "src/components/inputs/handle-input/index.ts"() {
    "use strict";
    init_handle_input();
  }
});

// src/routes/products/product-create/components/product-create-details-form/components/product-create-details-general-section/product-create-general-section.tsx
var import_ui44, import_react_i18next35, import_jsx_runtime80, ProductCreateGeneralSection;
var init_product_create_general_section = __esm({
  "src/routes/products/product-create/components/product-create-details-form/components/product-create-details-general-section/product-create-general-section.tsx"() {
    "use strict";
    import_ui44 = require("@medusajs/ui");
    import_react_i18next35 = require("react-i18next");
    init_form2();
    init_handle_input2();
    import_jsx_runtime80 = require("react/jsx-runtime");
    ProductCreateGeneralSection = ({
      form
    }) => {
      const { t: t4 } = (0, import_react_i18next35.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime80.jsxs)("div", { id: "general", className: "flex flex-col gap-y-6", children: [
        /* @__PURE__ */ (0, import_jsx_runtime80.jsx)("div", { className: "flex flex-col gap-y-2", children: /* @__PURE__ */ (0, import_jsx_runtime80.jsxs)("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-3", children: [
          /* @__PURE__ */ (0, import_jsx_runtime80.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "title",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime80.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime80.jsx)(Form.Label, { children: t4("products.fields.title.label") }),
                  /* @__PURE__ */ (0, import_jsx_runtime80.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime80.jsx)(import_ui44.Input, { ...field, placeholder: "Winter jacket" }) })
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime80.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "subtitle",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime80.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime80.jsx)(Form.Label, { optional: true, children: t4("products.fields.subtitle.label") }),
                  /* @__PURE__ */ (0, import_jsx_runtime80.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime80.jsx)(import_ui44.Input, { ...field, placeholder: "Warm and cosy" }) })
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime80.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "handle",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime80.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime80.jsx)(
                    Form.Label,
                    {
                      tooltip: t4("products.fields.handle.tooltip"),
                      optional: true,
                      children: t4("fields.handle")
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime80.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime80.jsx)(HandleInput, { ...field, placeholder: "winter-jacket" }) })
                ] });
              }
            }
          )
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime80.jsx)(
          Form.Field,
          {
            control: form.control,
            name: "description",
            render: ({ field }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime80.jsxs)(Form.Item, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime80.jsx)(Form.Label, { optional: true, children: t4("products.fields.description.label") }),
                /* @__PURE__ */ (0, import_jsx_runtime80.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime80.jsx)(import_ui44.Textarea, { ...field, placeholder: "A warm and cozy jacket" }) })
              ] });
            }
          }
        )
      ] });
    };
  }
});

// src/routes/products/product-create/components/product-create-details-form/components/product-create-details-general-section/index.ts
var init_product_create_details_general_section = __esm({
  "src/routes/products/product-create/components/product-create-details-form/components/product-create-details-general-section/index.ts"() {
    "use strict";
    init_product_create_general_section();
  }
});

// src/components/common/file-upload/file-upload.tsx
var import_icons23, import_ui45, import_react57, import_jsx_runtime81, FileUpload;
var init_file_upload = __esm({
  "src/components/common/file-upload/file-upload.tsx"() {
    "use strict";
    import_icons23 = require("@medusajs/icons");
    import_ui45 = require("@medusajs/ui");
    import_react57 = require("react");
    import_jsx_runtime81 = require("react/jsx-runtime");
    FileUpload = ({
      label,
      hint,
      multiple = true,
      hasError,
      formats,
      onUploaded
    }) => {
      const [isDragOver, setIsDragOver] = (0, import_react57.useState)(false);
      const inputRef = (0, import_react57.useRef)(null);
      const dropZoneRef = (0, import_react57.useRef)(null);
      const handleOpenFileSelector = () => {
        inputRef.current?.click();
      };
      const handleDragEnter = (event) => {
        event.preventDefault();
        event.stopPropagation();
        const files = event.dataTransfer?.files;
        if (!files) {
          return;
        }
        setIsDragOver(true);
      };
      const handleDragLeave = (event) => {
        event.preventDefault();
        event.stopPropagation();
        if (!dropZoneRef.current || dropZoneRef.current.contains(event.relatedTarget)) {
          return;
        }
        setIsDragOver(false);
      };
      const handleUploaded = (files) => {
        if (!files) {
          return;
        }
        const fileList = Array.from(files);
        const fileObj = fileList.map((file) => {
          const id2 = Math.random().toString(36).substring(7);
          const previewUrl = URL.createObjectURL(file);
          return {
            id: id2,
            url: previewUrl,
            file
          };
        });
        onUploaded(fileObj);
      };
      const handleDrop = (event) => {
        event.preventDefault();
        event.stopPropagation();
        setIsDragOver(false);
        handleUploaded(event.dataTransfer?.files);
      };
      const handleFileChange = async (event) => {
        handleUploaded(event.target.files);
      };
      return /* @__PURE__ */ (0, import_jsx_runtime81.jsxs)("div", { children: [
        /* @__PURE__ */ (0, import_jsx_runtime81.jsxs)(
          "button",
          {
            ref: dropZoneRef,
            type: "button",
            onClick: handleOpenFileSelector,
            onDrop: handleDrop,
            onDragOver: (e) => e.preventDefault(),
            onDragEnter: handleDragEnter,
            onDragLeave: handleDragLeave,
            className: (0, import_ui45.clx)(
              "bg-ui-bg-component border-ui-border-strong transition-fg group flex w-full flex-col items-center gap-y-2 rounded-lg border border-dashed p-8",
              "hover:border-ui-border-interactive focus:border-ui-border-interactive",
              "focus:shadow-borders-focus outline-none focus:border-solid",
              {
                "!border-ui-border-error": hasError,
                "!border-ui-border-interactive": isDragOver
              }
            ),
            children: [
              /* @__PURE__ */ (0, import_jsx_runtime81.jsxs)("div", { className: "text-ui-fg-subtle group-disabled:text-ui-fg-disabled flex items-center gap-x-2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime81.jsx)(import_icons23.ArrowDownTray, {}),
                /* @__PURE__ */ (0, import_jsx_runtime81.jsx)(import_ui45.Text, { children: label })
              ] }),
              !!hint && /* @__PURE__ */ (0, import_jsx_runtime81.jsx)(
                import_ui45.Text,
                {
                  size: "small",
                  leading: "compact",
                  className: "text-ui-fg-muted group-disabled:text-ui-fg-disabled",
                  children: hint
                }
              )
            ]
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime81.jsx)(
          "input",
          {
            hidden: true,
            ref: inputRef,
            onChange: handleFileChange,
            type: "file",
            accept: formats.join(","),
            multiple
          }
        )
      ] });
    };
  }
});

// src/components/common/file-upload/index.ts
var init_file_upload2 = __esm({
  "src/components/common/file-upload/index.ts"() {
    "use strict";
    init_file_upload();
  }
});

// src/routes/products/common/components/upload-media-form-item/upload-media-form-item.tsx
var import_react_i18next36, import_jsx_runtime82, SUPPORTED_FORMATS, SUPPORTED_FORMATS_FILE_EXTENSIONS, UploadMediaFormItem;
var init_upload_media_form_item = __esm({
  "src/routes/products/common/components/upload-media-form-item/upload-media-form-item.tsx"() {
    "use strict";
    import_react_i18next36 = require("react-i18next");
    init_file_upload2();
    init_form2();
    import_jsx_runtime82 = require("react/jsx-runtime");
    SUPPORTED_FORMATS = [
      "image/jpeg",
      "image/png",
      "image/gif",
      "image/webp",
      "image/heic",
      "image/svg+xml"
    ];
    SUPPORTED_FORMATS_FILE_EXTENSIONS = [
      ".jpeg",
      ".png",
      ".gif",
      ".webp",
      ".heic",
      ".svg"
    ];
    UploadMediaFormItem = ({
      form,
      append,
      showHint = true
    }) => {
      const { t: t4 } = (0, import_react_i18next36.useTranslation)();
      const hasInvalidFiles = (fileList) => {
        const invalidFile = fileList.find(
          (f) => !SUPPORTED_FORMATS.includes(f.file.type)
        );
        if (invalidFile) {
          form.setError("media", {
            type: "invalid_file",
            message: t4("products.media.invalidFileType", {
              name: invalidFile.file.name,
              types: SUPPORTED_FORMATS_FILE_EXTENSIONS.join(", ")
            })
          });
          return true;
        }
        return false;
      };
      return /* @__PURE__ */ (0, import_jsx_runtime82.jsx)(
        Form.Field,
        {
          control: form.control,
          name: "media",
          render: () => {
            return /* @__PURE__ */ (0, import_jsx_runtime82.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime82.jsxs)("div", { className: "flex flex-col gap-y-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime82.jsxs)("div", { className: "flex flex-col gap-y-1", children: [
                /* @__PURE__ */ (0, import_jsx_runtime82.jsx)(Form.Label, { optional: true, children: t4("products.media.label") }),
                showHint && /* @__PURE__ */ (0, import_jsx_runtime82.jsx)(Form.Hint, { children: t4("products.media.editHint") })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime82.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime82.jsx)(
                FileUpload,
                {
                  label: t4("products.media.uploadImagesLabel"),
                  hint: t4("products.media.uploadImagesHint"),
                  hasError: !!form.formState.errors.media,
                  formats: SUPPORTED_FORMATS,
                  onUploaded: (files) => {
                    form.clearErrors("media");
                    if (hasInvalidFiles(files)) {
                      return;
                    }
                    files.forEach((f) => append({ ...f, isThumbnail: false }));
                  }
                }
              ) }),
              /* @__PURE__ */ (0, import_jsx_runtime82.jsx)(Form.ErrorMessage, {})
            ] }) });
          }
        }
      );
    };
  }
});

// src/routes/products/common/components/upload-media-form-item/index.ts
var init_upload_media_form_item2 = __esm({
  "src/routes/products/common/components/upload-media-form-item/index.ts"() {
    "use strict";
    init_upload_media_form_item();
  }
});

// src/routes/products/product-create/components/product-create-details-form/components/product-create-details-media-section/product-create-details-media-section.tsx
function formatFileSize(bytes, decimalPlaces = 2) {
  if (bytes === 0) {
    return "0 Bytes";
  }
  const k = 1024;
  const sizes = ["Bytes", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"];
  const i = Math.floor(Math.log(bytes) / Math.log(k));
  return parseFloat((bytes / Math.pow(k, i)).toFixed(decimalPlaces)) + " " + sizes[i];
}
var import_icons24, import_ui46, import_react58, import_react_hook_form3, import_react_i18next37, import_jsx_runtime83, ProductCreateMediaSection, MediaItem, ThumbnailPreview;
var init_product_create_details_media_section = __esm({
  "src/routes/products/product-create/components/product-create-details-form/components/product-create-details-media-section/product-create-details-media-section.tsx"() {
    "use strict";
    import_icons24 = require("@medusajs/icons");
    import_ui46 = require("@medusajs/ui");
    import_react58 = require("react");
    import_react_hook_form3 = require("react-hook-form");
    import_react_i18next37 = require("react-i18next");
    init_action_menu2();
    init_upload_media_form_item2();
    import_jsx_runtime83 = require("react/jsx-runtime");
    ProductCreateMediaSection = ({
      form
    }) => {
      const { fields, append, remove } = (0, import_react_hook_form3.useFieldArray)({
        name: "media",
        control: form.control,
        keyName: "field_id"
      });
      const getOnDelete = (index2) => {
        return () => {
          remove(index2);
        };
      };
      const getMakeThumbnail = (index2) => {
        return () => {
          const newFields = fields.map((field, i) => {
            return {
              ...field,
              isThumbnail: i === index2
            };
          });
          form.setValue("media", newFields, {
            shouldDirty: true,
            shouldTouch: true
          });
        };
      };
      const getItemHandlers = (index2) => {
        return {
          onDelete: getOnDelete(index2),
          onMakeThumbnail: getMakeThumbnail(index2)
        };
      };
      return /* @__PURE__ */ (0, import_jsx_runtime83.jsxs)("div", { id: "media", className: "flex flex-col gap-y-2", children: [
        /* @__PURE__ */ (0, import_jsx_runtime83.jsx)(UploadMediaFormItem, { form, append, showHint: false }),
        /* @__PURE__ */ (0, import_jsx_runtime83.jsx)("ul", { className: "flex flex-col gap-y-2", children: fields.map((field, index2) => {
          const { onDelete, onMakeThumbnail } = getItemHandlers(index2);
          return /* @__PURE__ */ (0, import_jsx_runtime83.jsx)(
            MediaItem,
            {
              field,
              onDelete,
              onMakeThumbnail
            },
            field.id
          );
        }) })
      ] });
    };
    MediaItem = ({ field, onDelete, onMakeThumbnail }) => {
      const { t: t4 } = (0, import_react_i18next37.useTranslation)();
      if (!field.file) {
        return null;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime83.jsxs)("li", { className: "bg-ui-bg-component shadow-elevation-card-rest flex items-center justify-between rounded-lg px-3 py-2", children: [
        /* @__PURE__ */ (0, import_jsx_runtime83.jsxs)("div", { className: "flex items-center gap-x-3", children: [
          /* @__PURE__ */ (0, import_jsx_runtime83.jsx)("div", { className: "bg-ui-bg-base h-10 w-[30px] overflow-hidden rounded-md", children: /* @__PURE__ */ (0, import_jsx_runtime83.jsx)(ThumbnailPreview, { file: field.file }) }),
          /* @__PURE__ */ (0, import_jsx_runtime83.jsxs)("div", { className: "flex flex-col", children: [
            /* @__PURE__ */ (0, import_jsx_runtime83.jsx)(import_ui46.Text, { size: "small", leading: "compact", children: field.file.name }),
            /* @__PURE__ */ (0, import_jsx_runtime83.jsxs)("div", { className: "flex items-center gap-x-1", children: [
              field.isThumbnail && /* @__PURE__ */ (0, import_jsx_runtime83.jsx)(import_icons24.ThumbnailBadge, {}),
              /* @__PURE__ */ (0, import_jsx_runtime83.jsx)(import_ui46.Text, { size: "xsmall", leading: "compact", className: "text-ui-fg-subtle", children: formatFileSize(field.file.size) })
            ] })
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime83.jsxs)("div", { className: "flex items-center gap-x-1", children: [
          /* @__PURE__ */ (0, import_jsx_runtime83.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      label: t4("products.media.makeThumbnail"),
                      icon: /* @__PURE__ */ (0, import_jsx_runtime83.jsx)(import_icons24.StackPerspective, {}),
                      onClick: onMakeThumbnail
                    }
                  ]
                },
                {
                  actions: [
                    {
                      icon: /* @__PURE__ */ (0, import_jsx_runtime83.jsx)(import_icons24.Trash, {}),
                      label: t4("actions.delete"),
                      onClick: onDelete
                    }
                  ]
                }
              ]
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime83.jsx)(
            import_ui46.IconButton,
            {
              type: "button",
              size: "small",
              variant: "transparent",
              onClick: onDelete,
              children: /* @__PURE__ */ (0, import_jsx_runtime83.jsx)(import_icons24.XMark, {})
            }
          )
        ] })
      ] });
    };
    ThumbnailPreview = ({ file }) => {
      const [thumbnailUrl, setThumbnailUrl] = (0, import_react58.useState)(null);
      (0, import_react58.useEffect)(() => {
        if (file) {
          const objectUrl = URL.createObjectURL(file);
          setThumbnailUrl(objectUrl);
          return () => URL.revokeObjectURL(objectUrl);
        }
      }, [file]);
      if (!thumbnailUrl) {
        return null;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime83.jsx)(
        "img",
        {
          src: thumbnailUrl,
          alt: "",
          className: "size-full object-cover object-center"
        }
      );
    };
  }
});

// src/routes/products/product-create/components/product-create-details-form/components/product-create-details-media-section/index.ts
var init_product_create_details_media_section2 = __esm({
  "src/routes/products/product-create/components/product-create-details-form/components/product-create-details-media-section/index.ts"() {
    "use strict";
    init_product_create_details_media_section();
  }
});

// ../../../node_modules/@dnd-kit/utilities/dist/utilities.esm.js
var import_react59, canUseDOM, CSS2;
var init_utilities_esm = __esm({
  "../../../node_modules/@dnd-kit/utilities/dist/utilities.esm.js"() {
    "use strict";
    import_react59 = require("react");
    canUseDOM = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
    CSS2 = /* @__PURE__ */ Object.freeze({
      Translate: {
        toString(transform) {
          if (!transform) {
            return;
          }
          const {
            x,
            y
          } = transform;
          return "translate3d(" + (x ? Math.round(x) : 0) + "px, " + (y ? Math.round(y) : 0) + "px, 0)";
        }
      },
      Scale: {
        toString(transform) {
          if (!transform) {
            return;
          }
          const {
            scaleX,
            scaleY
          } = transform;
          return "scaleX(" + scaleX + ") scaleY(" + scaleY + ")";
        }
      },
      Transform: {
        toString(transform) {
          if (!transform) {
            return;
          }
          return [CSS2.Translate.toString(transform), CSS2.Scale.toString(transform)].join(" ");
        }
      },
      Transition: {
        toString(_ref) {
          let {
            property,
            duration,
            easing
          } = _ref;
          return property + " " + duration + "ms " + easing;
        }
      }
    });
  }
});

// src/components/common/sortable-list/sortable-list.tsx
var import_core2, import_sortable, import_icons25, import_ui47, import_react60, import_jsx_runtime84, List, dropAnimationConfig, Overlay2, SortableItemContext, useSortableItemContext, Item3, DragHandle, SortableList;
var init_sortable_list = __esm({
  "src/components/common/sortable-list/sortable-list.tsx"() {
    "use strict";
    import_core2 = require("@dnd-kit/core");
    import_sortable = require("@dnd-kit/sortable");
    init_utilities_esm();
    import_icons25 = require("@medusajs/icons");
    import_ui47 = require("@medusajs/ui");
    import_react60 = require("react");
    import_jsx_runtime84 = require("react/jsx-runtime");
    List = ({
      items,
      onChange,
      renderItem
    }) => {
      const [active, setActive] = (0, import_react60.useState)(null);
      const [activeItem, activeIndex] = (0, import_react60.useMemo)(() => {
        if (active === null) {
          return [null, null];
        }
        const index2 = items.findIndex(({ id: id2 }) => id2 === active.id);
        return [items[index2], index2];
      }, [active, items]);
      const sensors = (0, import_core2.useSensors)(
        (0, import_core2.useSensor)(import_core2.PointerSensor),
        (0, import_core2.useSensor)(import_core2.KeyboardSensor, {
          coordinateGetter: import_sortable.sortableKeyboardCoordinates
        })
      );
      const handleDragStart = ({ active: active2 }) => {
        setActive(active2);
      };
      const handleDragEnd = ({ active: active2, over }) => {
        if (over && active2.id !== over.id) {
          const activeIndex2 = items.findIndex(({ id: id2 }) => id2 === active2.id);
          const overIndex = items.findIndex(({ id: id2 }) => id2 === over.id);
          onChange((0, import_sortable.arrayMove)(items, activeIndex2, overIndex));
        }
        setActive(null);
      };
      const handleDragCancel = () => {
        setActive(null);
      };
      return /* @__PURE__ */ (0, import_jsx_runtime84.jsxs)(
        import_core2.DndContext,
        {
          sensors,
          onDragStart: handleDragStart,
          onDragEnd: handleDragEnd,
          onDragCancel: handleDragCancel,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime84.jsx)(Overlay2, { children: activeItem && activeIndex !== null ? renderItem(activeItem, activeIndex) : null }),
            /* @__PURE__ */ (0, import_jsx_runtime84.jsx)(import_sortable.SortableContext, { items, children: /* @__PURE__ */ (0, import_jsx_runtime84.jsx)(
              "ul",
              {
                role: "application",
                className: "flex list-inside list-none list-image-none flex-col p-0",
                children: items.map((item, index2) => /* @__PURE__ */ (0, import_jsx_runtime84.jsx)(import_react60.Fragment, { children: renderItem(item, index2) }, item.id))
              }
            ) })
          ]
        }
      );
    };
    dropAnimationConfig = {
      sideEffects: (0, import_core2.defaultDropAnimationSideEffects)({
        styles: {
          active: {
            opacity: "0.4"
          }
        }
      })
    };
    Overlay2 = ({ children }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime84.jsx)(
        import_core2.DragOverlay,
        {
          className: "shadow-elevation-card-hover overflow-hidden rounded-md [&>li]:border-b-0",
          dropAnimation: dropAnimationConfig,
          children
        }
      );
    };
    SortableItemContext = (0, import_react60.createContext)(null);
    useSortableItemContext = () => {
      const context = (0, import_react60.useContext)(SortableItemContext);
      if (!context) {
        throw new Error(
          "useSortableItemContext must be used within a SortableItemContext"
        );
      }
      return context;
    };
    Item3 = ({
      id: id2,
      className,
      children
    }) => {
      const {
        attributes,
        isDragging,
        listeners,
        setNodeRef,
        setActivatorNodeRef,
        transform,
        transition
      } = (0, import_sortable.useSortable)({ id: id2 });
      const context = (0, import_react60.useMemo)(
        () => ({
          attributes,
          listeners,
          ref: setActivatorNodeRef,
          isDragging
        }),
        [attributes, listeners, setActivatorNodeRef, isDragging]
      );
      const style = {
        opacity: isDragging ? 0.4 : void 0,
        transform: CSS2.Translate.toString(transform),
        transition
      };
      return /* @__PURE__ */ (0, import_jsx_runtime84.jsx)(SortableItemContext.Provider, { value: context, children: /* @__PURE__ */ (0, import_jsx_runtime84.jsx)(
        "li",
        {
          className: (0, import_ui47.clx)("transition-fg flex flex-1 list-none", className),
          ref: setNodeRef,
          style,
          children
        }
      ) });
    };
    DragHandle = () => {
      const { attributes, listeners, ref } = useSortableItemContext();
      return /* @__PURE__ */ (0, import_jsx_runtime84.jsx)(
        import_ui47.IconButton,
        {
          variant: "transparent",
          size: "small",
          ...attributes,
          ...listeners,
          ref,
          className: "cursor-grab touch-none active:cursor-grabbing",
          children: /* @__PURE__ */ (0, import_jsx_runtime84.jsx)(import_icons25.DotsSix, { className: "text-ui-fg-muted" })
        }
      );
    };
    SortableList = Object.assign(List, {
      Item: Item3,
      DragHandle
    });
  }
});

// src/components/common/sortable-list/index.ts
var init_sortable_list2 = __esm({
  "src/components/common/sortable-list/index.ts"() {
    "use strict";
    init_sortable_list();
  }
});

// src/components/common/switch-box/switch-box.tsx
var import_ui48, import_jsx_runtime85, SwitchBox;
var init_switch_box = __esm({
  "src/components/common/switch-box/switch-box.tsx"() {
    "use strict";
    import_ui48 = require("@medusajs/ui");
    init_form2();
    import_jsx_runtime85 = require("react/jsx-runtime");
    SwitchBox = ({
      label,
      description,
      optional = false,
      tooltip,
      onCheckedChange,
      ...props
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime85.jsx)(
        Form.Field,
        {
          ...props,
          render: ({ field: { value, onChange, ...field } }) => {
            return /* @__PURE__ */ (0, import_jsx_runtime85.jsxs)(Form.Item, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime85.jsxs)("div", { className: "bg-ui-bg-component shadow-elevation-card-rest flex items-start gap-x-3 rounded-lg p-3", children: [
                /* @__PURE__ */ (0, import_jsx_runtime85.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime85.jsx)(import_ui48.Switch, { ...field, checked: value, onCheckedChange: (e) => {
                  onCheckedChange?.(e);
                  onChange(e);
                } }) }),
                /* @__PURE__ */ (0, import_jsx_runtime85.jsxs)("div", { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime85.jsx)(Form.Label, { optional, tooltip, children: label }),
                  /* @__PURE__ */ (0, import_jsx_runtime85.jsx)(Form.Hint, { children: description })
                ] })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime85.jsx)(Form.ErrorMessage, {})
            ] });
          }
        }
      );
    };
  }
});

// src/components/common/switch-box/index.ts
var init_switch_box2 = __esm({
  "src/components/common/switch-box/index.ts"() {
    "use strict";
    init_switch_box();
  }
});

// src/components/inputs/chip-input/chip-input.tsx
var import_icons26, import_ui49, import_framer_motion, import_react61, import_jsx_runtime86, ChipInput;
var init_chip_input = __esm({
  "src/components/inputs/chip-input/chip-input.tsx"() {
    "use strict";
    import_icons26 = require("@medusajs/icons");
    import_ui49 = require("@medusajs/ui");
    import_framer_motion = require("framer-motion");
    import_react61 = require("react");
    import_jsx_runtime86 = require("react/jsx-runtime");
    ChipInput = (0, import_react61.forwardRef)(
      ({
        value,
        onChange,
        onBlur,
        disabled,
        name,
        showRemove = true,
        variant = "base",
        allowDuplicates = false,
        placeholder,
        className
      }, ref) => {
        const innerRef = (0, import_react61.useRef)(null);
        const isControlledRef = (0, import_react61.useRef)(typeof value !== "undefined");
        const isControlled = isControlledRef.current;
        const [uncontrolledValue, setUncontrolledValue] = (0, import_react61.useState)([]);
        (0, import_react61.useImperativeHandle)(
          ref,
          () => innerRef.current
        );
        const [duplicateIndex, setDuplicateIndex] = (0, import_react61.useState)(null);
        const chips = isControlled ? value : uncontrolledValue;
        const handleAddChip = (chip) => {
          const cleanValue = chip.trim();
          if (!cleanValue) {
            return;
          }
          if (!allowDuplicates && chips.includes(cleanValue)) {
            setDuplicateIndex(chips.indexOf(cleanValue));
            setTimeout(() => {
              setDuplicateIndex(null);
            }, 300);
            return;
          }
          onChange?.([...chips, cleanValue]);
          if (!isControlled) {
            setUncontrolledValue([...chips, cleanValue]);
          }
        };
        const handleRemoveChip = (chip) => {
          onChange?.(chips.filter((v) => v !== chip));
          if (!isControlled) {
            setUncontrolledValue(chips.filter((v) => v !== chip));
          }
        };
        const handleBlur = (e) => {
          onBlur?.();
          if (e.target.value) {
            handleAddChip(e.target.value);
            e.target.value = "";
          }
        };
        const handleKeyDown = (e) => {
          if (e.key === "Enter" || e.key === ",") {
            e.preventDefault();
            if (!innerRef.current?.value) {
              return;
            }
            handleAddChip(innerRef.current?.value ?? "");
            innerRef.current.value = "";
            innerRef.current?.focus();
          }
          if (e.key === "Backspace" && innerRef.current?.value === "") {
            handleRemoveChip(chips[chips.length - 1]);
          }
        };
        const shake = {
          x: [0, -2, 2, -2, 2, 0],
          transition: { duration: 0.3 }
        };
        return /* @__PURE__ */ (0, import_jsx_runtime86.jsxs)(
          "div",
          {
            className: (0, import_ui49.clx)(
              "shadow-borders-base flex min-h-8 flex-wrap items-center gap-1 rounded-md px-2 py-1.5",
              "transition-fg focus-within:shadow-borders-interactive-with-active",
              "has-[input:disabled]:bg-ui-bg-disabled has-[input:disabled]:text-ui-fg-disabled has-[input:disabled]:cursor-not-allowed",
              {
                "bg-ui-bg-field-component hover:bg-ui-bg-field-component-hover": variant === "contrast",
                "bg-ui-bg-field hover:bg-ui-bg-field-hover": variant === "base"
              },
              className
            ),
            tabIndex: -1,
            onClick: () => innerRef.current?.focus(),
            children: [
              chips.map((v, index2) => {
                return /* @__PURE__ */ (0, import_jsx_runtime86.jsx)(import_framer_motion.AnimatePresence, { children: /* @__PURE__ */ (0, import_jsx_runtime86.jsx)(
                  import_ui49.Badge,
                  {
                    size: "2xsmall",
                    className: (0, import_ui49.clx)("gap-x-0.5 pl-1.5 pr-1.5", {
                      "transition-fg pr-1": showRemove,
                      "shadow-borders-focus": index2 === duplicateIndex
                    }),
                    asChild: true,
                    children: /* @__PURE__ */ (0, import_jsx_runtime86.jsxs)(
                      import_framer_motion.motion.div,
                      {
                        animate: index2 === duplicateIndex ? shake : void 0,
                        children: [
                          v,
                          showRemove && /* @__PURE__ */ (0, import_jsx_runtime86.jsx)(
                            "button",
                            {
                              tabIndex: -1,
                              type: "button",
                              onClick: () => handleRemoveChip(v),
                              className: (0, import_ui49.clx)(
                                "text-ui-fg-subtle transition-fg outline-none"
                              ),
                              children: /* @__PURE__ */ (0, import_jsx_runtime86.jsx)(import_icons26.XMarkMini, {})
                            }
                          )
                        ]
                      }
                    )
                  }
                ) }, `${v}-${index2}`);
              }),
              /* @__PURE__ */ (0, import_jsx_runtime86.jsx)(
                "input",
                {
                  className: (0, import_ui49.clx)(
                    "caret-ui-fg-base text-ui-fg-base txt-compact-small flex-1 appearance-none bg-transparent",
                    "disabled:text-ui-fg-disabled disabled:cursor-not-allowed",
                    "focus:outline-none",
                    "placeholder:text-ui-fg-muted"
                  ),
                  onKeyDown: handleKeyDown,
                  onBlur: handleBlur,
                  disabled,
                  name,
                  ref: innerRef,
                  placeholder: chips.length === 0 ? placeholder : void 0,
                  autoComplete: "off"
                }
              )
            ]
          }
        );
      }
    );
    ChipInput.displayName = "ChipInput";
  }
});

// src/components/inputs/chip-input/index.ts
var init_chip_input2 = __esm({
  "src/components/inputs/chip-input/index.ts"() {
    "use strict";
    init_chip_input();
  }
});

// src/routes/products/product-create/components/product-create-details-form/components/product-create-details-variant-section/product-create-details-variant-section.tsx
var import_icons27, import_ui50, import_react_hook_form4, import_react_i18next38, import_jsx_runtime87, getPermutations, getVariantName, ProductCreateVariantsSection;
var init_product_create_details_variant_section = __esm({
  "src/routes/products/product-create/components/product-create-details-form/components/product-create-details-variant-section/product-create-details-variant-section.tsx"() {
    "use strict";
    import_icons27 = require("@medusajs/icons");
    import_ui50 = require("@medusajs/ui");
    import_react_hook_form4 = require("react-hook-form");
    import_react_i18next38 = require("react-i18next");
    init_form2();
    init_inline_tip2();
    init_sortable_list2();
    init_switch_box2();
    init_chip_input2();
    init_utils5();
    import_jsx_runtime87 = require("react/jsx-runtime");
    getPermutations = (data) => {
      if (data.length === 0) {
        return [];
      }
      if (data.length === 1) {
        return data[0].values.map((value) => ({ [data[0].title]: value }));
      }
      const toProcess = data[0];
      const rest = data.slice(1);
      return toProcess.values.flatMap((value) => {
        return getPermutations(rest).map((permutation) => {
          return {
            [toProcess.title]: value,
            ...permutation
          };
        });
      });
    };
    getVariantName = (options) => {
      return Object.values(options).join(" / ");
    };
    ProductCreateVariantsSection = ({
      form
    }) => {
      const { t: t4 } = (0, import_react_i18next38.useTranslation)();
      const options = (0, import_react_hook_form4.useFieldArray)({
        control: form.control,
        name: "options"
      });
      const variants = (0, import_react_hook_form4.useFieldArray)({
        control: form.control,
        name: "variants"
      });
      const watchedAreVariantsEnabled = (0, import_react_hook_form4.useWatch)({
        control: form.control,
        name: "enable_variants",
        defaultValue: false
      });
      const watchedOptions = (0, import_react_hook_form4.useWatch)({
        control: form.control,
        name: "options",
        defaultValue: []
      });
      const watchedVariants = (0, import_react_hook_form4.useWatch)({
        control: form.control,
        name: "variants",
        defaultValue: []
      });
      const showInvalidOptionsMessage = !!form.formState.errors.options?.length;
      const showInvalidVariantsMessage = form.formState.errors.variants?.root?.message === "invalid_length";
      const handleOptionValueUpdate = (index2, value) => {
        const { isTouched: hasUserSelectedVariants } = form.getFieldState("variants");
        const newOptions = [...watchedOptions];
        newOptions[index2].values = value;
        const permutations = getPermutations(newOptions);
        const oldVariants = [...watchedVariants];
        const findMatchingPermutation = (options2) => {
          return permutations.find(
            (permutation) => Object.keys(options2).every((key) => options2[key] === permutation[key])
          );
        };
        const newVariants = oldVariants.reduce((variants2, variant) => {
          const match = findMatchingPermutation(variant.options);
          if (match) {
            variants2.push({
              ...variant,
              title: getVariantName(match),
              options: match
            });
          }
          return variants2;
        }, []);
        const usedPermutations = new Set(
          newVariants.map((variant) => variant.options)
        );
        const unusedPermutations = permutations.filter(
          (permutation) => !usedPermutations.has(permutation)
        );
        unusedPermutations.forEach((permutation) => {
          newVariants.push({
            title: getVariantName(permutation),
            options: permutation,
            should_create: hasUserSelectedVariants ? false : true,
            variant_rank: newVariants.length,
            // NOTE - prepare inventory array here for now so we prevent rendering issue if we append the items later
            inventory: [{ inventory_item_id: "", required_quantity: "" }]
          });
        });
        form.setValue("variants", newVariants);
      };
      const handleRemoveOption = (index2) => {
        if (index2 === 0) {
          return;
        }
        options.remove(index2);
        const newOptions = [...watchedOptions];
        newOptions.splice(index2, 1);
        const permutations = getPermutations(newOptions);
        const oldVariants = [...watchedVariants];
        const findMatchingPermutation = (options2) => {
          return permutations.find(
            (permutation) => Object.keys(options2).every((key) => options2[key] === permutation[key])
          );
        };
        const newVariants = oldVariants.reduce((variants2, variant) => {
          const match = findMatchingPermutation(variant.options);
          if (match) {
            variants2.push({
              ...variant,
              title: getVariantName(match),
              options: match
            });
          }
          return variants2;
        }, []);
        const usedPermutations = new Set(
          newVariants.map((variant) => variant.options)
        );
        const unusedPermutations = permutations.filter(
          (permutation) => !usedPermutations.has(permutation)
        );
        unusedPermutations.forEach((permutation) => {
          newVariants.push({
            title: getVariantName(permutation),
            options: permutation,
            should_create: false,
            variant_rank: newVariants.length
          });
        });
        form.setValue("variants", newVariants);
      };
      const handleRankChange = (items) => {
        const update = items.map((item, index2) => {
          const variant = watchedVariants.find((v) => v.title === item.title);
          return {
            id: item.id,
            ...variant || item,
            variant_rank: index2
          };
        });
        variants.replace(update);
      };
      const getCheckboxState = (variants2) => {
        if (variants2.every((variant) => variant.should_create)) {
          return true;
        }
        if (variants2.some((variant) => variant.should_create)) {
          return "indeterminate";
        }
        return false;
      };
      const onCheckboxChange = (value) => {
        switch (value) {
          case true: {
            const update = watchedVariants.map((variant) => {
              return {
                ...variant,
                should_create: true
              };
            });
            form.setValue("variants", update);
            break;
          }
          case false: {
            const update = watchedVariants.map((variant) => {
              return {
                ...variant,
                should_create: false
              };
            });
            form.setValue("variants", decorateVariantsWithDefaultValues(update));
            break;
          }
          case "indeterminate":
            break;
        }
      };
      const createDefaultOptionAndVariant = () => {
        form.setValue("options", [
          {
            title: "Default option",
            values: ["Default option value"]
          }
        ]);
        form.setValue(
          "variants",
          decorateVariantsWithDefaultValues([
            {
              title: "Default variant",
              should_create: true,
              variant_rank: 0,
              options: {
                "Default option": "Default option value"
              },
              inventory: [{ inventory_item_id: "", required_quantity: "" }],
              is_default: true
            }
          ])
        );
      };
      return /* @__PURE__ */ (0, import_jsx_runtime87.jsxs)("div", { id: "variants", className: "flex flex-col gap-y-8", children: [
        /* @__PURE__ */ (0, import_jsx_runtime87.jsxs)("div", { className: "flex flex-col gap-y-6", children: [
          /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(import_ui50.Heading, { level: "h2", children: t4("products.create.variants.header") }),
          /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(
            SwitchBox,
            {
              control: form.control,
              name: "enable_variants",
              label: t4("products.create.variants.subHeadingTitle"),
              description: t4("products.create.variants.subHeadingDescription"),
              onCheckedChange: (checked) => {
                if (checked) {
                  form.setValue("options", [
                    {
                      title: "",
                      values: []
                    }
                  ]);
                  form.setValue("variants", []);
                } else {
                  createDefaultOptionAndVariant();
                }
              }
            }
          )
        ] }),
        watchedAreVariantsEnabled && /* @__PURE__ */ (0, import_jsx_runtime87.jsxs)(import_jsx_runtime87.Fragment, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime87.jsx)("div", { className: "flex flex-col gap-y-6", children: /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "options",
              render: () => {
                return /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime87.jsxs)("div", { className: "flex flex-col gap-y-6", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime87.jsxs)("div", { className: "flex items-start justify-between gap-x-4", children: [
                    /* @__PURE__ */ (0, import_jsx_runtime87.jsxs)("div", { className: "flex flex-col", children: [
                      /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(Form.Label, { children: t4("products.create.variants.productOptions.label") }),
                      /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(Form.Hint, { children: t4("products.create.variants.productOptions.hint") })
                    ] }),
                    /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(
                      import_ui50.Button,
                      {
                        size: "small",
                        variant: "secondary",
                        type: "button",
                        onClick: () => {
                          options.append({
                            title: "",
                            values: []
                          });
                        },
                        children: t4("actions.add")
                      }
                    )
                  ] }),
                  showInvalidOptionsMessage && /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(import_ui50.Alert, { dismissible: true, variant: "error", children: t4("products.create.errors.options") }),
                  /* @__PURE__ */ (0, import_jsx_runtime87.jsx)("ul", { className: "flex flex-col gap-y-4", children: options.fields.map((option, index2) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime87.jsxs)(
                      "li",
                      {
                        className: "bg-ui-bg-component shadow-elevation-card-rest grid grid-cols-[1fr_28px] items-center gap-1.5 rounded-xl p-1.5",
                        children: [
                          /* @__PURE__ */ (0, import_jsx_runtime87.jsxs)("div", { className: "grid grid-cols-[min-content,1fr] items-center gap-1.5", children: [
                            /* @__PURE__ */ (0, import_jsx_runtime87.jsx)("div", { className: "flex items-center px-2 py-1.5", children: /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(
                              import_ui50.Label,
                              {
                                size: "xsmall",
                                weight: "plus",
                                className: "text-ui-fg-subtle",
                                htmlFor: `options.${index2}.title`,
                                children: t4("fields.title")
                              }
                            ) }),
                            /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(
                              import_ui50.Input,
                              {
                                className: "bg-ui-bg-field-component hover:bg-ui-bg-field-component-hover",
                                ...form.register(
                                  `options.${index2}.title`
                                ),
                                placeholder: t4(
                                  "products.fields.options.optionTitlePlaceholder"
                                )
                              }
                            ),
                            /* @__PURE__ */ (0, import_jsx_runtime87.jsx)("div", { className: "flex items-center px-2 py-1.5", children: /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(
                              import_ui50.Label,
                              {
                                size: "xsmall",
                                weight: "plus",
                                className: "text-ui-fg-subtle",
                                htmlFor: `options.${index2}.values`,
                                children: t4("fields.values")
                              }
                            ) }),
                            /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(
                              import_react_hook_form4.Controller,
                              {
                                control: form.control,
                                name: `options.${index2}.values`,
                                render: ({
                                  field: { onChange, ...field }
                                }) => {
                                  const handleValueChange = (value) => {
                                    handleOptionValueUpdate(index2, value);
                                    onChange(value);
                                  };
                                  return /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(
                                    ChipInput,
                                    {
                                      ...field,
                                      variant: "contrast",
                                      onChange: handleValueChange,
                                      placeholder: t4(
                                        "products.fields.options.variantionsPlaceholder"
                                      )
                                    }
                                  );
                                }
                              }
                            )
                          ] }),
                          /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(
                            import_ui50.IconButton,
                            {
                              type: "button",
                              size: "small",
                              variant: "transparent",
                              className: "text-ui-fg-muted",
                              disabled: index2 === 0,
                              onClick: () => handleRemoveOption(index2),
                              children: /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(import_icons27.XMarkMini, {})
                            }
                          )
                        ]
                      },
                      option.id
                    );
                  }) })
                ] }) });
              }
            }
          ) }),
          /* @__PURE__ */ (0, import_jsx_runtime87.jsx)("div", { className: "grid grid-cols-1 gap-x-4 gap-y-8", children: /* @__PURE__ */ (0, import_jsx_runtime87.jsxs)("div", { className: "flex flex-col gap-y-6", children: [
            /* @__PURE__ */ (0, import_jsx_runtime87.jsxs)("div", { className: "flex flex-col", children: [
              /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(import_ui50.Label, { weight: "plus", children: t4("products.create.variants.productVariants.label") }),
              /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(import_ui50.Hint, { children: t4("products.create.variants.productVariants.hint") })
            ] }),
            !showInvalidOptionsMessage && showInvalidVariantsMessage && /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(import_ui50.Alert, { dismissible: true, variant: "error", children: t4("products.create.errors.variants") }),
            variants.fields.length > 0 ? /* @__PURE__ */ (0, import_jsx_runtime87.jsxs)("div", { className: "overflow-hidden rounded-xl border", children: [
              /* @__PURE__ */ (0, import_jsx_runtime87.jsxs)(
                "div",
                {
                  className: "bg-ui-bg-component text-ui-fg-subtle grid items-center gap-3 border-b px-6 py-2.5",
                  style: {
                    gridTemplateColumns: `20px 28px repeat(${watchedOptions.length}, 1fr)`
                  },
                  children: [
                    /* @__PURE__ */ (0, import_jsx_runtime87.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(
                      import_ui50.Checkbox,
                      {
                        checked: getCheckboxState(watchedVariants),
                        onCheckedChange: onCheckboxChange
                      }
                    ) }),
                    /* @__PURE__ */ (0, import_jsx_runtime87.jsx)("div", {}),
                    watchedOptions.map((option, index2) => /* @__PURE__ */ (0, import_jsx_runtime87.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(import_ui50.Text, { size: "small", leading: "compact", weight: "plus", children: option.title }) }, index2))
                  ]
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(
                SortableList,
                {
                  items: variants.fields,
                  onChange: handleRankChange,
                  renderItem: (item, index2) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(
                      SortableList.Item,
                      {
                        id: item.id,
                        className: (0, import_ui50.clx)("bg-ui-bg-base border-b", {
                          "border-b-0": index2 === variants.fields.length - 1
                        }),
                        children: /* @__PURE__ */ (0, import_jsx_runtime87.jsxs)(
                          "div",
                          {
                            className: "text-ui-fg-subtle grid w-full items-center gap-3 px-6 py-2.5",
                            style: {
                              gridTemplateColumns: `20px 28px repeat(${watchedOptions.length}, 1fr)`
                            },
                            children: [
                              /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(
                                Form.Field,
                                {
                                  control: form.control,
                                  name: `variants.${index2}.should_create`,
                                  render: ({
                                    field: { value, onChange, ...field }
                                  }) => {
                                    return /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(
                                      import_ui50.Checkbox,
                                      {
                                        ...field,
                                        checked: value,
                                        onCheckedChange: onChange
                                      }
                                    ) }) });
                                  }
                                }
                              ),
                              /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(SortableList.DragHandle, {}),
                              Object.values(item.options).map((value, index3) => /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(import_ui50.Text, { size: "small", leading: "compact", children: value }, index3))
                            ]
                          }
                        )
                      }
                    );
                  }
                }
              )
            ] }) : /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(import_ui50.Alert, { children: t4("products.create.variants.productVariants.alert") }),
            variants.fields.length > 0 && /* @__PURE__ */ (0, import_jsx_runtime87.jsx)(InlineTip, { variant: "tip", children: t4("products.create.variants.productVariants.tip") })
          ] }) })
        ] })
      ] });
    };
  }
});

// src/routes/products/product-create/components/product-create-details-form/components/product-create-details-variant-section/index.ts
var init_product_create_details_variant_section2 = __esm({
  "src/routes/products/product-create/components/product-create-details-form/components/product-create-details-variant-section/index.ts"() {
    "use strict";
    init_product_create_details_variant_section();
  }
});

// src/routes/products/product-create/components/product-create-details-form/product-create-details-form.tsx
var import_ui51, import_react_i18next39, import_jsx_runtime88, ProductCreateDetailsForm, Header7;
var init_product_create_details_form = __esm({
  "src/routes/products/product-create/components/product-create-details-form/product-create-details-form.tsx"() {
    "use strict";
    import_ui51 = require("@medusajs/ui");
    import_react_i18next39 = require("react-i18next");
    init_divider2();
    init_extensions();
    init_product_create_details_general_section();
    init_product_create_details_media_section2();
    init_product_create_details_variant_section2();
    import_jsx_runtime88 = require("react/jsx-runtime");
    ProductCreateDetailsForm = ({ form }) => {
      const { getFormFields } = useDashboardExtension();
      const fields = getFormFields("product", "create", "general");
      return /* @__PURE__ */ (0, import_jsx_runtime88.jsx)("div", { className: "flex flex-col items-center p-16", children: /* @__PURE__ */ (0, import_jsx_runtime88.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8", children: [
        /* @__PURE__ */ (0, import_jsx_runtime88.jsx)(Header7, {}),
        /* @__PURE__ */ (0, import_jsx_runtime88.jsxs)("div", { className: "flex flex-col gap-y-6", children: [
          /* @__PURE__ */ (0, import_jsx_runtime88.jsx)(ProductCreateGeneralSection, { form }),
          /* @__PURE__ */ (0, import_jsx_runtime88.jsx)(FormExtensionZone, { fields, form }),
          /* @__PURE__ */ (0, import_jsx_runtime88.jsx)(ProductCreateMediaSection, { form })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime88.jsx)(Divider, {}),
        /* @__PURE__ */ (0, import_jsx_runtime88.jsx)(ProductCreateVariantsSection, { form })
      ] }) });
    };
    Header7 = () => {
      const { t: t4 } = (0, import_react_i18next39.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime88.jsx)("div", { className: "flex flex-col", children: /* @__PURE__ */ (0, import_jsx_runtime88.jsx)(import_ui51.Heading, { children: t4("products.create.header") }) });
    };
  }
});

// src/routes/products/product-create/components/product-create-details-form/index.ts
var init_product_create_details_form2 = __esm({
  "src/routes/products/product-create/components/product-create-details-form/index.ts"() {
    "use strict";
    init_product_create_details_form();
  }
});

// src/components/utilities/generic-forward-ref/generic-forward-ref.tsx
function genericForwardRef(render) {
  return (0, import_react62.forwardRef)(render);
}
var import_react62;
var init_generic_forward_ref = __esm({
  "src/components/utilities/generic-forward-ref/generic-forward-ref.tsx"() {
    "use strict";
    import_react62 = require("react");
  }
});

// src/components/utilities/generic-forward-ref/index.ts
var init_generic_forward_ref2 = __esm({
  "src/components/utilities/generic-forward-ref/index.ts"() {
    "use strict";
    init_generic_forward_ref();
  }
});

// src/components/inputs/combobox/combobox.tsx
var import_react63, import_icons28, import_ui52, import_match_sorter2, import_react64, import_react_i18next40, import_jsx_runtime89, TABLUAR_NUM_WIDTH, TAG_BASE_WIDTH, ComboboxImpl, Combobox;
var init_combobox = __esm({
  "src/components/inputs/combobox/combobox.tsx"() {
    "use strict";
    import_react63 = require("@ariakit/react");
    import_icons28 = require("@medusajs/icons");
    import_ui52 = require("@medusajs/ui");
    import_match_sorter2 = require("match-sorter");
    import_react64 = require("react");
    import_react_i18next40 = require("react-i18next");
    init_generic_forward_ref2();
    import_jsx_runtime89 = require("react/jsx-runtime");
    TABLUAR_NUM_WIDTH = 8;
    TAG_BASE_WIDTH = 28;
    ComboboxImpl = ({
      value: controlledValue,
      onChange,
      searchValue: controlledSearchValue,
      onSearchValueChange,
      options,
      className,
      placeholder,
      fetchNextPage,
      isFetchingNextPage,
      onCreateOption,
      noResultsPlaceholder,
      ...inputProps
    }, ref) => {
      const [open, setOpen] = (0, import_react64.useState)(false);
      const [isPending, startTransition] = (0, import_react64.useTransition)();
      const { t: t4 } = (0, import_react_i18next40.useTranslation)();
      const comboboxRef = (0, import_react64.useRef)(null);
      const listboxRef = (0, import_react64.useRef)(null);
      (0, import_react64.useImperativeHandle)(ref, () => comboboxRef.current);
      const isValueControlled = controlledValue !== void 0;
      const isSearchControlled = controlledSearchValue !== void 0;
      const isArrayValue = Array.isArray(controlledValue);
      const emptyState = isArrayValue ? [] : "";
      const [uncontrolledSearchValue, setUncontrolledSearchValue] = (0, import_react64.useState)(
        controlledSearchValue || ""
      );
      const defferedSearchValue = (0, import_react64.useDeferredValue)(uncontrolledSearchValue);
      const [uncontrolledValue, setUncontrolledValue] = (0, import_react64.useState)(emptyState);
      const searchValue = isSearchControlled ? controlledSearchValue : uncontrolledSearchValue;
      const selectedValues = isValueControlled ? controlledValue : uncontrolledValue;
      const handleValueChange = (newValues) => {
        const exists = options.filter((o) => !o.disabled).find((o) => {
          if (isArrayValue) {
            return newValues?.includes(o.value);
          }
          return o.value === newValues;
        });
        if (!exists && onCreateOption && newValues) {
          onCreateOption(newValues);
        }
        if (!isValueControlled) {
          setUncontrolledValue(newValues || emptyState);
        }
        if (onChange) {
          onChange(newValues);
        }
        setUncontrolledSearchValue("");
      };
      const handleSearchChange = (query) => {
        setUncontrolledSearchValue(query);
        if (onSearchValueChange) {
          onSearchValueChange(query);
        }
      };
      const matches = (0, import_react64.useMemo)(() => {
        if (isSearchControlled) {
          return [];
        }
        return (0, import_match_sorter2.matchSorter)(options, defferedSearchValue, {
          keys: ["label"]
        });
      }, [options, defferedSearchValue, isSearchControlled]);
      const observer = (0, import_react64.useRef)(
        new IntersectionObserver(
          (entries) => {
            const first = entries[0];
            if (first.isIntersecting) {
              fetchNextPage?.();
            }
          },
          { threshold: 1 }
        )
      );
      const lastOptionRef = (0, import_react64.useCallback)(
        (node) => {
          if (isFetchingNextPage) {
            return;
          }
          if (observer.current) {
            observer.current.disconnect();
          }
          if (node) {
            observer.current.observe(node);
          }
        },
        [isFetchingNextPage]
      );
      const handleOpenChange = (open2) => {
        if (!open2) {
          setUncontrolledSearchValue("");
        }
        setOpen(open2);
      };
      const hasValue = selectedValues?.length > 0;
      const showTag = hasValue && isArrayValue;
      const showSelected = showTag && !searchValue && !open;
      const hideInput = !isArrayValue && !open;
      const selectedLabel = options.find((o) => o.value === selectedValues)?.label;
      const hidePlaceholder = showSelected || open;
      const tagWidth = (0, import_react64.useMemo)(() => {
        if (!Array.isArray(selectedValues)) {
          return TAG_BASE_WIDTH + TABLUAR_NUM_WIDTH;
        }
        const count3 = selectedValues.length;
        const digits = count3.toString().length;
        return TAG_BASE_WIDTH + digits * TABLUAR_NUM_WIDTH;
      }, [selectedValues]);
      const results = (0, import_react64.useMemo)(() => {
        return isSearchControlled ? options : matches;
      }, [matches, options, isSearchControlled]);
      return /* @__PURE__ */ (0, import_jsx_runtime89.jsxs)(
        import_react63.ComboboxProvider,
        {
          open,
          setOpen: handleOpenChange,
          selectedValue: selectedValues,
          setSelectedValue: (value) => handleValueChange(value),
          value: uncontrolledSearchValue,
          setValue: (query) => {
            startTransition(() => handleSearchChange(query));
          },
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime89.jsxs)(
              "div",
              {
                className: (0, import_ui52.clx)(
                  "relative flex cursor-pointer items-center gap-x-2 overflow-hidden",
                  "h-8 w-full rounded-md",
                  "bg-ui-bg-field transition-fg shadow-borders-base",
                  "has-[input:focus]:shadow-borders-interactive-with-active",
                  "has-[:invalid]:shadow-borders-error has-[[aria-invalid=true]]:shadow-borders-error",
                  "has-[:disabled]:bg-ui-bg-disabled has-[:disabled]:text-ui-fg-disabled has-[:disabled]:cursor-not-allowed",
                  className
                ),
                style: {
                  "--tag-width": `${tagWidth}px`
                },
                children: [
                  showTag && /* @__PURE__ */ (0, import_jsx_runtime89.jsxs)(
                    "button",
                    {
                      type: "button",
                      onClick: (e) => {
                        e.preventDefault();
                        handleValueChange(void 0);
                      },
                      className: "bg-ui-bg-base hover:bg-ui-bg-base-hover txt-compact-small-plus text-ui-fg-subtle focus-within:border-ui-fg-interactive transition-fg absolute left-0.5 top-0.5 z-[1] flex h-[28px] items-center rounded-[4px] border py-[3px] pl-1.5 pr-1 outline-none",
                      children: [
                        /* @__PURE__ */ (0, import_jsx_runtime89.jsx)("span", { className: "tabular-nums", children: selectedValues.length }),
                        /* @__PURE__ */ (0, import_jsx_runtime89.jsx)(import_icons28.XMarkMini, { className: "text-ui-fg-muted" })
                      ]
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime89.jsxs)("div", { className: "relative flex size-full items-center", children: [
                    showSelected && /* @__PURE__ */ (0, import_jsx_runtime89.jsx)(
                      "div",
                      {
                        className: (0, import_ui52.clx)(
                          "pointer-events-none absolute inset-y-0 flex size-full items-center",
                          {
                            "left-[calc(var(--tag-width)+8px)]": showTag,
                            "left-2": !showTag
                          }
                        ),
                        children: /* @__PURE__ */ (0, import_jsx_runtime89.jsx)(import_ui52.Text, { size: "small", leading: "compact", children: t4("general.selected") })
                      }
                    ),
                    hideInput && /* @__PURE__ */ (0, import_jsx_runtime89.jsx)(
                      "div",
                      {
                        className: (0, import_ui52.clx)(
                          "pointer-events-none absolute inset-y-0 flex size-full items-center overflow-hidden",
                          {
                            "left-[calc(var(--tag-width)+8px)]": showTag,
                            "left-2": !showTag
                          }
                        ),
                        children: /* @__PURE__ */ (0, import_jsx_runtime89.jsx)(import_ui52.Text, { size: "small", leading: "compact", className: "truncate", children: selectedLabel })
                      }
                    ),
                    /* @__PURE__ */ (0, import_jsx_runtime89.jsx)(
                      import_react63.Combobox,
                      {
                        autoSelect: true,
                        ref: comboboxRef,
                        onFocus: () => setOpen(true),
                        className: (0, import_ui52.clx)(
                          "txt-compact-small text-ui-fg-base placeholder:text-ui-fg-subtle transition-fg size-full cursor-pointer bg-transparent pl-2 pr-8 outline-none focus:cursor-text",
                          "hover:bg-ui-bg-field-hover",
                          {
                            "opacity-0": hideInput,
                            "pl-2": !showTag,
                            "pl-[calc(var(--tag-width)+8px)]": showTag
                          }
                        ),
                        placeholder: hidePlaceholder ? void 0 : placeholder,
                        ...inputProps
                      }
                    )
                  ] }),
                  /* @__PURE__ */ (0, import_jsx_runtime89.jsx)(
                    import_react63.ComboboxDisclosure,
                    {
                      render: (props) => {
                        return /* @__PURE__ */ (0, import_jsx_runtime89.jsx)(
                          "button",
                          {
                            ...props,
                            type: "button",
                            className: "text-ui-fg-muted transition-fg hover:bg-ui-bg-field-hover absolute right-0 flex size-8 items-center justify-center rounded-r outline-none",
                            children: /* @__PURE__ */ (0, import_jsx_runtime89.jsx)(import_icons28.TrianglesMini, {})
                          }
                        );
                      }
                    }
                  )
                ]
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime89.jsxs)(
              import_react63.ComboboxPopover,
              {
                gutter: 4,
                sameWidth: true,
                ref: listboxRef,
                role: "listbox",
                className: (0, import_ui52.clx)(
                  "shadow-elevation-flyout bg-ui-bg-base z-50 rounded-[8px] p-1",
                  "max-h-[200px] overflow-y-auto",
                  "data-[state=open]:animate-in data-[state=open]:fade-in-0 data-[state=open]:zoom-in-95",
                  "data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95",
                  "data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2"
                ),
                style: {
                  pointerEvents: open ? "auto" : "none"
                },
                "aria-busy": isPending,
                children: [
                  results.map(({ value, label, disabled }) => /* @__PURE__ */ (0, import_jsx_runtime89.jsxs)(
                    import_react63.ComboboxItem,
                    {
                      value,
                      focusOnHover: true,
                      setValueOnClick: false,
                      disabled,
                      className: (0, import_ui52.clx)(
                        "transition-fg bg-ui-bg-base data-[active-item=true]:bg-ui-bg-base-hover group flex cursor-pointer items-center gap-x-2 rounded-[4px] px-2 py-1",
                        {
                          "text-ui-fg-disabled": disabled,
                          "bg-ui-bg-component": disabled
                        }
                      ),
                      children: [
                        /* @__PURE__ */ (0, import_jsx_runtime89.jsx)(import_react63.ComboboxItemCheck, { className: "flex !size-5 items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime89.jsx)(import_icons28.EllipseMiniSolid, {}) }),
                        /* @__PURE__ */ (0, import_jsx_runtime89.jsx)(import_react63.ComboboxItemValue, { className: "txt-compact-small", children: label })
                      ]
                    },
                    value
                  )),
                  !!fetchNextPage && /* @__PURE__ */ (0, import_jsx_runtime89.jsx)("div", { ref: lastOptionRef, className: "w-px" }),
                  isFetchingNextPage && /* @__PURE__ */ (0, import_jsx_runtime89.jsx)("div", { className: "transition-fg bg-ui-bg-base flex items-center rounded-[4px] px-2 py-1.5", children: /* @__PURE__ */ (0, import_jsx_runtime89.jsx)("div", { className: "bg-ui-bg-component size-full h-5 w-full animate-pulse rounded-[4px]" }) }),
                  !results.length && (noResultsPlaceholder && !searchValue?.length ? noResultsPlaceholder : /* @__PURE__ */ (0, import_jsx_runtime89.jsx)("div", { className: "flex items-center gap-x-2 rounded-[4px] px-2 py-1.5", children: /* @__PURE__ */ (0, import_jsx_runtime89.jsx)(
                    import_ui52.Text,
                    {
                      size: "small",
                      leading: "compact",
                      className: "text-ui-fg-subtle",
                      children: t4("general.noResultsTitle")
                    }
                  ) })),
                  !results.length && onCreateOption && /* @__PURE__ */ (0, import_jsx_runtime89.jsxs)(import_react64.Fragment, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime89.jsx)(import_react63.Separator, { className: "bg-ui-border-base -mx-1" }),
                    /* @__PURE__ */ (0, import_jsx_runtime89.jsxs)(
                      import_react63.ComboboxItem,
                      {
                        value: uncontrolledSearchValue,
                        focusOnHover: true,
                        setValueOnClick: false,
                        className: "transition-fg bg-ui-bg-base data-[active-item=true]:bg-ui-bg-base-hover group mt-1 flex cursor-pointer items-center gap-x-2 rounded-[4px] px-2 py-1.5",
                        children: [
                          /* @__PURE__ */ (0, import_jsx_runtime89.jsx)(import_icons28.PlusMini, { className: "text-ui-fg-subtle" }),
                          /* @__PURE__ */ (0, import_jsx_runtime89.jsxs)(import_ui52.Text, { size: "small", leading: "compact", children: [
                            t4("actions.create"),
                            ' "',
                            searchValue,
                            '"'
                          ] })
                        ]
                      }
                    )
                  ] })
                ]
              }
            )
          ]
        }
      );
    };
    Combobox = genericForwardRef(ComboboxImpl);
  }
});

// src/components/inputs/combobox/index.ts
var init_combobox2 = __esm({
  "src/components/inputs/combobox/index.ts"() {
    "use strict";
    init_combobox();
  }
});

// src/hooks/use-debounced-search.tsx
var import_debounce2, import_react65, useDebouncedSearch2;
var init_use_debounced_search = __esm({
  "src/hooks/use-debounced-search.tsx"() {
    "use strict";
    import_debounce2 = __toESM(require("lodash/debounce"));
    import_react65 = require("react");
    useDebouncedSearch2 = () => {
      const [searchValue, onSearchValueChange] = (0, import_react65.useState)("");
      const [debouncedQuery, setDebouncedQuery] = (0, import_react65.useState)("");
      const debouncedUpdate = (0, import_react65.useCallback)(
        (0, import_debounce2.default)((query) => setDebouncedQuery(query), 300),
        []
      );
      (0, import_react65.useEffect)(() => {
        debouncedUpdate(searchValue);
        return () => debouncedUpdate.cancel();
      }, [searchValue, debouncedUpdate]);
      return {
        searchValue,
        onSearchValueChange,
        query: debouncedQuery || void 0
      };
    };
  }
});

// src/hooks/use-combobox-data.tsx
var import_react_query43, useComboboxData;
var init_use_combobox_data = __esm({
  "src/hooks/use-combobox-data.tsx"() {
    "use strict";
    import_react_query43 = require("@tanstack/react-query");
    init_use_debounced_search();
    useComboboxData = ({
      queryKey: queryKey2,
      queryFn: queryFn2,
      getOptions: getOptions2,
      defaultValue,
      defaultValueKey,
      pageSize = 10
    }) => {
      const { searchValue, onSearchValueChange, query } = useDebouncedSearch2();
      const queryInitialDataBy = defaultValueKey || "id";
      const { data: initialData } = (0, import_react_query43.useQuery)({
        queryKey: queryKey2,
        queryFn: async () => {
          return queryFn2({
            [queryInitialDataBy]: defaultValue,
            limit: Array.isArray(defaultValue) ? defaultValue.length : 1
          });
        },
        enabled: !!defaultValue
      });
      const { data, ...rest } = (0, import_react_query43.useInfiniteQuery)({
        queryKey: [...queryKey2, query],
        queryFn: async ({ pageParam = 0 }) => {
          return await queryFn2({
            q: query,
            limit: pageSize,
            offset: pageParam
          });
        },
        initialPageParam: 0,
        getNextPageParam: (lastPage) => {
          const moreItemsExist = lastPage.count > lastPage.offset + lastPage.limit;
          return moreItemsExist ? lastPage.offset + lastPage.limit : void 0;
        },
        placeholderData: import_react_query43.keepPreviousData
      });
      const options = data?.pages.flatMap((page) => getOptions2(page)) ?? [];
      const defaultOptions = initialData ? getOptions2(initialData) : [];
      const disabled = !rest.isPending && !options.length && !searchValue;
      if (defaultValue && defaultOptions.length && !searchValue) {
        defaultOptions.forEach((option) => {
          if (!options.find((o) => o.value === option.value)) {
            options.unshift(option);
          }
        });
      }
      return {
        options,
        searchValue,
        onSearchValueChange,
        disabled,
        ...rest
      };
    };
  }
});

// src/routes/products/product-create/components/product-create-inventory-kit-form/components/product-create-inventory-kit-section/product-create-inventory-kit-section.tsx
function VariantSection({ form, variant, index: index2 }) {
  const { t: t4 } = (0, import_react_i18next41.useTranslation)();
  const inventory = (0, import_react_hook_form5.useFieldArray)({
    control: form.control,
    name: `variants.${index2}.inventory`
  });
  const inventoryFormData = (0, import_react_hook_form5.useWatch)({
    control: form.control,
    name: `variants.${index2}.inventory`
  });
  const items = useComboboxData({
    queryKey: ["inventory_items"],
    queryFn: (params2) => sdk.admin.inventoryItem.list(params2),
    getOptions: (data) => data.inventory_items.map((item) => ({
      label: item.title,
      value: item.id
    }))
  });
  const isItemOptionDisabled = (option, inventoryIndex) => {
    return inventoryFormData?.some(
      (i, index3) => index3 != inventoryIndex && i.inventory_item_id === option.value
    );
  };
  return /* @__PURE__ */ (0, import_jsx_runtime90.jsxs)("div", { className: "grid gap-y-4", children: [
    /* @__PURE__ */ (0, import_jsx_runtime90.jsxs)("div", { className: "flex items-start justify-between gap-x-4", children: [
      /* @__PURE__ */ (0, import_jsx_runtime90.jsxs)("div", { className: "flex flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime90.jsx)(Form.Label, { children: variant.title }),
        /* @__PURE__ */ (0, import_jsx_runtime90.jsx)(Form.Hint, { children: t4("products.create.inventory.label") })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime90.jsx)(
        import_ui53.Button,
        {
          size: "small",
          variant: "secondary",
          type: "button",
          onClick: () => {
            inventory.append({
              inventory_item_id: "",
              required_quantity: ""
            });
          },
          children: t4("actions.add")
        }
      )
    ] }),
    inventory.fields.map((inventoryItem, inventoryIndex) => /* @__PURE__ */ (0, import_jsx_runtime90.jsxs)(
      "li",
      {
        className: "bg-ui-bg-component shadow-elevation-card-rest grid grid-cols-[1fr_28px] items-center gap-1.5 rounded-xl p-1.5",
        children: [
          /* @__PURE__ */ (0, import_jsx_runtime90.jsxs)("div", { className: "grid grid-cols-[min-content,1fr] items-center gap-1.5", children: [
            /* @__PURE__ */ (0, import_jsx_runtime90.jsx)("div", { className: "flex items-center px-2 py-1.5", children: /* @__PURE__ */ (0, import_jsx_runtime90.jsx)(
              import_ui53.Label,
              {
                size: "xsmall",
                weight: "plus",
                className: "text-ui-fg-subtle",
                htmlFor: `variants.${index2}.inventory.${inventoryIndex}.inventory_item_id`,
                children: t4("fields.item")
              }
            ) }),
            /* @__PURE__ */ (0, import_jsx_runtime90.jsx)(
              Form.Field,
              {
                control: form.control,
                name: `variants.${index2}.inventory.${inventoryIndex}.inventory_item_id`,
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime90.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime90.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime90.jsx)(
                    Combobox,
                    {
                      ...field,
                      options: items.options.map((o) => ({
                        ...o,
                        disabled: isItemOptionDisabled(o, inventoryIndex)
                      })),
                      searchValue: items.searchValue,
                      onSearchValueChange: items.onSearchValueChange,
                      fetchNextPage: items.fetchNextPage,
                      className: "bg-ui-bg-field-component hover:bg-ui-bg-field-component-hover",
                      placeholder: t4(
                        "products.create.inventory.itemPlaceholder"
                      )
                    }
                  ) }) });
                }
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime90.jsx)("div", { className: "flex items-center px-2 py-1.5", children: /* @__PURE__ */ (0, import_jsx_runtime90.jsx)(
              import_ui53.Label,
              {
                size: "xsmall",
                weight: "plus",
                className: "text-ui-fg-subtle",
                htmlFor: `variants.${index2}.inventory.${inventoryIndex}.required_quantity`,
                children: t4("fields.quantity")
              }
            ) }),
            /* @__PURE__ */ (0, import_jsx_runtime90.jsx)(
              Form.Field,
              {
                control: form.control,
                name: `variants.${index2}.inventory.${inventoryIndex}.required_quantity`,
                render: ({ field: { onChange, value, ...field } }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime90.jsxs)(Form.Item, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime90.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime90.jsx)(
                      import_ui53.Input,
                      {
                        type: "number",
                        className: "bg-ui-bg-field-component",
                        min: 0,
                        value,
                        onChange: (e) => {
                          const value2 = e.target.value;
                          if (value2 === "") {
                            onChange(null);
                          } else {
                            onChange(Number(value2));
                          }
                        },
                        ...field,
                        placeholder: t4(
                          "products.create.inventory.quantityPlaceholder"
                        )
                      }
                    ) }),
                    /* @__PURE__ */ (0, import_jsx_runtime90.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              }
            )
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime90.jsx)(
            import_ui53.IconButton,
            {
              type: "button",
              size: "small",
              variant: "transparent",
              className: "text-ui-fg-muted",
              onClick: () => inventory.remove(inventoryIndex),
              children: /* @__PURE__ */ (0, import_jsx_runtime90.jsx)(import_icons29.XMarkMini, {})
            }
          )
        ]
      },
      inventoryItem.id
    ))
  ] });
}
var import_ui53, import_react_hook_form5, import_icons29, import_react_i18next41, import_jsx_runtime90, ProductCreateInventoryKitSection;
var init_product_create_inventory_kit_section = __esm({
  "src/routes/products/product-create/components/product-create-inventory-kit-form/components/product-create-inventory-kit-section/product-create-inventory-kit-section.tsx"() {
    "use strict";
    import_ui53 = require("@medusajs/ui");
    import_react_hook_form5 = require("react-hook-form");
    import_icons29 = require("@medusajs/icons");
    import_react_i18next41 = require("react-i18next");
    init_form2();
    init_combobox2();
    init_use_combobox_data();
    init_client2();
    import_jsx_runtime90 = require("react/jsx-runtime");
    ProductCreateInventoryKitSection = ({
      form
    }) => {
      const { t: t4 } = (0, import_react_i18next41.useTranslation)();
      const variants = (0, import_react_hook_form5.useFieldArray)({
        control: form.control,
        name: "variants"
      });
      return /* @__PURE__ */ (0, import_jsx_runtime90.jsxs)("div", { id: "organize", className: "flex flex-col gap-y-8", children: [
        /* @__PURE__ */ (0, import_jsx_runtime90.jsx)(import_ui53.Heading, { children: t4("products.create.inventory.heading") }),
        variants.fields.filter((v) => v.inventory_kit).map((variant, variantIndex) => /* @__PURE__ */ (0, import_jsx_runtime90.jsx)(
          VariantSection,
          {
            form,
            variant,
            index: variantIndex
          },
          variant.id
        ))
      ] });
    };
  }
});

// src/routes/products/product-create/components/product-create-inventory-kit-form/product-create-inventory-kit-form.tsx
var import_jsx_runtime91, ProductCreateInventoryKitForm;
var init_product_create_inventory_kit_form = __esm({
  "src/routes/products/product-create/components/product-create-inventory-kit-form/product-create-inventory-kit-form.tsx"() {
    "use strict";
    init_product_create_inventory_kit_section();
    import_jsx_runtime91 = require("react/jsx-runtime");
    ProductCreateInventoryKitForm = ({
      form
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime91.jsx)("div", { className: "flex flex-col items-center p-16", children: /* @__PURE__ */ (0, import_jsx_runtime91.jsx)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8", children: /* @__PURE__ */ (0, import_jsx_runtime91.jsx)(ProductCreateInventoryKitSection, { form }) }) });
    };
  }
});

// src/routes/products/product-create/components/product-create-inventory-kit-form/index.ts
var init_product_create_inventory_kit_form2 = __esm({
  "src/routes/products/product-create/components/product-create-inventory-kit-form/index.ts"() {
    "use strict";
    init_product_create_inventory_kit_form();
  }
});

// src/components/common/chip-group/chip-group.tsx
var import_icons30, import_ui54, import_react66, import_react_i18next42, import_jsx_runtime92, GroupContext, useGroupContext, Group, Chip, ChipGroup;
var init_chip_group = __esm({
  "src/components/common/chip-group/chip-group.tsx"() {
    "use strict";
    import_icons30 = require("@medusajs/icons");
    import_ui54 = require("@medusajs/ui");
    import_react66 = require("react");
    import_react_i18next42 = require("react-i18next");
    import_jsx_runtime92 = require("react/jsx-runtime");
    GroupContext = (0, import_react66.createContext)(null);
    useGroupContext = () => {
      const context = (0, import_react66.useContext)(GroupContext);
      if (!context) {
        throw new Error("useGroupContext must be used within a ChipGroup component");
      }
      return context;
    };
    Group = ({
      onClearAll,
      onRemove,
      variant = "component",
      className,
      children
    }) => {
      const { t: t4 } = (0, import_react_i18next42.useTranslation)();
      const showClearAll = !!onClearAll && import_react66.Children.count(children) > 0;
      return /* @__PURE__ */ (0, import_jsx_runtime92.jsx)(GroupContext.Provider, { value: { onRemove, variant }, children: /* @__PURE__ */ (0, import_jsx_runtime92.jsxs)(
        "ul",
        {
          role: "application",
          className: (0, import_ui54.clx)("flex flex-wrap items-center gap-2", className),
          children: [
            children,
            showClearAll && /* @__PURE__ */ (0, import_jsx_runtime92.jsx)("li", { children: /* @__PURE__ */ (0, import_jsx_runtime92.jsx)(
              import_ui54.Button,
              {
                size: "small",
                variant: "transparent",
                type: "button",
                onClick: onClearAll,
                className: "text-ui-fg-muted active:text-ui-fg-subtle",
                children: t4("actions.clearAll")
              }
            ) })
          ]
        }
      ) });
    };
    Chip = ({ index: index2, className, children }) => {
      const { onRemove, variant } = useGroupContext();
      return /* @__PURE__ */ (0, import_jsx_runtime92.jsxs)(
        "li",
        {
          className: (0, import_ui54.clx)(
            "bg-ui-bg-component shadow-borders-base flex items-stretch divide-x overflow-hidden rounded-md",
            {
              "bg-ui-bg-component": variant === "component",
              "bg-ui-bg-base-": variant === "base"
            },
            className
          ),
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime92.jsx)("span", { className: "txt-compact-small-plus text-ui-fg-subtle flex items-center justify-center px-2 py-1", children }),
            !!onRemove && /* @__PURE__ */ (0, import_jsx_runtime92.jsx)(
              "button",
              {
                onClick: () => onRemove(index2),
                type: "button",
                className: (0, import_ui54.clx)(
                  "text-ui-fg-muted active:text-ui-fg-subtle transition-fg flex items-center justify-center p-1",
                  {
                    "hover:bg-ui-bg-component-hover active:bg-ui-bg-component-pressed": variant === "component",
                    "hover:bg-ui-bg-base-hover active:bg-ui-bg-base-pressed": variant === "base"
                  }
                ),
                children: /* @__PURE__ */ (0, import_jsx_runtime92.jsx)(import_icons30.XMarkMini, {})
              }
            )
          ]
        }
      );
    };
    ChipGroup = Object.assign(Group, { Chip });
  }
});

// src/components/common/chip-group/index.ts
var init_chip_group2 = __esm({
  "src/components/common/chip-group/index.ts"() {
    "use strict";
    init_chip_group();
  }
});

// src/routes/products/common/components/category-combobox/category-combobox.tsx
function getParentId(level) {
  if (!level.length) {
    return "null";
  }
  return level[level.length - 1].id;
}
function getParentLabel(level) {
  if (!level.length) {
    return null;
  }
  return level[level.length - 1].label;
}
function getOptions(categories) {
  return categories.map((cat) => {
    return {
      value: cat.id,
      label: cat.name,
      has_children: cat.category_children?.length > 0
    };
  });
}
function isSelected(values, value) {
  return values.includes(value);
}
var import_icons31, import_ui55, import_react67, import_react_i18next43, import_jsx_runtime93, TABLUAR_NUM_WIDTH2, TAG_BASE_WIDTH2, CategoryCombobox;
var init_category_combobox = __esm({
  "src/routes/products/common/components/category-combobox/category-combobox.tsx"() {
    "use strict";
    import_icons31 = require("@medusajs/icons");
    import_ui55 = require("@medusajs/ui");
    init_dist20();
    import_react67 = require("react");
    import_react_i18next43 = require("react-i18next");
    init_divider2();
    init_skeleton2();
    init_categories();
    init_use_debounced_search();
    import_jsx_runtime93 = require("react/jsx-runtime");
    TABLUAR_NUM_WIDTH2 = 8;
    TAG_BASE_WIDTH2 = 28;
    CategoryCombobox = (0, import_react67.forwardRef)(({ value, onChange, className, ...props }, ref) => {
      const innerRef = (0, import_react67.useRef)(null);
      (0, import_react67.useImperativeHandle)(
        ref,
        () => innerRef.current,
        []
      );
      const [open, setOpen] = (0, import_react67.useState)(false);
      const { i18n: i18n4, t: t4 } = (0, import_react_i18next43.useTranslation)();
      const [level, setLevel] = (0, import_react67.useState)([]);
      const { searchValue, onSearchValueChange, query } = useDebouncedSearch2();
      const { product_categories, isPending, isError, error } = useProductCategories(
        {
          q: query,
          parent_category_id: !searchValue ? getParentId(level) : void 0,
          include_descendants_tree: !searchValue ? true : false
        },
        {
          enabled: open
        }
      );
      const [showLoading, setShowLoading] = (0, import_react67.useState)(false);
      (0, import_react67.useEffect)(() => {
        let timeoutId;
        if (isPending) {
          setShowLoading(true);
        } else {
          timeoutId = setTimeout(() => {
            setShowLoading(false);
          }, 150);
        }
        return () => {
          clearTimeout(timeoutId);
        };
      }, [isPending]);
      (0, import_react67.useEffect)(() => {
        if (searchValue) {
          setLevel([]);
        }
      }, [searchValue]);
      function handleLevelUp(e) {
        e.preventDefault();
        e.stopPropagation();
        setLevel(level.slice(0, level.length - 1));
        innerRef.current?.focus();
      }
      function handleLevelDown(option) {
        return (e) => {
          e.preventDefault();
          e.stopPropagation();
          setLevel([...level, { id: option.value, label: option.label }]);
          innerRef.current?.focus();
        };
      }
      const handleSelect = (0, import_react67.useCallback)(
        (option) => {
          return (e) => {
            e.preventDefault();
            e.stopPropagation();
            if (isSelected(value, option.value)) {
              onChange(value.filter((v) => v !== option.value));
            } else {
              onChange([...value, option.value]);
            }
            innerRef.current?.focus();
          };
        },
        [value, onChange]
      );
      function handleOpenChange(open2) {
        if (!open2) {
          onSearchValueChange("");
          setLevel([]);
        }
        if (open2) {
          requestAnimationFrame(() => {
            innerRef.current?.focus();
          });
        }
        setOpen(open2);
      }
      const options = getOptions(product_categories || []);
      const showTag = value.length > 0;
      const showSelected = !open && value.length > 0;
      const tagWidth = (0, import_react67.useMemo)(() => {
        const count3 = value.length;
        const digits = count3.toString().length;
        return TAG_BASE_WIDTH2 + digits * TABLUAR_NUM_WIDTH2;
      }, [value]);
      const showLevelUp = !searchValue && level.length > 0;
      const [focusedIndex, setFocusedIndex] = (0, import_react67.useState)(-1);
      const handleKeyDown = (0, import_react67.useCallback)(
        (e) => {
          if (!open) {
            return;
          }
          const optionsLength = showLevelUp ? options.length + 1 : options.length;
          if (e.key === "ArrowDown") {
            e.preventDefault();
            setFocusedIndex((prev) => {
              const nextIndex = prev < optionsLength - 1 ? prev + 1 : prev;
              return nextIndex;
            });
          } else if (e.key === "ArrowUp") {
            e.preventDefault();
            setFocusedIndex((prev) => {
              return prev > 0 ? prev - 1 : prev;
            });
          } else if (e.key === "ArrowRight") {
            const index2 = showLevelUp ? focusedIndex - 1 : focusedIndex;
            const hasChildren = options[index2]?.has_children;
            if (!hasChildren || !!searchValue) {
              return;
            }
            e.preventDefault();
            setLevel([
              ...level,
              {
                id: options[index2].value,
                label: options[index2].label
              }
            ]);
            setFocusedIndex(0);
          } else if (e.key === "Enter" && focusedIndex !== -1) {
            e.preventDefault();
            if (showLevelUp && focusedIndex === 0) {
              setLevel(level.slice(0, level.length - 1));
              setFocusedIndex(0);
              return;
            }
            const index2 = showLevelUp ? focusedIndex - 1 : focusedIndex;
            handleSelect(options[index2])(e);
          }
        },
        [open, focusedIndex, options, level, handleSelect, searchValue, showLevelUp]
      );
      (0, import_react67.useEffect)(() => {
        window.addEventListener("keydown", handleKeyDown);
        return () => {
          window.removeEventListener("keydown", handleKeyDown);
        };
      }, [handleKeyDown]);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime93.jsxs)(Root23, { open, onOpenChange: handleOpenChange, children: [
        /* @__PURE__ */ (0, import_jsx_runtime93.jsx)(
          Anchor2,
          {
            asChild: true,
            onClick: () => {
              if (!open) {
                handleOpenChange(true);
              }
            },
            children: /* @__PURE__ */ (0, import_jsx_runtime93.jsxs)(
              "div",
              {
                "data-anchor": true,
                className: (0, import_ui55.clx)(
                  "relative flex cursor-pointer items-center gap-x-2 overflow-hidden",
                  "h-8 w-full rounded-md",
                  "bg-ui-bg-field transition-fg shadow-borders-base",
                  "has-[input:focus]:shadow-borders-interactive-with-active",
                  "has-[:invalid]:shadow-borders-error has-[[aria-invalid=true]]:shadow-borders-error",
                  "has-[:disabled]:bg-ui-bg-disabled has-[:disabled]:text-ui-fg-disabled has-[:disabled]:cursor-not-allowed",
                  {
                    // Fake the focus state as long as the popover is open,
                    // this prevents the styling from flickering when navigating
                    // between levels.
                    "shadow-borders-interactive-with-active": open
                  },
                  className
                ),
                style: {
                  "--tag-width": `${tagWidth}px`
                },
                children: [
                  showTag && /* @__PURE__ */ (0, import_jsx_runtime93.jsxs)(
                    "button",
                    {
                      type: "button",
                      onClick: (e) => {
                        e.preventDefault();
                        onChange([]);
                      },
                      className: "bg-ui-bg-base hover:bg-ui-bg-base-hover txt-compact-small-plus text-ui-fg-subtle focus-within:border-ui-fg-interactive transition-fg absolute left-0.5 top-0.5 flex h-[28px] items-center rounded-[4px] border py-[3px] pl-1.5 pr-1 outline-none",
                      children: [
                        /* @__PURE__ */ (0, import_jsx_runtime93.jsx)("span", { className: "tabular-nums", children: value.length }),
                        /* @__PURE__ */ (0, import_jsx_runtime93.jsx)(import_icons31.XMarkMini, { className: "text-ui-fg-muted" })
                      ]
                    }
                  ),
                  showSelected && /* @__PURE__ */ (0, import_jsx_runtime93.jsx)("div", { className: "pointer-events-none absolute inset-y-0 left-[calc(var(--tag-width)+8px)] flex size-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime93.jsx)(import_ui55.Text, { size: "small", leading: "compact", children: t4("general.selected") }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime93.jsx)(
                    "input",
                    {
                      ref: innerRef,
                      value: searchValue,
                      onChange: (e) => {
                        onSearchValueChange(e.target.value);
                      },
                      className: (0, import_ui55.clx)(
                        "txt-compact-small size-full cursor-pointer appearance-none bg-transparent pr-8 outline-none",
                        "hover:bg-ui-bg-field-hover",
                        "focus:cursor-text",
                        "placeholder:text-ui-fg-muted",
                        {
                          "pl-2": !showTag,
                          "pl-[calc(var(--tag-width)+8px)]": showTag
                        }
                      ),
                      ...props
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime93.jsx)(
                    "button",
                    {
                      type: "button",
                      onClick: () => handleOpenChange(true),
                      className: "text-ui-fg-muted transition-fg hover:bg-ui-bg-field-hover absolute right-0 flex size-8 items-center justify-center rounded-r outline-none",
                      children: /* @__PURE__ */ (0, import_jsx_runtime93.jsx)(import_icons31.TrianglesMini, { className: "text-ui-fg-muted" })
                    }
                  )
                ]
              }
            )
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime93.jsxs)(
          Content22,
          {
            sideOffset: 4,
            role: "listbox",
            className: (0, import_ui55.clx)(
              "shadow-elevation-flyout bg-ui-bg-base -left-2 z-50 w-[var(--radix-popper-anchor-width)] rounded-[8px]",
              "max-h-[200px] overflow-y-auto",
              "data-[state=open]:animate-in data-[state=open]:fade-in-0 data-[state=open]:zoom-in-95",
              "data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95",
              "data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2"
            ),
            onInteractOutside: (e) => {
              e.preventDefault();
              const target = e.target;
              if (target.closest("[data-anchor]")) {
                return;
              }
              handleOpenChange(false);
            },
            children: [
              showLevelUp && /* @__PURE__ */ (0, import_jsx_runtime93.jsxs)(import_react67.Fragment, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime93.jsx)("div", { className: "p-1", children: /* @__PURE__ */ (0, import_jsx_runtime93.jsxs)(
                  "button",
                  {
                    "data-active": focusedIndex === 0,
                    role: "button",
                    className: (0, import_ui55.clx)(
                      "transition-fg grid w-full appearance-none grid-cols-[20px_1fr] items-center justify-center gap-2 rounded-md px-2 py-1.5 text-left outline-none",
                      "data-[active=true]:bg-ui-bg-field-hover"
                    ),
                    type: "button",
                    onClick: handleLevelUp,
                    onMouseEnter: () => setFocusedIndex(0),
                    onMouseLeave: () => setFocusedIndex(-1),
                    tabIndex: -1,
                    children: [
                      /* @__PURE__ */ (0, import_jsx_runtime93.jsx)(import_icons31.ArrowUturnLeft, { className: "text-ui-fg-muted" }),
                      /* @__PURE__ */ (0, import_jsx_runtime93.jsx)(import_ui55.Text, { size: "small", leading: "compact", children: getParentLabel(level) })
                    ]
                  }
                ) }),
                /* @__PURE__ */ (0, import_jsx_runtime93.jsx)(Divider, {})
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime93.jsxs)("div", { className: "p-1", children: [
                options.length > 0 && !showLoading && options.map((option, index2) => /* @__PURE__ */ (0, import_jsx_runtime93.jsxs)(
                  "div",
                  {
                    className: (0, import_ui55.clx)(
                      "transition-fg bg-ui-bg-base grid cursor-pointer grid-cols-1 items-center gap-2 overflow-hidden",
                      {
                        "grid-cols-[1fr_32px]": option.has_children && !searchValue
                      }
                    ),
                    children: [
                      /* @__PURE__ */ (0, import_jsx_runtime93.jsxs)(
                        "button",
                        {
                          "data-active": showLevelUp ? focusedIndex === index2 + 1 : focusedIndex === index2,
                          type: "button",
                          role: "option",
                          className: (0, import_ui55.clx)(
                            "grid h-full w-full appearance-none grid-cols-[20px_1fr] items-center gap-2 overflow-hidden rounded-md px-2 py-1.5 text-left outline-none",
                            "data-[active=true]:bg-ui-bg-field-hover"
                          ),
                          onClick: handleSelect(option),
                          onMouseEnter: () => setFocusedIndex(showLevelUp ? index2 + 1 : index2),
                          onMouseLeave: () => setFocusedIndex(-1),
                          tabIndex: -1,
                          children: [
                            /* @__PURE__ */ (0, import_jsx_runtime93.jsx)("div", { className: "flex size-5 items-center justify-center", children: isSelected(value, option.value) && /* @__PURE__ */ (0, import_jsx_runtime93.jsx)(import_icons31.EllipseMiniSolid, {}) }),
                            /* @__PURE__ */ (0, import_jsx_runtime93.jsx)(
                              import_ui55.Text,
                              {
                                as: "span",
                                size: "small",
                                leading: "compact",
                                className: "w-full truncate",
                                children: option.label
                              }
                            )
                          ]
                        }
                      ),
                      option.has_children && !searchValue && /* @__PURE__ */ (0, import_jsx_runtime93.jsx)(
                        "button",
                        {
                          className: (0, import_ui55.clx)(
                            "text-ui-fg-muted flex size-8 appearance-none items-center justify-center rounded-md outline-none",
                            "hover:bg-ui-bg-base-hover active:bg-ui-bg-base-pressed"
                          ),
                          type: "button",
                          onClick: handleLevelDown(option),
                          tabIndex: -1,
                          children: /* @__PURE__ */ (0, import_jsx_runtime93.jsx)(import_icons31.TriangleRightMini, {})
                        }
                      )
                    ]
                  },
                  option.value
                )),
                showLoading && Array.from({ length: 5 }).map((_, index2) => /* @__PURE__ */ (0, import_jsx_runtime93.jsxs)(
                  "div",
                  {
                    className: "grid grid-cols-[20px_1fr_20px] gap-2 px-2 py-1.5",
                    children: [
                      /* @__PURE__ */ (0, import_jsx_runtime93.jsx)("div", {}),
                      /* @__PURE__ */ (0, import_jsx_runtime93.jsx)(TextSkeleton, { size: "small", leading: "compact" }),
                      /* @__PURE__ */ (0, import_jsx_runtime93.jsx)("div", {})
                    ]
                  },
                  index2
                )),
                options.length === 0 && !showLoading && /* @__PURE__ */ (0, import_jsx_runtime93.jsx)("div", { className: "px-2 py-1.5", children: /* @__PURE__ */ (0, import_jsx_runtime93.jsx)(import_ui55.Text, { size: "small", leading: "compact", children: query ? /* @__PURE__ */ (0, import_jsx_runtime93.jsx)(
                  import_react_i18next43.Trans,
                  {
                    i18n: i18n4,
                    i18nKey: "general.noResultsTitle",
                    tOptions: {
                      query
                    },
                    components: [/* @__PURE__ */ (0, import_jsx_runtime93.jsx)("span", { className: "font-medium" }, "query")]
                  }
                ) : t4("general.noResultsTitle") }) })
              ] })
            ]
          }
        )
      ] });
    });
    CategoryCombobox.displayName = "CategoryCombobox";
  }
});

// src/routes/products/common/components/category-combobox/index.ts
var init_category_combobox2 = __esm({
  "src/routes/products/common/components/category-combobox/index.ts"() {
    "use strict";
    init_category_combobox();
  }
});

// src/routes/products/product-create/components/product-create-organize-form/components/product-create-organize-section/product-create-details-organize-section.tsx
var import_ui56, import_react_hook_form6, import_react_i18next44, import_jsx_runtime94, ProductCreateOrganizationSection;
var init_product_create_details_organize_section = __esm({
  "src/routes/products/product-create/components/product-create-organize-form/components/product-create-organize-section/product-create-details-organize-section.tsx"() {
    "use strict";
    import_ui56 = require("@medusajs/ui");
    import_react_hook_form6 = require("react-hook-form");
    import_react_i18next44 = require("react-i18next");
    init_chip_group2();
    init_form2();
    init_switch_box2();
    init_combobox2();
    init_modals();
    init_use_combobox_data();
    init_client2();
    init_category_combobox2();
    import_jsx_runtime94 = require("react/jsx-runtime");
    ProductCreateOrganizationSection = ({
      form
    }) => {
      const { t: t4 } = (0, import_react_i18next44.useTranslation)();
      const collections = useComboboxData({
        queryKey: ["product_collections"],
        queryFn: (params2) => sdk.admin.productCollection.list(params2),
        getOptions: (data) => data.collections.map((collection) => ({
          label: collection.title,
          value: collection.id
        }))
      });
      const types = useComboboxData({
        queryKey: ["product_types"],
        queryFn: (params2) => sdk.admin.productType.list(params2),
        getOptions: (data) => data.product_types.map((type) => ({
          label: type.value,
          value: type.id
        }))
      });
      const tags = useComboboxData({
        queryKey: ["product_tags"],
        queryFn: (params2) => sdk.admin.productTag.list(params2),
        getOptions: (data) => data.product_tags.map((tag) => ({
          label: tag.value,
          value: tag.id
        }))
      });
      const { fields, remove, replace } = (0, import_react_hook_form6.useFieldArray)({
        control: form.control,
        name: "sales_channels",
        keyName: "key"
      });
      const handleClearAllSalesChannels = () => {
        replace([]);
      };
      return /* @__PURE__ */ (0, import_jsx_runtime94.jsxs)("div", { id: "organize", className: "flex flex-col gap-y-8", children: [
        /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(import_ui56.Heading, { children: t4("products.organization.header") }),
        /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(
          SwitchBox,
          {
            control: form.control,
            name: "discountable",
            label: t4("products.fields.discountable.label"),
            description: t4("products.fields.discountable.hint"),
            optional: true
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime94.jsxs)("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "type_id",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime94.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(Form.Label, { optional: true, children: t4("products.fields.type.label") }),
                  /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(
                    Combobox,
                    {
                      ...field,
                      options: types.options,
                      searchValue: types.searchValue,
                      onSearchValueChange: types.onSearchValueChange,
                      fetchNextPage: types.fetchNextPage
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "collection_id",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime94.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(Form.Label, { optional: true, children: t4("products.fields.collection.label") }),
                  /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(
                    Combobox,
                    {
                      ...field,
                      options: collections.options,
                      searchValue: collections.searchValue,
                      onSearchValueChange: collections.onSearchValueChange,
                      fetchNextPage: collections.fetchNextPage
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime94.jsxs)("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "categories",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime94.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(Form.Label, { optional: true, children: t4("products.fields.categories.label") }),
                  /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(CategoryCombobox, { ...field }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "tags",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime94.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(Form.Label, { optional: true, children: t4("products.fields.tags.label") }),
                  /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(
                    Combobox,
                    {
                      ...field,
                      options: tags.options,
                      searchValue: tags.searchValue,
                      onSearchValueChange: tags.onSearchValueChange,
                      fetchNextPage: tags.fetchNextPage
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime94.jsx)("div", { className: "grid grid-cols-1 gap-y-4", children: /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(
          Form.Field,
          {
            control: form.control,
            name: "sales_channels",
            render: () => {
              return /* @__PURE__ */ (0, import_jsx_runtime94.jsxs)(Form.Item, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime94.jsxs)("div", { className: "flex items-start justify-between gap-x-4", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime94.jsxs)("div", { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(Form.Label, { optional: true, children: t4("products.fields.sales_channels.label") }),
                    /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(Form.Hint, { children: /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(import_react_i18next44.Trans, { i18nKey: "products.fields.sales_channels.hint" }) })
                  ] }),
                  /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(StackedFocusModal.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(import_ui56.Button, { size: "small", variant: "secondary", type: "button", children: t4("actions.add") }) })
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(Form.Control, { className: "mt-0", children: fields.length > 0 && /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(
                  ChipGroup,
                  {
                    onClearAll: handleClearAllSalesChannels,
                    onRemove: remove,
                    className: "py-4",
                    children: fields.map((field, index2) => /* @__PURE__ */ (0, import_jsx_runtime94.jsx)(ChipGroup.Chip, { index: index2, children: field.name }, field.key))
                  }
                ) })
              ] });
            }
          }
        ) })
      ] });
    };
  }
});

// src/routes/products/product-create/components/product-create-organize-form/components/product-create-organize-section/index.ts
var init_product_create_organize_section = __esm({
  "src/routes/products/product-create/components/product-create-organize-form/components/product-create-organize-section/index.ts"() {
    "use strict";
    init_product_create_details_organize_section();
  }
});

// src/components/table/table-cells/common/text-cell/text-cell.tsx
var import_ui57, import_jsx_runtime95, TextCell, TextHeader;
var init_text_cell = __esm({
  "src/components/table/table-cells/common/text-cell/text-cell.tsx"() {
    "use strict";
    import_ui57 = require("@medusajs/ui");
    init_conditional_tooltip2();
    init_placeholder_cell2();
    import_jsx_runtime95 = require("react/jsx-runtime");
    TextCell = ({ text, align = "left", maxWidth = 220 }) => {
      if (!text) {
        return /* @__PURE__ */ (0, import_jsx_runtime95.jsx)(PlaceholderCell, {});
      }
      const stringLength = text.toString().length;
      return /* @__PURE__ */ (0, import_jsx_runtime95.jsx)(ConditionalTooltip, { content: text, showTooltip: stringLength > 20, children: /* @__PURE__ */ (0, import_jsx_runtime95.jsx)(
        "div",
        {
          className: (0, import_ui57.clx)("flex h-full w-full items-center gap-x-3 overflow-hidden", {
            "justify-start text-start": align === "left",
            "justify-center text-center": align === "center",
            "justify-end text-end": align === "right"
          }),
          style: {
            maxWidth
          },
          children: /* @__PURE__ */ (0, import_jsx_runtime95.jsx)("span", { className: "truncate", children: text })
        }
      ) });
    };
    TextHeader = ({ text, align = "left" }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime95.jsx)("div", { className: (0, import_ui57.clx)("flex h-full w-full items-center", {
        "justify-start text-start": align === "left",
        "justify-center text-center": align === "center",
        "justify-end text-end": align === "right"
      }), children: /* @__PURE__ */ (0, import_jsx_runtime95.jsx)("span", { className: "truncate", children: text }) });
    };
  }
});

// src/components/table/table-cells/common/text-cell/index.ts
var init_text_cell2 = __esm({
  "src/components/table/table-cells/common/text-cell/index.ts"() {
    "use strict";
    init_text_cell();
  }
});

// src/components/table/table-cells/sales-channel/description-cell/description-cell.tsx
var import_react_i18next45, import_jsx_runtime96, DescriptionCell, DescriptionHeader;
var init_description_cell = __esm({
  "src/components/table/table-cells/sales-channel/description-cell/description-cell.tsx"() {
    "use strict";
    import_react_i18next45 = require("react-i18next");
    init_placeholder_cell2();
    import_jsx_runtime96 = require("react/jsx-runtime");
    DescriptionCell = ({ description }) => {
      if (!description) {
        return /* @__PURE__ */ (0, import_jsx_runtime96.jsx)(PlaceholderCell, {});
      }
      return /* @__PURE__ */ (0, import_jsx_runtime96.jsx)("div", { className: "flex h-full w-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime96.jsx)("span", { className: "truncate", children: description }) });
    };
    DescriptionHeader = () => {
      const { t: t4 } = (0, import_react_i18next45.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime96.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime96.jsx)("span", { className: "truncate", children: t4("fields.description") }) });
    };
  }
});

// src/components/table/table-cells/sales-channel/description-cell/index.ts
var init_description_cell2 = __esm({
  "src/components/table/table-cells/sales-channel/description-cell/index.ts"() {
    "use strict";
    init_description_cell();
  }
});

// src/components/table/table-cells/sales-channel/name-cell/name-cell.tsx
var import_react_i18next46, import_jsx_runtime97, NameCell, NameHeader;
var init_name_cell = __esm({
  "src/components/table/table-cells/sales-channel/name-cell/name-cell.tsx"() {
    "use strict";
    import_react_i18next46 = require("react-i18next");
    init_placeholder_cell2();
    import_jsx_runtime97 = require("react/jsx-runtime");
    NameCell = ({ name }) => {
      if (!name) {
        return /* @__PURE__ */ (0, import_jsx_runtime97.jsx)(PlaceholderCell, {});
      }
      return /* @__PURE__ */ (0, import_jsx_runtime97.jsx)("div", { className: "flex h-full w-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime97.jsx)("span", { className: "truncate", children: name }) });
    };
    NameHeader = () => {
      const { t: t4 } = (0, import_react_i18next46.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime97.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime97.jsx)("span", { className: "truncate", children: t4("fields.name") }) });
    };
  }
});

// src/components/table/table-cells/sales-channel/name-cell/index.ts
var init_name_cell2 = __esm({
  "src/components/table/table-cells/sales-channel/name-cell/index.ts"() {
    "use strict";
    init_name_cell();
  }
});

// src/hooks/table/columns/use-sales-channel-table-columns.tsx
var import_react_table5, import_react68, import_react_i18next47, import_jsx_runtime98, columnHelper3, useSalesChannelTableColumns;
var init_use_sales_channel_table_columns = __esm({
  "src/hooks/table/columns/use-sales-channel-table-columns.tsx"() {
    "use strict";
    import_react_table5 = require("@tanstack/react-table");
    import_react68 = require("react");
    import_react_i18next47 = require("react-i18next");
    init_status_cell2();
    init_text_cell2();
    init_description_cell2();
    init_name_cell2();
    import_jsx_runtime98 = require("react/jsx-runtime");
    columnHelper3 = (0, import_react_table5.createColumnHelper)();
    useSalesChannelTableColumns = () => {
      const { t: t4 } = (0, import_react_i18next47.useTranslation)();
      return (0, import_react68.useMemo)(
        () => [
          columnHelper3.accessor("name", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime98.jsx)(NameHeader, {}),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime98.jsx)(NameCell, { name: getValue2() })
          }),
          columnHelper3.accessor("description", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime98.jsx)(DescriptionHeader, {}),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime98.jsx)(DescriptionCell, { description: getValue2() })
          }),
          columnHelper3.accessor("is_disabled", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime98.jsx)(TextHeader, { text: t4("fields.status") }),
            cell: ({ getValue: getValue2 }) => {
              const value = getValue2();
              return /* @__PURE__ */ (0, import_jsx_runtime98.jsx)(StatusCell, { color: value ? "grey" : "green", children: value ? t4("general.disabled") : t4("general.enabled") });
            }
          })
        ],
        [t4]
      );
    };
  }
});

// src/hooks/table/filters/use-sales-channel-table-filters.tsx
var import_react_i18next48, useSalesChannelTableFilters;
var init_use_sales_channel_table_filters = __esm({
  "src/hooks/table/filters/use-sales-channel-table-filters.tsx"() {
    "use strict";
    import_react_i18next48 = require("react-i18next");
    useSalesChannelTableFilters = () => {
      const { t: t4 } = (0, import_react_i18next48.useTranslation)();
      const dateFilters = [
        { label: t4("fields.createdAt"), key: "created_at" },
        { label: t4("fields.updatedAt"), key: "updated_at" }
      ].map((f) => ({
        key: f.key,
        label: f.label,
        type: "date"
      }));
      return dateFilters;
    };
  }
});

// src/hooks/table/query/use-sales-channel-table-query.tsx
var useSalesChannelTableQuery;
var init_use_sales_channel_table_query = __esm({
  "src/hooks/table/query/use-sales-channel-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useSalesChannelTableQuery = ({
      prefix,
      pageSize = 20
    }) => {
      const queryObject = useQueryParams(
        ["offset", "q", "order", "created_at", "updated_at", "is_disabled"],
        prefix
      );
      const { offset: offset4, created_at, updated_at, is_disabled, ...rest } = queryObject;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0,
        is_disabled: is_disabled === "true" ? true : is_disabled === "false" ? false : void 0,
        ...rest
      };
      return {
        searchParams,
        raw: queryObject
      };
    };
  }
});

// src/routes/products/product-create/components/product-create-organize-form/constants.ts
var SC_STACKED_MODAL_ID;
var init_constants4 = __esm({
  "src/routes/products/product-create/components/product-create-organize-form/constants.ts"() {
    "use strict";
    SC_STACKED_MODAL_ID = "sc";
  }
});

// src/routes/products/product-create/components/product-create-organize-form/components/product-create-sales-channel-stacked-modal/product-create-sales-channel-drawer.tsx
var import_ui58, import_react_table6, import_react69, import_react_i18next49, import_jsx_runtime99, PAGE_SIZE2, ProductCreateSalesChannelStackedModal, columnHelper4, useColumns2;
var init_product_create_sales_channel_drawer = __esm({
  "src/routes/products/product-create/components/product-create-organize-form/components/product-create-sales-channel-stacked-modal/product-create-sales-channel-drawer.tsx"() {
    "use strict";
    import_ui58 = require("@medusajs/ui");
    import_react_table6 = require("@tanstack/react-table");
    import_react69 = require("react");
    import_react_i18next49 = require("react-i18next");
    init_modals();
    init_data_table2();
    init_sales_channels();
    init_use_sales_channel_table_columns();
    init_use_sales_channel_table_filters();
    init_use_sales_channel_table_query();
    init_use_data_table();
    init_constants4();
    import_jsx_runtime99 = require("react/jsx-runtime");
    PAGE_SIZE2 = 50;
    ProductCreateSalesChannelStackedModal = ({
      form
    }) => {
      const { t: t4 } = (0, import_react_i18next49.useTranslation)();
      const { getValues: getValues2, setValue } = form;
      const { setIsOpen, getIsOpen: getIsOpen2 } = useStackedModal();
      const [selection, setSelection] = (0, import_react69.useState)({});
      const [state, setState] = (0, import_react69.useState)([]);
      const { searchParams, raw } = useSalesChannelTableQuery({
        pageSize: PAGE_SIZE2,
        prefix: SC_STACKED_MODAL_ID
      });
      const { sales_channels, count: count3, isLoading, isError, error } = useSalesChannels(
        {
          ...searchParams
        }
      );
      const open = getIsOpen2(SC_STACKED_MODAL_ID);
      (0, import_react69.useEffect)(() => {
        if (!open) {
          return;
        }
        const salesChannels = getValues2("sales_channels");
        if (salesChannels) {
          setState(
            salesChannels.map((channel) => ({
              id: channel.id,
              name: channel.name
            }))
          );
          setSelection(
            salesChannels.reduce(
              (acc, channel) => ({
                ...acc,
                [channel.id]: true
              }),
              {}
            )
          );
        }
      }, [open, getValues2]);
      const updater = (fn) => {
        const value = typeof fn === "function" ? fn(selection) : fn;
        const ids = Object.keys(value);
        const addedIdsSet = new Set(ids.filter((id2) => value[id2] && !selection[id2]));
        let addedSalesChannels = [];
        if (addedIdsSet.size > 0) {
          addedSalesChannels = sales_channels?.filter((channel) => addedIdsSet.has(channel.id)) ?? [];
        }
        setState((prev) => {
          const filteredPrev = prev.filter((channel) => value[channel.id]);
          return Array.from(/* @__PURE__ */ new Set([...filteredPrev, ...addedSalesChannels]));
        });
        setSelection(value);
      };
      const handleAdd = () => {
        setValue("sales_channels", state, {
          shouldDirty: true,
          shouldTouch: true
        });
        setIsOpen(SC_STACKED_MODAL_ID, false);
      };
      const filters = useSalesChannelTableFilters();
      const columns = useColumns2();
      const { table } = useDataTable({
        data: sales_channels ?? [],
        columns,
        count: sales_channels?.length ?? 0,
        enablePagination: true,
        enableRowSelection: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE2,
        rowSelection: {
          state: selection,
          updater
        },
        prefix: SC_STACKED_MODAL_ID
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime99.jsxs)(StackedFocusModal.Content, { className: "flex flex-col overflow-hidden", children: [
        /* @__PURE__ */ (0, import_jsx_runtime99.jsx)(StackedFocusModal.Header, {}),
        /* @__PURE__ */ (0, import_jsx_runtime99.jsx)(StackedFocusModal.Body, { className: "flex-1 overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime99.jsx)(
          DataTable,
          {
            table,
            columns,
            pageSize: PAGE_SIZE2,
            filters,
            isLoading,
            layout: "fill",
            orderBy: [
              { key: "name", label: t4("fields.name") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            queryObject: raw,
            search: true,
            pagination: true,
            count: count3,
            prefix: SC_STACKED_MODAL_ID
          }
        ) }),
        /* @__PURE__ */ (0, import_jsx_runtime99.jsx)(StackedFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime99.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime99.jsx)(StackedFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime99.jsx)(import_ui58.Button, { size: "small", variant: "secondary", type: "button", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime99.jsx)(import_ui58.Button, { size: "small", onClick: handleAdd, type: "button", children: t4("actions.save") })
        ] }) })
      ] });
    };
    columnHelper4 = (0, import_react_table6.createColumnHelper)();
    useColumns2 = () => {
      const base = useSalesChannelTableColumns();
      return (0, import_react69.useMemo)(
        () => [
          columnHelper4.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime99.jsx)(
                import_ui58.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime99.jsx)(
                import_ui58.Checkbox,
                {
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...base
        ],
        [base]
      );
    };
  }
});

// src/routes/products/product-create/components/product-create-organize-form/components/product-create-sales-channel-stacked-modal/index.ts
var init_product_create_sales_channel_stacked_modal = __esm({
  "src/routes/products/product-create/components/product-create-organize-form/components/product-create-sales-channel-stacked-modal/index.ts"() {
    "use strict";
    init_product_create_sales_channel_drawer();
  }
});

// src/routes/products/product-create/components/product-create-organize-form/product-create-organize-form.tsx
var import_jsx_runtime100, ProductCreateOrganizeForm;
var init_product_create_organize_form = __esm({
  "src/routes/products/product-create/components/product-create-organize-form/product-create-organize-form.tsx"() {
    "use strict";
    init_modals();
    init_extensions();
    init_product_create_organize_section();
    init_product_create_sales_channel_stacked_modal();
    init_constants4();
    import_jsx_runtime100 = require("react/jsx-runtime");
    ProductCreateOrganizeForm = ({ form }) => {
      const { getFormFields } = useDashboardExtension();
      const fields = getFormFields("product", "create", "organize");
      return /* @__PURE__ */ (0, import_jsx_runtime100.jsxs)(StackedFocusModal, { id: SC_STACKED_MODAL_ID, children: [
        /* @__PURE__ */ (0, import_jsx_runtime100.jsx)("div", { className: "flex flex-col items-center p-16", children: /* @__PURE__ */ (0, import_jsx_runtime100.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8", children: [
          /* @__PURE__ */ (0, import_jsx_runtime100.jsx)(ProductCreateOrganizationSection, { form }),
          /* @__PURE__ */ (0, import_jsx_runtime100.jsx)(FormExtensionZone, { fields, form })
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime100.jsx)(ProductCreateSalesChannelStackedModal, { form })
      ] });
    };
  }
});

// src/routes/products/product-create/components/product-create-organize-form/index.ts
var init_product_create_organize_form2 = __esm({
  "src/routes/products/product-create/components/product-create-organize-form/index.ts"() {
    "use strict";
    init_product_create_organize_form();
  }
});

// src/hooks/use-combined-refs.tsx
function setRef2(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref && "current" in ref) {
    ;
    ref.current = value;
  }
}
var useCombinedRefs;
var init_use_combined_refs = __esm({
  "src/hooks/use-combined-refs.tsx"() {
    "use strict";
    useCombinedRefs = (...refs) => {
      return (value) => {
        refs.forEach((ref) => setRef2(ref, value));
      };
    };
  }
});

// src/components/data-grid/context/data-grid-context.tsx
var import_react70, DataGridContext;
var init_data_grid_context = __esm({
  "src/components/data-grid/context/data-grid-context.tsx"() {
    "use strict";
    import_react70 = require("react");
    DataGridContext = (0, import_react70.createContext)(
      null
    );
  }
});

// src/components/data-grid/context/use-data-grid-context.tsx
var import_react71, useDataGridContext;
var init_use_data_grid_context = __esm({
  "src/components/data-grid/context/use-data-grid-context.tsx"() {
    "use strict";
    import_react71 = require("react");
    init_data_grid_context();
    useDataGridContext = () => {
      const context = (0, import_react71.useContext)(DataGridContext);
      if (!context) {
        throw new Error(
          "useDataGridContext must be used within a DataGridContextProvider"
        );
      }
      return context;
    };
  }
});

// src/components/data-grid/context/index.ts
var init_context2 = __esm({
  "src/components/data-grid/context/index.ts"() {
    "use strict";
    init_data_grid_context();
    init_use_data_grid_context();
  }
});

// src/components/data-grid/utils.ts
function generateCellId(coords) {
  return `${coords.row}:${coords.col}`;
}
function isCellMatch(cell, coords) {
  if (!coords) {
    return false;
  }
  return cell.row === coords.row && cell.col === coords.col;
}
function isSpecialFocusKey(event) {
  return SPECIAL_FOCUS_KEYS.includes(event.key) && event.ctrlKey && event.altKey;
}
var SPECIAL_FOCUS_KEYS;
var init_utils6 = __esm({
  "src/components/data-grid/utils.ts"() {
    "use strict";
    SPECIAL_FOCUS_KEYS = [".", ","];
  }
});

// src/components/data-grid/hooks/use-data-grid-cell.tsx
var import_react72, textCharacterRegex, numberCharacterRegex, useDataGridCell;
var init_use_data_grid_cell = __esm({
  "src/components/data-grid/hooks/use-data-grid-cell.tsx"() {
    "use strict";
    import_react72 = require("react");
    init_context2();
    init_utils6();
    textCharacterRegex = /^.$/u;
    numberCharacterRegex = /^[0-9]$/u;
    useDataGridCell = ({
      context
    }) => {
      const {
        register,
        control,
        anchor,
        setIsEditing,
        setSingleRange,
        setIsSelecting,
        setRangeEnd,
        getWrapperFocusHandler,
        getWrapperMouseOverHandler,
        getInputChangeHandler,
        getIsCellSelected,
        getIsCellDragSelected,
        getCellMetadata
      } = useDataGridContext();
      const { rowIndex, columnIndex } = context;
      const coords = (0, import_react72.useMemo)(
        () => ({ row: rowIndex, col: columnIndex }),
        [rowIndex, columnIndex]
      );
      const { id: id2, field, type, innerAttributes, inputAttributes } = (0, import_react72.useMemo)(() => {
        return getCellMetadata(coords);
      }, [coords, getCellMetadata]);
      const [showOverlay, setShowOverlay] = (0, import_react72.useState)(true);
      const containerRef = (0, import_react72.useRef)(null);
      const inputRef = (0, import_react72.useRef)(null);
      const handleOverlayMouseDown = (0, import_react72.useCallback)(
        (e) => {
          e.preventDefault();
          e.stopPropagation();
          if (e.detail === 2) {
            if (inputRef.current) {
              setShowOverlay(false);
              inputRef.current.focus();
              return;
            }
          }
          if (e.shiftKey) {
            if (coords.col === anchor?.col) {
              setRangeEnd(coords);
              return;
            }
          }
          if (containerRef.current) {
            setSingleRange(coords);
            setIsSelecting(true);
            containerRef.current.focus();
          }
        },
        [coords, anchor, setRangeEnd, setSingleRange, setIsSelecting]
      );
      const handleBooleanInnerMouseDown = (0, import_react72.useCallback)(
        (e) => {
          e.preventDefault();
          e.stopPropagation();
          if (e.detail === 2) {
            inputRef.current?.focus();
            return;
          }
          if (e.shiftKey) {
            setRangeEnd(coords);
            return;
          }
          if (containerRef.current) {
            setSingleRange(coords);
            setIsSelecting(true);
            containerRef.current.focus();
          }
        },
        [setIsSelecting, setSingleRange, setRangeEnd, coords]
      );
      const handleInputBlur = (0, import_react72.useCallback)(() => {
        setShowOverlay(true);
        setIsEditing(false);
      }, [setIsEditing]);
      const handleInputFocus = (0, import_react72.useCallback)(() => {
        setShowOverlay(false);
        setIsEditing(true);
      }, [setIsEditing]);
      const validateKeyStroke = (0, import_react72.useCallback)(
        (key) => {
          if (type === "number") {
            return numberCharacterRegex.test(key);
          }
          if (type === "text") {
            return textCharacterRegex.test(key);
          }
          return false;
        },
        [type]
      );
      const handleContainerKeyDown = (0, import_react72.useCallback)(
        (e) => {
          if (!inputRef.current || !validateKeyStroke(e.key) || !showOverlay) {
            return;
          }
          if (e.key.toLowerCase() === "z" && (e.ctrlKey || e.metaKey)) {
            return;
          }
          if (e.key.toLowerCase() === "c" && (e.ctrlKey || e.metaKey)) {
            return;
          }
          if (e.key.toLowerCase() === "v" && (e.ctrlKey || e.metaKey)) {
            return;
          }
          if (e.key === "Enter") {
            return;
          }
          if (isSpecialFocusKey(e.nativeEvent)) {
            return;
          }
          inputRef.current.focus();
          setShowOverlay(false);
          if (inputRef.current instanceof HTMLInputElement) {
            inputRef.current.value = "";
            const nativeInputValueSetter = Object.getOwnPropertyDescriptor(
              window.HTMLInputElement.prototype,
              "value"
            )?.set;
            nativeInputValueSetter?.call(inputRef.current, e.key);
            const event = new Event("input", { bubbles: true });
            inputRef.current.dispatchEvent(event);
          }
          e.stopPropagation();
          e.preventDefault();
        },
        [showOverlay, validateKeyStroke]
      );
      const isAnchor = (0, import_react72.useMemo)(() => {
        return anchor ? isCellMatch(coords, anchor) : false;
      }, [anchor, coords]);
      const fieldWithoutOverlay = (0, import_react72.useMemo)(() => {
        return type === "boolean";
      }, [type]);
      (0, import_react72.useEffect)(() => {
        if (isAnchor && !containerRef.current?.contains(document.activeElement)) {
          containerRef.current?.focus();
        }
      }, [isAnchor]);
      const renderProps = {
        container: {
          field,
          isAnchor,
          isSelected: getIsCellSelected(coords),
          isDragSelected: getIsCellDragSelected(coords),
          showOverlay: fieldWithoutOverlay ? false : showOverlay,
          innerProps: {
            ref: containerRef,
            onMouseOver: getWrapperMouseOverHandler(coords),
            onMouseDown: type === "boolean" ? handleBooleanInnerMouseDown : void 0,
            onKeyDown: handleContainerKeyDown,
            onFocus: getWrapperFocusHandler(coords),
            ...innerAttributes
          },
          overlayProps: {
            onMouseDown: handleOverlayMouseDown
          }
        },
        input: {
          ref: inputRef,
          onBlur: handleInputBlur,
          onFocus: handleInputFocus,
          onChange: getInputChangeHandler(field),
          ...inputAttributes
        }
      };
      return {
        id: id2,
        field,
        register,
        control,
        renderProps
      };
    };
  }
});

// src/components/data-grid/hooks/use-data-grid-cell-error.tsx
function isFieldError(errors) {
  return typeof errors === "object" && "message" in errors && "type" in errors;
}
var import_react73, import_react_hook_form7, useDataGridCellError;
var init_use_data_grid_cell_error = __esm({
  "src/components/data-grid/hooks/use-data-grid-cell-error.tsx"() {
    "use strict";
    import_react73 = require("react");
    import_react_hook_form7 = require("react-hook-form");
    init_context2();
    useDataGridCellError = ({
      context
    }) => {
      const { errors, getCellErrorMetadata, navigateToField } = useDataGridContext();
      const { rowIndex, columnIndex } = context;
      const { accessor, field } = (0, import_react73.useMemo)(() => {
        return getCellErrorMetadata({ row: rowIndex, col: columnIndex });
      }, [rowIndex, columnIndex, getCellErrorMetadata]);
      const rowErrorsObject = accessor && columnIndex === 0 ? (0, import_react_hook_form7.get)(errors, accessor) : void 0;
      const rowErrors = [];
      function collectErrors(errorObject, baseAccessor) {
        if (!errorObject) {
          return;
        }
        if (isFieldError(errorObject)) {
          const message = errorObject.message;
          const to = () => navigateToField(baseAccessor);
          if (message) {
            rowErrors.push({ message, to });
          }
        } else {
          Object.keys(errorObject).forEach((key) => {
            const nestedError = errorObject[key];
            const fieldAccessor = `${baseAccessor}.${key}`;
            if (nestedError && typeof nestedError === "object") {
              collectErrors(nestedError, fieldAccessor);
            }
          });
        }
      }
      if (rowErrorsObject && accessor) {
        collectErrors(rowErrorsObject, accessor);
      }
      const cellError = field ? (0, import_react_hook_form7.get)(errors, field) : void 0;
      return {
        errors,
        rowErrors,
        cellError
      };
    };
  }
});

// src/components/data-grid/models/data-grid-bulk-update-command.ts
var DataGridBulkUpdateCommand;
var init_data_grid_bulk_update_command = __esm({
  "src/components/data-grid/models/data-grid-bulk-update-command.ts"() {
    "use strict";
    DataGridBulkUpdateCommand = class {
      constructor({ fields, prev, next, setter }) {
        __publicField(this, "_fields");
        __publicField(this, "_prev");
        __publicField(this, "_next");
        __publicField(this, "_setter");
        this._fields = fields;
        this._prev = prev;
        this._next = next;
        this._setter = setter;
      }
      execute() {
        this._setter(this._fields, this._next);
      }
      undo() {
        this._setter(this._fields, this._prev);
      }
      redo() {
        this.execute();
      }
    };
  }
});

// src/components/data-grid/models/data-grid-matrix.ts
var DataGridMatrix;
var init_data_grid_matrix = __esm({
  "src/components/data-grid/models/data-grid-matrix.ts"() {
    "use strict";
    DataGridMatrix = class {
      constructor(data, columns) {
        __publicField(this, "cells");
        __publicField(this, "rowAccessors", []);
        __publicField(this, "columnAccessors", []);
        this.cells = this._populateCells(data, columns);
        this.rowAccessors = this._computeRowAccessors();
        this.columnAccessors = this._computeColumnAccessors();
      }
      _computeRowAccessors() {
        return this.cells.map((_, rowIndex) => this.getRowAccessor(rowIndex));
      }
      _computeColumnAccessors() {
        if (this.cells.length === 0) {
          return [];
        }
        return this.cells[0].map((_, colIndex) => this.getColumnAccessor(colIndex));
      }
      getFirstNavigableCell() {
        for (let row = 0; row < this.cells.length; row++) {
          for (let col = 0; col < this.cells[0].length; col++) {
            if (this.cells[row][col] !== null) {
              return { row, col };
            }
          }
        }
        return null;
      }
      getFieldsInRow(row) {
        const keys = [];
        if (row < 0 || row >= this.cells.length) {
          return keys;
        }
        this.cells[row].forEach((cell) => {
          if (cell !== null) {
            keys.push(cell.field);
          }
        });
        return keys;
      }
      getFieldsInSelection(start, end) {
        const keys = [];
        if (!start || !end) {
          return keys;
        }
        if (start.col !== end.col) {
          throw new Error("Selection must be in the same column");
        }
        const startRow = Math.min(start.row, end.row);
        const endRow = Math.max(start.row, end.row);
        const col = start.col;
        for (let row = startRow; row <= endRow; row++) {
          if (this._isValidPosition(row, col) && this.cells[row][col] !== null) {
            keys.push(this.cells[row][col]?.field);
          }
        }
        return keys;
      }
      getCellField(cell) {
        if (this._isValidPosition(cell.row, cell.col)) {
          return this.cells[cell.row][cell.col]?.field || null;
        }
        return null;
      }
      getCellType(cell) {
        if (this._isValidPosition(cell.row, cell.col)) {
          return this.cells[cell.row][cell.col]?.type || null;
        }
        return null;
      }
      getIsCellSelected(cell, start, end) {
        if (!cell || !start || !end) {
          return false;
        }
        if (start.col !== end.col) {
          throw new Error("Selection must be in the same column");
        }
        const startRow = Math.min(start.row, end.row);
        const endRow = Math.max(start.row, end.row);
        const col = start.col;
        return cell.col === col && cell.row >= startRow && cell.row <= endRow;
      }
      toggleColumn(col, enabled) {
        if (col < 0 || col >= this.cells[0].length) {
          return;
        }
        this.cells.forEach((row, index2) => {
          const cell = row[col];
          if (cell) {
            this.cells[index2][col] = {
              ...cell,
              enabled
            };
          }
        });
      }
      toggleRow(row, enabled) {
        if (row < 0 || row >= this.cells.length) {
          return;
        }
        this.cells[row].forEach((cell, index2) => {
          if (cell) {
            this.cells[row][index2] = {
              ...cell,
              enabled
            };
          }
        });
      }
      getCoordinatesByField(field) {
        if (this.rowAccessors.length === 1) {
          const col = this.columnAccessors.indexOf(field);
          if (col === -1) {
            return null;
          }
          return { row: 0, col };
        }
        for (let row = 0; row < this.rowAccessors.length; row++) {
          const rowAccessor = this.rowAccessors[row];
          if (rowAccessor === null) {
            continue;
          }
          if (!field.startsWith(rowAccessor)) {
            continue;
          }
          for (let column = 0; column < this.columnAccessors.length; column++) {
            const columnAccessor = this.columnAccessors[column];
            if (columnAccessor === null) {
              continue;
            }
            const fullFieldPath = `${rowAccessor}.${columnAccessor}`;
            if (fullFieldPath === field) {
              return { row, col: column };
            }
          }
        }
        return null;
      }
      getRowAccessor(row) {
        if (row < 0 || row >= this.cells.length) {
          return null;
        }
        const cells = this.cells[row];
        const nonNullFields = cells.filter((cell) => cell !== null).map((cell) => cell.field.split("."));
        if (nonNullFields.length === 0) {
          return null;
        }
        let commonParts = nonNullFields[0];
        for (const segments of nonNullFields) {
          commonParts = commonParts.filter(
            (part, index2) => segments[index2] === part
          );
          if (commonParts.length === 0) {
            break;
          }
        }
        const accessor = commonParts.join(".");
        if (!accessor) {
          return null;
        }
        return accessor;
      }
      getColumnAccessor(column) {
        if (column < 0 || column >= this.cells[0].length) {
          return null;
        }
        const uniqueParts = this.cells.map((row, rowIndex) => {
          const cell = row[column];
          if (!cell) {
            return null;
          }
          const rowAccessor = this.getRowAccessor(rowIndex);
          if (rowAccessor && cell.field.startsWith(rowAccessor + ".")) {
            return cell.field.slice(rowAccessor.length + 1);
          }
          return null;
        }).filter((part) => part !== null);
        if (uniqueParts.length === 0) {
          return null;
        }
        const firstPart = uniqueParts[0];
        const isConsistent = uniqueParts.every((part) => part === firstPart);
        return isConsistent ? firstPart : null;
      }
      getValidMovement(row, col, direction, metaKey = false) {
        const [dRow, dCol] = this._getDirectionDeltas(direction);
        if (metaKey) {
          return this._getLastValidCellInDirection(row, col, dRow, dCol);
        } else {
          let newRow = row + dRow;
          let newCol = col + dCol;
          while (this._isValidPosition(newRow, newCol)) {
            if (this.cells[newRow][newCol] !== null && this.cells[newRow][newCol]?.enabled !== false) {
              return { row: newRow, col: newCol };
            }
            newRow += dRow;
            newCol += dCol;
          }
          return { row, col };
        }
      }
      _isValidPosition(row, col, cells) {
        if (!cells) {
          cells = this.cells;
        }
        return row >= 0 && row < cells.length && col >= 0 && col < cells[0].length;
      }
      _getDirectionDeltas(direction) {
        switch (direction) {
          case "ArrowUp":
            return [-1, 0];
          case "ArrowDown":
            return [1, 0];
          case "ArrowLeft":
            return [0, -1];
          case "ArrowRight":
            return [0, 1];
          default:
            return [0, 0];
        }
      }
      _getLastValidCellInDirection(row, col, dRow, dCol) {
        let newRow = row;
        let newCol = col;
        let lastValidRow = row;
        let lastValidCol = col;
        while (this._isValidPosition(newRow + dRow, newCol + dCol)) {
          newRow += dRow;
          newCol += dCol;
          if (this.cells[newRow][newCol] !== null) {
            lastValidRow = newRow;
            lastValidCol = newCol;
          }
        }
        return {
          row: lastValidRow,
          col: lastValidCol
        };
      }
      _populateCells(rows, columns) {
        const cells = Array.from(
          { length: rows.length },
          () => Array(columns.length).fill(null)
        );
        rows.forEach((row, rowIndex) => {
          columns.forEach((column, colIndex) => {
            if (!this._isValidPosition(rowIndex, colIndex, cells)) {
              return;
            }
            const {
              name: _,
              field,
              type,
              ...rest
            } = column.meta;
            const context = {
              row,
              column: {
                ...column,
                meta: rest
              }
            };
            const fieldValue = field ? field(context) : null;
            if (!fieldValue || !type) {
              return;
            }
            cells[rowIndex][colIndex] = {
              field: fieldValue,
              type,
              enabled: true
            };
          });
        });
        return cells;
      }
    };
  }
});

// src/components/data-grid/models/data-grid-query-tool.ts
var DataGridQueryTool;
var init_data_grid_query_tool = __esm({
  "src/components/data-grid/models/data-grid-query-tool.ts"() {
    "use strict";
    init_utils6();
    DataGridQueryTool = class {
      constructor(container) {
        __publicField(this, "container");
        this.container = container;
      }
      getInput(cell) {
        const id2 = this._getCellId(cell);
        const input = this.container?.querySelector(`[data-cell-id="${id2}"]`);
        if (!input) {
          return null;
        }
        return input;
      }
      getInputByField(field) {
        const input = this.container?.querySelector(`[data-field="${field}"]`);
        if (!input) {
          return null;
        }
        return input;
      }
      getCoordinatesByField(field) {
        const cell = this.container?.querySelector(
          `[data-field="${field}"][data-cell-id]`
        );
        if (!cell) {
          return null;
        }
        const cellId = cell.getAttribute("data-cell-id");
        if (!cellId) {
          return null;
        }
        const [row, col] = cellId.split(":").map((n) => parseInt(n, 10));
        if (isNaN(row) || isNaN(col)) {
          return null;
        }
        return { row, col };
      }
      getContainer(cell) {
        const id2 = this._getCellId(cell);
        const container = this.container?.querySelector(
          `[data-container-id="${id2}"]`
        );
        if (!container) {
          return null;
        }
        return container;
      }
      _getCellId(cell) {
        return generateCellId(cell);
      }
    };
  }
});

// src/components/data-grid/models/data-grid-update-command.ts
var DataGridUpdateCommand;
var init_data_grid_update_command = __esm({
  "src/components/data-grid/models/data-grid-update-command.ts"() {
    "use strict";
    DataGridUpdateCommand = class {
      constructor({ prev, next, setter }) {
        __publicField(this, "_prev");
        __publicField(this, "_next");
        __publicField(this, "_setter");
        this._prev = prev;
        this._next = next;
        this._setter = setter;
      }
      execute() {
        this._setter(this._next);
      }
      undo() {
        this._setter(this._prev);
      }
      redo() {
        this.execute();
      }
    };
  }
});

// src/components/data-grid/models/index.ts
var init_models = __esm({
  "src/components/data-grid/models/index.ts"() {
    "use strict";
    init_data_grid_bulk_update_command();
    init_data_grid_matrix();
    init_data_grid_query_tool();
    init_data_grid_update_command();
  }
});

// src/components/data-grid/hooks/use-data-grid-cell-handlers.tsx
var import_react74, useDataGridCellHandlers;
var init_use_data_grid_cell_handlers = __esm({
  "src/components/data-grid/hooks/use-data-grid-cell-handlers.tsx"() {
    "use strict";
    import_react74 = require("react");
    init_models();
    useDataGridCellHandlers = ({
      matrix,
      anchor,
      rangeEnd,
      setRangeEnd,
      isDragging,
      setIsDragging,
      isSelecting,
      setIsSelecting,
      setSingleRange,
      dragEnd,
      setDragEnd,
      setValue,
      execute
    }) => {
      const getWrapperFocusHandler = (0, import_react74.useCallback)(
        (coords) => {
          return (_e) => {
            setSingleRange(coords);
          };
        },
        [setSingleRange]
      );
      const getOverlayMouseDownHandler = (0, import_react74.useCallback)(
        (coords) => {
          return (e) => {
            e.stopPropagation();
            e.preventDefault();
            if (e.shiftKey) {
              setRangeEnd(coords);
              return;
            }
            setIsSelecting(true);
            setSingleRange(coords);
          };
        },
        [setIsSelecting, setRangeEnd, setSingleRange]
      );
      const getWrapperMouseOverHandler = (0, import_react74.useCallback)(
        (coords) => {
          if (!isDragging && !isSelecting) {
            return;
          }
          return (_e) => {
            if (anchor?.col !== coords.col) {
              return;
            }
            if (isSelecting) {
              setRangeEnd(coords);
            } else {
              setDragEnd(coords);
            }
          };
        },
        [anchor?.col, isDragging, isSelecting, setDragEnd, setRangeEnd]
      );
      const getInputChangeHandler = (0, import_react74.useCallback)(
        // Using `any` here as the generic type of Path<TFieldValues> will
        // not be inferred correctly.
        (field) => {
          return (next, prev) => {
            const command = new DataGridUpdateCommand({
              next,
              prev,
              setter: (value) => {
                setValue(field, value, {
                  shouldDirty: true,
                  shouldTouch: true
                });
              }
            });
            execute(command);
          };
        },
        [setValue, execute]
      );
      const onDragToFillStart = (0, import_react74.useCallback)(
        (_e) => {
          setIsDragging(true);
        },
        [setIsDragging]
      );
      const getIsCellSelected = (0, import_react74.useCallback)(
        (cell) => {
          if (!cell || !anchor || !rangeEnd) {
            return false;
          }
          return matrix.getIsCellSelected(cell, anchor, rangeEnd);
        },
        [anchor, rangeEnd, matrix]
      );
      const getIsCellDragSelected = (0, import_react74.useCallback)(
        (cell) => {
          if (!cell || !anchor || !dragEnd) {
            return false;
          }
          return matrix.getIsCellSelected(cell, anchor, dragEnd);
        },
        [anchor, dragEnd, matrix]
      );
      return {
        getWrapperFocusHandler,
        getOverlayMouseDownHandler,
        getWrapperMouseOverHandler,
        getInputChangeHandler,
        getIsCellSelected,
        getIsCellDragSelected,
        onDragToFillStart
      };
    };
  }
});

// src/components/data-grid/hooks/use-data-grid-cell-metadata.tsx
var import_react75, useDataGridCellMetadata;
var init_use_data_grid_cell_metadata = __esm({
  "src/components/data-grid/hooks/use-data-grid-cell-metadata.tsx"() {
    "use strict";
    import_react75 = require("react");
    init_utils6();
    useDataGridCellMetadata = ({
      matrix
    }) => {
      const getCellMetadata = (0, import_react75.useCallback)(
        (coords) => {
          const { row, col } = coords;
          const id2 = generateCellId(coords);
          const field = matrix.getCellField(coords);
          const type = matrix.getCellType(coords);
          if (!field || !type) {
            throw new Error(`'field' or 'type' is null for cell ${id2}`);
          }
          const inputAttributes = {
            "data-row": row,
            "data-col": col,
            "data-cell-id": id2,
            "data-field": field
          };
          const innerAttributes = {
            "data-container-id": id2
          };
          return {
            id: id2,
            field,
            type,
            inputAttributes,
            innerAttributes
          };
        },
        [matrix]
      );
      const getCellErrorMetadata = (0, import_react75.useCallback)(
        (coords) => {
          const accessor = matrix.getRowAccessor(coords.row);
          const field = matrix.getCellField(coords);
          return {
            accessor,
            field
          };
        },
        [matrix]
      );
      return {
        getCellMetadata,
        getCellErrorMetadata
      };
    };
  }
});

// src/components/data-grid/hooks/use-data-grid-cell-snapshot.tsx
var import_react76, useDataGridCellSnapshot;
var init_use_data_grid_cell_snapshot = __esm({
  "src/components/data-grid/hooks/use-data-grid-cell-snapshot.tsx"() {
    "use strict";
    import_react76 = require("react");
    useDataGridCellSnapshot = ({
      matrix,
      form
    }) => {
      const [snapshot, setSnapshot] = (0, import_react76.useState)(
        null
      );
      const { getValues: getValues2, setValue } = form;
      const createSnapshot = (0, import_react76.useCallback)(
        (cell) => {
          if (!cell) {
            return null;
          }
          const field = matrix.getCellField(cell);
          if (!field) {
            return null;
          }
          const value = getValues2(field);
          setSnapshot({ field, value });
        },
        [getValues2, matrix]
      );
      const restoreSnapshot = (0, import_react76.useCallback)(() => {
        if (!snapshot) {
          return;
        }
        const { field, value } = snapshot;
        requestAnimationFrame(() => {
          setValue(field, value);
        });
      }, [setValue, snapshot]);
      return {
        createSnapshot,
        restoreSnapshot
      };
    };
  }
});

// src/components/data-grid/hooks/use-data-grid-clipboard-events.tsx
var import_react77, useDataGridClipboardEvents;
var init_use_data_grid_clipboard_events = __esm({
  "src/components/data-grid/hooks/use-data-grid-clipboard-events.tsx"() {
    "use strict";
    import_react77 = require("react");
    init_models();
    useDataGridClipboardEvents = ({
      matrix,
      anchor,
      rangeEnd,
      isEditing,
      getSelectionValues,
      setSelectionValues,
      execute
    }) => {
      const handleCopyEvent = (0, import_react77.useCallback)(
        (e) => {
          if (isEditing || !anchor || !rangeEnd) {
            return;
          }
          e.preventDefault();
          const fields = matrix.getFieldsInSelection(anchor, rangeEnd);
          const values = getSelectionValues(fields);
          const text = values.map((value) => `${value}` ?? "").join("	");
          e.clipboardData?.setData("text/plain", text);
        },
        [isEditing, anchor, rangeEnd, matrix, getSelectionValues]
      );
      const handlePasteEvent = (0, import_react77.useCallback)(
        (e) => {
          if (isEditing || !anchor || !rangeEnd) {
            return;
          }
          e.preventDefault();
          const text = e.clipboardData?.getData("text/plain");
          if (!text) {
            return;
          }
          const next = text.split("	");
          const fields = matrix.getFieldsInSelection(anchor, rangeEnd);
          const prev = getSelectionValues(fields);
          const command = new DataGridBulkUpdateCommand({
            fields,
            next,
            prev,
            setter: setSelectionValues
          });
          execute(command);
        },
        [
          isEditing,
          anchor,
          rangeEnd,
          matrix,
          getSelectionValues,
          setSelectionValues,
          execute
        ]
      );
      return {
        handleCopyEvent,
        handlePasteEvent
      };
    };
  }
});

// src/components/data-grid/hooks/use-data-grid-column-visibility.tsx
function useDataGridColumnVisibility(grid, matrix) {
  const columns = grid.getAllLeafColumns();
  const columnOptions = columns.map((column) => ({
    id: column.id,
    name: getColumnName(column),
    checked: column.getIsVisible(),
    disabled: !column.getCanHide()
  }));
  const handleToggleColumn = (0, import_react78.useCallback)(
    (index2) => (value) => {
      const column = columns[index2];
      if (!column.getCanHide()) {
        return;
      }
      matrix.toggleColumn(index2, value);
      column.toggleVisibility(value);
    },
    [columns, matrix]
  );
  const handleResetColumns = (0, import_react78.useCallback)(() => {
    grid.setColumnVisibility({});
  }, [grid]);
  const optionCount = columnOptions.filter((c) => !c.disabled).length;
  const isDisabled = optionCount === 0;
  return {
    columnOptions,
    handleToggleColumn,
    handleResetColumns,
    isDisabled
  };
}
function getColumnName(column) {
  const id2 = column.columnDef.id;
  const enableHiding = column.columnDef.enableHiding;
  const meta = column?.columnDef.meta;
  if (!id2) {
    throw new Error(
      "Column is missing an id, which is a required field. Please provide an id for the column."
    );
  }
  if (process.env.NODE_ENV === "development" && !meta?.name && enableHiding) {
    console.warn(
      `Column "${id2}" does not have a name. You should add a name to the column definition. Falling back to the column id.`
    );
  }
  return meta?.name || id2;
}
var import_react78;
var init_use_data_grid_column_visibility = __esm({
  "src/components/data-grid/hooks/use-data-grid-column-visibility.tsx"() {
    "use strict";
    import_react78 = require("react");
  }
});

// src/components/data-grid/hooks/use-data-grid-error-highlighting.tsx
function findErrorPaths(obj, path = []) {
  if (typeof obj !== "object" || obj === null) {
    return [];
  }
  if ("message" in obj && "type" in obj) {
    return [path.join(".")];
  }
  return Object.entries(obj).flatMap(
    ([key, value]) => findErrorPaths(value, [...path, key])
  );
}
var import_react79, useDataGridErrorHighlighting;
var init_use_data_grid_error_highlighting = __esm({
  "src/components/data-grid/hooks/use-data-grid-error-highlighting.tsx"() {
    "use strict";
    import_react79 = require("react");
    useDataGridErrorHighlighting = (matrix, grid, errors) => {
      const [isHighlighted, setIsHighlighted] = (0, import_react79.useState)(false);
      const [visibilitySnapshot, setVisibilitySnapshot] = (0, import_react79.useState)(null);
      const { flatRows } = grid.getRowModel();
      const flatColumns = grid.getAllFlatColumns();
      const errorPaths = findErrorPaths(errors);
      const errorCount = errorPaths.length;
      const { rowsWithErrors, columnsWithErrors } = (0, import_react79.useMemo)(() => {
        const rowsWithErrors2 = /* @__PURE__ */ new Set();
        const columnsWithErrors2 = /* @__PURE__ */ new Set();
        errorPaths.forEach((errorPath) => {
          const rowIndex = matrix.rowAccessors.findIndex(
            (accessor) => accessor && (errorPath === accessor || errorPath.startsWith(`${accessor}.`))
          );
          if (rowIndex !== -1) {
            rowsWithErrors2.add(rowIndex);
          }
          const columnIndex = matrix.columnAccessors.findIndex(
            (accessor) => accessor && (errorPath === accessor || errorPath.endsWith(`.${accessor}`))
          );
          if (columnIndex !== -1) {
            columnsWithErrors2.add(columnIndex);
          }
        });
        return { rowsWithErrors: rowsWithErrors2, columnsWithErrors: columnsWithErrors2 };
      }, [errorPaths, matrix.rowAccessors, matrix.columnAccessors]);
      const toggleErrorHighlighting = (0, import_react79.useCallback)(
        (currentRowVisibility, currentColumnVisibility, setRowVisibility, setColumnVisibility) => {
          if (isHighlighted) {
            if (visibilitySnapshot) {
              setRowVisibility(visibilitySnapshot.rows);
              setColumnVisibility(visibilitySnapshot.columns);
            }
          } else {
            setVisibilitySnapshot({
              rows: { ...currentRowVisibility },
              columns: { ...currentColumnVisibility }
            });
            const rowsToHide = flatRows.map((_, index2) => {
              return !rowsWithErrors.has(index2) ? index2 : void 0;
            }).filter((index2) => index2 !== void 0);
            const columnsToHide = flatColumns.map((column, index2) => {
              return !columnsWithErrors.has(index2) && index2 !== 0 ? column.id : void 0;
            }).filter((id2) => id2 !== void 0);
            setRowVisibility(
              rowsToHide.reduce((acc, row) => ({ ...acc, [row]: false }), {})
            );
            setColumnVisibility(
              columnsToHide.reduce(
                (acc, column) => ({ ...acc, [column]: false }),
                {}
              )
            );
          }
          setIsHighlighted((prev) => !prev);
        },
        [
          isHighlighted,
          visibilitySnapshot,
          flatRows,
          flatColumns,
          rowsWithErrors,
          columnsWithErrors
        ]
      );
      return {
        errorCount,
        isHighlighted,
        toggleErrorHighlighting
      };
    };
  }
});

// src/components/data-grid/hooks/use-data-grid-form-handlers.tsx
function convertToNumber(value) {
  if (typeof value === "number") {
    return value;
  }
  const converted = Number(value);
  if (isNaN(converted)) {
    throw new Error(`String "${value}" cannot be converted to number.`);
  }
  return converted;
}
function convertToBoolean(value) {
  if (typeof value === "boolean") {
    return value;
  }
  if (typeof value === "undefined" || value === null) {
    return false;
  }
  const lowerValue = value.toLowerCase();
  if (lowerValue === "true" || lowerValue === "false") {
    return lowerValue === "true";
  }
  throw new Error(`String "${value}" cannot be converted to boolean.`);
}
function covertToString(value) {
  if (typeof value === "undefined" || value === null) {
    return "";
  }
  return String(value);
}
function convertArrayToPrimitive(values, type) {
  switch (type) {
    case "number":
      return values.map((v) => v === "" ? v : convertToNumber(v));
    case "boolean":
      return values.map(convertToBoolean);
    case "text":
      return values.map(covertToString);
    default:
      throw new Error(`Unsupported target type "${type}".`);
  }
}
var import_react80, useDataGridFormHandlers;
var init_use_data_grid_form_handlers = __esm({
  "src/components/data-grid/hooks/use-data-grid-form-handlers.tsx"() {
    "use strict";
    import_react80 = require("react");
    useDataGridFormHandlers = ({
      matrix,
      form,
      anchor
    }) => {
      const { getValues: getValues2, setValue } = form;
      const getSelectionValues = (0, import_react80.useCallback)(
        (fields) => {
          if (!fields.length) {
            return [];
          }
          return fields.map((field) => {
            return getValues2(field);
          });
        },
        [getValues2]
      );
      const setSelectionValues = (0, import_react80.useCallback)(
        async (fields, values) => {
          if (!fields.length || !anchor) {
            return;
          }
          const type = matrix.getCellType(anchor);
          if (!type) {
            return;
          }
          const convertedValues = convertArrayToPrimitive(values, type);
          fields.forEach((field, index2) => {
            if (!field) {
              return;
            }
            const valueIndex = index2 % values.length;
            const value = convertedValues[valueIndex];
            setValue(field, value, {
              shouldDirty: true,
              shouldTouch: true
            });
          });
        },
        [matrix, anchor, setValue]
      );
      return {
        getSelectionValues,
        setSelectionValues
      };
    };
  }
});

// src/components/data-grid/hooks/use-data-grid-keydown-event.tsx
function getFocusableElements(ref) {
  const focusableElements = Array.from(
    document.querySelectorAll(
      "[tabindex], a, button, input, select, textarea"
    )
  );
  const currentElementIndex = focusableElements.indexOf(ref.current);
  const shortcuts = currentElementIndex > 0 ? focusableElements[currentElementIndex - 1] : null;
  let cancel = null;
  for (let i = currentElementIndex + 1; i < focusableElements.length; i++) {
    if (!ref.current.contains(focusableElements[i])) {
      cancel = focusableElements[i];
      break;
    }
  }
  return { shortcuts, cancel };
}
var import_react81, ARROW_KEYS2, VERTICAL_KEYS, useDataGridKeydownEvent;
var init_use_data_grid_keydown_event = __esm({
  "src/components/data-grid/hooks/use-data-grid-keydown-event.tsx"() {
    "use strict";
    import_react81 = require("react");
    init_models();
    ARROW_KEYS2 = ["ArrowUp", "ArrowDown", "ArrowLeft", "ArrowRight"];
    VERTICAL_KEYS = ["ArrowUp", "ArrowDown"];
    useDataGridKeydownEvent = ({
      containerRef,
      matrix,
      anchor,
      rangeEnd,
      isEditing,
      setTrapActive,
      scrollToCoordinates,
      setSingleRange,
      setRangeEnd,
      onEditingChangeHandler,
      getValues: getValues2,
      setValue,
      execute,
      undo,
      redo,
      queryTool,
      getSelectionValues,
      setSelectionValues,
      restoreSnapshot
    }) => {
      const handleKeyboardNavigation = (0, import_react81.useCallback)(
        (e) => {
          if (!anchor) {
            return;
          }
          const type = matrix.getCellType(anchor);
          if (isEditing && type !== "boolean") {
            return;
          }
          const direction = VERTICAL_KEYS.includes(e.key) ? "vertical" : "horizontal";
          const basis = direction === "horizontal" ? anchor : e.shiftKey ? rangeEnd : anchor;
          const updater = direction === "horizontal" ? setSingleRange : e.shiftKey ? setRangeEnd : setSingleRange;
          if (!basis) {
            return;
          }
          const { row, col } = basis;
          const handleNavigation = (coords) => {
            e.preventDefault();
            e.stopPropagation();
            scrollToCoordinates(coords, direction);
            updater(coords);
          };
          const next = matrix.getValidMovement(
            row,
            col,
            e.key,
            e.metaKey || e.ctrlKey
          );
          handleNavigation(next);
        },
        [
          isEditing,
          anchor,
          rangeEnd,
          scrollToCoordinates,
          setSingleRange,
          setRangeEnd,
          matrix
        ]
      );
      const handleTabKey = (0, import_react81.useCallback)(
        (e) => {
          if (!anchor) {
            return;
          }
          e.preventDefault();
          e.stopPropagation();
          const { row, col } = anchor;
          const key = e.shiftKey ? "ArrowLeft" : "ArrowRight";
          const direction = "horizontal";
          const next = matrix.getValidMovement(
            row,
            col,
            key,
            e.metaKey || e.ctrlKey
          );
          scrollToCoordinates(next, direction);
          setSingleRange(next);
        },
        [anchor, scrollToCoordinates, setSingleRange, matrix]
      );
      const handleUndo = (0, import_react81.useCallback)(
        (e) => {
          e.preventDefault();
          if (e.shiftKey) {
            redo();
            return;
          }
          undo();
        },
        [redo, undo]
      );
      const handleSpaceKeyBoolean = (0, import_react81.useCallback)(
        (anchor2) => {
          const end = rangeEnd ?? anchor2;
          const fields = matrix.getFieldsInSelection(anchor2, end);
          const prev = getSelectionValues(fields);
          const allChecked = prev.every((value) => value === true);
          const next = Array.from({ length: prev.length }, () => !allChecked);
          const command = new DataGridBulkUpdateCommand({
            fields,
            next,
            prev,
            setter: setSelectionValues
          });
          execute(command);
        },
        [rangeEnd, matrix, getSelectionValues, setSelectionValues, execute]
      );
      const handleSpaceKeyTextOrNumber = (0, import_react81.useCallback)(
        (anchor2) => {
          const field = matrix.getCellField(anchor2);
          const input = queryTool?.getInput(anchor2);
          if (!field || !input) {
            return;
          }
          const current = getValues2(field);
          const next = "";
          const command = new DataGridUpdateCommand({
            next,
            prev: current,
            setter: (value) => {
              setValue(field, value, {
                shouldDirty: true,
                shouldTouch: true
              });
            }
          });
          execute(command);
          input.focus();
        },
        [matrix, queryTool, getValues2, execute, setValue]
      );
      const handleSpaceKey = (0, import_react81.useCallback)(
        (e) => {
          if (!anchor || isEditing) {
            return;
          }
          e.preventDefault();
          const type = matrix.getCellType(anchor);
          if (!type) {
            return;
          }
          switch (type) {
            case "boolean":
              handleSpaceKeyBoolean(anchor);
              break;
            case "number":
            case "text":
              handleSpaceKeyTextOrNumber(anchor);
              break;
          }
        },
        [
          anchor,
          isEditing,
          matrix,
          handleSpaceKeyBoolean,
          handleSpaceKeyTextOrNumber
        ]
      );
      const handleMoveOnEnter = (0, import_react81.useCallback)(
        (e, anchor2) => {
          const direction = e.shiftKey ? "ArrowUp" : "ArrowDown";
          const pos = matrix.getValidMovement(
            anchor2.row,
            anchor2.col,
            direction,
            false
          );
          if (anchor2.row !== pos.row || anchor2.col !== pos.col) {
            setSingleRange(pos);
            scrollToCoordinates(pos, "vertical");
          } else {
            const container = queryTool?.getContainer(anchor2);
            container?.focus();
          }
          onEditingChangeHandler(false);
        },
        [
          queryTool,
          matrix,
          scrollToCoordinates,
          setSingleRange,
          onEditingChangeHandler
        ]
      );
      const handleEditOnEnter = (0, import_react81.useCallback)(
        (anchor2) => {
          const input = queryTool?.getInput(anchor2);
          if (!input) {
            return;
          }
          input.focus();
          onEditingChangeHandler(true);
        },
        [queryTool, onEditingChangeHandler]
      );
      const handleEnterKeyTextOrNumber = (0, import_react81.useCallback)(
        (e, anchor2) => {
          if (isEditing) {
            handleMoveOnEnter(e, anchor2);
            return;
          }
          handleEditOnEnter(anchor2);
        },
        [handleMoveOnEnter, handleEditOnEnter, isEditing]
      );
      const handleEnterKeyBoolean = (0, import_react81.useCallback)(
        (e, anchor2) => {
          const field = matrix.getCellField(anchor2);
          if (!field) {
            return;
          }
          const current = getValues2(field);
          let next;
          if (typeof current === "boolean") {
            next = !current;
          } else {
            next = true;
          }
          const command = new DataGridUpdateCommand({
            next,
            prev: current,
            setter: (value) => {
              setValue(field, value, {
                shouldDirty: true,
                shouldTouch: true
              });
            }
          });
          execute(command);
          handleMoveOnEnter(e, anchor2);
        },
        [execute, getValues2, handleMoveOnEnter, matrix, setValue]
      );
      const handleEnterKey = (0, import_react81.useCallback)(
        (e) => {
          if (!anchor) {
            return;
          }
          e.preventDefault();
          const type = matrix.getCellType(anchor);
          switch (type) {
            case "text":
            case "number":
              handleEnterKeyTextOrNumber(e, anchor);
              break;
            case "boolean": {
              handleEnterKeyBoolean(e, anchor);
              break;
            }
          }
        },
        [anchor, matrix, handleEnterKeyTextOrNumber, handleEnterKeyBoolean]
      );
      const handleDeleteKeyTextOrNumber = (0, import_react81.useCallback)(
        (anchor2, rangeEnd2) => {
          const fields = matrix.getFieldsInSelection(anchor2, rangeEnd2);
          const prev = getSelectionValues(fields);
          const next = Array.from({ length: prev.length }, () => "");
          const command = new DataGridBulkUpdateCommand({
            fields,
            next,
            prev,
            setter: setSelectionValues
          });
          execute(command);
        },
        [matrix, getSelectionValues, setSelectionValues, execute]
      );
      const handleDeleteKeyBoolean = (0, import_react81.useCallback)(
        (anchor2, rangeEnd2) => {
          const fields = matrix.getFieldsInSelection(anchor2, rangeEnd2);
          const prev = getSelectionValues(fields);
          const next = Array.from({ length: prev.length }, () => false);
          const command = new DataGridBulkUpdateCommand({
            fields,
            next,
            prev,
            setter: setSelectionValues
          });
          execute(command);
        },
        [execute, getSelectionValues, matrix, setSelectionValues]
      );
      const handleDeleteKey = (0, import_react81.useCallback)(
        (e) => {
          if (!anchor || !rangeEnd || isEditing) {
            return;
          }
          e.preventDefault();
          const type = matrix.getCellType(anchor);
          if (!type) {
            return;
          }
          switch (type) {
            case "text":
            case "number":
              handleDeleteKeyTextOrNumber(anchor, rangeEnd);
              break;
            case "boolean":
              handleDeleteKeyBoolean(anchor, rangeEnd);
              break;
          }
        },
        [
          anchor,
          rangeEnd,
          isEditing,
          matrix,
          handleDeleteKeyTextOrNumber,
          handleDeleteKeyBoolean
        ]
      );
      const handleEscapeKey = (0, import_react81.useCallback)(
        (e) => {
          if (!anchor || !isEditing) {
            return;
          }
          e.preventDefault();
          e.stopPropagation();
          restoreSnapshot();
          const container = queryTool?.getContainer(anchor);
          container?.focus();
        },
        [queryTool, isEditing, anchor, restoreSnapshot]
      );
      const handleSpecialFocusKeys = (0, import_react81.useCallback)(
        (e) => {
          if (!containerRef || isEditing) {
            return;
          }
          const focusableElements = getFocusableElements(containerRef);
          const focusElement = (element) => {
            if (element) {
              setTrapActive(false);
              element.focus();
            }
          };
          switch (e.key) {
            case ".":
              focusElement(focusableElements.cancel);
              break;
            case ",":
              focusElement(focusableElements.shortcuts);
              break;
            default:
              break;
          }
        },
        [anchor, isEditing, setTrapActive, containerRef]
      );
      const handleKeyDownEvent = (0, import_react81.useCallback)(
        (e) => {
          if (ARROW_KEYS2.includes(e.key)) {
            handleKeyboardNavigation(e);
            return;
          }
          if (e.key === "z" && (e.metaKey || e.ctrlKey)) {
            handleUndo(e);
            return;
          }
          if (e.key === " ") {
            handleSpaceKey(e);
            return;
          }
          if (e.key === "Delete" || e.key === "Backspace") {
            handleDeleteKey(e);
            return;
          }
          if (e.key === "Enter") {
            handleEnterKey(e);
            return;
          }
          if (e.key === "Escape") {
            handleEscapeKey(e);
            return;
          }
          if (e.key === "Tab") {
            handleTabKey(e);
            return;
          }
        },
        [
          handleEscapeKey,
          handleKeyboardNavigation,
          handleUndo,
          handleSpaceKey,
          handleEnterKey,
          handleDeleteKey,
          handleTabKey
        ]
      );
      return {
        handleKeyDownEvent,
        handleSpecialFocusKeys
      };
    };
  }
});

// src/components/data-grid/hooks/use-data-grid-mouse-up-event.tsx
var import_react82, useDataGridMouseUpEvent;
var init_use_data_grid_mouse_up_event = __esm({
  "src/components/data-grid/hooks/use-data-grid-mouse-up-event.tsx"() {
    "use strict";
    import_react82 = require("react");
    init_models();
    useDataGridMouseUpEvent = ({
      matrix,
      anchor,
      dragEnd,
      setDragEnd,
      isDragging,
      setIsDragging,
      setRangeEnd,
      setIsSelecting,
      getSelectionValues,
      setSelectionValues,
      execute
    }) => {
      const handleDragEnd = (0, import_react82.useCallback)(() => {
        if (!isDragging) {
          return;
        }
        if (!anchor || !dragEnd) {
          return;
        }
        const dragSelection = matrix.getFieldsInSelection(anchor, dragEnd);
        const anchorField = matrix.getCellField(anchor);
        if (!anchorField || !dragSelection.length) {
          return;
        }
        const anchorValue = getSelectionValues([anchorField]);
        const fields = dragSelection.filter((field) => field !== anchorField);
        const prev = getSelectionValues(fields);
        const next = Array.from({ length: prev.length }, () => anchorValue[0]);
        const command = new DataGridBulkUpdateCommand({
          fields,
          prev,
          next,
          setter: setSelectionValues
        });
        execute(command);
        setIsDragging(false);
        setDragEnd(null);
        setRangeEnd(dragEnd);
      }, [
        isDragging,
        anchor,
        dragEnd,
        matrix,
        getSelectionValues,
        setSelectionValues,
        execute,
        setIsDragging,
        setDragEnd,
        setRangeEnd
      ]);
      const handleMouseUpEvent = (0, import_react82.useCallback)(() => {
        handleDragEnd();
        setIsSelecting(false);
      }, [handleDragEnd, setIsSelecting]);
      return {
        handleMouseUpEvent
      };
    };
  }
});

// src/components/data-grid/hooks/use-data-grid-navigation.tsx
var import_react83, useDataGridNavigation;
var init_use_data_grid_navigation = __esm({
  "src/components/data-grid/hooks/use-data-grid-navigation.tsx"() {
    "use strict";
    import_react83 = require("react");
    useDataGridNavigation = ({
      matrix,
      anchor,
      visibleColumns,
      visibleRows,
      columnVirtualizer,
      rowVirtualizer,
      setColumnVisibility,
      flatColumns,
      queryTool,
      setSingleRange
    }) => {
      const scrollToCoordinates = (0, import_react83.useCallback)(
        (coords, direction) => {
          if (!anchor) {
            return;
          }
          const { row, col } = coords;
          const { row: anchorRow, col: anchorCol } = anchor;
          const rowDirection = row >= anchorRow ? "down" : "up";
          const colDirection = col >= anchorCol ? "right" : "left";
          let toRow = rowDirection === "down" ? row + 1 : row - 1;
          if (visibleRows[toRow] === void 0) {
            toRow = row;
          }
          let toCol = colDirection === "right" ? col + 1 : col - 1;
          if (visibleColumns[toCol] === void 0) {
            toCol = col;
          }
          const scrollOptions = { align: "auto", behavior: "auto" };
          if (direction === "horizontal" || direction === "both") {
            columnVirtualizer.scrollToIndex(toCol, scrollOptions);
          }
          if (direction === "vertical" || direction === "both") {
            rowVirtualizer.scrollToIndex(toRow, scrollOptions);
          }
        },
        [anchor, columnVirtualizer, visibleRows, rowVirtualizer, visibleColumns]
      );
      const navigateToField = (0, import_react83.useCallback)(
        (field) => {
          const coords = matrix.getCoordinatesByField(field);
          if (!coords) {
            return;
          }
          const column = flatColumns[coords.col];
          setColumnVisibility((prev) => {
            return {
              ...prev,
              [column.id]: true
            };
          });
          requestAnimationFrame(() => {
            scrollToCoordinates(coords, "both");
            setSingleRange(coords);
          });
          requestAnimationFrame(() => {
            const input = queryTool?.getInput(coords);
            if (input) {
              input.focus();
            }
          });
        },
        [
          matrix,
          flatColumns,
          setColumnVisibility,
          scrollToCoordinates,
          setSingleRange,
          queryTool
        ]
      );
      return {
        scrollToCoordinates,
        navigateToField
      };
    };
  }
});

// src/components/data-grid/hooks/use-data-grid-query-tool.tsx
var import_react84, useDataGridQueryTool;
var init_use_data_grid_query_tool = __esm({
  "src/components/data-grid/hooks/use-data-grid-query-tool.tsx"() {
    "use strict";
    import_react84 = require("react");
    init_models();
    useDataGridQueryTool = (containerRef) => {
      const queryToolRef = (0, import_react84.useRef)(null);
      (0, import_react84.useEffect)(() => {
        if (containerRef.current) {
          queryToolRef.current = new DataGridQueryTool(containerRef.current);
        }
      }, [containerRef]);
      return queryToolRef.current;
    };
  }
});

// src/components/data-grid/hooks/index.ts
var init_hooks3 = __esm({
  "src/components/data-grid/hooks/index.ts"() {
    "use strict";
    init_use_data_grid_cell();
    init_use_data_grid_cell_error();
    init_use_data_grid_cell_handlers();
    init_use_data_grid_cell_metadata();
    init_use_data_grid_cell_snapshot();
    init_use_data_grid_clipboard_events();
    init_use_data_grid_column_visibility();
    init_use_data_grid_error_highlighting();
    init_use_data_grid_form_handlers();
    init_use_data_grid_keydown_event();
    init_use_data_grid_mouse_up_event();
    init_use_data_grid_navigation();
    init_use_data_grid_query_tool();
  }
});

// src/components/data-grid/components/data-grid-row-error-indicator.tsx
var import_ui59, import_react_i18next50, import_jsx_runtime101, DataGridRowErrorIndicator, DataGridRowErrorLine;
var init_data_grid_row_error_indicator = __esm({
  "src/components/data-grid/components/data-grid-row-error-indicator.tsx"() {
    "use strict";
    import_ui59 = require("@medusajs/ui");
    import_react_i18next50 = require("react-i18next");
    import_jsx_runtime101 = require("react/jsx-runtime");
    DataGridRowErrorIndicator = ({
      rowErrors
    }) => {
      const rowErrorCount = rowErrors ? rowErrors.length : 0;
      if (!rowErrors || rowErrorCount <= 0) {
        return null;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime101.jsx)(
        import_ui59.Tooltip,
        {
          content: /* @__PURE__ */ (0, import_jsx_runtime101.jsx)("ul", { className: "flex flex-col gap-y-3", children: rowErrors.map((error, index2) => /* @__PURE__ */ (0, import_jsx_runtime101.jsx)(DataGridRowErrorLine, { error }, index2)) }),
          delayDuration: 0,
          children: /* @__PURE__ */ (0, import_jsx_runtime101.jsx)(import_ui59.Badge, { color: "red", size: "2xsmall", className: "cursor-default", children: rowErrorCount })
        }
      );
    };
    DataGridRowErrorLine = ({
      error
    }) => {
      const { t: t4 } = (0, import_react_i18next50.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime101.jsxs)("li", { className: "txt-compact-small flex flex-col items-start", children: [
        error.message,
        /* @__PURE__ */ (0, import_jsx_runtime101.jsx)(
          "button",
          {
            type: "button",
            onClick: error.to,
            className: "text-ui-fg-interactive hover:text-ui-fg-interactive-hover transition-fg",
            children: t4("dataGrid.errors.fixError")
          }
        )
      ] });
    };
  }
});

// src/components/data-grid/components/data-grid-cell-container.tsx
var import_error_message, import_icons32, import_ui60, import_react_hook_form8, import_jsx_runtime102, DataGridCellContainer, RenderChildren;
var init_data_grid_cell_container = __esm({
  "src/components/data-grid/components/data-grid-cell-container.tsx"() {
    "use strict";
    import_error_message = require("@hookform/error-message");
    import_icons32 = require("@medusajs/icons");
    import_ui60 = require("@medusajs/ui");
    import_react_hook_form8 = require("react-hook-form");
    init_data_grid_row_error_indicator();
    import_jsx_runtime102 = require("react/jsx-runtime");
    DataGridCellContainer = ({
      isAnchor,
      isSelected: isSelected2,
      isDragSelected,
      field,
      showOverlay,
      placeholder,
      innerProps,
      overlayProps,
      children,
      errors,
      rowErrors
    }) => {
      const error = (0, import_react_hook_form8.get)(errors, field);
      const hasError = !!error;
      return /* @__PURE__ */ (0, import_jsx_runtime102.jsxs)(
        "div",
        {
          className: (0, import_ui60.clx)(
            "bg-ui-bg-base group/cell relative flex size-full items-center gap-x-2 px-4 py-2.5 outline-none",
            {
              "bg-ui-tag-red-bg text-ui-tag-red-text": hasError && !isAnchor && !isSelected2 && !isDragSelected,
              "ring-ui-bg-interactive ring-2 ring-inset": isAnchor,
              "bg-ui-bg-highlight [&:has([data-field]:focus)]:bg-ui-bg-base": isSelected2 || isAnchor,
              "bg-ui-bg-subtle": isDragSelected && !isAnchor
            }
          ),
          tabIndex: -1,
          ...innerProps,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime102.jsx)(
              import_error_message.ErrorMessage,
              {
                name: field,
                errors,
                render: ({ message }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime102.jsx)("div", { className: "flex items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime102.jsx)(import_ui60.Tooltip, { content: message, delayDuration: 0, children: /* @__PURE__ */ (0, import_jsx_runtime102.jsx)(import_icons32.ExclamationCircle, { className: "text-ui-tag-red-icon z-[3]" }) }) });
                }
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime102.jsx)("div", { className: "relative z-[1] flex size-full items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime102.jsx)(RenderChildren, { isAnchor, placeholder, children }) }),
            /* @__PURE__ */ (0, import_jsx_runtime102.jsx)(DataGridRowErrorIndicator, { rowErrors }),
            showOverlay && /* @__PURE__ */ (0, import_jsx_runtime102.jsx)(
              "div",
              {
                ...overlayProps,
                "data-cell-overlay": "true",
                className: "absolute inset-0 z-[2] size-full"
              }
            )
          ]
        }
      );
    };
    RenderChildren = ({
      isAnchor,
      placeholder,
      children
    }) => {
      if (!isAnchor && placeholder) {
        return placeholder;
      }
      return children;
    };
  }
});

// src/components/data-grid/components/data-grid-boolean-cell.tsx
var import_ui61, import_react_hook_form9, import_jsx_runtime103, DataGridBooleanCell, Inner;
var init_data_grid_boolean_cell = __esm({
  "src/components/data-grid/components/data-grid-boolean-cell.tsx"() {
    "use strict";
    import_ui61 = require("@medusajs/ui");
    import_react_hook_form9 = require("react-hook-form");
    init_use_combined_refs();
    init_hooks3();
    init_data_grid_cell_container();
    import_jsx_runtime103 = require("react/jsx-runtime");
    DataGridBooleanCell = ({
      context,
      disabled
    }) => {
      const { field, control, renderProps } = useDataGridCell({
        context
      });
      const errorProps = useDataGridCellError({ context });
      const { container, input } = renderProps;
      return /* @__PURE__ */ (0, import_jsx_runtime103.jsx)(
        import_react_hook_form9.Controller,
        {
          control,
          name: field,
          render: ({ field: field2 }) => {
            return /* @__PURE__ */ (0, import_jsx_runtime103.jsx)(DataGridCellContainer, { ...container, ...errorProps, children: /* @__PURE__ */ (0, import_jsx_runtime103.jsx)(Inner, { field: field2, inputProps: input, disabled }) });
          }
        }
      );
    };
    Inner = ({
      field,
      inputProps,
      disabled
    }) => {
      const { ref, value, onBlur, name, disabled: fieldDisabled } = field;
      const {
        ref: inputRef,
        onBlur: onInputBlur,
        onChange,
        onFocus,
        ...attributes
      } = inputProps;
      const combinedRefs = useCombinedRefs(ref, inputRef);
      return /* @__PURE__ */ (0, import_jsx_runtime103.jsx)(
        import_ui61.Checkbox,
        {
          disabled: disabled || fieldDisabled,
          name,
          checked: value,
          onCheckedChange: (newValue) => onChange(newValue === true, value),
          onFocus,
          onBlur: () => {
            onBlur();
            onInputBlur();
          },
          ref: combinedRefs,
          tabIndex: -1,
          ...attributes
        }
      );
    };
  }
});

// src/lib/data/currencies.ts
function getCurrencySymbol(code) {
  return currencies[code.toUpperCase()].symbol_native;
}
var currencies;
var init_currencies2 = __esm({
  "src/lib/data/currencies.ts"() {
    "use strict";
    currencies = {
      USD: {
        code: "USD",
        name: "US Dollar",
        symbol_native: "$",
        decimal_digits: 2
      },
      CAD: {
        code: "CAD",
        name: "Canadian Dollar",
        symbol_native: "$",
        decimal_digits: 2
      },
      EUR: {
        code: "EUR",
        name: "Euro",
        symbol_native: "\u20AC",
        decimal_digits: 2
      },
      AED: {
        code: "AED",
        name: "United Arab Emirates Dirham",
        symbol_native: "\u062F.\u0625.\u200F",
        decimal_digits: 2
      },
      AFN: {
        code: "AFN",
        name: "Afghan Afghani",
        symbol_native: "\u060B",
        decimal_digits: 0
      },
      ALL: {
        code: "ALL",
        name: "Albanian Lek",
        symbol_native: "Lek",
        decimal_digits: 0
      },
      AMD: {
        code: "AMD",
        name: "Armenian Dram",
        symbol_native: "\u0564\u0580.",
        decimal_digits: 0
      },
      ARS: {
        code: "ARS",
        name: "Argentine Peso",
        symbol_native: "$",
        decimal_digits: 2
      },
      AUD: {
        code: "AUD",
        name: "Australian Dollar",
        symbol_native: "$",
        decimal_digits: 2
      },
      AZN: {
        code: "AZN",
        name: "Azerbaijani Manat",
        symbol_native: "\u043C\u0430\u043D.",
        decimal_digits: 2
      },
      BAM: {
        code: "BAM",
        name: "Bosnia-Herzegovina Convertible Mark",
        symbol_native: "KM",
        decimal_digits: 2
      },
      BDT: {
        code: "BDT",
        name: "Bangladeshi Taka",
        symbol_native: "\u09F3",
        decimal_digits: 2
      },
      BGN: {
        code: "BGN",
        name: "Bulgarian Lev",
        symbol_native: "\u043B\u0432.",
        decimal_digits: 2
      },
      BHD: {
        code: "BHD",
        name: "Bahraini Dinar",
        symbol_native: "\u062F.\u0628.\u200F",
        decimal_digits: 3
      },
      BIF: {
        code: "BIF",
        name: "Burundian Franc",
        symbol_native: "FBu",
        decimal_digits: 0
      },
      BND: {
        code: "BND",
        name: "Brunei Dollar",
        symbol_native: "$",
        decimal_digits: 2
      },
      BOB: {
        code: "BOB",
        name: "Bolivian Boliviano",
        symbol_native: "Bs",
        decimal_digits: 2
      },
      BRL: {
        code: "BRL",
        name: "Brazilian Real",
        symbol_native: "R$",
        decimal_digits: 2
      },
      BWP: {
        code: "BWP",
        name: "Botswanan Pula",
        symbol_native: "P",
        decimal_digits: 2
      },
      BYN: {
        code: "BYN",
        name: "Belarusian Ruble",
        symbol_native: "\u0440\u0443\u0431.",
        decimal_digits: 2
      },
      BZD: {
        code: "BZD",
        name: "Belize Dollar",
        symbol_native: "$",
        decimal_digits: 2
      },
      CDF: {
        code: "CDF",
        name: "Congolese Franc",
        symbol_native: "FrCD",
        decimal_digits: 2
      },
      CHF: {
        code: "CHF",
        name: "Swiss Franc",
        symbol_native: "CHF",
        decimal_digits: 2
      },
      CLP: {
        code: "CLP",
        name: "Chilean Peso",
        symbol_native: "$",
        decimal_digits: 0
      },
      CNY: {
        code: "CNY",
        name: "Chinese Yuan",
        symbol_native: "CN\xA5",
        decimal_digits: 2
      },
      COP: {
        code: "COP",
        name: "Colombian Peso",
        symbol_native: "$",
        decimal_digits: 0
      },
      CRC: {
        code: "CRC",
        name: "Costa Rican Col\xF3n",
        symbol_native: "\u20A1",
        decimal_digits: 0
      },
      CVE: {
        code: "CVE",
        name: "Cape Verdean Escudo",
        symbol_native: "CV$",
        decimal_digits: 2
      },
      CZK: {
        code: "CZK",
        name: "Czech Republic Koruna",
        symbol_native: "K\u010D",
        decimal_digits: 2
      },
      DJF: {
        code: "DJF",
        name: "Djiboutian Franc",
        symbol_native: "Fdj",
        decimal_digits: 0
      },
      DKK: {
        code: "DKK",
        name: "Danish Krone",
        symbol_native: "kr",
        decimal_digits: 2
      },
      DOP: {
        code: "DOP",
        name: "Dominican Peso",
        symbol_native: "RD$",
        decimal_digits: 2
      },
      DZD: {
        code: "DZD",
        name: "Algerian Dinar",
        symbol_native: "\u062F.\u062C.\u200F",
        decimal_digits: 2
      },
      EEK: {
        code: "EEK",
        name: "Estonian Kroon",
        symbol_native: "kr",
        decimal_digits: 2
      },
      EGP: {
        code: "EGP",
        name: "Egyptian Pound",
        symbol_native: "\u062C.\u0645.\u200F",
        decimal_digits: 2
      },
      ERN: {
        code: "ERN",
        name: "Eritrean Nakfa",
        symbol_native: "Nfk",
        decimal_digits: 2
      },
      ETB: {
        code: "ETB",
        name: "Ethiopian Birr",
        symbol_native: "Br",
        decimal_digits: 2
      },
      GBP: {
        code: "GBP",
        name: "British Pound Sterling",
        symbol_native: "\xA3",
        decimal_digits: 2
      },
      GEL: {
        code: "GEL",
        name: "Georgian Lari",
        symbol_native: "GEL",
        decimal_digits: 2
      },
      GHS: {
        code: "GHS",
        name: "Ghanaian Cedi",
        symbol_native: "GH\u20B5",
        decimal_digits: 2
      },
      GNF: {
        code: "GNF",
        name: "Guinean Franc",
        symbol_native: "FG",
        decimal_digits: 0
      },
      GTQ: {
        code: "GTQ",
        name: "Guatemalan Quetzal",
        symbol_native: "Q",
        decimal_digits: 2
      },
      HKD: {
        code: "HKD",
        name: "Hong Kong Dollar",
        symbol_native: "$",
        decimal_digits: 2
      },
      HNL: {
        code: "HNL",
        name: "Honduran Lempira",
        symbol_native: "L",
        decimal_digits: 2
      },
      HRK: {
        code: "HRK",
        name: "Croatian Kuna",
        symbol_native: "kn",
        decimal_digits: 2
      },
      HUF: {
        code: "HUF",
        name: "Hungarian Forint",
        symbol_native: "Ft",
        decimal_digits: 0
      },
      IDR: {
        code: "IDR",
        name: "Indonesian Rupiah",
        symbol_native: "Rp",
        decimal_digits: 0
      },
      ILS: {
        code: "ILS",
        name: "Israeli New Sheqel",
        symbol_native: "\u20AA",
        decimal_digits: 2
      },
      INR: {
        code: "INR",
        name: "Indian Rupee",
        symbol_native: "\u20B9",
        decimal_digits: 2
      },
      IQD: {
        code: "IQD",
        name: "Iraqi Dinar",
        symbol_native: "\u062F.\u0639.\u200F",
        decimal_digits: 0
      },
      IRR: {
        code: "IRR",
        name: "Iranian Rial",
        symbol_native: "\uFDFC",
        decimal_digits: 0
      },
      ISK: {
        code: "ISK",
        name: "Icelandic Kr\xF3na",
        symbol_native: "kr",
        decimal_digits: 0
      },
      JMD: {
        code: "JMD",
        name: "Jamaican Dollar",
        symbol_native: "$",
        decimal_digits: 2
      },
      JOD: {
        code: "JOD",
        name: "Jordanian Dinar",
        symbol_native: "\u062F.\u0623.\u200F",
        decimal_digits: 3
      },
      JPY: {
        code: "JPY",
        name: "Japanese Yen",
        symbol_native: "\uFFE5",
        decimal_digits: 0
      },
      KES: {
        code: "KES",
        name: "Kenyan Shilling",
        symbol_native: "Ksh",
        decimal_digits: 2
      },
      KHR: {
        code: "KHR",
        name: "Cambodian Riel",
        symbol_native: "\u17DB",
        decimal_digits: 2
      },
      KMF: {
        code: "KMF",
        name: "Comorian Franc",
        symbol_native: "FC",
        decimal_digits: 0
      },
      KRW: {
        code: "KRW",
        name: "South Korean Won",
        symbol_native: "\u20A9",
        decimal_digits: 0
      },
      KWD: {
        code: "KWD",
        name: "Kuwaiti Dinar",
        symbol_native: "\u062F.\u0643.\u200F",
        decimal_digits: 3
      },
      KZT: {
        code: "KZT",
        name: "Kazakhstani Tenge",
        symbol_native: "\u0442\u04A3\u0433.",
        decimal_digits: 2
      },
      LBP: {
        code: "LBP",
        name: "Lebanese Pound",
        symbol_native: "\u0644.\u0644.\u200F",
        decimal_digits: 0
      },
      LKR: {
        code: "LKR",
        name: "Sri Lankan Rupee",
        symbol_native: "SL Re",
        decimal_digits: 2
      },
      LTL: {
        code: "LTL",
        name: "Lithuanian Litas",
        symbol_native: "Lt",
        decimal_digits: 2
      },
      LVL: {
        code: "LVL",
        name: "Latvian Lats",
        symbol_native: "Ls",
        decimal_digits: 2
      },
      LYD: {
        code: "LYD",
        name: "Libyan Dinar",
        symbol_native: "\u062F.\u0644.\u200F",
        decimal_digits: 3
      },
      MAD: {
        code: "MAD",
        name: "Moroccan Dirham",
        symbol_native: "\u062F.\u0645.\u200F",
        decimal_digits: 2
      },
      MDL: {
        code: "MDL",
        name: "Moldovan Leu",
        symbol_native: "MDL",
        decimal_digits: 2
      },
      MGA: {
        code: "MGA",
        name: "Malagasy Ariary",
        symbol_native: "MGA",
        decimal_digits: 0
      },
      MKD: {
        code: "MKD",
        name: "Macedonian Denar",
        symbol_native: "MKD",
        decimal_digits: 2
      },
      MMK: {
        code: "MMK",
        name: "Myanma Kyat",
        symbol_native: "K",
        decimal_digits: 0
      },
      MNT: {
        code: "MNT",
        name: "Mongolian Tugrig",
        symbol_native: "\u20AE",
        decimal_digits: 0
      },
      MOP: {
        code: "MOP",
        name: "Macanese Pataca",
        symbol_native: "MOP$",
        decimal_digits: 2
      },
      MUR: {
        code: "MUR",
        name: "Mauritian Rupee",
        symbol_native: "MURs",
        decimal_digits: 0
      },
      MXN: {
        code: "MXN",
        name: "Mexican Peso",
        symbol_native: "$",
        decimal_digits: 2
      },
      MYR: {
        code: "MYR",
        name: "Malaysian Ringgit",
        symbol_native: "RM",
        decimal_digits: 2
      },
      MZN: {
        code: "MZN",
        name: "Mozambican Metical",
        symbol_native: "MTn",
        decimal_digits: 2
      },
      NAD: {
        code: "NAD",
        name: "Namibian Dollar",
        symbol_native: "N$",
        decimal_digits: 2
      },
      NGN: {
        code: "NGN",
        name: "Nigerian Naira",
        symbol_native: "\u20A6",
        decimal_digits: 2
      },
      NIO: {
        code: "NIO",
        name: "Nicaraguan C\xF3rdoba",
        symbol_native: "C$",
        decimal_digits: 2
      },
      NOK: {
        code: "NOK",
        name: "Norwegian Krone",
        symbol_native: "kr",
        decimal_digits: 2
      },
      NPR: {
        code: "NPR",
        name: "Nepalese Rupee",
        symbol_native: "\u0928\u0947\u0930\u0942",
        decimal_digits: 2
      },
      NZD: {
        code: "NZD",
        name: "New Zealand Dollar",
        symbol_native: "$",
        decimal_digits: 2
      },
      OMR: {
        code: "OMR",
        name: "Omani Rial",
        symbol_native: "\u0631.\u0639.\u200F",
        decimal_digits: 3
      },
      PAB: {
        code: "PAB",
        name: "Panamanian Balboa",
        symbol_native: "B/.",
        decimal_digits: 2
      },
      PEN: {
        code: "PEN",
        name: "Peruvian Nuevo Sol",
        symbol_native: "S/.",
        decimal_digits: 2
      },
      PHP: {
        code: "PHP",
        name: "Philippine Peso",
        symbol_native: "\u20B1",
        decimal_digits: 2
      },
      PKR: {
        code: "PKR",
        name: "Pakistani Rupee",
        symbol_native: "\u20A8",
        decimal_digits: 0
      },
      PLN: {
        code: "PLN",
        name: "Polish Zloty",
        symbol_native: "z\u0142",
        decimal_digits: 2
      },
      PYG: {
        code: "PYG",
        name: "Paraguayan Guarani",
        symbol_native: "\u20B2",
        decimal_digits: 0
      },
      QAR: {
        code: "QAR",
        name: "Qatari Rial",
        symbol_native: "\u0631.\u0642.\u200F",
        decimal_digits: 2
      },
      RON: {
        code: "RON",
        name: "Romanian Leu",
        symbol_native: "RON",
        decimal_digits: 2
      },
      RSD: {
        code: "RSD",
        name: "Serbian Dinar",
        symbol_native: "\u0434\u0438\u043D.",
        decimal_digits: 0
      },
      RUB: {
        code: "RUB",
        name: "Russian Ruble",
        symbol_native: "\u20BD.",
        decimal_digits: 2
      },
      RWF: {
        code: "RWF",
        name: "Rwandan Franc",
        symbol_native: "FR",
        decimal_digits: 0
      },
      SAR: {
        code: "SAR",
        name: "Saudi Riyal",
        symbol_native: "\u0631.\u0633.\u200F",
        decimal_digits: 2
      },
      SDG: {
        code: "SDG",
        name: "Sudanese Pound",
        symbol_native: "SDG",
        decimal_digits: 2
      },
      SEK: {
        code: "SEK",
        name: "Swedish Krona",
        symbol_native: "kr",
        decimal_digits: 2
      },
      SGD: {
        code: "SGD",
        name: "Singapore Dollar",
        symbol_native: "$",
        decimal_digits: 2
      },
      SOS: {
        code: "SOS",
        name: "Somali Shilling",
        symbol_native: "Ssh",
        decimal_digits: 0
      },
      SYP: {
        code: "SYP",
        name: "Syrian Pound",
        symbol_native: "\u0644.\u0633.\u200F",
        decimal_digits: 0
      },
      THB: {
        code: "THB",
        name: "Thai Baht",
        symbol_native: "\u0E3F",
        decimal_digits: 2
      },
      TND: {
        code: "TND",
        name: "Tunisian Dinar",
        symbol_native: "\u062F.\u062A.\u200F",
        decimal_digits: 3
      },
      TOP: {
        code: "TOP",
        name: "Tongan Pa\u02BBanga",
        symbol_native: "T$",
        decimal_digits: 2
      },
      TRY: {
        code: "TRY",
        name: "Turkish Lira",
        symbol_native: "TL",
        decimal_digits: 2
      },
      TTD: {
        code: "TTD",
        name: "Trinidad and Tobago Dollar",
        symbol_native: "$",
        decimal_digits: 2
      },
      TWD: {
        code: "TWD",
        name: "New Taiwan Dollar",
        symbol_native: "NT$",
        decimal_digits: 2
      },
      TZS: {
        code: "TZS",
        name: "Tanzanian Shilling",
        symbol_native: "TSh",
        decimal_digits: 0
      },
      UAH: {
        code: "UAH",
        name: "Ukrainian Hryvnia",
        symbol_native: "\u20B4",
        decimal_digits: 2
      },
      UGX: {
        code: "UGX",
        name: "Ugandan Shilling",
        symbol_native: "USh",
        decimal_digits: 0
      },
      UYU: {
        code: "UYU",
        name: "Uruguayan Peso",
        symbol_native: "$",
        decimal_digits: 2
      },
      UZS: {
        code: "UZS",
        name: "Uzbekistan Som",
        symbol_native: "UZS",
        decimal_digits: 0
      },
      VEF: {
        code: "VEF",
        name: "Venezuelan Bol\xEDvar",
        symbol_native: "Bs.F.",
        decimal_digits: 2
      },
      VND: {
        code: "VND",
        name: "Vietnamese Dong",
        symbol_native: "\u20AB",
        decimal_digits: 0
      },
      XAF: {
        code: "XAF",
        name: "CFA Franc BEAC",
        symbol_native: "FCFA",
        decimal_digits: 0
      },
      XOF: {
        code: "XOF",
        name: "CFA Franc BCEAO",
        symbol_native: "CFA",
        decimal_digits: 0
      },
      YER: {
        code: "YER",
        name: "Yemeni Rial",
        symbol_native: "\u0631.\u064A.\u200F",
        decimal_digits: 0
      },
      ZAR: {
        code: "ZAR",
        name: "South African Rand",
        symbol_native: "R",
        decimal_digits: 2
      },
      ZMK: {
        code: "ZMK",
        name: "Zambian Kwacha",
        symbol_native: "ZK",
        decimal_digits: 0
      },
      ZWL: {
        code: "ZWL",
        name: "Zimbabwean Dollar",
        symbol_native: "ZWL$",
        decimal_digits: 0
      }
    };
  }
});

// src/components/data-grid/components/data-grid-currency-cell.tsx
var import_react_currency_input_field, import_react_hook_form10, import_react85, import_jsx_runtime104, DataGridCurrencyCell, Inner2;
var init_data_grid_currency_cell = __esm({
  "src/components/data-grid/components/data-grid-currency-cell.tsx"() {
    "use strict";
    import_react_currency_input_field = __toESM(require("react-currency-input-field"));
    import_react_hook_form10 = require("react-hook-form");
    import_react85 = require("react");
    init_use_combined_refs();
    init_currencies2();
    init_hooks3();
    init_data_grid_cell_container();
    import_jsx_runtime104 = require("react/jsx-runtime");
    DataGridCurrencyCell = ({
      context,
      code
    }) => {
      const { field, control, renderProps } = useDataGridCell({
        context
      });
      const errorProps = useDataGridCellError({ context });
      const { container, input } = renderProps;
      const currency = currencies[code.toUpperCase()];
      return /* @__PURE__ */ (0, import_jsx_runtime104.jsx)(
        import_react_hook_form10.Controller,
        {
          control,
          name: field,
          render: ({ field: field2 }) => {
            return /* @__PURE__ */ (0, import_jsx_runtime104.jsx)(DataGridCellContainer, { ...container, ...errorProps, children: /* @__PURE__ */ (0, import_jsx_runtime104.jsx)(Inner2, { field: field2, inputProps: input, currencyInfo: currency }) });
          }
        }
      );
    };
    Inner2 = ({
      field,
      inputProps,
      currencyInfo
    }) => {
      const { value, onChange: _, onBlur, ref, ...rest } = field;
      const {
        ref: inputRef,
        onBlur: onInputBlur,
        onFocus,
        onChange,
        ...attributes
      } = inputProps;
      const formatter2 = (0, import_react85.useCallback)(
        (value2) => {
          const ensuredValue = typeof value2 === "number" ? value2.toString() : value2 || "";
          return (0, import_react_currency_input_field.formatValue)({
            value: ensuredValue,
            decimalScale: currencyInfo.decimal_digits,
            disableGroupSeparators: true,
            decimalSeparator: "."
          });
        },
        [currencyInfo]
      );
      const [localValue, setLocalValue] = (0, import_react85.useState)(value || "");
      const handleValueChange = (value2, _name, _values) => {
        if (!value2) {
          setLocalValue("");
          return;
        }
        setLocalValue(value2);
      };
      (0, import_react85.useEffect)(() => {
        let update = value;
        if (!isNaN(Number(value))) {
          update = formatter2(update);
        }
        setLocalValue(update);
      }, [value, formatter2]);
      const combinedRed = useCombinedRefs(inputRef, ref);
      return /* @__PURE__ */ (0, import_jsx_runtime104.jsxs)("div", { className: "relative flex size-full items-center", children: [
        /* @__PURE__ */ (0, import_jsx_runtime104.jsx)(
          "span",
          {
            className: "txt-compact-small text-ui-fg-muted pointer-events-none absolute left-0 w-fit min-w-4",
            "aria-hidden": true,
            children: currencyInfo.symbol_native
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime104.jsx)(
          import_react_currency_input_field.default,
          {
            ...rest,
            ...attributes,
            ref: combinedRed,
            className: "txt-compact-small w-full flex-1 cursor-default appearance-none bg-transparent pl-8 text-right outline-none",
            value: localValue || void 0,
            onValueChange: handleValueChange,
            formatValueOnBlur: true,
            onBlur: () => {
              onBlur();
              onInputBlur();
              onChange(localValue, value);
            },
            onFocus,
            decimalScale: currencyInfo.decimal_digits,
            decimalsLimit: currencyInfo.decimal_digits,
            autoComplete: "off",
            tabIndex: -1
          }
        )
      ] });
    };
  }
});

// src/components/data-grid/components/data-grid-number-cell.tsx
var import_ui62, import_react86, import_react_hook_form11, import_jsx_runtime105, DataGridNumberCell, Inner3;
var init_data_grid_number_cell = __esm({
  "src/components/data-grid/components/data-grid-number-cell.tsx"() {
    "use strict";
    import_ui62 = require("@medusajs/ui");
    import_react86 = require("react");
    import_react_hook_form11 = require("react-hook-form");
    init_use_combined_refs();
    init_hooks3();
    init_data_grid_cell_container();
    import_jsx_runtime105 = require("react/jsx-runtime");
    DataGridNumberCell = ({
      context,
      ...rest
    }) => {
      const { field, control, renderProps } = useDataGridCell({
        context
      });
      const errorProps = useDataGridCellError({ context });
      const { container, input } = renderProps;
      return /* @__PURE__ */ (0, import_jsx_runtime105.jsx)(
        import_react_hook_form11.Controller,
        {
          control,
          name: field,
          render: ({ field: field2 }) => {
            return /* @__PURE__ */ (0, import_jsx_runtime105.jsx)(DataGridCellContainer, { ...container, ...errorProps, children: /* @__PURE__ */ (0, import_jsx_runtime105.jsx)(Inner3, { field: field2, inputProps: input, ...rest }) });
          }
        }
      );
    };
    Inner3 = ({
      field,
      inputProps,
      ...props
    }) => {
      const { ref, value, onChange: _, onBlur, ...fieldProps } = field;
      const {
        ref: inputRef,
        onChange,
        onBlur: onInputBlur,
        onFocus,
        ...attributes
      } = inputProps;
      const [localValue, setLocalValue] = (0, import_react86.useState)(value);
      (0, import_react86.useEffect)(() => {
        setLocalValue(value);
      }, [value]);
      const combinedRefs = useCombinedRefs(inputRef, ref);
      return /* @__PURE__ */ (0, import_jsx_runtime105.jsx)("div", { className: "size-full", children: /* @__PURE__ */ (0, import_jsx_runtime105.jsx)(
        "input",
        {
          ref: combinedRefs,
          value: localValue,
          onChange: (e) => setLocalValue(e.target.value),
          onBlur: () => {
            onBlur();
            onInputBlur();
            onChange(localValue, value);
          },
          onFocus,
          type: "number",
          inputMode: "decimal",
          className: (0, import_ui62.clx)(
            "txt-compact-small size-full bg-transparent outline-none",
            "placeholder:text-ui-fg-muted"
          ),
          tabIndex: -1,
          ...props,
          ...fieldProps,
          ...attributes
        }
      ) });
    };
  }
});

// src/components/data-grid/components/data-grid-readonly-cell.tsx
var import_jsx_runtime106, DataGridReadonlyCell;
var init_data_grid_readonly_cell = __esm({
  "src/components/data-grid/components/data-grid-readonly-cell.tsx"() {
    "use strict";
    init_hooks3();
    init_data_grid_row_error_indicator();
    import_jsx_runtime106 = require("react/jsx-runtime");
    DataGridReadonlyCell = ({
      context,
      children
    }) => {
      const { rowErrors } = useDataGridCellError({ context });
      return /* @__PURE__ */ (0, import_jsx_runtime106.jsxs)("div", { className: "bg-ui-bg-subtle txt-compact-small text-ui-fg-subtle flex size-full cursor-not-allowed items-center justify-between overflow-hidden px-4 py-2.5 outline-none", children: [
        /* @__PURE__ */ (0, import_jsx_runtime106.jsx)("span", { className: "truncate", children }),
        /* @__PURE__ */ (0, import_jsx_runtime106.jsx)(DataGridRowErrorIndicator, { rowErrors })
      ] });
    };
  }
});

// src/hooks/use-command-history.tsx
var import_react87, useCommandHistory;
var init_use_command_history = __esm({
  "src/hooks/use-command-history.tsx"() {
    "use strict";
    import_react87 = require("react");
    useCommandHistory = (maxHistory = 20) => {
      const [past, setPast] = (0, import_react87.useState)([]);
      const [future, setFuture] = (0, import_react87.useState)([]);
      const canUndo = past.length > 0;
      const canRedo = future.length > 0;
      const undo = (0, import_react87.useCallback)(() => {
        if (!canUndo) {
          return;
        }
        const previous = past[past.length - 1];
        const newPast = past.slice(0, past.length - 1);
        previous.undo();
        setPast(newPast);
        setFuture([previous, ...future.slice(0, maxHistory - 1)]);
      }, [canUndo, future, past, maxHistory]);
      const redo = (0, import_react87.useCallback)(() => {
        if (!canRedo) {
          return;
        }
        const next = future[0];
        const newFuture = future.slice(1);
        next.redo();
        setPast([...past, next].slice(0, maxHistory - 1));
        setFuture(newFuture);
      }, [canRedo, future, past, maxHistory]);
      const execute = (0, import_react87.useCallback)(
        (command) => {
          command.execute();
          setPast((past2) => [...past2, command].slice(0, maxHistory - 1));
          setFuture([]);
        },
        [maxHistory]
      );
      return {
        undo,
        redo,
        execute,
        canUndo,
        canRedo
      };
    };
  }
});

// src/components/data-grid/components/data-grid-keyboard-shortcut-modal.tsx
var import_icons33, import_ui63, import_react88, import_react_i18next51, import_jsx_runtime107, useDataGridShortcuts, DataGridKeyboardShortcutModal;
var init_data_grid_keyboard_shortcut_modal = __esm({
  "src/components/data-grid/components/data-grid-keyboard-shortcut-modal.tsx"() {
    "use strict";
    import_icons33 = require("@medusajs/icons");
    import_ui63 = require("@medusajs/ui");
    init_dist16();
    import_react88 = require("react");
    import_react_i18next51 = require("react-i18next");
    import_jsx_runtime107 = require("react/jsx-runtime");
    useDataGridShortcuts = () => {
      const { t: t4 } = (0, import_react_i18next51.useTranslation)();
      const shortcuts = (0, import_react88.useMemo)(
        () => [
          {
            label: t4("dataGrid.shortcuts.commands.undo"),
            keys: {
              Mac: ["\u2318", "Z"],
              Windows: ["Ctrl", "Z"]
            }
          },
          {
            label: t4("dataGrid.shortcuts.commands.redo"),
            keys: {
              Mac: ["\u21E7", "\u2318", "Z"],
              Windows: ["Shift", "Ctrl", "Z"]
            }
          },
          {
            label: t4("dataGrid.shortcuts.commands.copy"),
            keys: {
              Mac: ["\u2318", "C"],
              Windows: ["Ctrl", "C"]
            }
          },
          {
            label: t4("dataGrid.shortcuts.commands.paste"),
            keys: {
              Mac: ["\u2318", "V"],
              Windows: ["Ctrl", "V"]
            }
          },
          {
            label: t4("dataGrid.shortcuts.commands.edit"),
            keys: {
              Mac: ["\u21B5"],
              Windows: ["Enter"]
            }
          },
          {
            label: t4("dataGrid.shortcuts.commands.delete"),
            keys: {
              Mac: ["\u232B"],
              Windows: ["Backspace"]
            }
          },
          {
            label: t4("dataGrid.shortcuts.commands.clear"),
            keys: {
              Mac: ["Space"],
              Windows: ["Space"]
            }
          },
          {
            label: t4("dataGrid.shortcuts.commands.moveUp"),
            keys: {
              Mac: ["\u2191"],
              Windows: ["\u2191"]
            }
          },
          {
            label: t4("dataGrid.shortcuts.commands.moveDown"),
            keys: {
              Mac: ["\u2193"],
              Windows: ["\u2193"]
            }
          },
          {
            label: t4("dataGrid.shortcuts.commands.moveLeft"),
            keys: {
              Mac: ["\u2190"],
              Windows: ["\u2190"]
            }
          },
          {
            label: t4("dataGrid.shortcuts.commands.moveRight"),
            keys: {
              Mac: ["\u2192"],
              Windows: ["\u2192"]
            }
          },
          {
            label: t4("dataGrid.shortcuts.commands.moveTop"),
            keys: {
              Mac: ["\u2318", "\u2191"],
              Windows: ["Ctrl", "\u2191"]
            }
          },
          {
            label: t4("dataGrid.shortcuts.commands.moveBottom"),
            keys: {
              Mac: ["\u2318", "\u2193"],
              Windows: ["Ctrl", "\u2193"]
            }
          },
          {
            label: t4("dataGrid.shortcuts.commands.selectDown"),
            keys: {
              Mac: ["\u21E7", "\u2193"],
              Windows: ["Shift", "\u2193"]
            }
          },
          {
            label: t4("dataGrid.shortcuts.commands.selectUp"),
            keys: {
              Mac: ["\u21E7", "\u2191"],
              Windows: ["Shift", "\u2191"]
            }
          },
          {
            label: t4("dataGrid.shortcuts.commands.selectColumnDown"),
            keys: {
              Mac: ["\u21E7", "\u2318", "\u2193"],
              Windows: ["Shift", "Ctrl", "\u2193"]
            }
          },
          {
            label: t4("dataGrid.shortcuts.commands.selectColumnUp"),
            keys: {
              Mac: ["\u21E7", "\u2318", "\u2191"],
              Windows: ["Shift", "Ctrl", "\u2191"]
            }
          },
          {
            label: t4("dataGrid.shortcuts.commands.focusToolbar"),
            keys: {
              Mac: ["\u2303", "\u2325", ","],
              Windows: ["Ctrl", "Alt", ","]
            }
          },
          {
            label: t4("dataGrid.shortcuts.commands.focusCancel"),
            keys: {
              Mac: ["\u2303", "\u2325", "."],
              Windows: ["Ctrl", "Alt", "."]
            }
          }
        ],
        [t4]
      );
      return shortcuts;
    };
    DataGridKeyboardShortcutModal = ({
      open,
      onOpenChange
    }) => {
      const { t: t4 } = (0, import_react_i18next51.useTranslation)();
      const [searchValue, onSearchValueChange] = (0, import_react88.useState)("");
      const shortcuts = useDataGridShortcuts();
      const searchResults = (0, import_react88.useMemo)(() => {
        return shortcuts.filter(
          (shortcut) => shortcut.label.toLowerCase().includes(searchValue.toLowerCase())
        );
      }, [searchValue, shortcuts]);
      return /* @__PURE__ */ (0, import_jsx_runtime107.jsxs)(Root, { open, onOpenChange, children: [
        /* @__PURE__ */ (0, import_jsx_runtime107.jsx)(Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime107.jsx)(import_ui63.Button, { size: "small", variant: "secondary", children: t4("dataGrid.shortcuts.label") }) }),
        /* @__PURE__ */ (0, import_jsx_runtime107.jsxs)(Portal2, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime107.jsx)(
            Overlay,
            {
              className: (0, import_ui63.clx)(
                "bg-ui-bg-overlay fixed inset-0",
                "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0"
              )
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime107.jsxs)(Content, { className: "bg-ui-bg-subtle shadow-elevation-modal fixed left-[50%] top-[50%] flex h-full max-h-[612px] w-full max-w-[560px] translate-x-[-50%] translate-y-[-50%] flex-col divide-y overflow-hidden rounded-lg outline-none", children: [
            /* @__PURE__ */ (0, import_jsx_runtime107.jsxs)("div", { className: "flex flex-col gap-y-3 px-6 py-4", children: [
              /* @__PURE__ */ (0, import_jsx_runtime107.jsxs)("div", { className: "flex items-center justify-between", children: [
                /* @__PURE__ */ (0, import_jsx_runtime107.jsxs)("div", { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime107.jsx)(Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime107.jsx)(import_ui63.Heading, { children: t4("app.menus.user.shortcuts") }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime107.jsx)(Description, { className: "sr-only" })
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime107.jsxs)("div", { className: "flex items-center gap-x-2", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime107.jsx)(import_ui63.Kbd, { children: "esc" }),
                  /* @__PURE__ */ (0, import_jsx_runtime107.jsx)(Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime107.jsx)(import_ui63.IconButton, { variant: "transparent", size: "small", children: /* @__PURE__ */ (0, import_jsx_runtime107.jsx)(import_icons33.XMark, {}) }) })
                ] })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime107.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime107.jsx)(
                import_ui63.Input,
                {
                  type: "search",
                  value: searchValue,
                  autoFocus: true,
                  onChange: (e) => onSearchValueChange(e.target.value)
                }
              ) })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime107.jsx)("div", { className: "flex flex-col divide-y overflow-y-auto", children: searchResults.map((shortcut, index2) => {
              return /* @__PURE__ */ (0, import_jsx_runtime107.jsxs)(
                "div",
                {
                  className: "text-ui-fg-subtle flex items-center justify-between px-6 py-3",
                  children: [
                    /* @__PURE__ */ (0, import_jsx_runtime107.jsx)(import_ui63.Text, { size: "small", children: shortcut.label }),
                    /* @__PURE__ */ (0, import_jsx_runtime107.jsx)("div", { className: "flex items-center gap-x-1", children: shortcut.keys.Mac?.map((key, index3) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime107.jsx)("div", { className: "flex items-center gap-x-1", children: /* @__PURE__ */ (0, import_jsx_runtime107.jsx)(import_ui63.Kbd, { children: key }) }, index3);
                    }) })
                  ]
                },
                index2
              );
            }) })
          ] })
        ] })
      ] });
    };
  }
});

// src/components/data-grid/components/data-grid-root.tsx
var import_icons34, import_ui64, import_react_table7, import_react_virtual, import_react89, import_react_i18next52, import_jsx_runtime108, ROW_HEIGHT, getCommonPinningStyles, DataGridRoot, DataGridHeader, DataGridCell, DataGridRow;
var init_data_grid_root = __esm({
  "src/components/data-grid/components/data-grid-root.tsx"() {
    "use strict";
    import_icons34 = require("@medusajs/icons");
    import_ui64 = require("@medusajs/ui");
    import_react_table7 = require("@tanstack/react-table");
    import_react_virtual = require("@tanstack/react-virtual");
    import_react89 = require("react");
    import_react_i18next52 = require("react-i18next");
    init_use_command_history();
    init_conditional_tooltip2();
    init_context2();
    init_hooks3();
    init_models();
    init_utils6();
    init_data_grid_keyboard_shortcut_modal();
    import_jsx_runtime108 = require("react/jsx-runtime");
    ROW_HEIGHT = 40;
    getCommonPinningStyles = (column) => {
      const isPinned = column.getIsPinned();
      const isDarkMode = document.documentElement.classList.contains("dark");
      const BORDER_COLOR = isDarkMode ? "rgb(50,50,53)" : "rgb(228,228,231)";
      return {
        position: isPinned ? "sticky" : "relative",
        width: column.getSize(),
        zIndex: isPinned ? 1 : 0,
        borderBottom: isPinned ? `1px solid ${BORDER_COLOR}` : void 0,
        borderRight: isPinned ? `1px solid ${BORDER_COLOR}` : void 0,
        left: isPinned === "left" ? `${column.getStart("left")}px` : void 0,
        right: isPinned === "right" ? `${column.getAfter("right")}px` : void 0
      };
    };
    DataGridRoot = ({
      data = [],
      columns,
      state,
      getSubRows,
      onEditingChange
    }) => {
      const containerRef = (0, import_react89.useRef)(null);
      const { redo, undo, execute } = useCommandHistory();
      const {
        register,
        control,
        getValues: getValues2,
        setValue,
        formState: { errors }
      } = state;
      const [trapActive, setTrapActive] = (0, import_react89.useState)(true);
      const [anchor, setAnchor] = (0, import_react89.useState)(null);
      const [rangeEnd, setRangeEnd] = (0, import_react89.useState)(null);
      const [dragEnd, setDragEnd] = (0, import_react89.useState)(null);
      const [isSelecting, setIsSelecting] = (0, import_react89.useState)(false);
      const [isDragging, setIsDragging] = (0, import_react89.useState)(false);
      const [isEditing, setIsEditing] = (0, import_react89.useState)(false);
      const [columnVisibility, setColumnVisibility] = (0, import_react89.useState)({});
      const [rowVisibility, setRowVisibility] = (0, import_react89.useState)({});
      const grid = (0, import_react_table7.useReactTable)({
        data,
        columns,
        initialState: {
          columnPinning: {
            left: [columns[0].id]
          }
        },
        state: {
          columnVisibility
        },
        onColumnVisibilityChange: setColumnVisibility,
        getSubRows,
        getCoreRowModel: (0, import_react_table7.getCoreRowModel)(),
        defaultColumn: {
          size: 200,
          maxSize: 400
        }
      });
      const { flatRows } = grid.getRowModel();
      const flatColumns = grid.getAllFlatColumns();
      const visibleRows = (0, import_react89.useMemo)(
        () => flatRows.filter((_, index2) => rowVisibility?.[index2] !== false),
        [flatRows, rowVisibility]
      );
      const visibleColumns = grid.getVisibleLeafColumns();
      const rowVirtualizer = (0, import_react_virtual.useVirtualizer)({
        count: visibleRows.length,
        estimateSize: () => ROW_HEIGHT,
        getScrollElement: () => containerRef.current,
        overscan: 5,
        rangeExtractor: (range) => {
          const toRender = new Set(
            Array.from(
              { length: range.endIndex - range.startIndex + 1 },
              (_, i) => range.startIndex + i
            )
          );
          if (anchor && visibleRows[anchor.row]) {
            toRender.add(anchor.row);
          }
          if (rangeEnd && visibleRows[rangeEnd.row]) {
            toRender.add(rangeEnd.row);
          }
          return Array.from(toRender).sort((a, b) => a - b);
        }
      });
      const virtualRows = rowVirtualizer.getVirtualItems();
      const columnVirtualizer = (0, import_react_virtual.useVirtualizer)({
        count: visibleColumns.length,
        estimateSize: (index2) => visibleColumns[index2].getSize(),
        getScrollElement: () => containerRef.current,
        horizontal: true,
        overscan: 3,
        rangeExtractor: (range) => {
          const startIndex = range.startIndex;
          const endIndex = range.endIndex;
          const toRender = new Set(
            Array.from(
              { length: endIndex - startIndex + 1 },
              (_, i) => startIndex + i
            )
          );
          if (anchor && visibleColumns[anchor.col]) {
            toRender.add(anchor.col);
          }
          if (rangeEnd && visibleColumns[rangeEnd.col]) {
            toRender.add(rangeEnd.col);
          }
          toRender.add(0);
          return Array.from(toRender).sort((a, b) => a - b);
        }
      });
      const virtualColumns = columnVirtualizer.getVirtualItems();
      let virtualPaddingLeft;
      let virtualPaddingRight;
      if (columnVirtualizer && virtualColumns?.length) {
        virtualPaddingLeft = virtualColumns[0]?.start ?? 0;
        virtualPaddingRight = columnVirtualizer.getTotalSize() - (virtualColumns[virtualColumns.length - 1]?.end ?? 0);
      }
      const matrix = (0, import_react89.useMemo)(
        () => new DataGridMatrix(flatRows, columns),
        [flatRows, columns]
      );
      const queryTool = useDataGridQueryTool(containerRef);
      const setSingleRange = (0, import_react89.useCallback)(
        (coordinates) => {
          setAnchor(coordinates);
          setRangeEnd(coordinates);
        },
        []
      );
      const { errorCount, isHighlighted, toggleErrorHighlighting } = useDataGridErrorHighlighting(matrix, grid, errors);
      const handleToggleErrorHighlighting = (0, import_react89.useCallback)(() => {
        toggleErrorHighlighting(
          rowVisibility,
          columnVisibility,
          setRowVisibility,
          setColumnVisibility
        );
      }, [toggleErrorHighlighting, rowVisibility, columnVisibility]);
      const {
        columnOptions,
        handleToggleColumn,
        handleResetColumns,
        isDisabled: isColumsDisabled
      } = useDataGridColumnVisibility(grid, matrix);
      const handleToggleColumnVisibility = (0, import_react89.useCallback)(
        (index2) => {
          return handleToggleColumn(index2);
        },
        [handleToggleColumn]
      );
      const { navigateToField, scrollToCoordinates } = useDataGridNavigation({
        matrix,
        queryTool,
        anchor,
        columnVirtualizer,
        rowVirtualizer,
        flatColumns,
        setColumnVisibility,
        setSingleRange,
        visibleColumns,
        visibleRows
      });
      const { createSnapshot, restoreSnapshot } = useDataGridCellSnapshot({
        matrix,
        form: state
      });
      const onEditingChangeHandler = (0, import_react89.useCallback)(
        (value) => {
          if (onEditingChange) {
            onEditingChange(value);
          }
          if (value) {
            createSnapshot(anchor);
          }
          setIsEditing(value);
        },
        [anchor, createSnapshot, onEditingChange]
      );
      const { getSelectionValues, setSelectionValues } = useDataGridFormHandlers({
        matrix,
        form: state,
        anchor
      });
      const { handleKeyDownEvent, handleSpecialFocusKeys } = useDataGridKeydownEvent({
        containerRef,
        matrix,
        queryTool,
        anchor,
        rangeEnd,
        isEditing,
        setTrapActive,
        setRangeEnd,
        getSelectionValues,
        getValues: getValues2,
        setSelectionValues,
        onEditingChangeHandler,
        restoreSnapshot,
        setSingleRange,
        scrollToCoordinates,
        execute,
        undo,
        redo,
        setValue
      });
      const { handleMouseUpEvent } = useDataGridMouseUpEvent({
        matrix,
        anchor,
        dragEnd,
        setDragEnd,
        isDragging,
        setIsDragging,
        setRangeEnd,
        setIsSelecting,
        getSelectionValues,
        setSelectionValues,
        execute
      });
      const { handleCopyEvent, handlePasteEvent } = useDataGridClipboardEvents({
        matrix,
        isEditing,
        anchor,
        rangeEnd,
        getSelectionValues,
        setSelectionValues,
        execute
      });
      const {
        getWrapperFocusHandler,
        getInputChangeHandler,
        getOverlayMouseDownHandler,
        getWrapperMouseOverHandler,
        getIsCellDragSelected,
        getIsCellSelected,
        onDragToFillStart
      } = useDataGridCellHandlers({
        matrix,
        anchor,
        rangeEnd,
        setRangeEnd,
        isDragging,
        setIsDragging,
        isSelecting,
        setIsSelecting,
        setSingleRange,
        dragEnd,
        setDragEnd,
        setValue,
        execute
      });
      const { getCellErrorMetadata, getCellMetadata } = useDataGridCellMetadata({
        matrix
      });
      (0, import_react89.useEffect)(() => {
        if (!trapActive) {
          return;
        }
        window.addEventListener("keydown", handleKeyDownEvent);
        window.addEventListener("mouseup", handleMouseUpEvent);
        window.addEventListener("copy", handleCopyEvent);
        window.addEventListener("paste", handlePasteEvent);
        return () => {
          window.removeEventListener("keydown", handleKeyDownEvent);
          window.removeEventListener("mouseup", handleMouseUpEvent);
          window.removeEventListener("copy", handleCopyEvent);
          window.removeEventListener("paste", handlePasteEvent);
        };
      }, [
        trapActive,
        handleKeyDownEvent,
        handleMouseUpEvent,
        handleCopyEvent,
        handlePasteEvent
      ]);
      (0, import_react89.useEffect)(() => {
        const specialFocusHandler = (e) => {
          if (isSpecialFocusKey(e)) {
            handleSpecialFocusKeys(e);
            return;
          }
        };
        window.addEventListener("keydown", specialFocusHandler);
        return () => {
          window.removeEventListener("keydown", specialFocusHandler);
        };
      }, [handleSpecialFocusKeys]);
      const handleHeaderInteractionChange = (0, import_react89.useCallback)((isActive) => {
        if (isActive) {
          setTrapActive(false);
        }
      }, []);
      (0, import_react89.useEffect)(() => {
        if (!anchor) {
          return;
        }
        if (rangeEnd) {
          return;
        }
        setRangeEnd(anchor);
      }, [anchor, rangeEnd]);
      (0, import_react89.useEffect)(() => {
        if (!anchor && matrix) {
          const coords = matrix.getFirstNavigableCell();
          if (coords) {
            setSingleRange(coords);
          }
        }
      }, [anchor, matrix, setSingleRange]);
      const values = (0, import_react89.useMemo)(
        () => ({
          anchor,
          control,
          trapActive,
          errors,
          setTrapActive,
          setIsSelecting,
          setIsEditing: onEditingChangeHandler,
          setSingleRange,
          setRangeEnd,
          getWrapperFocusHandler,
          getInputChangeHandler,
          getOverlayMouseDownHandler,
          getWrapperMouseOverHandler,
          register,
          getIsCellSelected,
          getIsCellDragSelected,
          getCellMetadata,
          getCellErrorMetadata,
          navigateToField
        }),
        [
          anchor,
          control,
          trapActive,
          errors,
          setTrapActive,
          setIsSelecting,
          onEditingChangeHandler,
          setSingleRange,
          setRangeEnd,
          getWrapperFocusHandler,
          getInputChangeHandler,
          getOverlayMouseDownHandler,
          getWrapperMouseOverHandler,
          register,
          getIsCellSelected,
          getIsCellDragSelected,
          getCellMetadata,
          getCellErrorMetadata,
          navigateToField
        ]
      );
      const handleRestoreGridFocus = (0, import_react89.useCallback)(() => {
        if (anchor && !trapActive) {
          setTrapActive(true);
          setSingleRange(anchor);
          scrollToCoordinates(anchor, "both");
          requestAnimationFrame(() => {
            queryTool?.getContainer(anchor)?.focus();
          });
        }
      }, [anchor, trapActive, queryTool]);
      return /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(DataGridContext.Provider, { value: values, children: /* @__PURE__ */ (0, import_jsx_runtime108.jsxs)("div", { className: "bg-ui-bg-subtle flex size-full flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(
          DataGridHeader,
          {
            columnOptions,
            isDisabled: isColumsDisabled,
            onToggleColumn: handleToggleColumnVisibility,
            errorCount,
            onToggleErrorHighlighting: handleToggleErrorHighlighting,
            onResetColumns: handleResetColumns,
            isHighlighted,
            onHeaderInteractionChange: handleHeaderInteractionChange
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime108.jsx)("div", { className: "size-full overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(
          "div",
          {
            ref: containerRef,
            autoFocus: true,
            tabIndex: 0,
            className: "relative h-full select-none overflow-auto outline-none",
            onFocus: handleRestoreGridFocus,
            onClick: handleRestoreGridFocus,
            "data-container": true,
            role: "application",
            children: /* @__PURE__ */ (0, import_jsx_runtime108.jsxs)("div", { role: "grid", className: "text-ui-fg-subtle grid", children: [
              /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(
                "div",
                {
                  role: "rowgroup",
                  className: "txt-compact-small-plus bg-ui-bg-subtle sticky top-0 z-[1] grid",
                  children: grid.getHeaderGroups().map((headerGroup) => /* @__PURE__ */ (0, import_jsx_runtime108.jsxs)(
                    "div",
                    {
                      role: "row",
                      className: "flex h-10 w-full",
                      children: [
                        virtualPaddingLeft ? /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(
                          "div",
                          {
                            role: "presentation",
                            style: { display: "flex", width: virtualPaddingLeft }
                          }
                        ) : null,
                        virtualColumns.reduce((acc, vc, index2, array17) => {
                          const header = headerGroup.headers[vc.index];
                          const previousVC = array17[index2 - 1];
                          if (previousVC && vc.index !== previousVC.index + 1) {
                            acc.push(
                              /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(
                                "div",
                                {
                                  role: "presentation",
                                  style: {
                                    display: "flex",
                                    width: `${vc.start - previousVC.end}px`
                                  }
                                },
                                `padding-${previousVC.index}-${vc.index}`
                              )
                            );
                          }
                          acc.push(
                            /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(
                              "div",
                              {
                                role: "columnheader",
                                "data-column-index": vc.index,
                                style: {
                                  width: header.getSize(),
                                  ...getCommonPinningStyles(header.column)
                                },
                                className: "bg-ui-bg-base txt-compact-small-plus flex items-center border-b border-r px-4 py-2.5",
                                children: header.isPlaceholder ? null : (0, import_react_table7.flexRender)(
                                  header.column.columnDef.header,
                                  header.getContext()
                                )
                              },
                              header.id
                            )
                          );
                          return acc;
                        }, []),
                        virtualPaddingRight ? /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(
                          "div",
                          {
                            role: "presentation",
                            style: {
                              display: "flex",
                              width: virtualPaddingRight
                            }
                          }
                        ) : null
                      ]
                    },
                    headerGroup.id
                  ))
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(
                "div",
                {
                  role: "rowgroup",
                  className: "relative grid",
                  style: {
                    height: `${rowVirtualizer.getTotalSize()}px`
                  },
                  children: virtualRows.map((virtualRow) => {
                    const row = visibleRows[virtualRow.index];
                    const rowIndex = flatRows.findIndex((r) => r.id === row.id);
                    return /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(
                      DataGridRow,
                      {
                        row,
                        rowIndex,
                        virtualRow,
                        flatColumns,
                        virtualColumns,
                        anchor,
                        virtualPaddingLeft,
                        virtualPaddingRight,
                        onDragToFillStart
                      },
                      row.id
                    );
                  })
                }
              )
            ] })
          }
        ) })
      ] }) });
    };
    DataGridHeader = ({
      columnOptions,
      isDisabled,
      onToggleColumn,
      onResetColumns,
      isHighlighted,
      errorCount,
      onToggleErrorHighlighting,
      onHeaderInteractionChange
    }) => {
      const [shortcutsOpen, setShortcutsOpen] = (0, import_react89.useState)(false);
      const [columnsOpen, setColumnsOpen] = (0, import_react89.useState)(false);
      const { t: t4 } = (0, import_react_i18next52.useTranslation)();
      const hasChanged = columnOptions.some((column) => !column.checked);
      const handleShortcutsOpenChange = (value) => {
        onHeaderInteractionChange(value);
        setShortcutsOpen(value);
      };
      const handleColumnsOpenChange = (value) => {
        onHeaderInteractionChange(value);
        setColumnsOpen(value);
      };
      return /* @__PURE__ */ (0, import_jsx_runtime108.jsxs)("div", { className: "bg-ui-bg-base flex items-center justify-between border-b p-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime108.jsxs)("div", { className: "flex items-center gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime108.jsxs)(import_ui64.DropdownMenu, { open: columnsOpen, onOpenChange: handleColumnsOpenChange, children: [
            /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(
              ConditionalTooltip,
              {
                showTooltip: isDisabled,
                content: t4("dataGrid.columns.disabled"),
                children: /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(import_ui64.DropdownMenu.Trigger, { asChild: true, disabled: isDisabled, children: /* @__PURE__ */ (0, import_jsx_runtime108.jsxs)(import_ui64.Button, { size: "small", variant: "secondary", children: [
                  hasChanged ? /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(import_icons34.AdjustmentsDone, {}) : /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(import_icons34.Adjustments, {}),
                  t4("dataGrid.columns.view")
                ] }) })
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(import_ui64.DropdownMenu.Content, { children: columnOptions.map((column, index2) => {
              const { checked, disabled, id: id2, name } = column;
              if (disabled) {
                return null;
              }
              return /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(
                import_ui64.DropdownMenu.CheckboxItem,
                {
                  checked,
                  onCheckedChange: onToggleColumn(index2),
                  onSelect: (e) => e.preventDefault(),
                  children: name
                },
                id2
              );
            }) })
          ] }),
          hasChanged && /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(
            import_ui64.Button,
            {
              size: "small",
              variant: "transparent",
              type: "button",
              onClick: onResetColumns,
              className: "text-ui-fg-muted hover:text-ui-fg-subtle",
              "data-id": "reset-columns",
              children: t4("dataGrid.columns.resetToDefault")
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime108.jsxs)("div", { className: "flex items-center gap-x-2", children: [
          errorCount > 0 && /* @__PURE__ */ (0, import_jsx_runtime108.jsxs)(
            import_ui64.Button,
            {
              size: "small",
              variant: "secondary",
              type: "button",
              onClick: onToggleErrorHighlighting,
              className: (0, import_ui64.clx)({
                "bg-ui-button-neutral-pressed": isHighlighted
              }),
              children: [
                /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(import_icons34.ExclamationCircle, { className: "text-ui-fg-subtle" }),
                /* @__PURE__ */ (0, import_jsx_runtime108.jsx)("span", { children: t4("dataGrid.errors.count", {
                  count: errorCount
                }) })
              ]
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(
            DataGridKeyboardShortcutModal,
            {
              open: shortcutsOpen,
              onOpenChange: handleShortcutsOpenChange
            }
          )
        ] })
      ] });
    };
    DataGridCell = ({
      cell,
      columnIndex,
      rowIndex,
      anchor,
      onDragToFillStart
    }) => {
      const coords = {
        row: rowIndex,
        col: columnIndex
      };
      const isAnchor = isCellMatch(coords, anchor);
      return /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(
        "div",
        {
          role: "gridcell",
          "aria-rowindex": rowIndex,
          "aria-colindex": columnIndex,
          style: {
            width: cell.column.getSize(),
            ...getCommonPinningStyles(cell.column)
          },
          "data-row-index": rowIndex,
          "data-column-index": columnIndex,
          className: (0, import_ui64.clx)(
            "relative flex items-center border-b border-r p-0 outline-none"
          ),
          tabIndex: -1,
          children: /* @__PURE__ */ (0, import_jsx_runtime108.jsxs)("div", { className: "relative h-full w-full", children: [
            (0, import_react_table7.flexRender)(cell.column.columnDef.cell, {
              ...cell.getContext(),
              columnIndex,
              rowIndex
            }),
            isAnchor && /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(
              "div",
              {
                onMouseDown: onDragToFillStart,
                className: "bg-ui-fg-interactive absolute bottom-0 right-0 z-[3] size-1.5 cursor-ns-resize"
              }
            )
          ] })
        }
      );
    };
    DataGridRow = ({
      row,
      rowIndex,
      virtualRow,
      virtualPaddingLeft,
      virtualPaddingRight,
      virtualColumns,
      flatColumns,
      anchor,
      onDragToFillStart
    }) => {
      const visibleCells = row.getVisibleCells();
      return /* @__PURE__ */ (0, import_jsx_runtime108.jsxs)(
        "div",
        {
          role: "row",
          "aria-rowindex": virtualRow.index,
          style: {
            transform: `translateY(${virtualRow.start}px)`
          },
          className: "bg-ui-bg-subtle txt-compact-small absolute flex h-10 w-full",
          children: [
            virtualPaddingLeft ? /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(
              "div",
              {
                role: "presentation",
                style: { display: "flex", width: virtualPaddingLeft }
              }
            ) : null,
            virtualColumns.reduce((acc, vc, index2, array17) => {
              const cell = visibleCells[vc.index];
              const column = cell.column;
              const columnIndex = flatColumns.findIndex((c) => c.id === column.id);
              const previousVC = array17[index2 - 1];
              if (previousVC && vc.index !== previousVC.index + 1) {
                acc.push(
                  /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(
                    "div",
                    {
                      role: "presentation",
                      style: {
                        display: "flex",
                        width: `${vc.start - previousVC.end}px`
                      }
                    },
                    `padding-${previousVC.index}-${vc.index}`
                  )
                );
              }
              acc.push(
                /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(
                  DataGridCell,
                  {
                    cell,
                    columnIndex,
                    rowIndex,
                    anchor,
                    onDragToFillStart
                  },
                  cell.id
                )
              );
              return acc;
            }, []),
            virtualPaddingRight ? /* @__PURE__ */ (0, import_jsx_runtime108.jsx)(
              "div",
              {
                role: "presentation",
                style: { display: "flex", width: virtualPaddingRight }
              }
            ) : null
          ]
        }
      );
    };
  }
});

// src/components/data-grid/components/data-grid-skeleton.tsx
var import_jsx_runtime109, DataGridSkeleton;
var init_data_grid_skeleton = __esm({
  "src/components/data-grid/components/data-grid-skeleton.tsx"() {
    "use strict";
    init_skeleton2();
    import_jsx_runtime109 = require("react/jsx-runtime");
    DataGridSkeleton = ({
      columns,
      rows: rowCount = 10
    }) => {
      const rows = Array.from({ length: rowCount }, (_, i) => i);
      const colCount = columns.length;
      return /* @__PURE__ */ (0, import_jsx_runtime109.jsxs)("div", { className: "bg-ui-bg-subtle size-full", children: [
        /* @__PURE__ */ (0, import_jsx_runtime109.jsx)("div", { className: "bg-ui-bg-base border-b p-4", children: /* @__PURE__ */ (0, import_jsx_runtime109.jsx)("div", { className: "bg-ui-button-neutral h-7 w-[116px] animate-pulse rounded-md" }) }),
        /* @__PURE__ */ (0, import_jsx_runtime109.jsxs)("div", { className: "bg-ui-bg-subtle size-full overflow-auto", children: [
          /* @__PURE__ */ (0, import_jsx_runtime109.jsx)(
            "div",
            {
              className: "grid",
              style: {
                gridTemplateColumns: `repeat(${colCount}, 1fr)`
              },
              children: columns.map((_col, i) => {
                return /* @__PURE__ */ (0, import_jsx_runtime109.jsx)(
                  "div",
                  {
                    className: "bg-ui-bg-base flex h-10 w-[200px] items-center border-b border-r px-4 py-2.5 last:border-r-0",
                    children: /* @__PURE__ */ (0, import_jsx_runtime109.jsx)(Skeleton, { className: "h-[14px] w-[164px]" })
                  },
                  i
                );
              })
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime109.jsx)("div", { children: rows.map((_, j) => /* @__PURE__ */ (0, import_jsx_runtime109.jsx)(
            "div",
            {
              className: "grid",
              style: { gridTemplateColumns: `repeat(${colCount}, 1fr)` },
              children: columns.map((_col, k) => {
                return /* @__PURE__ */ (0, import_jsx_runtime109.jsx)(
                  "div",
                  {
                    className: "bg-ui-bg-base flex h-10 w-[200px] items-center border-b border-r px-4 py-2.5 last:border-r-0",
                    children: /* @__PURE__ */ (0, import_jsx_runtime109.jsx)(Skeleton, { className: "h-[14px] w-[164px]" })
                  },
                  k
                );
              })
            },
            j
          )) })
        ] })
      ] });
    };
  }
});

// src/components/data-grid/components/data-grid-text-cell.tsx
var import_ui65, import_react90, import_react_hook_form12, import_jsx_runtime110, DataGridTextCell, Inner4;
var init_data_grid_text_cell = __esm({
  "src/components/data-grid/components/data-grid-text-cell.tsx"() {
    "use strict";
    import_ui65 = require("@medusajs/ui");
    import_react90 = require("react");
    import_react_hook_form12 = require("react-hook-form");
    init_use_combined_refs();
    init_hooks3();
    init_data_grid_cell_container();
    import_jsx_runtime110 = require("react/jsx-runtime");
    DataGridTextCell = ({
      context
    }) => {
      const { field, control, renderProps } = useDataGridCell({
        context
      });
      const errorProps = useDataGridCellError({ context });
      const { container, input } = renderProps;
      return /* @__PURE__ */ (0, import_jsx_runtime110.jsx)(
        import_react_hook_form12.Controller,
        {
          control,
          name: field,
          render: ({ field: field2 }) => {
            return /* @__PURE__ */ (0, import_jsx_runtime110.jsx)(DataGridCellContainer, { ...container, ...errorProps, children: /* @__PURE__ */ (0, import_jsx_runtime110.jsx)(Inner4, { field: field2, inputProps: input }) });
          }
        }
      );
    };
    Inner4 = ({
      field,
      inputProps
    }) => {
      const { onChange: _, onBlur, ref, value, ...rest } = field;
      const { ref: inputRef, onBlur: onInputBlur, onChange, ...input } = inputProps;
      const [localValue, setLocalValue] = (0, import_react90.useState)(value);
      (0, import_react90.useEffect)(() => {
        setLocalValue(value);
      }, [value]);
      const combinedRefs = useCombinedRefs(inputRef, ref);
      return /* @__PURE__ */ (0, import_jsx_runtime110.jsx)(
        "input",
        {
          className: (0, import_ui65.clx)(
            "txt-compact-small text-ui-fg-subtle flex size-full cursor-pointer items-center justify-center bg-transparent outline-none",
            "focus:cursor-text"
          ),
          autoComplete: "off",
          tabIndex: -1,
          value: localValue,
          onChange: (e) => setLocalValue(e.target.value),
          ref: combinedRefs,
          onBlur: () => {
            onBlur();
            onInputBlur();
            onChange(localValue, value);
          },
          ...input,
          ...rest
        }
      );
    };
  }
});

// src/components/data-grid/components/index.ts
var init_components = __esm({
  "src/components/data-grid/components/index.ts"() {
    "use strict";
    init_data_grid_boolean_cell();
    init_data_grid_currency_cell();
    init_data_grid_number_cell();
    init_data_grid_readonly_cell();
    init_data_grid_root();
    init_data_grid_skeleton();
    init_data_grid_text_cell();
  }
});

// src/components/data-grid/data-grid.tsx
var import_jsx_runtime111, _DataGrid, DataGrid;
var init_data_grid = __esm({
  "src/components/data-grid/data-grid.tsx"() {
    "use strict";
    init_components();
    import_jsx_runtime111 = require("react/jsx-runtime");
    _DataGrid = ({
      isLoading,
      ...props
    }) => {
      return isLoading ? /* @__PURE__ */ (0, import_jsx_runtime111.jsx)(
        DataGridSkeleton,
        {
          columns: props.columns,
          rows: props.data?.length && props.data.length > 0 ? props.data.length : 10
        }
      ) : /* @__PURE__ */ (0, import_jsx_runtime111.jsx)(DataGridRoot, { ...props });
    };
    DataGrid = Object.assign(_DataGrid, {
      BooleanCell: DataGridBooleanCell,
      TextCell: DataGridTextCell,
      NumberCell: DataGridNumberCell,
      CurrencyCell: DataGridCurrencyCell,
      ReadonlyCell: DataGridReadonlyCell
    });
  }
});

// src/components/data-grid/helpers/create-data-grid-column-helper.ts
function createDataGridHelper() {
  const columnHelper83 = (0, import_react_table8.createColumnHelper)();
  return {
    column: ({
      id: id2,
      name,
      header,
      cell,
      disableHiding = false,
      field,
      type
    }) => columnHelper83.display({
      id: id2,
      header,
      cell,
      enableHiding: !disableHiding,
      meta: {
        name,
        field,
        type
      }
    })
  };
}
var import_react_table8;
var init_create_data_grid_column_helper = __esm({
  "src/components/data-grid/helpers/create-data-grid-column-helper.ts"() {
    "use strict";
    import_react_table8 = require("@tanstack/react-table");
  }
});

// src/components/common/tax-badge/tax-badge.tsx
var import_icons35, import_ui66, import_react_i18next53, import_jsx_runtime112, IncludesTaxTooltip;
var init_tax_badge = __esm({
  "src/components/common/tax-badge/tax-badge.tsx"() {
    "use strict";
    import_icons35 = require("@medusajs/icons");
    import_ui66 = require("@medusajs/ui");
    import_react_i18next53 = require("react-i18next");
    import_jsx_runtime112 = require("react/jsx-runtime");
    IncludesTaxTooltip = ({
      includesTax
    }) => {
      const { t: t4 } = (0, import_react_i18next53.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime112.jsx)(
        import_ui66.Tooltip,
        {
          maxWidth: 999,
          content: includesTax ? t4("general.includesTaxTooltip") : t4("general.excludesTaxTooltip"),
          children: /* @__PURE__ */ (0, import_jsx_runtime112.jsx)(
            import_icons35.BuildingTax,
            {
              className: (0, import_ui66.clx)("shrink-0", { "text-ui-fg-muted": !includesTax })
            }
          )
        }
      );
    };
  }
});

// src/components/data-grid/helpers/create-data-grid-price-columns.tsx
var import_jsx_runtime113, createDataGridPriceColumns;
var init_create_data_grid_price_columns = __esm({
  "src/components/data-grid/helpers/create-data-grid-price-columns.tsx"() {
    "use strict";
    init_tax_badge();
    init_data_grid_currency_cell();
    init_data_grid_readonly_cell();
    init_create_data_grid_column_helper();
    import_jsx_runtime113 = require("react/jsx-runtime");
    createDataGridPriceColumns = ({
      currencies: currencies2,
      regions,
      pricePreferences,
      isReadyOnly,
      getFieldName,
      t: t4
    }) => {
      const columnHelper83 = createDataGridHelper();
      return [
        ...currencies2?.map((currency) => {
          const preference = pricePreferences?.find(
            (p) => p.attribute === "currency_code" && p.value === currency
          );
          const translatedCurrencyName = t4("fields.priceTemplate", {
            regionOrCurrency: currency.toUpperCase()
          });
          return columnHelper83.column({
            id: `currency_prices.${currency}`,
            name: t4("fields.priceTemplate", {
              regionOrCurrency: currency.toUpperCase()
            }),
            field: (context) => {
              const isReadyOnlyValue = isReadyOnly?.(context);
              if (isReadyOnlyValue) {
                return null;
              }
              return getFieldName(context, currency);
            },
            type: "number",
            header: () => /* @__PURE__ */ (0, import_jsx_runtime113.jsxs)("div", { className: "flex w-full items-center justify-between gap-3", children: [
              /* @__PURE__ */ (0, import_jsx_runtime113.jsx)("span", { className: "truncate", title: translatedCurrencyName, children: translatedCurrencyName }),
              /* @__PURE__ */ (0, import_jsx_runtime113.jsx)(IncludesTaxTooltip, { includesTax: preference?.is_tax_inclusive })
            ] }),
            cell: (context) => {
              if (isReadyOnly?.(context)) {
                return /* @__PURE__ */ (0, import_jsx_runtime113.jsx)(DataGridReadonlyCell, { context });
              }
              return /* @__PURE__ */ (0, import_jsx_runtime113.jsx)(DataGridCurrencyCell, { code: currency, context });
            }
          });
        }) ?? [],
        ...regions?.map((region) => {
          const preference = pricePreferences?.find(
            (p) => p.attribute === "region_id" && p.value === region.id
          );
          const translatedRegionName = t4("fields.priceTemplate", {
            regionOrCurrency: region.name
          });
          return columnHelper83.column({
            id: `region_prices.${region.id}`,
            name: t4("fields.priceTemplate", {
              regionOrCurrency: region.name
            }),
            field: (context) => {
              const isReadyOnlyValue = isReadyOnly?.(context);
              if (isReadyOnlyValue) {
                return null;
              }
              return getFieldName(context, region.id);
            },
            type: "number",
            header: () => /* @__PURE__ */ (0, import_jsx_runtime113.jsxs)("div", { className: "flex w-full items-center justify-between gap-3", children: [
              /* @__PURE__ */ (0, import_jsx_runtime113.jsx)("span", { className: "truncate", title: translatedRegionName, children: translatedRegionName }),
              /* @__PURE__ */ (0, import_jsx_runtime113.jsx)(IncludesTaxTooltip, { includesTax: preference?.is_tax_inclusive })
            ] }),
            cell: (context) => {
              if (isReadyOnly?.(context)) {
                return /* @__PURE__ */ (0, import_jsx_runtime113.jsx)(DataGridReadonlyCell, { context });
              }
              const currency = currencies2?.find((c) => c === region.currency_code);
              if (!currency) {
                return null;
              }
              return /* @__PURE__ */ (0, import_jsx_runtime113.jsx)(
                DataGridCurrencyCell,
                {
                  code: region.currency_code,
                  context
                }
              );
            }
          });
        }) ?? []
      ];
    };
  }
});

// src/components/data-grid/helpers/index.ts
var init_helpers = __esm({
  "src/components/data-grid/helpers/index.ts"() {
    "use strict";
    init_create_data_grid_column_helper();
    init_create_data_grid_price_columns();
  }
});

// src/components/data-grid/index.ts
var init_data_grid2 = __esm({
  "src/components/data-grid/index.ts"() {
    "use strict";
    init_data_grid();
    init_helpers();
  }
});

// src/routes/products/product-create/components/product-create-variants-form/product-create-variants-form.tsx
var import_react91, import_react_hook_form13, import_react_i18next54, import_jsx_runtime114, ProductCreateVariantsForm, columnHelper5, useColumns3;
var init_product_create_variants_form = __esm({
  "src/routes/products/product-create/components/product-create-variants-form/product-create-variants-form.tsx"() {
    "use strict";
    import_react91 = require("react");
    import_react_hook_form13 = require("react-hook-form");
    import_react_i18next54 = require("react-i18next");
    init_data_grid2();
    init_modals();
    import_jsx_runtime114 = require("react/jsx-runtime");
    ProductCreateVariantsForm = ({
      form,
      regions,
      store,
      pricePreferences
    }) => {
      const { setCloseOnEscape } = useRouteModal();
      const currencyCodes = (0, import_react91.useMemo)(
        () => store?.supported_currencies?.map((c) => c.currency_code) || [],
        [store]
      );
      const variants = (0, import_react_hook_form13.useWatch)({
        control: form.control,
        name: "variants",
        defaultValue: []
      });
      const options = (0, import_react_hook_form13.useWatch)({
        control: form.control,
        name: "options",
        defaultValue: []
      });
      const columns = useColumns3({
        options,
        currencies: currencyCodes,
        regions,
        pricePreferences
      });
      const variantData = (0, import_react91.useMemo)(() => {
        const ret = [];
        variants.forEach((v, i) => {
          if (v.should_create) {
            ret.push({ ...v, originalIndex: i });
          }
        });
        return ret;
      }, [variants]);
      return /* @__PURE__ */ (0, import_jsx_runtime114.jsx)("div", { className: "flex size-full flex-col divide-y overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime114.jsx)(
        DataGrid,
        {
          columns,
          data: variantData,
          state: form,
          onEditingChange: (editing) => setCloseOnEscape(!editing)
        }
      ) });
    };
    columnHelper5 = createDataGridHelper();
    useColumns3 = ({
      options,
      currencies: currencies2 = [],
      regions = [],
      pricePreferences = []
    }) => {
      const { t: t4 } = (0, import_react_i18next54.useTranslation)();
      return (0, import_react91.useMemo)(
        () => [
          columnHelper5.column({
            id: "options",
            header: () => /* @__PURE__ */ (0, import_jsx_runtime114.jsx)("div", { className: "flex size-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime114.jsx)("span", { className: "truncate", children: options.map((o) => o.title).join(" / ") }) }),
            cell: (context) => {
              return /* @__PURE__ */ (0, import_jsx_runtime114.jsx)(DataGrid.ReadonlyCell, { context, children: options.map((o) => context.row.original.options[o.title]).join(" / ") });
            },
            disableHiding: true
          }),
          columnHelper5.column({
            id: "title",
            name: t4("fields.title"),
            header: t4("fields.title"),
            field: (context) => `variants.${context.row.original.originalIndex}.title`,
            type: "text",
            cell: (context) => {
              return /* @__PURE__ */ (0, import_jsx_runtime114.jsx)(DataGrid.TextCell, { context });
            }
          }),
          columnHelper5.column({
            id: "sku",
            name: t4("fields.sku"),
            header: t4("fields.sku"),
            field: (context) => `variants.${context.row.original.originalIndex}.sku`,
            type: "text",
            cell: (context) => {
              return /* @__PURE__ */ (0, import_jsx_runtime114.jsx)(DataGrid.TextCell, { context });
            }
          }),
          columnHelper5.column({
            id: "manage_inventory",
            name: t4("fields.managedInventory"),
            header: t4("fields.managedInventory"),
            field: (context) => `variants.${context.row.original.originalIndex}.manage_inventory`,
            type: "boolean",
            cell: (context) => {
              return /* @__PURE__ */ (0, import_jsx_runtime114.jsx)(DataGrid.BooleanCell, { context });
            }
          }),
          columnHelper5.column({
            id: "allow_backorder",
            name: t4("fields.allowBackorder"),
            header: t4("fields.allowBackorder"),
            field: (context) => `variants.${context.row.original.originalIndex}.allow_backorder`,
            type: "boolean",
            cell: (context) => {
              return /* @__PURE__ */ (0, import_jsx_runtime114.jsx)(DataGrid.BooleanCell, { context });
            }
          }),
          columnHelper5.column({
            id: "inventory_kit",
            name: t4("fields.inventoryKit"),
            header: t4("fields.inventoryKit"),
            field: (context) => `variants.${context.row.original.originalIndex}.inventory_kit`,
            type: "boolean",
            cell: (context) => {
              return /* @__PURE__ */ (0, import_jsx_runtime114.jsx)(
                DataGrid.BooleanCell,
                {
                  context,
                  disabled: !context.row.original.manage_inventory
                }
              );
            }
          }),
          ...createDataGridPriceColumns({
            currencies: currencies2,
            regions,
            pricePreferences,
            getFieldName: (context, value) => {
              if (context.column.id?.startsWith("currency_prices")) {
                return `variants.${context.row.original.originalIndex}.prices.${value}`;
              }
              return `variants.${context.row.original.originalIndex}.prices.${value}`;
            },
            t: t4
          })
        ],
        [currencies2, regions, options, pricePreferences, t4]
      );
    };
  }
});

// src/routes/products/product-create/components/product-create-variants-form/index.ts
var init_product_create_variants_form2 = __esm({
  "src/routes/products/product-create/components/product-create-variants-form/index.ts"() {
    "use strict";
    init_product_create_variants_form();
  }
});

// src/routes/products/product-create/components/product-create-form/product-create-form.tsx
var import_ui67, import_react92, import_react_hook_form14, import_react_i18next55, import_jsx_runtime115, SAVE_DRAFT_BUTTON, ProductCreateForm, PrimaryButton;
var init_product_create_form = __esm({
  "src/routes/products/product-create/components/product-create-form/product-create-form.tsx"() {
    "use strict";
    import_ui67 = require("@medusajs/ui");
    import_react92 = require("react");
    import_react_hook_form14 = require("react-hook-form");
    import_react_i18next55 = require("react-i18next");
    init_modals();
    init_keybound_form2();
    init_extensions();
    init_products();
    init_client2();
    init_is_fetch_error();
    init_constants3();
    init_utils5();
    init_product_create_details_form2();
    init_product_create_inventory_kit_form2();
    init_product_create_organize_form2();
    init_product_create_variants_form2();
    import_jsx_runtime115 = require("react/jsx-runtime");
    SAVE_DRAFT_BUTTON = "save-draft-button";
    ProductCreateForm = ({
      defaultChannel,
      regions,
      store,
      pricePreferences
    }) => {
      const [tab, setTab] = (0, import_react92.useState)("details" /* DETAILS */);
      const [tabState, setTabState] = (0, import_react92.useState)({
        ["details" /* DETAILS */]: "in-progress",
        ["organize" /* ORGANIZE */]: "not-started",
        ["variants" /* VARIANTS */]: "not-started",
        ["inventory" /* INVENTORY */]: "not-started"
      });
      const { t: t4 } = (0, import_react_i18next55.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const { getFormConfigs } = useDashboardExtension();
      const configs = getFormConfigs("product", "create");
      const form = useExtendableForm({
        defaultValues: {
          ...PRODUCT_CREATE_FORM_DEFAULTS,
          sales_channels: defaultChannel ? [{ id: defaultChannel.id, name: defaultChannel.name }] : []
        },
        schema: ProductCreateSchema,
        configs
      });
      const { mutateAsync, isPending } = useCreateProduct();
      const regionsCurrencyMap = (0, import_react92.useMemo)(() => {
        if (!regions?.length) {
          return {};
        }
        return regions.reduce(
          (acc, reg) => {
            acc[reg.id] = reg.currency_code;
            return acc;
          },
          {}
        );
      }, [regions]);
      const watchedVariants = (0, import_react_hook_form14.useWatch)({
        control: form.control,
        name: "variants"
      });
      const showInventoryTab = (0, import_react92.useMemo)(
        () => watchedVariants.some((v) => v.manage_inventory && v.inventory_kit),
        [watchedVariants]
      );
      const handleSubmit = form.handleSubmit(async (values, e) => {
        let isDraftSubmission = false;
        if (e?.nativeEvent instanceof SubmitEvent) {
          const submitter = e?.nativeEvent?.submitter;
          isDraftSubmission = submitter.dataset.name === SAVE_DRAFT_BUTTON;
        }
        const media = values.media || [];
        const payload = { ...values, media: void 0 };
        let uploadedMedia = [];
        try {
          if (media.length) {
            const thumbnailReq = media.find((m) => m.isThumbnail);
            const otherMediaReq = media.filter((m) => !m.isThumbnail);
            const fileReqs = [];
            if (thumbnailReq) {
              fileReqs.push(
                sdk.admin.upload.create({ files: [thumbnailReq.file] }).then((r) => r.files.map((f) => ({ ...f, isThumbnail: true })))
              );
            }
            if (otherMediaReq?.length) {
              fileReqs.push(
                sdk.admin.upload.create({
                  files: otherMediaReq.map((m) => m.file)
                }).then((r) => r.files.map((f) => ({ ...f, isThumbnail: false })))
              );
            }
            uploadedMedia = (await Promise.all(fileReqs)).flat();
          }
          const { product } = await mutateAsync(
            normalizeProductFormValues({
              ...payload,
              media: uploadedMedia,
              status: isDraftSubmission ? "draft" : "published",
              regionsCurrencyMap
            })
          );
          import_ui67.toast.success(
            t4("products.create.successToast", {
              title: product.title
            })
          );
          handleSuccess(`../${product.id}`);
        } catch (error) {
          if (isFetchError(error) && error.status === 400) {
            import_ui67.toast.error(error.message);
          } else {
            import_ui67.toast.error(t4("general.error"), {
              description: error.message
            });
          }
        }
      });
      const onNext = async (currentTab) => {
        const valid = await form.trigger();
        if (!valid) {
          return;
        }
        if (currentTab === "details" /* DETAILS */) {
          setTab("organize" /* ORGANIZE */);
        }
        if (currentTab === "organize" /* ORGANIZE */) {
          setTab("variants" /* VARIANTS */);
        }
        if (currentTab === "variants" /* VARIANTS */) {
          setTab("inventory" /* INVENTORY */);
        }
      };
      (0, import_react92.useEffect)(() => {
        const currentState = { ...tabState };
        if (tab === "details" /* DETAILS */) {
          currentState["details" /* DETAILS */] = "in-progress";
        }
        if (tab === "organize" /* ORGANIZE */) {
          currentState["details" /* DETAILS */] = "completed";
          currentState["organize" /* ORGANIZE */] = "in-progress";
        }
        if (tab === "variants" /* VARIANTS */) {
          currentState["details" /* DETAILS */] = "completed";
          currentState["organize" /* ORGANIZE */] = "completed";
          currentState["variants" /* VARIANTS */] = "in-progress";
        }
        if (tab === "inventory" /* INVENTORY */) {
          currentState["details" /* DETAILS */] = "completed";
          currentState["organize" /* ORGANIZE */] = "completed";
          currentState["variants" /* VARIANTS */] = "completed";
          currentState["inventory" /* INVENTORY */] = "in-progress";
        }
        setTabState({ ...currentState });
      }, [tab]);
      return /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(RouteFocusModal, { children: /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime115.jsxs)(
        KeyboundForm,
        {
          onKeyDown: (e) => {
            if (e.key === "Enter") {
              e.preventDefault();
              if (e.metaKey || e.ctrlKey) {
                if (tab !== "variants" /* VARIANTS */) {
                  e.preventDefault();
                  e.stopPropagation();
                  onNext(tab);
                  return;
                }
                handleSubmit();
              }
            }
          },
          onSubmit: handleSubmit,
          className: "flex h-full flex-col",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime115.jsxs)(
              import_ui67.ProgressTabs,
              {
                value: tab,
                onValueChange: async (tab2) => {
                  const valid = await form.trigger();
                  if (!valid) {
                    return;
                  }
                  setTab(tab2);
                },
                className: "flex h-full flex-col overflow-hidden",
                children: [
                  /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime115.jsx)("div", { className: "-my-2 w-full border-l", children: /* @__PURE__ */ (0, import_jsx_runtime115.jsxs)(import_ui67.ProgressTabs.List, { className: "justify-start-start flex w-full items-center", children: [
                    /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(
                      import_ui67.ProgressTabs.Trigger,
                      {
                        status: tabState["details" /* DETAILS */],
                        value: "details" /* DETAILS */,
                        className: "max-w-[200px] truncate",
                        children: t4("products.create.tabs.details")
                      }
                    ),
                    /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(
                      import_ui67.ProgressTabs.Trigger,
                      {
                        status: tabState["organize" /* ORGANIZE */],
                        value: "organize" /* ORGANIZE */,
                        className: "max-w-[200px] truncate",
                        children: t4("products.create.tabs.organize")
                      }
                    ),
                    /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(
                      import_ui67.ProgressTabs.Trigger,
                      {
                        status: tabState["variants" /* VARIANTS */],
                        value: "variants" /* VARIANTS */,
                        className: "max-w-[200px] truncate",
                        children: t4("products.create.tabs.variants")
                      }
                    ),
                    showInventoryTab && /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(
                      import_ui67.ProgressTabs.Trigger,
                      {
                        status: tabState["inventory" /* INVENTORY */],
                        value: "inventory" /* INVENTORY */,
                        className: "max-w-[200px] truncate",
                        children: t4("products.create.tabs.inventory")
                      }
                    )
                  ] }) }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime115.jsxs)(RouteFocusModal.Body, { className: "size-full overflow-hidden", children: [
                    /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(
                      import_ui67.ProgressTabs.Content,
                      {
                        className: "size-full overflow-y-auto",
                        value: "details" /* DETAILS */,
                        children: /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(ProductCreateDetailsForm, { form })
                      }
                    ),
                    /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(
                      import_ui67.ProgressTabs.Content,
                      {
                        className: "size-full overflow-y-auto",
                        value: "organize" /* ORGANIZE */,
                        children: /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(ProductCreateOrganizeForm, { form })
                      }
                    ),
                    /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(
                      import_ui67.ProgressTabs.Content,
                      {
                        className: "size-full overflow-y-auto",
                        value: "variants" /* VARIANTS */,
                        children: /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(
                          ProductCreateVariantsForm,
                          {
                            form,
                            store,
                            regions,
                            pricePreferences
                          }
                        )
                      }
                    ),
                    showInventoryTab && /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(
                      import_ui67.ProgressTabs.Content,
                      {
                        className: "size-full overflow-y-auto",
                        value: "inventory" /* INVENTORY */,
                        children: /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(ProductCreateInventoryKitForm, { form })
                      }
                    )
                  ] })
                ]
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime115.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(import_ui67.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(
                import_ui67.Button,
                {
                  "data-name": SAVE_DRAFT_BUTTON,
                  size: "small",
                  type: "submit",
                  isLoading: isPending,
                  className: "whitespace-nowrap",
                  children: t4("actions.saveAsDraft")
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(
                PrimaryButton,
                {
                  tab,
                  next: onNext,
                  isLoading: isPending,
                  showInventoryTab
                }
              )
            ] }) })
          ]
        }
      ) }) });
    };
    PrimaryButton = ({
      tab,
      next,
      isLoading,
      showInventoryTab
    }) => {
      const { t: t4 } = (0, import_react_i18next55.useTranslation)();
      if (tab === "variants" /* VARIANTS */ && !showInventoryTab || tab === "inventory" /* INVENTORY */ && showInventoryTab) {
        return /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(
          import_ui67.Button,
          {
            "data-name": "publish-button",
            type: "submit",
            variant: "primary",
            size: "small",
            isLoading,
            children: t4("actions.publish")
          },
          "submit-button"
        );
      }
      return /* @__PURE__ */ (0, import_jsx_runtime115.jsx)(
        import_ui67.Button,
        {
          type: "button",
          variant: "primary",
          size: "small",
          onClick: () => next(tab),
          children: t4("actions.continue")
        },
        "next-button"
      );
    };
  }
});

// src/routes/products/product-create/product-create.tsx
var import_jsx_runtime116, ProductCreate;
var init_product_create = __esm({
  "src/routes/products/product-create/product-create.tsx"() {
    "use strict";
    init_modals();
    init_api();
    init_price_preferences();
    init_sales_channels();
    init_store();
    init_product_create_form();
    import_jsx_runtime116 = require("react/jsx-runtime");
    ProductCreate = () => {
      const {
        store,
        isPending: isStorePending,
        isError: isStoreError,
        error: storeError
      } = useStore({
        fields: "default_sales_channel"
      });
      const {
        sales_channel,
        isPending: isSalesChannelPending,
        isError: isSalesChannelError,
        error: salesChannelError
      } = useSalesChannel(store?.default_sales_channel_id, {
        enabled: !!store?.default_sales_channel_id
      });
      const {
        regions,
        isPending: isRegionsPending,
        isError: isRegionsError,
        error: regionsError
      } = useRegions({ limit: 9999 });
      const {
        price_preferences,
        isPending: isPricePreferencesPending,
        isError: isPricePreferencesError,
        error: pricePreferencesError
      } = usePricePreferences({
        limit: 9999
      });
      const ready = !!store && !isStorePending && !!regions && !isRegionsPending && !!sales_channel && !isSalesChannelPending && !!price_preferences && !isPricePreferencesPending;
      if (isStoreError) {
        throw storeError;
      }
      if (isRegionsError) {
        throw regionsError;
      }
      if (isSalesChannelError) {
        throw salesChannelError;
      }
      if (isPricePreferencesError) {
        throw pricePreferencesError;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime116.jsx)(RouteFocusModal, { children: ready && /* @__PURE__ */ (0, import_jsx_runtime116.jsx)(
        ProductCreateForm,
        {
          defaultChannel: sales_channel,
          store,
          pricePreferences: price_preferences,
          regions
        }
      ) });
    };
  }
});

// src/routes/products/product-create/index.ts
var product_create_exports = {};
__export(product_create_exports, {
  Component: () => ProductCreate
});
var init_product_create2 = __esm({
  "src/routes/products/product-create/index.ts"() {
    "use strict";
    init_product_create();
  }
});

// src/routes/products/product-import/components/upload-import.tsx
var import_react93, import_ui68, import_react_i18next56, import_jsx_runtime117, SUPPORTED_FORMATS2, SUPPORTED_FORMATS_FILE_EXTENSIONS2, UploadImport;
var init_upload_import = __esm({
  "src/routes/products/product-import/components/upload-import.tsx"() {
    "use strict";
    import_react93 = require("react");
    init_file_upload2();
    import_ui68 = require("@medusajs/ui");
    import_react_i18next56 = require("react-i18next");
    import_jsx_runtime117 = require("react/jsx-runtime");
    SUPPORTED_FORMATS2 = ["text/csv"];
    SUPPORTED_FORMATS_FILE_EXTENSIONS2 = [".csv"];
    UploadImport = ({
      onUploaded
    }) => {
      const { t: t4 } = (0, import_react_i18next56.useTranslation)();
      const [error, setError] = (0, import_react93.useState)();
      const hasInvalidFiles = (fileList) => {
        const invalidFile = fileList.find(
          (f) => !SUPPORTED_FORMATS2.includes(f.file.type)
        );
        if (invalidFile) {
          setError(
            t4("products.media.invalidFileType", {
              name: invalidFile.file.name,
              types: SUPPORTED_FORMATS_FILE_EXTENSIONS2.join(", ")
            })
          );
          return true;
        }
        return false;
      };
      return /* @__PURE__ */ (0, import_jsx_runtime117.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime117.jsx)(
          FileUpload,
          {
            label: t4("products.import.uploadLabel"),
            hint: t4("products.import.uploadHint"),
            multiple: false,
            hasError: !!error,
            formats: SUPPORTED_FORMATS2,
            onUploaded: (files) => {
              setError(void 0);
              if (hasInvalidFiles(files)) {
                return;
              }
              onUploaded(files[0].file);
            }
          }
        ),
        error && /* @__PURE__ */ (0, import_jsx_runtime117.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime117.jsx)(import_ui68.Hint, { variant: "error", children: error }) })
      ] });
    };
  }
});

// src/routes/products/product-import/components/import-summary.tsx
var import_ui69, import_react_i18next57, import_jsx_runtime118, ImportSummary, Stat;
var init_import_summary = __esm({
  "src/routes/products/product-import/components/import-summary.tsx"() {
    "use strict";
    init_divider2();
    import_ui69 = require("@medusajs/ui");
    import_react_i18next57 = require("react-i18next");
    import_jsx_runtime118 = require("react/jsx-runtime");
    ImportSummary = ({
      summary
    }) => {
      const { t: t4 } = (0, import_react_i18next57.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime118.jsxs)("div", { className: "shadow-elevation-card-rest bg-ui-bg-component transition-fg rounded-md flex flex-row px-3 py-2", children: [
        /* @__PURE__ */ (0, import_jsx_runtime118.jsx)(
          Stat,
          {
            title: summary.toCreate.toLocaleString(),
            description: t4("products.import.upload.productsToCreate")
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime118.jsx)(Divider, { orientation: "vertical", className: "px-3 h-10" }),
        /* @__PURE__ */ (0, import_jsx_runtime118.jsx)(
          Stat,
          {
            title: summary.toUpdate.toLocaleString(),
            description: t4("products.import.upload.productsToUpdate")
          }
        )
      ] });
    };
    Stat = ({
      title,
      description
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime118.jsxs)("div", { className: "flex-1 flex flex-col justify-center", children: [
        /* @__PURE__ */ (0, import_jsx_runtime118.jsx)(import_ui69.Text, { size: "xlarge", className: "font-sans font-medium", children: title }),
        /* @__PURE__ */ (0, import_jsx_runtime118.jsx)(
          import_ui69.Text,
          {
            leading: "compact",
            size: "xsmall",
            weight: "plus",
            className: "text-ui-fg-subtle",
            children: description
          }
        )
      ] });
    };
  }
});

// src/routes/products/product-import/helpers/import-template.ts
var ProductImportCSV, getProductImportCsvTemplate;
var init_import_template = __esm({
  "src/routes/products/product-import/helpers/import-template.ts"() {
    "use strict";
    ProductImportCSV = `data:text/csv;charset=utf-8,Product Id;Product Handle;Product Title;Product Subtitle;Product Description;Product Status;Product Thumbnail;Product Weight;Product Length;Product Width;Product Height;Product HS Code;Product Origin Country;Product MID Code;Product Material;Product Collection Title;Product Collection Handle;Product Type;Product Tags;Product Discountable;Product External Id;Product Profile Name;Product Profile Type;Variant Id;Variant Title;Variant SKU;Variant Barcode;Variant Inventory Quantity;Variant Allow Backorder;Variant Manage Inventory;Variant Weight;Variant Length;Variant Width;Variant Height;Variant HS Code;Variant Origin Country;Variant MID Code;Variant Material;Price EUR;Price USD;Option 1 Name;Option 1 Value;Image 1 Url;Image 2 Url
;coffee-mug-v2;Medusa Coffee Mug;;Every programmer's best friend.;published;https://medusa-public-images.s3.eu-west-1.amazonaws.com/coffee-mug.png;400;;;;;;;;;;;;true;;;;;One Size;;;100;false;true;;;;;;;;;1000;1200;Size;One Size;https://medusa-public-images.s3.eu-west-1.amazonaws.com/coffee-mug.png;
;sweatpants-v2;Medusa Sweatpants;;Reimagine the feeling of classic sweatpants. With our cotton sweatpants, everyday essentials no longer have to be ordinary.;published;https://medusa-public-images.s3.eu-west-1.amazonaws.com/sweatpants-gray-front.png;400;;;;;;;;;;;;true;;;;;S;;;100;false;true;;;;;;;;;2950;3350;Size;S;https://medusa-public-images.s3.eu-west-1.amazonaws.com/sweatpants-gray-front.png;https://medusa-public-images.s3.eu-west-1.amazonaws.com/sweatpants-gray-back.png
;sweatpants-v2;Medusa Sweatpants;;Reimagine the feeling of classic sweatpants. With our cotton sweatpants, everyday essentials no longer have to be ordinary.;published;https://medusa-public-images.s3.eu-west-1.amazonaws.com/sweatpants-gray-front.png;400;;;;;;;;;;;;true;;;;;M;;;100;false;true;;;;;;;;;2950;3350;Size;M;https://medusa-public-images.s3.eu-west-1.amazonaws.com/sweatpants-gray-front.png;https://medusa-public-images.s3.eu-west-1.amazonaws.com/sweatpants-gray-back.png
;sweatpants-v2;Medusa Sweatpants;;Reimagine the feeling of classic sweatpants. With our cotton sweatpants, everyday essentials no longer have to be ordinary.;published;https://medusa-public-images.s3.eu-west-1.amazonaws.com/sweatpants-gray-front.png;400;;;;;;;;;;;;true;;;;;L;;;100;false;true;;;;;;;;;2950;3350;Size;L;https://medusa-public-images.s3.eu-west-1.amazonaws.com/sweatpants-gray-front.png;https://medusa-public-images.s3.eu-west-1.amazonaws.com/sweatpants-gray-back.png
;sweatpants-v2;Medusa Sweatpants;;Reimagine the feeling of classic sweatpants. With our cotton sweatpants, everyday essentials no longer have to be ordinary.;published;https://medusa-public-images.s3.eu-west-1.amazonaws.com/sweatpants-gray-front.png;400;;;;;;;;;;;;true;;;;;XL;;;100;false;true;;;;;;;;;2950;3350;Size;XL;https://medusa-public-images.s3.eu-west-1.amazonaws.com/sweatpants-gray-front.png;https://medusa-public-images.s3.eu-west-1.amazonaws.com/sweatpants-gray-back.png
`;
    getProductImportCsvTemplate = () => {
      return encodeURI(ProductImportCSV);
    };
  }
});

// src/routes/products/product-import/product-import.tsx
var import_ui70, import_react_i18next58, import_react94, import_icons36, import_jsx_runtime119, ProductImport, ProductImportContent;
var init_product_import = __esm({
  "src/routes/products/product-import/product-import.tsx"() {
    "use strict";
    import_ui70 = require("@medusajs/ui");
    init_modals();
    import_react_i18next58 = require("react-i18next");
    import_react94 = require("react");
    init_api();
    init_upload_import();
    init_import_summary();
    import_icons36 = require("@medusajs/icons");
    init_file_preview2();
    init_import_template();
    import_jsx_runtime119 = require("react/jsx-runtime");
    ProductImport = () => {
      const { t: t4 } = (0, import_react_i18next58.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime119.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime119.jsxs)(RouteDrawer.Header, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime119.jsx)(RouteDrawer.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime119.jsx)(import_ui70.Heading, { children: t4("products.import.header") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime119.jsx)(RouteDrawer.Description, { className: "sr-only", children: t4("products.import.description") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime119.jsx)(ProductImportContent, {})
      ] });
    };
    ProductImportContent = () => {
      const { t: t4 } = (0, import_react_i18next58.useTranslation)();
      const [filename, setFilename] = (0, import_react94.useState)();
      const { mutateAsync: importProducts, isPending, data } = useImportProducts();
      const { mutateAsync: confirm } = useConfirmImportProducts();
      const { handleSuccess } = useRouteModal();
      const productImportTemplateContent = (0, import_react94.useMemo)(() => {
        return getProductImportCsvTemplate();
      }, []);
      const handleUploaded = async (file) => {
        setFilename(file.name);
        await importProducts(
          { file },
          {
            onError: (err) => {
              import_ui70.toast.error(err.message);
              setFilename(void 0);
            }
          }
        );
      };
      const handleConfirm = async () => {
        if (!data?.transaction_id) {
          return;
        }
        await confirm(data.transaction_id, {
          onSuccess: () => {
            import_ui70.toast.info(t4("products.import.success.title"), {
              description: t4("products.import.success.description")
            });
            handleSuccess();
          },
          onError: (err) => {
            import_ui70.toast.error(err.message);
          }
        });
      };
      const uploadedFileActions = [
        {
          actions: [
            {
              label: t4("actions.delete"),
              icon: /* @__PURE__ */ (0, import_jsx_runtime119.jsx)(import_icons36.Trash, {}),
              onClick: () => setFilename(void 0)
            }
          ]
        }
      ];
      return /* @__PURE__ */ (0, import_jsx_runtime119.jsxs)(import_jsx_runtime119.Fragment, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime119.jsxs)(RouteDrawer.Body, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime119.jsx)(import_ui70.Heading, { level: "h2", children: t4("products.import.upload.title") }),
          /* @__PURE__ */ (0, import_jsx_runtime119.jsx)(import_ui70.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("products.import.upload.description") }),
          /* @__PURE__ */ (0, import_jsx_runtime119.jsx)("div", { className: "mt-4", children: filename ? /* @__PURE__ */ (0, import_jsx_runtime119.jsx)(
            FilePreview,
            {
              filename,
              loading: isPending,
              activity: t4("products.import.upload.preprocessing"),
              actions: uploadedFileActions
            }
          ) : /* @__PURE__ */ (0, import_jsx_runtime119.jsx)(UploadImport, { onUploaded: handleUploaded }) }),
          data?.summary && !!filename && /* @__PURE__ */ (0, import_jsx_runtime119.jsx)("div", { className: "mt-4", children: /* @__PURE__ */ (0, import_jsx_runtime119.jsx)(ImportSummary, { summary: data?.summary }) }),
          /* @__PURE__ */ (0, import_jsx_runtime119.jsx)(import_ui70.Heading, { className: "mt-6", level: "h2", children: t4("products.import.template.title") }),
          /* @__PURE__ */ (0, import_jsx_runtime119.jsx)(import_ui70.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("products.import.template.description") }),
          /* @__PURE__ */ (0, import_jsx_runtime119.jsx)("div", { className: "mt-4", children: /* @__PURE__ */ (0, import_jsx_runtime119.jsx)(
            FilePreview,
            {
              filename: "product-import-template.csv",
              url: productImportTemplateContent
            }
          ) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime119.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime119.jsxs)("div", { className: "flex items-center gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime119.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime119.jsx)(import_ui70.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime119.jsx)(
            import_ui70.Button,
            {
              onClick: handleConfirm,
              size: "small",
              disabled: !data?.transaction_id || !filename,
              children: t4("actions.import")
            }
          )
        ] }) })
      ] });
    };
  }
});

// src/routes/products/product-import/index.ts
var product_import_exports = {};
__export(product_import_exports, {
  Component: () => ProductImport
});
var init_product_import2 = __esm({
  "src/routes/products/product-import/index.ts"() {
    "use strict";
    init_product_import();
  }
});

// src/hooks/table/filters/use-date-table-filters.tsx
var import_react_i18next59, useDateTableFilters;
var init_use_date_table_filters = __esm({
  "src/hooks/table/filters/use-date-table-filters.tsx"() {
    "use strict";
    import_react_i18next59 = require("react-i18next");
    useDateTableFilters = () => {
      const { t: t4 } = (0, import_react_i18next59.useTranslation)();
      const dateFilters = [
        { label: t4("fields.createdAt"), key: "created_at" },
        { label: t4("fields.updatedAt"), key: "updated_at" }
      ].map((f) => ({
        key: f.key,
        label: f.label,
        type: "date"
      }));
      return dateFilters;
    };
  }
});

// src/hooks/table/filters/use-collection-table-filters.tsx
var useCollectionTableFilters;
var init_use_collection_table_filters = __esm({
  "src/hooks/table/filters/use-collection-table-filters.tsx"() {
    "use strict";
    init_use_date_table_filters();
    useCollectionTableFilters = () => {
      const dateFilters = useDateTableFilters();
      return dateFilters;
    };
  }
});

// src/hooks/table/filters/use-customer-group-table-filters.tsx
var import_react_i18next60, useCustomerGroupTableFilters;
var init_use_customer_group_table_filters = __esm({
  "src/hooks/table/filters/use-customer-group-table-filters.tsx"() {
    "use strict";
    import_react_i18next60 = require("react-i18next");
    useCustomerGroupTableFilters = () => {
      const { t: t4 } = (0, import_react_i18next60.useTranslation)();
      let filters = [];
      const dateFilters = [
        { label: t4("fields.createdAt"), key: "created_at" },
        { label: t4("fields.updatedAt"), key: "updated_at" }
      ].map((f) => ({
        key: f.key,
        label: f.label,
        type: "date"
      }));
      filters = [...filters, ...dateFilters];
      return filters;
    };
  }
});

// src/hooks/table/filters/use-customer-table-filters.tsx
var import_react_i18next61, useCustomerTableFilters;
var init_use_customer_table_filters = __esm({
  "src/hooks/table/filters/use-customer-table-filters.tsx"() {
    "use strict";
    import_react_i18next61 = require("react-i18next");
    init_customer_groups();
    useCustomerTableFilters = (exclude) => {
      const { t: t4 } = (0, import_react_i18next61.useTranslation)();
      const isGroupsExcluded = exclude?.includes("groups");
      const { customer_groups } = useCustomerGroups(
        {
          limit: 1e3
        },
        {
          enabled: !isGroupsExcluded
        }
      );
      let filters = [];
      if (customer_groups && !isGroupsExcluded) {
        const customerGroupFilter = {
          key: "groups",
          label: t4("customers.groups.label"),
          type: "select",
          multiple: true,
          options: customer_groups.map((s) => ({
            label: s.name,
            value: s.id
          }))
        };
        filters = [...filters, customerGroupFilter];
      }
      const hasAccountFilter = {
        key: "has_account",
        label: t4("fields.account"),
        type: "select",
        options: [
          {
            label: t4("customers.registered"),
            value: "true"
          },
          {
            label: t4("customers.guest"),
            value: "false"
          }
        ]
      };
      const dateFilters = [
        { label: t4("fields.createdAt"), key: "created_at" },
        { label: t4("fields.updatedAt"), key: "updated_at" }
      ].map((f) => ({
        key: f.key,
        label: f.label,
        type: "date"
      }));
      filters = [...filters, hasAccountFilter, ...dateFilters];
      return filters;
    };
  }
});

// src/hooks/table/filters/use-order-table-filters.tsx
var import_react_i18next62, useOrderTableFilters;
var init_use_order_table_filters = __esm({
  "src/hooks/table/filters/use-order-table-filters.tsx"() {
    "use strict";
    import_react_i18next62 = require("react-i18next");
    init_regions();
    init_sales_channels();
    useOrderTableFilters = () => {
      const { t: t4 } = (0, import_react_i18next62.useTranslation)();
      const { regions } = useRegions({
        limit: 1e3,
        fields: "id,name"
      });
      const { sales_channels } = useSalesChannels({
        limit: 1e3,
        fields: "id,name"
      });
      let filters = [];
      if (regions) {
        const regionFilter = {
          key: "region_id",
          label: t4("fields.region"),
          type: "select",
          options: regions.map((r) => ({
            label: r.name,
            value: r.id
          })),
          multiple: true,
          searchable: true
        };
        filters = [...filters, regionFilter];
      }
      if (sales_channels) {
        const salesChannelFilter = {
          key: "sales_channel_id",
          label: t4("fields.salesChannel"),
          type: "select",
          multiple: true,
          searchable: true,
          options: sales_channels.map((s) => ({
            label: s.name,
            value: s.id
          }))
        };
        filters = [...filters, salesChannelFilter];
      }
      const paymentStatusFilter = {
        key: "payment_status",
        label: t4("orders.payment.statusLabel"),
        type: "select",
        multiple: true,
        options: [
          {
            label: t4("orders.payment.status.notPaid"),
            value: "not_paid"
          },
          {
            label: t4("orders.payment.status.awaiting"),
            value: "awaiting"
          },
          {
            label: t4("orders.payment.status.captured"),
            value: "captured"
          },
          {
            label: t4("orders.payment.status.refunded"),
            value: "refunded"
          },
          {
            label: t4("orders.payment.status.partiallyRefunded"),
            value: "partially_refunded"
          },
          {
            label: t4("orders.payment.status.canceled"),
            value: "canceled"
          },
          {
            label: t4("orders.payment.status.requiresAction"),
            value: "requires_action"
          }
        ]
      };
      const fulfillmentStatusFilter = {
        key: "fulfillment_status",
        label: t4("orders.fulfillment.statusLabel"),
        type: "select",
        multiple: true,
        options: [
          {
            label: t4("orders.fulfillment.status.notFulfilled"),
            value: "not_fulfilled"
          },
          {
            label: t4("orders.fulfillment.status.fulfilled"),
            value: "fulfilled"
          },
          {
            label: t4("orders.fulfillment.status.partiallyFulfilled"),
            value: "partially_fulfilled"
          },
          {
            label: t4("orders.fulfillment.status.returned"),
            value: "returned"
          },
          {
            label: t4("orders.fulfillment.status.partiallyReturned"),
            value: "partially_returned"
          },
          {
            label: t4("orders.fulfillment.status.shipped"),
            value: "shipped"
          },
          {
            label: t4("orders.fulfillment.status.partiallyShipped"),
            value: "partially_shipped"
          },
          {
            label: t4("orders.fulfillment.status.canceled"),
            value: "canceled"
          },
          {
            label: t4("orders.fulfillment.status.requiresAction"),
            value: "requires_action"
          }
        ]
      };
      const dateFilters = [
        { label: "Created At", key: "created_at" },
        { label: "Updated At", key: "updated_at" }
      ].map((f) => ({
        key: f.key,
        label: f.label,
        type: "date"
      }));
      filters = [
        ...filters,
        // TODO: enable when Payment, Fulfillments <> Orders are linked
        // paymentStatusFilter,
        // fulfillmentStatusFilter,
        ...dateFilters
      ];
      return filters;
    };
  }
});

// src/hooks/table/filters/use-product-tag-table-filters.tsx
var useProductTagTableFilters;
var init_use_product_tag_table_filters = __esm({
  "src/hooks/table/filters/use-product-tag-table-filters.tsx"() {
    "use strict";
    init_use_date_table_filters();
    useProductTagTableFilters = () => {
      const dateFilters = useDateTableFilters();
      return dateFilters;
    };
  }
});

// src/hooks/table/filters/use-product-type-table-filters.tsx
var useProductTypeTableFilters;
var init_use_product_type_table_filters = __esm({
  "src/hooks/table/filters/use-product-type-table-filters.tsx"() {
    "use strict";
    init_use_date_table_filters();
    useProductTypeTableFilters = () => {
      const dateFilters = useDateTableFilters();
      return dateFilters;
    };
  }
});

// src/hooks/table/filters/use-promotion-table-filters.tsx
var import_react_i18next63, usePromotionTableFilters;
var init_use_promotion_table_filters = __esm({
  "src/hooks/table/filters/use-promotion-table-filters.tsx"() {
    "use strict";
    import_react_i18next63 = require("react-i18next");
    usePromotionTableFilters = () => {
      const { t: t4 } = (0, import_react_i18next63.useTranslation)();
      let filters = [
        { label: t4("fields.createdAt"), key: "created_at", type: "date" },
        { label: t4("fields.updatedAt"), key: "updated_at", type: "date" }
      ];
      return filters;
    };
  }
});

// src/hooks/table/filters/use-region-table-filters.tsx
var import_react_i18next64, useRegionTableFilters;
var init_use_region_table_filters = __esm({
  "src/hooks/table/filters/use-region-table-filters.tsx"() {
    "use strict";
    import_react_i18next64 = require("react-i18next");
    useRegionTableFilters = () => {
      const { t: t4 } = (0, import_react_i18next64.useTranslation)();
      const dateFilters = [
        { label: t4("fields.createdAt"), key: "created_at" },
        { label: t4("fields.updatedAt"), key: "updated_at" }
      ].map((f) => ({
        key: f.key,
        label: f.label,
        type: "date"
      }));
      const filters = [...dateFilters];
      return filters;
    };
  }
});

// src/hooks/table/filters/use-shipping-option-table-filters.tsx
var import_react_i18next65;
var init_use_shipping_option_table_filters = __esm({
  "src/hooks/table/filters/use-shipping-option-table-filters.tsx"() {
    "use strict";
    import_react_i18next65 = require("react-i18next");
  }
});

// src/hooks/table/filters/use-tax-rate-table-filters.tsx
var import_react_i18next66;
var init_use_tax_rate_table_filters = __esm({
  "src/hooks/table/filters/use-tax-rate-table-filters.tsx"() {
    "use strict";
    import_react_i18next66 = require("react-i18next");
  }
});

// src/hooks/table/filters/index.ts
var init_filters = __esm({
  "src/hooks/table/filters/index.ts"() {
    "use strict";
    init_use_collection_table_filters();
    init_use_customer_group_table_filters();
    init_use_customer_table_filters();
    init_use_date_table_filters();
    init_use_order_table_filters();
    init_use_product_table_filters();
    init_use_product_tag_table_filters();
    init_use_product_type_table_filters();
    init_use_promotion_table_filters();
    init_use_region_table_filters();
    init_use_sales_channel_table_filters();
    init_use_shipping_option_table_filters();
    init_use_tax_rate_table_filters();
  }
});

// src/routes/products/product-export/components/export-filters.tsx
var import_ui71, import_react_i18next67, import_jsx_runtime120, ExportFilters;
var init_export_filters = __esm({
  "src/routes/products/product-export/components/export-filters.tsx"() {
    "use strict";
    import_ui71 = require("@medusajs/ui");
    init_data_table_filter2();
    import_react_i18next67 = require("react-i18next");
    init_filters();
    import_jsx_runtime120 = require("react/jsx-runtime");
    ExportFilters = () => {
      const { t: t4 } = (0, import_react_i18next67.useTranslation)();
      const filters = useProductTableFilters();
      return /* @__PURE__ */ (0, import_jsx_runtime120.jsxs)("div", { children: [
        /* @__PURE__ */ (0, import_jsx_runtime120.jsx)(import_ui71.Heading, { level: "h2", children: t4("products.export.filters.title") }),
        /* @__PURE__ */ (0, import_jsx_runtime120.jsx)(import_ui71.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("products.export.filters.description") }),
        /* @__PURE__ */ (0, import_jsx_runtime120.jsx)("div", { className: "mt-4", children: /* @__PURE__ */ (0, import_jsx_runtime120.jsx)(DataTableFilter, { filters, readonly: true }) })
      ] });
    };
  }
});

// src/hooks/table/query/use-campaign-table-query.tsx
var useCampaignTableQuery;
var init_use_campaign_table_query = __esm({
  "src/hooks/table/query/use-campaign-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useCampaignTableQuery = ({
      prefix,
      pageSize = 20
    }) => {
      const queryObject = useQueryParams(
        ["offset", "q", "order", "created_at", "updated_at"],
        prefix
      );
      const { offset: offset4, q, order, created_at, updated_at } = queryObject;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        order,
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0,
        q
      };
      return {
        searchParams,
        raw: queryObject
      };
    };
  }
});

// src/hooks/table/query/use-collection-table-query.tsx
var useCollectionTableQuery;
var init_use_collection_table_query = __esm({
  "src/hooks/table/query/use-collection-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useCollectionTableQuery = ({
      prefix,
      pageSize = 20
    }) => {
      const queryObject = useQueryParams(
        ["offset", "q", "order", "created_at", "updated_at"],
        prefix
      );
      const { offset: offset4, created_at, updated_at, q, order } = queryObject;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        order,
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0,
        q
      };
      return {
        searchParams,
        raw: queryObject
      };
    };
  }
});

// src/hooks/table/query/use-customer-group-table-query.tsx
var useCustomerGroupTableQuery;
var init_use_customer_group_table_query = __esm({
  "src/hooks/table/query/use-customer-group-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useCustomerGroupTableQuery = ({
      prefix,
      pageSize = 20
    }) => {
      const queryObject = useQueryParams(
        ["offset", "q", "has_account", "order", "created_at", "updated_at"],
        prefix
      );
      const { offset: offset4, created_at, updated_at, q, order } = queryObject;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        order,
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0,
        q
      };
      return {
        searchParams,
        raw: queryObject
      };
    };
  }
});

// src/hooks/table/query/use-customer-table-query.tsx
var useCustomerTableQuery;
var init_use_customer_table_query = __esm({
  "src/hooks/table/query/use-customer-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useCustomerTableQuery = ({
      prefix,
      pageSize = 20
    }) => {
      const queryObject = useQueryParams(
        [
          "offset",
          "q",
          "has_account",
          "groups",
          "order",
          "created_at",
          "updated_at"
        ],
        prefix
      );
      const { offset: offset4, groups, created_at, updated_at, has_account, q, order } = queryObject;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        groups: groups?.split(","),
        has_account: has_account ? has_account === "true" : void 0,
        order,
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0,
        q
      };
      return {
        searchParams,
        raw: queryObject
      };
    };
  }
});

// src/hooks/table/query/use-order-table-query.tsx
var useOrderTableQuery;
var init_use_order_table_query = __esm({
  "src/hooks/table/query/use-order-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useOrderTableQuery = ({
      prefix,
      pageSize = 20
    }) => {
      const queryObject = useQueryParams(
        [
          "offset",
          "q",
          "created_at",
          "updated_at",
          "region_id",
          "sales_channel_id",
          "payment_status",
          "fulfillment_status",
          "order"
        ],
        prefix
      );
      const {
        offset: offset4,
        sales_channel_id,
        created_at,
        updated_at,
        fulfillment_status,
        payment_status,
        region_id,
        q,
        order
      } = queryObject;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        sales_channel_id: sales_channel_id?.split(","),
        fulfillment_status: fulfillment_status?.split(","),
        payment_status: payment_status?.split(","),
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0,
        region_id: region_id?.split(","),
        order: order ? order : "-display_id",
        q
      };
      return {
        searchParams,
        raw: queryObject
      };
    };
  }
});

// src/hooks/table/query/use-product-tag-table-query.tsx
var useProductTagTableQuery;
var init_use_product_tag_table_query = __esm({
  "src/hooks/table/query/use-product-tag-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useProductTagTableQuery = ({
      prefix,
      pageSize = 20
    }) => {
      const queryObject = useQueryParams(
        ["offset", "q", "order", "created_at", "updated_at"],
        prefix
      );
      const { offset: offset4, q, order, created_at, updated_at } = queryObject;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        order,
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0,
        q
      };
      return {
        searchParams,
        raw: queryObject
      };
    };
  }
});

// src/hooks/table/query/use-product-type-table-query.tsx
var useProductTypeTableQuery;
var init_use_product_type_table_query = __esm({
  "src/hooks/table/query/use-product-type-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useProductTypeTableQuery = ({
      prefix,
      pageSize = 20
    }) => {
      const queryObject = useQueryParams(
        ["offset", "q", "order", "created_at", "updated_at"],
        prefix
      );
      const { offset: offset4, q, order, created_at, updated_at } = queryObject;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        order,
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0,
        q
      };
      return {
        searchParams,
        raw: queryObject
      };
    };
  }
});

// src/hooks/table/query/use-region-table-query.tsx
var useRegionTableQuery;
var init_use_region_table_query = __esm({
  "src/hooks/table/query/use-region-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useRegionTableQuery = ({
      prefix,
      pageSize = 20
    }) => {
      const queryObject = useQueryParams(
        ["offset", "q", "order", "created_at", "updated_at"],
        prefix
      );
      const { offset: offset4, q, order, created_at, updated_at } = queryObject;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        order,
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0,
        q
      };
      return {
        searchParams,
        raw: queryObject
      };
    };
  }
});

// src/hooks/table/query/use-return-reason-table-query.tsx
var useReturnReasonTableQuery;
var init_use_return_reason_table_query = __esm({
  "src/hooks/table/query/use-return-reason-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useReturnReasonTableQuery = ({
      prefix,
      pageSize = 20
    }) => {
      const queryObject = useQueryParams(
        ["offset", "q", "order", "created_at", "updated_at"],
        prefix
      );
      const { offset: offset4, q, order, created_at, updated_at } = queryObject;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        order,
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0,
        q
      };
      return {
        searchParams,
        raw: queryObject
      };
    };
  }
});

// src/hooks/table/query/use-shipping-option-table-query.tsx
var init_use_shipping_option_table_query = __esm({
  "src/hooks/table/query/use-shipping-option-table-query.tsx"() {
    "use strict";
    init_use_query_params();
  }
});

// src/hooks/table/query/use-tax-rate-table-query.tsx
var useTaxRateTableQuery;
var init_use_tax_rate_table_query = __esm({
  "src/hooks/table/query/use-tax-rate-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useTaxRateTableQuery = ({
      prefix,
      pageSize = 20
    }) => {
      const queryObject = useQueryParams(
        ["offset", "q", "order", "created_at", "updated_at"],
        prefix
      );
      const { offset: offset4, q, order, created_at, updated_at } = queryObject;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        order,
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0,
        q
      };
      return {
        searchParams,
        raw: queryObject
      };
    };
  }
});

// src/hooks/table/query/use-tax-region-table-query.tsx
var useTaxRegionTableQuery;
var init_use_tax_region_table_query = __esm({
  "src/hooks/table/query/use-tax-region-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useTaxRegionTableQuery = ({
      prefix,
      pageSize = 20
    }) => {
      const queryObject = useQueryParams(
        ["offset", "q", "order", "created_at", "updated_at"],
        prefix
      );
      const { offset: offset4, q, order, created_at, updated_at } = queryObject;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        order,
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0,
        q
      };
      return {
        searchParams,
        raw: queryObject
      };
    };
  }
});

// src/hooks/table/query/use-user-invite-table-query.tsx
var useUserInviteTableQuery;
var init_use_user_invite_table_query = __esm({
  "src/hooks/table/query/use-user-invite-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useUserInviteTableQuery = ({
      prefix,
      pageSize = 20
    }) => {
      const queryObject = useQueryParams(
        ["offset", "q", "order", "created_at", "updated_at"],
        prefix
      );
      const { offset: offset4, created_at, updated_at, q, order } = queryObject;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        order,
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0,
        q
      };
      return {
        searchParams,
        raw: queryObject
      };
    };
  }
});

// src/hooks/table/query/index.ts
var init_query = __esm({
  "src/hooks/table/query/index.ts"() {
    "use strict";
    init_use_campaign_table_query();
    init_use_collection_table_query();
    init_use_customer_group_table_query();
    init_use_customer_table_query();
    init_use_order_table_query();
    init_use_product_table_query();
    init_use_product_tag_table_query();
    init_use_product_type_table_query();
    init_use_region_table_query();
    init_use_return_reason_table_query();
    init_use_sales_channel_table_query();
    init_use_shipping_option_table_query();
    init_use_tax_rate_table_query();
    init_use_tax_region_table_query();
    init_use_user_invite_table_query();
  }
});

// src/routes/products/product-export/product-export.tsx
var import_ui72, import_react_i18next68, import_jsx_runtime121, ProductExport, ProductExportContent;
var init_product_export = __esm({
  "src/routes/products/product-export/product-export.tsx"() {
    "use strict";
    import_ui72 = require("@medusajs/ui");
    init_modals();
    import_react_i18next68 = require("react-i18next");
    init_export_filters();
    init_api();
    init_query();
    import_jsx_runtime121 = require("react/jsx-runtime");
    ProductExport = () => {
      const { t: t4 } = (0, import_react_i18next68.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime121.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime121.jsxs)(RouteDrawer.Header, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime121.jsx)(RouteDrawer.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime121.jsx)(import_ui72.Heading, { children: t4("products.export.header") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime121.jsx)(RouteDrawer.Description, { className: "sr-only", children: t4("products.export.description") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime121.jsx)(ProductExportContent, {})
      ] });
    };
    ProductExportContent = () => {
      const { t: t4 } = (0, import_react_i18next68.useTranslation)();
      const { searchParams } = useProductTableQuery({});
      const { mutateAsync } = useExportProducts(searchParams);
      const { handleSuccess } = useRouteModal();
      const handleExportRequest = async () => {
        await mutateAsync(
          {},
          {
            onSuccess: () => {
              import_ui72.toast.info(t4("products.export.success.title"), {
                description: t4("products.export.success.description")
              });
              handleSuccess();
            },
            onError: (err) => {
              import_ui72.toast.error(err.message);
            }
          }
        );
      };
      return /* @__PURE__ */ (0, import_jsx_runtime121.jsxs)(import_jsx_runtime121.Fragment, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime121.jsx)(RouteDrawer.Body, { children: /* @__PURE__ */ (0, import_jsx_runtime121.jsx)(ExportFilters, {}) }),
        /* @__PURE__ */ (0, import_jsx_runtime121.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime121.jsxs)("div", { className: "flex items-center gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime121.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime121.jsx)(import_ui72.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime121.jsx)(import_ui72.Button, { onClick: handleExportRequest, size: "small", children: t4("actions.export") })
        ] }) })
      ] });
    };
  }
});

// src/routes/products/product-export/index.ts
var product_export_exports = {};
__export(product_export_exports, {
  Component: () => ProductExport
});
var init_product_export2 = __esm({
  "src/routes/products/product-export/index.ts"() {
    "use strict";
    init_product_export();
  }
});

// src/components/common/section/section-row.tsx
var import_ui73, import_jsx_runtime122, SectionRow;
var init_section_row = __esm({
  "src/components/common/section/section-row.tsx"() {
    "use strict";
    import_ui73 = require("@medusajs/ui");
    import_jsx_runtime122 = require("react/jsx-runtime");
    SectionRow = ({ title, value, actions }) => {
      const isValueString = typeof value === "string" || !value;
      return /* @__PURE__ */ (0, import_jsx_runtime122.jsxs)(
        "div",
        {
          className: (0, import_ui73.clx)(
            `text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4`,
            {
              "grid-cols-[1fr_1fr_28px]": !!actions
            }
          ),
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime122.jsx)(import_ui73.Text, { size: "small", weight: "plus", leading: "compact", children: title }),
            isValueString ? /* @__PURE__ */ (0, import_jsx_runtime122.jsx)(
              import_ui73.Text,
              {
                size: "small",
                leading: "compact",
                className: "whitespace-pre-line text-pretty",
                children: value ?? "-"
              }
            ) : /* @__PURE__ */ (0, import_jsx_runtime122.jsx)("div", { className: "flex flex-wrap gap-1", children: value }),
            actions && /* @__PURE__ */ (0, import_jsx_runtime122.jsx)("div", { children: actions })
          ]
        }
      );
    };
  }
});

// src/components/common/section/index.ts
var init_section = __esm({
  "src/components/common/section/index.ts"() {
    "use strict";
    init_section_row();
  }
});

// src/lib/addresses.ts
var isSameAddress, getFormattedAddress, getFormattedCountry;
var init_addresses = __esm({
  "src/lib/addresses.ts"() {
    "use strict";
    init_countries();
    isSameAddress = (a, b) => {
      if (!a || !b) {
        return false;
      }
      return a.first_name === b.first_name && a.last_name === b.last_name && a.address_1 === b.address_1 && a.address_2 === b.address_2 && a.city === b.city && a.postal_code === b.postal_code && a.province === b.province && a.country_code === b.country_code;
    };
    getFormattedAddress = ({
      address
    }) => {
      if (!address) {
        return [];
      }
      const {
        first_name,
        last_name,
        company,
        address_1,
        address_2,
        city,
        postal_code,
        province,
        country,
        country_code
      } = address;
      const name = [first_name, last_name].filter(Boolean).join(" ");
      const formattedAddress = [];
      if (name) {
        formattedAddress.push(name);
      }
      if (company) {
        formattedAddress.push(company);
      }
      if (address_1) {
        formattedAddress.push(address_1);
      }
      if (address_2) {
        formattedAddress.push(address_2);
      }
      const cityProvincePostal = [city, province, postal_code].filter(Boolean).join(" ");
      if (cityProvincePostal) {
        formattedAddress.push(cityProvincePostal);
      }
      if (country) {
        formattedAddress.push(country.display_name);
      } else if (country_code) {
        const country2 = getCountryByIso2(country_code);
        if (country2) {
          formattedAddress.push(country2.display_name);
        } else {
          formattedAddress.push(country_code.toUpperCase());
        }
      }
      return formattedAddress;
    };
    getFormattedCountry = (countryCode) => {
      if (!countryCode) {
        return "";
      }
      const country = countries.find((c) => c.iso_2 === countryCode);
      return country ? country.display_name : countryCode;
    };
  }
});

// src/routes/products/product-detail/components/product-attribute-section/product-attribute-section.tsx
var import_icons37, import_ui74, import_react_i18next69, import_jsx_runtime123, ProductAttributeSection;
var init_product_attribute_section = __esm({
  "src/routes/products/product-detail/components/product-attribute-section/product-attribute-section.tsx"() {
    "use strict";
    import_icons37 = require("@medusajs/icons");
    import_ui74 = require("@medusajs/ui");
    import_react_i18next69 = require("react-i18next");
    init_action_menu2();
    init_section();
    init_extensions();
    init_addresses();
    import_jsx_runtime123 = require("react/jsx-runtime");
    ProductAttributeSection = ({
      product
    }) => {
      const { t: t4 } = (0, import_react_i18next69.useTranslation)();
      const { getDisplays } = useDashboardExtension();
      return /* @__PURE__ */ (0, import_jsx_runtime123.jsxs)(import_ui74.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime123.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime123.jsx)(import_ui74.Heading, { level: "h2", children: t4("products.attributes") }),
          /* @__PURE__ */ (0, import_jsx_runtime123.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      label: t4("actions.edit"),
                      to: "attributes",
                      icon: /* @__PURE__ */ (0, import_jsx_runtime123.jsx)(import_icons37.PencilSquare, {})
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime123.jsx)(SectionRow, { title: t4("fields.height"), value: product.height }),
        /* @__PURE__ */ (0, import_jsx_runtime123.jsx)(SectionRow, { title: t4("fields.width"), value: product.width }),
        /* @__PURE__ */ (0, import_jsx_runtime123.jsx)(SectionRow, { title: t4("fields.length"), value: product.length }),
        /* @__PURE__ */ (0, import_jsx_runtime123.jsx)(SectionRow, { title: t4("fields.weight"), value: product.weight }),
        /* @__PURE__ */ (0, import_jsx_runtime123.jsx)(SectionRow, { title: t4("fields.midCode"), value: product.mid_code }),
        /* @__PURE__ */ (0, import_jsx_runtime123.jsx)(SectionRow, { title: t4("fields.hsCode"), value: product.hs_code }),
        /* @__PURE__ */ (0, import_jsx_runtime123.jsx)(
          SectionRow,
          {
            title: t4("fields.countryOfOrigin"),
            value: getFormattedCountry(product.origin_country)
          }
        ),
        getDisplays("product", "attributes").map((Component5, i) => {
          return /* @__PURE__ */ (0, import_jsx_runtime123.jsx)(Component5, { data: product }, i);
        })
      ] });
    };
  }
});

// src/routes/products/product-detail/components/product-attribute-section/index.ts
var init_product_attribute_section2 = __esm({
  "src/routes/products/product-detail/components/product-attribute-section/index.ts"() {
    "use strict";
    init_product_attribute_section();
  }
});

// src/routes/products/product-detail/components/product-general-section/product-general-section.tsx
var import_icons38, import_ui75, import_react_i18next70, import_react_router_dom29, import_jsx_runtime124, productStatusColor, ProductGeneralSection;
var init_product_general_section = __esm({
  "src/routes/products/product-detail/components/product-general-section/product-general-section.tsx"() {
    "use strict";
    import_icons38 = require("@medusajs/icons");
    import_ui75 = require("@medusajs/ui");
    import_react_i18next70 = require("react-i18next");
    import_react_router_dom29 = require("react-router-dom");
    init_action_menu2();
    init_section();
    init_extensions();
    init_products();
    import_jsx_runtime124 = require("react/jsx-runtime");
    productStatusColor = (status) => {
      switch (status) {
        case "draft":
          return "grey";
        case "proposed":
          return "orange";
        case "published":
          return "green";
        case "rejected":
          return "red";
        default:
          return "grey";
      }
    };
    ProductGeneralSection = ({
      product
    }) => {
      const { t: t4 } = (0, import_react_i18next70.useTranslation)();
      const prompt = (0, import_ui75.usePrompt)();
      const navigate = (0, import_react_router_dom29.useNavigate)();
      const { getDisplays } = useDashboardExtension();
      const displays = getDisplays("product", "general");
      const { mutateAsync } = useDeleteProduct(product.id);
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("products.deleteWarning", {
            title: product.title
          }),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            navigate("..");
          }
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime124.jsxs)(import_ui75.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime124.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime124.jsx)(import_ui75.Heading, { children: product.title }),
          /* @__PURE__ */ (0, import_jsx_runtime124.jsxs)("div", { className: "flex items-center gap-x-4", children: [
            /* @__PURE__ */ (0, import_jsx_runtime124.jsx)(import_ui75.StatusBadge, { color: productStatusColor(product.status), children: t4(`products.productStatus.${product.status}`) }),
            /* @__PURE__ */ (0, import_jsx_runtime124.jsx)(
              ActionMenu,
              {
                groups: [
                  {
                    actions: [
                      {
                        label: t4("actions.edit"),
                        to: "edit",
                        icon: /* @__PURE__ */ (0, import_jsx_runtime124.jsx)(import_icons38.PencilSquare, {})
                      }
                    ]
                  },
                  {
                    actions: [
                      {
                        label: t4("actions.delete"),
                        onClick: handleDelete,
                        icon: /* @__PURE__ */ (0, import_jsx_runtime124.jsx)(import_icons38.Trash, {})
                      }
                    ]
                  }
                ]
              }
            )
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime124.jsx)(SectionRow, { title: t4("fields.description"), value: product.description }),
        /* @__PURE__ */ (0, import_jsx_runtime124.jsx)(SectionRow, { title: t4("fields.subtitle"), value: product.subtitle }),
        /* @__PURE__ */ (0, import_jsx_runtime124.jsx)(SectionRow, { title: t4("fields.handle"), value: `/${product.handle}` }),
        /* @__PURE__ */ (0, import_jsx_runtime124.jsx)(
          SectionRow,
          {
            title: t4("fields.discountable"),
            value: product.discountable ? t4("fields.true") : t4("fields.false")
          }
        ),
        displays.map((Component5, index2) => {
          return /* @__PURE__ */ (0, import_jsx_runtime124.jsx)(Component5, { data: product }, index2);
        })
      ] });
    };
  }
});

// src/routes/products/product-detail/components/product-general-section/index.ts
var init_product_general_section2 = __esm({
  "src/routes/products/product-detail/components/product-general-section/index.ts"() {
    "use strict";
    init_product_general_section();
  }
});

// src/routes/products/product-detail/components/product-media-section/product-media-section.tsx
var import_icons39, import_ui76, import_react95, import_react_i18next71, import_react_router_dom30, import_jsx_runtime125, ProductMediaSection, getMedia;
var init_product_media_section = __esm({
  "src/routes/products/product-detail/components/product-media-section/product-media-section.tsx"() {
    "use strict";
    import_icons39 = require("@medusajs/icons");
    import_ui76 = require("@medusajs/ui");
    import_react95 = require("react");
    import_react_i18next71 = require("react-i18next");
    import_react_router_dom30 = require("react-router-dom");
    init_action_menu2();
    init_products();
    import_jsx_runtime125 = require("react/jsx-runtime");
    ProductMediaSection = ({ product }) => {
      const { t: t4 } = (0, import_react_i18next71.useTranslation)();
      const prompt = (0, import_ui76.usePrompt)();
      const [selection, setSelection] = (0, import_react95.useState)({});
      const media = getMedia(product);
      const handleCheckedChange = (id2) => {
        setSelection((prev) => {
          if (prev[id2]) {
            const { [id2]: _, ...rest } = prev;
            return rest;
          } else {
            return { ...prev, [id2]: true };
          }
        });
      };
      const { mutateAsync } = useUpdateProduct(product.id);
      const handleDelete = async () => {
        const ids = Object.keys(selection);
        const includingThumbnail = ids.some(
          (id2) => media.find((m) => m.id === id2)?.isThumbnail
        );
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: includingThumbnail ? t4("products.media.deleteWarningWithThumbnail", {
            count: ids.length
          }) : t4("products.media.deleteWarning", {
            count: ids.length
          }),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        const mediaToKeep = product.images.filter((i) => !ids.includes(i.id)).map((i) => ({ url: i.url }));
        await mutateAsync(
          {
            images: mediaToKeep,
            thumbnail: includingThumbnail ? "" : void 0
          },
          {
            onSuccess: () => {
              setSelection({});
            }
          }
        );
      };
      return /* @__PURE__ */ (0, import_jsx_runtime125.jsxs)(import_ui76.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime125.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime125.jsx)(import_ui76.Heading, { level: "h2", children: t4("products.media.label") }),
          /* @__PURE__ */ (0, import_jsx_runtime125.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      label: t4("actions.edit"),
                      to: "media?view=edit",
                      icon: /* @__PURE__ */ (0, import_jsx_runtime125.jsx)(import_icons39.PencilSquare, {})
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        media.length > 0 ? /* @__PURE__ */ (0, import_jsx_runtime125.jsx)("div", { className: "grid grid-cols-[repeat(auto-fill,minmax(96px,1fr))] gap-4 px-6 py-4", children: media.map((i, index2) => {
          const isSelected2 = selection[i.id];
          return /* @__PURE__ */ (0, import_jsx_runtime125.jsxs)(
            "div",
            {
              className: "shadow-elevation-card-rest hover:shadow-elevation-card-hover transition-fg group relative aspect-square size-full cursor-pointer overflow-hidden rounded-[8px]",
              children: [
                /* @__PURE__ */ (0, import_jsx_runtime125.jsx)(
                  "div",
                  {
                    className: (0, import_ui76.clx)(
                      "transition-fg invisible absolute right-2 top-2 opacity-0 group-hover:visible group-hover:opacity-100",
                      {
                        "visible opacity-100": isSelected2
                      }
                    ),
                    children: /* @__PURE__ */ (0, import_jsx_runtime125.jsx)(
                      import_ui76.Checkbox,
                      {
                        checked: selection[i.id] || false,
                        onCheckedChange: () => handleCheckedChange(i.id)
                      }
                    )
                  }
                ),
                i.isThumbnail && /* @__PURE__ */ (0, import_jsx_runtime125.jsx)("div", { className: "absolute left-2 top-2", children: /* @__PURE__ */ (0, import_jsx_runtime125.jsx)(import_ui76.Tooltip, { content: t4("fields.thumbnail"), children: /* @__PURE__ */ (0, import_jsx_runtime125.jsx)(import_icons39.ThumbnailBadge, {}) }) }),
                /* @__PURE__ */ (0, import_jsx_runtime125.jsx)(import_react_router_dom30.Link, { to: `media`, state: { curr: index2 }, children: /* @__PURE__ */ (0, import_jsx_runtime125.jsx)(
                  "img",
                  {
                    src: i.url,
                    alt: `${product.title} image`,
                    className: "size-full object-cover"
                  }
                ) })
              ]
            },
            i.id
          );
        }) }) : /* @__PURE__ */ (0, import_jsx_runtime125.jsxs)("div", { className: "flex flex-col items-center gap-y-4 pb-8 pt-6", children: [
          /* @__PURE__ */ (0, import_jsx_runtime125.jsxs)("div", { className: "flex flex-col items-center", children: [
            /* @__PURE__ */ (0, import_jsx_runtime125.jsx)(
              import_ui76.Text,
              {
                size: "small",
                leading: "compact",
                weight: "plus",
                className: "text-ui-fg-subtle",
                children: t4("products.media.emptyState.header")
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime125.jsx)(import_ui76.Text, { size: "small", className: "text-ui-fg-muted", children: t4("products.media.emptyState.description") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime125.jsx)(import_ui76.Button, { size: "small", variant: "secondary", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime125.jsx)(import_react_router_dom30.Link, { to: "media?view=edit", children: t4("products.media.emptyState.action") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime125.jsx)(import_ui76.CommandBar, { open: !!Object.keys(selection).length, children: /* @__PURE__ */ (0, import_jsx_runtime125.jsxs)(import_ui76.CommandBar.Bar, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime125.jsx)(import_ui76.CommandBar.Value, { children: t4("general.countSelected", {
            count: Object.keys(selection).length
          }) }),
          /* @__PURE__ */ (0, import_jsx_runtime125.jsx)(import_ui76.CommandBar.Seperator, {}),
          /* @__PURE__ */ (0, import_jsx_runtime125.jsx)(
            import_ui76.CommandBar.Command,
            {
              action: handleDelete,
              label: t4("actions.delete"),
              shortcut: "d"
            }
          )
        ] }) })
      ] });
    };
    getMedia = (product) => {
      const { images = [], thumbnail } = product;
      const media = images.map((image) => ({
        id: image.id,
        url: image.url,
        isThumbnail: image.url === thumbnail
      }));
      if (thumbnail && !media.some((mediaItem) => mediaItem.url === thumbnail)) {
        media.unshift({
          id: "img_thumbnail",
          url: thumbnail,
          isThumbnail: true
        });
      }
      return media;
    };
  }
});

// src/routes/products/product-detail/components/product-media-section/index.ts
var init_product_media_section2 = __esm({
  "src/routes/products/product-detail/components/product-media-section/index.ts"() {
    "use strict";
    init_product_media_section();
  }
});

// src/routes/products/product-detail/components/product-option-section/product-option-section.tsx
var import_icons40, import_ui77, import_react_i18next72, import_jsx_runtime126, OptionActions, ProductOptionSection;
var init_product_option_section = __esm({
  "src/routes/products/product-detail/components/product-option-section/product-option-section.tsx"() {
    "use strict";
    import_icons40 = require("@medusajs/icons");
    import_ui77 = require("@medusajs/ui");
    import_react_i18next72 = require("react-i18next");
    init_action_menu2();
    init_section();
    init_products();
    import_jsx_runtime126 = require("react/jsx-runtime");
    OptionActions = ({
      product,
      option
    }) => {
      const { t: t4 } = (0, import_react_i18next72.useTranslation)();
      const { mutateAsync } = useDeleteProductOption(product.id, option.id);
      const prompt = (0, import_ui77.usePrompt)();
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("products.options.deleteWarning", {
            title: option.title
          }),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync();
      };
      return /* @__PURE__ */ (0, import_jsx_runtime126.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  label: t4("actions.edit"),
                  to: `options/${option.id}/edit`,
                  icon: /* @__PURE__ */ (0, import_jsx_runtime126.jsx)(import_icons40.PencilSquare, {})
                }
              ]
            },
            {
              actions: [
                {
                  label: t4("actions.delete"),
                  onClick: handleDelete,
                  icon: /* @__PURE__ */ (0, import_jsx_runtime126.jsx)(import_icons40.Trash, {})
                }
              ]
            }
          ]
        }
      );
    };
    ProductOptionSection = ({
      product
    }) => {
      const { t: t4 } = (0, import_react_i18next72.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime126.jsxs)(import_ui77.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime126.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime126.jsx)(import_ui77.Heading, { level: "h2", children: t4("products.options.header") }),
          /* @__PURE__ */ (0, import_jsx_runtime126.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      label: t4("actions.create"),
                      to: "options/create",
                      icon: /* @__PURE__ */ (0, import_jsx_runtime126.jsx)(import_icons40.Plus, {})
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        product.options?.map((option) => {
          return /* @__PURE__ */ (0, import_jsx_runtime126.jsx)(
            SectionRow,
            {
              title: option.title,
              value: option.values?.map((val) => {
                return /* @__PURE__ */ (0, import_jsx_runtime126.jsx)(
                  import_ui77.Badge,
                  {
                    size: "2xsmall",
                    className: "flex min-w-[20px] items-center justify-center",
                    children: val.value
                  },
                  val.value
                );
              }),
              actions: /* @__PURE__ */ (0, import_jsx_runtime126.jsx)(OptionActions, { product, option })
            },
            option.id
          );
        })
      ] });
    };
  }
});

// src/routes/products/product-detail/components/product-option-section/index.ts
var init_product_option_section2 = __esm({
  "src/routes/products/product-detail/components/product-option-section/index.ts"() {
    "use strict";
    init_product_option_section();
  }
});

// src/routes/products/product-detail/components/product-organization-section/product-organization-section.tsx
var import_icons41, import_ui78, import_react_i18next73, import_react_router_dom31, import_jsx_runtime127, ProductOrganizationSection;
var init_product_organization_section = __esm({
  "src/routes/products/product-detail/components/product-organization-section/product-organization-section.tsx"() {
    "use strict";
    import_icons41 = require("@medusajs/icons");
    import_ui78 = require("@medusajs/ui");
    import_react_i18next73 = require("react-i18next");
    import_react_router_dom31 = require("react-router-dom");
    init_action_menu2();
    init_section();
    init_extensions();
    import_jsx_runtime127 = require("react/jsx-runtime");
    ProductOrganizationSection = ({
      product
    }) => {
      const { t: t4 } = (0, import_react_i18next73.useTranslation)();
      const { getDisplays } = useDashboardExtension();
      return /* @__PURE__ */ (0, import_jsx_runtime127.jsxs)(import_ui78.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime127.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(import_ui78.Heading, { level: "h2", children: t4("products.organization.header") }),
          /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      label: t4("actions.edit"),
                      to: "organization",
                      icon: /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(import_icons41.PencilSquare, {})
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(
          SectionRow,
          {
            title: t4("fields.tags"),
            value: product.tags?.length ? product.tags.map((tag) => /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(import_ui78.Badge, { className: "w-fit", size: "2xsmall", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(import_react_router_dom31.Link, { to: `/products?tag_id=${tag.id}`, children: tag.value }) }, tag.id)) : void 0
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(
          SectionRow,
          {
            title: t4("fields.type"),
            value: product.type ? /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(import_ui78.Badge, { size: "2xsmall", className: "w-fit", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(import_react_router_dom31.Link, { to: `/products?type_id=${product.type_id}`, children: product.type.value }) }) : void 0
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(
          SectionRow,
          {
            title: t4("fields.collection"),
            value: product.collection ? /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(import_ui78.Badge, { size: "2xsmall", className: "w-fit", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(import_react_router_dom31.Link, { to: `/collections/${product.collection.id}`, children: product.collection.title }) }) : void 0
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(
          SectionRow,
          {
            title: t4("fields.categories"),
            value: product.categories?.length ? product.categories.map((pcat) => /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(import_ui78.Badge, { className: "w-fit", size: "2xsmall", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(import_react_router_dom31.Link, { to: `/categories/${pcat.id}`, children: pcat.name }) }, pcat.id)) : void 0
          }
        ),
        getDisplays("product", "organize").map((Component5, i) => {
          return /* @__PURE__ */ (0, import_jsx_runtime127.jsx)(Component5, { data: product }, i);
        })
      ] });
    };
  }
});

// src/routes/products/product-detail/components/product-organization-section/index.ts
var init_product_organization_section2 = __esm({
  "src/routes/products/product-detail/components/product-organization-section/index.ts"() {
    "use strict";
    init_product_organization_section();
  }
});

// src/routes/products/product-detail/components/product-sales-channel-section/product-sales-channel-section.tsx
var import_icons42, import_ui79, import_react_i18next74, import_jsx_runtime128, ProductSalesChannelSection;
var init_product_sales_channel_section = __esm({
  "src/routes/products/product-detail/components/product-sales-channel-section/product-sales-channel-section.tsx"() {
    "use strict";
    import_icons42 = require("@medusajs/icons");
    import_ui79 = require("@medusajs/ui");
    import_react_i18next74 = require("react-i18next");
    init_action_menu2();
    init_sales_channels();
    import_jsx_runtime128 = require("react/jsx-runtime");
    ProductSalesChannelSection = ({
      product
    }) => {
      const { count: count3 } = useSalesChannels();
      const { t: t4 } = (0, import_react_i18next74.useTranslation)();
      const availableInSalesChannels = product.sales_channels?.map((sc) => ({
        id: sc.id,
        name: sc.name
      })) ?? [];
      const firstChannels = availableInSalesChannels.slice(0, 3);
      const restChannels = availableInSalesChannels.slice(3);
      return /* @__PURE__ */ (0, import_jsx_runtime128.jsxs)(import_ui79.Container, { className: "flex flex-col gap-y-4 px-6 py-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime128.jsxs)("div", { className: "flex items-center justify-between", children: [
          /* @__PURE__ */ (0, import_jsx_runtime128.jsx)(import_ui79.Heading, { level: "h2", children: t4("fields.sales_channels") }),
          /* @__PURE__ */ (0, import_jsx_runtime128.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      label: t4("actions.edit"),
                      to: "sales-channels",
                      icon: /* @__PURE__ */ (0, import_jsx_runtime128.jsx)(import_icons42.PencilSquare, {})
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime128.jsxs)("div", { className: "grid grid-cols-[28px_1fr] items-center gap-x-3", children: [
          /* @__PURE__ */ (0, import_jsx_runtime128.jsx)("div", { className: "bg-ui-bg-base shadow-borders-base flex size-7 items-center justify-center rounded-md", children: /* @__PURE__ */ (0, import_jsx_runtime128.jsx)("div", { className: "bg-ui-bg-component flex size-6 items-center justify-center rounded-[4px]", children: /* @__PURE__ */ (0, import_jsx_runtime128.jsx)(import_icons42.Channels, { className: "text-ui-fg-subtle" }) }) }),
          availableInSalesChannels.length > 0 ? /* @__PURE__ */ (0, import_jsx_runtime128.jsxs)("div", { className: "flex items-center gap-x-1", children: [
            /* @__PURE__ */ (0, import_jsx_runtime128.jsx)(import_ui79.Text, { size: "small", leading: "compact", children: firstChannels.map((sc) => sc.name).join(", ") }),
            restChannels.length > 0 && /* @__PURE__ */ (0, import_jsx_runtime128.jsx)(
              import_ui79.Tooltip,
              {
                content: /* @__PURE__ */ (0, import_jsx_runtime128.jsx)("ul", { children: restChannels.map((sc) => /* @__PURE__ */ (0, import_jsx_runtime128.jsx)("li", { children: sc.name }, sc.id)) }),
                children: /* @__PURE__ */ (0, import_jsx_runtime128.jsx)(
                  import_ui79.Text,
                  {
                    size: "small",
                    leading: "compact",
                    className: "text-ui-fg-subtle",
                    children: `+${restChannels.length}`
                  }
                )
              }
            )
          ] }) : /* @__PURE__ */ (0, import_jsx_runtime128.jsx)(import_ui79.Text, { size: "small", leading: "compact", className: "text-ui-fg-subtle", children: t4("products.noSalesChannels") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime128.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime128.jsx)(import_ui79.Text, { className: "text-ui-fg-subtle", size: "small", leading: "compact", children: /* @__PURE__ */ (0, import_jsx_runtime128.jsx)(
          import_react_i18next74.Trans,
          {
            i18nKey: "sales_channels.availableIn",
            values: {
              x: availableInSalesChannels.length,
              y: count3 ?? 0
            },
            components: [
              /* @__PURE__ */ (0, import_jsx_runtime128.jsx)(
                "span",
                {
                  className: "text-ui-fg-base txt-compact-medium-plus"
                },
                "x"
              ),
              /* @__PURE__ */ (0, import_jsx_runtime128.jsx)(
                "span",
                {
                  className: "text-ui-fg-base txt-compact-medium-plus"
                },
                "y"
              )
            ]
          }
        ) }) })
      ] });
    };
  }
});

// src/routes/products/product-detail/components/product-sales-channel-section/index.ts
var init_product_sales_channel_section2 = __esm({
  "src/routes/products/product-detail/components/product-sales-channel-section/index.ts"() {
    "use strict";
    init_product_sales_channel_section();
  }
});

// src/routes/products/product-detail/components/product-variant-section/use-variant-table-columns.tsx
var import_icons43, import_ui80, import_react_table9, import_react96, import_react_i18next75, import_jsx_runtime129, VariantActions, columnHelper6, useProductVariantTableColumns;
var init_use_variant_table_columns = __esm({
  "src/routes/products/product-detail/components/product-variant-section/use-variant-table-columns.tsx"() {
    "use strict";
    import_icons43 = require("@medusajs/icons");
    import_ui80 = require("@medusajs/ui");
    import_react_table9 = require("@tanstack/react-table");
    import_react96 = require("react");
    import_react_i18next75 = require("react-i18next");
    init_action_menu2();
    init_placeholder_cell2();
    init_products();
    import_jsx_runtime129 = require("react/jsx-runtime");
    VariantActions = ({
      variant,
      product
    }) => {
      const { mutateAsync } = useDeleteVariant(product.id, variant.id);
      const { t: t4 } = (0, import_react_i18next75.useTranslation)();
      const prompt = (0, import_ui80.usePrompt)();
      const inventoryItemsCount = variant.inventory_items?.length || 0;
      const hasInventoryItem = inventoryItemsCount === 1;
      const hasInventoryKit = inventoryItemsCount > 1;
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("products.deleteVariantWarning", {
            title: variant.title
          }),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync();
      };
      const [inventoryItemLink, inventoryKitLink] = (0, import_react96.useMemo)(() => {
        if (!variant.inventory_items?.length) {
          return ["", ""];
        }
        const itemId = variant.inventory_items[0].inventory.id;
        const itemLink = `/inventory/${itemId}`;
        const itemIds = variant.inventory_items.map((i) => i.inventory.id);
        const params2 = { id: itemIds };
        const query = new URLSearchParams(params2).toString();
        const kitLink = `/inventory?${query}`;
        return [itemLink, kitLink];
      }, [variant.inventory_items]);
      return /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  label: t4("actions.edit"),
                  to: `edit-variant?variant_id=${variant.id}`,
                  icon: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(import_icons43.PencilSquare, {})
                },
                {
                  label: t4("actions.delete"),
                  onClick: handleDelete,
                  icon: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(import_icons43.Trash, {})
                },
                hasInventoryItem ? {
                  label: t4("products.variant.inventory.actions.inventoryItems"),
                  to: inventoryItemLink,
                  icon: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(import_icons43.Buildings, {})
                } : false,
                hasInventoryKit ? {
                  label: t4("products.variant.inventory.actions.inventoryKit"),
                  to: inventoryKitLink,
                  icon: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(import_icons43.Component, {})
                } : false
              ].filter(Boolean)
            }
          ]
        }
      );
    };
    columnHelper6 = (0, import_react_table9.createColumnHelper)();
    useProductVariantTableColumns = (product) => {
      const { t: t4 } = (0, import_react_i18next75.useTranslation)();
      const optionColumns = (0, import_react96.useMemo)(() => {
        if (!product?.options) {
          return [];
        }
        return product.options.map((option) => {
          return columnHelper6.display({
            id: option.id,
            header: () => /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("span", { className: "truncate", children: option.title }) }),
            cell: ({ row }) => {
              const variantOpt = row.original.options?.find(
                (opt) => opt.option_id === option.id
              );
              if (!variantOpt) {
                return /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(PlaceholderCell, {});
              }
              return /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("div", { className: "flex items-center", children: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(
                import_ui80.Badge,
                {
                  size: "2xsmall",
                  title: variantOpt.value,
                  className: "inline-flex min-w-[20px] max-w-[140px] items-center justify-center overflow-hidden truncate",
                  children: variantOpt.value
                }
              ) });
            }
          });
        });
      }, [product]);
      return (0, import_react96.useMemo)(
        () => [
          columnHelper6.accessor("title", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("span", { className: "truncate", children: t4("fields.title") }) }),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("div", { className: "flex h-full w-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("span", { className: "truncate", children: getValue2() }) })
          }),
          columnHelper6.accessor("sku", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("span", { className: "truncate", children: t4("fields.sku") }) }),
            cell: ({ getValue: getValue2 }) => {
              const value = getValue2();
              if (!value) {
                return /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(PlaceholderCell, {});
              }
              return /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("div", { className: "flex h-full w-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("span", { className: "truncate", children: value }) });
            }
          }),
          ...optionColumns,
          columnHelper6.accessor("inventory_items", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime129.jsx)("span", { className: "truncate", children: t4("fields.inventory") }) }),
            cell: ({ getValue: getValue2, row }) => {
              const variant = row.original;
              if (!variant.manage_inventory) {
                return t4("products.variant.inventory.notManaged");
              }
              const inventory = getValue2().map(
                (i) => i.inventory
              );
              const hasInventoryKit = inventory.length > 1;
              const locations = {};
              inventory.forEach((i) => {
                i.location_levels.forEach((l) => {
                  locations[l.id] = true;
                });
              });
              const locationCount = Object.keys(locations).length;
              const text = hasInventoryKit ? t4("products.variant.tableItemAvailable", {
                availableCount: variant.inventory_quantity
              }) : t4("products.variant.tableItem", {
                availableCount: variant.inventory_quantity,
                locationCount,
                count: locationCount
              });
              return /* @__PURE__ */ (0, import_jsx_runtime129.jsxs)("div", { className: "flex h-full w-full items-center gap-2 overflow-hidden", children: [
                hasInventoryKit && /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(import_icons43.Component, { style: { marginTop: 1 } }),
                /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(
                  "span",
                  {
                    className: (0, import_ui80.clx)("truncate", {
                      "text-ui-fg-error": !variant.inventory_quantity
                    }),
                    title: text,
                    children: text
                  }
                )
              ] });
            }
          }),
          columnHelper6.display({
            id: "actions",
            cell: ({ row, table }) => {
              const { product: product2 } = table.options.meta;
              return /* @__PURE__ */ (0, import_jsx_runtime129.jsx)(VariantActions, { variant: row.original, product: product2 });
            }
          })
        ],
        [t4, optionColumns]
      );
    };
  }
});

// src/routes/products/product-detail/components/product-variant-section/use-variant-table-filters.tsx
var import_react_i18next76, useProductVariantTableFilters;
var init_use_variant_table_filters = __esm({
  "src/routes/products/product-detail/components/product-variant-section/use-variant-table-filters.tsx"() {
    "use strict";
    import_react_i18next76 = require("react-i18next");
    useProductVariantTableFilters = () => {
      const { t: t4 } = (0, import_react_i18next76.useTranslation)();
      let filters = [];
      const manageInventoryFilter = {
        key: "manage_inventory",
        label: t4("fields.managedInventory"),
        type: "select",
        options: [
          {
            label: t4("fields.true"),
            value: "true"
          },
          {
            label: t4("fields.false"),
            value: "false"
          }
        ]
      };
      const allowBackorderFilter = {
        key: "allow_backorder",
        label: t4("fields.allowBackorder"),
        type: "select",
        options: [
          {
            label: t4("fields.true"),
            value: "true"
          },
          {
            label: t4("fields.false"),
            value: "false"
          }
        ]
      };
      const dateFilters = [
        { label: t4("fields.createdAt"), key: "created_at" },
        { label: t4("fields.updatedAt"), key: "updated_at" }
      ].map((f) => ({
        key: f.key,
        label: f.label,
        type: "date"
      }));
      filters = [
        ...filters,
        manageInventoryFilter,
        allowBackorderFilter,
        ...dateFilters
      ];
      return filters;
    };
  }
});

// src/routes/products/product-detail/components/product-variant-section/use-variant-table-query.tsx
var useProductVariantTableQuery;
var init_use_variant_table_query = __esm({
  "src/routes/products/product-detail/components/product-variant-section/use-variant-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useProductVariantTableQuery = ({
      pageSize,
      prefix
    }) => {
      const queryObject = useQueryParams(
        [
          "offset",
          "q",
          "manage_inventory",
          "allow_backorder",
          "order",
          "created_at",
          "updated_at"
        ],
        prefix
      );
      const {
        offset: offset4,
        manage_inventory,
        allow_backorder,
        created_at,
        updated_at,
        q,
        order
      } = queryObject;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        manage_inventory: manage_inventory ? manage_inventory === "true" : void 0,
        allow_backorder: allow_backorder ? allow_backorder === "true" : void 0,
        order,
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0,
        q
      };
      return {
        searchParams,
        raw: queryObject
      };
    };
  }
});

// src/routes/products/product-detail/components/product-variant-section/product-variant-section.tsx
var import_icons44, import_ui81, import_react_query44, import_react_i18next77, import_jsx_runtime130, PAGE_SIZE3, ProductVariantSection;
var init_product_variant_section = __esm({
  "src/routes/products/product-detail/components/product-variant-section/product-variant-section.tsx"() {
    "use strict";
    import_icons44 = require("@medusajs/icons");
    import_ui81 = require("@medusajs/ui");
    import_react_query44 = require("@tanstack/react-query");
    import_react_i18next77 = require("react-i18next");
    init_action_menu2();
    init_data_table2();
    init_products();
    init_use_data_table();
    init_use_variant_table_columns();
    init_use_variant_table_filters();
    init_use_variant_table_query();
    import_jsx_runtime130 = require("react/jsx-runtime");
    PAGE_SIZE3 = 10;
    ProductVariantSection = ({
      product
    }) => {
      const { t: t4 } = (0, import_react_i18next77.useTranslation)();
      const { searchParams, raw } = useProductVariantTableQuery({
        pageSize: PAGE_SIZE3
      });
      const { variants, count: count3, isLoading, isError, error } = useProductVariants(
        product.id,
        {
          ...searchParams,
          fields: "*inventory_items.inventory.location_levels,+inventory_quantity"
        },
        {
          placeholderData: import_react_query44.keepPreviousData
        }
      );
      const filters = useProductVariantTableFilters();
      const columns = useProductVariantTableColumns(product);
      const { table } = useDataTable({
        data: variants ?? [],
        columns,
        count: count3,
        enablePagination: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE3,
        meta: {
          product
        }
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime130.jsxs)(import_ui81.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime130.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime130.jsx)(import_ui81.Heading, { level: "h2", children: t4("products.variants") }),
          /* @__PURE__ */ (0, import_jsx_runtime130.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      label: t4("actions.create"),
                      to: `variants/create`,
                      icon: /* @__PURE__ */ (0, import_jsx_runtime130.jsx)(import_icons44.Plus, {})
                    },
                    {
                      label: t4("products.editPrices"),
                      to: `prices`,
                      icon: /* @__PURE__ */ (0, import_jsx_runtime130.jsx)(import_icons44.PencilSquare, {})
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime130.jsx)(
          DataTable,
          {
            table,
            columns,
            filters,
            count: count3,
            pageSize: PAGE_SIZE3,
            isLoading,
            orderBy: [
              { key: "title", label: t4("fields.title") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            navigateTo: (row) => `/products/${row.original.product_id}/variants/${row.id}`,
            pagination: true,
            search: true,
            queryObject: raw
          }
        )
      ] });
    };
  }
});

// src/routes/products/product-detail/components/product-variant-section/index.ts
var init_product_variant_section2 = __esm({
  "src/routes/products/product-detail/components/product-variant-section/index.ts"() {
    "use strict";
    init_product_variant_section();
  }
});

// src/routes/products/product-detail/product-detail.tsx
var import_react_router_dom32, import_jsx_runtime131, ProductDetail;
var init_product_detail = __esm({
  "src/routes/products/product-detail/product-detail.tsx"() {
    "use strict";
    import_react_router_dom32 = require("react-router-dom");
    init_skeleton2();
    init_pages();
    init_products();
    init_product_attribute_section2();
    init_product_general_section2();
    init_product_media_section2();
    init_product_option_section2();
    init_product_organization_section2();
    init_product_sales_channel_section2();
    init_product_variant_section2();
    init_constants2();
    init_extensions();
    import_jsx_runtime131 = require("react/jsx-runtime");
    ProductDetail = () => {
      const initialData = (0, import_react_router_dom32.useLoaderData)();
      const { id: id2 } = (0, import_react_router_dom32.useParams)();
      const { product, isLoading, isError, error } = useProduct(
        id2,
        { fields: PRODUCT_DETAIL_FIELDS },
        {
          initialData
        }
      );
      const { getWidgets } = useDashboardExtension();
      const after = getWidgets("product.details.after");
      const before = getWidgets("product.details.before");
      const sideAfter = getWidgets("product.details.side.after");
      const sideBefore = getWidgets("product.details.side.before");
      if (isLoading || !product) {
        return /* @__PURE__ */ (0, import_jsx_runtime131.jsx)(
          TwoColumnPageSkeleton,
          {
            mainSections: 4,
            sidebarSections: 3,
            showJSON: true,
            showMetadata: true
          }
        );
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime131.jsxs)(
        TwoColumnPage,
        {
          widgets: {
            after,
            before,
            sideAfter,
            sideBefore
          },
          showJSON: true,
          showMetadata: true,
          data: product,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime131.jsxs)(TwoColumnPage.Main, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime131.jsx)(ProductGeneralSection, { product }),
              /* @__PURE__ */ (0, import_jsx_runtime131.jsx)(ProductMediaSection, { product }),
              /* @__PURE__ */ (0, import_jsx_runtime131.jsx)(ProductOptionSection, { product }),
              /* @__PURE__ */ (0, import_jsx_runtime131.jsx)(ProductVariantSection, { product })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime131.jsxs)(TwoColumnPage.Sidebar, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime131.jsx)(ProductSalesChannelSection, { product }),
              /* @__PURE__ */ (0, import_jsx_runtime131.jsx)(ProductOrganizationSection, { product }),
              /* @__PURE__ */ (0, import_jsx_runtime131.jsx)(ProductAttributeSection, { product })
            ] })
          ]
        }
      );
    };
  }
});

// src/routes/products/product-detail/index.ts
var product_detail_exports = {};
__export(product_detail_exports, {
  Component: () => ProductDetail,
  loader: () => productLoader
});
var init_product_detail2 = __esm({
  "src/routes/products/product-detail/index.ts"() {
    "use strict";
    init_loader();
    init_product_detail();
  }
});

// src/lib/form-helpers.ts
function transformNullableFormValue(value, nullify = true) {
  if (typeof value === "string" && value.trim() === "") {
    return nullify ? null : void 0;
  }
  if (Array.isArray(value) && value.length === 0) {
    return nullify ? null : void 0;
  }
  return value;
}
function transformNullableFormData(data, nullify = true) {
  return Object.entries(data).reduce((acc, [key, value]) => {
    return {
      ...acc,
      [key]: transformNullableFormValue(value, nullify)
    };
  }, {});
}
function transformNullableFormNumber(value, nullify = true) {
  if (typeof value === "undefined" || typeof value === "string" && value.trim() === "") {
    return nullify ? null : void 0;
  }
  if (typeof value === "string") {
    return castNumber(value);
  }
  return value;
}
function transformNullableFormNumbers(data, nullify = true) {
  return Object.entries(data).reduce((acc, [key, value]) => {
    return {
      ...acc,
      [key]: transformNullableFormNumber(value, nullify)
    };
  }, {});
}
var init_form_helpers = __esm({
  "src/lib/form-helpers.ts"() {
    "use strict";
    init_cast_number();
  }
});

// src/routes/products/product-edit/components/edit-product-form/edit-product-form.tsx
var import_ui82, import_react_i18next78, zod, import_jsx_runtime132, EditProductSchema, EditProductForm;
var init_edit_product_form = __esm({
  "src/routes/products/product-edit/components/edit-product-form/edit-product-form.tsx"() {
    "use strict";
    import_ui82 = require("@medusajs/ui");
    import_react_i18next78 = require("react-i18next");
    zod = __toESM(require("zod"));
    init_form2();
    init_switch_box2();
    init_modals();
    init_hooks();
    init_products();
    init_form_helpers();
    init_keybound_form2();
    init_extensions();
    import_jsx_runtime132 = require("react/jsx-runtime");
    EditProductSchema = zod.object({
      status: zod.enum(["draft", "published", "proposed", "rejected"]),
      title: zod.string().min(1),
      subtitle: zod.string().optional(),
      handle: zod.string().min(1),
      material: zod.string().optional(),
      description: zod.string().optional(),
      discountable: zod.boolean()
    });
    EditProductForm = ({ product }) => {
      const { t: t4 } = (0, import_react_i18next78.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const { getFormFields, getFormConfigs } = useDashboardExtension();
      const fields = getFormFields("product", "edit");
      const configs = getFormConfigs("product", "edit");
      const form = useExtendableForm({
        defaultValues: {
          status: product.status,
          title: product.title,
          material: product.material || "",
          subtitle: product.subtitle || "",
          handle: product.handle || "",
          description: product.description || "",
          discountable: product.discountable
        },
        schema: EditProductSchema,
        configs,
        data: product
      });
      const { mutateAsync, isPending } = useUpdateProduct(product.id);
      const handleSubmit = form.handleSubmit(async (data) => {
        const { title, discountable, handle, status, ...optional } = data;
        const nullableData = transformNullableFormData(optional);
        await mutateAsync(
          {
            title,
            discountable,
            handle,
            status,
            ...nullableData
          },
          {
            onSuccess: () => {
              handleSuccess();
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime132.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex flex-1 flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(RouteDrawer.Body, { className: "flex flex-1 flex-col gap-y-8 overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime132.jsxs)("div", { className: "flex flex-col gap-y-8", children: [
              /* @__PURE__ */ (0, import_jsx_runtime132.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "status",
                    render: ({ field: { onChange, ref, ...field } }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime132.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(Form.Label, { children: t4("fields.status") }),
                        /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime132.jsxs)(import_ui82.Select, { ...field, onValueChange: onChange, children: [
                          /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(import_ui82.Select.Trigger, { ref, children: /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(import_ui82.Select.Value, {}) }),
                          /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(import_ui82.Select.Content, { children: [
                            "draft",
                            "published",
                            "proposed",
                            "rejected"
                          ].map((status) => {
                            return /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(import_ui82.Select.Item, { value: status, children: t4(`products.productStatus.${status}`) }, status);
                          }) })
                        ] }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "title",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime132.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(Form.Label, { children: t4("fields.title") }),
                        /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(import_ui82.Input, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "subtitle",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime132.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(Form.Label, { optional: true, children: t4("fields.subtitle") }),
                        /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(import_ui82.Input, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "handle",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime132.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(Form.Label, { children: t4("fields.handle") }),
                        /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime132.jsxs)("div", { className: "relative", children: [
                          /* @__PURE__ */ (0, import_jsx_runtime132.jsx)("div", { className: "absolute inset-y-0 left-0 z-10 flex w-8 items-center justify-center border-r", children: /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(
                            import_ui82.Text,
                            {
                              className: "text-ui-fg-muted",
                              size: "small",
                              leading: "compact",
                              weight: "plus",
                              children: "/"
                            }
                          ) }),
                          /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(import_ui82.Input, { ...field, className: "pl-10" })
                        ] }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "material",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime132.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(Form.Label, { optional: true, children: t4("fields.material") }),
                        /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(import_ui82.Input, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "description",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime132.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(Form.Label, { optional: true, children: t4("fields.description") }),
                        /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(import_ui82.Textarea, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                )
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(
                SwitchBox,
                {
                  control: form.control,
                  name: "discountable",
                  label: t4("fields.discountable"),
                  description: t4("products.discountableHint")
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(FormExtensionZone, { fields, form })
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime132.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(import_ui82.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime132.jsx)(import_ui82.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/products/product-edit/components/edit-product-form/index.ts
var init_edit_product_form2 = __esm({
  "src/routes/products/product-edit/components/edit-product-form/index.ts"() {
    "use strict";
    init_edit_product_form();
  }
});

// src/routes/products/product-edit/product-edit.tsx
var import_ui83, import_react_i18next79, import_react_router_dom33, import_jsx_runtime133, ProductEdit;
var init_product_edit = __esm({
  "src/routes/products/product-edit/product-edit.tsx"() {
    "use strict";
    import_ui83 = require("@medusajs/ui");
    import_react_i18next79 = require("react-i18next");
    import_react_router_dom33 = require("react-router-dom");
    init_modals();
    init_products();
    init_constants2();
    init_edit_product_form2();
    import_jsx_runtime133 = require("react/jsx-runtime");
    ProductEdit = () => {
      const { id: id2 } = (0, import_react_router_dom33.useParams)();
      const { t: t4 } = (0, import_react_i18next79.useTranslation)();
      const { product, isLoading, isError, error } = useProduct(id2, {
        fields: PRODUCT_DETAIL_FIELDS
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime133.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime133.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime133.jsx)(RouteDrawer.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime133.jsx)(import_ui83.Heading, { children: t4("products.editProduct") }) }) }),
        !isLoading && product && /* @__PURE__ */ (0, import_jsx_runtime133.jsx)(EditProductForm, { product })
      ] });
    };
  }
});

// src/routes/products/product-edit/index.ts
var product_edit_exports = {};
__export(product_edit_exports, {
  Component: () => ProductEdit
});
var init_product_edit2 = __esm({
  "src/routes/products/product-edit/index.ts"() {
    "use strict";
    init_product_edit();
  }
});

// src/components/inputs/country-select/country-select.tsx
var import_react97, import_icons45, import_ui84, import_react_i18next80, import_jsx_runtime134, CountrySelect;
var init_country_select = __esm({
  "src/components/inputs/country-select/country-select.tsx"() {
    "use strict";
    import_react97 = require("react");
    import_icons45 = require("@medusajs/icons");
    import_ui84 = require("@medusajs/ui");
    import_react_i18next80 = require("react-i18next");
    init_countries();
    import_jsx_runtime134 = require("react/jsx-runtime");
    CountrySelect = (0, import_react97.forwardRef)(
      ({ className, disabled, placeholder, value, defaultValue, ...props }, ref) => {
        const { t: t4 } = (0, import_react_i18next80.useTranslation)();
        const innerRef = (0, import_react97.useRef)(null);
        (0, import_react97.useImperativeHandle)(ref, () => innerRef.current);
        const isPlaceholder = innerRef.current?.value === "";
        return /* @__PURE__ */ (0, import_jsx_runtime134.jsxs)("div", { className: "relative", children: [
          /* @__PURE__ */ (0, import_jsx_runtime134.jsx)(
            import_icons45.TrianglesMini,
            {
              className: (0, import_ui84.clx)(
                "text-ui-fg-muted transition-fg pointer-events-none absolute right-2 top-1/2 -translate-y-1/2",
                {
                  "text-ui-fg-disabled": disabled
                }
              )
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime134.jsxs)(
            "select",
            {
              value: value !== void 0 ? value.toLowerCase() : void 0,
              defaultValue: defaultValue ? defaultValue.toLowerCase() : void 0,
              disabled,
              className: (0, import_ui84.clx)(
                "bg-ui-bg-field shadow-buttons-neutral transition-fg txt-compact-small flex w-full select-none appearance-none items-center justify-between rounded-md px-2 py-1.5 outline-none",
                "placeholder:text-ui-fg-muted text-ui-fg-base",
                "hover:bg-ui-bg-field-hover",
                "focus-visible:shadow-borders-interactive-with-active data-[state=open]:!shadow-borders-interactive-with-active",
                "aria-[invalid=true]:border-ui-border-error aria-[invalid=true]:shadow-borders-error",
                "invalid::border-ui-border-error invalid:shadow-borders-error",
                "disabled:!bg-ui-bg-disabled disabled:!text-ui-fg-disabled",
                {
                  "text-ui-fg-muted": isPlaceholder
                },
                className
              ),
              ...props,
              ref: innerRef,
              children: [
                /* @__PURE__ */ (0, import_jsx_runtime134.jsx)("option", { value: "", disabled: true, className: "text-ui-fg-muted", children: placeholder || t4("fields.selectCountry") }),
                countries.map((country) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime134.jsx)("option", { value: country.iso_2.toLowerCase(), children: country.display_name }, country.iso_2);
                })
              ]
            }
          )
        ] });
      }
    );
    CountrySelect.displayName = "CountrySelect";
  }
});

// src/components/inputs/country-select/index.ts
var init_country_select2 = __esm({
  "src/components/inputs/country-select/index.ts"() {
    "use strict";
    init_country_select();
  }
});

// src/routes/product-variants/product-variant-edit/components/product-edit-variant-form/product-edit-variant-form.tsx
var import_zod6, import_ui85, import_react_hook_form15, import_react_i18next81, import_zod7, import_jsx_runtime135, ProductEditVariantSchema, ProductEditVariantForm;
var init_product_edit_variant_form = __esm({
  "src/routes/product-variants/product-variant-edit/components/product-edit-variant-form/product-edit-variant-form.tsx"() {
    "use strict";
    import_zod6 = require("@hookform/resolvers/zod");
    import_ui85 = require("@medusajs/ui");
    import_react_hook_form15 = require("react-hook-form");
    import_react_i18next81 = require("react-i18next");
    import_zod7 = require("zod");
    init_divider2();
    init_form2();
    init_combobox2();
    init_country_select2();
    init_modals();
    init_keybound_form2();
    init_products();
    init_form_helpers();
    init_validation();
    import_jsx_runtime135 = require("react/jsx-runtime");
    ProductEditVariantSchema = import_zod7.z.object({
      title: import_zod7.z.string().min(1),
      material: import_zod7.z.string().optional(),
      sku: import_zod7.z.string().optional(),
      ean: import_zod7.z.string().optional(),
      upc: import_zod7.z.string().optional(),
      barcode: import_zod7.z.string().optional(),
      manage_inventory: import_zod7.z.boolean(),
      allow_backorder: import_zod7.z.boolean(),
      weight: optionalInt,
      height: optionalInt,
      width: optionalInt,
      length: optionalInt,
      mid_code: import_zod7.z.string().optional(),
      hs_code: import_zod7.z.string().optional(),
      origin_country: import_zod7.z.string().optional(),
      options: import_zod7.z.record(import_zod7.z.string())
    });
    ProductEditVariantForm = ({
      product,
      variant
    }) => {
      const { t: t4 } = (0, import_react_i18next81.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const defaultOptions = product.options?.reduce((acc, option) => {
        const varOpt = variant.options?.find((o) => o.option_id === option.id);
        acc[option.title] = varOpt?.value;
        return acc;
      }, {});
      const form = (0, import_react_hook_form15.useForm)({
        defaultValues: {
          title: variant.title || "",
          material: variant.material || "",
          sku: variant.sku || "",
          ean: variant.ean || "",
          upc: variant.upc || "",
          barcode: variant.barcode || "",
          inventory_quantity: variant.inventory_quantity || "",
          manage_inventory: variant.manage_inventory || false,
          allow_backorder: variant.allow_backorder || false,
          weight: variant.weight || "",
          height: variant.height || "",
          width: variant.width || "",
          length: variant.length || "",
          mid_code: variant.mid_code || "",
          hs_code: variant.hs_code || "",
          origin_country: variant.origin_country || "",
          options: defaultOptions
        },
        resolver: (0, import_zod6.zodResolver)(ProductEditVariantSchema)
      });
      const { mutateAsync, isPending } = useUpdateProductVariant(
        product.id,
        variant.id
      );
      const handleSubmit = form.handleSubmit(async (data) => {
        const {
          title,
          weight,
          height,
          width,
          length,
          allow_backorder,
          manage_inventory,
          options,
          ...optional
        } = data;
        const nullableData = transformNullableFormData(optional);
        await mutateAsync(
          {
            id: variant.id,
            weight: transformNullableFormNumber(weight),
            height: transformNullableFormNumber(height),
            width: transformNullableFormNumber(width),
            length: transformNullableFormNumber(length),
            title,
            allow_backorder,
            manage_inventory,
            options,
            ...nullableData
          },
          {
            onSuccess: () => {
              handleSuccess("../");
              import_ui85.toast.success(t4("products.variant.edit.success"));
            },
            onError: (error) => {
              import_ui85.toast.error(error.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex size-full flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)(RouteDrawer.Body, { className: "flex size-full flex-col gap-y-8 overflow-auto", children: [
              /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "title",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Label, { children: t4("fields.title") }),
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(import_ui85.Input, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "material",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Label, { optional: true, children: t4("fields.material") }),
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(import_ui85.Input, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                product.options?.map((option) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(
                    Form.Field,
                    {
                      control: form.control,
                      name: `options.${option.title}`,
                      render: ({ field: { value, onChange, ...field } }) => {
                        return /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)(Form.Item, { children: [
                          /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Label, { children: option.title }),
                          /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(
                            Combobox,
                            {
                              value,
                              onChange: (v) => {
                                onChange(v);
                              },
                              ...field,
                              options: option.values.map((v) => ({
                                label: v.value,
                                value: v.value
                              }))
                            }
                          ) })
                        ] });
                      }
                    },
                    option.id
                  );
                })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Divider, {}),
              /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)("div", { className: "flex flex-col gap-y-8", children: [
                /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(import_ui85.Heading, { level: "h2", children: t4("products.variant.inventory.header") }),
                  /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(
                    Form.Field,
                    {
                      control: form.control,
                      name: "sku",
                      render: ({ field }) => {
                        return /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)(Form.Item, { children: [
                          /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Label, { optional: true, children: t4("fields.sku") }),
                          /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(import_ui85.Input, { ...field }) }),
                          /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.ErrorMessage, {})
                        ] });
                      }
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(
                    Form.Field,
                    {
                      control: form.control,
                      name: "ean",
                      render: ({ field }) => {
                        return /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)(Form.Item, { children: [
                          /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Label, { optional: true, children: t4("fields.ean") }),
                          /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(import_ui85.Input, { ...field }) }),
                          /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.ErrorMessage, {})
                        ] });
                      }
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(
                    Form.Field,
                    {
                      control: form.control,
                      name: "upc",
                      render: ({ field }) => {
                        return /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)(Form.Item, { children: [
                          /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Label, { optional: true, children: t4("fields.upc") }),
                          /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(import_ui85.Input, { ...field }) }),
                          /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.ErrorMessage, {})
                        ] });
                      }
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(
                    Form.Field,
                    {
                      control: form.control,
                      name: "barcode",
                      render: ({ field }) => {
                        return /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)(Form.Item, { children: [
                          /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Label, { optional: true, children: t4("fields.barcode") }),
                          /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(import_ui85.Input, { ...field }) }),
                          /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.ErrorMessage, {})
                        ] });
                      }
                    }
                  )
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "manage_inventory",
                    render: ({ field: { value, onChange, ...field } }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)("div", { className: "flex flex-col gap-y-1", children: [
                          /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)("div", { className: "flex items-center justify-between", children: [
                            /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Label, { children: t4("products.variant.inventory.manageInventoryLabel") }),
                            /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(
                              import_ui85.Switch,
                              {
                                checked: value,
                                onCheckedChange: (checked) => onChange(!!checked),
                                ...field
                              }
                            ) })
                          ] }),
                          /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Hint, { children: t4("products.variant.inventory.manageInventoryHint") })
                        ] }),
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "allow_backorder",
                    render: ({ field: { value, onChange, ...field } }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)("div", { className: "flex flex-col gap-y-1", children: [
                          /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)("div", { className: "flex items-center justify-between", children: [
                            /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Label, { children: t4("products.variant.inventory.allowBackordersLabel") }),
                            /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(
                              import_ui85.Switch,
                              {
                                checked: value,
                                onCheckedChange: (checked) => onChange(!!checked),
                                ...field
                              }
                            ) })
                          ] }),
                          /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Hint, { children: t4("products.variant.inventory.allowBackordersHint") })
                        ] }),
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                )
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Divider, {}),
              /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(import_ui85.Heading, { level: "h2", children: t4("products.attributes") }),
                /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "weight",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Label, { optional: true, children: t4("fields.weight") }),
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(import_ui85.Input, { type: "number", ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "width",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Label, { optional: true, children: t4("fields.width") }),
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(import_ui85.Input, { type: "number", ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "length",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Label, { optional: true, children: t4("fields.length") }),
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(import_ui85.Input, { type: "number", ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "height",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Label, { optional: true, children: t4("fields.height") }),
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(import_ui85.Input, { type: "number", ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "mid_code",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Label, { optional: true, children: t4("fields.midCode") }),
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(import_ui85.Input, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "hs_code",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Label, { optional: true, children: t4("fields.hsCode") }),
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(import_ui85.Input, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "origin_country",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Label, { optional: true, children: t4("fields.countryOfOrigin") }),
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(CountrySelect, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                )
              ] })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime135.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(import_ui85.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime135.jsx)(import_ui85.Button, { type: "submit", size: "small", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/product-variants/product-variant-edit/components/product-edit-variant-form/index.ts
var init_product_edit_variant_form2 = __esm({
  "src/routes/product-variants/product-variant-edit/components/product-edit-variant-form/index.ts"() {
    "use strict";
    init_product_edit_variant_form();
  }
});

// src/routes/product-variants/product-variant-edit/product-variant-edit.tsx
var import_ui86, import_react_i18next82, import_react_router_dom34, import_jsx_runtime136, ProductVariantEdit;
var init_product_variant_edit = __esm({
  "src/routes/product-variants/product-variant-edit/product-variant-edit.tsx"() {
    "use strict";
    import_ui86 = require("@medusajs/ui");
    import_react_i18next82 = require("react-i18next");
    import_react_router_dom34 = require("react-router-dom");
    init_modals();
    init_products();
    init_product_edit_variant_form2();
    import_jsx_runtime136 = require("react/jsx-runtime");
    ProductVariantEdit = () => {
      const initialData = (0, import_react_router_dom34.useLoaderData)();
      const { t: t4 } = (0, import_react_i18next82.useTranslation)();
      const { id: id2, variant_id } = (0, import_react_router_dom34.useParams)();
      const [URLSearchParms] = (0, import_react_router_dom34.useSearchParams)();
      const searchVariantId = URLSearchParms.get("variant_id");
      const { product, isPending, isFetching, isError, error } = useProduct(
        id2,
        void 0,
        {
          initialData
        }
      );
      const variant = product?.variants.find(
        (v) => v.id === (variant_id || searchVariantId)
      );
      if (!isPending && !isFetching && !variant) {
        throw (0, import_react_router_dom34.json)({
          status: 404,
          message: `Variant with ID ${variant_id || searchVariantId} was not found.`
        });
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime136.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime136.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime136.jsx)(import_ui86.Heading, { children: t4("products.variant.edit.header") }) }),
        variant && /* @__PURE__ */ (0, import_jsx_runtime136.jsx)(
          ProductEditVariantForm,
          {
            product,
            variant
          }
        )
      ] });
    };
  }
});

// src/routes/product-variants/product-variant-edit/loader.ts
var queryKey, queryFn, editProductVariantQuery, editProductVariantLoader;
var init_loader4 = __esm({
  "src/routes/product-variants/product-variant-edit/loader.ts"() {
    "use strict";
    init_products();
    init_client2();
    init_query_client();
    queryKey = (id2) => {
      return [productsQueryKeys.detail(id2)];
    };
    queryFn = async (id2) => {
      return await sdk.admin.product.retrieve(id2);
    };
    editProductVariantQuery = (id2) => ({
      queryKey: queryKey(id2),
      queryFn: async () => queryFn(id2)
    });
    editProductVariantLoader = async ({
      params: params2
    }) => {
      const id2 = params2.id;
      const query = editProductVariantQuery(id2);
      return queryClient.getQueryData(query.queryKey) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/routes/product-variants/product-variant-edit/index.ts
var product_variant_edit_exports = {};
__export(product_variant_edit_exports, {
  Component: () => ProductVariantEdit,
  loader: () => editProductVariantLoader
});
var init_product_variant_edit2 = __esm({
  "src/routes/product-variants/product-variant-edit/index.ts"() {
    "use strict";
    init_product_variant_edit();
    init_loader4();
  }
});

// src/routes/products/product-sales-channels/components/edit-sales-channels-form/edit-sales-channels-form.tsx
var import_ui87, import_react_table10, import_react98, import_react_i18next83, zod2, import_zod8, import_react_query45, import_react_hook_form16, import_jsx_runtime137, EditSalesChannelsSchema, PAGE_SIZE4, EditSalesChannelsForm, columnHelper7, useColumns4;
var init_edit_sales_channels_form = __esm({
  "src/routes/products/product-sales-channels/components/edit-sales-channels-form/edit-sales-channels-form.tsx"() {
    "use strict";
    import_ui87 = require("@medusajs/ui");
    import_react_table10 = require("@tanstack/react-table");
    import_react98 = require("react");
    import_react_i18next83 = require("react-i18next");
    zod2 = __toESM(require("zod"));
    import_zod8 = require("@hookform/resolvers/zod");
    import_react_query45 = require("@tanstack/react-query");
    import_react_hook_form16 = require("react-hook-form");
    init_modals();
    init_data_table2();
    init_products();
    init_sales_channels();
    init_use_sales_channel_table_columns();
    init_use_sales_channel_table_filters();
    init_use_sales_channel_table_query();
    init_use_data_table();
    import_jsx_runtime137 = require("react/jsx-runtime");
    EditSalesChannelsSchema = zod2.object({
      sales_channels: zod2.array(zod2.string()).optional()
    });
    PAGE_SIZE4 = 50;
    EditSalesChannelsForm = ({
      product
    }) => {
      const { t: t4 } = (0, import_react_i18next83.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form16.useForm)({
        defaultValues: {
          sales_channels: product.sales_channels?.map((sc) => sc.id) ?? []
        },
        resolver: (0, import_zod8.zodResolver)(EditSalesChannelsSchema)
      });
      const { setValue } = form;
      const initialState = product.sales_channels?.reduce((acc, curr) => {
        acc[curr.id] = true;
        return acc;
      }, {}) ?? {};
      const [rowSelection, setRowSelection] = (0, import_react98.useState)(initialState);
      (0, import_react98.useEffect)(() => {
        const ids = Object.keys(rowSelection);
        setValue("sales_channels", ids, {
          shouldDirty: true,
          shouldTouch: true
        });
      }, [rowSelection, setValue]);
      const { searchParams, raw } = useSalesChannelTableQuery({
        pageSize: PAGE_SIZE4
      });
      const { sales_channels, count: count3, isLoading, isError, error } = useSalesChannels(
        {
          ...searchParams
        },
        {
          placeholderData: import_react_query45.keepPreviousData
        }
      );
      const filters = useSalesChannelTableFilters();
      const columns = useColumns4();
      const { table } = useDataTable({
        data: sales_channels ?? [],
        columns,
        count: count3,
        enablePagination: true,
        enableRowSelection: true,
        rowSelection: {
          state: rowSelection,
          updater: setRowSelection
        },
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE4
      });
      const { mutateAsync, isPending: isMutating } = useUpdateProduct(product.id);
      const handleSubmit = form.handleSubmit(async (data) => {
        const arr = data.sales_channels ?? [];
        const sales_channels2 = arr.map((id2) => {
          return {
            id: id2
          };
        });
        await mutateAsync(
          {
            sales_channels: sales_channels2
          },
          {
            onSuccess: () => {
              handleSuccess();
            }
          }
        );
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)("div", { className: "flex h-full flex-col overflow-hidden", children: [
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(RouteFocusModal.Header, {}),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(RouteFocusModal.Body, { className: "flex-1 overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(
          DataTable,
          {
            table,
            columns,
            pageSize: PAGE_SIZE4,
            isLoading,
            count: count3,
            filters,
            search: "autofocus",
            pagination: true,
            orderBy: [
              { key: "name", label: t4("fields.name") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            queryObject: raw,
            layout: "fill"
          }
        ) }),
        /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime137.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(import_ui87.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(import_ui87.Button, { size: "small", isLoading: isMutating, onClick: handleSubmit, children: t4("actions.save") })
        ] }) })
      ] }) });
    };
    columnHelper7 = (0, import_react_table10.createColumnHelper)();
    useColumns4 = () => {
      const columns = useSalesChannelTableColumns();
      return (0, import_react98.useMemo)(
        () => [
          columnHelper7.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(
                import_ui87.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime137.jsx)(
                import_ui87.Checkbox,
                {
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...columns
        ],
        [columns]
      );
    };
  }
});

// src/routes/products/product-sales-channels/components/edit-sales-channels-form/index.ts
var init_edit_sales_channels_form2 = __esm({
  "src/routes/products/product-sales-channels/components/edit-sales-channels-form/index.ts"() {
    "use strict";
    init_edit_sales_channels_form();
  }
});

// src/routes/products/product-sales-channels/product-sales-channels.tsx
var import_react_router_dom35, import_jsx_runtime138, ProductSalesChannels;
var init_product_sales_channels = __esm({
  "src/routes/products/product-sales-channels/product-sales-channels.tsx"() {
    "use strict";
    import_react_router_dom35 = require("react-router-dom");
    init_modals();
    init_products();
    init_edit_sales_channels_form2();
    import_jsx_runtime138 = require("react/jsx-runtime");
    ProductSalesChannels = () => {
      const { id: id2 } = (0, import_react_router_dom35.useParams)();
      const { product, isLoading, isError, error } = useProduct(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime138.jsx)(RouteFocusModal, { children: !isLoading && product && /* @__PURE__ */ (0, import_jsx_runtime138.jsx)(EditSalesChannelsForm, { product }) });
    };
  }
});

// src/routes/products/product-sales-channels/index.ts
var product_sales_channels_exports = {};
__export(product_sales_channels_exports, {
  Component: () => ProductSalesChannels
});
var init_product_sales_channels2 = __esm({
  "src/routes/products/product-sales-channels/index.ts"() {
    "use strict";
    init_product_sales_channels();
  }
});

// src/routes/products/product-attributes/components/product-attributes-form/product-attributes-form.tsx
var import_ui88, import_react_i18next84, zod3, import_jsx_runtime139, dimension, ProductAttributesSchema, ProductAttributesForm;
var init_product_attributes_form = __esm({
  "src/routes/products/product-attributes/components/product-attributes-form/product-attributes-form.tsx"() {
    "use strict";
    import_ui88 = require("@medusajs/ui");
    import_react_i18next84 = require("react-i18next");
    zod3 = __toESM(require("zod"));
    init_form2();
    init_country_select2();
    init_modals();
    init_keybound_form2();
    init_extensions();
    init_products();
    import_jsx_runtime139 = require("react/jsx-runtime");
    dimension = zod3.union([zod3.string(), zod3.number()]).transform((value) => {
      if (value === "") {
        return null;
      }
      return Number(value);
    }).optional().nullable();
    ProductAttributesSchema = zod3.object({
      weight: dimension,
      length: dimension,
      width: dimension,
      height: dimension,
      mid_code: zod3.string().optional(),
      hs_code: zod3.string().optional(),
      origin_country: zod3.string().optional()
    });
    ProductAttributesForm = ({
      product
    }) => {
      const { t: t4 } = (0, import_react_i18next84.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const { getFormConfigs, getFormFields } = useDashboardExtension();
      const configs = getFormConfigs("product", "attributes");
      const fields = getFormFields("product", "attributes");
      const form = useExtendableForm({
        defaultValues: {
          height: product.height ? product.height : null,
          width: product.width ? product.width : null,
          length: product.length ? product.length : null,
          weight: product.weight ? product.weight : null,
          mid_code: product.mid_code || "",
          hs_code: product.hs_code || "",
          origin_country: product.origin_country || ""
        },
        schema: ProductAttributesSchema,
        configs,
        data: product
      });
      const { mutateAsync, isPending } = useUpdateProduct(product.id);
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(
          {
            weight: data.weight ? data.weight : void 0,
            length: data.length ? data.length : void 0,
            width: data.width ? data.width : void 0,
            height: data.height ? data.height : void 0,
            mid_code: data.mid_code,
            hs_code: data.hs_code,
            origin_country: data.origin_country
          },
          {
            onSuccess: () => {
              handleSuccess();
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime139.jsxs)(KeyboundForm, { onSubmit: handleSubmit, className: "flex h-full flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(RouteDrawer.Body, { children: /* @__PURE__ */ (0, import_jsx_runtime139.jsx)("div", { className: "flex h-full flex-col gap-y-8", children: /* @__PURE__ */ (0, import_jsx_runtime139.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "width",
              render: ({ field: { onChange, value, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime139.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(Form.Label, { children: t4("fields.width") }),
                  /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(
                    import_ui88.Input,
                    {
                      type: "number",
                      min: 0,
                      value: value || "",
                      onChange: (e) => {
                        const value2 = e.target.value;
                        if (value2 === "") {
                          onChange(null);
                        } else {
                          onChange(parseFloat(value2));
                        }
                      },
                      ...field
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "height",
              render: ({ field: { onChange, value, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime139.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(Form.Label, { children: t4("fields.height") }),
                  /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(
                    import_ui88.Input,
                    {
                      type: "number",
                      min: 0,
                      value: value || "",
                      onChange: (e) => {
                        const value2 = e.target.value;
                        if (value2 === "") {
                          onChange(null);
                        } else {
                          onChange(Number(value2));
                        }
                      },
                      ...field
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "length",
              render: ({ field: { onChange, value, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime139.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(Form.Label, { children: t4("fields.length") }),
                  /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(
                    import_ui88.Input,
                    {
                      type: "number",
                      min: 0,
                      value: value || "",
                      onChange: (e) => {
                        const value2 = e.target.value;
                        if (value2 === "") {
                          onChange(null);
                        } else {
                          onChange(Number(value2));
                        }
                      },
                      ...field
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "weight",
              render: ({ field: { onChange, value, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime139.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(Form.Label, { children: t4("fields.weight") }),
                  /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(
                    import_ui88.Input,
                    {
                      type: "number",
                      min: 0,
                      value: value || "",
                      onChange: (e) => {
                        const value2 = e.target.value;
                        if (value2 === "") {
                          onChange(null);
                        } else {
                          onChange(Number(value2));
                        }
                      },
                      ...field
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "mid_code",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime139.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(Form.Label, { children: t4("fields.midCode") }),
                  /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(import_ui88.Input, { ...field }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "hs_code",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime139.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(Form.Label, { children: t4("fields.hsCode") }),
                  /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(import_ui88.Input, { ...field }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "origin_country",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime139.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(Form.Label, { children: t4("fields.countryOfOrigin") }),
                  /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(CountrySelect, { ...field }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(FormExtensionZone, { fields, form })
        ] }) }) }),
        /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime139.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(import_ui88.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime139.jsx)(import_ui88.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
        ] }) })
      ] }) });
    };
  }
});

// src/routes/products/product-attributes/components/product-attributes-form/index.ts
var init_product_attributes_form2 = __esm({
  "src/routes/products/product-attributes/components/product-attributes-form/index.ts"() {
    "use strict";
    init_product_attributes_form();
  }
});

// src/routes/products/product-attributes/product-attributes.tsx
var import_ui89, import_react_i18next85, import_react_router_dom36, import_jsx_runtime140, ProductAttributes;
var init_product_attributes = __esm({
  "src/routes/products/product-attributes/product-attributes.tsx"() {
    "use strict";
    import_ui89 = require("@medusajs/ui");
    import_react_i18next85 = require("react-i18next");
    import_react_router_dom36 = require("react-router-dom");
    init_modals();
    init_products();
    init_constants2();
    init_product_attributes_form2();
    import_jsx_runtime140 = require("react/jsx-runtime");
    ProductAttributes = () => {
      const { id: id2 } = (0, import_react_router_dom36.useParams)();
      const { t: t4 } = (0, import_react_i18next85.useTranslation)();
      const { product, isLoading, isError, error } = useProduct(id2, {
        fields: PRODUCT_DETAIL_FIELDS
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime140.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime140.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime140.jsx)(RouteDrawer.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime140.jsx)(import_ui89.Heading, { children: t4("products.editAttributes") }) }) }),
        !isLoading && product && /* @__PURE__ */ (0, import_jsx_runtime140.jsx)(ProductAttributesForm, { product })
      ] });
    };
  }
});

// src/routes/products/product-attributes/index.ts
var product_attributes_exports = {};
__export(product_attributes_exports, {
  Component: () => ProductAttributes
});
var init_product_attributes2 = __esm({
  "src/routes/products/product-attributes/index.ts"() {
    "use strict";
    init_product_attributes();
  }
});

// src/routes/products/product-organization/components/product-organization-form/product-organization-form.tsx
var import_ui90, import_react_i18next86, zod4, import_jsx_runtime141, ProductOrganizationSchema, ProductOrganizationForm;
var init_product_organization_form = __esm({
  "src/routes/products/product-organization/components/product-organization-form/product-organization-form.tsx"() {
    "use strict";
    import_ui90 = require("@medusajs/ui");
    import_react_i18next86 = require("react-i18next");
    zod4 = __toESM(require("zod"));
    init_form2();
    init_combobox2();
    init_modals();
    init_keybound_form2();
    init_extensions();
    init_products();
    init_use_combobox_data();
    init_client2();
    init_category_combobox2();
    import_jsx_runtime141 = require("react/jsx-runtime");
    ProductOrganizationSchema = zod4.object({
      type_id: zod4.string().nullable(),
      collection_id: zod4.string().nullable(),
      category_ids: zod4.array(zod4.string()),
      tag_ids: zod4.array(zod4.string())
    });
    ProductOrganizationForm = ({
      product
    }) => {
      const { t: t4 } = (0, import_react_i18next86.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const { getFormConfigs, getFormFields } = useDashboardExtension();
      const configs = getFormConfigs("product", "organize");
      const fields = getFormFields("product", "organize");
      const collections = useComboboxData({
        queryKey: ["product_collections"],
        queryFn: (params2) => sdk.admin.productCollection.list(params2),
        getOptions: (data) => data.collections.map((collection) => ({
          label: collection.title,
          value: collection.id
        }))
      });
      const types = useComboboxData({
        queryKey: ["product_types"],
        queryFn: (params2) => sdk.admin.productType.list(params2),
        getOptions: (data) => data.product_types.map((type) => ({
          label: type.value,
          value: type.id
        }))
      });
      const tags = useComboboxData({
        queryKey: ["product_tags"],
        queryFn: (params2) => sdk.admin.productTag.list(params2),
        getOptions: (data) => data.product_tags.map((tag) => ({
          label: tag.value,
          value: tag.id
        }))
      });
      const form = useExtendableForm({
        defaultValues: {
          type_id: product.type_id ?? "",
          collection_id: product.collection_id ?? "",
          category_ids: product.categories?.map((c) => c.id) || [],
          tag_ids: product.tags?.map((t5) => t5.id) || []
        },
        schema: ProductOrganizationSchema,
        configs,
        data: product
      });
      const { mutateAsync, isPending } = useUpdateProduct(product.id);
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(
          {
            type_id: data.type_id || null,
            collection_id: data.collection_id || null,
            categories: data.category_ids.map((c) => ({ id: c })),
            tags: data.tag_ids?.map((t5) => ({ id: t5 }))
          },
          {
            onSuccess: ({ product: product2 }) => {
              import_ui90.toast.success(
                t4("products.organization.edit.toasts.success", {
                  title: product2.title
                })
              );
              handleSuccess();
            },
            onError: (error) => {
              import_ui90.toast.error(error.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime141.jsxs)(KeyboundForm, { onSubmit: handleSubmit, className: "flex h-full flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(RouteDrawer.Body, { children: /* @__PURE__ */ (0, import_jsx_runtime141.jsxs)("div", { className: "flex h-full flex-col gap-y-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "type_id",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime141.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(Form.Label, { optional: true, children: t4("products.fields.type.label") }),
                  /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(
                    Combobox,
                    {
                      ...field,
                      options: types.options,
                      searchValue: types.searchValue,
                      onSearchValueChange: types.onSearchValueChange,
                      fetchNextPage: types.fetchNextPage
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "collection_id",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime141.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(Form.Label, { optional: true, children: t4("products.fields.collection.label") }),
                  /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(
                    Combobox,
                    {
                      ...field,
                      multiple: false,
                      options: collections.options,
                      onSearchValueChange: collections.onSearchValueChange,
                      searchValue: collections.searchValue
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "category_ids",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime141.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(Form.Label, { optional: true, children: t4("products.fields.categories.label") }),
                  /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(CategoryCombobox, { ...field }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "tag_ids",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime141.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(Form.Label, { optional: true, children: t4("products.fields.tags.label") }),
                  /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(
                    Combobox,
                    {
                      ...field,
                      multiple: true,
                      options: tags.options,
                      onSearchValueChange: tags.onSearchValueChange,
                      searchValue: tags.searchValue
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(FormExtensionZone, { fields, form })
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime141.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(import_ui90.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime141.jsx)(import_ui90.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
        ] }) })
      ] }) });
    };
  }
});

// src/routes/products/product-organization/components/product-organization-form/index.ts
var init_product_organization_form2 = __esm({
  "src/routes/products/product-organization/components/product-organization-form/index.ts"() {
    "use strict";
    init_product_organization_form();
  }
});

// src/routes/products/product-organization/product-organization.tsx
var import_ui91, import_react_i18next87, import_react_router_dom37, import_jsx_runtime142, ProductOrganization;
var init_product_organization = __esm({
  "src/routes/products/product-organization/product-organization.tsx"() {
    "use strict";
    import_ui91 = require("@medusajs/ui");
    import_react_i18next87 = require("react-i18next");
    import_react_router_dom37 = require("react-router-dom");
    init_modals();
    init_products();
    init_constants2();
    init_product_organization_form2();
    import_jsx_runtime142 = require("react/jsx-runtime");
    ProductOrganization = () => {
      const { id: id2 } = (0, import_react_router_dom37.useParams)();
      const { t: t4 } = (0, import_react_i18next87.useTranslation)();
      const { product, isLoading, isError, error } = useProduct(id2, {
        fields: PRODUCT_DETAIL_FIELDS
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime142.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime142.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime142.jsx)(RouteDrawer.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime142.jsx)(import_ui91.Heading, { children: t4("products.organization.edit.header") }) }) }),
        !isLoading && product && /* @__PURE__ */ (0, import_jsx_runtime142.jsx)(ProductOrganizationForm, { product })
      ] });
    };
  }
});

// src/routes/products/product-organization/index.ts
var product_organization_exports = {};
__export(product_organization_exports, {
  Component: () => ProductOrganization
});
var init_product_organization2 = __esm({
  "src/routes/products/product-organization/index.ts"() {
    "use strict";
    init_product_organization();
  }
});

// src/routes/products/common/components/media-grid-view/media-grid-view.tsx
var import_icons46, import_ui92, import_framer_motion2, import_react99, import_react_i18next88, import_jsx_runtime143, MediaGrid, MediaGridItem;
var init_media_grid_view = __esm({
  "src/routes/products/common/components/media-grid-view/media-grid-view.tsx"() {
    "use strict";
    import_icons46 = require("@medusajs/icons");
    import_ui92 = require("@medusajs/ui");
    import_framer_motion2 = require("framer-motion");
    import_react99 = require("react");
    import_react_i18next88 = require("react-i18next");
    import_jsx_runtime143 = require("react/jsx-runtime");
    MediaGrid = ({
      media,
      selection,
      onCheckedChange
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime143.jsx)("div", { className: "bg-ui-bg-subtle size-full overflow-auto", children: /* @__PURE__ */ (0, import_jsx_runtime143.jsx)("div", { className: "grid h-fit auto-rows-auto grid-cols-4 gap-6 p-6", children: media.map((m) => {
        return /* @__PURE__ */ (0, import_jsx_runtime143.jsx)(
          MediaGridItem,
          {
            onCheckedChange: onCheckedChange(m.id),
            checked: !!selection[m.id],
            media: m
          },
          m.field_id
        );
      }) }) });
    };
    MediaGridItem = ({
      media,
      checked,
      onCheckedChange
    }) => {
      const [isLoading, setIsLoading] = (0, import_react99.useState)(true);
      const { t: t4 } = (0, import_react_i18next88.useTranslation)();
      const handleToggle = (0, import_react99.useCallback)(() => {
        onCheckedChange(!checked);
      }, [checked, onCheckedChange]);
      return /* @__PURE__ */ (0, import_jsx_runtime143.jsxs)(
        "button",
        {
          type: "button",
          onClick: handleToggle,
          className: "shadow-elevation-card-rest hover:shadow-elevation-card-hover focus-visible:shadow-borders-focus bg-ui-bg-subtle-hover group relative aspect-square h-auto max-w-full overflow-hidden rounded-lg outline-none",
          children: [
            media.isThumbnail && /* @__PURE__ */ (0, import_jsx_runtime143.jsx)("div", { className: "absolute left-2 top-2", children: /* @__PURE__ */ (0, import_jsx_runtime143.jsx)(import_ui92.Tooltip, { content: t4("products.media.thumbnailTooltip"), children: /* @__PURE__ */ (0, import_jsx_runtime143.jsx)(import_icons46.ThumbnailBadge, {}) }) }),
            /* @__PURE__ */ (0, import_jsx_runtime143.jsx)(
              "div",
              {
                className: (0, import_ui92.clx)(
                  "transition-fg absolute right-2 top-2 opacity-0 group-focus-within:opacity-100 group-hover:opacity-100 group-focus:opacity-100",
                  {
                    "opacity-100": checked
                  }
                ),
                children: /* @__PURE__ */ (0, import_jsx_runtime143.jsx)(
                  "div",
                  {
                    className: (0, import_ui92.clx)(
                      "group relative inline-flex h-4 w-4 items-center justify-center outline-none "
                    ),
                    children: /* @__PURE__ */ (0, import_jsx_runtime143.jsx)(
                      "div",
                      {
                        className: (0, import_ui92.clx)(
                          "text-ui-fg-on-inverted bg-ui-bg-component shadow-borders-base [&_path]:shadow-details-contrast-on-bg-interactive group-disabled:text-ui-fg-disabled group-disabled:!bg-ui-bg-disabled group-disabled:!shadow-borders-base transition-fg h-[14px] w-[14px] rounded-[3px]",
                          {
                            "bg-ui-bg-interactive group-hover:bg-ui-bg-interactive shadow-borders-interactive-with-shadow": checked
                          }
                        ),
                        children: checked && /* @__PURE__ */ (0, import_jsx_runtime143.jsx)("div", { className: "absolute inset-0", children: /* @__PURE__ */ (0, import_jsx_runtime143.jsx)(import_icons46.CheckMini, {}) })
                      }
                    )
                  }
                )
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime143.jsx)(import_framer_motion2.AnimatePresence, { children: isLoading && /* @__PURE__ */ (0, import_jsx_runtime143.jsx)(
              import_framer_motion2.motion.div,
              {
                initial: { opacity: 1 },
                animate: { opacity: 1 },
                exit: { opacity: 0, transition: { duration: 0.5 } },
                className: "bg-ui-bg-subtle-hover absolute inset-0 flex items-center justify-center",
                children: /* @__PURE__ */ (0, import_jsx_runtime143.jsx)(import_icons46.Spinner, { className: "text-ui-fg-subtle animate-spin" })
              }
            ) }),
            /* @__PURE__ */ (0, import_jsx_runtime143.jsx)(
              "img",
              {
                src: media.url,
                onLoad: () => setIsLoading(false),
                alt: "",
                className: "size-full object-cover object-center"
              }
            )
          ]
        }
      );
    };
  }
});

// src/routes/products/common/components/media-grid-view/index.ts
var init_media_grid_view2 = __esm({
  "src/routes/products/common/components/media-grid-view/index.ts"() {
    "use strict";
    init_media_grid_view();
  }
});

// src/routes/products/product-media/components/edit-product-media-form/edit-product-media-form.tsx
var import_zod9, import_ui93, import_react100, import_react_hook_form17, import_react_i18next89, import_react_router_dom38, import_jsx_runtime144, EditProductMediaForm, getDefaultValues;
var init_edit_product_media_form = __esm({
  "src/routes/products/product-media/components/edit-product-media-form/edit-product-media-form.tsx"() {
    "use strict";
    import_zod9 = require("@hookform/resolvers/zod");
    import_ui93 = require("@medusajs/ui");
    import_react100 = require("react");
    import_react_hook_form17 = require("react-hook-form");
    import_react_i18next89 = require("react-i18next");
    import_react_router_dom38 = require("react-router-dom");
    init_modals();
    init_keybound_form2();
    init_products();
    init_client2();
    init_media_grid_view2();
    init_upload_media_form_item2();
    init_constants3();
    import_jsx_runtime144 = require("react/jsx-runtime");
    EditProductMediaForm = ({ product }) => {
      const [selection, setSelection] = (0, import_react100.useState)({});
      const { t: t4 } = (0, import_react_i18next89.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form17.useForm)({
        defaultValues: {
          media: getDefaultValues(product.images, product.thumbnail)
        },
        resolver: (0, import_zod9.zodResolver)(EditProductMediaSchema)
      });
      const { fields, append, remove, update } = (0, import_react_hook_form17.useFieldArray)({
        name: "media",
        control: form.control,
        keyName: "field_id"
      });
      const { mutateAsync, isPending } = useUpdateProduct(product.id);
      const handleSubmit = form.handleSubmit(async ({ media }) => {
        const filesToUpload = media.map((m, i) => ({ file: m.file, index: i })).filter((m) => !!m.file);
        let uploaded = [];
        if (filesToUpload.length) {
          const { files: uploads } = await sdk.admin.upload.create({ files: filesToUpload.map((m) => m.file) }).catch(() => {
            form.setError("media", {
              type: "invalid_file",
              message: t4("products.media.failedToUpload")
            });
            return { files: [] };
          });
          uploaded = uploads;
        }
        const withUpdatedUrls = media.map((entry, i) => {
          const toUploadIndex = filesToUpload.findIndex((m) => m.index === i);
          if (toUploadIndex > -1) {
            return { ...entry, url: uploaded[toUploadIndex]?.url };
          }
          return entry;
        });
        const thumbnail = withUpdatedUrls.find((m) => m.isThumbnail)?.url;
        await mutateAsync(
          {
            images: withUpdatedUrls.map((file) => ({ url: file.url })),
            // Set thumbnail to empty string if no thumbnail is selected, as the API does not accept null
            thumbnail: thumbnail || ""
          },
          {
            onSuccess: () => {
              handleSuccess();
            }
          }
        );
      });
      const handleCheckedChange = (0, import_react100.useCallback)(
        (id2) => {
          return (val) => {
            if (!val) {
              const { [id2]: _, ...rest } = selection;
              setSelection(rest);
            } else {
              setSelection((prev) => ({ ...prev, [id2]: true }));
            }
          };
        },
        [selection]
      );
      const handleDelete = () => {
        const ids = Object.keys(selection);
        const indices = ids.map((id2) => fields.findIndex((m) => m.id === id2));
        remove(indices);
        setSelection({});
      };
      const handlePromoteToThumbnail = () => {
        const ids = Object.keys(selection);
        if (!ids.length) {
          return;
        }
        const currentThumbnailIndex = fields.findIndex((m) => m.isThumbnail);
        if (currentThumbnailIndex > -1) {
          update(currentThumbnailIndex, {
            ...fields[currentThumbnailIndex],
            isThumbnail: false
          });
        }
        const index2 = fields.findIndex((m) => m.id === ids[0]);
        update(index2, {
          ...fields[index2],
          isThumbnail: true
        });
        setSelection({});
      };
      const selectionCount = Object.keys(selection).length;
      return /* @__PURE__ */ (0, import_jsx_runtime144.jsx)(RouteFocusModal.Form, { blockSearch: true, form, children: /* @__PURE__ */ (0, import_jsx_runtime144.jsxs)(
        KeyboundForm,
        {
          className: "flex size-full flex-col overflow-hidden",
          onSubmit: handleSubmit,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime144.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime144.jsx)("div", { className: "flex items-center justify-end gap-x-2", children: /* @__PURE__ */ (0, import_jsx_runtime144.jsx)(import_ui93.Button, { variant: "secondary", size: "small", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime144.jsx)(import_react_router_dom38.Link, { to: { pathname: ".", search: void 0 }, children: t4("products.media.galleryLabel") }) }) }) }),
            /* @__PURE__ */ (0, import_jsx_runtime144.jsx)(RouteFocusModal.Body, { className: "flex flex-col overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime144.jsxs)("div", { className: "flex size-full flex-col-reverse lg:grid lg:grid-cols-[1fr_560px]", children: [
              /* @__PURE__ */ (0, import_jsx_runtime144.jsx)(
                MediaGrid,
                {
                  media: fields,
                  onCheckedChange: handleCheckedChange,
                  selection
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime144.jsx)("div", { className: "bg-ui-bg-base overflow-auto border-b px-6 py-4 lg:border-b-0 lg:border-l", children: /* @__PURE__ */ (0, import_jsx_runtime144.jsx)(UploadMediaFormItem, { form, append }) })
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime144.jsx)(import_ui93.CommandBar, { open: !!selectionCount, children: /* @__PURE__ */ (0, import_jsx_runtime144.jsxs)(import_ui93.CommandBar.Bar, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime144.jsx)(import_ui93.CommandBar.Value, { children: t4("general.countSelected", {
                count: selectionCount
              }) }),
              /* @__PURE__ */ (0, import_jsx_runtime144.jsx)(import_ui93.CommandBar.Seperator, {}),
              selectionCount === 1 && /* @__PURE__ */ (0, import_jsx_runtime144.jsxs)(import_react100.Fragment, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime144.jsx)(
                  import_ui93.CommandBar.Command,
                  {
                    action: handlePromoteToThumbnail,
                    label: t4("products.media.makeThumbnail"),
                    shortcut: "t"
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime144.jsx)(import_ui93.CommandBar.Seperator, {})
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime144.jsx)(
                import_ui93.CommandBar.Command,
                {
                  action: handleDelete,
                  label: t4("actions.delete"),
                  shortcut: "d"
                }
              )
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime144.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime144.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime144.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime144.jsx)(import_ui93.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime144.jsx)(import_ui93.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
    getDefaultValues = (images, thumbnail) => {
      const media = images?.map((image) => ({
        id: image.id,
        url: image.url,
        isThumbnail: image.url === thumbnail,
        file: null
      })) || [];
      if (thumbnail && !media.some((mediaItem) => mediaItem.url === thumbnail)) {
        const id2 = Math.random().toString(36).substring(7);
        media.unshift({
          id: id2,
          url: thumbnail,
          isThumbnail: true,
          file: null
        });
      }
      return media;
    };
  }
});

// src/routes/products/product-media/components/edit-product-media-form/index.ts
var init_edit_product_media_form2 = __esm({
  "src/routes/products/product-media/components/edit-product-media-form/index.ts"() {
    "use strict";
    init_edit_product_media_form();
  }
});

// src/routes/products/product-media/components/product-media-gallery/product-media-gallery.tsx
var import_icons47, import_ui94, import_react101, import_react_i18next90, import_react_router_dom39, import_jsx_runtime145, ProductMediaGallery, Canvas, MAX_VISIBLE_ITEMS, Preview, getMedia2;
var init_product_media_gallery = __esm({
  "src/routes/products/product-media/components/product-media-gallery/product-media-gallery.tsx"() {
    "use strict";
    import_icons47 = require("@medusajs/icons");
    import_ui94 = require("@medusajs/ui");
    import_react101 = require("react");
    import_react_i18next90 = require("react-i18next");
    import_react_router_dom39 = require("react-router-dom");
    init_modals();
    init_products();
    import_jsx_runtime145 = require("react/jsx-runtime");
    ProductMediaGallery = ({ product }) => {
      const { state } = (0, import_react_router_dom39.useLocation)();
      const [curr, setCurr] = (0, import_react101.useState)(state?.curr || 0);
      const { t: t4 } = (0, import_react_i18next90.useTranslation)();
      const prompt = (0, import_ui94.usePrompt)();
      const { mutateAsync, isLoading } = useUpdateProduct(product.id);
      const media = getMedia2(product.images, product.thumbnail);
      const next = (0, import_react101.useCallback)(() => {
        if (isLoading) {
          return;
        }
        setCurr((prev2) => (prev2 + 1) % media.length);
      }, [media, isLoading]);
      const prev = (0, import_react101.useCallback)(() => {
        if (isLoading) {
          return;
        }
        setCurr((prev2) => (prev2 - 1 + media.length) % media.length);
      }, [media, isLoading]);
      const goTo = (0, import_react101.useCallback)(
        (index2) => {
          if (isLoading) {
            return;
          }
          setCurr(index2);
        },
        [isLoading]
      );
      const handleDownloadCurrent = () => {
        if (isLoading) {
          return;
        }
        const a = document.createElement("a");
        a.href = media[curr].url;
        a.download = "image";
        a.target = "_blank";
        a.click();
      };
      const handleDeleteCurrent = async () => {
        const current = media[curr];
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: current.isThumbnail ? t4("products.media.deleteWarningWithThumbnail", { count: 1 }) : t4("products.media.deleteWarning", { count: 1 }),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        const mediaToKeep = product.images.filter((i) => i.id !== current.id).map((i) => ({ url: i.url }));
        if (curr === media.length - 1) {
          setCurr((prev2) => prev2 - 1);
        }
        await mutateAsync({
          images: mediaToKeep,
          thumbnail: current.isThumbnail ? "" : void 0
        });
      };
      (0, import_react101.useEffect)(() => {
        const handleKeyDown = (e) => {
          if (e.key === "ArrowRight") {
            next();
          } else if (e.key === "ArrowLeft") {
            prev();
          }
        };
        document.addEventListener("keydown", handleKeyDown);
        return () => {
          document.removeEventListener("keydown", handleKeyDown);
        };
      }, [next, prev]);
      const noMedia = !media.length;
      return /* @__PURE__ */ (0, import_jsx_runtime145.jsxs)("div", { className: "flex size-full flex-col overflow-hidden", children: [
        /* @__PURE__ */ (0, import_jsx_runtime145.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime145.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime145.jsxs)(
            import_ui94.IconButton,
            {
              size: "small",
              type: "button",
              onClick: handleDeleteCurrent,
              disabled: noMedia,
              children: [
                /* @__PURE__ */ (0, import_jsx_runtime145.jsx)(import_icons47.Trash, {}),
                /* @__PURE__ */ (0, import_jsx_runtime145.jsx)("span", { className: "sr-only", children: t4("products.media.deleteImageLabel") })
              ]
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime145.jsxs)(
            import_ui94.IconButton,
            {
              size: "small",
              type: "button",
              onClick: handleDownloadCurrent,
              disabled: noMedia,
              children: [
                /* @__PURE__ */ (0, import_jsx_runtime145.jsx)(import_icons47.ArrowDownTray, {}),
                /* @__PURE__ */ (0, import_jsx_runtime145.jsx)("span", { className: "sr-only", children: t4("products.media.downloadImageLabel") })
              ]
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime145.jsx)(import_ui94.Button, { variant: "secondary", size: "small", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime145.jsx)(import_react_router_dom39.Link, { to: { pathname: ".", search: "view=edit" }, children: t4("actions.edit") }) })
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime145.jsxs)(RouteFocusModal.Body, { className: "flex flex-col overflow-hidden", children: [
          /* @__PURE__ */ (0, import_jsx_runtime145.jsx)(Canvas, { curr, media }),
          /* @__PURE__ */ (0, import_jsx_runtime145.jsx)(
            Preview,
            {
              curr,
              media,
              prev,
              next,
              goTo
            }
          )
        ] })
      ] });
    };
    Canvas = ({ media, curr }) => {
      const { t: t4 } = (0, import_react_i18next90.useTranslation)();
      if (media.length === 0) {
        return /* @__PURE__ */ (0, import_jsx_runtime145.jsxs)("div", { className: "bg-ui-bg-subtle flex size-full flex-col items-center justify-center gap-y-4 pb-8 pt-6", children: [
          /* @__PURE__ */ (0, import_jsx_runtime145.jsxs)("div", { className: "flex flex-col items-center", children: [
            /* @__PURE__ */ (0, import_jsx_runtime145.jsx)(
              import_ui94.Text,
              {
                size: "small",
                leading: "compact",
                weight: "plus",
                className: "text-ui-fg-subtle",
                children: t4("products.media.emptyState.header")
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime145.jsx)(import_ui94.Text, { size: "small", className: "text-ui-fg-muted", children: t4("products.media.emptyState.description") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime145.jsx)(import_ui94.Button, { size: "small", variant: "secondary", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime145.jsx)(import_react_router_dom39.Link, { to: "?view=edit", children: t4("products.media.emptyState.action") }) })
        ] });
      }
      return /* @__PURE__ */ (0, import_jsx_runtime145.jsx)("div", { className: "bg-ui-bg-subtle relative size-full overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime145.jsx)("div", { className: "flex size-full items-center justify-center p-6", children: /* @__PURE__ */ (0, import_jsx_runtime145.jsxs)("div", { className: "relative h-full w-fit", children: [
        media[curr].isThumbnail && /* @__PURE__ */ (0, import_jsx_runtime145.jsx)("div", { className: "absolute left-2 top-2", children: /* @__PURE__ */ (0, import_jsx_runtime145.jsx)(import_ui94.Tooltip, { content: t4("products.media.thumbnailTooltip"), children: /* @__PURE__ */ (0, import_jsx_runtime145.jsx)(import_icons47.ThumbnailBadge, {}) }) }),
        /* @__PURE__ */ (0, import_jsx_runtime145.jsx)(
          "img",
          {
            src: media[curr].url,
            alt: "",
            className: "object-fit shadow-elevation-card-rest size-full rounded-xl object-contain"
          }
        )
      ] }) }) });
    };
    MAX_VISIBLE_ITEMS = 8;
    Preview = ({
      media,
      curr,
      prev,
      next,
      goTo
    }) => {
      if (!media.length) {
        return null;
      }
      const getVisibleItems = (media2, index2) => {
        if (media2.length <= MAX_VISIBLE_ITEMS) {
          return media2;
        }
        const half = Math.floor(MAX_VISIBLE_ITEMS / 2);
        const start = (index2 - half + media2.length) % media2.length;
        const end = (start + MAX_VISIBLE_ITEMS) % media2.length;
        if (end < start) {
          return [...media2.slice(start), ...media2.slice(0, end)];
        } else {
          return media2.slice(start, end);
        }
      };
      const visibleItems = getVisibleItems(media, curr);
      return /* @__PURE__ */ (0, import_jsx_runtime145.jsxs)("div", { className: "flex shrink-0 items-center justify-center gap-x-2 border-t p-3", children: [
        /* @__PURE__ */ (0, import_jsx_runtime145.jsx)(
          import_ui94.IconButton,
          {
            size: "small",
            variant: "transparent",
            className: "text-ui-fg-muted",
            type: "button",
            onClick: prev,
            children: /* @__PURE__ */ (0, import_jsx_runtime145.jsx)(import_icons47.TriangleLeftMini, {})
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime145.jsx)("div", { className: "flex items-center gap-x-2", children: visibleItems.map((item) => {
          const isCurrentImage = item.id === media[curr].id;
          const originalIndex = media.findIndex((i) => i.id === item.id);
          return /* @__PURE__ */ (0, import_jsx_runtime145.jsx)(
            "button",
            {
              type: "button",
              onClick: () => goTo(originalIndex),
              className: (0, import_ui94.clx)(
                "transition-fg size-7 overflow-hidden rounded-[4px] outline-none",
                {
                  "shadow-borders-focus": isCurrentImage
                }
              ),
              children: /* @__PURE__ */ (0, import_jsx_runtime145.jsx)("img", { src: item.url, alt: "", className: "size-full object-cover" })
            },
            item.id
          );
        }) }),
        /* @__PURE__ */ (0, import_jsx_runtime145.jsx)(
          import_ui94.IconButton,
          {
            size: "small",
            variant: "transparent",
            className: "text-ui-fg-muted",
            type: "button",
            onClick: next,
            children: /* @__PURE__ */ (0, import_jsx_runtime145.jsx)(import_icons47.TriangleRightMini, {})
          }
        )
      ] });
    };
    getMedia2 = (images, thumbnail) => {
      const media = images?.map((image) => ({
        id: image.id,
        url: image.url,
        isThumbnail: image.url === thumbnail
      })) || [];
      if (thumbnail && !media.some((mediaItem) => mediaItem.isThumbnail)) {
        media.unshift({
          id: "thumbnail_only",
          url: thumbnail,
          isThumbnail: true
        });
      }
      return media;
    };
  }
});

// src/routes/products/product-media/components/product-media-gallery/index.ts
var init_product_media_gallery2 = __esm({
  "src/routes/products/product-media/components/product-media-gallery/index.ts"() {
    "use strict";
    init_product_media_gallery();
  }
});

// src/routes/products/product-media/components/product-media-view/product-media-view-context.tsx
var import_react102, ProductMediaViewContext;
var init_product_media_view_context = __esm({
  "src/routes/products/product-media/components/product-media-view/product-media-view-context.tsx"() {
    "use strict";
    import_react102 = require("react");
    ProductMediaViewContext = (0, import_react102.createContext)(null);
  }
});

// src/routes/products/product-media/components/product-media-view/product-media-view.tsx
var import_react_router_dom40, import_jsx_runtime146, getView, ProductMediaView, renderView;
var init_product_media_view = __esm({
  "src/routes/products/product-media/components/product-media-view/product-media-view.tsx"() {
    "use strict";
    import_react_router_dom40 = require("react-router-dom");
    init_edit_product_media_form2();
    init_product_media_gallery2();
    init_product_media_view_context();
    import_jsx_runtime146 = require("react/jsx-runtime");
    getView = (searchParams) => {
      const view = searchParams.get("view");
      if (view === "edit" /* EDIT */) {
        return "edit" /* EDIT */;
      }
      return "gallery" /* GALLERY */;
    };
    ProductMediaView = ({ product }) => {
      const [searchParams, setSearchParams] = (0, import_react_router_dom40.useSearchParams)();
      const view = getView(searchParams);
      const handleGoToView = (view2) => {
        return () => {
          setSearchParams({ view: view2 });
        };
      };
      return /* @__PURE__ */ (0, import_jsx_runtime146.jsx)(
        ProductMediaViewContext.Provider,
        {
          value: {
            goToGallery: handleGoToView("gallery" /* GALLERY */),
            goToEdit: handleGoToView("edit" /* EDIT */)
          },
          children: renderView(view, product)
        }
      );
    };
    renderView = (view, product) => {
      switch (view) {
        case "gallery" /* GALLERY */:
          return /* @__PURE__ */ (0, import_jsx_runtime146.jsx)(ProductMediaGallery, { product });
        case "edit" /* EDIT */:
          return /* @__PURE__ */ (0, import_jsx_runtime146.jsx)(EditProductMediaForm, { product });
      }
    };
  }
});

// src/routes/products/product-media/components/product-media-view/index.ts
var init_product_media_view2 = __esm({
  "src/routes/products/product-media/components/product-media-view/index.ts"() {
    "use strict";
    init_product_media_view();
  }
});

// src/routes/products/product-media/product-media.tsx
var import_react_router_dom41, import_jsx_runtime147, ProductMedia;
var init_product_media = __esm({
  "src/routes/products/product-media/product-media.tsx"() {
    "use strict";
    import_react_router_dom41 = require("react-router-dom");
    init_modals();
    init_products();
    init_product_media_view2();
    import_jsx_runtime147 = require("react/jsx-runtime");
    ProductMedia = () => {
      const { id: id2 } = (0, import_react_router_dom41.useParams)();
      const { product, isLoading, isError, error } = useProduct(id2);
      const ready = !isLoading && product;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime147.jsx)(RouteFocusModal, { children: ready && /* @__PURE__ */ (0, import_jsx_runtime147.jsx)(ProductMediaView, { product }) });
    };
  }
});

// src/routes/products/product-media/index.ts
var product_media_exports = {};
__export(product_media_exports, {
  Component: () => ProductMedia
});
var init_product_media2 = __esm({
  "src/routes/products/product-media/index.ts"() {
    "use strict";
    init_product_media();
  }
});

// src/routes/products/common/variant-pricing-form.tsx
var import_react103, import_react_hook_form18, import_react_i18next91, import_jsx_runtime148, VariantPricingForm, columnHelper8, useVariantPriceGridColumns;
var init_variant_pricing_form = __esm({
  "src/routes/products/common/variant-pricing-form.tsx"() {
    "use strict";
    import_react103 = require("react");
    import_react_hook_form18 = require("react-hook-form");
    import_react_i18next91 = require("react-i18next");
    init_data_grid2();
    init_modals();
    init_price_preferences();
    init_regions();
    init_store();
    import_jsx_runtime148 = require("react/jsx-runtime");
    VariantPricingForm = ({ form }) => {
      const { store } = useStore();
      const { regions } = useRegions({ limit: 9999 });
      const { price_preferences: pricePreferences } = usePricePreferences({});
      const { setCloseOnEscape } = useRouteModal();
      const columns = useVariantPriceGridColumns({
        currencies: store?.supported_currencies,
        regions,
        pricePreferences
      });
      const variants = (0, import_react_hook_form18.useWatch)({
        control: form.control,
        name: "variants"
      });
      return /* @__PURE__ */ (0, import_jsx_runtime148.jsx)(
        DataGrid,
        {
          columns,
          data: variants,
          state: form,
          onEditingChange: (editing) => setCloseOnEscape(!editing)
        }
      );
    };
    columnHelper8 = createDataGridHelper();
    useVariantPriceGridColumns = ({
      currencies: currencies2 = [],
      regions = [],
      pricePreferences = []
    }) => {
      const { t: t4 } = (0, import_react_i18next91.useTranslation)();
      return (0, import_react103.useMemo)(() => {
        return [
          columnHelper8.column({
            id: t4("fields.title"),
            header: t4("fields.title"),
            cell: (context) => {
              const entity = context.row.original;
              return /* @__PURE__ */ (0, import_jsx_runtime148.jsx)(DataGrid.ReadonlyCell, { context, children: /* @__PURE__ */ (0, import_jsx_runtime148.jsx)("div", { className: "flex h-full w-full items-center gap-x-2 overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime148.jsx)("span", { className: "truncate", children: entity.title }) }) });
            },
            disableHiding: true
          }),
          ...createDataGridPriceColumns({
            currencies: currencies2.map((c) => c.currency_code),
            regions,
            pricePreferences,
            getFieldName: (context, value) => {
              if (context.column.id?.startsWith("currency_prices")) {
                return `variants.${context.row.index}.prices.${value}`;
              }
              return `variants.${context.row.index}.prices.${value}`;
            },
            t: t4
          })
        ];
      }, [t4, currencies2, regions, pricePreferences]);
    };
  }
});

// src/routes/products/product-prices/pricing-edit.tsx
var import_zod10, import_ui95, import_react104, import_react_hook_form19, import_react_i18next92, zod5, import_jsx_runtime149, UpdateVariantPricesSchema, PricingEdit;
var init_pricing_edit = __esm({
  "src/routes/products/product-prices/pricing-edit.tsx"() {
    "use strict";
    import_zod10 = require("@hookform/resolvers/zod");
    import_ui95 = require("@medusajs/ui");
    import_react104 = require("react");
    import_react_hook_form19 = require("react-hook-form");
    import_react_i18next92 = require("react-i18next");
    zod5 = __toESM(require("zod"));
    init_modals();
    init_keybound_form2();
    init_products();
    init_regions();
    init_cast_number();
    init_variant_pricing_form();
    import_jsx_runtime149 = require("react/jsx-runtime");
    UpdateVariantPricesSchema = zod5.object({
      variants: zod5.array(
        zod5.object({
          prices: zod5.record(zod5.string(), zod5.string().or(zod5.number()).optional()).optional()
        })
      )
    });
    PricingEdit = ({
      product,
      variantId
    }) => {
      const { t: t4 } = (0, import_react_i18next92.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const { mutateAsync, isPending } = useUpdateProductVariantsBatch(product.id);
      const { regions } = useRegions({ limit: 9999 });
      const regionsCurrencyMap = (0, import_react104.useMemo)(() => {
        if (!regions?.length) {
          return {};
        }
        return regions.reduce((acc, reg) => {
          acc[reg.id] = reg.currency_code;
          return acc;
        }, {});
      }, [regions]);
      const variants = variantId ? product.variants.filter((v) => v.id === variantId) : product.variants;
      const form = (0, import_react_hook_form19.useForm)({
        defaultValues: {
          variants: variants.map((variant) => ({
            title: variant.title,
            prices: variant.prices.reduce((acc, price) => {
              if (price.rules?.region_id) {
                acc[price.rules.region_id] = price.amount;
              } else {
                acc[price.currency_code] = price.amount;
              }
              return acc;
            }, {})
          }))
        },
        resolver: (0, import_zod10.zodResolver)(UpdateVariantPricesSchema, {})
      });
      const handleSubmit = form.handleSubmit(async (values) => {
        const reqData = values.variants.map((variant, ind) => ({
          id: variants[ind].id,
          prices: Object.entries(variant.prices || {}).filter(
            ([_, value]) => value !== "" && typeof value !== "undefined"
            // deleted cells
          ).map(([currencyCodeOrRegionId, value]) => {
            const regionId = currencyCodeOrRegionId.startsWith("reg_") ? currencyCodeOrRegionId : void 0;
            const currencyCode = currencyCodeOrRegionId.startsWith("reg_") ? regionsCurrencyMap[regionId] : currencyCodeOrRegionId;
            let existingId = void 0;
            if (regionId) {
              existingId = variants[ind].prices.find(
                (p) => p.rules["region_id"] === regionId
              )?.id;
            } else {
              existingId = variants[ind].prices.find(
                (p) => p.currency_code === currencyCode && Object.keys(p.rules ?? {}).length === 0
              )?.id;
            }
            const amount = castNumber(value);
            return {
              id: existingId,
              currency_code: currencyCode,
              amount,
              ...regionId ? { rules: { region_id: regionId } } : {}
            };
          })
        }));
        await mutateAsync(reqData, {
          onSuccess: () => {
            handleSuccess("..");
          }
        });
      });
      return /* @__PURE__ */ (0, import_jsx_runtime149.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime149.jsxs)(KeyboundForm, { onSubmit: handleSubmit, className: "flex size-full flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime149.jsx)(RouteFocusModal.Header, {}),
        /* @__PURE__ */ (0, import_jsx_runtime149.jsx)(RouteFocusModal.Body, { className: "flex flex-col overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime149.jsx)(VariantPricingForm, { form }) }),
        /* @__PURE__ */ (0, import_jsx_runtime149.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime149.jsxs)("div", { className: "flex w-full items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime149.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime149.jsx)(import_ui95.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime149.jsx)(
            import_ui95.Button,
            {
              type: "submit",
              variant: "primary",
              size: "small",
              isLoading: isPending,
              children: t4("actions.save")
            }
          )
        ] }) })
      ] }) });
    };
  }
});

// src/routes/products/product-prices/product-prices.tsx
var import_react_router_dom42, import_jsx_runtime150, ProductPrices;
var init_product_prices = __esm({
  "src/routes/products/product-prices/product-prices.tsx"() {
    "use strict";
    import_react_router_dom42 = require("react-router-dom");
    init_modals();
    init_products();
    init_pricing_edit();
    import_jsx_runtime150 = require("react/jsx-runtime");
    ProductPrices = () => {
      const { id: id2, variant_id } = (0, import_react_router_dom42.useParams)();
      const { product, isLoading, isError, error } = useProduct(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime150.jsx)(RouteFocusModal, { children: !isLoading && product && /* @__PURE__ */ (0, import_jsx_runtime150.jsx)(PricingEdit, { product, variantId: variant_id }) });
    };
  }
});

// src/routes/products/product-prices/index.ts
var product_prices_exports = {};
__export(product_prices_exports, {
  Component: () => ProductPrices
});
var init_product_prices2 = __esm({
  "src/routes/products/product-prices/index.ts"() {
    "use strict";
    init_product_prices();
  }
});

// src/routes/products/product-create-option/components/create-product-option-form/create-product-option-form.tsx
var import_zod11, import_ui96, import_react_hook_form20, import_react_i18next93, import_zod12, import_jsx_runtime151, CreateProductOptionSchema, CreateProductOptionForm;
var init_create_product_option_form = __esm({
  "src/routes/products/product-create-option/components/create-product-option-form/create-product-option-form.tsx"() {
    "use strict";
    import_zod11 = require("@hookform/resolvers/zod");
    import_ui96 = require("@medusajs/ui");
    import_react_hook_form20 = require("react-hook-form");
    import_react_i18next93 = require("react-i18next");
    import_zod12 = require("zod");
    init_form2();
    init_chip_input2();
    init_modals();
    init_keybound_form2();
    init_products();
    import_jsx_runtime151 = require("react/jsx-runtime");
    CreateProductOptionSchema = import_zod12.z.object({
      title: import_zod12.z.string().min(1),
      values: import_zod12.z.array(import_zod12.z.string()).optional()
    });
    CreateProductOptionForm = ({
      product
    }) => {
      const { t: t4 } = (0, import_react_i18next93.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form20.useForm)({
        defaultValues: {
          title: "",
          values: []
        },
        resolver: (0, import_zod11.zodResolver)(CreateProductOptionSchema)
      });
      const { mutateAsync, isPending } = useCreateProductOption(product.id);
      const handleSubmit = form.handleSubmit(async (values) => {
        mutateAsync(values, {
          onSuccess: () => {
            import_ui96.toast.success(
              t4("products.options.create.successToast", {
                title: values.title
              })
            );
            handleSuccess();
          },
          onError: async (err) => {
            import_ui96.toast.error(err.message);
          }
        });
      });
      return /* @__PURE__ */ (0, import_jsx_runtime151.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime151.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex flex-1 flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime151.jsxs)(RouteDrawer.Body, { className: "flex flex-1 flex-col gap-y-4 overflow-auto", children: [
              /* @__PURE__ */ (0, import_jsx_runtime151.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "title",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime151.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime151.jsx)(Form.Label, { children: t4("products.fields.options.optionTitle") }),
                      /* @__PURE__ */ (0, import_jsx_runtime151.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime151.jsx)(
                        import_ui96.Input,
                        {
                          ...field,
                          placeholder: t4(
                            "products.fields.options.optionTitlePlaceholder"
                          )
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime151.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime151.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "values",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime151.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime151.jsx)(Form.Label, { children: t4("products.fields.options.variations") }),
                      /* @__PURE__ */ (0, import_jsx_runtime151.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime151.jsx)(
                        ChipInput,
                        {
                          ...field,
                          placeholder: t4(
                            "products.fields.options.variantionsPlaceholder"
                          )
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime151.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              )
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime151.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime151.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime151.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime151.jsx)(import_ui96.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime151.jsx)(import_ui96.Button, { type: "submit", size: "small", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/products/product-create-option/components/create-product-option-form/index.ts
var init_create_product_option_form2 = __esm({
  "src/routes/products/product-create-option/components/create-product-option-form/index.ts"() {
    "use strict";
    init_create_product_option_form();
  }
});

// src/routes/products/product-create-option/product-create-option.tsx
var import_ui97, import_react_i18next94, import_react_router_dom43, import_jsx_runtime152, ProductCreateOption;
var init_product_create_option = __esm({
  "src/routes/products/product-create-option/product-create-option.tsx"() {
    "use strict";
    import_ui97 = require("@medusajs/ui");
    import_react_i18next94 = require("react-i18next");
    import_react_router_dom43 = require("react-router-dom");
    init_modals();
    init_products();
    init_create_product_option_form2();
    import_jsx_runtime152 = require("react/jsx-runtime");
    ProductCreateOption = () => {
      const { id: id2 } = (0, import_react_router_dom43.useParams)();
      const { t: t4 } = (0, import_react_i18next94.useTranslation)();
      const { product, isLoading, isError, error } = useProduct(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime152.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime152.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime152.jsx)(import_ui97.Heading, { children: t4("products.options.create.header") }) }),
        !isLoading && product && /* @__PURE__ */ (0, import_jsx_runtime152.jsx)(CreateProductOptionForm, { product })
      ] });
    };
  }
});

// src/routes/products/product-create-option/index.ts
var product_create_option_exports = {};
__export(product_create_option_exports, {
  Component: () => ProductCreateOption
});
var init_product_create_option2 = __esm({
  "src/routes/products/product-create-option/index.ts"() {
    "use strict";
    init_product_create_option();
  }
});

// src/routes/products/product-edit-option/components/edit-product-option-form/edit-product-option-form.tsx
var import_zod13, import_ui98, import_react_hook_form21, import_react_i18next95, import_zod14, import_jsx_runtime153, CreateProductOptionSchema2, CreateProductOptionForm2;
var init_edit_product_option_form = __esm({
  "src/routes/products/product-edit-option/components/edit-product-option-form/edit-product-option-form.tsx"() {
    "use strict";
    import_zod13 = require("@hookform/resolvers/zod");
    import_ui98 = require("@medusajs/ui");
    import_react_hook_form21 = require("react-hook-form");
    import_react_i18next95 = require("react-i18next");
    import_zod14 = require("zod");
    init_form2();
    init_chip_input2();
    init_modals();
    init_keybound_form2();
    init_products();
    import_jsx_runtime153 = require("react/jsx-runtime");
    CreateProductOptionSchema2 = import_zod14.z.object({
      title: import_zod14.z.string().min(1),
      values: import_zod14.z.array(import_zod14.z.string()).optional()
    });
    CreateProductOptionForm2 = ({
      option
    }) => {
      const { t: t4 } = (0, import_react_i18next95.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form21.useForm)({
        defaultValues: {
          title: option.title,
          values: option.values.map((v) => v.value)
        },
        resolver: (0, import_zod13.zodResolver)(CreateProductOptionSchema2)
      });
      const { mutateAsync, isPending } = useUpdateProductOption(
        option.product_id,
        option.id
      );
      const handleSubmit = form.handleSubmit(async (values) => {
        mutateAsync(
          {
            id: option.id,
            ...values
          },
          {
            onSuccess: () => {
              handleSuccess();
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime153.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime153.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex flex-1 flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime153.jsxs)(RouteDrawer.Body, { className: "flex flex-1 flex-col gap-y-4 overflow-auto", children: [
              /* @__PURE__ */ (0, import_jsx_runtime153.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "title",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime153.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime153.jsx)(Form.Label, { children: t4("products.fields.options.optionTitle") }),
                      /* @__PURE__ */ (0, import_jsx_runtime153.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime153.jsx)(
                        import_ui98.Input,
                        {
                          ...field,
                          placeholder: t4(
                            "products.fields.options.optionTitlePlaceholder"
                          )
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime153.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime153.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "values",
                  render: ({ field: { ...field } }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime153.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime153.jsx)(Form.Label, { children: t4("products.fields.options.variations") }),
                      /* @__PURE__ */ (0, import_jsx_runtime153.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime153.jsx)(
                        ChipInput,
                        {
                          ...field,
                          placeholder: t4(
                            "products.fields.options.variantionsPlaceholder"
                          )
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime153.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              )
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime153.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime153.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime153.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime153.jsx)(import_ui98.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime153.jsx)(import_ui98.Button, { type: "submit", size: "small", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/products/product-edit-option/components/edit-product-option-form/index.ts
var init_edit_product_option_form2 = __esm({
  "src/routes/products/product-edit-option/components/edit-product-option-form/index.ts"() {
    "use strict";
    init_edit_product_option_form();
  }
});

// src/routes/products/product-edit-option/product-edit-option.tsx
var import_ui99, import_react_i18next96, import_react_router_dom44, import_jsx_runtime154, ProductEditOption;
var init_product_edit_option = __esm({
  "src/routes/products/product-edit-option/product-edit-option.tsx"() {
    "use strict";
    import_ui99 = require("@medusajs/ui");
    import_react_i18next96 = require("react-i18next");
    import_react_router_dom44 = require("react-router-dom");
    init_modals();
    init_products();
    init_edit_product_option_form2();
    import_jsx_runtime154 = require("react/jsx-runtime");
    ProductEditOption = () => {
      const { id: id2, option_id } = (0, import_react_router_dom44.useParams)();
      const { t: t4 } = (0, import_react_i18next96.useTranslation)();
      const { product, isPending, isFetching, isError, error } = useProduct(id2);
      const option = product?.options.find((o) => o.id === option_id);
      if (!isPending && !isFetching && !option) {
        throw (0, import_react_router_dom44.json)({ message: `An option with ID ${option_id} was not found` }, 404);
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime154.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime154.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime154.jsx)(import_ui99.Heading, { children: t4("products.options.edit.header") }) }),
        option && /* @__PURE__ */ (0, import_jsx_runtime154.jsx)(CreateProductOptionForm2, { option })
      ] });
    };
  }
});

// src/routes/products/product-edit-option/index.ts
var product_edit_option_exports = {};
__export(product_edit_option_exports, {
  Component: () => ProductEditOption
});
var init_product_edit_option2 = __esm({
  "src/routes/products/product-edit-option/index.ts"() {
    "use strict";
    init_product_edit_option();
  }
});

// src/routes/products/product-create-variant/components/create-product-variant-form/constants.ts
var import_zod15, zod6, CreateProductVariantSchema, CreateVariantDetailsSchema, CreateVariantDetailsFields, CreateVariantPriceSchema, CreateVariantPriceFields;
var init_constants5 = __esm({
  "src/routes/products/product-create-variant/components/create-product-variant-form/constants.ts"() {
    "use strict";
    import_zod15 = require("zod");
    zod6 = __toESM(require("zod"));
    init_validation();
    CreateProductVariantSchema = import_zod15.z.object({
      title: import_zod15.z.string().min(1),
      sku: import_zod15.z.string().optional(),
      manage_inventory: import_zod15.z.boolean().optional(),
      allow_backorder: import_zod15.z.boolean().optional(),
      inventory_kit: import_zod15.z.boolean().optional(),
      options: import_zod15.z.record(import_zod15.z.string()),
      prices: zod6.record(zod6.string(), zod6.string().or(zod6.number()).optional()).optional(),
      inventory: import_zod15.z.array(
        import_zod15.z.object({
          inventory_item_id: import_zod15.z.string(),
          required_quantity: optionalInt
        })
      ).optional()
    });
    CreateVariantDetailsSchema = CreateProductVariantSchema.pick({
      title: true,
      sku: true,
      manage_inventory: true,
      allow_backorder: true,
      inventory_kit: true,
      options: true
    });
    CreateVariantDetailsFields = Object.keys(
      CreateVariantDetailsSchema.shape
    );
    CreateVariantPriceSchema = CreateProductVariantSchema.pick({
      prices: true
    });
    CreateVariantPriceFields = Object.keys(
      CreateVariantPriceSchema.shape
    );
  }
});

// src/routes/products/product-create-variant/components/create-product-variant-form/details-tab.tsx
function DetailsTab({ form, product }) {
  const { t: t4 } = (0, import_react_i18next97.useTranslation)();
  const manageInventoryEnabled = (0, import_react_hook_form22.useWatch)({
    control: form.control,
    name: "manage_inventory"
  });
  return /* @__PURE__ */ (0, import_jsx_runtime155.jsx)("div", { className: "flex flex-1 flex-col items-center overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime155.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8 px-8 py-16", children: [
    /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(import_ui100.Heading, { level: "h1", children: t4("products.variant.create.header") }),
    /* @__PURE__ */ (0, import_jsx_runtime155.jsxs)("div", { className: "my-8 grid grid-cols-1 gap-4 md:grid-cols-2", children: [
      /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(
        Form.Field,
        {
          control: form.control,
          name: "title",
          render: ({ field }) => {
            return /* @__PURE__ */ (0, import_jsx_runtime155.jsxs)(Form.Item, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(Form.Label, { children: t4("fields.title") }),
              /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(import_ui100.Input, { ...field }) }),
              /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(Form.ErrorMessage, {})
            ] });
          }
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(
        Form.Field,
        {
          control: form.control,
          name: "sku",
          render: ({ field }) => {
            return /* @__PURE__ */ (0, import_jsx_runtime155.jsxs)(Form.Item, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(Form.Label, { optional: true, children: t4("fields.sku") }),
              /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(import_ui100.Input, { ...field }) }),
              /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(Form.ErrorMessage, {})
            ] });
          }
        }
      ),
      product.options.map((option) => /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(
        Form.Field,
        {
          control: form.control,
          name: `options.${option.title}`,
          render: ({ field: { value, onChange, ...field } }) => {
            return /* @__PURE__ */ (0, import_jsx_runtime155.jsxs)(Form.Item, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(Form.Label, { children: option.title }),
              /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(
                Combobox,
                {
                  value,
                  onChange: (v) => {
                    onChange(v);
                  },
                  ...field,
                  options: option.values.map((v) => ({
                    label: v.value,
                    value: v.value
                  }))
                }
              ) })
            ] });
          }
        },
        option.id
      ))
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime155.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
      /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(
        Form.Field,
        {
          control: form.control,
          name: "manage_inventory",
          render: ({ field: { value, onChange, ...field } }) => {
            return /* @__PURE__ */ (0, import_jsx_runtime155.jsxs)(Form.Item, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime155.jsxs)("div", { className: "bg-ui-bg-component shadow-elevation-card-rest flex gap-x-3 rounded-lg p-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(
                  import_ui100.Switch,
                  {
                    className: "mt-[2px]",
                    checked: value,
                    onCheckedChange: (checked) => onChange(!!checked),
                    ...field
                  }
                ) }),
                /* @__PURE__ */ (0, import_jsx_runtime155.jsxs)("div", { className: "flex flex-col", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(Form.Label, { children: t4("products.variant.inventory.manageInventoryLabel") }),
                  /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(Form.Hint, { children: t4("products.variant.inventory.manageInventoryHint") })
                ] })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(Form.ErrorMessage, {})
            ] });
          }
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(
        Form.Field,
        {
          control: form.control,
          name: "allow_backorder",
          disabled: !manageInventoryEnabled,
          render: ({ field: { value, onChange, ...field } }) => {
            return /* @__PURE__ */ (0, import_jsx_runtime155.jsxs)(Form.Item, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime155.jsxs)("div", { className: "bg-ui-bg-component shadow-elevation-card-rest flex gap-x-3 rounded-lg p-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(
                  import_ui100.Switch,
                  {
                    checked: value,
                    onCheckedChange: (checked) => onChange(!!checked),
                    ...field,
                    disabled: !manageInventoryEnabled
                  }
                ) }),
                /* @__PURE__ */ (0, import_jsx_runtime155.jsxs)("div", { className: "flex flex-col", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(Form.Label, { children: t4("products.variant.inventory.allowBackordersLabel") }),
                  /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(Form.Hint, { children: t4("products.variant.inventory.allowBackordersHint") })
                ] })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(Form.ErrorMessage, {})
            ] });
          }
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(
        Form.Field,
        {
          control: form.control,
          name: "inventory_kit",
          render: ({ field: { value, onChange, ...field } }) => {
            return /* @__PURE__ */ (0, import_jsx_runtime155.jsxs)(Form.Item, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime155.jsxs)("div", { className: "bg-ui-bg-component shadow-elevation-card-rest flex gap-x-3 rounded-lg p-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(
                  import_ui100.Switch,
                  {
                    checked: value,
                    onCheckedChange: (checked) => onChange(!!checked),
                    ...field,
                    disabled: !manageInventoryEnabled
                  }
                ) }),
                /* @__PURE__ */ (0, import_jsx_runtime155.jsxs)("div", { className: "flex flex-col", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(Form.Label, { children: t4("products.variant.inventory.inventoryKit") }),
                  /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(Form.Hint, { children: t4("products.variant.inventory.inventoryKitHint") })
                ] })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime155.jsx)(Form.ErrorMessage, {})
            ] });
          }
        }
      )
    ] })
  ] }) });
}
var import_ui100, import_react_hook_form22, import_react_i18next97, import_jsx_runtime155, details_tab_default;
var init_details_tab = __esm({
  "src/routes/products/product-create-variant/components/create-product-variant-form/details-tab.tsx"() {
    "use strict";
    import_ui100 = require("@medusajs/ui");
    import_react_hook_form22 = require("react-hook-form");
    import_react_i18next97 = require("react-i18next");
    init_form2();
    init_combobox2();
    import_jsx_runtime155 = require("react/jsx-runtime");
    details_tab_default = DetailsTab;
  }
});

// src/routes/products/product-create-variant/components/create-product-variant-form/inventory-kit-tab.tsx
function InventoryKitTab({ form }) {
  const { t: t4 } = (0, import_react_i18next98.useTranslation)();
  const inventory = (0, import_react_hook_form23.useFieldArray)({
    control: form.control,
    name: `inventory`
  });
  const inventoryFormData = inventory.fields;
  const items = useComboboxData({
    queryKey: ["inventory_items"],
    queryFn: (params2) => sdk.admin.inventoryItem.list(params2),
    getOptions: (data) => data.inventory_items.map((item) => ({
      label: item.title,
      value: item.id
    }))
  });
  const isItemOptionDisabled = (option, inventoryIndex) => {
    return inventoryFormData?.some(
      (i, index2) => index2 != inventoryIndex && i.inventory_item_id === option.value
    );
  };
  return /* @__PURE__ */ (0, import_jsx_runtime156.jsx)("div", { className: "flex flex-col items-center p-16", children: /* @__PURE__ */ (0, import_jsx_runtime156.jsx)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8", children: /* @__PURE__ */ (0, import_jsx_runtime156.jsxs)("div", { id: "organize", className: "flex flex-col gap-y-8", children: [
    /* @__PURE__ */ (0, import_jsx_runtime156.jsx)(import_ui101.Heading, { children: t4("products.create.inventory.heading") }),
    /* @__PURE__ */ (0, import_jsx_runtime156.jsxs)("div", { className: "grid gap-y-4", children: [
      /* @__PURE__ */ (0, import_jsx_runtime156.jsxs)("div", { className: "flex items-start justify-between gap-x-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime156.jsxs)("div", { className: "flex flex-col", children: [
          /* @__PURE__ */ (0, import_jsx_runtime156.jsx)(Form.Label, { children: form.getValues("title") }),
          /* @__PURE__ */ (0, import_jsx_runtime156.jsx)(Form.Hint, { children: t4("products.create.inventory.label") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime156.jsx)(
          import_ui101.Button,
          {
            size: "small",
            variant: "secondary",
            type: "button",
            onClick: () => {
              inventory.append({
                inventory_item_id: "",
                required_quantity: ""
              });
            },
            children: t4("actions.add")
          }
        )
      ] }),
      inventory.fields.map((inventoryItem, inventoryIndex) => /* @__PURE__ */ (0, import_jsx_runtime156.jsxs)(
        "li",
        {
          className: "bg-ui-bg-component shadow-elevation-card-rest grid grid-cols-[1fr_28px] items-center gap-1.5 rounded-xl p-1.5",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime156.jsxs)("div", { className: "grid grid-cols-[min-content,1fr] items-center gap-1.5", children: [
              /* @__PURE__ */ (0, import_jsx_runtime156.jsx)("div", { className: "flex items-center px-2 py-1.5", children: /* @__PURE__ */ (0, import_jsx_runtime156.jsx)(
                import_ui101.Label,
                {
                  size: "xsmall",
                  weight: "plus",
                  className: "text-ui-fg-subtle",
                  htmlFor: `inventory.${inventoryIndex}.inventory_item_id`,
                  children: t4("fields.item")
                }
              ) }),
              /* @__PURE__ */ (0, import_jsx_runtime156.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: `inventory.${inventoryIndex}.inventory_item_id`,
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime156.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime156.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime156.jsx)(
                      Combobox,
                      {
                        ...field,
                        options: items.options.map((o) => ({
                          ...o,
                          disabled: isItemOptionDisabled(
                            o,
                            inventoryIndex
                          )
                        })),
                        searchValue: items.searchValue,
                        onSearchValueChange: items.onSearchValueChange,
                        fetchNextPage: items.fetchNextPage,
                        className: "bg-ui-bg-field-component hover:bg-ui-bg-field-component-hover",
                        placeholder: t4(
                          "products.create.inventory.itemPlaceholder"
                        )
                      }
                    ) }) });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime156.jsx)("div", { className: "flex items-center px-2 py-1.5", children: /* @__PURE__ */ (0, import_jsx_runtime156.jsx)(
                import_ui101.Label,
                {
                  size: "xsmall",
                  weight: "plus",
                  className: "text-ui-fg-subtle",
                  htmlFor: `inventory.${inventoryIndex}.required_quantity`,
                  children: t4("fields.quantity")
                }
              ) }),
              /* @__PURE__ */ (0, import_jsx_runtime156.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: `inventory.${inventoryIndex}.required_quantity`,
                  render: ({ field: { onChange, value, ...field } }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime156.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime156.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime156.jsx)(
                        import_ui101.Input,
                        {
                          type: "number",
                          className: "bg-ui-bg-field-component",
                          min: 0,
                          value,
                          onChange: (e) => {
                            const value2 = e.target.value;
                            if (value2 === "") {
                              onChange(null);
                            } else {
                              onChange(Number(value2));
                            }
                          },
                          ...field,
                          placeholder: t4(
                            "products.create.inventory.quantityPlaceholder"
                          )
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime156.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              )
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime156.jsx)(
              import_ui101.IconButton,
              {
                type: "button",
                size: "small",
                variant: "transparent",
                className: "text-ui-fg-muted",
                onClick: () => inventory.remove(inventoryIndex),
                children: /* @__PURE__ */ (0, import_jsx_runtime156.jsx)(import_icons48.XMarkMini, {})
              }
            )
          ]
        },
        inventoryItem.id
      ))
    ] })
  ] }) }) });
}
var import_react_hook_form23, import_ui101, import_icons48, import_react_i18next98, import_jsx_runtime156, inventory_kit_tab_default;
var init_inventory_kit_tab = __esm({
  "src/routes/products/product-create-variant/components/create-product-variant-form/inventory-kit-tab.tsx"() {
    "use strict";
    import_react_hook_form23 = require("react-hook-form");
    import_ui101 = require("@medusajs/ui");
    import_icons48 = require("@medusajs/icons");
    import_react_i18next98 = require("react-i18next");
    init_use_combobox_data();
    init_client2();
    init_form2();
    init_combobox2();
    import_jsx_runtime156 = require("react/jsx-runtime");
    inventory_kit_tab_default = InventoryKitTab;
  }
});

// src/routes/products/product-create-variant/components/create-product-variant-form/pricing-tab.tsx
function PricingTab({ form }) {
  const { store } = useStore();
  const { regions } = useRegions({ limit: 9999 });
  const { price_preferences: pricePreferences } = usePricePreferences({});
  const { setCloseOnEscape } = useRouteModal();
  const columns = useVariantPriceGridColumns2({
    currencies: store?.supported_currencies,
    regions,
    pricePreferences
  });
  const variant = (0, import_react_hook_form24.useWatch)({
    control: form.control
  });
  return /* @__PURE__ */ (0, import_jsx_runtime157.jsx)(
    DataGrid,
    {
      columns,
      data: [variant],
      state: form,
      onEditingChange: (editing) => setCloseOnEscape(!editing)
    }
  );
}
var import_react105, import_react_hook_form24, import_react_i18next99, import_jsx_runtime157, columnHelper9, useVariantPriceGridColumns2, pricing_tab_default;
var init_pricing_tab = __esm({
  "src/routes/products/product-create-variant/components/create-product-variant-form/pricing-tab.tsx"() {
    "use strict";
    import_react105 = require("react");
    import_react_hook_form24 = require("react-hook-form");
    import_react_i18next99 = require("react-i18next");
    init_api();
    init_price_preferences();
    init_modals();
    init_data_grid2();
    import_jsx_runtime157 = require("react/jsx-runtime");
    columnHelper9 = createDataGridHelper();
    useVariantPriceGridColumns2 = ({
      currencies: currencies2 = [],
      regions = [],
      pricePreferences = []
    }) => {
      const { t: t4 } = (0, import_react_i18next99.useTranslation)();
      return (0, import_react105.useMemo)(() => {
        return [
          columnHelper9.column({
            id: t4("fields.title"),
            header: t4("fields.title"),
            cell: (context) => {
              const entity = context.row.original;
              return /* @__PURE__ */ (0, import_jsx_runtime157.jsx)(DataGrid.ReadonlyCell, { context, children: /* @__PURE__ */ (0, import_jsx_runtime157.jsx)("div", { className: "flex h-full w-full items-center gap-x-2 overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime157.jsx)("span", { className: "truncate", children: entity.title }) }) });
            },
            disableHiding: true
          }),
          ...createDataGridPriceColumns({
            currencies: currencies2.map((c) => c.currency_code),
            regions,
            pricePreferences,
            getFieldName: (context, value) => {
              if (context.column.id?.startsWith("currency_prices")) {
                return `prices.${value}`;
              }
              return `prices.${value}`;
            },
            t: t4
          })
        ];
      }, [t4, currencies2, regions, pricePreferences]);
    };
    pricing_tab_default = PricingTab;
  }
});

// src/routes/products/product-create-variant/components/create-product-variant-form/create-product-variant-form.tsx
var import_zod16, import_ui102, import_react106, import_react_hook_form25, import_react_i18next100, import_jsx_runtime158, initialTabState, CreateProductVariantForm, PrimaryButton2;
var init_create_product_variant_form = __esm({
  "src/routes/products/product-create-variant/components/create-product-variant-form/create-product-variant-form.tsx"() {
    "use strict";
    import_zod16 = require("@hookform/resolvers/zod");
    import_ui102 = require("@medusajs/ui");
    import_react106 = require("react");
    import_react_hook_form25 = require("react-hook-form");
    import_react_i18next100 = require("react-i18next");
    init_modals();
    init_keybound_form2();
    init_api();
    init_products();
    init_cast_number();
    init_validation();
    init_constants5();
    init_details_tab();
    init_inventory_kit_tab();
    init_pricing_tab();
    import_jsx_runtime158 = require("react/jsx-runtime");
    initialTabState = {
      ["detail" /* DETAIL */]: "in-progress",
      ["price" /* PRICE */]: "not-started",
      ["inventory" /* INVENTORY */]: "not-started"
    };
    CreateProductVariantForm = ({
      product
    }) => {
      const { t: t4 } = (0, import_react_i18next100.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const [tab, setTab] = (0, import_react106.useState)("detail" /* DETAIL */);
      const [tabState, setTabState] = (0, import_react106.useState)(initialTabState);
      const form = (0, import_react_hook_form25.useForm)({
        defaultValues: {
          sku: "",
          title: "",
          manage_inventory: false,
          allow_backorder: false,
          inventory_kit: false,
          options: {}
        },
        resolver: (0, import_zod16.zodResolver)(CreateProductVariantSchema)
      });
      const { mutateAsync, isPending } = useCreateProductVariant(product.id);
      const { regions } = useRegions({ limit: 9999 });
      const regionsCurrencyMap = (0, import_react106.useMemo)(() => {
        if (!regions?.length) {
          return {};
        }
        return regions.reduce((acc, reg) => {
          acc[reg.id] = reg.currency_code;
          return acc;
        }, {});
      }, [regions]);
      const isManageInventoryEnabled = (0, import_react_hook_form25.useWatch)({
        control: form.control,
        name: "manage_inventory"
      });
      const isInventoryKitEnabled = (0, import_react_hook_form25.useWatch)({
        control: form.control,
        name: "inventory_kit"
      });
      const inventoryField = (0, import_react_hook_form25.useFieldArray)({
        control: form.control,
        name: `inventory`
      });
      const inventoryTabEnabled = isManageInventoryEnabled && isInventoryKitEnabled;
      const tabOrder3 = (0, import_react106.useMemo)(() => {
        if (inventoryTabEnabled) {
          return ["detail" /* DETAIL */, "price" /* PRICE */, "inventory" /* INVENTORY */];
        }
        return ["detail" /* DETAIL */, "price" /* PRICE */];
      }, [inventoryTabEnabled]);
      (0, import_react106.useEffect)(() => {
        if (isInventoryKitEnabled && inventoryField.fields.length === 0) {
          inventoryField.append({
            inventory_item_id: "",
            required_quantity: void 0
          });
        }
      }, [isInventoryKitEnabled]);
      const handleChangeTab = (update) => {
        if (tab === update) {
          return;
        }
        if (tabOrder3.indexOf(update) < tabOrder3.indexOf(tab)) {
          const isCurrentTabDirty = false;
          setTabState((prev) => ({
            ...prev,
            [tab]: isCurrentTabDirty ? prev[tab] : "not-started",
            [update]: "in-progress"
          }));
          setTab(update);
          return;
        }
        const tabs = tabOrder3.slice(0, tabOrder3.indexOf(update));
        for (const tab2 of tabs) {
          if (tab2 === "detail" /* DETAIL */) {
            if (!partialFormValidation(
              form,
              CreateVariantDetailsFields,
              CreateVariantDetailsSchema
            )) {
              setTabState((prev) => ({
                ...prev,
                [tab2]: "in-progress"
              }));
              setTab(tab2);
              return;
            }
            setTabState((prev) => ({
              ...prev,
              [tab2]: "completed"
            }));
          } else if (tab2 === "price" /* PRICE */) {
            if (!partialFormValidation(
              form,
              CreateVariantPriceFields,
              CreateVariantPriceSchema
            )) {
              setTabState((prev) => ({
                ...prev,
                [tab2]: "in-progress"
              }));
              setTab(tab2);
              return;
            }
            setTabState((prev) => ({
              ...prev,
              [tab2]: "completed"
            }));
          }
        }
        setTabState((prev) => ({
          ...prev,
          [tab]: "completed",
          [update]: "in-progress"
        }));
        setTab(update);
      };
      const handleNextTab = (tab2) => {
        if (tabOrder3.indexOf(tab2) + 1 >= tabOrder3.length) {
          return;
        }
        const nextTab = tabOrder3[tabOrder3.indexOf(tab2) + 1];
        handleChangeTab(nextTab);
      };
      const handleSubmit = form.handleSubmit(async (data) => {
        const { allow_backorder, manage_inventory, sku, title } = data;
        await mutateAsync(
          {
            title,
            sku: sku || void 0,
            allow_backorder,
            manage_inventory,
            options: data.options,
            prices: Object.entries(data.prices ?? {}).map(([currencyOrRegion, value]) => {
              if (value === "" || value === void 0) {
                return void 0;
              }
              const ret = {};
              const amount = castNumber(value);
              if (currencyOrRegion.startsWith("reg_")) {
                ret.rules = { region_id: currencyOrRegion };
                ret.currency_code = regionsCurrencyMap[currencyOrRegion];
              } else {
                ret.currency_code = currencyOrRegion;
              }
              ret.amount = amount;
              return ret;
            }).filter(Boolean),
            inventory_items: (data.inventory || []).map((i) => {
              if (!i.required_quantity || !i.inventory_item_id) {
                return false;
              }
              return {
                ...i,
                required_quantity: castNumber(i.required_quantity)
              };
            }).filter(Boolean)
          },
          {
            onSuccess: () => {
              handleSuccess();
            },
            onError: (error) => {
              import_ui102.toast.error(error.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime158.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime158.jsx)(
        import_ui102.ProgressTabs,
        {
          value: tab,
          onValueChange: (tab2) => handleChangeTab(tab2),
          className: "flex h-full flex-col overflow-hidden",
          children: /* @__PURE__ */ (0, import_jsx_runtime158.jsxs)(
            KeyboundForm,
            {
              onSubmit: handleSubmit,
              className: "flex h-full flex-col overflow-hidden",
              children: [
                /* @__PURE__ */ (0, import_jsx_runtime158.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime158.jsx)("div", { className: "flex w-full items-center justify-between gap-x-4", children: /* @__PURE__ */ (0, import_jsx_runtime158.jsx)("div", { className: "-my-2 w-full max-w-[600px] border-l", children: /* @__PURE__ */ (0, import_jsx_runtime158.jsxs)(import_ui102.ProgressTabs.List, { className: "grid w-full grid-cols-3", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime158.jsx)(
                    import_ui102.ProgressTabs.Trigger,
                    {
                      status: tabState.detail,
                      value: "detail" /* DETAIL */,
                      children: t4("priceLists.create.tabs.details")
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime158.jsx)(
                    import_ui102.ProgressTabs.Trigger,
                    {
                      status: tabState.price,
                      value: "price" /* PRICE */,
                      children: t4("priceLists.create.tabs.prices")
                    }
                  ),
                  !!inventoryTabEnabled && /* @__PURE__ */ (0, import_jsx_runtime158.jsx)(
                    import_ui102.ProgressTabs.Trigger,
                    {
                      status: tabState.inventory,
                      value: "inventory" /* INVENTORY */,
                      children: t4("products.create.tabs.inventory")
                    }
                  )
                ] }) }) }) }),
                /* @__PURE__ */ (0, import_jsx_runtime158.jsxs)(RouteFocusModal.Body, { className: "size-full overflow-hidden", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime158.jsx)(
                    import_ui102.ProgressTabs.Content,
                    {
                      className: "size-full overflow-y-auto",
                      value: "detail" /* DETAIL */,
                      children: /* @__PURE__ */ (0, import_jsx_runtime158.jsx)(details_tab_default, { form, product })
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime158.jsx)(
                    import_ui102.ProgressTabs.Content,
                    {
                      className: "size-full overflow-y-auto",
                      value: "price" /* PRICE */,
                      children: /* @__PURE__ */ (0, import_jsx_runtime158.jsx)(pricing_tab_default, { form })
                    }
                  ),
                  !!inventoryTabEnabled && /* @__PURE__ */ (0, import_jsx_runtime158.jsx)(
                    import_ui102.ProgressTabs.Content,
                    {
                      className: "size-full overflow-hidden",
                      value: "inventory" /* INVENTORY */,
                      children: /* @__PURE__ */ (0, import_jsx_runtime158.jsx)(inventory_kit_tab_default, { form })
                    }
                  )
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime158.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime158.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime158.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime158.jsx)(import_ui102.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime158.jsx)(
                    PrimaryButton2,
                    {
                      tab,
                      next: handleNextTab,
                      isLoading: isPending,
                      inventoryTabEnabled: !!inventoryTabEnabled
                    }
                  )
                ] }) })
              ]
            }
          )
        }
      ) });
    };
    PrimaryButton2 = ({
      tab,
      next,
      isLoading,
      inventoryTabEnabled
    }) => {
      const { t: t4 } = (0, import_react_i18next100.useTranslation)();
      if (inventoryTabEnabled && tab === "inventory" /* INVENTORY */ || !inventoryTabEnabled && tab === "price" /* PRICE */) {
        return /* @__PURE__ */ (0, import_jsx_runtime158.jsx)(
          import_ui102.Button,
          {
            type: "submit",
            variant: "primary",
            size: "small",
            isLoading,
            children: t4("actions.save")
          },
          "submit-button"
        );
      }
      return /* @__PURE__ */ (0, import_jsx_runtime158.jsx)(
        import_ui102.Button,
        {
          type: "button",
          variant: "primary",
          size: "small",
          onClick: () => next(tab),
          children: t4("actions.continue")
        },
        "next-button"
      );
    };
  }
});

// src/routes/products/product-create-variant/components/create-product-variant-form/index.ts
var init_create_product_variant_form2 = __esm({
  "src/routes/products/product-create-variant/components/create-product-variant-form/index.ts"() {
    "use strict";
    init_create_product_variant_form();
  }
});

// src/routes/products/product-create-variant/product-create-variant.tsx
var import_react_router_dom45, import_jsx_runtime159, ProductCreateVariant;
var init_product_create_variant = __esm({
  "src/routes/products/product-create-variant/product-create-variant.tsx"() {
    "use strict";
    import_react_router_dom45 = require("react-router-dom");
    init_modals();
    init_products();
    init_create_product_variant_form2();
    import_jsx_runtime159 = require("react/jsx-runtime");
    ProductCreateVariant = () => {
      const { id: id2 } = (0, import_react_router_dom45.useParams)();
      const { product, isLoading, isError, error } = useProduct(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime159.jsx)(RouteFocusModal, { children: !isLoading && product && /* @__PURE__ */ (0, import_jsx_runtime159.jsx)(CreateProductVariantForm, { product }) });
    };
  }
});

// src/routes/products/product-create-variant/index.ts
var product_create_variant_exports = {};
__export(product_create_variant_exports, {
  Component: () => ProductCreateVariant
});
var init_product_create_variant2 = __esm({
  "src/routes/products/product-create-variant/index.ts"() {
    "use strict";
    init_product_create_variant();
  }
});

// src/components/forms/metadata-form/metadata-form.tsx
function getDefaultValues2(metadata) {
  if (!metadata || !Object.keys(metadata).length) {
    return [
      {
        key: "",
        value: "",
        disabled: false
      }
    ];
  }
  return Object.entries(metadata).map(([key, value]) => {
    if (!EDITABLE_TYPES.includes(typeof value)) {
      return {
        key,
        value,
        disabled: true
      };
    }
    let stringValue = value;
    if (typeof value !== "string") {
      stringValue = JSON.stringify(value);
    }
    return {
      key,
      value: stringValue,
      original_key: key
    };
  });
}
function parseValues(values) {
  const metadata = values.metadata;
  const isEmpty = !metadata.length || metadata.length === 1 && !metadata[0].key && !metadata[0].value;
  if (isEmpty) {
    return null;
  }
  const update = {};
  metadata.forEach((field) => {
    let key = field.key;
    let value = field.value;
    const disabled = field.disabled;
    if (!key || !value) {
      return;
    }
    if (disabled) {
      update[key] = value;
      return;
    }
    key = key.trim();
    value = value.trim();
    if (value === "true") {
      update[key] = true;
    } else if (value === "false") {
      update[key] = false;
    } else {
      const parsedNumber = parseFloat(value);
      if (!isNaN(parsedNumber)) {
        update[key] = parsedNumber;
      } else {
        update[key] = value;
      }
    }
  });
  return update;
}
function getHasUneditableRows(metadata) {
  if (!metadata) {
    return false;
  }
  return Object.values(metadata).some(
    (value) => !EDITABLE_TYPES.includes(typeof value)
  );
}
var import_zod17, import_ui103, import_react_hook_form26, import_react_i18next101, import_zod18, import_icons49, import_react107, import_jsx_runtime160, MetadataFieldSchema, MetadataSchema, MetadataForm, METADATA_KEY_LABEL_ID, METADATA_VALUE_LABEL_ID, InnerForm, GridInput, PlaceholderInner, EDITABLE_TYPES;
var init_metadata_form = __esm({
  "src/components/forms/metadata-form/metadata-form.tsx"() {
    "use strict";
    import_zod17 = require("@hookform/resolvers/zod");
    import_ui103 = require("@medusajs/ui");
    import_react_hook_form26 = require("react-hook-form");
    import_react_i18next101 = require("react-i18next");
    import_zod18 = require("zod");
    import_icons49 = require("@medusajs/icons");
    import_react107 = require("react");
    init_conditional_tooltip2();
    init_form2();
    init_inline_tip2();
    init_skeleton2();
    init_modals();
    init_keybound_form2();
    import_jsx_runtime160 = require("react/jsx-runtime");
    MetadataFieldSchema = import_zod18.z.object({
      key: import_zod18.z.string(),
      disabled: import_zod18.z.boolean().optional(),
      value: import_zod18.z.any()
    });
    MetadataSchema = import_zod18.z.object({
      metadata: import_zod18.z.array(MetadataFieldSchema)
    });
    MetadataForm = (props) => {
      const { t: t4 } = (0, import_react_i18next101.useTranslation)();
      const { isPending, ...innerProps } = props;
      return /* @__PURE__ */ (0, import_jsx_runtime160.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime160.jsxs)(RouteDrawer.Header, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(RouteDrawer.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(import_ui103.Heading, { children: t4("metadata.edit.header") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(RouteDrawer.Description, { className: "sr-only", children: t4("metadata.edit.description") })
        ] }),
        isPending ? /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(PlaceholderInner, {}) : /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(InnerForm, { ...innerProps })
      ] });
    };
    METADATA_KEY_LABEL_ID = "metadata-form-key-label";
    METADATA_VALUE_LABEL_ID = "metadata-form-value-label";
    InnerForm = ({
      metadata,
      hook,
      isMutating
    }) => {
      const { t: t4 } = (0, import_react_i18next101.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const deletedOriginalRows = (0, import_react107.useRef)([]);
      const hasUneditableRows = getHasUneditableRows(metadata);
      const form = (0, import_react_hook_form26.useForm)({
        defaultValues: {
          metadata: getDefaultValues2(metadata)
        },
        resolver: (0, import_zod17.zodResolver)(MetadataSchema)
      });
      const handleSubmit = form.handleSubmit(async (data) => {
        const parsedData = parseValues(data);
        await hook(
          {
            metadata: parsedData
          },
          {
            onSuccess: () => {
              import_ui103.toast.success(t4("metadata.edit.successToast"));
              handleSuccess();
            },
            onError: (error) => {
              import_ui103.toast.error(error.message);
            }
          }
        );
      });
      const { fields, insert, remove } = (0, import_react_hook_form26.useFieldArray)({
        control: form.control,
        name: "metadata"
      });
      function deleteRow(index2) {
        remove(index2);
      }
      function insertRow(index2, position) {
        insert(index2 + (position === "above" ? 0 : 1), {
          key: "",
          value: "",
          disabled: false
        });
      }
      return /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime160.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex flex-1 flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime160.jsxs)(RouteDrawer.Body, { className: "flex flex-1 flex-col gap-y-8 overflow-y-auto", children: [
              /* @__PURE__ */ (0, import_jsx_runtime160.jsxs)("div", { className: "bg-ui-bg-base shadow-elevation-card-rest grid grid-cols-1 divide-y rounded-lg", children: [
                /* @__PURE__ */ (0, import_jsx_runtime160.jsxs)("div", { className: "bg-ui-bg-subtle grid grid-cols-2 divide-x rounded-t-lg", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime160.jsx)("div", { className: "txt-compact-small-plus text-ui-fg-subtle px-2 py-1.5", children: /* @__PURE__ */ (0, import_jsx_runtime160.jsx)("label", { id: METADATA_KEY_LABEL_ID, children: t4("metadata.edit.labels.key") }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime160.jsx)("div", { className: "txt-compact-small-plus text-ui-fg-subtle px-2 py-1.5", children: /* @__PURE__ */ (0, import_jsx_runtime160.jsx)("label", { id: METADATA_VALUE_LABEL_ID, children: t4("metadata.edit.labels.value") }) })
                ] }),
                fields.map((field, index2) => {
                  const isDisabled = field.disabled || false;
                  let placeholder = "-";
                  if (typeof field.value === "object") {
                    placeholder = "{ ... }";
                  }
                  if (Array.isArray(field.value)) {
                    placeholder = "[ ... ]";
                  }
                  return /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(
                    ConditionalTooltip,
                    {
                      showTooltip: isDisabled,
                      content: t4("metadata.edit.complexRow.tooltip"),
                      children: /* @__PURE__ */ (0, import_jsx_runtime160.jsxs)("div", { className: "group/table relative", children: [
                        /* @__PURE__ */ (0, import_jsx_runtime160.jsxs)(
                          "div",
                          {
                            className: (0, import_ui103.clx)("grid grid-cols-2 divide-x", {
                              "overflow-hidden rounded-b-lg": index2 === fields.length - 1
                            }),
                            children: [
                              /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(
                                Form.Field,
                                {
                                  control: form.control,
                                  name: `metadata.${index2}.key`,
                                  render: ({ field: field2 }) => {
                                    return /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(
                                      GridInput,
                                      {
                                        "aria-labelledby": METADATA_KEY_LABEL_ID,
                                        ...field2,
                                        disabled: isDisabled,
                                        placeholder: "Key"
                                      }
                                    ) }) });
                                  }
                                }
                              ),
                              /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(
                                Form.Field,
                                {
                                  control: form.control,
                                  name: `metadata.${index2}.value`,
                                  render: ({ field: { value, ...field2 } }) => {
                                    return /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(
                                      GridInput,
                                      {
                                        "aria-labelledby": METADATA_VALUE_LABEL_ID,
                                        ...field2,
                                        value: isDisabled ? placeholder : value,
                                        disabled: isDisabled,
                                        placeholder: "Value"
                                      }
                                    ) }) });
                                  }
                                }
                              )
                            ]
                          }
                        ),
                        /* @__PURE__ */ (0, import_jsx_runtime160.jsxs)(import_ui103.DropdownMenu, { children: [
                          /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(
                            import_ui103.DropdownMenu.Trigger,
                            {
                              className: (0, import_ui103.clx)(
                                "invisible absolute inset-y-0 -right-2.5 my-auto group-hover/table:visible data-[state='open']:visible",
                                {
                                  hidden: isDisabled
                                }
                              ),
                              disabled: isDisabled,
                              asChild: true,
                              children: /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(import_ui103.IconButton, { size: "2xsmall", children: /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(import_icons49.EllipsisVertical, {}) })
                            }
                          ),
                          /* @__PURE__ */ (0, import_jsx_runtime160.jsxs)(import_ui103.DropdownMenu.Content, { children: [
                            /* @__PURE__ */ (0, import_jsx_runtime160.jsxs)(
                              import_ui103.DropdownMenu.Item,
                              {
                                className: "gap-x-2",
                                onClick: () => insertRow(index2, "above"),
                                children: [
                                  /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(import_icons49.ArrowUpMini, { className: "text-ui-fg-subtle" }),
                                  t4("metadata.edit.actions.insertRowAbove")
                                ]
                              }
                            ),
                            /* @__PURE__ */ (0, import_jsx_runtime160.jsxs)(
                              import_ui103.DropdownMenu.Item,
                              {
                                className: "gap-x-2",
                                onClick: () => insertRow(index2, "below"),
                                children: [
                                  /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(import_icons49.ArrowDownMini, { className: "text-ui-fg-subtle" }),
                                  t4("metadata.edit.actions.insertRowBelow")
                                ]
                              }
                            ),
                            /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(import_ui103.DropdownMenu.Separator, {}),
                            /* @__PURE__ */ (0, import_jsx_runtime160.jsxs)(
                              import_ui103.DropdownMenu.Item,
                              {
                                className: "gap-x-2",
                                onClick: () => deleteRow(index2),
                                children: [
                                  /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(import_icons49.Trash, { className: "text-ui-fg-subtle" }),
                                  t4("metadata.edit.actions.deleteRow")
                                ]
                              }
                            )
                          ] })
                        ] })
                      ] })
                    },
                    field.id
                  );
                })
              ] }),
              hasUneditableRows && /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(
                InlineTip,
                {
                  variant: "warning",
                  label: t4("metadata.edit.complexRow.label"),
                  children: t4("metadata.edit.complexRow.description")
                }
              )
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime160.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(
                import_ui103.Button,
                {
                  size: "small",
                  variant: "secondary",
                  type: "button",
                  disabled: isMutating,
                  children: t4("actions.cancel")
                }
              ) }),
              /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(import_ui103.Button, { size: "small", type: "submit", isLoading: isMutating, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
    GridInput = (0, import_react107.forwardRef)(({ className, ...props }, ref) => {
      return /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(
        "input",
        {
          ref,
          ...props,
          autoComplete: "off",
          className: (0, import_ui103.clx)(
            "txt-compact-small text-ui-fg-base placeholder:text-ui-fg-muted disabled:text-ui-fg-disabled disabled:bg-ui-bg-base bg-transparent px-2 py-1.5 outline-none",
            className
          )
        }
      );
    });
    GridInput.displayName = "MetadataForm.GridInput";
    PlaceholderInner = () => {
      return /* @__PURE__ */ (0, import_jsx_runtime160.jsxs)("div", { className: "flex flex-1 flex-col overflow-hidden", children: [
        /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(RouteDrawer.Body, { children: /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(Skeleton, { className: "h-[148ox] w-full rounded-lg" }) }),
        /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime160.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(Skeleton, { className: "h-7 w-12 rounded-md" }),
          /* @__PURE__ */ (0, import_jsx_runtime160.jsx)(Skeleton, { className: "h-7 w-12 rounded-md" })
        ] }) })
      ] });
    };
    EDITABLE_TYPES = ["string", "number", "boolean"];
  }
});

// src/routes/products/product-metadata/product-metadata.tsx
var import_react_router_dom46, import_jsx_runtime161, ProductMetadata;
var init_product_metadata = __esm({
  "src/routes/products/product-metadata/product-metadata.tsx"() {
    "use strict";
    import_react_router_dom46 = require("react-router-dom");
    init_metadata_form();
    init_api();
    import_jsx_runtime161 = require("react/jsx-runtime");
    ProductMetadata = () => {
      const { id: id2 } = (0, import_react_router_dom46.useParams)();
      const { product, isPending, isError, error } = useProduct(id2);
      const { mutateAsync, isPending: isMutating } = useUpdateProduct(product.id);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime161.jsx)(
        MetadataForm,
        {
          metadata: product.metadata,
          hook: mutateAsync,
          isPending,
          isMutating
        }
      );
    };
  }
});

// src/routes/products/product-metadata/index.ts
var product_metadata_exports = {};
__export(product_metadata_exports, {
  Component: () => ProductMetadata
});
var init_product_metadata2 = __esm({
  "src/routes/products/product-metadata/index.ts"() {
    "use strict";
    init_product_metadata();
  }
});

// src/routes/product-variants/product-variant-detail/constants.ts
var VARIANT_DETAIL_FIELDS;
var init_constants6 = __esm({
  "src/routes/product-variants/product-variant-detail/constants.ts"() {
    "use strict";
    VARIANT_DETAIL_FIELDS = "*inventory_items,*inventory_items.inventory,*inventory_items.inventory.location_levels,*options,*options.option,*prices,*prices.price_rules";
  }
});

// src/routes/product-variants/product-variant-detail/loader.ts
var variantDetailQuery, variantLoader;
var init_loader5 = __esm({
  "src/routes/product-variants/product-variant-detail/loader.ts"() {
    "use strict";
    init_products();
    init_query_client();
    init_constants6();
    init_client2();
    variantDetailQuery = (productId, variantId) => ({
      queryKey: variantsQueryKeys.detail(variantId),
      queryFn: async () => sdk.admin.product.retrieveVariant(productId, variantId, {
        fields: VARIANT_DETAIL_FIELDS
      })
    });
    variantLoader = async ({ params: params2 }) => {
      const productId = params2.id;
      const variantId = params2.variant_id;
      const query = variantDetailQuery(productId, variantId);
      return queryClient.getQueryData(query.queryKey) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/routes/product-variants/product-variant-detail/components/variant-general-section/variant-general-section.tsx
function VariantGeneralSection({ variant }) {
  const { t: t4 } = (0, import_react_i18next102.useTranslation)();
  const prompt = (0, import_ui104.usePrompt)();
  const navigate = (0, import_react_router_dom47.useNavigate)();
  const hasInventoryKit = variant.inventory?.length > 1;
  const { mutateAsync } = useDeleteVariant(variant.product_id, variant.id);
  const handleDelete = async () => {
    const res = await prompt({
      title: t4("general.areYouSure"),
      description: t4("products.variant.deleteWarning", {
        title: variant.title
      }),
      confirmText: t4("actions.delete"),
      cancelText: t4("actions.cancel")
    });
    if (!res) {
      return;
    }
    await mutateAsync(void 0, {
      onSuccess: () => {
        navigate("..", { replace: true });
      }
    });
  };
  return /* @__PURE__ */ (0, import_jsx_runtime162.jsxs)(import_ui104.Container, { className: "divide-y p-0", children: [
    /* @__PURE__ */ (0, import_jsx_runtime162.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
      /* @__PURE__ */ (0, import_jsx_runtime162.jsxs)("div", { children: [
        /* @__PURE__ */ (0, import_jsx_runtime162.jsxs)("div", { className: "flex items-center gap-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime162.jsx)(import_ui104.Heading, { children: variant.title }),
          hasInventoryKit && /* @__PURE__ */ (0, import_jsx_runtime162.jsx)("span", { className: "text-ui-fg-muted font-normal", children: /* @__PURE__ */ (0, import_jsx_runtime162.jsx)(import_icons50.Component, {}) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime162.jsx)("span", { className: "text-ui-fg-subtle txt-small mt-2", children: t4("labels.productVariant") })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime162.jsx)("div", { className: "flex items-center gap-x-4", children: /* @__PURE__ */ (0, import_jsx_runtime162.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  label: t4("actions.edit"),
                  to: "edit",
                  icon: /* @__PURE__ */ (0, import_jsx_runtime162.jsx)(import_icons50.PencilSquare, {})
                }
              ]
            },
            {
              actions: [
                {
                  label: t4("actions.delete"),
                  onClick: handleDelete,
                  icon: /* @__PURE__ */ (0, import_jsx_runtime162.jsx)(import_icons50.Trash, {})
                }
              ]
            }
          ]
        }
      ) })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime162.jsx)(SectionRow, { title: t4("fields.sku"), value: variant.sku }),
    variant.options.map((o) => /* @__PURE__ */ (0, import_jsx_runtime162.jsx)(
      SectionRow,
      {
        title: o.option?.title,
        value: /* @__PURE__ */ (0, import_jsx_runtime162.jsx)(import_ui104.Badge, { size: "2xsmall", children: o.value })
      },
      o.id
    ))
  ] });
}
var import_ui104, import_icons50, import_react_i18next102, import_react_router_dom47, import_jsx_runtime162;
var init_variant_general_section = __esm({
  "src/routes/product-variants/product-variant-detail/components/variant-general-section/variant-general-section.tsx"() {
    "use strict";
    import_ui104 = require("@medusajs/ui");
    import_icons50 = require("@medusajs/icons");
    import_react_i18next102 = require("react-i18next");
    import_react_router_dom47 = require("react-router-dom");
    init_action_menu2();
    init_section();
    init_products();
    import_jsx_runtime162 = require("react/jsx-runtime");
  }
});

// src/routes/product-variants/product-variant-detail/components/variant-general-section/index.ts
var init_variant_general_section2 = __esm({
  "src/routes/product-variants/product-variant-detail/components/variant-general-section/index.ts"() {
    "use strict";
    init_variant_general_section();
  }
});

// src/routes/product-variants/product-variant-detail/components/variant-inventory-section/inventory-actions.tsx
var import_react_i18next103, import_icons51, import_jsx_runtime163, InventoryActions;
var init_inventory_actions = __esm({
  "src/routes/product-variants/product-variant-detail/components/variant-inventory-section/inventory-actions.tsx"() {
    "use strict";
    import_react_i18next103 = require("react-i18next");
    import_icons51 = require("@medusajs/icons");
    init_action_menu2();
    import_jsx_runtime163 = require("react/jsx-runtime");
    InventoryActions = ({ item }) => {
      const { t: t4 } = (0, import_react_i18next103.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime163.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime163.jsx)(import_icons51.Buildings, {}),
                  label: t4("products.variant.inventory.navigateToItem"),
                  to: `/inventory/${item.id}`
                }
              ]
            }
          ]
        }
      );
    };
  }
});

// src/routes/product-variants/product-variant-detail/components/variant-inventory-section/use-inventory-table-columns.tsx
var import_react_table11, import_react108, import_react_i18next104, import_jsx_runtime164, columnHelper10, useInventoryTableColumns;
var init_use_inventory_table_columns = __esm({
  "src/routes/product-variants/product-variant-detail/components/variant-inventory-section/use-inventory-table-columns.tsx"() {
    "use strict";
    init_inventory_actions();
    init_placeholder_cell2();
    import_react_table11 = require("@tanstack/react-table");
    import_react108 = require("react");
    import_react_i18next104 = require("react-i18next");
    import_jsx_runtime164 = require("react/jsx-runtime");
    columnHelper10 = (0, import_react_table11.createColumnHelper)();
    useInventoryTableColumns = () => {
      const { t: t4 } = (0, import_react_i18next104.useTranslation)();
      return (0, import_react108.useMemo)(
        () => [
          columnHelper10.accessor("title", {
            header: t4("fields.title"),
            cell: ({ getValue: getValue2 }) => {
              const title = getValue2();
              if (!title) {
                return /* @__PURE__ */ (0, import_jsx_runtime164.jsx)(PlaceholderCell, {});
              }
              return /* @__PURE__ */ (0, import_jsx_runtime164.jsx)("div", { className: "flex size-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime164.jsx)("span", { className: "truncate", children: title }) });
            }
          }),
          columnHelper10.accessor("sku", {
            header: t4("fields.sku"),
            cell: ({ getValue: getValue2 }) => {
              const sku = getValue2();
              if (!sku) {
                return /* @__PURE__ */ (0, import_jsx_runtime164.jsx)(PlaceholderCell, {});
              }
              return /* @__PURE__ */ (0, import_jsx_runtime164.jsx)("div", { className: "flex size-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime164.jsx)("span", { className: "truncate", children: sku }) });
            }
          }),
          columnHelper10.accessor("required_quantity", {
            header: t4("fields.requiredQuantity"),
            cell: ({ getValue: getValue2 }) => {
              const quantity = getValue2();
              if (Number.isNaN(quantity)) {
                return /* @__PURE__ */ (0, import_jsx_runtime164.jsx)(PlaceholderCell, {});
              }
              return /* @__PURE__ */ (0, import_jsx_runtime164.jsx)("div", { className: "flex size-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime164.jsx)("span", { className: "truncate", children: quantity }) });
            }
          }),
          columnHelper10.display({
            id: "inventory_quantity",
            header: t4("fields.inventory"),
            cell: ({ getValue: getValue2, row: { original: inventory } }) => {
              if (!inventory.location_levels?.length) {
                return /* @__PURE__ */ (0, import_jsx_runtime164.jsx)(PlaceholderCell, {});
              }
              let quantity = 0;
              let locations = 0;
              inventory.location_levels.forEach((level) => {
                quantity += level.available_quantity;
                locations += 1;
              });
              return /* @__PURE__ */ (0, import_jsx_runtime164.jsx)("div", { className: "flex size-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime164.jsx)("span", { className: "truncate", children: t4("products.variant.tableItem", {
                availableCount: quantity,
                locationCount: locations,
                count: locations
              }) }) });
            }
          }),
          columnHelper10.display({
            id: "actions",
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime164.jsx)(InventoryActions, { item: row.original })
          })
        ],
        [t4]
      );
    };
  }
});

// src/components/common/link-button/link-button.tsx
var import_ui105, import_react_router_dom48, import_jsx_runtime165, LinkButton;
var init_link_button = __esm({
  "src/components/common/link-button/link-button.tsx"() {
    "use strict";
    import_ui105 = require("@medusajs/ui");
    import_react_router_dom48 = require("react-router-dom");
    import_jsx_runtime165 = require("react/jsx-runtime");
    LinkButton = ({
      className,
      variant = "interactive",
      ...props
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime165.jsx)(
        import_react_router_dom48.Link,
        {
          className: (0, import_ui105.clx)(
            "transition-fg txt-compact-small-plus rounded-[4px] outline-none",
            "focus-visible:shadow-borders-focus",
            {
              "text-ui-fg-interactive hover:text-ui-fg-interactive-hover": variant === "interactive",
              "text-ui-fg-base hover:text-ui-fg-subtle": variant === "primary"
            },
            className
          ),
          ...props
        }
      );
    };
  }
});

// src/components/common/link-button/index.ts
var init_link_button2 = __esm({
  "src/components/common/link-button/index.ts"() {
    "use strict";
    init_link_button();
  }
});

// src/routes/product-variants/product-variant-detail/components/variant-inventory-section/variant-inventory-section.tsx
function VariantInventorySection({
  inventoryItems
}) {
  const { t: t4 } = (0, import_react_i18next105.useTranslation)();
  const columns = useInventoryTableColumns();
  const { table } = useDataTable({
    data: inventoryItems ?? [],
    columns,
    count: inventoryItems.length,
    enablePagination: true,
    getRowId: (row) => row.id,
    pageSize: PAGE_SIZE5
  });
  const hasKit = inventoryItems.length > 1;
  return /* @__PURE__ */ (0, import_jsx_runtime166.jsxs)(import_ui106.Container, { className: "divide-y p-0", children: [
    /* @__PURE__ */ (0, import_jsx_runtime166.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
      /* @__PURE__ */ (0, import_jsx_runtime166.jsx)("div", { className: "flex items-center gap-2", children: /* @__PURE__ */ (0, import_jsx_runtime166.jsx)(import_ui106.Heading, { level: "h2", children: t4("fields.inventoryItems") }) }),
      /* @__PURE__ */ (0, import_jsx_runtime166.jsx)("div", { className: "flex items-center gap-x-4", children: /* @__PURE__ */ (0, import_jsx_runtime166.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  label: t4(
                    hasKit ? "products.variant.inventory.manageKit" : "products.variant.inventory.manageItems"
                  ),
                  to: "manage-items",
                  icon: hasKit ? /* @__PURE__ */ (0, import_jsx_runtime166.jsx)(import_icons52.Component, {}) : /* @__PURE__ */ (0, import_jsx_runtime166.jsx)(import_icons52.Buildings, {})
                }
              ]
            }
          ]
        }
      ) })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime166.jsx)(
      DataTable,
      {
        table,
        columns,
        pageSize: PAGE_SIZE5,
        count: inventoryItems.length,
        navigateTo: (row) => `/inventory/${row.id}`
      }
    )
  ] });
}
function InventorySectionPlaceholder() {
  const { t: t4 } = (0, import_react_i18next105.useTranslation)();
  return /* @__PURE__ */ (0, import_jsx_runtime166.jsx)(import_ui106.Container, { className: "divide-y p-0", children: /* @__PURE__ */ (0, import_jsx_runtime166.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
    /* @__PURE__ */ (0, import_jsx_runtime166.jsxs)("div", { className: "flex flex-col gap-1", children: [
      /* @__PURE__ */ (0, import_jsx_runtime166.jsx)(import_ui106.Heading, { level: "h2", children: t4("fields.inventoryItems") }),
      /* @__PURE__ */ (0, import_jsx_runtime166.jsx)("span", { className: "txt-small text-ui-fg-subtle", children: t4("products.variant.inventory.notManagedDesc") })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime166.jsx)("div", { className: "flex items-center gap-x-4", children: /* @__PURE__ */ (0, import_jsx_runtime166.jsx)(LinkButton, { to: "edit", children: t4("products.variant.edit.header") }) })
  ] }) });
}
var import_react_i18next105, import_icons52, import_ui106, import_jsx_runtime166, PAGE_SIZE5;
var init_variant_inventory_section = __esm({
  "src/routes/product-variants/product-variant-detail/components/variant-inventory-section/variant-inventory-section.tsx"() {
    "use strict";
    import_react_i18next105 = require("react-i18next");
    import_icons52 = require("@medusajs/icons");
    import_ui106 = require("@medusajs/ui");
    init_action_menu2();
    init_data_table2();
    init_use_data_table();
    init_use_inventory_table_columns();
    init_link_button2();
    import_jsx_runtime166 = require("react/jsx-runtime");
    PAGE_SIZE5 = 20;
  }
});

// src/routes/product-variants/product-variant-detail/components/variant-inventory-section/index.ts
var init_variant_inventory_section2 = __esm({
  "src/routes/product-variants/product-variant-detail/components/variant-inventory-section/index.ts"() {
    "use strict";
    init_variant_inventory_section();
  }
});

// src/lib/money-amount-helpers.ts
var getDecimalDigits, getLocaleAmount, getNativeSymbol, getStylizedAmount;
var init_money_amount_helpers = __esm({
  "src/lib/money-amount-helpers.ts"() {
    "use strict";
    init_currencies2();
    getDecimalDigits = (currency) => {
      return currencies[currency.toUpperCase()]?.decimal_digits ?? 0;
    };
    getLocaleAmount = (amount, currencyCode) => {
      const formatter2 = new Intl.NumberFormat([], {
        style: "currency",
        currencyDisplay: "narrowSymbol",
        currency: currencyCode
      });
      return formatter2.format(amount);
    };
    getNativeSymbol = (currencyCode) => {
      const formatted = new Intl.NumberFormat([], {
        style: "currency",
        currency: currencyCode,
        currencyDisplay: "narrowSymbol"
      }).format(0);
      return formatted.replace(/\d/g, "").replace(/[.,]/g, "").trim();
    };
    getStylizedAmount = (amount, currencyCode) => {
      const symbol = getNativeSymbol(currencyCode);
      const decimalDigits = getDecimalDigits(currencyCode);
      const total = amount.toLocaleString(void 0, {
        minimumFractionDigits: decimalDigits,
        maximumFractionDigits: decimalDigits
      });
      return `${symbol} ${total} ${currencyCode.toUpperCase()}`;
    };
  }
});

// src/routes/product-variants/product-variant-detail/components/variant-prices-section/variant-prices-section.tsx
function VariantPricesSection({ variant }) {
  const { t: t4 } = (0, import_react_i18next106.useTranslation)();
  const prices = variant.prices.filter((p) => !Object.keys(p.rules || {}).length).sort((p1, p2) => p1.currency_code?.localeCompare(p2.currency_code));
  const hasPrices = !!prices.length;
  const [pageSize, setPageSize] = (0, import_react109.useState)(3);
  const displayPrices = prices.slice(0, pageSize);
  const onShowMore = () => {
    setPageSize(pageSize + 3);
  };
  return /* @__PURE__ */ (0, import_jsx_runtime167.jsxs)(import_ui107.Container, { className: "flex flex-col divide-y p-0", children: [
    /* @__PURE__ */ (0, import_jsx_runtime167.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
      /* @__PURE__ */ (0, import_jsx_runtime167.jsx)(import_ui107.Heading, { level: "h2", children: t4("labels.prices") }),
      /* @__PURE__ */ (0, import_jsx_runtime167.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  label: t4("actions.edit"),
                  to: `/products/${variant.product_id}/variants/${variant.id}/prices`,
                  icon: /* @__PURE__ */ (0, import_jsx_runtime167.jsx)(import_icons53.CurrencyDollar, {})
                }
              ]
            }
          ]
        }
      )
    ] }),
    !hasPrices && /* @__PURE__ */ (0, import_jsx_runtime167.jsx)(NoRecords, { className: "h-60" }),
    displayPrices.map((price) => {
      return /* @__PURE__ */ (0, import_jsx_runtime167.jsxs)(
        "div",
        {
          className: "txt-small text-ui-fg-subtle flex justify-between px-6 py-4",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime167.jsx)("span", { className: "font-medium", children: price.currency_code.toUpperCase() }),
            /* @__PURE__ */ (0, import_jsx_runtime167.jsx)("span", { children: getLocaleAmount(price.amount, price.currency_code) })
          ]
        },
        price.id
      );
    }),
    hasPrices && /* @__PURE__ */ (0, import_jsx_runtime167.jsxs)("div", { className: "txt-small text-ui-fg-subtle flex items-center justify-between px-6 py-4", children: [
      /* @__PURE__ */ (0, import_jsx_runtime167.jsx)("span", { className: "font-medium", children: t4("products.variant.pricesPagination", {
        total: prices.length,
        current: Math.min(pageSize, prices.length)
      }) }),
      /* @__PURE__ */ (0, import_jsx_runtime167.jsx)(
        import_ui107.Button,
        {
          onClick: onShowMore,
          disabled: pageSize >= prices.length,
          className: "-mr-3 text-blue-500",
          variant: "transparent",
          children: t4("actions.showMore")
        }
      )
    ] })
  ] });
}
var import_react_i18next106, import_react109, import_icons53, import_ui107, import_jsx_runtime167;
var init_variant_prices_section = __esm({
  "src/routes/product-variants/product-variant-detail/components/variant-prices-section/variant-prices-section.tsx"() {
    "use strict";
    import_react_i18next106 = require("react-i18next");
    import_react109 = require("react");
    import_icons53 = require("@medusajs/icons");
    import_ui107 = require("@medusajs/ui");
    init_action_menu2();
    init_money_amount_helpers();
    init_empty_table_content2();
    import_jsx_runtime167 = require("react/jsx-runtime");
  }
});

// src/routes/product-variants/product-variant-detail/components/variant-prices-section/index.ts
var init_variant_prices_section2 = __esm({
  "src/routes/product-variants/product-variant-detail/components/variant-prices-section/index.ts"() {
    "use strict";
    init_variant_prices_section();
  }
});

// src/routes/product-variants/product-variant-detail/product-variant-detail.tsx
var import_react_router_dom49, import_jsx_runtime168, ProductVariantDetail;
var init_product_variant_detail = __esm({
  "src/routes/product-variants/product-variant-detail/product-variant-detail.tsx"() {
    "use strict";
    import_react_router_dom49 = require("react-router-dom");
    init_json_view_section2();
    init_products();
    init_constants6();
    init_variant_general_section2();
    init_variant_inventory_section2();
    init_variant_prices_section2();
    import_jsx_runtime168 = require("react/jsx-runtime");
    ProductVariantDetail = () => {
      const initialData = (0, import_react_router_dom49.useLoaderData)();
      const { id: id2, variant_id } = (0, import_react_router_dom49.useParams)();
      const { variant, isLoading, isError, error } = useProductVariant(
        id2,
        variant_id,
        { fields: VARIANT_DETAIL_FIELDS },
        {
          initialData
        }
      );
      if (isLoading || !variant) {
        return /* @__PURE__ */ (0, import_jsx_runtime168.jsx)("div", { children: "Loading..." });
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime168.jsxs)("div", { className: "flex flex-col gap-y-2", children: [
        /* @__PURE__ */ (0, import_jsx_runtime168.jsxs)("div", { className: "flex flex-col gap-x-4 gap-y-3 xl:flex-row xl:items-start", children: [
          /* @__PURE__ */ (0, import_jsx_runtime168.jsxs)("div", { className: "flex w-full flex-col gap-y-3", children: [
            /* @__PURE__ */ (0, import_jsx_runtime168.jsx)(VariantGeneralSection, { variant }),
            !variant.manage_inventory ? /* @__PURE__ */ (0, import_jsx_runtime168.jsx)(InventorySectionPlaceholder, {}) : /* @__PURE__ */ (0, import_jsx_runtime168.jsx)(
              VariantInventorySection,
              {
                inventoryItems: variant.inventory_items.map((i) => {
                  return {
                    ...i.inventory,
                    required_quantity: i.required_quantity,
                    variant
                  };
                })
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime168.jsx)("div", { className: "hidden xl:block", children: /* @__PURE__ */ (0, import_jsx_runtime168.jsx)(JsonViewSection, { data: variant, root: "product" }) })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime168.jsxs)("div", { className: "flex w-full max-w-[100%] flex-col gap-y-3 xl:mt-0 xl:max-w-[400px]", children: [
            /* @__PURE__ */ (0, import_jsx_runtime168.jsx)(VariantPricesSection, { variant }),
            /* @__PURE__ */ (0, import_jsx_runtime168.jsx)("div", { className: "xl:hidden", children: /* @__PURE__ */ (0, import_jsx_runtime168.jsx)(JsonViewSection, { data: variant }) })
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime168.jsx)(import_react_router_dom49.Outlet, {})
      ] });
    };
  }
});

// src/routes/product-variants/product-variant-detail/index.ts
var product_variant_detail_exports = {};
__export(product_variant_detail_exports, {
  Component: () => ProductVariantDetail,
  loader: () => variantLoader
});
var init_product_variant_detail2 = __esm({
  "src/routes/product-variants/product-variant-detail/index.ts"() {
    "use strict";
    init_loader5();
    init_product_variant_detail();
  }
});

// src/routes/product-variants/product-variant-manage-inventory-items/components/manage-variant-inventory-items-form/manage-variant-inventory-items-form.tsx
function ManageVariantInventoryItemsForm({
  variant
}) {
  const { t: t4 } = (0, import_react_i18next107.useTranslation)();
  const { handleSuccess } = useRouteModal();
  const form = (0, import_react_hook_form27.useForm)({
    defaultValues: {
      inventory: variant.inventory_items.length ? variant.inventory_items.map((i) => ({
        required_quantity: i.required_quantity,
        inventory_item_id: i.inventory.id
      })) : [
        {
          inventory_item_id: "",
          required_quantity: ""
        }
      ]
    },
    resolver: (0, import_zod19.zodResolver)(ManageVariantInventoryItemsSchema)
  });
  const inventory = (0, import_react_hook_form27.useFieldArray)({
    control: form.control,
    name: `inventory`
  });
  const hasKit = inventory.fields.length > 1;
  const items = useComboboxData({
    queryKey: ["inventory_items"],
    queryFn: (params2) => sdk.admin.inventoryItem.list(params2),
    getOptions: (data) => data.inventory_items.map((item) => ({
      label: item.title,
      value: item.id
    }))
  });
  const { mutateAsync, isPending } = useProductVariantsInventoryItemsBatch(
    variant.product_id
  );
  const handleSubmit = form.handleSubmit(async (values) => {
    const existingItems = {};
    const selectedItems2 = {};
    variant.inventory_items.forEach(
      (i) => existingItems[i.inventory.id] = i.required_quantity
    );
    values.inventory.forEach((i) => selectedItems2[i.inventory_item_id] = true);
    const payload = {
      create: [],
      update: [],
      delete: []
    };
    values.inventory.forEach((v) => {
      if (v.inventory_item_id in existingItems) {
        if (v.required_quantity !== existingItems[v.inventory_item_id]) {
          payload.update.push({
            required_quantity: v.required_quantity,
            inventory_item_id: v.inventory_item_id,
            variant_id: variant.id
          });
        }
      } else {
        payload.create.push({
          required_quantity: v.required_quantity,
          inventory_item_id: v.inventory_item_id,
          variant_id: variant.id
        });
      }
    });
    variant.inventory_items.forEach((i) => {
      if (!(i.inventory.id in selectedItems2)) {
        payload.delete.push({
          inventory_item_id: i.inventory.id,
          variant_id: variant.id
        });
      }
    });
    for (const k in payload) {
      if (!payload[k].length) {
        delete payload[k];
      }
    }
    await mutateAsync(payload, {
      onSuccess: () => {
        import_ui108.toast.success(t4("products.variant.inventory.toast.itemsManageSuccess"));
        handleSuccess();
      },
      onError: (err) => {
        import_ui108.toast.error(err.message);
      }
    });
  });
  return /* @__PURE__ */ (0, import_jsx_runtime169.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime169.jsxs)(
    KeyboundForm,
    {
      className: "flex h-full flex-col overflow-hidden",
      onSubmit: handleSubmit,
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime169.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime169.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime169.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime169.jsx)(import_ui108.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime169.jsx)(import_ui108.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime169.jsx)(RouteFocusModal.Body, { className: "flex justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime169.jsxs)("div", { className: "flex w-full flex-col gap-y-8 px-6 pt-12 md:w-[720px] md:pt-24", children: [
          /* @__PURE__ */ (0, import_jsx_runtime169.jsx)(import_ui108.Heading, { children: t4(
            hasKit ? "products.create.inventory.heading" : "fields.inventoryItems"
          ) }),
          /* @__PURE__ */ (0, import_jsx_runtime169.jsxs)("div", { className: "grid gap-y-4", children: [
            /* @__PURE__ */ (0, import_jsx_runtime169.jsxs)("div", { className: "flex items-start justify-between gap-x-4", children: [
              /* @__PURE__ */ (0, import_jsx_runtime169.jsxs)("div", { className: "flex flex-col", children: [
                /* @__PURE__ */ (0, import_jsx_runtime169.jsx)(Form.Label, { children: variant.title }),
                /* @__PURE__ */ (0, import_jsx_runtime169.jsx)(Form.Hint, { children: t4(
                  hasKit ? "products.create.inventory.label" : "fields.inventoryItem"
                ) })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime169.jsx)(
                import_ui108.Button,
                {
                  size: "small",
                  variant: "secondary",
                  type: "button",
                  onClick: () => {
                    inventory.append({
                      inventory_item_id: "",
                      required_quantity: ""
                    });
                  },
                  children: t4("actions.add")
                }
              )
            ] }),
            inventory.fields.map((inventoryItem, inventoryIndex) => /* @__PURE__ */ (0, import_jsx_runtime169.jsxs)(
              "li",
              {
                className: "bg-ui-bg-component shadow-elevation-card-rest grid grid-cols-[1fr_28px] items-center gap-1.5 rounded-xl p-1.5",
                children: [
                  /* @__PURE__ */ (0, import_jsx_runtime169.jsxs)("div", { className: "grid grid-cols-[min-content,1fr] items-center gap-1.5", children: [
                    /* @__PURE__ */ (0, import_jsx_runtime169.jsx)("div", { className: "flex items-center px-2 py-1.5", children: /* @__PURE__ */ (0, import_jsx_runtime169.jsx)(
                      import_ui108.Label,
                      {
                        size: "xsmall",
                        weight: "plus",
                        className: "text-ui-fg-subtle",
                        htmlFor: `inventory.${inventoryIndex}.inventory_item_id`,
                        children: t4("fields.item")
                      }
                    ) }),
                    /* @__PURE__ */ (0, import_jsx_runtime169.jsx)(
                      Form.Field,
                      {
                        control: form.control,
                        name: `inventory.${inventoryIndex}.inventory_item_id`,
                        render: ({ field }) => {
                          return /* @__PURE__ */ (0, import_jsx_runtime169.jsxs)(Form.Item, { children: [
                            /* @__PURE__ */ (0, import_jsx_runtime169.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime169.jsx)(
                              Combobox,
                              {
                                ...field,
                                options: items.options,
                                searchValue: items.searchValue,
                                onSearchValueChange: items.onSearchValueChange,
                                fetchNextPage: items.fetchNextPage,
                                className: "bg-ui-bg-field-component hover:bg-ui-bg-field-component-hover",
                                placeholder: t4(
                                  "products.create.inventory.itemPlaceholder"
                                )
                              }
                            ) }),
                            /* @__PURE__ */ (0, import_jsx_runtime169.jsx)(Form.ErrorMessage, {})
                          ] });
                        }
                      }
                    ),
                    /* @__PURE__ */ (0, import_jsx_runtime169.jsx)("div", { className: "flex items-center px-2 py-1.5", children: /* @__PURE__ */ (0, import_jsx_runtime169.jsx)(
                      import_ui108.Label,
                      {
                        size: "xsmall",
                        weight: "plus",
                        className: "text-ui-fg-subtle",
                        htmlFor: `inventory.${inventoryIndex}.required_quantity`,
                        children: t4("fields.quantity")
                      }
                    ) }),
                    /* @__PURE__ */ (0, import_jsx_runtime169.jsx)(
                      Form.Field,
                      {
                        control: form.control,
                        name: `inventory.${inventoryIndex}.required_quantity`,
                        render: ({ field: { onChange, value, ...field } }) => {
                          return /* @__PURE__ */ (0, import_jsx_runtime169.jsxs)(Form.Item, { children: [
                            /* @__PURE__ */ (0, import_jsx_runtime169.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime169.jsx)(
                              import_ui108.Input,
                              {
                                type: "number",
                                className: "bg-ui-bg-field-component",
                                min: 0,
                                value,
                                onChange: (e) => {
                                  const value2 = e.target.value;
                                  if (value2 === "") {
                                    onChange(null);
                                  } else {
                                    onChange(Number(value2));
                                  }
                                },
                                ...field,
                                placeholder: t4(
                                  "products.create.inventory.quantityPlaceholder"
                                )
                              }
                            ) }),
                            /* @__PURE__ */ (0, import_jsx_runtime169.jsx)(Form.ErrorMessage, {})
                          ] });
                        }
                      }
                    )
                  ] }),
                  /* @__PURE__ */ (0, import_jsx_runtime169.jsx)(
                    import_ui108.IconButton,
                    {
                      type: "button",
                      size: "small",
                      variant: "transparent",
                      className: "text-ui-fg-muted",
                      onClick: () => inventory.remove(inventoryIndex),
                      children: /* @__PURE__ */ (0, import_jsx_runtime169.jsx)(import_icons54.XMarkMini, {})
                    }
                  )
                ]
              },
              inventoryItem.id
            ))
          ] })
        ] }) })
      ]
    }
  ) });
}
var import_zod19, import_icons54, import_ui108, import_i18next4, import_react_hook_form27, import_react_i18next107, zod7, import_jsx_runtime169, ManageVariantInventoryItemsSchema;
var init_manage_variant_inventory_items_form = __esm({
  "src/routes/product-variants/product-variant-manage-inventory-items/components/manage-variant-inventory-items-form/manage-variant-inventory-items-form.tsx"() {
    "use strict";
    import_zod19 = require("@hookform/resolvers/zod");
    import_icons54 = require("@medusajs/icons");
    import_ui108 = require("@medusajs/ui");
    import_i18next4 = __toESM(require("i18next"));
    import_react_hook_form27 = require("react-hook-form");
    import_react_i18next107 = require("react-i18next");
    zod7 = __toESM(require("zod"));
    init_form2();
    init_combobox2();
    init_modals();
    init_keybound_form2();
    init_products();
    init_use_combobox_data();
    init_client2();
    import_jsx_runtime169 = require("react/jsx-runtime");
    ManageVariantInventoryItemsSchema = zod7.object({
      inventory: zod7.array(
        zod7.object({
          inventory_item_id: zod7.string().min(1, import_i18next4.default.t("products.variant.inventory.validation.itemId")),
          required_quantity: zod7.number({
            errorMap: () => ({
              message: import_i18next4.default.t(
                "products.variant.inventory.validation.quantity"
              )
            })
          }).min(0, import_i18next4.default.t("products.variant.inventory.validation.quantity"))
        })
      )
    });
  }
});

// src/routes/product-variants/product-variant-manage-inventory-items/components/manage-variant-inventory-items-form/index.ts
var init_manage_variant_inventory_items_form2 = __esm({
  "src/routes/product-variants/product-variant-manage-inventory-items/components/manage-variant-inventory-items-form/index.ts"() {
    "use strict";
    init_manage_variant_inventory_items_form();
  }
});

// src/routes/product-variants/product-variant-manage-inventory-items/product-variant-manage-inventory-items.tsx
function ProductVariantManageInventoryItems() {
  const { id: id2, variant_id } = (0, import_react_router_dom50.useParams)();
  const {
    variant,
    isPending: isLoading,
    isError,
    error
  } = useProductVariant(id2, variant_id, {
    fields: VARIANT_DETAIL_FIELDS
  });
  if (isError) {
    throw error;
  }
  return /* @__PURE__ */ (0, import_jsx_runtime170.jsx)(RouteFocusModal, { children: !isLoading && variant && /* @__PURE__ */ (0, import_jsx_runtime170.jsx)(ManageVariantInventoryItemsForm, { variant }) });
}
var import_react_router_dom50, import_jsx_runtime170;
var init_product_variant_manage_inventory_items = __esm({
  "src/routes/product-variants/product-variant-manage-inventory-items/product-variant-manage-inventory-items.tsx"() {
    "use strict";
    import_react_router_dom50 = require("react-router-dom");
    init_modals();
    init_products();
    init_constants6();
    init_manage_variant_inventory_items_form2();
    import_jsx_runtime170 = require("react/jsx-runtime");
  }
});

// src/routes/product-variants/product-variant-manage-inventory-items/index.ts
var product_variant_manage_inventory_items_exports = {};
__export(product_variant_manage_inventory_items_exports, {
  Component: () => ProductVariantManageInventoryItems
});
var init_product_variant_manage_inventory_items2 = __esm({
  "src/routes/product-variants/product-variant-manage-inventory-items/index.ts"() {
    "use strict";
    init_product_variant_manage_inventory_items();
  }
});

// src/routes/categories/common/hooks/use-delete-product-category-action.tsx
var import_ui109, import_react_i18next108, import_react_router_dom51, useDeleteProductCategoryAction;
var init_use_delete_product_category_action = __esm({
  "src/routes/categories/common/hooks/use-delete-product-category-action.tsx"() {
    "use strict";
    import_ui109 = require("@medusajs/ui");
    import_react_i18next108 = require("react-i18next");
    import_react_router_dom51 = require("react-router-dom");
    init_categories();
    useDeleteProductCategoryAction = (category) => {
      const { t: t4 } = (0, import_react_i18next108.useTranslation)();
      const navigate = (0, import_react_router_dom51.useNavigate)();
      const prompt = (0, import_ui109.usePrompt)();
      const { mutateAsync } = useDeleteProductCategory(category.id);
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("categories.delete.confirmation", {
            name: category.name
          }),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            import_ui109.toast.success(
              t4("categories.delete.successToast", {
                name: category.name
              })
            );
            navigate("/categories", {
              replace: true
            });
          },
          onError: (e) => {
            import_ui109.toast.error(e.message);
          }
        });
      };
      return handleDelete;
    };
  }
});

// src/routes/categories/common/utils.ts
function getIsActiveProps(isActive, t4) {
  switch (isActive) {
    case true:
      return {
        label: t4("categories.fields.status.active"),
        color: "green"
      };
    case false:
      return {
        label: t4("categories.fields.status.inactive"),
        color: "red"
      };
  }
}
function getIsInternalProps(isInternal, t4) {
  switch (isInternal) {
    case true:
      return {
        label: t4("categories.fields.visibility.internal"),
        color: "blue"
      };
    case false:
      return {
        label: t4("categories.fields.visibility.public"),
        color: "green"
      };
  }
}
function getCategoryPath(category) {
  if (!category) {
    return [];
  }
  const path = category.parent_category ? getCategoryPath(category.parent_category) : [];
  path.push({ id: category.id, name: category.name });
  return path;
}
function getCategoryChildren(category) {
  if (!category || !category.category_children) {
    return [];
  }
  return category.category_children.map((child) => ({
    id: child.id,
    name: child.name
  }));
}
var insertCategoryTreeItem;
var init_utils7 = __esm({
  "src/routes/categories/common/utils.ts"() {
    "use strict";
    insertCategoryTreeItem = (categories, newItem) => {
      const seen = /* @__PURE__ */ new Set();
      const remove = (items, id2) => {
        const stack = [...items];
        const result = [];
        while (stack.length > 0) {
          const item = stack.pop();
          if (item.id !== id2) {
            if (item.category_children) {
              item.category_children = remove(item.category_children, id2);
            }
            result.push(item);
          }
        }
        return result;
      };
      const insert = (items) => {
        const stack = [...items];
        while (stack.length > 0) {
          const item = stack.pop();
          if (seen.has(item.id)) {
            continue;
          }
          seen.add(item.id);
          if (item.id === newItem.parent_category_id) {
            if (!item.category_children) {
              item.category_children = [];
            }
            if (newItem.rank === null) {
              item.category_children.push(newItem);
            } else {
              item.category_children.splice(newItem.rank, 0, newItem);
            }
            item.category_children.forEach((child, index2) => {
              child.rank = index2;
            });
            item.category_children.sort((a, b) => (a.rank ?? 0) - (b.rank ?? 0));
            return categories;
          }
          if (item.category_children) {
            stack.push(...item.category_children);
          }
        }
        return items;
      };
      categories = remove(categories, newItem.id);
      if (newItem.parent_category_id === null && newItem.rank === null) {
        categories.unshift(newItem);
        categories.forEach((child, index2) => {
          child.rank = index2;
        });
      } else if (newItem.parent_category_id === null && newItem.rank !== null) {
        categories.splice(newItem.rank, 0, newItem);
        categories.forEach((child, index2) => {
          child.rank = index2;
        });
      } else {
        categories = insert(categories);
      }
      categories.sort((a, b) => (a.rank ?? 0) - (b.rank ?? 0));
      return categories;
    };
  }
});

// src/routes/categories/category-list/components/category-list-table/use-category-table-columns.tsx
var import_icons55, import_ui110, import_react_table12, import_react110, import_react_i18next109, import_jsx_runtime171, columnHelper11, useCategoryTableColumns;
var init_use_category_table_columns = __esm({
  "src/routes/categories/category-list/components/category-list-table/use-category-table-columns.tsx"() {
    "use strict";
    import_icons55 = require("@medusajs/icons");
    import_ui110 = require("@medusajs/ui");
    import_react_table12 = require("@tanstack/react-table");
    import_react110 = require("react");
    import_react_i18next109 = require("react-i18next");
    init_status_cell2();
    init_text_cell2();
    init_utils7();
    import_jsx_runtime171 = require("react/jsx-runtime");
    columnHelper11 = (0, import_react_table12.createColumnHelper)();
    useCategoryTableColumns = () => {
      const { t: t4 } = (0, import_react_i18next109.useTranslation)();
      return (0, import_react110.useMemo)(
        () => [
          columnHelper11.accessor("name", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime171.jsx)(TextHeader, { text: t4("fields.name") }),
            cell: ({ getValue: getValue2, row }) => {
              const expandHandler = row.getToggleExpandedHandler();
              if (row.original.parent_category !== void 0) {
                const path = getCategoryPath(row.original);
                return /* @__PURE__ */ (0, import_jsx_runtime171.jsx)("div", { className: "flex size-full items-center gap-1 overflow-hidden", children: path.map((chip, index2) => /* @__PURE__ */ (0, import_jsx_runtime171.jsxs)(
                  "div",
                  {
                    className: (0, import_ui110.clx)("overflow-hidden", {
                      "text-ui-fg-muted flex items-center gap-x-1": index2 !== path.length - 1
                    }),
                    children: [
                      /* @__PURE__ */ (0, import_jsx_runtime171.jsx)(import_ui110.Text, { size: "small", leading: "compact", className: "truncate", children: chip.name }),
                      index2 !== path.length - 1 && /* @__PURE__ */ (0, import_jsx_runtime171.jsx)(import_ui110.Text, { size: "small", leading: "compact", children: "/" })
                    ]
                  },
                  chip.id
                )) });
              }
              return /* @__PURE__ */ (0, import_jsx_runtime171.jsxs)("div", { className: "flex size-full items-center gap-x-3 overflow-hidden", children: [
                /* @__PURE__ */ (0, import_jsx_runtime171.jsx)("div", { className: "flex size-7 items-center justify-center", children: row.getCanExpand() ? /* @__PURE__ */ (0, import_jsx_runtime171.jsx)(
                  import_ui110.IconButton,
                  {
                    type: "button",
                    onClick: (e) => {
                      e.stopPropagation();
                      e.preventDefault();
                      expandHandler();
                    },
                    size: "small",
                    variant: "transparent",
                    className: "text-ui-fg-subtle",
                    children: /* @__PURE__ */ (0, import_jsx_runtime171.jsx)(
                      import_icons55.TriangleRightMini,
                      {
                        className: (0, import_ui110.clx)({
                          "rotate-90 transition-transform will-change-transform": row.getIsExpanded()
                        })
                      }
                    )
                  }
                ) : null }),
                /* @__PURE__ */ (0, import_jsx_runtime171.jsx)("span", { className: "truncate", children: getValue2() })
              ] });
            }
          }),
          columnHelper11.accessor("handle", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime171.jsx)(TextHeader, { text: t4("fields.handle") }),
            cell: ({ getValue: getValue2 }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime171.jsx)(TextCell, { text: `/${getValue2()}` });
            }
          }),
          columnHelper11.accessor("is_active", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime171.jsx)(TextHeader, { text: t4("fields.status") }),
            cell: ({ getValue: getValue2 }) => {
              const { color, label } = getIsActiveProps(getValue2(), t4);
              return /* @__PURE__ */ (0, import_jsx_runtime171.jsx)(StatusCell, { color, children: label });
            }
          }),
          columnHelper11.accessor("is_internal", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime171.jsx)(TextHeader, { text: t4("categories.fields.visibility.label") }),
            cell: ({ getValue: getValue2 }) => {
              const { color, label } = getIsInternalProps(getValue2(), t4);
              return /* @__PURE__ */ (0, import_jsx_runtime171.jsx)(StatusCell, { color, children: label });
            }
          })
        ],
        [t4]
      );
    };
  }
});

// src/routes/categories/category-list/components/category-list-table/use-category-table-query.tsx
var useCategoryTableQuery;
var init_use_category_table_query = __esm({
  "src/routes/categories/category-list/components/category-list-table/use-category-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useCategoryTableQuery = ({
      pageSize = 20,
      prefix
    }) => {
      const raw = useQueryParams(["q", "offset", "order"], prefix);
      const searchParams = {
        q: raw.q,
        limit: pageSize,
        offset: raw.offset ? Number(raw.offset) : 0,
        order: raw.order
      };
      return {
        raw,
        searchParams
      };
    };
  }
});

// src/routes/categories/category-list/components/category-list-table/category-list-table.tsx
var import_icons56, import_ui111, import_react_query46, import_react_table13, import_react111, import_react_i18next110, import_react_router_dom52, import_jsx_runtime172, PAGE_SIZE6, CategoryListTable, CategoryRowActions, columnHelper12, useColumns5;
var init_category_list_table = __esm({
  "src/routes/categories/category-list/components/category-list-table/category-list-table.tsx"() {
    "use strict";
    import_icons56 = require("@medusajs/icons");
    import_ui111 = require("@medusajs/ui");
    import_react_query46 = require("@tanstack/react-query");
    import_react_table13 = require("@tanstack/react-table");
    import_react111 = require("react");
    import_react_i18next110 = require("react-i18next");
    import_react_router_dom52 = require("react-router-dom");
    init_action_menu2();
    init_data_table2();
    init_categories();
    init_use_data_table();
    init_use_delete_product_category_action();
    init_use_category_table_columns();
    init_use_category_table_query();
    import_jsx_runtime172 = require("react/jsx-runtime");
    PAGE_SIZE6 = 20;
    CategoryListTable = () => {
      const { t: t4 } = (0, import_react_i18next110.useTranslation)();
      const { raw, searchParams } = useCategoryTableQuery({ pageSize: PAGE_SIZE6 });
      const query = raw.q ? {
        include_ancestors_tree: true,
        fields: "id,name,handle,is_active,is_internal,parent_category",
        ...searchParams
      } : {
        include_descendants_tree: true,
        parent_category_id: "null",
        fields: "id,name,category_children,handle,is_internal,is_active",
        ...searchParams
      };
      const { product_categories, count: count3, isLoading, isError, error } = useProductCategories(
        {
          ...query
        },
        {
          placeholderData: import_react_query46.keepPreviousData
        }
      );
      const columns = useColumns5();
      const { table } = useDataTable({
        data: product_categories || [],
        columns,
        count: count3,
        getRowId: (original) => original.id,
        getSubRows: (original) => original.category_children,
        enableExpandableRows: true,
        pageSize: PAGE_SIZE6
      });
      const showRankingAction = !!product_categories && product_categories.length > 0;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime172.jsxs)(import_ui111.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime172.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime172.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime172.jsx)(import_ui111.Heading, { children: t4("categories.domain") }),
            /* @__PURE__ */ (0, import_jsx_runtime172.jsx)(import_ui111.Text, { className: "text-ui-fg-subtle", size: "small", children: t4("categories.subtitle") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime172.jsxs)("div", { className: "flex items-center gap-x-2", children: [
            showRankingAction && /* @__PURE__ */ (0, import_jsx_runtime172.jsx)(import_ui111.Button, { size: "small", variant: "secondary", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime172.jsx)(import_react_router_dom52.Link, { to: "organize", children: t4("categories.organize.action") }) }),
            /* @__PURE__ */ (0, import_jsx_runtime172.jsx)(import_ui111.Button, { size: "small", variant: "secondary", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime172.jsx)(import_react_router_dom52.Link, { to: "create", children: t4("actions.create") }) })
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime172.jsx)(
          DataTable,
          {
            table,
            columns,
            count: count3,
            pageSize: PAGE_SIZE6,
            isLoading,
            navigateTo: (row) => row.id,
            queryObject: raw,
            search: true,
            pagination: true
          }
        )
      ] });
    };
    CategoryRowActions = ({
      category
    }) => {
      const { t: t4 } = (0, import_react_i18next110.useTranslation)();
      const handleDelete = useDeleteProductCategoryAction(category);
      return /* @__PURE__ */ (0, import_jsx_runtime172.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  label: t4("actions.edit"),
                  icon: /* @__PURE__ */ (0, import_jsx_runtime172.jsx)(import_icons56.PencilSquare, {}),
                  to: `${category.id}/edit`
                }
              ]
            },
            {
              actions: [
                {
                  label: t4("actions.delete"),
                  icon: /* @__PURE__ */ (0, import_jsx_runtime172.jsx)(import_icons56.Trash, {}),
                  onClick: handleDelete
                }
              ]
            }
          ]
        }
      );
    };
    columnHelper12 = (0, import_react_table13.createColumnHelper)();
    useColumns5 = () => {
      const base = useCategoryTableColumns();
      return (0, import_react111.useMemo)(
        () => [
          ...base,
          columnHelper12.display({
            id: "actions",
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime172.jsx)(CategoryRowActions, { category: row.original });
            }
          })
        ],
        [base]
      );
    };
  }
});

// src/routes/categories/category-list/components/category-list-table/index.ts
var init_category_list_table2 = __esm({
  "src/routes/categories/category-list/components/category-list-table/index.ts"() {
    "use strict";
    init_category_list_table();
  }
});

// src/routes/categories/category-list/category-list.tsx
var import_jsx_runtime173, CategoryList;
var init_category_list = __esm({
  "src/routes/categories/category-list/category-list.tsx"() {
    "use strict";
    init_pages();
    init_extensions();
    init_category_list_table2();
    import_jsx_runtime173 = require("react/jsx-runtime");
    CategoryList = () => {
      const { getWidgets } = useDashboardExtension();
      return /* @__PURE__ */ (0, import_jsx_runtime173.jsx)(
        SingleColumnPage,
        {
          widgets: {
            after: getWidgets("product_category.list.after"),
            before: getWidgets("product_category.list.before")
          },
          hasOutlet: true,
          children: /* @__PURE__ */ (0, import_jsx_runtime173.jsx)(CategoryListTable, {})
        }
      );
    };
  }
});

// src/routes/categories/category-list/index.ts
var category_list_exports = {};
__export(category_list_exports, {
  Component: () => CategoryList
});
var init_category_list2 = __esm({
  "src/routes/categories/category-list/index.ts"() {
    "use strict";
    init_category_list();
  }
});

// src/routes/categories/category-create/components/create-category-form/create-category-details.tsx
var import_ui112, import_react_i18next111, import_jsx_runtime174, CreateCategoryDetails;
var init_create_category_details = __esm({
  "src/routes/categories/category-create/components/create-category-form/create-category-details.tsx"() {
    "use strict";
    import_ui112 = require("@medusajs/ui");
    import_react_i18next111 = require("react-i18next");
    init_form2();
    init_handle_input2();
    import_jsx_runtime174 = require("react/jsx-runtime");
    CreateCategoryDetails = ({ form }) => {
      const { t: t4 } = (0, import_react_i18next111.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime174.jsx)("div", { className: "flex flex-col items-center p-16", children: /* @__PURE__ */ (0, import_jsx_runtime174.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8", children: [
        /* @__PURE__ */ (0, import_jsx_runtime174.jsxs)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(import_ui112.Heading, { children: t4("categories.create.header") }),
          /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(import_ui112.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("categories.create.hint") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime174.jsxs)("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "name",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime174.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(Form.Label, { children: t4("fields.title") }),
                  /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(import_ui112.Input, { autoComplete: "off", ...field }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "handle",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime174.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(Form.Label, { optional: true, tooltip: t4("collections.handleTooltip"), children: t4("fields.handle") }),
                  /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(HandleInput, { ...field }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(
          Form.Field,
          {
            control: form.control,
            name: "description",
            render: ({ field }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime174.jsxs)(Form.Item, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(Form.Label, { optional: true, children: t4("fields.description") }),
                /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(import_ui112.Textarea, { ...field }) }),
                /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(Form.ErrorMessage, {})
              ] });
            }
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime174.jsxs)("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "status",
              render: ({ field: { ref, onChange, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime174.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(Form.Label, { children: t4("categories.fields.status.label") }),
                  /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime174.jsxs)(import_ui112.Select, { ...field, onValueChange: onChange, children: [
                    /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(import_ui112.Select.Trigger, { ref, children: /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(import_ui112.Select.Value, {}) }),
                    /* @__PURE__ */ (0, import_jsx_runtime174.jsxs)(import_ui112.Select.Content, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(import_ui112.Select.Item, { value: "active", children: t4("categories.fields.status.active") }),
                      /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(import_ui112.Select.Item, { value: "inactive", children: t4("categories.fields.status.inactive") })
                    ] })
                  ] }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "visibility",
              render: ({ field: { ref, onChange, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime174.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(Form.Label, { children: t4("categories.fields.visibility.label") }),
                  /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime174.jsxs)(import_ui112.Select, { ...field, onValueChange: onChange, children: [
                    /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(import_ui112.Select.Trigger, { ref, children: /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(import_ui112.Select.Value, {}) }),
                    /* @__PURE__ */ (0, import_jsx_runtime174.jsxs)(import_ui112.Select.Content, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(import_ui112.Select.Item, { value: "public", children: t4("categories.fields.visibility.public") }),
                      /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(import_ui112.Select.Item, { value: "internal", children: t4("categories.fields.visibility.internal") })
                    ] })
                  ] }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime174.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          )
        ] })
      ] }) });
    };
  }
});

// src/components/common/sortable-tree/utils.ts
function getDragDepth(offset4, indentationWidth) {
  return Math.round(offset4 / indentationWidth);
}
function getProjection(items, activeId, overId, dragOffset, indentationWidth) {
  const overItemIndex = items.findIndex(({ id: id2 }) => id2 === overId);
  const activeItemIndex = items.findIndex(({ id: id2 }) => id2 === activeId);
  const activeItem = items[activeItemIndex];
  const newItems = (0, import_sortable2.arrayMove)(items, activeItemIndex, overItemIndex);
  const previousItem = newItems[overItemIndex - 1];
  const nextItem = newItems[overItemIndex + 1];
  const dragDepth = getDragDepth(dragOffset, indentationWidth);
  const projectedDepth = activeItem.depth + dragDepth;
  const maxDepth = getMaxDepth({
    previousItem
  });
  const minDepth = getMinDepth({ nextItem });
  let depth = projectedDepth;
  if (projectedDepth >= maxDepth) {
    depth = maxDepth;
  } else if (projectedDepth < minDepth) {
    depth = minDepth;
  }
  return { depth, maxDepth, minDepth, parentId: getParentId2() };
  function getParentId2() {
    if (depth === 0 || !previousItem) {
      return null;
    }
    if (depth === previousItem.depth) {
      return previousItem.parentId;
    }
    if (depth > previousItem.depth) {
      return previousItem.id;
    }
    const newParent = newItems.slice(0, overItemIndex).reverse().find((item) => item.depth === depth)?.parentId;
    return newParent ?? null;
  }
}
function getMaxDepth({ previousItem }) {
  if (previousItem) {
    return previousItem.depth + 1;
  }
  return 0;
}
function getMinDepth({ nextItem }) {
  if (nextItem) {
    return nextItem.depth;
  }
  return 0;
}
function flatten(items, parentId = null, depth = 0, childrenProp) {
  return items.reduce((acc, item, index2) => {
    const children = item[childrenProp] || [];
    return [
      ...acc,
      { ...item, parentId, depth, index: index2 },
      ...flatten(children, item.id, depth + 1, childrenProp)
    ];
  }, []);
}
function flattenTree(items, childrenProp) {
  return flatten(items, void 0, void 0, childrenProp);
}
function buildTree(flattenedItems, newIndex, childrenProp) {
  const root = { id: "root", [childrenProp]: [] };
  const nodes = { [root.id]: root };
  const items = flattenedItems.map((item) => ({ ...item, [childrenProp]: [] }));
  let update = {
    id: null,
    parentId: null,
    index: 0
  };
  items.forEach((item, index2) => {
    const {
      id: id2,
      index: _index,
      depth: _depth,
      parentId: _parentId,
      ...rest
    } = item;
    const children = item[childrenProp] || [];
    const parentId = _parentId ?? root.id;
    const parent = nodes[parentId] ?? findItem(items, parentId);
    nodes[id2] = { id: id2, [childrenProp]: children };
    parent[childrenProp].push({
      id: id2,
      ...rest,
      [childrenProp]: children
    });
    if (index2 === newIndex) {
      const parentChildren = parent[childrenProp];
      update = {
        id: item.id,
        parentId: parent.id === "root" ? null : parent.id,
        index: parentChildren.length - 1
      };
    }
  });
  if (!update.id) {
    throw new Error("Could not find item");
  }
  return {
    items: root[childrenProp],
    update
  };
}
function findItem(items, itemId) {
  return items.find(({ id: id2 }) => id2 === itemId);
}
function findItemDeep(items, itemId, childrenProp) {
  for (const item of items) {
    const { id: id2 } = item;
    const children = item[childrenProp] || [];
    if (id2 === itemId) {
      return item;
    }
    if (children.length) {
      const child = findItemDeep(children, itemId, childrenProp);
      if (child) {
        return child;
      }
    }
  }
  return void 0;
}
function countChildren(items, count3 = 0, childrenProp) {
  return items.reduce((acc, item) => {
    const children = item[childrenProp] || [];
    if (children.length) {
      return countChildren(children, acc + 1, childrenProp);
    }
    return acc + 1;
  }, count3);
}
function getChildCount(items, id2, childrenProp) {
  const item = findItemDeep(items, id2, childrenProp);
  const children = item?.[childrenProp] || [];
  return item ? countChildren(children, 0, childrenProp) : 0;
}
function removeChildrenOf(items, ids, childrenProp) {
  const excludeParentIds = [...ids];
  return items.filter((item) => {
    if (item.parentId && excludeParentIds.includes(item.parentId)) {
      const children = item[childrenProp] || [];
      if (children.length) {
        excludeParentIds.push(item.id);
      }
      return false;
    }
    return true;
  });
}
var import_sortable2, iOS;
var init_utils8 = __esm({
  "src/components/common/sortable-tree/utils.ts"() {
    "use strict";
    import_sortable2 = require("@dnd-kit/sortable");
    iOS = /iPad|iPhone|iPod/.test(navigator.platform);
  }
});

// src/components/common/sortable-tree/keyboard-coordinates.ts
var import_core3, directions, horizontal, sortableTreeKeyboardCoordinates;
var init_keyboard_coordinates = __esm({
  "src/components/common/sortable-tree/keyboard-coordinates.ts"() {
    "use strict";
    import_core3 = require("@dnd-kit/core");
    init_utils8();
    directions = [
      import_core3.KeyboardCode.Down,
      import_core3.KeyboardCode.Right,
      import_core3.KeyboardCode.Up,
      import_core3.KeyboardCode.Left
    ];
    horizontal = [import_core3.KeyboardCode.Left, import_core3.KeyboardCode.Right];
    sortableTreeKeyboardCoordinates = (context, indentationWidth) => (event, {
      currentCoordinates,
      context: {
        active,
        over,
        collisionRect,
        droppableRects,
        droppableContainers
      }
    }) => {
      if (directions.includes(event.code)) {
        if (!active || !collisionRect) {
          return;
        }
        event.preventDefault();
        const {
          current: { items, offset: offset4 }
        } = context;
        if (horizontal.includes(event.code) && over?.id) {
          const { depth, maxDepth, minDepth } = getProjection(
            items,
            active.id,
            over.id,
            offset4,
            indentationWidth
          );
          switch (event.code) {
            case import_core3.KeyboardCode.Left:
              if (depth > minDepth) {
                return {
                  ...currentCoordinates,
                  x: currentCoordinates.x - indentationWidth
                };
              }
              break;
            case import_core3.KeyboardCode.Right:
              if (depth < maxDepth) {
                return {
                  ...currentCoordinates,
                  x: currentCoordinates.x + indentationWidth
                };
              }
              break;
          }
          return void 0;
        }
        const containers = [];
        droppableContainers.forEach((container) => {
          if (container?.disabled || container.id === over?.id) {
            return;
          }
          const rect = droppableRects.get(container.id);
          if (!rect) {
            return;
          }
          switch (event.code) {
            case import_core3.KeyboardCode.Down:
              if (collisionRect.top < rect.top) {
                containers.push(container);
              }
              break;
            case import_core3.KeyboardCode.Up:
              if (collisionRect.top > rect.top) {
                containers.push(container);
              }
              break;
          }
        });
        const collisions = (0, import_core3.closestCorners)({
          active,
          collisionRect,
          pointerCoordinates: null,
          droppableRects,
          droppableContainers: containers
        });
        let closestId = (0, import_core3.getFirstCollision)(collisions, "id");
        if (closestId === over?.id && collisions.length > 1) {
          closestId = collisions[1].id;
        }
        if (closestId && over?.id) {
          const activeRect = droppableRects.get(active.id);
          const newRect = droppableRects.get(closestId);
          const newDroppable = droppableContainers.get(closestId);
          if (activeRect && newRect && newDroppable) {
            const newIndex = items.findIndex(({ id: id2 }) => id2 === closestId);
            const newItem = items[newIndex];
            const activeIndex = items.findIndex(({ id: id2 }) => id2 === active.id);
            const activeItem = items[activeIndex];
            if (newItem && activeItem) {
              const { depth } = getProjection(
                items,
                active.id,
                closestId,
                (newItem.depth - activeItem.depth) * indentationWidth,
                indentationWidth
              );
              const isBelow = newIndex > activeIndex;
              const modifier = isBelow ? 1 : -1;
              const offset5 = 0;
              const newCoordinates = {
                x: newRect.left + depth * indentationWidth,
                y: newRect.top + modifier * offset5
              };
              return newCoordinates;
            }
          }
        }
      }
      return void 0;
    };
  }
});

// src/components/common/sortable-tree/tree-item.tsx
var import_react112, import_icons57, import_ui113, import_jsx_runtime175, TreeItem, Handle, Icon2, Collapse, Value, ChildrenCount;
var init_tree_item = __esm({
  "src/components/common/sortable-tree/tree-item.tsx"() {
    "use strict";
    import_react112 = require("react");
    import_icons57 = require("@medusajs/icons");
    import_ui113 = require("@medusajs/ui");
    import_jsx_runtime175 = require("react/jsx-runtime");
    TreeItem = (0, import_react112.forwardRef)(
      ({
        childCount,
        clone,
        depth,
        disableSelection,
        disableInteraction,
        ghost,
        handleProps,
        indentationWidth,
        collapsed,
        onCollapse,
        style,
        value,
        disabled,
        wrapperRef,
        ...props
      }, ref) => {
        return /* @__PURE__ */ (0, import_jsx_runtime175.jsx)(
          "li",
          {
            ref: wrapperRef,
            style: {
              paddingLeft: `${indentationWidth * depth}px`
            },
            className: (0, import_ui113.clx)("-mb-px list-none", {
              "pointer-events-none": disableInteraction,
              "select-none": disableSelection,
              "[&:first-of-type>div]:border-t-0": !clone
            }),
            ...props,
            children: /* @__PURE__ */ (0, import_jsx_runtime175.jsxs)(
              "div",
              {
                ref,
                style,
                className: (0, import_ui113.clx)(
                  "bg-ui-bg-base transition-fg relative flex items-center gap-x-3 border-y px-6 py-2.5",
                  {
                    "border-l": depth > 0,
                    "shadow-elevation-flyout bg-ui-bg-base w-fit rounded-lg border-none pr-6 opacity-80": clone,
                    "bg-ui-bg-base-hover z-[1] opacity-50": ghost,
                    "bg-ui-bg-disabled": disabled
                  }
                ),
                children: [
                  /* @__PURE__ */ (0, import_jsx_runtime175.jsx)(Handle, { ...handleProps, disabled }),
                  /* @__PURE__ */ (0, import_jsx_runtime175.jsx)(
                    Collapse,
                    {
                      collapsed,
                      onCollapse,
                      clone
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime175.jsx)(
                    Icon2,
                    {
                      childrenCount: childCount,
                      collapsed,
                      clone
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime175.jsx)(Value, { value }),
                  /* @__PURE__ */ (0, import_jsx_runtime175.jsx)(ChildrenCount, { clone, childrenCount: childCount })
                ]
              }
            )
          }
        );
      }
    );
    TreeItem.displayName = "TreeItem";
    Handle = ({
      listeners,
      attributes,
      disabled
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime175.jsx)(
        import_ui113.IconButton,
        {
          size: "small",
          variant: "transparent",
          type: "button",
          className: (0, import_ui113.clx)("cursor-grab", { "cursor-not-allowed": disabled }),
          disabled,
          ...attributes,
          ...listeners,
          children: /* @__PURE__ */ (0, import_jsx_runtime175.jsx)(import_icons57.DotsSix, {})
        }
      );
    };
    Icon2 = ({ childrenCount, collapsed, clone }) => {
      const isBranch = clone ? childrenCount && childrenCount > 1 : childrenCount;
      const isOpen = clone ? false : !collapsed;
      return /* @__PURE__ */ (0, import_jsx_runtime175.jsx)("div", { className: "flex size-7 items-center justify-center", children: isBranch ? isOpen ? /* @__PURE__ */ (0, import_jsx_runtime175.jsx)(import_icons57.FolderOpenIllustration, {}) : /* @__PURE__ */ (0, import_jsx_runtime175.jsx)(import_icons57.FolderIllustration, {}) : /* @__PURE__ */ (0, import_jsx_runtime175.jsx)(import_icons57.Swatch, { className: "text-ui-fg-muted" }) });
    };
    Collapse = ({ collapsed, onCollapse, clone }) => {
      if (clone) {
        return null;
      }
      if (!onCollapse) {
        return /* @__PURE__ */ (0, import_jsx_runtime175.jsx)("div", { className: "size-7", role: "presentation" });
      }
      return /* @__PURE__ */ (0, import_jsx_runtime175.jsx)(
        import_ui113.IconButton,
        {
          size: "small",
          variant: "transparent",
          onClick: onCollapse,
          type: "button",
          children: /* @__PURE__ */ (0, import_jsx_runtime175.jsx)(
            import_icons57.TriangleRightMini,
            {
              className: (0, import_ui113.clx)("text-ui-fg-subtle transition-transform", {
                "rotate-90": !collapsed
              })
            }
          )
        }
      );
    };
    Value = ({ value }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime175.jsx)("div", { className: "txt-compact-small text-ui-fg-subtle flex-grow truncate", children: value });
    };
    ChildrenCount = ({ clone, childrenCount }) => {
      if (!clone || !childrenCount) {
        return null;
      }
      if (clone && childrenCount <= 1) {
        return null;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime175.jsx)(import_ui113.Badge, { size: "2xsmall", color: "blue", className: "absolute -right-2 -top-2", children: childrenCount });
    };
  }
});

// src/components/common/sortable-tree/sortable-tree-item.tsx
function SortableTreeItem({
  id: id2,
  depth,
  disabled,
  ...props
}) {
  const {
    attributes,
    isDragging,
    isSorting,
    listeners,
    setDraggableNodeRef,
    setDroppableNodeRef,
    transform,
    transition
  } = (0, import_sortable3.useSortable)({
    id: id2,
    animateLayoutChanges,
    disabled
  });
  const style = {
    transform: CSS2.Translate.toString(transform),
    transition
  };
  return /* @__PURE__ */ (0, import_jsx_runtime176.jsx)(
    TreeItem,
    {
      ref: setDraggableNodeRef,
      wrapperRef: setDroppableNodeRef,
      style,
      depth,
      ghost: isDragging,
      disableSelection: iOS,
      disableInteraction: isSorting,
      disabled,
      handleProps: {
        listeners,
        attributes
      },
      ...props
    }
  );
}
var import_sortable3, import_jsx_runtime176, animateLayoutChanges;
var init_sortable_tree_item = __esm({
  "src/components/common/sortable-tree/sortable-tree-item.tsx"() {
    "use strict";
    import_sortable3 = require("@dnd-kit/sortable");
    init_utilities_esm();
    init_tree_item();
    init_utils8();
    import_jsx_runtime176 = require("react/jsx-runtime");
    animateLayoutChanges = ({
      isSorting,
      wasDragging
    }) => {
      return isSorting || wasDragging ? false : true;
    };
  }
});

// src/components/common/sortable-tree/sortable-tree.tsx
function SortableTree({
  collapsible = true,
  childrenProp = "children",
  // "children" is the default children prop name
  enableDrag = true,
  items = [],
  indentationWidth = 40,
  onChange,
  renderValue
}) {
  const [collapsedState, setCollapsedState] = (0, import_react113.useState)({});
  const [activeId, setActiveId] = (0, import_react113.useState)(null);
  const [overId, setOverId] = (0, import_react113.useState)(null);
  const [offsetLeft, setOffsetLeft] = (0, import_react113.useState)(0);
  const [currentPosition, setCurrentPosition] = (0, import_react113.useState)(null);
  const flattenedItems = (0, import_react113.useMemo)(() => {
    const flattenedTree = flattenTree(items, childrenProp);
    const collapsedItems = flattenedTree.reduce(
      (acc, item) => {
        const { id: id2 } = item;
        const children = item[childrenProp] || [];
        const collapsed = collapsedState[id2];
        return collapsed && children.length ? [...acc, id2] : acc;
      },
      []
    );
    return removeChildrenOf(
      flattenedTree,
      activeId ? [activeId, ...collapsedItems] : collapsedItems,
      childrenProp
    );
  }, [activeId, items, childrenProp, collapsedState]);
  const projected = activeId && overId ? getProjection(
    flattenedItems,
    activeId,
    overId,
    offsetLeft,
    indentationWidth
  ) : null;
  const sensorContext = (0, import_react113.useRef)({
    items: flattenedItems,
    offset: offsetLeft
  });
  const [coordinateGetter] = (0, import_react113.useState)(
    () => sortableTreeKeyboardCoordinates(sensorContext, indentationWidth)
  );
  const sensors = (0, import_core4.useSensors)(
    (0, import_core4.useSensor)(import_core4.PointerSensor),
    (0, import_core4.useSensor)(import_core4.KeyboardSensor, {
      coordinateGetter
    })
  );
  const sortedIds = (0, import_react113.useMemo)(
    () => flattenedItems.map(({ id: id2 }) => id2),
    [flattenedItems]
  );
  const activeItem = activeId ? flattenedItems.find(({ id: id2 }) => id2 === activeId) : null;
  (0, import_react113.useEffect)(() => {
    sensorContext.current = {
      items: flattenedItems,
      offset: offsetLeft
    };
  }, [flattenedItems, offsetLeft]);
  function handleDragStart({ active: { id: activeId2 } }) {
    setActiveId(activeId2);
    setOverId(activeId2);
    const activeItem2 = flattenedItems.find(({ id: id2 }) => id2 === activeId2);
    if (activeItem2) {
      setCurrentPosition({
        parentId: activeItem2.parentId,
        overId: activeId2
      });
    }
    document.body.style.setProperty("cursor", "grabbing");
  }
  function handleDragMove({ delta }) {
    setOffsetLeft(delta.x);
  }
  function handleDragOver({ over }) {
    setOverId(over?.id ?? null);
  }
  function handleDragEnd({ active, over }) {
    resetState();
    if (projected && over) {
      const { depth, parentId } = projected;
      const clonedItems = JSON.parse(
        JSON.stringify(flattenTree(items, childrenProp))
      );
      const overIndex = clonedItems.findIndex(({ id: id2 }) => id2 === over.id);
      const activeIndex = clonedItems.findIndex(({ id: id2 }) => id2 === active.id);
      const activeTreeItem = clonedItems[activeIndex];
      clonedItems[activeIndex] = { ...activeTreeItem, depth, parentId };
      const sortedItems = (0, import_sortable4.arrayMove)(clonedItems, activeIndex, overIndex);
      const { items: newItems, update } = buildTree(
        sortedItems,
        overIndex,
        childrenProp
      );
      onChange(update, newItems);
    }
  }
  function handleDragCancel() {
    resetState();
  }
  function resetState() {
    setOverId(null);
    setActiveId(null);
    setOffsetLeft(0);
    setCurrentPosition(null);
    document.body.style.setProperty("cursor", "");
  }
  function handleCollapse(id2) {
    setCollapsedState((state) => ({
      ...state,
      [id2]: state[id2] ? false : true
    }));
  }
  function getMovementAnnouncement(eventName, activeId2, overId2) {
    if (overId2 && projected) {
      if (eventName !== "onDragEnd") {
        if (currentPosition && projected.parentId === currentPosition.parentId && overId2 === currentPosition.overId) {
          return;
        } else {
          setCurrentPosition({
            parentId: projected.parentId,
            overId: overId2
          });
        }
      }
      const clonedItems = JSON.parse(
        JSON.stringify(flattenTree(items, childrenProp))
      );
      const overIndex = clonedItems.findIndex(({ id: id2 }) => id2 === overId2);
      const activeIndex = clonedItems.findIndex(({ id: id2 }) => id2 === activeId2);
      const sortedItems = (0, import_sortable4.arrayMove)(clonedItems, activeIndex, overIndex);
      const previousItem = sortedItems[overIndex - 1];
      let announcement;
      const movedVerb = eventName === "onDragEnd" ? "dropped" : "moved";
      const nestedVerb = eventName === "onDragEnd" ? "dropped" : "nested";
      if (!previousItem) {
        const nextItem = sortedItems[overIndex + 1];
        announcement = `${activeId2} was ${movedVerb} before ${nextItem.id}.`;
      } else {
        if (projected.depth > previousItem.depth) {
          announcement = `${activeId2} was ${nestedVerb} under ${previousItem.id}.`;
        } else {
          let previousSibling = previousItem;
          while (previousSibling && projected.depth < previousSibling.depth) {
            const parentId = previousSibling.parentId;
            previousSibling = sortedItems.find(({ id: id2 }) => id2 === parentId);
          }
          if (previousSibling) {
            announcement = `${activeId2} was ${movedVerb} after ${previousSibling.id}.`;
          }
        }
      }
      return announcement;
    }
    return;
  }
  const announcements = {
    onDragStart({ active }) {
      return `Picked up ${active.id}.`;
    },
    onDragMove({ active, over }) {
      return getMovementAnnouncement("onDragMove", active.id, over?.id);
    },
    onDragOver({ active, over }) {
      return getMovementAnnouncement("onDragOver", active.id, over?.id);
    },
    onDragEnd({ active, over }) {
      return getMovementAnnouncement("onDragEnd", active.id, over?.id);
    },
    onDragCancel({ active }) {
      return `Moving was cancelled. ${active.id} was dropped in its original position.`;
    }
  };
  return /* @__PURE__ */ (0, import_jsx_runtime177.jsx)(
    import_core4.DndContext,
    {
      accessibility: { announcements },
      sensors,
      collisionDetection: import_core4.closestCenter,
      measuring,
      onDragStart: handleDragStart,
      onDragMove: handleDragMove,
      onDragOver: handleDragOver,
      onDragEnd: handleDragEnd,
      onDragCancel: handleDragCancel,
      children: /* @__PURE__ */ (0, import_jsx_runtime177.jsxs)(import_sortable4.SortableContext, { items: sortedIds, strategy: import_sortable4.verticalListSortingStrategy, children: [
        flattenedItems.map((item) => {
          const { id: id2, depth } = item;
          const children = item[childrenProp] || [];
          const disabled = typeof enableDrag === "function" ? !enableDrag(item) : !enableDrag;
          return /* @__PURE__ */ (0, import_jsx_runtime177.jsx)(
            SortableTreeItem,
            {
              id: id2,
              value: renderValue(item),
              disabled,
              depth: id2 === activeId && projected ? projected.depth : depth,
              indentationWidth,
              collapsed: Boolean(collapsedState[id2] && children.length),
              childCount: children.length,
              onCollapse: collapsible && children.length ? () => handleCollapse(id2) : void 0
            },
            id2
          );
        }),
        (0, import_react_dom3.createPortal)(
          /* @__PURE__ */ (0, import_jsx_runtime177.jsx)(import_core4.DragOverlay, { dropAnimation: dropAnimationConfig2, children: activeId && activeItem ? /* @__PURE__ */ (0, import_jsx_runtime177.jsx)(
            SortableTreeItem,
            {
              id: activeId,
              depth: activeItem.depth,
              clone: true,
              childCount: getChildCount(items, activeId, childrenProp) + 1,
              value: renderValue(activeItem),
              indentationWidth: 0
            }
          ) : null }),
          document.body
        )
      ] })
    }
  );
}
var import_core4, import_sortable4, import_react113, import_react_dom3, import_jsx_runtime177, measuring, dropAnimationConfig2;
var init_sortable_tree = __esm({
  "src/components/common/sortable-tree/sortable-tree.tsx"() {
    "use strict";
    import_core4 = require("@dnd-kit/core");
    import_sortable4 = require("@dnd-kit/sortable");
    init_utilities_esm();
    import_react113 = require("react");
    import_react_dom3 = require("react-dom");
    init_keyboard_coordinates();
    init_sortable_tree_item();
    init_utils8();
    import_jsx_runtime177 = require("react/jsx-runtime");
    measuring = {
      droppable: {
        strategy: import_core4.MeasuringStrategy.Always
      }
    };
    dropAnimationConfig2 = {
      keyframes({ transform }) {
        return [
          { opacity: 1, transform: CSS2.Transform.toString(transform.initial) },
          {
            opacity: 0,
            transform: CSS2.Transform.toString({
              ...transform.final,
              x: transform.final.x + 5,
              y: transform.final.y + 5
            })
          }
        ];
      },
      easing: "ease-out",
      sideEffects({ active }) {
        active.node.animate([{ opacity: 0 }, { opacity: 1 }], {
          duration: import_core4.defaultDropAnimation.duration,
          easing: import_core4.defaultDropAnimation.easing
        });
      }
    };
  }
});

// src/components/common/sortable-tree/index.ts
var init_sortable_tree2 = __esm({
  "src/components/common/sortable-tree/index.ts"() {
    "use strict";
    init_sortable_tree();
  }
});

// src/routes/categories/common/components/category-tree/category-tree.tsx
var import_jsx_runtime178, CategoryTree, CategoryLeafPlaceholder;
var init_category_tree = __esm({
  "src/routes/categories/common/components/category-tree/category-tree.tsx"() {
    "use strict";
    init_sortable_tree2();
    import_jsx_runtime178 = require("react/jsx-runtime");
    CategoryTree = ({
      value,
      onChange,
      renderValue,
      enableDrag = true,
      isLoading = false
    }) => {
      if (isLoading) {
        return /* @__PURE__ */ (0, import_jsx_runtime178.jsx)("div", { className: "txt-compact-small relative flex-1 overflow-y-auto", children: Array.from({ length: 10 }).map((_, i) => /* @__PURE__ */ (0, import_jsx_runtime178.jsx)(CategoryLeafPlaceholder, {}, i)) });
      }
      return /* @__PURE__ */ (0, import_jsx_runtime178.jsx)(
        SortableTree,
        {
          items: value,
          childrenProp: "category_children",
          collapsible: true,
          enableDrag,
          onChange,
          renderValue
        }
      );
    };
    CategoryLeafPlaceholder = () => {
      return /* @__PURE__ */ (0, import_jsx_runtime178.jsx)("div", { className: "bg-ui-bg-base -mb-px flex h-12 animate-pulse items-center border-y px-6 py-2.5" });
    };
  }
});

// src/routes/categories/common/components/category-tree/index.ts
var init_category_tree2 = __esm({
  "src/routes/categories/common/components/category-tree/index.ts"() {
    "use strict";
    init_category_tree();
  }
});

// src/routes/categories/category-create/components/create-category-form/create-category-nesting.tsx
var import_ui114, import_react114, import_react_hook_form28, import_react_i18next112, import_jsx_runtime179, ID, CreateCategoryNesting;
var init_create_category_nesting = __esm({
  "src/routes/categories/category-create/components/create-category-form/create-category-nesting.tsx"() {
    "use strict";
    import_ui114 = require("@medusajs/ui");
    import_react114 = require("react");
    import_react_hook_form28 = require("react-hook-form");
    import_react_i18next112 = require("react-i18next");
    init_categories();
    init_category_tree2();
    init_utils7();
    import_jsx_runtime179 = require("react/jsx-runtime");
    ID = "new-item";
    CreateCategoryNesting = ({
      form,
      shouldFreeze
    }) => {
      const { t: t4 } = (0, import_react_i18next112.useTranslation)();
      const [snapshot, setSnapshot] = (0, import_react114.useState)([]);
      const { product_categories, isPending, isError, error } = useProductCategories({
        parent_category_id: "null",
        limit: 9999,
        fields: "id,name,parent_category_id,rank,category_children,rank",
        include_descendants_tree: true
      });
      const parentCategoryId = (0, import_react_hook_form28.useWatch)({
        control: form.control,
        name: "parent_category_id"
      });
      const watchedRank = (0, import_react_hook_form28.useWatch)({
        control: form.control,
        name: "rank"
      });
      const watchedName = (0, import_react_hook_form28.useWatch)({
        control: form.control,
        name: "name"
      });
      const value = (0, import_react114.useMemo)(() => {
        const temp = {
          id: ID,
          name: watchedName,
          parent_category_id: parentCategoryId,
          rank: watchedRank,
          category_children: null
        };
        return insertCategoryTreeItem(product_categories ?? [], temp);
      }, [product_categories, watchedName, parentCategoryId, watchedRank]);
      const handleChange = ({
        parentId,
        index: index2
      }, list) => {
        form.setValue("parent_category_id", parentId, {
          shouldDirty: true,
          shouldTouch: true
        });
        form.setValue("rank", index2, {
          shouldDirty: true,
          shouldTouch: true
        });
        setSnapshot(list);
      };
      if (isError) {
        throw error;
      }
      const ready = !isPending && !!product_categories;
      return /* @__PURE__ */ (0, import_jsx_runtime179.jsx)(
        CategoryTree,
        {
          value: shouldFreeze ? snapshot : value,
          enableDrag: (item) => item.id === ID,
          onChange: handleChange,
          renderValue: (item) => {
            if (item.id === ID) {
              return /* @__PURE__ */ (0, import_jsx_runtime179.jsxs)("div", { className: "flex items-center gap-x-3", children: [
                /* @__PURE__ */ (0, import_jsx_runtime179.jsx)("span", { children: item.name }),
                /* @__PURE__ */ (0, import_jsx_runtime179.jsx)(import_ui114.Badge, { size: "2xsmall", color: "blue", children: t4("categories.fields.new.label") })
              ] });
            }
            return item.name;
          },
          isLoading: !ready
        }
      );
    };
  }
});

// src/routes/categories/category-create/components/create-category-form/schema.ts
var import_zod20, CreateCategoryDetailsSchema, CreateCategorySchema;
var init_schema = __esm({
  "src/routes/categories/category-create/components/create-category-form/schema.ts"() {
    "use strict";
    import_zod20 = require("zod");
    CreateCategoryDetailsSchema = import_zod20.z.object({
      name: import_zod20.z.string().min(1),
      description: import_zod20.z.string().optional(),
      handle: import_zod20.z.string().optional(),
      status: import_zod20.z.enum(["active", "inactive"]),
      visibility: import_zod20.z.enum(["public", "internal"])
    });
    CreateCategorySchema = import_zod20.z.object({
      rank: import_zod20.z.number().nullable(),
      parent_category_id: import_zod20.z.string().nullable()
    }).merge(CreateCategoryDetailsSchema);
  }
});

// src/routes/categories/category-create/components/create-category-form/create-category-form.tsx
var import_zod21, import_ui115, import_react_hook_form29, import_react_i18next113, import_react115, import_jsx_runtime180, CreateCategoryForm;
var init_create_category_form = __esm({
  "src/routes/categories/category-create/components/create-category-form/create-category-form.tsx"() {
    "use strict";
    import_zod21 = require("@hookform/resolvers/zod");
    import_ui115 = require("@medusajs/ui");
    import_react_hook_form29 = require("react-hook-form");
    import_react_i18next113 = require("react-i18next");
    import_react115 = require("react");
    init_modals();
    init_keybound_form2();
    init_categories();
    init_create_category_details();
    init_create_category_nesting();
    init_schema();
    import_jsx_runtime180 = require("react/jsx-runtime");
    CreateCategoryForm = ({
      parentCategoryId
    }) => {
      const { t: t4 } = (0, import_react_i18next113.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const [activeTab, setActiveTab] = (0, import_react115.useState)("details" /* DETAILS */);
      const [validDetails, setValidDetails] = (0, import_react115.useState)(false);
      const [shouldFreeze, setShouldFreeze] = (0, import_react115.useState)(false);
      const form = (0, import_react_hook_form29.useForm)({
        defaultValues: {
          name: "",
          description: "",
          handle: "",
          status: "active",
          visibility: "public",
          rank: parentCategoryId ? 0 : null,
          parent_category_id: parentCategoryId
        },
        resolver: (0, import_zod21.zodResolver)(CreateCategorySchema)
      });
      const handleTabChange = (tab) => {
        if (tab === "organize" /* ORGANIZE */) {
          const { name, handle, description, status, visibility } = form.getValues();
          const result = CreateCategoryDetailsSchema.safeParse({
            name,
            handle,
            description,
            status,
            visibility
          });
          if (!result.success) {
            result.error.errors.forEach((error) => {
              form.setError(error.path.join("."), {
                type: "manual",
                message: error.message
              });
            });
            return;
          }
          form.clearErrors();
          setValidDetails(true);
        }
        setActiveTab(tab);
      };
      const { mutateAsync, isPending } = useCreateProductCategory();
      const handleSubmit = form.handleSubmit((data) => {
        const { visibility, status, parent_category_id, rank, ...rest } = data;
        setShouldFreeze(true);
        mutateAsync(
          {
            ...rest,
            parent_category_id: parent_category_id ?? void 0,
            rank: rank ?? void 0,
            is_active: status === "active",
            is_internal: visibility === "internal"
          },
          {
            onSuccess: ({ product_category }) => {
              import_ui115.toast.success(
                t4("categories.create.successToast", {
                  name: product_category.name
                })
              );
              handleSuccess(`/categories/${product_category.id}`);
            },
            onError: (error) => {
              import_ui115.toast.error(error.message);
              setShouldFreeze(false);
            }
          }
        );
      });
      const nestingStatus = form.getFieldState("parent_category_id")?.isDirty || form.getFieldState("rank")?.isDirty || activeTab === "organize" /* ORGANIZE */ ? "in-progress" : "not-started";
      const detailsStatus = validDetails ? "completed" : "in-progress";
      return /* @__PURE__ */ (0, import_jsx_runtime180.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime180.jsx)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex size-full flex-col overflow-hidden",
          children: /* @__PURE__ */ (0, import_jsx_runtime180.jsxs)(
            import_ui115.ProgressTabs,
            {
              value: activeTab,
              onValueChange: (tab) => handleTabChange(tab),
              className: "flex size-full flex-col",
              children: [
                /* @__PURE__ */ (0, import_jsx_runtime180.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime180.jsx)("div", { className: "flex w-full items-center justify-between", children: /* @__PURE__ */ (0, import_jsx_runtime180.jsx)("div", { className: "-my-2 w-full max-w-[400px] border-l", children: /* @__PURE__ */ (0, import_jsx_runtime180.jsxs)(import_ui115.ProgressTabs.List, { className: "grid w-full grid-cols-2", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime180.jsx)(
                    import_ui115.ProgressTabs.Trigger,
                    {
                      value: "details" /* DETAILS */,
                      status: detailsStatus,
                      className: "w-full min-w-0 overflow-hidden",
                      children: /* @__PURE__ */ (0, import_jsx_runtime180.jsx)("span", { className: "truncate", children: t4("categories.create.tabs.details") })
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime180.jsx)(
                    import_ui115.ProgressTabs.Trigger,
                    {
                      value: "organize" /* ORGANIZE */,
                      status: nestingStatus,
                      className: "w-full min-w-0 overflow-hidden",
                      children: /* @__PURE__ */ (0, import_jsx_runtime180.jsx)("span", { className: "truncate", children: t4("categories.create.tabs.organize") })
                    }
                  )
                ] }) }) }) }),
                /* @__PURE__ */ (0, import_jsx_runtime180.jsxs)(RouteFocusModal.Body, { className: "flex size-full flex-col overflow-auto", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime180.jsx)(import_ui115.ProgressTabs.Content, { value: "details" /* DETAILS */, children: /* @__PURE__ */ (0, import_jsx_runtime180.jsx)(CreateCategoryDetails, { form }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime180.jsx)(
                    import_ui115.ProgressTabs.Content,
                    {
                      value: "organize" /* ORGANIZE */,
                      className: "bg-ui-bg-subtle flex-1",
                      children: /* @__PURE__ */ (0, import_jsx_runtime180.jsx)(CreateCategoryNesting, { form, shouldFreeze })
                    }
                  )
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime180.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime180.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime180.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime180.jsx)(import_ui115.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
                  activeTab === "organize" /* ORGANIZE */ ? /* @__PURE__ */ (0, import_jsx_runtime180.jsx)(
                    import_ui115.Button,
                    {
                      size: "small",
                      variant: "primary",
                      type: "submit",
                      isLoading: isPending,
                      children: t4("actions.save")
                    },
                    "submit-btn"
                  ) : /* @__PURE__ */ (0, import_jsx_runtime180.jsx)(
                    import_ui115.Button,
                    {
                      size: "small",
                      variant: "primary",
                      type: "button",
                      onClick: () => handleTabChange("organize" /* ORGANIZE */),
                      children: t4("actions.continue")
                    },
                    "continue-btn"
                  )
                ] }) })
              ]
            }
          )
        }
      ) });
    };
  }
});

// src/routes/categories/category-create/category-create.tsx
var import_react_router_dom53, import_jsx_runtime181, CategoryCreate;
var init_category_create = __esm({
  "src/routes/categories/category-create/category-create.tsx"() {
    "use strict";
    import_react_router_dom53 = require("react-router-dom");
    init_modals();
    init_create_category_form();
    import_jsx_runtime181 = require("react/jsx-runtime");
    CategoryCreate = () => {
      const [searchParams] = (0, import_react_router_dom53.useSearchParams)();
      const parentCategoryId = searchParams.get("parent_category_id");
      return /* @__PURE__ */ (0, import_jsx_runtime181.jsx)(RouteFocusModal, { children: /* @__PURE__ */ (0, import_jsx_runtime181.jsx)(CreateCategoryForm, { parentCategoryId }) });
    };
  }
});

// src/routes/categories/category-create/index.ts
var category_create_exports = {};
__export(category_create_exports, {
  Component: () => CategoryCreate
});
var init_category_create2 = __esm({
  "src/routes/categories/category-create/index.ts"() {
    "use strict";
    init_category_create();
  }
});

// src/routes/categories/category-organize/components/organize-category-form/organize-category-form.tsx
var import_react_query47, import_icons58, import_ui116, import_react116, import_jsx_runtime182, QUERY, OrganizeCategoryForm;
var init_organize_category_form = __esm({
  "src/routes/categories/category-organize/components/organize-category-form/organize-category-form.tsx"() {
    "use strict";
    import_react_query47 = require("@tanstack/react-query");
    import_icons58 = require("@medusajs/icons");
    import_ui116 = require("@medusajs/ui");
    import_react116 = require("react");
    init_modals();
    init_categories();
    init_client2();
    init_query_client();
    init_category_tree2();
    import_jsx_runtime182 = require("react/jsx-runtime");
    QUERY = {
      fields: "id,name,parent_category_id,rank,*category_children",
      parent_category_id: "null",
      include_descendants_tree: true,
      limit: 9999
    };
    OrganizeCategoryForm = () => {
      const {
        product_categories,
        isPending,
        isError,
        error: fetchError
      } = useProductCategories(QUERY);
      const [snapshot, setSnapshot] = (0, import_react116.useState)([]);
      const { mutateAsync, isPending: isMutating } = (0, import_react_query47.useMutation)({
        mutationFn: async ({
          value
        }) => {
          await sdk.admin.productCategory.update(value.id, {
            rank: value.rank ?? 0,
            parent_category_id: value.parent_category_id
          });
        },
        onMutate: async (update) => {
          await queryClient.cancelQueries({
            queryKey: categoriesQueryKeys.list(QUERY)
          });
          const previousValue = queryClient.getQueryData(categoriesQueryKeys.list(QUERY));
          const nextValue = {
            ...previousValue,
            product_categories: update.arr
          };
          queryClient.setQueryData(categoriesQueryKeys.list(QUERY), nextValue);
          return {
            previousValue
          };
        },
        onError: (error, _newValue, context) => {
          queryClient.setQueryData(
            categoriesQueryKeys.list(QUERY),
            context?.previousValue
          );
          import_ui116.toast.error(error.message);
        },
        onSettled: async () => {
          await queryClient.invalidateQueries({
            queryKey: categoriesQueryKeys.all
          });
        }
      });
      const handleRankChange = async (value, arr) => {
        const val = {
          id: value.id,
          parent_category_id: value.parentId,
          rank: value.index
        };
        setSnapshot(arr);
        await mutateAsync({ value: val, arr });
      };
      const loading = isPending || isMutating;
      if (isError) {
        throw fetchError;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime182.jsxs)("div", { className: "flex h-full flex-col overflow-hidden", children: [
        /* @__PURE__ */ (0, import_jsx_runtime182.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime182.jsx)("div", { className: "flex items-center justify-end", children: loading && /* @__PURE__ */ (0, import_jsx_runtime182.jsx)(import_icons58.Spinner, { className: "animate-spin" }) }) }),
        /* @__PURE__ */ (0, import_jsx_runtime182.jsx)(RouteFocusModal.Body, { className: "bg-ui-bg-subtle flex flex-1 flex-col overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime182.jsx)(
          CategoryTree,
          {
            renderValue: (item) => item.name,
            value: loading ? snapshot : product_categories || [],
            onChange: handleRankChange
          }
        ) })
      ] });
    };
  }
});

// src/routes/categories/category-organize/category-organize.tsx
var import_jsx_runtime183, CategoryOrganize;
var init_category_organize = __esm({
  "src/routes/categories/category-organize/category-organize.tsx"() {
    "use strict";
    init_modals();
    init_organize_category_form();
    import_jsx_runtime183 = require("react/jsx-runtime");
    CategoryOrganize = () => {
      return /* @__PURE__ */ (0, import_jsx_runtime183.jsx)(RouteFocusModal, { children: /* @__PURE__ */ (0, import_jsx_runtime183.jsx)(OrganizeCategoryForm, {}) });
    };
  }
});

// src/routes/categories/category-organize/index.ts
var category_organize_exports = {};
__export(category_organize_exports, {
  Component: () => CategoryOrganize
});
var init_category_organize2 = __esm({
  "src/routes/categories/category-organize/index.ts"() {
    "use strict";
    init_category_organize();
  }
});

// src/routes/categories/category-detail/components/category-general-section/category-general-section.tsx
var import_icons59, import_ui117, import_react_i18next114, import_jsx_runtime184, CategoryGeneralSection;
var init_category_general_section = __esm({
  "src/routes/categories/category-detail/components/category-general-section/category-general-section.tsx"() {
    "use strict";
    import_icons59 = require("@medusajs/icons");
    import_ui117 = require("@medusajs/ui");
    import_react_i18next114 = require("react-i18next");
    init_action_menu2();
    init_use_delete_product_category_action();
    init_utils7();
    import_jsx_runtime184 = require("react/jsx-runtime");
    CategoryGeneralSection = ({
      category
    }) => {
      const { t: t4 } = (0, import_react_i18next114.useTranslation)();
      const activeProps = getIsActiveProps(category.is_active, t4);
      const internalProps = getIsInternalProps(category.is_internal, t4);
      const handleDelete = useDeleteProductCategoryAction(category);
      return /* @__PURE__ */ (0, import_jsx_runtime184.jsxs)(import_ui117.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime184.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime184.jsx)(import_ui117.Heading, { children: category.name }),
          /* @__PURE__ */ (0, import_jsx_runtime184.jsxs)("div", { className: "flex items-center gap-x-4", children: [
            /* @__PURE__ */ (0, import_jsx_runtime184.jsxs)("div", { className: "flex items-center gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime184.jsx)(import_ui117.StatusBadge, { color: activeProps.color, children: activeProps.label }),
              /* @__PURE__ */ (0, import_jsx_runtime184.jsx)(import_ui117.StatusBadge, { color: internalProps.color, children: internalProps.label })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime184.jsx)(
              ActionMenu,
              {
                groups: [
                  {
                    actions: [
                      {
                        label: t4("actions.edit"),
                        icon: /* @__PURE__ */ (0, import_jsx_runtime184.jsx)(import_icons59.PencilSquare, {}),
                        to: "edit"
                      }
                    ]
                  },
                  {
                    actions: [
                      {
                        label: t4("actions.delete"),
                        icon: /* @__PURE__ */ (0, import_jsx_runtime184.jsx)(import_icons59.Trash, {}),
                        onClick: handleDelete
                      }
                    ]
                  }
                ]
              }
            )
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime184.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 gap-3 px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime184.jsx)(import_ui117.Text, { size: "small", leading: "compact", weight: "plus", children: t4("fields.description") }),
          /* @__PURE__ */ (0, import_jsx_runtime184.jsx)(import_ui117.Text, { size: "small", leading: "compact", children: category.description || "-" })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime184.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 gap-3 px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime184.jsx)(import_ui117.Text, { size: "small", leading: "compact", weight: "plus", children: t4("fields.handle") }),
          /* @__PURE__ */ (0, import_jsx_runtime184.jsxs)(import_ui117.Text, { size: "small", leading: "compact", children: [
            "/",
            category.handle
          ] })
        ] })
      ] });
    };
  }
});

// src/routes/categories/category-detail/components/category-general-section/index.ts
var init_category_general_section2 = __esm({
  "src/routes/categories/category-detail/components/category-general-section/index.ts"() {
    "use strict";
    init_category_general_section();
  }
});

// src/routes/categories/category-detail/components/category-organize-section/category-organize-section.tsx
var import_icons60, import_ui118, import_react117, import_react_i18next115, import_react_router_dom54, import_jsx_runtime185, CategoryOrganizeSection, PathDisplay, ChildrenDisplay;
var init_category_organize_section = __esm({
  "src/routes/categories/category-detail/components/category-organize-section/category-organize-section.tsx"() {
    "use strict";
    import_icons60 = require("@medusajs/icons");
    import_ui118 = require("@medusajs/ui");
    import_react117 = require("react");
    import_react_i18next115 = require("react-i18next");
    import_react_router_dom54 = require("react-router-dom");
    init_action_menu2();
    init_link_button2();
    init_skeleton2();
    init_categories();
    init_utils7();
    import_jsx_runtime185 = require("react/jsx-runtime");
    CategoryOrganizeSection = ({
      category
    }) => {
      const { t: t4 } = (0, import_react_i18next115.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime185.jsxs)(import_ui118.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime185.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(import_ui118.Heading, { level: "h2", children: t4("categories.organize.header") }),
          /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      label: t4("categories.organize.action"),
                      icon: /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(import_icons60.PencilSquare, {}),
                      to: `organize`
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime185.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-start gap-3 px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(import_ui118.Text, { size: "small", leading: "compact", weight: "plus", children: t4("categories.fields.path.label") }),
          /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(PathDisplay, { category })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime185.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-start gap-3 px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(import_ui118.Text, { size: "small", leading: "compact", weight: "plus", children: t4("categories.fields.children.label") }),
          /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(ChildrenDisplay, { category })
        ] })
      ] });
    };
    PathDisplay = ({
      category
    }) => {
      const [expanded, setExpanded] = (0, import_react117.useState)(false);
      const { t: t4 } = (0, import_react_i18next115.useTranslation)();
      const {
        product_category: withParents,
        isLoading,
        isError,
        error
      } = useProductCategory(category.id, {
        include_ancestors_tree: true,
        fields: "id,name,*parent_category"
      });
      const chips = (0, import_react117.useMemo)(() => getCategoryPath(withParents), [withParents]);
      if (isLoading || !withParents) {
        return /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(Skeleton, { className: "h-5 w-16" });
      }
      if (isError) {
        throw error;
      }
      if (!chips.length) {
        return /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(import_ui118.Text, { size: "small", leading: "compact", children: "-" });
      }
      if (chips.length > 1 && !expanded) {
        return /* @__PURE__ */ (0, import_jsx_runtime185.jsxs)("div", { className: "grid grid-cols-[20px_1fr] items-start gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(import_icons60.FolderIllustration, {}),
          /* @__PURE__ */ (0, import_jsx_runtime185.jsxs)("div", { className: "flex w-full items-center gap-x-0.5 overflow-hidden", children: [
            /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(import_ui118.Tooltip, { content: t4("categories.fields.path.tooltip"), children: /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(
              "button",
              {
                className: "outline-none",
                type: "button",
                onClick: () => setExpanded(true),
                children: /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(import_ui118.Text, { size: "xsmall", leading: "compact", weight: "plus", children: "..." })
              }
            ) }),
            /* @__PURE__ */ (0, import_jsx_runtime185.jsx)("div", { className: "flex size-[15px] shrink-0 items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(import_icons60.TriangleRightMini, {}) }),
            /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(
              import_ui118.Text,
              {
                size: "xsmall",
                leading: "compact",
                weight: "plus",
                className: "truncate",
                children: chips[chips.length - 1].name
              }
            )
          ] })
        ] });
      }
      if (chips.length > 1 && expanded) {
        return /* @__PURE__ */ (0, import_jsx_runtime185.jsxs)("div", { className: "grid grid-cols-[20px_1fr] items-start gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(import_icons60.FolderIllustration, {}),
          /* @__PURE__ */ (0, import_jsx_runtime185.jsx)("div", { className: "gap- flex flex-wrap items-center gap-x-0.5 gap-y-1", children: chips.map((chip, index2) => {
            return /* @__PURE__ */ (0, import_jsx_runtime185.jsxs)("div", { className: "flex items-center gap-x-0.5", children: [
              index2 === chips.length - 1 ? /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(import_ui118.Text, { size: "xsmall", leading: "compact", weight: "plus", children: chip.name }) : /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(
                LinkButton,
                {
                  to: `/categories/${chip.id}`,
                  className: "txt-compact-xsmall-plus text-ui-fg-subtle hover:text-ui-fg-base focus-visible:text-ui-fg-base",
                  children: chip.name
                }
              ),
              index2 < chips.length - 1 && /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(import_icons60.TriangleRightMini, {})
            ] }, chip.id);
          }) })
        ] });
      }
      return /* @__PURE__ */ (0, import_jsx_runtime185.jsx)("div", { className: "grid grid-cols-1 items-start gap-x-2", children: chips.map((chip, index2) => /* @__PURE__ */ (0, import_jsx_runtime185.jsxs)("div", { className: "flex items-center gap-x-0.5", children: [
        /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(import_ui118.Text, { size: "xsmall", leading: "compact", weight: "plus", children: chip.name }),
        index2 < chips.length - 1 && /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(import_icons60.TriangleRightMini, {})
      ] }, chip.id)) });
    };
    ChildrenDisplay = ({
      category
    }) => {
      const {
        product_category: withChildren,
        isLoading,
        isError,
        error
      } = useProductCategory(category.id, {
        include_descendants_tree: true,
        fields: "id,name,category_children"
      });
      const chips = (0, import_react117.useMemo)(() => getCategoryChildren(withChildren), [withChildren]);
      if (isLoading || !withChildren) {
        return /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(Skeleton, { className: "h-5 w-16" });
      }
      if (isError) {
        throw error;
      }
      if (!chips.length) {
        return /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(import_ui118.Text, { size: "small", leading: "compact", children: "-" });
      }
      return /* @__PURE__ */ (0, import_jsx_runtime185.jsx)("div", { className: "flex w-full flex-wrap gap-1", children: chips.map((chip) => /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(import_ui118.Badge, { size: "2xsmall", className: "max-w-full", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime185.jsx)(import_react_router_dom54.Link, { to: `/categories/${chip.id}`, children: /* @__PURE__ */ (0, import_jsx_runtime185.jsx)("span", { className: "truncate", children: chip.name }) }) }, chip.id)) });
    };
  }
});

// src/routes/categories/category-detail/components/category-organize-section/index.ts
var init_category_organize_section2 = __esm({
  "src/routes/categories/category-detail/components/category-organize-section/index.ts"() {
    "use strict";
    init_category_organize_section();
  }
});

// src/routes/categories/category-detail/components/category-product-section/category-product-section.tsx
var import_icons61, import_ui119, import_react_query48, import_react_table14, import_react118, import_react_i18next116, import_jsx_runtime186, PAGE_SIZE7, CategoryProductSection, columnHelper13, useColumns6;
var init_category_product_section = __esm({
  "src/routes/categories/category-detail/components/category-product-section/category-product-section.tsx"() {
    "use strict";
    import_icons61 = require("@medusajs/icons");
    import_ui119 = require("@medusajs/ui");
    import_react_query48 = require("@tanstack/react-query");
    import_react_table14 = require("@tanstack/react-table");
    import_react118 = require("react");
    import_react_i18next116 = require("react-i18next");
    init_action_menu2();
    init_data_table2();
    init_categories();
    init_products();
    init_use_product_table_columns();
    init_use_product_table_filters();
    init_use_product_table_query();
    init_use_data_table();
    import_jsx_runtime186 = require("react/jsx-runtime");
    PAGE_SIZE7 = 10;
    CategoryProductSection = ({
      category
    }) => {
      const { t: t4 } = (0, import_react_i18next116.useTranslation)();
      const prompt = (0, import_ui119.usePrompt)();
      const [selection, setSelection] = (0, import_react118.useState)({});
      const { raw, searchParams } = useProductTableQuery({ pageSize: PAGE_SIZE7 });
      const { products, count: count3, isLoading, isError, error } = useProducts(
        {
          ...searchParams,
          category_id: [category.id]
        },
        {
          placeholderData: import_react_query48.keepPreviousData
        }
      );
      const columns = useColumns6();
      const filters = useProductTableFilters(["categories"]);
      const { table } = useDataTable({
        data: products || [],
        columns,
        count: count3,
        getRowId: (original) => original.id,
        pageSize: PAGE_SIZE7,
        enableRowSelection: true,
        enablePagination: true,
        rowSelection: {
          state: selection,
          updater: setSelection
        }
      });
      const { mutateAsync } = useUpdateProductCategoryProducts(category.id);
      const handleRemove = async () => {
        const selected = Object.keys(selection);
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("categories.products.remove.confirmation", {
            count: selected.length
          }),
          confirmText: t4("actions.remove"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(
          {
            remove: selected
          },
          {
            onSuccess: () => {
              import_ui119.toast.success(
                t4("categories.products.remove.successToast", {
                  count: selected.length
                })
              );
              setSelection({});
            },
            onError: (error2) => {
              import_ui119.toast.error(error2.message);
            }
          }
        );
      };
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime186.jsxs)(import_ui119.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime186.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime186.jsx)(import_ui119.Heading, { level: "h2", children: t4("products.domain") }),
          /* @__PURE__ */ (0, import_jsx_runtime186.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      label: t4("actions.add"),
                      icon: /* @__PURE__ */ (0, import_jsx_runtime186.jsx)(import_icons61.PlusMini, {}),
                      to: "products"
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime186.jsx)(
          DataTable,
          {
            table,
            filters,
            columns,
            orderBy: [
              { key: "title", label: t4("fields.title") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            pageSize: PAGE_SIZE7,
            count: count3,
            navigateTo: (row) => `/products/${row.id}`,
            isLoading,
            queryObject: raw,
            noRecords: {
              message: t4("categories.products.list.noRecordsMessage")
            }
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime186.jsx)(import_ui119.CommandBar, { open: !!Object.keys(selection).length, children: /* @__PURE__ */ (0, import_jsx_runtime186.jsxs)(import_ui119.CommandBar.Bar, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime186.jsx)(import_ui119.CommandBar.Value, { children: t4("general.countSelected", {
            count: Object.keys(selection).length
          }) }),
          /* @__PURE__ */ (0, import_jsx_runtime186.jsx)(import_ui119.CommandBar.Seperator, {}),
          /* @__PURE__ */ (0, import_jsx_runtime186.jsx)(
            import_ui119.CommandBar.Command,
            {
              action: handleRemove,
              label: t4("actions.remove"),
              shortcut: "r"
            }
          )
        ] }) })
      ] });
    };
    columnHelper13 = (0, import_react_table14.createColumnHelper)();
    useColumns6 = () => {
      const base = useProductTableColumns();
      return (0, import_react118.useMemo)(
        () => [
          columnHelper13.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime186.jsx)(
                import_ui119.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime186.jsx)(
                import_ui119.Checkbox,
                {
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...base
        ],
        [base]
      );
    };
  }
});

// src/routes/categories/category-detail/components/category-product-section/index.ts
var init_category_product_section2 = __esm({
  "src/routes/categories/category-detail/components/category-product-section/index.ts"() {
    "use strict";
    init_category_product_section();
  }
});

// src/routes/categories/category-detail/category-detail.tsx
var import_react_router_dom55, import_jsx_runtime187, CategoryDetail;
var init_category_detail = __esm({
  "src/routes/categories/category-detail/category-detail.tsx"() {
    "use strict";
    import_react_router_dom55 = require("react-router-dom");
    init_categories();
    init_category_general_section2();
    init_category_organize_section2();
    init_category_product_section2();
    init_skeleton2();
    init_pages();
    init_extensions();
    import_jsx_runtime187 = require("react/jsx-runtime");
    CategoryDetail = () => {
      const { id: id2 } = (0, import_react_router_dom55.useParams)();
      const initialData = (0, import_react_router_dom55.useLoaderData)();
      const { getWidgets } = useDashboardExtension();
      const { product_category, isLoading, isError, error } = useProductCategory(
        id2,
        void 0,
        {
          initialData
        }
      );
      if (isLoading || !product_category) {
        return /* @__PURE__ */ (0, import_jsx_runtime187.jsx)(
          TwoColumnPageSkeleton,
          {
            mainSections: 2,
            sidebarSections: 1,
            showJSON: true,
            showMetadata: true
          }
        );
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime187.jsxs)(
        TwoColumnPage,
        {
          widgets: {
            after: getWidgets("product_category.details.after"),
            before: getWidgets("product_category.details.before"),
            sideAfter: getWidgets("product_category.details.side.after"),
            sideBefore: getWidgets("product_category.details.side.before")
          },
          showJSON: true,
          showMetadata: true,
          data: product_category,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime187.jsxs)(TwoColumnPage.Main, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime187.jsx)(CategoryGeneralSection, { category: product_category }),
              /* @__PURE__ */ (0, import_jsx_runtime187.jsx)(CategoryProductSection, { category: product_category })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime187.jsx)(TwoColumnPage.Sidebar, { children: /* @__PURE__ */ (0, import_jsx_runtime187.jsx)(CategoryOrganizeSection, { category: product_category }) })
          ]
        }
      );
    };
  }
});

// src/routes/categories/category-detail/loader.ts
var categoryDetailQuery, categoryLoader;
var init_loader6 = __esm({
  "src/routes/categories/category-detail/loader.ts"() {
    "use strict";
    init_categories();
    init_client2();
    init_query_client();
    categoryDetailQuery = (id2) => ({
      queryKey: categoriesQueryKeys.detail(id2),
      queryFn: async () => sdk.admin.productCategory.retrieve(id2)
    });
    categoryLoader = async ({ params: params2 }) => {
      const id2 = params2.id;
      const query = categoryDetailQuery(id2);
      return queryClient.getQueryData(query.queryKey) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/routes/categories/category-detail/index.ts
var category_detail_exports = {};
__export(category_detail_exports, {
  Component: () => CategoryDetail,
  loader: () => categoryLoader
});
var init_category_detail2 = __esm({
  "src/routes/categories/category-detail/index.ts"() {
    "use strict";
    init_category_detail();
    init_loader6();
  }
});

// src/routes/categories/category-edit/components/edit-category-form/edit-category-form.tsx
var import_zod22, import_ui120, import_react_hook_form30, import_react_i18next117, import_zod23, import_jsx_runtime188, EditCategorySchema, EditCategoryForm;
var init_edit_category_form = __esm({
  "src/routes/categories/category-edit/components/edit-category-form/edit-category-form.tsx"() {
    "use strict";
    import_zod22 = require("@hookform/resolvers/zod");
    import_ui120 = require("@medusajs/ui");
    import_react_hook_form30 = require("react-hook-form");
    import_react_i18next117 = require("react-i18next");
    import_zod23 = require("zod");
    init_form2();
    init_handle_input2();
    init_modals();
    init_keybound_form2();
    init_categories();
    import_jsx_runtime188 = require("react/jsx-runtime");
    EditCategorySchema = import_zod23.z.object({
      name: import_zod23.z.string().min(1),
      handle: import_zod23.z.string().min(1),
      description: import_zod23.z.string().optional(),
      status: import_zod23.z.enum(["active", "inactive"]),
      visibility: import_zod23.z.enum(["public", "internal"])
    });
    EditCategoryForm = ({ category }) => {
      const { t: t4 } = (0, import_react_i18next117.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form30.useForm)({
        defaultValues: {
          name: category.name,
          handle: category.handle,
          description: category.description || "",
          status: category.is_active ? "active" : "inactive",
          visibility: category.is_internal ? "internal" : "public"
        },
        resolver: (0, import_zod22.zodResolver)(EditCategorySchema)
      });
      const { mutateAsync, isPending } = useUpdateProductCategory(category.id);
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(
          {
            name: data.name,
            description: data.description,
            handle: data.handle,
            is_active: data.status === "active",
            is_internal: data.visibility === "internal"
          },
          {
            onSuccess: () => {
              import_ui120.toast.success(t4("categories.edit.successToast"));
              handleSuccess();
            },
            onError: (error) => {
              import_ui120.toast.error(error.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime188.jsxs)(KeyboundForm, { onSubmit: handleSubmit, className: "flex flex-1 flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(RouteDrawer.Body, { children: /* @__PURE__ */ (0, import_jsx_runtime188.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "name",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime188.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(Form.Label, { children: t4("fields.title") }),
                  /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(import_ui120.Input, { autoComplete: "off", ...field }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "handle",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime188.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(
                    Form.Label,
                    {
                      optional: true,
                      tooltip: t4("collections.handleTooltip"),
                      children: t4("fields.handle")
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(HandleInput, { ...field }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "description",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime188.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(Form.Label, { optional: true, children: t4("fields.description") }),
                  /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(import_ui120.Textarea, { ...field }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime188.jsxs)("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "status",
                render: ({ field: { ref, onChange, ...field } }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime188.jsxs)(Form.Item, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(Form.Label, { children: t4("categories.fields.status.label") }),
                    /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime188.jsxs)(import_ui120.Select, { ...field, onValueChange: onChange, children: [
                      /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(import_ui120.Select.Trigger, { ref, children: /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(import_ui120.Select.Value, {}) }),
                      /* @__PURE__ */ (0, import_jsx_runtime188.jsxs)(import_ui120.Select.Content, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(import_ui120.Select.Item, { value: "active", children: t4("categories.fields.status.active") }),
                        /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(import_ui120.Select.Item, { value: "inactive", children: t4("categories.fields.status.inactive") })
                      ] })
                    ] }) }),
                    /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "visibility",
                render: ({ field: { ref, onChange, ...field } }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime188.jsxs)(Form.Item, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(Form.Label, { children: t4("categories.fields.visibility.label") }),
                    /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime188.jsxs)(import_ui120.Select, { ...field, onValueChange: onChange, children: [
                      /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(import_ui120.Select.Trigger, { ref, children: /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(import_ui120.Select.Value, {}) }),
                      /* @__PURE__ */ (0, import_jsx_runtime188.jsxs)(import_ui120.Select.Content, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(import_ui120.Select.Item, { value: "public", children: t4("categories.fields.visibility.public") }),
                        /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(import_ui120.Select.Item, { value: "internal", children: t4("categories.fields.visibility.internal") })
                      ] })
                    ] }) }),
                    /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              }
            )
          ] })
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime188.jsxs)("div", { className: "flex items-center gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(import_ui120.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime188.jsx)(import_ui120.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
        ] }) })
      ] }) });
    };
  }
});

// src/routes/categories/category-edit/components/edit-category-form/index.ts
var init_edit_category_form2 = __esm({
  "src/routes/categories/category-edit/components/edit-category-form/index.ts"() {
    "use strict";
    init_edit_category_form();
  }
});

// src/routes/categories/category-edit/category-edit.tsx
var import_ui121, import_react_i18next118, import_react_router_dom56, import_jsx_runtime189, CategoryEdit;
var init_category_edit = __esm({
  "src/routes/categories/category-edit/category-edit.tsx"() {
    "use strict";
    import_ui121 = require("@medusajs/ui");
    import_react_i18next118 = require("react-i18next");
    import_react_router_dom56 = require("react-router-dom");
    init_modals();
    init_categories();
    init_edit_category_form2();
    import_jsx_runtime189 = require("react/jsx-runtime");
    CategoryEdit = () => {
      const { id: id2 } = (0, import_react_router_dom56.useParams)();
      const { t: t4 } = (0, import_react_i18next118.useTranslation)();
      const { product_category, isPending, isError, error } = useProductCategory(
        id2
      );
      const ready = !isPending && !!product_category;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime189.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime189.jsxs)(RouteDrawer.Header, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime189.jsx)(RouteDrawer.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime189.jsx)(import_ui121.Heading, { children: t4("categories.edit.header") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime189.jsx)(RouteDrawer.Description, { className: "sr-only", children: t4("categories.edit.description") })
        ] }),
        ready && /* @__PURE__ */ (0, import_jsx_runtime189.jsx)(EditCategoryForm, { category: product_category })
      ] });
    };
  }
});

// src/routes/categories/category-edit/index.ts
var category_edit_exports = {};
__export(category_edit_exports, {
  Component: () => CategoryEdit
});
var init_category_edit2 = __esm({
  "src/routes/categories/category-edit/index.ts"() {
    "use strict";
    init_category_edit();
  }
});

// src/routes/categories/category-products/components/edit-category-products-form/edit-category-products-form.tsx
var import_zod24, import_react_hook_form31, import_zod25, import_ui122, import_react_table15, import_react119, import_react_i18next119, import_jsx_runtime190, EditCategoryProductsSchema, PAGE_SIZE8, PREFIX, EditCategoryProductsForm, columnHelper14, useColumns7;
var init_edit_category_products_form = __esm({
  "src/routes/categories/category-products/components/edit-category-products-form/edit-category-products-form.tsx"() {
    "use strict";
    import_zod24 = require("@hookform/resolvers/zod");
    import_react_hook_form31 = require("react-hook-form");
    import_zod25 = require("zod");
    import_ui122 = require("@medusajs/ui");
    import_react_table15 = require("@tanstack/react-table");
    import_react119 = require("react");
    import_react_i18next119 = require("react-i18next");
    init_modals();
    init_data_table2();
    init_keybound_form2();
    init_categories();
    init_products();
    init_use_product_table_columns();
    init_use_product_table_filters();
    init_use_product_table_query();
    init_use_data_table();
    import_jsx_runtime190 = require("react/jsx-runtime");
    EditCategoryProductsSchema = import_zod25.z.object({
      product_ids: import_zod25.z.array(import_zod25.z.string())
    });
    PAGE_SIZE8 = 50;
    PREFIX = "p";
    EditCategoryProductsForm = ({
      categoryId,
      products = []
    }) => {
      const { t: t4 } = (0, import_react_i18next119.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const [selection, setSelection] = (0, import_react119.useState)(
        products.reduce((acc, p) => {
          acc[p.id] = true;
          return acc;
        }, {})
      );
      const form = (0, import_react_hook_form31.useForm)({
        defaultValues: {
          product_ids: []
        },
        resolver: (0, import_zod24.zodResolver)(EditCategoryProductsSchema)
      });
      const updater = (newSelection) => {
        const value = typeof newSelection === "function" ? newSelection(selection) : newSelection;
        form.setValue("product_ids", Object.keys(value), {
          shouldDirty: true,
          shouldTouch: true
        });
        setSelection(value);
      };
      const { searchParams, raw } = useProductTableQuery({
        pageSize: PAGE_SIZE8,
        prefix: PREFIX
      });
      const {
        products: data,
        count: count3,
        isPending,
        isError,
        error
      } = useProducts({
        ...searchParams
      });
      const columns = useColumns7();
      const filters = useProductTableFilters(["categories"]);
      const { table } = useDataTable({
        data,
        columns,
        getRowId: (original) => original.id,
        count: count3,
        pageSize: PAGE_SIZE8,
        prefix: PREFIX,
        enableRowSelection: (row) => {
          return !products.some((p) => p.id === row.original.id);
        },
        enablePagination: true,
        rowSelection: {
          state: selection,
          updater
        }
      });
      const { mutateAsync, isPending: isMutating } = useUpdateProductCategoryProducts(categoryId);
      const handleSubmit = form.handleSubmit(async (data2) => {
        await mutateAsync(
          {
            add: data2.product_ids
          },
          {
            onSuccess: () => {
              import_ui122.toast.success(
                t4("categories.products.add.successToast", {
                  count: data2.product_ids.length - products.length
                })
              );
              handleSuccess();
            },
            onError: (error2) => {
              import_ui122.toast.error(error2.message);
            }
          }
        );
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime190.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime190.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex h-full flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime190.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime190.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              form.formState.errors.product_ids && /* @__PURE__ */ (0, import_jsx_runtime190.jsx)(import_ui122.Hint, { variant: "error", children: form.formState.errors.product_ids.message }),
              /* @__PURE__ */ (0, import_jsx_runtime190.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime190.jsx)(import_ui122.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime190.jsx)(import_ui122.Button, { size: "small", type: "submit", isLoading: isMutating, children: t4("actions.save") })
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime190.jsx)(RouteFocusModal.Body, { className: "size-full overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime190.jsx)(
              DataTable,
              {
                table,
                columns,
                pageSize: PAGE_SIZE8,
                count: count3,
                queryObject: raw,
                filters,
                orderBy: [
                  { key: "title", label: t4("fields.title") },
                  { key: "created_at", label: t4("fields.createdAt") },
                  { key: "updated_at", label: t4("fields.updatedAt") }
                ],
                prefix: PREFIX,
                isLoading: isPending,
                layout: "fill",
                pagination: true,
                search: "autofocus"
              }
            ) })
          ]
        }
      ) });
    };
    columnHelper14 = (0, import_react_table15.createColumnHelper)();
    useColumns7 = () => {
      const { t: t4 } = (0, import_react_i18next119.useTranslation)();
      const base = useProductTableColumns();
      return (0, import_react119.useMemo)(
        () => [
          columnHelper14.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime190.jsx)(
                import_ui122.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              const isPreSelected = !row.getCanSelect();
              const isSelected2 = row.getIsSelected() || isPreSelected;
              const Component5 = /* @__PURE__ */ (0, import_jsx_runtime190.jsx)(
                import_ui122.Checkbox,
                {
                  checked: isSelected2,
                  disabled: isPreSelected,
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
              if (isPreSelected) {
                return /* @__PURE__ */ (0, import_jsx_runtime190.jsx)(
                  import_ui122.Tooltip,
                  {
                    content: t4("categories.products.add.disabledTooltip"),
                    side: "right",
                    children: Component5
                  }
                );
              }
              return Component5;
            }
          }),
          ...base
        ],
        [t4, base]
      );
    };
  }
});

// src/routes/categories/category-products/components/edit-category-products-form/index.ts
var init_edit_category_products_form2 = __esm({
  "src/routes/categories/category-products/components/edit-category-products-form/index.ts"() {
    "use strict";
    init_edit_category_products_form();
  }
});

// src/routes/categories/category-products/category-products.tsx
var import_react_router_dom57, import_jsx_runtime191, CategoryProducts;
var init_category_products = __esm({
  "src/routes/categories/category-products/category-products.tsx"() {
    "use strict";
    import_react_router_dom57 = require("react-router-dom");
    init_modals();
    init_categories();
    init_edit_category_products_form2();
    import_jsx_runtime191 = require("react/jsx-runtime");
    CategoryProducts = () => {
      const { id: id2 } = (0, import_react_router_dom57.useParams)();
      const { product_category, isPending, isFetching, isError, error } = useProductCategory(id2, {
        fields: "products.id"
      });
      const ready = !isPending && !isFetching && !!product_category;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime191.jsx)(RouteFocusModal, { children: ready && /* @__PURE__ */ (0, import_jsx_runtime191.jsx)(
        EditCategoryProductsForm,
        {
          categoryId: product_category.id,
          products: product_category.products
        }
      ) });
    };
  }
});

// src/routes/categories/category-products/index.ts
var category_products_exports = {};
__export(category_products_exports, {
  Component: () => CategoryProducts
});
var init_category_products2 = __esm({
  "src/routes/categories/category-products/index.ts"() {
    "use strict";
    init_category_products();
  }
});

// src/components/forms/metadata-form/index.ts
var init_metadata_form2 = __esm({
  "src/components/forms/metadata-form/index.ts"() {
    "use strict";
    init_metadata_form();
  }
});

// src/routes/categories/categories-metadata/categories-metadata.tsx
var import_react_router_dom58, import_jsx_runtime192, CategoriesMetadata;
var init_categories_metadata = __esm({
  "src/routes/categories/categories-metadata/categories-metadata.tsx"() {
    "use strict";
    import_react_router_dom58 = require("react-router-dom");
    init_api();
    init_metadata_form2();
    init_modals();
    import_jsx_runtime192 = require("react/jsx-runtime");
    CategoriesMetadata = () => {
      const { id: id2 } = (0, import_react_router_dom58.useParams)();
      const { product_category, isPending, isError, error } = useProductCategory(id2);
      const { mutateAsync, isPending: isMutating } = useUpdateProductCategory(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime192.jsx)(RouteDrawer, { children: /* @__PURE__ */ (0, import_jsx_runtime192.jsx)(
        MetadataForm,
        {
          isPending,
          isMutating,
          hook: mutateAsync,
          metadata: product_category?.metadata
        }
      ) });
    };
  }
});

// src/routes/categories/categories-metadata/index.ts
var categories_metadata_exports = {};
__export(categories_metadata_exports, {
  Component: () => CategoriesMetadata
});
var init_categories_metadata2 = __esm({
  "src/routes/categories/categories-metadata/index.ts"() {
    "use strict";
    init_categories_metadata();
  }
});

// src/components/table/table-cells/common/date-cell/date-cell.tsx
var import_ui123, import_format, import_react_i18next120, import_jsx_runtime193, DateCell, DateHeader;
var init_date_cell = __esm({
  "src/components/table/table-cells/common/date-cell/date-cell.tsx"() {
    "use strict";
    import_ui123 = require("@medusajs/ui");
    import_format = require("date-fns/format");
    import_react_i18next120 = require("react-i18next");
    init_placeholder_cell2();
    import_jsx_runtime193 = require("react/jsx-runtime");
    DateCell = ({ date: date3 }) => {
      if (!date3) {
        return /* @__PURE__ */ (0, import_jsx_runtime193.jsx)(PlaceholderCell, {});
      }
      const value = new Date(date3);
      value.setMinutes(value.getMinutes() - value.getTimezoneOffset());
      const hour12 = Intl.DateTimeFormat().resolvedOptions().hour12;
      const timestampFormat = hour12 ? "dd MMM yyyy hh:MM a" : "dd MMM yyyy HH:MM";
      return /* @__PURE__ */ (0, import_jsx_runtime193.jsx)("div", { className: "flex h-full w-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime193.jsx)(
        import_ui123.Tooltip,
        {
          className: "z-10",
          content: /* @__PURE__ */ (0, import_jsx_runtime193.jsx)("span", { className: "text-pretty", children: `${(0, import_format.format)(
            value,
            timestampFormat
          )}` }),
          children: /* @__PURE__ */ (0, import_jsx_runtime193.jsx)("span", { className: "truncate", children: (0, import_format.format)(value, "dd MMM yyyy") })
        }
      ) });
    };
    DateHeader = () => {
      const { t: t4 } = (0, import_react_i18next120.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime193.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime193.jsx)("span", { className: "truncate", children: t4("fields.date") }) });
    };
  }
});

// src/components/table/table-cells/common/date-cell/index.ts
var init_date_cell2 = __esm({
  "src/components/table/table-cells/common/date-cell/index.ts"() {
    "use strict";
    init_date_cell();
  }
});

// src/components/table/table-cells/order/country-cell/country-cell.tsx
var import_ui124, import_react_country_flag, import_jsx_runtime194, CountryCell;
var init_country_cell = __esm({
  "src/components/table/table-cells/order/country-cell/country-cell.tsx"() {
    "use strict";
    import_ui124 = require("@medusajs/ui");
    import_react_country_flag = __toESM(require("react-country-flag"));
    init_placeholder_cell2();
    import_jsx_runtime194 = require("react/jsx-runtime");
    CountryCell = ({
      country
    }) => {
      if (!country) {
        return /* @__PURE__ */ (0, import_jsx_runtime194.jsx)(PlaceholderCell, {});
      }
      return /* @__PURE__ */ (0, import_jsx_runtime194.jsx)("div", { className: "flex size-5 items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime194.jsx)(import_ui124.Tooltip, { content: country.display_name, children: /* @__PURE__ */ (0, import_jsx_runtime194.jsx)("div", { className: "flex size-4 items-center justify-center overflow-hidden rounded-sm", children: /* @__PURE__ */ (0, import_jsx_runtime194.jsx)(
        import_react_country_flag.default,
        {
          countryCode: country.iso_2.toUpperCase(),
          svg: true,
          style: {
            width: "16px",
            height: "16px"
          },
          "aria-label": country.display_name
        }
      ) }) }) });
    };
  }
});

// src/components/table/table-cells/order/country-cell/index.ts
var init_country_cell2 = __esm({
  "src/components/table/table-cells/order/country-cell/index.ts"() {
    "use strict";
    init_country_cell();
  }
});

// src/components/table/table-cells/order/customer-cell/customer-cell.tsx
var import_react_i18next121, import_jsx_runtime195, CustomerCell, CustomerHeader;
var init_customer_cell = __esm({
  "src/components/table/table-cells/order/customer-cell/customer-cell.tsx"() {
    "use strict";
    import_react_i18next121 = require("react-i18next");
    import_jsx_runtime195 = require("react/jsx-runtime");
    CustomerCell = ({
      customer
    }) => {
      if (!customer) {
        return /* @__PURE__ */ (0, import_jsx_runtime195.jsx)("span", { className: "text-ui-fg-muted", children: "-" });
      }
      const { first_name, last_name, email } = customer;
      const name = [first_name, last_name].filter(Boolean).join(" ");
      return /* @__PURE__ */ (0, import_jsx_runtime195.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime195.jsx)("span", { className: "truncate", children: name || email }) });
    };
    CustomerHeader = () => {
      const { t: t4 } = (0, import_react_i18next121.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime195.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime195.jsx)("span", { className: "truncate", children: t4("fields.customer") }) });
    };
  }
});

// src/components/table/table-cells/order/customer-cell/index.ts
var init_customer_cell2 = __esm({
  "src/components/table/table-cells/order/customer-cell/index.ts"() {
    "use strict";
    init_customer_cell();
  }
});

// src/components/table/table-cells/order/display-id-cell/display-id-cell.tsx
var import_react_i18next122, import_jsx_runtime196, DisplayIdCell, DisplayIdHeader;
var init_display_id_cell = __esm({
  "src/components/table/table-cells/order/display-id-cell/display-id-cell.tsx"() {
    "use strict";
    import_react_i18next122 = require("react-i18next");
    init_placeholder_cell2();
    import_jsx_runtime196 = require("react/jsx-runtime");
    DisplayIdCell = ({ displayId }) => {
      if (!displayId) {
        return /* @__PURE__ */ (0, import_jsx_runtime196.jsx)(PlaceholderCell, {});
      }
      return /* @__PURE__ */ (0, import_jsx_runtime196.jsx)("div", { className: "text-ui-fg-subtle txt-compact-small flex h-full w-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime196.jsxs)("span", { className: "truncate", children: [
        "#",
        displayId
      ] }) });
    };
    DisplayIdHeader = () => {
      const { t: t4 } = (0, import_react_i18next122.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime196.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime196.jsx)("span", { className: "truncate", children: t4("fields.order") }) });
    };
  }
});

// src/components/table/table-cells/order/display-id-cell/index.ts
var init_display_id_cell2 = __esm({
  "src/components/table/table-cells/order/display-id-cell/index.ts"() {
    "use strict";
    init_display_id_cell();
  }
});

// src/lib/order-helpers.ts
var getOrderPaymentStatus, getOrderFulfillmentStatus;
var init_order_helpers = __esm({
  "src/lib/order-helpers.ts"() {
    "use strict";
    getOrderPaymentStatus = (t4, status) => {
      const [label, color] = {
        not_paid: [t4("orders.payment.status.notPaid"), "red"],
        authorized: [t4("orders.payment.status.authorized"), "orange"],
        partially_authorized: [
          t4("orders.payment.status.partiallyAuthorized"),
          "red"
        ],
        awaiting: [t4("orders.payment.status.awaiting"), "orange"],
        captured: [t4("orders.payment.status.captured"), "green"],
        refunded: [t4("orders.payment.status.refunded"), "green"],
        partially_refunded: [
          t4("orders.payment.status.partiallyRefunded"),
          "orange"
        ],
        partially_captured: [
          t4("orders.payment.status.partiallyCaptured"),
          "orange"
        ],
        canceled: [t4("orders.payment.status.canceled"), "red"],
        requires_action: [t4("orders.payment.status.requiresAction"), "orange"]
      }[status];
      return { label, color };
    };
    getOrderFulfillmentStatus = (t4, status) => {
      const [label, color] = {
        not_fulfilled: [t4("orders.fulfillment.status.notFulfilled"), "red"],
        partially_fulfilled: [
          t4("orders.fulfillment.status.partiallyFulfilled"),
          "orange"
        ],
        fulfilled: [t4("orders.fulfillment.status.fulfilled"), "green"],
        partially_shipped: [
          t4("orders.fulfillment.status.partiallyShipped"),
          "orange"
        ],
        shipped: [t4("orders.fulfillment.status.shipped"), "green"],
        delivered: [t4("orders.fulfillment.status.delivered"), "green"],
        partially_delivered: [
          t4("orders.fulfillment.status.partiallyDelivered"),
          "orange"
        ],
        partially_returned: [
          t4("orders.fulfillment.status.partiallyReturned"),
          "orange"
        ],
        returned: [t4("orders.fulfillment.status.returned"), "green"],
        canceled: [t4("orders.fulfillment.status.canceled"), "red"],
        requires_action: [t4("orders.fulfillment.status.requiresAction"), "orange"]
      }[status];
      return { label, color };
    };
  }
});

// src/components/table/table-cells/order/fulfillment-status-cell/fulfillment-status-cell.tsx
var import_react_i18next123, import_jsx_runtime197, FulfillmentStatusCell, FulfillmentStatusHeader;
var init_fulfillment_status_cell = __esm({
  "src/components/table/table-cells/order/fulfillment-status-cell/fulfillment-status-cell.tsx"() {
    "use strict";
    import_react_i18next123 = require("react-i18next");
    init_order_helpers();
    init_status_cell2();
    import_jsx_runtime197 = require("react/jsx-runtime");
    FulfillmentStatusCell = ({
      status
    }) => {
      const { t: t4 } = (0, import_react_i18next123.useTranslation)();
      if (!status) {
        return "-";
      }
      const { label, color } = getOrderFulfillmentStatus(t4, status);
      return /* @__PURE__ */ (0, import_jsx_runtime197.jsx)(StatusCell, { color, children: label });
    };
    FulfillmentStatusHeader = () => {
      const { t: t4 } = (0, import_react_i18next123.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime197.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime197.jsx)("span", { className: "truncate", children: t4("fields.fulfillment") }) });
    };
  }
});

// src/components/table/table-cells/order/fulfillment-status-cell/index.ts
var init_fulfillment_status_cell2 = __esm({
  "src/components/table/table-cells/order/fulfillment-status-cell/index.ts"() {
    "use strict";
    init_fulfillment_status_cell();
  }
});

// src/components/table/table-cells/order/payment-status-cell/payment-status-cell.tsx
var import_react_i18next124, import_jsx_runtime198, PaymentStatusCell, PaymentStatusHeader;
var init_payment_status_cell = __esm({
  "src/components/table/table-cells/order/payment-status-cell/payment-status-cell.tsx"() {
    "use strict";
    import_react_i18next124 = require("react-i18next");
    init_order_helpers();
    init_status_cell2();
    import_jsx_runtime198 = require("react/jsx-runtime");
    PaymentStatusCell = ({ status }) => {
      const { t: t4 } = (0, import_react_i18next124.useTranslation)();
      const { label, color } = getOrderPaymentStatus(t4, status);
      return /* @__PURE__ */ (0, import_jsx_runtime198.jsx)(StatusCell, { color, children: label });
    };
    PaymentStatusHeader = () => {
      const { t: t4 } = (0, import_react_i18next124.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime198.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime198.jsx)("span", { className: "truncate", children: t4("fields.payment") }) });
    };
  }
});

// src/components/table/table-cells/order/payment-status-cell/index.ts
var init_payment_status_cell2 = __esm({
  "src/components/table/table-cells/order/payment-status-cell/index.ts"() {
    "use strict";
    init_payment_status_cell();
  }
});

// src/components/table/table-cells/order/sales-channel-cell/sales-channel-cell.tsx
var import_react_i18next125, import_jsx_runtime199, SalesChannelCell, SalesChannelHeader2;
var init_sales_channel_cell = __esm({
  "src/components/table/table-cells/order/sales-channel-cell/sales-channel-cell.tsx"() {
    "use strict";
    import_react_i18next125 = require("react-i18next");
    import_jsx_runtime199 = require("react/jsx-runtime");
    SalesChannelCell = ({
      channel
    }) => {
      if (!channel) {
        return /* @__PURE__ */ (0, import_jsx_runtime199.jsx)("span", { className: "text-ui-fg-muted", children: "-" });
      }
      const { name } = channel;
      return /* @__PURE__ */ (0, import_jsx_runtime199.jsx)("div", { className: "flex h-full w-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime199.jsx)("span", { className: "truncate", children: name }) });
    };
    SalesChannelHeader2 = () => {
      const { t: t4 } = (0, import_react_i18next125.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime199.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime199.jsx)("span", { className: "truncate", children: t4("fields.salesChannel") }) });
    };
  }
});

// src/components/table/table-cells/order/sales-channel-cell/index.ts
var init_sales_channel_cell2 = __esm({
  "src/components/table/table-cells/order/sales-channel-cell/index.ts"() {
    "use strict";
    init_sales_channel_cell();
  }
});

// src/components/table/table-cells/common/money-amount-cell/money-amount-cell.tsx
var import_ui125, import_jsx_runtime200, MoneyAmountCell;
var init_money_amount_cell = __esm({
  "src/components/table/table-cells/common/money-amount-cell/money-amount-cell.tsx"() {
    "use strict";
    import_ui125 = require("@medusajs/ui");
    init_money_amount_helpers();
    init_placeholder_cell2();
    import_jsx_runtime200 = require("react/jsx-runtime");
    MoneyAmountCell = ({
      currencyCode,
      amount,
      align = "left",
      className
    }) => {
      if (typeof amount === "undefined" || amount === null) {
        return /* @__PURE__ */ (0, import_jsx_runtime200.jsx)(PlaceholderCell, {});
      }
      const formatted = getStylizedAmount(amount, currencyCode);
      return /* @__PURE__ */ (0, import_jsx_runtime200.jsx)(
        "div",
        {
          className: (0, import_ui125.clx)(
            "flex h-full w-full items-center overflow-hidden",
            {
              "justify-start text-left": align === "left",
              "justify-end text-right": align === "right"
            },
            className
          ),
          children: /* @__PURE__ */ (0, import_jsx_runtime200.jsx)("span", { className: "truncate", children: formatted })
        }
      );
    };
  }
});

// src/components/table/table-cells/common/money-amount-cell/index.ts
var init_money_amount_cell2 = __esm({
  "src/components/table/table-cells/common/money-amount-cell/index.ts"() {
    "use strict";
    init_money_amount_cell();
  }
});

// src/components/table/table-cells/order/total-cell/total-cell.tsx
var import_react_i18next126, import_jsx_runtime201, TotalCell, TotalHeader;
var init_total_cell = __esm({
  "src/components/table/table-cells/order/total-cell/total-cell.tsx"() {
    "use strict";
    import_react_i18next126 = require("react-i18next");
    init_money_amount_cell2();
    init_placeholder_cell2();
    import_jsx_runtime201 = require("react/jsx-runtime");
    TotalCell = ({ currencyCode, total }) => {
      if (!total) {
        return /* @__PURE__ */ (0, import_jsx_runtime201.jsx)(PlaceholderCell, {});
      }
      return /* @__PURE__ */ (0, import_jsx_runtime201.jsx)(MoneyAmountCell, { currencyCode, amount: total, align: "right" });
    };
    TotalHeader = () => {
      const { t: t4 } = (0, import_react_i18next126.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime201.jsx)("div", { className: "flex h-full w-full items-center justify-end", children: /* @__PURE__ */ (0, import_jsx_runtime201.jsx)("span", { className: "truncate", children: t4("fields.total") }) });
    };
  }
});

// src/components/table/table-cells/order/total-cell/index.ts
var init_total_cell2 = __esm({
  "src/components/table/table-cells/order/total-cell/index.ts"() {
    "use strict";
    init_total_cell();
  }
});

// src/hooks/table/columns/use-order-table-columns.tsx
var import_react_table16, import_react120, import_jsx_runtime202, columnHelper15, useOrderTableColumns;
var init_use_order_table_columns = __esm({
  "src/hooks/table/columns/use-order-table-columns.tsx"() {
    "use strict";
    import_react_table16 = require("@tanstack/react-table");
    import_react120 = require("react");
    init_date_cell2();
    init_country_cell2();
    init_customer_cell2();
    init_display_id_cell2();
    init_fulfillment_status_cell2();
    init_payment_status_cell2();
    init_sales_channel_cell2();
    init_total_cell2();
    import_jsx_runtime202 = require("react/jsx-runtime");
    columnHelper15 = (0, import_react_table16.createColumnHelper)();
    useOrderTableColumns = (props) => {
      const { exclude = [] } = props ?? {};
      const columns = (0, import_react120.useMemo)(
        () => [
          columnHelper15.accessor("display_id", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime202.jsx)(DisplayIdHeader, {}),
            cell: ({ getValue: getValue2 }) => {
              const id2 = getValue2();
              return /* @__PURE__ */ (0, import_jsx_runtime202.jsx)(DisplayIdCell, { displayId: id2 });
            }
          }),
          columnHelper15.accessor("created_at", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime202.jsx)(DateHeader, {}),
            cell: ({ getValue: getValue2 }) => {
              const date3 = new Date(getValue2());
              return /* @__PURE__ */ (0, import_jsx_runtime202.jsx)(DateCell, { date: date3 });
            }
          }),
          columnHelper15.accessor("customer", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime202.jsx)(CustomerHeader, {}),
            cell: ({ getValue: getValue2 }) => {
              const customer = getValue2();
              return /* @__PURE__ */ (0, import_jsx_runtime202.jsx)(CustomerCell, { customer });
            }
          }),
          columnHelper15.accessor("sales_channel", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime202.jsx)(SalesChannelHeader2, {}),
            cell: ({ getValue: getValue2 }) => {
              const channel = getValue2();
              return /* @__PURE__ */ (0, import_jsx_runtime202.jsx)(SalesChannelCell, { channel });
            }
          }),
          columnHelper15.accessor("payment_status", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime202.jsx)(PaymentStatusHeader, {}),
            cell: ({ getValue: getValue2 }) => {
              const status = getValue2();
              return /* @__PURE__ */ (0, import_jsx_runtime202.jsx)(PaymentStatusCell, { status });
            }
          }),
          columnHelper15.accessor("fulfillment_status", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime202.jsx)(FulfillmentStatusHeader, {}),
            cell: ({ getValue: getValue2 }) => {
              const status = getValue2();
              return /* @__PURE__ */ (0, import_jsx_runtime202.jsx)(FulfillmentStatusCell, { status });
            }
          }),
          columnHelper15.accessor("total", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime202.jsx)(TotalHeader, {}),
            cell: ({ getValue: getValue2, row }) => {
              const total = getValue2();
              const currencyCode = row.original.currency_code;
              return /* @__PURE__ */ (0, import_jsx_runtime202.jsx)(TotalCell, { currencyCode, total });
            }
          }),
          columnHelper15.display({
            id: "actions",
            cell: ({ row }) => {
              const country = row.original.shipping_address?.country;
              return /* @__PURE__ */ (0, import_jsx_runtime202.jsx)(CountryCell, { country });
            }
          })
        ],
        []
      );
      const isAccessorColumnDef = (c) => {
        return c.accessorKey !== void 0;
      };
      const isDisplayColumnDef = (c) => {
        return c.id !== void 0;
      };
      const shouldExclude = (c) => {
        if (isAccessorColumnDef(c)) {
          return exclude.includes(c.accessorKey);
        } else if (isDisplayColumnDef(c)) {
          return exclude.includes(c.id);
        }
        return false;
      };
      return columns.filter(
        (c) => !shouldExclude(c)
      );
    };
  }
});

// src/routes/orders/order-list/const.ts
var DEFAULT_PROPERTIES, DEFAULT_RELATIONS, DEFAULT_FIELDS;
var init_const = __esm({
  "src/routes/orders/order-list/const.ts"() {
    "use strict";
    DEFAULT_PROPERTIES = [
      "id",
      "status",
      "created_at",
      "email",
      "display_id",
      "payment_status",
      "fulfillment_status",
      "total",
      "currency_code"
    ];
    DEFAULT_RELATIONS = ["*customer", "*sales_channel"];
    DEFAULT_FIELDS = `${DEFAULT_PROPERTIES.join(
      ","
    )},${DEFAULT_RELATIONS.join(",")}`;
  }
});

// src/routes/orders/order-list/components/order-list-table/order-list-table.tsx
var import_ui126, import_react_query49, import_react_i18next127, import_jsx_runtime203, PAGE_SIZE9, OrderListTable;
var init_order_list_table = __esm({
  "src/routes/orders/order-list/components/order-list-table/order-list-table.tsx"() {
    "use strict";
    import_ui126 = require("@medusajs/ui");
    import_react_query49 = require("@tanstack/react-query");
    import_react_i18next127 = require("react-i18next");
    init_data_table();
    init_orders();
    init_use_order_table_columns();
    init_use_order_table_filters();
    init_use_order_table_query();
    init_use_data_table();
    init_const();
    import_jsx_runtime203 = require("react/jsx-runtime");
    PAGE_SIZE9 = 20;
    OrderListTable = () => {
      const { t: t4 } = (0, import_react_i18next127.useTranslation)();
      const { searchParams, raw } = useOrderTableQuery({
        pageSize: PAGE_SIZE9
      });
      const { orders, count: count3, isError, error, isLoading } = useOrders(
        {
          fields: DEFAULT_FIELDS,
          ...searchParams
        },
        {
          placeholderData: import_react_query49.keepPreviousData
        }
      );
      const filters = useOrderTableFilters();
      const columns = useOrderTableColumns({});
      const { table } = useDataTable({
        data: orders ?? [],
        columns,
        enablePagination: true,
        count: count3,
        pageSize: PAGE_SIZE9
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime203.jsxs)(import_ui126.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime203.jsx)("div", { className: "flex items-center justify-between px-6 py-4", children: /* @__PURE__ */ (0, import_jsx_runtime203.jsx)(import_ui126.Heading, { children: t4("orders.domain") }) }),
        /* @__PURE__ */ (0, import_jsx_runtime203.jsx)(
          DataTable,
          {
            columns,
            table,
            pagination: true,
            navigateTo: (row) => `/orders/${row.original.id}`,
            filters,
            count: count3,
            search: true,
            isLoading,
            pageSize: PAGE_SIZE9,
            orderBy: [
              { key: "display_id", label: t4("orders.fields.displayId") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            queryObject: raw,
            noRecords: {
              message: t4("orders.list.noRecordsMessage")
            }
          }
        )
      ] });
    };
  }
});

// src/routes/orders/order-list/components/order-list-table/index.ts
var init_order_list_table2 = __esm({
  "src/routes/orders/order-list/components/order-list-table/index.ts"() {
    "use strict";
    init_order_list_table();
  }
});

// src/routes/orders/order-list/order-list.tsx
var import_jsx_runtime204, OrderList;
var init_order_list = __esm({
  "src/routes/orders/order-list/order-list.tsx"() {
    "use strict";
    init_order_list_table2();
    init_pages();
    init_extensions();
    import_jsx_runtime204 = require("react/jsx-runtime");
    OrderList = () => {
      const { getWidgets } = useDashboardExtension();
      return /* @__PURE__ */ (0, import_jsx_runtime204.jsx)(
        SingleColumnPage,
        {
          widgets: {
            after: getWidgets("order.list.after"),
            before: getWidgets("order.list.before")
          },
          hasOutlet: false,
          children: /* @__PURE__ */ (0, import_jsx_runtime204.jsx)(OrderListTable, {})
        }
      );
    };
  }
});

// src/routes/orders/order-list/index.ts
var order_list_exports = {};
__export(order_list_exports, {
  Component: () => OrderList
});
var init_order_list2 = __esm({
  "src/routes/orders/order-list/index.ts"() {
    "use strict";
    init_order_list();
  }
});

// src/routes/orders/order-detail/constants.ts
var DEFAULT_PROPERTIES2, DEFAULT_RELATIONS2, DEFAULT_FIELDS2;
var init_constants7 = __esm({
  "src/routes/orders/order-detail/constants.ts"() {
    "use strict";
    DEFAULT_PROPERTIES2 = [
      "id",
      "status",
      "created_at",
      "canceled_at",
      "email",
      "display_id",
      "currency_code",
      // --- TOTALS ---
      "total",
      "item_total",
      "shipping_subtotal",
      "subtotal",
      "discount_total",
      "discount_subtotal",
      "shipping_total",
      "shipping_tax_total",
      "tax_total",
      "refundable_total",
      "order_change"
    ];
    DEFAULT_RELATIONS2 = [
      "*customer",
      "*items",
      // -> we get LineItem here with added `quantity` and `detail` which is actually an OrderItem (which is a parent object to LineItem in the DB)
      "*items.variant",
      "*items.variant.product",
      "*items.variant.options",
      "+items.variant.manage_inventory",
      "*items.variant.inventory_items.inventory",
      "+items.variant.inventory_items.required_quantity",
      "+summary",
      "*shipping_address",
      "*billing_address",
      "*sales_channel",
      "*promotion",
      "*shipping_methods",
      "*fulfillments",
      "*fulfillments.items",
      "*fulfillments.labels",
      "*fulfillments.labels",
      "*payment_collections",
      "*payment_collections.payments",
      "*payment_collections.payments.refunds",
      "*payment_collections.payments.refunds.refund_reason",
      "region.automatic_taxes"
    ];
    DEFAULT_FIELDS2 = `${DEFAULT_PROPERTIES2.join(
      ","
    )},${DEFAULT_RELATIONS2.join(",")}`;
  }
});

// src/routes/orders/order-detail/loader.ts
var orderDetailQuery, orderLoader;
var init_loader7 = __esm({
  "src/routes/orders/order-detail/loader.ts"() {
    "use strict";
    init_orders();
    init_client2();
    init_query_client();
    init_constants7();
    orderDetailQuery = (id2) => ({
      queryKey: ordersQueryKeys.detail(id2),
      queryFn: async () => sdk.admin.order.retrieve(id2, {
        fields: DEFAULT_FIELDS2
      })
    });
    orderLoader = async ({ params: params2 }) => {
      const id2 = params2.id;
      const query = orderDetailQuery(id2);
      return queryClient.getQueryData(query.queryKey) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/hooks/api/returns.tsx
var import_react_query50, RETURNS_QUERY_KEY, returnsQueryKeys, useReturn, useReturns, useInitiateReturn, useCancelReturn, useConfirmReturnRequest, useCancelReturnRequest, useAddReturnItem, useUpdateReturnItem, useRemoveReturnItem, useUpdateReturn, useAddReturnShipping, useUpdateReturnShipping, useDeleteReturnShipping, useInitiateReceiveReturn, useAddReceiveItems, useUpdateReceiveItem, useRemoveReceiveItems, useAddDismissItems, useUpdateDismissItem, useRemoveDismissItem, useConfirmReturnReceive, useCancelReceiveReturn;
var init_returns = __esm({
  "src/hooks/api/returns.tsx"() {
    "use strict";
    import_react_query50 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_orders();
    RETURNS_QUERY_KEY = "returns";
    returnsQueryKeys = queryKeysFactory(RETURNS_QUERY_KEY);
    useReturn = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query50.useQuery)({
        queryFn: async () => sdk.admin.return.retrieve(id2, query),
        queryKey: returnsQueryKeys.detail(id2, query),
        ...options
      });
      return { ...data, ...rest };
    };
    useReturns = (query, options) => {
      const { data, ...rest } = (0, import_react_query50.useQuery)({
        queryFn: async () => sdk.admin.return.list(query),
        queryKey: returnsQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useInitiateReturn = (orderId, options) => {
      return (0, import_react_query50.useMutation)({
        mutationFn: (payload) => sdk.admin.return.initiateRequest(payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useCancelReturn = (id2, orderId, options) => {
      return (0, import_react_query50.useMutation)({
        mutationFn: () => sdk.admin.return.cancel(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId),
            refetchType: "all"
            // We want preview to be updated in the cache immediately
          });
          queryClient.invalidateQueries({
            queryKey: returnsQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: returnsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useConfirmReturnRequest = (id2, orderId, options) => {
      return (0, import_react_query50.useMutation)({
        mutationFn: (payload) => sdk.admin.return.confirmRequest(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          queryClient.invalidateQueries({
            queryKey: returnsQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: returnsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useCancelReturnRequest = (id2, orderId, options) => {
      return (0, import_react_query50.useMutation)({
        mutationFn: () => sdk.admin.return.cancelRequest(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId),
            refetchType: "all"
            // We want preview to be updated in the cache immediately
          });
          queryClient.invalidateQueries({
            queryKey: returnsQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: returnsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useAddReturnItem = (id2, orderId, options) => {
      return (0, import_react_query50.useMutation)({
        mutationFn: (payload) => sdk.admin.return.addReturnItem(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateReturnItem = (id2, orderId, options) => {
      return (0, import_react_query50.useMutation)({
        mutationFn: ({
          actionId,
          ...payload
        }) => {
          return sdk.admin.return.updateReturnItem(id2, actionId, payload);
        },
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useRemoveReturnItem = (id2, orderId, options) => {
      return (0, import_react_query50.useMutation)({
        mutationFn: (actionId) => sdk.admin.return.removeReturnItem(id2, actionId),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          queryClient.invalidateQueries({
            queryKey: returnsQueryKeys.details()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateReturn = (id2, orderId, options) => {
      return (0, import_react_query50.useMutation)({
        mutationFn: (payload) => {
          return sdk.admin.return.updateRequest(id2, payload);
        },
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useAddReturnShipping = (id2, orderId, options) => {
      return (0, import_react_query50.useMutation)({
        mutationFn: (payload) => sdk.admin.return.addReturnShipping(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateReturnShipping = (id2, orderId, options) => {
      return (0, import_react_query50.useMutation)({
        mutationFn: ({
          actionId,
          ...payload
        }) => sdk.admin.return.updateReturnShipping(id2, actionId, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteReturnShipping = (id2, orderId, options) => {
      return (0, import_react_query50.useMutation)({
        mutationFn: (actionId) => sdk.admin.return.deleteReturnShipping(id2, actionId),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          queryClient.invalidateQueries({
            queryKey: returnsQueryKeys.details()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useInitiateReceiveReturn = (id2, orderId, options) => {
      return (0, import_react_query50.useMutation)({
        mutationFn: (payload) => sdk.admin.return.initiateReceive(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useAddReceiveItems = (id2, orderId, options) => {
      return (0, import_react_query50.useMutation)({
        mutationFn: (payload) => sdk.admin.return.receiveItems(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateReceiveItem = (id2, orderId, options) => {
      return (0, import_react_query50.useMutation)({
        mutationFn: ({
          actionId,
          ...payload
        }) => {
          return sdk.admin.return.updateReceiveItem(id2, actionId, payload);
        },
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useRemoveReceiveItems = (id2, orderId, options) => {
      return (0, import_react_query50.useMutation)({
        mutationFn: (actionId) => {
          return sdk.admin.return.removeReceiveItem(id2, actionId);
        },
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useAddDismissItems = (id2, orderId, options) => {
      return (0, import_react_query50.useMutation)({
        mutationFn: (payload) => sdk.admin.return.dismissItems(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateDismissItem = (id2, orderId, options) => {
      return (0, import_react_query50.useMutation)({
        mutationFn: ({
          actionId,
          ...payload
        }) => {
          return sdk.admin.return.updateDismissItem(id2, actionId, payload);
        },
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useRemoveDismissItem = (id2, orderId, options) => {
      return (0, import_react_query50.useMutation)({
        mutationFn: (actionId) => {
          return sdk.admin.return.removeDismissItem(id2, actionId);
        },
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useConfirmReturnReceive = (id2, orderId, options) => {
      return (0, import_react_query50.useMutation)({
        mutationFn: (payload) => sdk.admin.return.confirmReceive(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          queryClient.invalidateQueries({
            queryKey: returnsQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: returnsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useCancelReceiveReturn = (id2, orderId, options) => {
      return (0, import_react_query50.useMutation)({
        mutationFn: () => sdk.admin.return.cancelReceive(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId),
            refetchType: "all"
            // We want preview to be updated in the cache immediately
          });
          queryClient.invalidateQueries({
            queryKey: returnsQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: returnsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/hooks/api/claims.tsx
var import_react_query51, CLAIMS_QUERY_KEY, claimsQueryKeys, useClaim, useClaims, useCreateClaim, useCancelClaim, useAddClaimInboundItems, useUpdateClaimInboundItem, useRemoveClaimInboundItem, useAddClaimInboundShipping, useUpdateClaimInboundShipping, useDeleteClaimInboundShipping, useAddClaimOutboundItems, useUpdateClaimOutboundItems, useRemoveClaimOutboundItem, useAddClaimOutboundShipping, useUpdateClaimOutboundShipping, useDeleteClaimOutboundShipping, useClaimConfirmRequest, useCancelClaimRequest;
var init_claims = __esm({
  "src/hooks/api/claims.tsx"() {
    "use strict";
    import_react_query51 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_orders();
    init_returns();
    CLAIMS_QUERY_KEY = "claims";
    claimsQueryKeys = queryKeysFactory(CLAIMS_QUERY_KEY);
    useClaim = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query51.useQuery)({
        queryFn: async () => sdk.admin.claim.retrieve(id2, query),
        queryKey: claimsQueryKeys.detail(id2, query),
        ...options
      });
      return { ...data, ...rest };
    };
    useClaims = (query, options) => {
      const { data, ...rest } = (0, import_react_query51.useQuery)({
        queryFn: async () => sdk.admin.claim.list(query),
        queryKey: claimsQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useCreateClaim = (orderId, options) => {
      return (0, import_react_query51.useMutation)({
        mutationFn: (payload) => sdk.admin.claim.create(payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          queryClient.invalidateQueries({
            queryKey: claimsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useCancelClaim = (id2, orderId, options) => {
      return (0, import_react_query51.useMutation)({
        mutationFn: () => sdk.admin.claim.cancel(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          queryClient.invalidateQueries({
            queryKey: claimsQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: claimsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useAddClaimInboundItems = (id2, orderId, options) => {
      return (0, import_react_query51.useMutation)({
        mutationFn: (payload) => sdk.admin.claim.addInboundItems(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateClaimInboundItem = (id2, orderId, options) => {
      return (0, import_react_query51.useMutation)({
        mutationFn: ({
          actionId,
          ...payload
        }) => {
          return sdk.admin.claim.updateInboundItem(id2, actionId, payload);
        },
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useRemoveClaimInboundItem = (id2, orderId, options) => {
      return (0, import_react_query51.useMutation)({
        mutationFn: (actionId) => sdk.admin.claim.removeInboundItem(id2, actionId),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          queryClient.invalidateQueries({
            queryKey: returnsQueryKeys.details()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useAddClaimInboundShipping = (id2, orderId, options) => {
      return (0, import_react_query51.useMutation)({
        mutationFn: (payload) => sdk.admin.claim.addInboundShipping(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateClaimInboundShipping = (id2, orderId, options) => {
      return (0, import_react_query51.useMutation)({
        mutationFn: ({
          actionId,
          ...payload
        }) => sdk.admin.claim.updateInboundShipping(id2, actionId, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteClaimInboundShipping = (id2, orderId, options) => {
      return (0, import_react_query51.useMutation)({
        mutationFn: (actionId) => sdk.admin.claim.deleteInboundShipping(id2, actionId),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useAddClaimOutboundItems = (id2, orderId, options) => {
      return (0, import_react_query51.useMutation)({
        mutationFn: (payload) => sdk.admin.claim.addOutboundItems(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateClaimOutboundItems = (id2, orderId, options) => {
      return (0, import_react_query51.useMutation)({
        mutationFn: ({
          actionId,
          ...payload
        }) => {
          return sdk.admin.claim.updateOutboundItem(id2, actionId, payload);
        },
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useRemoveClaimOutboundItem = (id2, orderId, options) => {
      return (0, import_react_query51.useMutation)({
        mutationFn: (actionId) => sdk.admin.claim.removeOutboundItem(id2, actionId),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useAddClaimOutboundShipping = (id2, orderId, options) => {
      return (0, import_react_query51.useMutation)({
        mutationFn: (payload) => sdk.admin.claim.addOutboundShipping(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateClaimOutboundShipping = (id2, orderId, options) => {
      return (0, import_react_query51.useMutation)({
        mutationFn: ({
          actionId,
          ...payload
        }) => sdk.admin.claim.updateOutboundShipping(id2, actionId, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteClaimOutboundShipping = (id2, orderId, options) => {
      return (0, import_react_query51.useMutation)({
        mutationFn: (actionId) => sdk.admin.claim.deleteOutboundShipping(id2, actionId),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useClaimConfirmRequest = (id2, orderId, options) => {
      return (0, import_react_query51.useMutation)({
        mutationFn: (payload) => sdk.admin.claim.request(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: returnsQueryKeys.all
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          queryClient.invalidateQueries({
            queryKey: claimsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useCancelClaimRequest = (id2, orderId, options) => {
      return (0, import_react_query51.useMutation)({
        mutationFn: () => sdk.admin.claim.cancelRequest(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          queryClient.invalidateQueries({
            queryKey: claimsQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: claimsQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/routes/orders/order-detail/components/active-order-claim-section/active-order-claim-section.tsx
var import_icons62, import_ui127, import_react_i18next128, import_react_router_dom59, import_jsx_runtime205, ActiveOrderClaimSection;
var init_active_order_claim_section = __esm({
  "src/routes/orders/order-detail/components/active-order-claim-section/active-order-claim-section.tsx"() {
    "use strict";
    import_icons62 = require("@medusajs/icons");
    import_ui127 = require("@medusajs/ui");
    import_react_i18next128 = require("react-i18next");
    import_react_router_dom59 = require("react-router-dom");
    init_claims();
    import_jsx_runtime205 = require("react/jsx-runtime");
    ActiveOrderClaimSection = ({
      orderPreview
    }) => {
      const { t: t4 } = (0, import_react_i18next128.useTranslation)();
      const claimId = orderPreview?.order_change?.claim_id;
      const { mutateAsync: cancelClaim } = useCancelClaimRequest(
        claimId,
        orderPreview.id
      );
      const navigate = (0, import_react_router_dom59.useNavigate)();
      const onContinueClaim = async () => {
        navigate(`/orders/${orderPreview.id}/claims`);
      };
      const onCancelClaim = async () => {
        await cancelClaim(void 0, {
          onSuccess: () => {
            import_ui127.toast.success(t4("orders.claims.toast.canceledSuccessfully"));
          },
          onError: (error) => {
            import_ui127.toast.error(error.message);
          }
        });
      };
      if (!claimId) {
        return;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime205.jsx)(
        "div",
        {
          style: {
            background: "repeating-linear-gradient(-45deg, rgb(212, 212, 216, 0.15), rgb(212, 212, 216,.15) 10px, transparent 10px, transparent 20px)"
          },
          className: "-m-4 mb-1 border-b border-l p-4",
          children: /* @__PURE__ */ (0, import_jsx_runtime205.jsx)(import_ui127.Container, { className: "flex items-center justify-between p-0", children: /* @__PURE__ */ (0, import_jsx_runtime205.jsxs)("div", { className: "flex w-full flex-row justify-between", children: [
            /* @__PURE__ */ (0, import_jsx_runtime205.jsxs)("div", { children: [
              /* @__PURE__ */ (0, import_jsx_runtime205.jsxs)("div", { className: "mb-2 flex items-center gap-2 px-6 pt-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime205.jsx)(import_icons62.ExclamationCircle, { className: "text-ui-fg-subtle" }),
                /* @__PURE__ */ (0, import_jsx_runtime205.jsx)(import_ui127.Heading, { level: "h2", children: t4("orders.claims.panel.title") })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime205.jsx)("div", { className: "gap-2 px-6 pb-4", children: /* @__PURE__ */ (0, import_jsx_runtime205.jsx)(import_ui127.Text, { children: t4("orders.claims.panel.description") }) })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime205.jsxs)("div", { className: "flex items-center justify-end gap-x-2 rounded-b-xl px-4 py-4", children: [
              /* @__PURE__ */ (0, import_jsx_runtime205.jsx)(import_ui127.Button, { size: "small", variant: "secondary", onClick: onCancelClaim, children: t4("orders.claims.cancel.title") }),
              /* @__PURE__ */ (0, import_jsx_runtime205.jsx)(import_ui127.Button, { size: "small", variant: "secondary", onClick: onContinueClaim, children: t4("actions.continue") })
            ] })
          ] }) })
        }
      );
    };
  }
});

// src/routes/orders/order-detail/components/active-order-claim-section/index.ts
var init_active_order_claim_section2 = __esm({
  "src/routes/orders/order-detail/components/active-order-claim-section/index.ts"() {
    "use strict";
    init_active_order_claim_section();
  }
});

// src/hooks/api/exchanges.tsx
var import_react_query52, EXCHANGES_QUERY_KEY, exchangesQueryKeys, useExchange, useExchanges, useCreateExchange, useCancelExchange, useAddExchangeInboundItems, useUpdateExchangeInboundItem, useRemoveExchangeInboundItem, useAddExchangeInboundShipping, useUpdateExchangeInboundShipping, useDeleteExchangeInboundShipping, useAddExchangeOutboundItems, useUpdateExchangeOutboundItems, useRemoveExchangeOutboundItem, useAddExchangeOutboundShipping, useUpdateExchangeOutboundShipping, useDeleteExchangeOutboundShipping, useExchangeConfirmRequest, useCancelExchangeRequest;
var init_exchanges = __esm({
  "src/hooks/api/exchanges.tsx"() {
    "use strict";
    import_react_query52 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_query_key_factory();
    init_orders();
    init_returns();
    EXCHANGES_QUERY_KEY = "exchanges";
    exchangesQueryKeys = queryKeysFactory(EXCHANGES_QUERY_KEY);
    useExchange = (id2, query, options) => {
      const { data, ...rest } = (0, import_react_query52.useQuery)({
        queryFn: async () => sdk.admin.exchange.retrieve(id2, query),
        queryKey: exchangesQueryKeys.detail(id2, query),
        ...options
      });
      return { ...data, ...rest };
    };
    useExchanges = (query, options) => {
      const { data, ...rest } = (0, import_react_query52.useQuery)({
        queryFn: async () => sdk.admin.exchange.list(query),
        queryKey: exchangesQueryKeys.list(query),
        ...options
      });
      return { ...data, ...rest };
    };
    useCreateExchange = (orderId, options) => {
      return (0, import_react_query52.useMutation)({
        mutationFn: (payload) => sdk.admin.exchange.create(payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          queryClient.invalidateQueries({
            queryKey: exchangesQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useCancelExchange = (id2, orderId, options) => {
      return (0, import_react_query52.useMutation)({
        mutationFn: () => sdk.admin.exchange.cancel(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          queryClient.invalidateQueries({
            queryKey: exchangesQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: exchangesQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useAddExchangeInboundItems = (id2, orderId, options) => {
      return (0, import_react_query52.useMutation)({
        mutationFn: (payload) => sdk.admin.exchange.addInboundItems(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateExchangeInboundItem = (id2, orderId, options) => {
      return (0, import_react_query52.useMutation)({
        mutationFn: ({
          actionId,
          ...payload
        }) => {
          return sdk.admin.exchange.updateInboundItem(id2, actionId, payload);
        },
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useRemoveExchangeInboundItem = (id2, orderId, options) => {
      return (0, import_react_query52.useMutation)({
        mutationFn: (actionId) => sdk.admin.exchange.removeInboundItem(id2, actionId),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          queryClient.invalidateQueries({
            queryKey: returnsQueryKeys.details()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useAddExchangeInboundShipping = (id2, orderId, options) => {
      return (0, import_react_query52.useMutation)({
        mutationFn: (payload) => sdk.admin.exchange.addInboundShipping(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateExchangeInboundShipping = (id2, orderId, options) => {
      return (0, import_react_query52.useMutation)({
        mutationFn: ({
          actionId,
          ...payload
        }) => sdk.admin.exchange.updateInboundShipping(id2, actionId, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteExchangeInboundShipping = (id2, orderId, options) => {
      return (0, import_react_query52.useMutation)({
        mutationFn: (actionId) => sdk.admin.exchange.deleteInboundShipping(id2, actionId),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useAddExchangeOutboundItems = (id2, orderId, options) => {
      return (0, import_react_query52.useMutation)({
        mutationFn: (payload) => sdk.admin.exchange.addOutboundItems(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateExchangeOutboundItems = (id2, orderId, options) => {
      return (0, import_react_query52.useMutation)({
        mutationFn: ({
          actionId,
          ...payload
        }) => {
          return sdk.admin.exchange.updateOutboundItem(id2, actionId, payload);
        },
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useRemoveExchangeOutboundItem = (id2, orderId, options) => {
      return (0, import_react_query52.useMutation)({
        mutationFn: (actionId) => sdk.admin.exchange.removeOutboundItem(id2, actionId),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useAddExchangeOutboundShipping = (id2, orderId, options) => {
      return (0, import_react_query52.useMutation)({
        mutationFn: (payload) => sdk.admin.exchange.addOutboundShipping(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateExchangeOutboundShipping = (id2, orderId, options) => {
      return (0, import_react_query52.useMutation)({
        mutationFn: ({
          actionId,
          ...payload
        }) => sdk.admin.exchange.updateOutboundShipping(id2, actionId, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useDeleteExchangeOutboundShipping = (id2, orderId, options) => {
      return (0, import_react_query52.useMutation)({
        mutationFn: (actionId) => sdk.admin.exchange.deleteOutboundShipping(id2, actionId),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useExchangeConfirmRequest = (id2, orderId, options) => {
      return (0, import_react_query52.useMutation)({
        mutationFn: (payload) => sdk.admin.exchange.request(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: returnsQueryKeys.all
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          queryClient.invalidateQueries({
            queryKey: exchangesQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useCancelExchangeRequest = (id2, orderId, options) => {
      return (0, import_react_query52.useMutation)({
        mutationFn: () => sdk.admin.exchange.cancelRequest(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          queryClient.invalidateQueries({
            queryKey: exchangesQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: exchangesQueryKeys.lists()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/routes/orders/order-detail/components/active-order-exchange-section/active-order-exchange-section.tsx
var import_icons63, import_ui128, import_react_i18next129, import_react_router_dom60, import_jsx_runtime206, ActiveOrderExchangeSection;
var init_active_order_exchange_section = __esm({
  "src/routes/orders/order-detail/components/active-order-exchange-section/active-order-exchange-section.tsx"() {
    "use strict";
    import_icons63 = require("@medusajs/icons");
    import_ui128 = require("@medusajs/ui");
    import_react_i18next129 = require("react-i18next");
    import_react_router_dom60 = require("react-router-dom");
    init_exchanges();
    import_jsx_runtime206 = require("react/jsx-runtime");
    ActiveOrderExchangeSection = ({
      orderPreview
    }) => {
      const { t: t4 } = (0, import_react_i18next129.useTranslation)();
      const exchangeId = orderPreview?.order_change?.exchange_id;
      const { mutateAsync: cancelExchange } = useCancelExchangeRequest(
        exchangeId,
        orderPreview.id
      );
      const navigate = (0, import_react_router_dom60.useNavigate)();
      const onContinueExchange = async () => {
        navigate(`/orders/${orderPreview.id}/exchanges`);
      };
      const onCancelExchange = async () => {
        await cancelExchange(void 0, {
          onSuccess: () => {
            import_ui128.toast.success(t4("orders.exchanges.toast.canceledSuccessfully"));
          },
          onError: (error) => {
            import_ui128.toast.error(error.message);
          }
        });
      };
      if (!exchangeId) {
        return;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime206.jsx)(
        "div",
        {
          style: {
            background: "repeating-linear-gradient(-45deg, rgb(212, 212, 216, 0.15), rgb(212, 212, 216,.15) 10px, transparent 10px, transparent 20px)"
          },
          className: "-m-4 mb-1 border-b border-l p-4",
          children: /* @__PURE__ */ (0, import_jsx_runtime206.jsx)(import_ui128.Container, { className: "flex items-center justify-between p-0", children: /* @__PURE__ */ (0, import_jsx_runtime206.jsxs)("div", { className: "flex w-full flex-row justify-between", children: [
            /* @__PURE__ */ (0, import_jsx_runtime206.jsxs)("div", { children: [
              /* @__PURE__ */ (0, import_jsx_runtime206.jsxs)("div", { className: "mb-2 flex items-center gap-2 px-6 pt-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime206.jsx)(import_icons63.ArrowPath, { className: "text-ui-fg-subtle" }),
                /* @__PURE__ */ (0, import_jsx_runtime206.jsx)(import_ui128.Heading, { level: "h2", children: t4("orders.exchanges.panel.title") })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime206.jsx)("div", { className: "gap-2 px-6 pb-4", children: /* @__PURE__ */ (0, import_jsx_runtime206.jsx)(import_ui128.Text, { children: t4("orders.exchanges.panel.description") }) })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime206.jsxs)("div", { className: "flex items-center justify-end gap-x-2 rounded-b-xl px-4 py-4", children: [
              /* @__PURE__ */ (0, import_jsx_runtime206.jsx)(import_ui128.Button, { size: "small", variant: "secondary", onClick: onCancelExchange, children: t4("orders.exchanges.cancel.title") }),
              /* @__PURE__ */ (0, import_jsx_runtime206.jsx)(
                import_ui128.Button,
                {
                  size: "small",
                  variant: "secondary",
                  onClick: onContinueExchange,
                  children: t4("actions.continue")
                }
              )
            ] })
          ] }) })
        }
      );
    };
  }
});

// src/routes/orders/order-detail/components/active-order-exchange-section/index.ts
var init_active_order_exchange_section2 = __esm({
  "src/routes/orders/order-detail/components/active-order-exchange-section/index.ts"() {
    "use strict";
    init_active_order_exchange_section();
  }
});

// src/routes/orders/order-detail/components/active-order-return-section/active-order-return-section.tsx
var import_icons64, import_ui129, import_react_i18next130, import_react_router_dom61, import_jsx_runtime207, ActiveOrderReturnSection;
var init_active_order_return_section = __esm({
  "src/routes/orders/order-detail/components/active-order-return-section/active-order-return-section.tsx"() {
    "use strict";
    import_icons64 = require("@medusajs/icons");
    import_ui129 = require("@medusajs/ui");
    import_react_i18next130 = require("react-i18next");
    import_react_router_dom61 = require("react-router-dom");
    init_returns();
    import_jsx_runtime207 = require("react/jsx-runtime");
    ActiveOrderReturnSection = ({
      orderPreview
    }) => {
      const { t: t4 } = (0, import_react_i18next130.useTranslation)();
      const orderChange = orderPreview?.order_change;
      const returnId = orderChange?.return_id;
      const isReturnRequest = orderChange?.change_type === "return_request" && !!orderChange.return_id;
      const { mutateAsync: cancelReturn } = useCancelReturnRequest(
        returnId,
        orderPreview.id
      );
      const navigate = (0, import_react_router_dom61.useNavigate)();
      const onContinueReturn = async () => {
        navigate(`/orders/${orderPreview.id}/returns`);
      };
      const onCancelReturn = async () => {
        await cancelReturn(void 0, {
          onSuccess: () => {
            import_ui129.toast.success(t4("orders.returns.toast.canceledSuccessfully"));
          },
          onError: (error) => {
            import_ui129.toast.error(error.message);
          }
        });
      };
      if (!returnId || !isReturnRequest) {
        return;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime207.jsx)(
        "div",
        {
          style: {
            background: "repeating-linear-gradient(-45deg, rgb(212, 212, 216, 0.15), rgb(212, 212, 216,.15) 10px, transparent 10px, transparent 20px)"
          },
          className: "-m-4 mb-1 border-b border-l p-4",
          children: /* @__PURE__ */ (0, import_jsx_runtime207.jsx)(import_ui129.Container, { className: "flex items-center justify-between p-0", children: /* @__PURE__ */ (0, import_jsx_runtime207.jsxs)("div", { className: "flex w-full flex-row justify-between", children: [
            /* @__PURE__ */ (0, import_jsx_runtime207.jsxs)("div", { children: [
              /* @__PURE__ */ (0, import_jsx_runtime207.jsxs)("div", { className: "mb-2 flex items-center gap-2 px-6 pt-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime207.jsx)(import_icons64.ArrowUturnLeft, { className: "text-ui-fg-subtle" }),
                /* @__PURE__ */ (0, import_jsx_runtime207.jsx)(import_ui129.Heading, { level: "h2", children: t4("orders.returns.panel.title") })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime207.jsx)("div", { className: "gap-2 px-6 pb-4", children: /* @__PURE__ */ (0, import_jsx_runtime207.jsx)(import_ui129.Text, { children: t4("orders.returns.panel.description") }) })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime207.jsxs)("div", { className: "flex items-center justify-end gap-x-2 rounded-b-xl px-4 py-4", children: [
              /* @__PURE__ */ (0, import_jsx_runtime207.jsx)(import_ui129.Button, { size: "small", variant: "secondary", onClick: onCancelReturn, children: t4("orders.returns.cancel.title") }),
              /* @__PURE__ */ (0, import_jsx_runtime207.jsx)(import_ui129.Button, { size: "small", variant: "secondary", onClick: onContinueReturn, children: t4("actions.continue") })
            ] })
          ] }) })
        }
      );
    };
  }
});

// src/routes/orders/order-detail/components/active-order-return-section/index.ts
var init_active_order_return_section2 = __esm({
  "src/routes/orders/order-detail/components/active-order-return-section/index.ts"() {
    "use strict";
    init_active_order_return_section();
  }
});

// src/hooks/api/order-edits.tsx
var import_react_query53, useCreateOrderEdit, useRequestOrderEdit, useConfirmOrderEdit, useCancelOrderEdit, useAddOrderEditItems, useUpdateOrderEditOriginalItem, useUpdateOrderEditAddedItem, useRemoveOrderEditItem;
var init_order_edits = __esm({
  "src/hooks/api/order-edits.tsx"() {
    "use strict";
    import_react_query53 = require("@tanstack/react-query");
    init_client2();
    init_query_client();
    init_orders();
    init_reservations();
    init_inventory();
    useCreateOrderEdit = (orderId, options) => {
      return (0, import_react_query53.useMutation)({
        mutationFn: (payload) => sdk.admin.orderEdit.initiateRequest(payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useRequestOrderEdit = (id2, options) => {
      return (0, import_react_query53.useMutation)({
        mutationFn: () => sdk.admin.orderEdit.request(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(id2)
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.changes(id2)
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.lineItems(id2)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useConfirmOrderEdit = (id2, options) => {
      return (0, import_react_query53.useMutation)({
        mutationFn: () => sdk.admin.orderEdit.confirm(id2),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(id2)
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.changes(id2)
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.lineItems(id2)
          });
          queryClient.invalidateQueries({
            queryKey: reservationItemsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: inventoryItemsQueryKeys.lists()
          });
          queryClient.invalidateQueries({
            queryKey: inventoryItemsQueryKeys.details()
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useCancelOrderEdit = (orderId, options) => {
      return (0, import_react_query53.useMutation)({
        mutationFn: () => sdk.admin.orderEdit.cancelRequest(orderId),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.details()
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(orderId)
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.changes(orderId)
          });
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.lineItems(id)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useAddOrderEditItems = (id2, options) => {
      return (0, import_react_query53.useMutation)({
        mutationFn: (payload) => sdk.admin.orderEdit.addItems(id2, payload),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(id2)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateOrderEditOriginalItem = (id2, options) => {
      return (0, import_react_query53.useMutation)({
        mutationFn: ({
          itemId,
          ...payload
        }) => {
          return sdk.admin.orderEdit.updateOriginalItem(id2, itemId, payload);
        },
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(id2)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useUpdateOrderEditAddedItem = (id2, options) => {
      return (0, import_react_query53.useMutation)({
        mutationFn: ({
          actionId,
          ...payload
        }) => {
          return sdk.admin.orderEdit.updateAddedItem(id2, actionId, payload);
        },
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(id2)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
    useRemoveOrderEditItem = (id2, options) => {
      return (0, import_react_query53.useMutation)({
        mutationFn: (actionId) => sdk.admin.orderEdit.removeAddedItem(id2, actionId),
        onSuccess: (data, variables, context) => {
          queryClient.invalidateQueries({
            queryKey: ordersQueryKeys.preview(id2)
          });
          options?.onSuccess?.(data, variables, context);
        },
        ...options
      });
    };
  }
});

// src/routes/orders/order-detail/components/order-active-edit-section/order-active-edit-section.tsx
function EditItem({
  item,
  quantity
}) {
  return /* @__PURE__ */ (0, import_jsx_runtime208.jsx)("div", { className: "text-ui-fg-subtle items-center gap-x-2", children: /* @__PURE__ */ (0, import_jsx_runtime208.jsxs)("div", { className: "flex items-center gap-x-2", children: [
    /* @__PURE__ */ (0, import_jsx_runtime208.jsxs)("div", { className: "w-fit min-w-[27px]", children: [
      /* @__PURE__ */ (0, import_jsx_runtime208.jsx)("span", { className: "txt-small tabular-nums", children: quantity }),
      "x"
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime208.jsx)(Thumbnail, { src: item.thumbnail }),
    /* @__PURE__ */ (0, import_jsx_runtime208.jsx)("span", { className: "txt-small text-ui-fg-subtle font-medium", children: item.title }),
    item.variant_sku && " \xB7 ",
    item.variant_sku && /* @__PURE__ */ (0, import_jsx_runtime208.jsxs)("div", { className: "flex items-center gap-x-1", children: [
      /* @__PURE__ */ (0, import_jsx_runtime208.jsx)("span", { className: "txt-small", children: item.variant_sku }),
      /* @__PURE__ */ (0, import_jsx_runtime208.jsx)(import_ui130.Copy, { content: item.variant_sku, className: "text-ui-fg-muted" })
    ] })
  ] }) }, item.id);
}
var import_ui130, import_react_i18next131, import_icons65, import_react121, import_react_router_dom62, import_jsx_runtime208, OrderActiveEditSection;
var init_order_active_edit_section = __esm({
  "src/routes/orders/order-detail/components/order-active-edit-section/order-active-edit-section.tsx"() {
    "use strict";
    import_ui130 = require("@medusajs/ui");
    import_react_i18next131 = require("react-i18next");
    import_icons65 = require("@medusajs/icons");
    init_api();
    init_order_edits();
    import_react121 = require("react");
    init_thumbnail2();
    import_react_router_dom62 = require("react-router-dom");
    import_jsx_runtime208 = require("react/jsx-runtime");
    OrderActiveEditSection = ({
      order
    }) => {
      const { t: t4 } = (0, import_react_i18next131.useTranslation)();
      const navigate = (0, import_react_router_dom62.useNavigate)();
      const { order: orderPreview } = useOrderPreview(order.id);
      const { mutateAsync: cancelOrderEdit } = useCancelOrderEdit(order.id);
      const { mutateAsync: confirmOrderEdit } = useConfirmOrderEdit(order.id);
      const isPending = orderPreview.order_change?.status === "pending";
      const [addedItems, removedItems] = (0, import_react121.useMemo)(() => {
        const added = [];
        const removed = [];
        const orderLookupMap = new Map(order.items.map((i) => [i.id, i]));
        (orderPreview?.items || []).forEach((currentItem) => {
          const originalItem = orderLookupMap.get(currentItem.id);
          if (!originalItem) {
            added.push({ item: currentItem, quantity: currentItem.quantity });
            return;
          }
          if (originalItem.quantity > currentItem.quantity) {
            removed.push({
              item: currentItem,
              quantity: originalItem.quantity - currentItem.quantity
            });
          }
          if (originalItem.quantity < currentItem.quantity) {
            added.push({
              item: currentItem,
              quantity: currentItem.quantity - originalItem.quantity
            });
          }
        });
        return [added, removed];
      }, [orderPreview]);
      const onConfirmOrderEdit = async () => {
        try {
          await confirmOrderEdit();
          import_ui130.toast.success(t4("orders.edits.toast.confirmedSuccessfully"));
        } catch (e) {
          import_ui130.toast.error(e.message);
        }
      };
      const onCancelOrderEdit = async () => {
        try {
          await cancelOrderEdit();
          import_ui130.toast.success(t4("orders.edits.toast.canceledSuccessfully"));
        } catch (e) {
          import_ui130.toast.error(e.message);
        }
      };
      if (!orderPreview || orderPreview.order_change?.change_type !== "edit") {
        return null;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime208.jsx)(
        "div",
        {
          style: {
            background: "repeating-linear-gradient(-45deg, rgb(212, 212, 216, 0.15), rgb(212, 212, 216,.15) 10px, transparent 10px, transparent 20px)"
          },
          className: "-m-4 mb-1 border-b border-l p-4",
          children: /* @__PURE__ */ (0, import_jsx_runtime208.jsx)(import_ui130.Container, { className: "flex items-center justify-between p-0", children: /* @__PURE__ */ (0, import_jsx_runtime208.jsxs)("div", { className: "flex w-full flex-col divide-y divide-dashed", children: [
            /* @__PURE__ */ (0, import_jsx_runtime208.jsxs)("div", { className: "flex items-center gap-2 px-6 py-4", children: [
              /* @__PURE__ */ (0, import_jsx_runtime208.jsx)(import_icons65.ExclamationCircleSolid, { className: "text-blue-500" }),
              /* @__PURE__ */ (0, import_jsx_runtime208.jsx)(import_ui130.Heading, { level: "h2", children: t4(
                isPending ? "orders.edits.panel.titlePending" : "orders.edits.panel.title"
              ) })
            ] }),
            !!addedItems.length && /* @__PURE__ */ (0, import_jsx_runtime208.jsxs)("div", { className: "txt-small text-ui-fg-subtle flex flex-row px-6 py-4", children: [
              /* @__PURE__ */ (0, import_jsx_runtime208.jsx)("span", { className: "flex-1 font-medium", children: t4("labels.added") }),
              /* @__PURE__ */ (0, import_jsx_runtime208.jsx)("div", { className: "flex flex-1 flex-col gap-y-2", children: addedItems.map(({ item, quantity }) => /* @__PURE__ */ (0, import_jsx_runtime208.jsx)(EditItem, { item, quantity }, item.id)) })
            ] }),
            !!removedItems.length && /* @__PURE__ */ (0, import_jsx_runtime208.jsxs)("div", { className: "txt-small text-ui-fg-subtle flex flex-row px-6 py-4", children: [
              /* @__PURE__ */ (0, import_jsx_runtime208.jsx)("span", { className: "flex-1 font-medium", children: t4("labels.removed") }),
              /* @__PURE__ */ (0, import_jsx_runtime208.jsx)("div", { className: "flex flex-1 flex-col gap-y-2", children: removedItems.map(({ item, quantity }) => /* @__PURE__ */ (0, import_jsx_runtime208.jsx)(EditItem, { item, quantity }, item.id)) })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime208.jsxs)("div", { className: "bg-ui-bg-subtle flex items-center justify-end gap-x-2 rounded-b-xl px-4 py-4", children: [
              isPending ? /* @__PURE__ */ (0, import_jsx_runtime208.jsx)(
                import_ui130.Button,
                {
                  size: "small",
                  variant: "secondary",
                  onClick: () => navigate(`/orders/${order.id}/edits`),
                  children: t4("actions.continueEdit")
                }
              ) : /* @__PURE__ */ (0, import_jsx_runtime208.jsx)(
                import_ui130.Button,
                {
                  size: "small",
                  variant: "secondary",
                  onClick: onConfirmOrderEdit,
                  children: t4("actions.forceConfirm")
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime208.jsx)(
                import_ui130.Button,
                {
                  size: "small",
                  variant: "secondary",
                  onClick: onCancelOrderEdit,
                  children: t4("actions.cancel")
                }
              )
            ] })
          ] }) })
        }
      );
    };
  }
});

// src/routes/orders/order-detail/components/order-active-edit-section/index.ts
var init_order_active_edit_section2 = __esm({
  "src/routes/orders/order-detail/components/order-active-edit-section/index.ts"() {
    "use strict";
    init_order_active_edit_section();
  }
});

// src/lib/format-currency.ts
var formatCurrency;
var init_format_currency = __esm({
  "src/lib/format-currency.ts"() {
    "use strict";
    formatCurrency = (amount, currency) => {
      return new Intl.NumberFormat("en-US", {
        style: "currency",
        currency,
        signDisplay: "auto"
      }).format(amount);
    };
  }
});

// src/lib/payment.ts
var getTotalCaptured, getTotalPending;
var init_payment = __esm({
  "src/lib/payment.ts"() {
    "use strict";
    getTotalCaptured = (paymentCollections) => paymentCollections.reduce((acc, paymentCollection) => {
      acc = acc + (paymentCollection.captured_amount - paymentCollection.refunded_amount);
      return acc;
    }, 0);
    getTotalPending = (paymentCollections) => paymentCollections.reduce((acc, paymentCollection) => {
      acc += paymentCollection.amount - paymentCollection.captured_amount;
      return acc;
    }, 0);
  }
});

// ../../../node_modules/toggle-selection/index.js
var require_toggle_selection = __commonJS({
  "../../../node_modules/toggle-selection/index.js"(exports2, module2) {
    "use strict";
    module2.exports = function() {
      var selection = document.getSelection();
      if (!selection.rangeCount) {
        return function() {
        };
      }
      var active = document.activeElement;
      var ranges = [];
      for (var i = 0; i < selection.rangeCount; i++) {
        ranges.push(selection.getRangeAt(i));
      }
      switch (active.tagName.toUpperCase()) {
        // .toUpperCase handles XHTML
        case "INPUT":
        case "TEXTAREA":
          active.blur();
          break;
        default:
          active = null;
          break;
      }
      selection.removeAllRanges();
      return function() {
        selection.type === "Caret" && selection.removeAllRanges();
        if (!selection.rangeCount) {
          ranges.forEach(function(range) {
            selection.addRange(range);
          });
        }
        active && active.focus();
      };
    };
  }
});

// ../../../node_modules/copy-to-clipboard/index.js
var require_copy_to_clipboard = __commonJS({
  "../../../node_modules/copy-to-clipboard/index.js"(exports2, module2) {
    "use strict";
    var deselectCurrent = require_toggle_selection();
    var clipboardToIE11Formatting = {
      "text/plain": "Text",
      "text/html": "Url",
      "default": "Text"
    };
    var defaultMessage = "Copy to clipboard: #{key}, Enter";
    function format10(message) {
      var copyKey = (/mac os x/i.test(navigator.userAgent) ? "\u2318" : "Ctrl") + "+C";
      return message.replace(/#{\s*key\s*}/g, copyKey);
    }
    function copy4(text, options) {
      var debug, message, reselectPrevious, range, selection, mark, success = false;
      if (!options) {
        options = {};
      }
      debug = options.debug || false;
      try {
        reselectPrevious = deselectCurrent();
        range = document.createRange();
        selection = document.getSelection();
        mark = document.createElement("span");
        mark.textContent = text;
        mark.ariaHidden = "true";
        mark.style.all = "unset";
        mark.style.position = "fixed";
        mark.style.top = 0;
        mark.style.clip = "rect(0, 0, 0, 0)";
        mark.style.whiteSpace = "pre";
        mark.style.webkitUserSelect = "text";
        mark.style.MozUserSelect = "text";
        mark.style.msUserSelect = "text";
        mark.style.userSelect = "text";
        mark.addEventListener("copy", function(e) {
          e.stopPropagation();
          if (options.format) {
            e.preventDefault();
            if (typeof e.clipboardData === "undefined") {
              debug && console.warn("unable to use e.clipboardData");
              debug && console.warn("trying IE specific stuff");
              window.clipboardData.clearData();
              var format11 = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting["default"];
              window.clipboardData.setData(format11, text);
            } else {
              e.clipboardData.clearData();
              e.clipboardData.setData(options.format, text);
            }
          }
          if (options.onCopy) {
            e.preventDefault();
            options.onCopy(e.clipboardData);
          }
        });
        document.body.appendChild(mark);
        range.selectNodeContents(mark);
        selection.addRange(range);
        var successful = document.execCommand("copy");
        if (!successful) {
          throw new Error("copy command was unsuccessful");
        }
        success = true;
      } catch (err) {
        debug && console.error("unable to copy using execCommand: ", err);
        debug && console.warn("trying IE specific stuff");
        try {
          window.clipboardData.setData(options.format || "text", text);
          options.onCopy && options.onCopy(window.clipboardData);
          success = true;
        } catch (err2) {
          debug && console.error("unable to copy using clipboardData: ", err2);
          debug && console.error("falling back to prompt");
          message = format10("message" in options ? options.message : defaultMessage);
          window.prompt(message, text);
        }
      } finally {
        if (selection) {
          if (typeof selection.removeRange == "function") {
            selection.removeRange(range);
          } else {
            selection.removeAllRanges();
          }
        }
        if (mark) {
          document.body.removeChild(mark);
        }
        reselectPrevious();
      }
      return success;
    }
    module2.exports = copy4;
  }
});

// src/components/common/display-id/display-id.tsx
function DisplayId({ id: id2, className }) {
  const { t: t4 } = (0, import_react_i18next132.useTranslation)();
  const [open, setOpen] = (0, import_react122.useState)(false);
  const onClick = () => {
    (0, import_copy_to_clipboard.default)(id2);
    import_ui131.toast.success(t4("actions.idCopiedToClipboard"));
  };
  return /* @__PURE__ */ (0, import_jsx_runtime209.jsx)(import_ui131.Tooltip, { maxWidth: 260, content: id2, open, onOpenChange: setOpen, children: /* @__PURE__ */ (0, import_jsx_runtime209.jsxs)("span", { onClick, className: (0, import_ui131.clx)("cursor-pointer", className), children: [
    "#",
    id2.slice(-7)
  ] }) });
}
var import_react_i18next132, import_react122, import_copy_to_clipboard, import_ui131, import_jsx_runtime209, display_id_default;
var init_display_id = __esm({
  "src/components/common/display-id/display-id.tsx"() {
    "use strict";
    import_react_i18next132 = require("react-i18next");
    import_react122 = require("react");
    import_copy_to_clipboard = __toESM(require_copy_to_clipboard());
    import_ui131 = require("@medusajs/ui");
    import_jsx_runtime209 = require("react/jsx-runtime");
    display_id_default = DisplayId;
  }
});

// src/routes/orders/order-detail/components/order-payment-section/order-payment-section.tsx
var import_icons66, import_ui132, import_date_fns3, import_react_i18next133, import_jsx_runtime210, getPaymentsFromOrder, OrderPaymentSection, Header8, Refund, Payment, PaymentBreakdown, Total;
var init_order_payment_section = __esm({
  "src/routes/orders/order-detail/components/order-payment-section/order-payment-section.tsx"() {
    "use strict";
    import_icons66 = require("@medusajs/icons");
    import_ui132 = require("@medusajs/ui");
    import_date_fns3 = require("date-fns");
    import_react_i18next133 = require("react-i18next");
    init_action_menu2();
    init_api();
    init_format_currency();
    init_money_amount_helpers();
    init_order_helpers();
    init_payment();
    init_display_id();
    import_jsx_runtime210 = require("react/jsx-runtime");
    getPaymentsFromOrder = (order) => {
      return order.payment_collections.map((collection) => collection.payments).flat(1).filter(Boolean);
    };
    OrderPaymentSection = ({ order }) => {
      const payments = getPaymentsFromOrder(order);
      const refunds = payments.map((payment) => payment?.refunds).flat(1).filter(Boolean);
      return /* @__PURE__ */ (0, import_jsx_runtime210.jsxs)(import_ui132.Container, { className: "divide-y divide-dashed p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(Header8, { order }),
        /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(
          PaymentBreakdown,
          {
            order,
            payments,
            refunds,
            currencyCode: order.currency_code
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(
          Total,
          {
            paymentCollections: order.payment_collections,
            currencyCode: order.currency_code
          }
        )
      ] });
    };
    Header8 = ({ order }) => {
      const { t: t4 } = (0, import_react_i18next133.useTranslation)();
      const { label, color } = getOrderPaymentStatus(t4, order.payment_status);
      return /* @__PURE__ */ (0, import_jsx_runtime210.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(import_ui132.Heading, { level: "h2", children: t4("orders.payment.title") }),
        /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(import_ui132.StatusBadge, { color, className: "text-nowrap", children: label })
      ] });
    };
    Refund = ({
      refund,
      currencyCode
    }) => {
      const { t: t4 } = (0, import_react_i18next133.useTranslation)();
      const RefundReasonBadge = refund?.refund_reason && /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(
        import_ui132.Badge,
        {
          size: "2xsmall",
          className: "cursor-default select-none capitalize",
          rounded: "full",
          children: refund.refund_reason.label
        }
      );
      const RefundNoteIndicator = refund.note && /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(import_ui132.Tooltip, { content: refund.note, children: /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(import_icons66.DocumentText, { className: "text-ui-tag-neutral-icon ml-1 inline" }) });
      return /* @__PURE__ */ (0, import_jsx_runtime210.jsxs)("div", { className: "bg-ui-bg-subtle text-ui-fg-subtle grid grid-cols-[1fr_1fr_1fr_20px] items-center gap-x-4 px-6 py-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime210.jsxs)("div", { className: "flex flex-row", children: [
          /* @__PURE__ */ (0, import_jsx_runtime210.jsx)("div", { className: "self-center pr-3", children: /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(import_icons66.ArrowDownRightMini, { className: "text-ui-fg-muted" }) }),
          /* @__PURE__ */ (0, import_jsx_runtime210.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime210.jsxs)(import_ui132.Text, { size: "small", leading: "compact", weight: "plus", children: [
              t4("orders.payment.refund"),
              " ",
              RefundNoteIndicator
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(import_ui132.Text, { size: "small", leading: "compact", children: (0, import_date_fns3.format)(new Date(refund.created_at), "dd MMM, yyyy, HH:mm:ss") })
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime210.jsx)("div", { className: "flex items-center justify-end", children: RefundReasonBadge }),
        /* @__PURE__ */ (0, import_jsx_runtime210.jsx)("div", { className: "flex items-center justify-end", children: /* @__PURE__ */ (0, import_jsx_runtime210.jsxs)(import_ui132.Text, { size: "small", leading: "compact", children: [
          "- ",
          getLocaleAmount(refund.amount, currencyCode)
        ] }) })
      ] });
    };
    Payment = ({
      order,
      payment,
      refunds,
      currencyCode
    }) => {
      const { t: t4 } = (0, import_react_i18next133.useTranslation)();
      const prompt = (0, import_ui132.usePrompt)();
      const { mutateAsync } = useCapturePayment(order.id, payment.id);
      const handleCapture = async () => {
        const res = await prompt({
          title: t4("orders.payment.capture"),
          description: t4("orders.payment.capturePayment", {
            amount: formatCurrency(payment.amount, currencyCode)
          }),
          confirmText: t4("actions.confirm"),
          cancelText: t4("actions.cancel"),
          variant: "confirmation"
        });
        if (!res) {
          return;
        }
        await mutateAsync(
          { amount: payment.amount },
          {
            onSuccess: () => {
              import_ui132.toast.success(
                t4("orders.payment.capturePaymentSuccess", {
                  amount: formatCurrency(payment.amount, currencyCode)
                })
              );
            },
            onError: (error) => {
              import_ui132.toast.error(error.message);
            }
          }
        );
      };
      const [status, color] = payment.captured_at ? ["Captured", "green"] : ["Pending", "orange"];
      const showCapture = payment.captured_at === null && payment.canceled_at === null;
      return /* @__PURE__ */ (0, import_jsx_runtime210.jsxs)("div", { className: "divide-y divide-dashed", children: [
        /* @__PURE__ */ (0, import_jsx_runtime210.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-[1fr_1fr_1fr_20px] items-center gap-x-4 px-6 py-4 sm:grid-cols-[1fr_1fr_1fr_1fr_20px]", children: [
          /* @__PURE__ */ (0, import_jsx_runtime210.jsxs)("div", { className: "w-full min-w-[60px] overflow-hidden", children: [
            /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(
              import_ui132.Text,
              {
                size: "small",
                leading: "compact",
                weight: "plus",
                className: "truncate",
                children: /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(display_id_default, { id: payment.id })
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(import_ui132.Text, { size: "small", leading: "compact", children: (0, import_date_fns3.format)(
              new Date(payment.created_at),
              "dd MMM, yyyy, HH:mm:ss"
            ) })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime210.jsx)("div", { className: "hidden items-center justify-end sm:flex", children: /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(import_ui132.Text, { size: "small", leading: "compact", className: "capitalize", children: payment.provider_id }) }),
          /* @__PURE__ */ (0, import_jsx_runtime210.jsx)("div", { className: "flex items-center justify-end", children: /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(import_ui132.StatusBadge, { color, className: "text-nowrap", children: status }) }),
          /* @__PURE__ */ (0, import_jsx_runtime210.jsx)("div", { className: "flex items-center justify-end", children: /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(import_ui132.Text, { size: "small", leading: "compact", children: getLocaleAmount(payment.amount, payment.currency_code) }) }),
          /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      label: t4("orders.payment.refund"),
                      icon: /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(import_icons66.XCircle, {}),
                      to: `/orders/${order.id}/refund?paymentId=${payment.id}`,
                      disabled: !payment.captured_at
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        showCapture && /* @__PURE__ */ (0, import_jsx_runtime210.jsxs)("div", { className: "bg-ui-bg-subtle flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime210.jsxs)("div", { className: "flex items-center gap-x-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(import_icons66.ArrowDownRightMini, { className: "text-ui-fg-muted shrink-0" }),
            /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(import_ui132.Text, { size: "small", leading: "compact", children: /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(
              import_react_i18next133.Trans,
              {
                i18nKey: "orders.payment.isReadyToBeCaptured",
                components: [/* @__PURE__ */ (0, import_jsx_runtime210.jsx)(display_id_default, { id: payment.id })]
              }
            ) })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime210.jsxs)(
            import_ui132.Button,
            {
              className: "shrink-0",
              size: "small",
              variant: "secondary",
              onClick: handleCapture,
              children: [
                /* @__PURE__ */ (0, import_jsx_runtime210.jsx)("span", { className: "hidden sm:block", children: t4("orders.payment.capture") }),
                /* @__PURE__ */ (0, import_jsx_runtime210.jsx)("span", { className: "sm:hidden", children: t4("orders.payment.capture_short") })
              ]
            }
          )
        ] }),
        refunds.map((refund) => /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(Refund, { refund, currencyCode }, refund.id))
      ] });
    };
    PaymentBreakdown = ({
      order,
      payments,
      refunds,
      currencyCode
    }) => {
      const orderRefunds = refunds.filter((refund) => refund.payment_id === null);
      const entries = [...orderRefunds, ...payments].sort((a, b) => {
        return new Date(a.created_at).getTime() - new Date(b.created_at).getTime();
      }).map((entry) => {
        return {
          event: entry,
          type: entry.id.startsWith("pay_") ? "payment" : "refund"
        };
      });
      return /* @__PURE__ */ (0, import_jsx_runtime210.jsx)("div", { className: "flex flex-col divide-y divide-dashed", children: entries.map(({ type, event }) => {
        switch (type) {
          case "payment":
            return /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(
              Payment,
              {
                order,
                payment: event,
                refunds: refunds.filter(
                  (refund) => refund.payment_id === event.id
                ),
                currencyCode
              },
              event.id
            );
          case "refund":
            return /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(
              Refund,
              {
                refund: event,
                currencyCode
              },
              event.id
            );
        }
      }) });
    };
    Total = ({
      paymentCollections,
      currencyCode
    }) => {
      const { t: t4 } = (0, import_react_i18next133.useTranslation)();
      const totalPending = getTotalPending(paymentCollections);
      return /* @__PURE__ */ (0, import_jsx_runtime210.jsxs)("div", { children: [
        /* @__PURE__ */ (0, import_jsx_runtime210.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(import_ui132.Text, { size: "small", weight: "plus", leading: "compact", children: t4("orders.payment.totalPaidByCustomer") }),
          /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(import_ui132.Text, { size: "small", weight: "plus", leading: "compact", children: getStylizedAmount(
            getTotalCaptured(paymentCollections),
            currencyCode
          ) })
        ] }),
        totalPending > 0 && /* @__PURE__ */ (0, import_jsx_runtime210.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(import_ui132.Text, { size: "small", weight: "plus", leading: "compact", children: "Total pending" }),
          /* @__PURE__ */ (0, import_jsx_runtime210.jsx)(import_ui132.Text, { size: "small", weight: "plus", leading: "compact", children: getStylizedAmount(totalPending, currencyCode) })
        ] })
      ] });
    };
  }
});

// src/routes/orders/order-detail/components/order-payment-section/index.ts
var init_order_payment_section2 = __esm({
  "src/routes/orders/order-detail/components/order-payment-section/index.ts"() {
    "use strict";
    init_order_payment_section();
  }
});

// src/routes/orders/order-detail/components/order-activity-section/activity-items.tsx
function ActivityItems(props) {
  const { t: t4 } = (0, import_react_i18next134.useTranslation)();
  const [open, setOpen] = (0, import_react123.useState)(false);
  const itemsToSend = props.itemsToSend;
  const itemsToReturn = props.itemsToReturn;
  const itemsMap = props.itemsMap;
  const title = props.title;
  const handleMouseEnter = () => {
    setOpen(true);
  };
  const handleMouseLeave = () => {
    setOpen(false);
  };
  if (!itemsToSend?.length && !itemsToReturn?.length) {
    return;
  }
  return /* @__PURE__ */ (0, import_jsx_runtime211.jsxs)(import_ui133.Popover, { open, children: [
    /* @__PURE__ */ (0, import_jsx_runtime211.jsx)(
      import_ui133.Popover.Trigger,
      {
        onMouseEnter: handleMouseEnter,
        onMouseLeave: handleMouseLeave,
        autoFocus: false,
        className: "focus-visible:outline-none",
        children: /* @__PURE__ */ (0, import_jsx_runtime211.jsx)(import_ui133.Text, { size: "small", leading: "compact", weight: "plus", children: title })
      }
    ),
    /* @__PURE__ */ (0, import_jsx_runtime211.jsx)(
      import_ui133.Popover.Content,
      {
        align: "center",
        side: "top",
        className: "bg-ui-bg-component max-w-[200px] p-0 focus-visible:outline-none",
        children: /* @__PURE__ */ (0, import_jsx_runtime211.jsxs)("div", { className: "flex flex-col", children: [
          !!itemsToSend?.length && /* @__PURE__ */ (0, import_jsx_runtime211.jsxs)("div", { className: "p-3", children: [
            /* @__PURE__ */ (0, import_jsx_runtime211.jsx)("div", { className: "txt-compact-small-plus mb-1", children: t4("orders.activity.events.common.toSend") }),
            /* @__PURE__ */ (0, import_jsx_runtime211.jsxs)("div", { className: "flex flex-col", children: [
              itemsToSend?.map((item) => {
                const originalItem = itemsMap?.get(item.item_id);
                return /* @__PURE__ */ (0, import_jsx_runtime211.jsxs)("div", { className: "flex items-center gap-x-3", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime211.jsxs)(import_ui133.Text, { size: "small", className: "text-ui-fg-subtle", children: [
                    item.quantity,
                    "x"
                  ] }),
                  /* @__PURE__ */ (0, import_jsx_runtime211.jsx)(Thumbnail, { src: originalItem?.thumbnail }),
                  /* @__PURE__ */ (0, import_jsx_runtime211.jsx)(import_ui133.Text, { className: "txt-compact-small text-ui-fg-subtle truncate", children: `${originalItem?.variant_title} \xB7 ${originalItem?.product_title}` })
                ] }, item.id);
              }),
              /* @__PURE__ */ (0, import_jsx_runtime211.jsx)("div", { className: "flex flex-1 flex-row items-center gap-2" })
            ] })
          ] }),
          !!itemsToReturn?.length && /* @__PURE__ */ (0, import_jsx_runtime211.jsxs)("div", { className: "border-t-2 border-dotted p-3", children: [
            /* @__PURE__ */ (0, import_jsx_runtime211.jsx)("div", { className: "txt-compact-small-plus mb-1", children: t4("orders.activity.events.common.toReturn") }),
            /* @__PURE__ */ (0, import_jsx_runtime211.jsxs)("div", { className: "flex flex-col", children: [
              itemsToReturn?.map((item) => {
                const originalItem = itemsMap?.get(item.item_id);
                return /* @__PURE__ */ (0, import_jsx_runtime211.jsxs)("div", { className: "flex items-center gap-x-3", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime211.jsxs)(import_ui133.Text, { size: "small", className: "text-ui-fg-subtle", children: [
                    item.quantity,
                    "x"
                  ] }),
                  /* @__PURE__ */ (0, import_jsx_runtime211.jsx)(Thumbnail, { src: originalItem?.thumbnail }),
                  /* @__PURE__ */ (0, import_jsx_runtime211.jsx)(import_ui133.Text, { className: "txt-compact-small text-ui-fg-subtle truncate", children: `${originalItem?.variant_title} \xB7 ${originalItem?.product_title}` })
                ] }, item.id);
              }),
              /* @__PURE__ */ (0, import_jsx_runtime211.jsx)("div", { className: "flex flex-1 flex-row items-center gap-2" })
            ] })
          ] })
        ] })
      }
    )
  ] });
}
var import_ui133, import_react123, import_react_i18next134, import_jsx_runtime211, activity_items_default;
var init_activity_items = __esm({
  "src/routes/orders/order-detail/components/order-activity-section/activity-items.tsx"() {
    "use strict";
    import_ui133 = require("@medusajs/ui");
    import_react123 = require("react");
    import_react_i18next134 = require("react-i18next");
    init_thumbnail2();
    import_jsx_runtime211 = require("react/jsx-runtime");
    activity_items_default = ActivityItems;
  }
});

// src/routes/orders/order-detail/components/order-activity-section/order-timeline.tsx
function countItemsChange(actions, itemsMap) {
  let added = 0;
  let removed = 0;
  actions.forEach((action) => {
    if (action.action === "ITEM_ADD") {
      added += action.details.quantity;
    }
    if (action.action === "ITEM_UPDATE") {
      const newQuantity = action.details.quantity;
      const originalQuantity = itemsMap.get(
        action.details.reference_id
      )?.quantity;
      if (typeof originalQuantity === "number") {
        const diff = Math.abs(newQuantity - originalQuantity);
        if (newQuantity > originalQuantity) {
          added += diff;
        }
        if (newQuantity < originalQuantity) {
          removed += diff;
        }
      }
    }
  });
  return [added, removed];
}
function getMissingLineItemIds(order, changes) {
  if (!changes?.length) {
    return [];
  }
  const retIds = /* @__PURE__ */ new Set();
  const existingItemsMap = new Map(order.items.map((item) => [item.id, true]));
  changes.forEach((change) => {
    change.actions.forEach((action) => {
      if (action.details.reference_id.startsWith("ordli_") && !existingItemsMap.has(action.details.reference_id)) {
        retIds.add(action.details.reference_id);
      }
    });
  });
  return Array.from(retIds);
}
var import_ui134, Collapsible4, import_react124, import_react_router_dom63, import_icons67, import_react_i18next135, import_jsx_runtime212, OrderTimeline, useActivityItems, OrderActivityItem, OrderActivityCollapsible, FulfillmentCreatedBody, ReturnBody, ClaimBody, ExchangeBody, OrderEditBody;
var init_order_timeline = __esm({
  "src/routes/orders/order-detail/components/order-activity-section/order-timeline.tsx"() {
    "use strict";
    import_ui134 = require("@medusajs/ui");
    Collapsible4 = __toESM(require("@radix-ui/react-collapsible"));
    import_react124 = require("react");
    import_react_router_dom63 = require("react-router-dom");
    import_icons67 = require("@medusajs/icons");
    import_react_i18next135 = require("react-i18next");
    init_api();
    init_claims();
    init_exchanges();
    init_returns();
    init_use_date();
    init_money_amount_helpers();
    init_order_payment_section2();
    init_activity_items();
    import_jsx_runtime212 = require("react/jsx-runtime");
    OrderTimeline = ({ order }) => {
      const items = useActivityItems(order);
      if (items.length <= 3) {
        return /* @__PURE__ */ (0, import_jsx_runtime212.jsx)("div", { className: "flex flex-col gap-y-0.5", children: items.map((item, index2) => {
          return /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(
            OrderActivityItem,
            {
              title: item.title,
              timestamp: item.timestamp,
              isFirst: index2 === items.length - 1,
              itemsToSend: item.itemsToSend,
              itemsToReturn: item.itemsToReturn,
              itemsMap: item.itemsMap,
              children: item.children
            },
            index2
          );
        }) });
      }
      const lastItems = items.slice(0, 2);
      const collapsibleItems = items.slice(2, items.length - 1);
      const firstItem = items[items.length - 1];
      return /* @__PURE__ */ (0, import_jsx_runtime212.jsxs)("div", { className: "flex flex-col gap-y-0.5", children: [
        lastItems.map((item, index2) => {
          return /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(
            OrderActivityItem,
            {
              title: item.title,
              timestamp: item.timestamp,
              itemsToSend: item.itemsToSend,
              itemsToReturn: item.itemsToReturn,
              itemsMap: item.itemsMap,
              children: item.children
            },
            index2
          );
        }),
        /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(OrderActivityCollapsible, { activities: collapsibleItems }),
        /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(
          OrderActivityItem,
          {
            title: firstItem.title,
            timestamp: firstItem.timestamp,
            isFirst: true,
            itemsToSend: firstItem.itemsToSend,
            itemsToReturn: firstItem.itemsToReturn,
            itemsMap: firstItem.itemsMap,
            children: firstItem.children
          }
        )
      ] });
    };
    useActivityItems = (order) => {
      const { t: t4 } = (0, import_react_i18next135.useTranslation)();
      const { order_changes: orderChanges = [] } = useOrderChanges(order.id, {
        change_type: ["edit", "claim", "exchange", "return"]
      });
      const missingLineItemIds = getMissingLineItemIds(order, orderChanges);
      const { order_items: removedLineItems = [] } = useOrderLineItems(
        order.id,
        {
          fields: "+quantity",
          item_id: missingLineItemIds
        },
        {
          enabled: !!orderChanges.length
        }
      );
      const itemsMap = (0, import_react124.useMemo)(() => {
        const _itemsMap = new Map(order?.items?.map((i) => [i.id, i]));
        for (const id2 of missingLineItemIds) {
          const i = removedLineItems.find((i2) => i2.item.id === id2);
          if (i) {
            _itemsMap.set(id2, { ...i.item, quantity: i.quantity });
          }
        }
        return _itemsMap;
      }, [order.items, removedLineItems, missingLineItemIds]);
      const { returns = [] } = useReturns({
        order_id: order.id,
        fields: "+received_at,*items"
      });
      const { claims = [] } = useClaims({
        order_id: order.id,
        fields: "*additional_items"
      });
      const { exchanges = [] } = useExchanges({
        order_id: order.id,
        fields: "*additional_items"
      });
      const payments = getPaymentsFromOrder(order);
      const notes = [];
      const isLoading = false;
      return (0, import_react124.useMemo)(() => {
        if (isLoading) {
          return [];
        }
        const items = [];
        for (const payment of payments) {
          const amount = payment.amount;
          items.push({
            title: t4("orders.activity.events.payment.awaiting"),
            timestamp: payment.created_at,
            children: /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(import_ui134.Text, { size: "small", className: "text-ui-fg-subtle", children: getStylizedAmount(amount, payment.currency_code) })
          });
          if (payment.canceled_at) {
            items.push({
              title: t4("orders.activity.events.payment.canceled"),
              timestamp: payment.canceled_at,
              children: /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(import_ui134.Text, { size: "small", className: "text-ui-fg-subtle", children: getStylizedAmount(amount, payment.currency_code) })
            });
          }
          if (payment.captured_at) {
            items.push({
              title: t4("orders.activity.events.payment.captured"),
              timestamp: payment.captured_at,
              children: /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(import_ui134.Text, { size: "small", className: "text-ui-fg-subtle", children: getStylizedAmount(amount, payment.currency_code) })
            });
          }
          for (const refund of payment.refunds || []) {
            items.push({
              title: t4("orders.activity.events.payment.refunded"),
              timestamp: refund.created_at,
              children: /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(import_ui134.Text, { size: "small", className: "text-ui-fg-subtle", children: getStylizedAmount(
                refund.amount,
                payment.currency_code
              ) })
            });
          }
        }
        for (const fulfillment of order.fulfillments || []) {
          items.push({
            title: t4("orders.activity.events.fulfillment.created"),
            timestamp: fulfillment.created_at,
            children: /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(FulfillmentCreatedBody, { fulfillment })
          });
          if (fulfillment.delivered_at) {
            items.push({
              title: t4("orders.activity.events.fulfillment.delivered"),
              timestamp: fulfillment.delivered_at,
              children: /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(FulfillmentCreatedBody, { fulfillment })
            });
          }
          if (fulfillment.shipped_at) {
            items.push({
              title: t4("orders.activity.events.fulfillment.shipped"),
              timestamp: fulfillment.shipped_at,
              children: /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(FulfillmentCreatedBody, { fulfillment, isShipment: true })
            });
          }
          if (fulfillment.canceled_at) {
            items.push({
              title: t4("orders.activity.events.fulfillment.canceled"),
              timestamp: fulfillment.canceled_at
            });
          }
        }
        const returnMap = /* @__PURE__ */ new Map();
        for (const ret of returns) {
          returnMap.set(ret.id, ret);
          if (ret.claim_id || ret.exchange_id) {
            continue;
          }
          items.push({
            title: t4("orders.activity.events.return.created", {
              returnId: ret.id.slice(-7)
            }),
            timestamp: ret.created_at,
            itemsToReturn: ret?.items,
            itemsMap,
            children: /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(ReturnBody, { orderReturn: ret, isCreated: !ret.canceled_at })
          });
          if (ret.canceled_at) {
            items.push({
              title: t4("orders.activity.events.return.canceled", {
                returnId: ret.id.slice(-7)
              }),
              timestamp: ret.canceled_at
            });
          }
          if (ret.status === "received" || ret.status === "partially_received") {
            items.push({
              title: t4("orders.activity.events.return.received", {
                returnId: ret.id.slice(-7)
              }),
              timestamp: ret.received_at,
              itemsToReturn: ret?.items,
              itemsMap,
              children: /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(ReturnBody, { orderReturn: ret, isReceived: true })
            });
          }
        }
        for (const claim of claims) {
          const claimReturn = returnMap.get(claim.return_id);
          items.push({
            title: t4(
              claim.canceled_at ? "orders.activity.events.claim.canceled" : "orders.activity.events.claim.created",
              {
                claimId: claim.id.slice(-7)
              }
            ),
            timestamp: claim.canceled_at || claim.created_at,
            itemsToSend: claim.additional_items,
            itemsToReturn: claimReturn?.items,
            itemsMap,
            children: /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(ClaimBody, { claim, claimReturn })
          });
        }
        for (const exchange of exchanges) {
          const exchangeReturn = returnMap.get(exchange.return_id);
          items.push({
            title: t4(
              exchange.canceled_at ? "orders.activity.events.exchange.canceled" : "orders.activity.events.exchange.created",
              {
                exchangeId: exchange.id.slice(-7)
              }
            ),
            timestamp: exchange.canceled_at || exchange.created_at,
            itemsToSend: exchange.additional_items,
            itemsToReturn: exchangeReturn?.items,
            itemsMap,
            children: /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(ExchangeBody, { exchange, exchangeReturn })
          });
        }
        for (const edit of orderChanges.filter((oc) => oc.change_type === "edit")) {
          const isConfirmed = edit.status === "confirmed";
          const isPending = edit.status === "pending";
          if (isPending) {
            continue;
          }
          items.push({
            title: t4(`orders.activity.events.edit.${edit.status}`, {
              editId: edit.id.slice(-7)
            }),
            timestamp: edit.status === "requested" ? edit.requested_at : edit.status === "declined" ? edit.declined_at : edit.status === "canceled" ? edit.canceled_at : edit.created_at,
            children: isConfirmed ? /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(OrderEditBody, { edit, itemsMap }) : null
          });
        }
        if (order.canceled_at) {
          items.push({
            title: t4("orders.activity.events.canceled.title"),
            timestamp: order.canceled_at
          });
        }
        const sortedActivities = items.sort((a, b) => {
          return new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime();
        });
        const createdAt = {
          title: t4("orders.activity.events.placed.title"),
          timestamp: order.created_at,
          children: /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(import_ui134.Text, { size: "small", className: "text-ui-fg-subtle", children: getStylizedAmount(order.total, order.currency_code) })
        };
        return [...sortedActivities, createdAt];
      }, [
        order,
        payments,
        returns,
        exchanges,
        orderChanges,
        notes,
        isLoading,
        itemsMap
      ]);
    };
    OrderActivityItem = ({
      title,
      timestamp,
      isFirst = false,
      children,
      itemsToSend,
      itemsToReturn,
      itemsMap
    }) => {
      const { getFullDate, getRelativeDate } = useDate();
      return /* @__PURE__ */ (0, import_jsx_runtime212.jsxs)("div", { className: "grid grid-cols-[20px_1fr] items-start gap-2", children: [
        /* @__PURE__ */ (0, import_jsx_runtime212.jsxs)("div", { className: "flex size-full flex-col items-center gap-y-0.5", children: [
          /* @__PURE__ */ (0, import_jsx_runtime212.jsx)("div", { className: "flex size-5 items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime212.jsx)("div", { className: "bg-ui-bg-base shadow-borders-base flex size-2.5 items-center justify-center rounded-full", children: /* @__PURE__ */ (0, import_jsx_runtime212.jsx)("div", { className: "bg-ui-tag-neutral-icon size-1.5 rounded-full" }) }) }),
          !isFirst && /* @__PURE__ */ (0, import_jsx_runtime212.jsx)("div", { className: "bg-ui-border-base w-px flex-1" })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime212.jsxs)(
          "div",
          {
            className: (0, import_ui134.clx)({
              "pb-4": !isFirst
            }),
            children: [
              /* @__PURE__ */ (0, import_jsx_runtime212.jsxs)("div", { className: "flex items-center justify-between", children: [
                itemsToSend?.length || itemsToReturn?.length ? /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(
                  activity_items_default,
                  {
                    title,
                    itemsToSend,
                    itemsToReturn,
                    itemsMap
                  },
                  title
                ) : /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(import_ui134.Text, { size: "small", leading: "compact", weight: "plus", children: title }),
                timestamp && /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(
                  import_ui134.Tooltip,
                  {
                    content: getFullDate({ date: timestamp, includeTime: true }),
                    children: /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(
                      import_ui134.Text,
                      {
                        size: "small",
                        leading: "compact",
                        className: "text-ui-fg-subtle text-right",
                        children: getRelativeDate(timestamp)
                      }
                    )
                  }
                )
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime212.jsx)("div", { children })
            ]
          }
        )
      ] });
    };
    OrderActivityCollapsible = ({
      activities
    }) => {
      const [open, setOpen] = (0, import_react124.useState)(false);
      const { t: t4 } = (0, import_react_i18next135.useTranslation)();
      if (!activities.length) {
        return null;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime212.jsxs)(Collapsible4.Root, { open, onOpenChange: setOpen, children: [
        !open && /* @__PURE__ */ (0, import_jsx_runtime212.jsxs)("div", { className: "grid grid-cols-[20px_1fr] items-start gap-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime212.jsx)("div", { className: "flex size-full flex-col items-center", children: /* @__PURE__ */ (0, import_jsx_runtime212.jsx)("div", { className: "border-ui-border-strong w-px flex-1 bg-[linear-gradient(var(--border-strong)_33%,rgba(255,255,255,0)_0%)] bg-[length:1px_3px] bg-right bg-repeat-y" }) }),
          /* @__PURE__ */ (0, import_jsx_runtime212.jsx)("div", { className: "pb-4", children: /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(Collapsible4.Trigger, { className: "text-left", children: /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(
            import_ui134.Text,
            {
              size: "small",
              leading: "compact",
              weight: "plus",
              className: "text-ui-fg-muted",
              children: t4("orders.activity.showMoreActivities", {
                count: activities.length
              })
            }
          ) }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(Collapsible4.Content, { children: /* @__PURE__ */ (0, import_jsx_runtime212.jsx)("div", { className: "flex flex-col gap-y-0.5", children: activities.map((item, index2) => {
          return /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(
            OrderActivityItem,
            {
              title: item.title,
              timestamp: item.timestamp,
              itemsToSend: item.itemsToSend,
              itemsToReturn: item.itemsToReturn,
              itemsMap: item.itemsMap,
              children: item.children
            },
            index2
          );
        }) }) })
      ] });
    };
    FulfillmentCreatedBody = ({
      fulfillment
    }) => {
      const { t: t4 } = (0, import_react_i18next135.useTranslation)();
      const numberOfItems = fulfillment.items.reduce((acc, item) => {
        return acc + item.quantity;
      }, 0);
      return /* @__PURE__ */ (0, import_jsx_runtime212.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(import_ui134.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("orders.activity.events.fulfillment.items", {
        count: numberOfItems
      }) }) });
    };
    ReturnBody = ({
      orderReturn,
      isCreated,
      isReceived
    }) => {
      const prompt = (0, import_ui134.usePrompt)();
      const { t: t4 } = (0, import_react_i18next135.useTranslation)();
      const { mutateAsync: cancelReturnRequest } = useCancelReturn(
        orderReturn.id,
        orderReturn.order_id
      );
      const onCancel = async () => {
        const res = await prompt({
          title: t4("orders.returns.cancel.title"),
          description: t4("orders.returns.cancel.description"),
          confirmText: t4("actions.confirm"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await cancelReturnRequest();
      };
      const numberOfItems = orderReturn.items.reduce((acc, item) => {
        return acc + (isReceived ? item.received_quantity : item.quantity);
      }, 0);
      return /* @__PURE__ */ (0, import_jsx_runtime212.jsxs)("div", { className: "flex items-start gap-1", children: [
        /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(import_ui134.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("orders.activity.events.return.items", {
          count: numberOfItems
        }) }),
        isCreated && /* @__PURE__ */ (0, import_jsx_runtime212.jsxs)(import_jsx_runtime212.Fragment, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime212.jsx)("div", { className: "mt-[2px] flex items-center leading-none", children: "\u22C5" }),
          /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(
            import_ui134.Button,
            {
              onClick: onCancel,
              className: "text-ui-fg-subtle h-auto px-0 leading-none hover:bg-transparent",
              variant: "transparent",
              size: "small",
              children: t4("actions.cancel")
            }
          )
        ] })
      ] });
    };
    ClaimBody = ({
      claim,
      claimReturn
    }) => {
      const prompt = (0, import_ui134.usePrompt)();
      const { t: t4 } = (0, import_react_i18next135.useTranslation)();
      const isCanceled = !!claim.created_at;
      const { mutateAsync: cancelClaim } = useCancelClaim(claim.id, claim.order_id);
      const onCancel = async () => {
        const res = await prompt({
          title: t4("orders.claims.cancel.title"),
          description: t4("orders.claims.cancel.description"),
          confirmText: t4("actions.confirm"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await cancelClaim();
      };
      const outboundItems = (claim.additional_items || []).reduce(
        (acc, item) => acc + item.quantity,
        0
      );
      const inboundItems = (claimReturn?.items || []).reduce(
        (acc, item) => acc + item.quantity,
        0
      );
      return /* @__PURE__ */ (0, import_jsx_runtime212.jsxs)("div", { children: [
        outboundItems > 0 && /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(import_ui134.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("orders.activity.events.claim.itemsInbound", {
          count: outboundItems
        }) }),
        inboundItems > 0 && /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(import_ui134.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("orders.activity.events.claim.itemsOutbound", {
          count: inboundItems
        }) }),
        !isCanceled && /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(
          import_ui134.Button,
          {
            onClick: onCancel,
            className: "text-ui-fg-subtle h-auto px-0 leading-none hover:bg-transparent",
            variant: "transparent",
            size: "small",
            children: t4("actions.cancel")
          }
        )
      ] });
    };
    ExchangeBody = ({
      exchange,
      exchangeReturn
    }) => {
      const prompt = (0, import_ui134.usePrompt)();
      const { t: t4 } = (0, import_react_i18next135.useTranslation)();
      const isCanceled = !!exchange.canceled_at;
      const { mutateAsync: cancelExchange } = useCancelExchange(
        exchange.id,
        exchange.order_id
      );
      const onCancel = async () => {
        const res = await prompt({
          title: t4("orders.exchanges.cancel.title"),
          description: t4("orders.exchanges.cancel.description"),
          confirmText: t4("actions.confirm"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await cancelExchange();
      };
      const outboundItems = (exchange.additional_items || []).reduce(
        (acc, item) => acc + item.quantity,
        0
      );
      const inboundItems = (exchangeReturn?.items || []).reduce(
        (acc, item) => acc + item.quantity,
        0
      );
      return /* @__PURE__ */ (0, import_jsx_runtime212.jsxs)("div", { children: [
        outboundItems > 0 && /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(import_ui134.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("orders.activity.events.exchange.itemsInbound", {
          count: outboundItems
        }) }),
        inboundItems > 0 && /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(import_ui134.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("orders.activity.events.exchange.itemsOutbound", {
          count: inboundItems
        }) }),
        !isCanceled && /* @__PURE__ */ (0, import_jsx_runtime212.jsx)(
          import_ui134.Button,
          {
            onClick: onCancel,
            className: "text-ui-fg-subtle h-auto px-0 leading-none hover:bg-transparent",
            variant: "transparent",
            size: "small",
            children: t4("actions.cancel")
          }
        )
      ] });
    };
    OrderEditBody = ({
      edit,
      itemsMap
    }) => {
      const { t: t4 } = (0, import_react_i18next135.useTranslation)();
      const [itemsAdded, itemsRemoved] = (0, import_react124.useMemo)(
        () => countItemsChange(edit.actions, itemsMap),
        [edit, itemsMap]
      );
      return /* @__PURE__ */ (0, import_jsx_runtime212.jsxs)("div", { children: [
        itemsAdded > 0 && /* @__PURE__ */ (0, import_jsx_runtime212.jsxs)(import_ui134.Text, { size: "small", className: "text-ui-fg-subtle", children: [
          t4("labels.added"),
          ": ",
          itemsAdded
        ] }),
        itemsRemoved > 0 && /* @__PURE__ */ (0, import_jsx_runtime212.jsxs)(import_ui134.Text, { size: "small", className: "text-ui-fg-subtle", children: [
          t4("labels.removed"),
          ": ",
          itemsRemoved
        ] })
      ] });
    };
  }
});

// src/routes/orders/order-detail/components/order-activity-section/order-activity-section.tsx
var import_ui135, import_react_i18next136, import_jsx_runtime213, OrderActivitySection;
var init_order_activity_section = __esm({
  "src/routes/orders/order-detail/components/order-activity-section/order-activity-section.tsx"() {
    "use strict";
    import_ui135 = require("@medusajs/ui");
    import_react_i18next136 = require("react-i18next");
    init_order_timeline();
    import_jsx_runtime213 = require("react/jsx-runtime");
    OrderActivitySection = ({ order }) => {
      const { t: t4 } = (0, import_react_i18next136.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime213.jsxs)(import_ui135.Container, { className: "flex flex-col gap-y-8 px-6 py-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime213.jsx)("div", { className: "flex flex-col gap-y-4", children: /* @__PURE__ */ (0, import_jsx_runtime213.jsx)("div", { className: "flex items-center justify-between", children: /* @__PURE__ */ (0, import_jsx_runtime213.jsx)(import_ui135.Heading, { level: "h2", children: t4("orders.activity.header") }) }) }),
        /* @__PURE__ */ (0, import_jsx_runtime213.jsx)(OrderTimeline, { order })
      ] });
    };
  }
});

// src/routes/orders/order-detail/components/order-activity-section/index.ts
var init_order_activity_section2 = __esm({
  "src/routes/orders/order-detail/components/order-activity-section/index.ts"() {
    "use strict";
    init_order_activity_section();
  }
});

// src/components/common/customer-info/customer-info.tsx
var import_ui136, import_react_i18next137, import_react_router_dom64, import_jsx_runtime214, ID2, Company, Contact, AddressPrint, Addresses, CustomerInfo, getOrderCustomer;
var init_customer_info = __esm({
  "src/components/common/customer-info/customer-info.tsx"() {
    "use strict";
    import_ui136 = require("@medusajs/ui");
    import_react_i18next137 = require("react-i18next");
    import_react_router_dom64 = require("react-router-dom");
    init_addresses();
    import_jsx_runtime214 = require("react/jsx-runtime");
    ID2 = ({ data }) => {
      const { t: t4 } = (0, import_react_i18next137.useTranslation)();
      const id2 = data.customer_id;
      const name = getOrderCustomer(data);
      const email = data.email;
      const fallback = (name || email || "").charAt(0).toUpperCase();
      return /* @__PURE__ */ (0, import_jsx_runtime214.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime214.jsx)(import_ui136.Text, { size: "small", leading: "compact", weight: "plus", children: t4("fields.id") }),
        /* @__PURE__ */ (0, import_jsx_runtime214.jsx)(
          import_react_router_dom64.Link,
          {
            to: `/customers/${id2}`,
            className: "focus:shadow-borders-focus rounded-[4px] outline-none transition-shadow",
            children: /* @__PURE__ */ (0, import_jsx_runtime214.jsxs)("div", { className: "flex items-center gap-x-2 overflow-hidden", children: [
              /* @__PURE__ */ (0, import_jsx_runtime214.jsx)(import_ui136.Avatar, { size: "2xsmall", fallback }),
              /* @__PURE__ */ (0, import_jsx_runtime214.jsx)(
                import_ui136.Text,
                {
                  size: "small",
                  leading: "compact",
                  className: "text-ui-fg-subtle hover:text-ui-fg-base transition-fg truncate",
                  children: name || email
                }
              )
            ] })
          }
        )
      ] });
    };
    Company = ({ data }) => {
      const { t: t4 } = (0, import_react_i18next137.useTranslation)();
      const company = data.shipping_address?.company || data.billing_address?.company;
      if (!company) {
        return null;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime214.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime214.jsx)(import_ui136.Text, { size: "small", leading: "compact", weight: "plus", children: t4("fields.company") }),
        /* @__PURE__ */ (0, import_jsx_runtime214.jsx)(import_ui136.Text, { size: "small", leading: "compact", className: "truncate", children: company })
      ] });
    };
    Contact = ({ data }) => {
      const { t: t4 } = (0, import_react_i18next137.useTranslation)();
      const phone = data.shipping_address?.phone || data.billing_address?.phone;
      const email = data.email || "";
      return /* @__PURE__ */ (0, import_jsx_runtime214.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-start px-6 py-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime214.jsx)(import_ui136.Text, { size: "small", leading: "compact", weight: "plus", children: t4("orders.customer.contactLabel") }),
        /* @__PURE__ */ (0, import_jsx_runtime214.jsxs)("div", { className: "flex flex-col gap-y-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime214.jsxs)("div", { className: "grid grid-cols-[1fr_20px] items-start gap-x-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime214.jsx)(
              import_ui136.Text,
              {
                size: "small",
                leading: "compact",
                className: "text-pretty break-all",
                children: email
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime214.jsx)("div", { className: "flex justify-end", children: /* @__PURE__ */ (0, import_jsx_runtime214.jsx)(import_ui136.Copy, { content: email, className: "text-ui-fg-muted" }) })
          ] }),
          phone && /* @__PURE__ */ (0, import_jsx_runtime214.jsxs)("div", { className: "grid grid-cols-[1fr_20px] items-start gap-x-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime214.jsx)(
              import_ui136.Text,
              {
                size: "small",
                leading: "compact",
                className: "text-pretty break-all",
                children: phone
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime214.jsx)("div", { className: "flex justify-end", children: /* @__PURE__ */ (0, import_jsx_runtime214.jsx)(import_ui136.Copy, { content: email, className: "text-ui-fg-muted" }) })
          ] })
        ] })
      ] });
    };
    AddressPrint = ({
      address,
      type
    }) => {
      const { t: t4 } = (0, import_react_i18next137.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime214.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-start px-6 py-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime214.jsx)(import_ui136.Text, { size: "small", leading: "compact", weight: "plus", children: type === "shipping" ? t4("addresses.shippingAddress.label") : t4("addresses.billingAddress.label") }),
        address ? /* @__PURE__ */ (0, import_jsx_runtime214.jsxs)("div", { className: "grid grid-cols-[1fr_20px] items-start gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime214.jsx)(import_ui136.Text, { size: "small", leading: "compact", children: getFormattedAddress({ address }).map((line, i) => {
            return /* @__PURE__ */ (0, import_jsx_runtime214.jsxs)("span", { className: "break-words", children: [
              line,
              /* @__PURE__ */ (0, import_jsx_runtime214.jsx)("br", {})
            ] }, i);
          }) }),
          /* @__PURE__ */ (0, import_jsx_runtime214.jsx)("div", { className: "flex justify-end", children: /* @__PURE__ */ (0, import_jsx_runtime214.jsx)(
            import_ui136.Copy,
            {
              content: getFormattedAddress({ address }).join("\n"),
              className: "text-ui-fg-muted"
            }
          ) })
        ] }) : /* @__PURE__ */ (0, import_jsx_runtime214.jsx)(import_ui136.Text, { size: "small", leading: "compact", children: "-" })
      ] });
    };
    Addresses = ({ data }) => {
      const { t: t4 } = (0, import_react_i18next137.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime214.jsxs)("div", { className: "divide-y", children: [
        /* @__PURE__ */ (0, import_jsx_runtime214.jsx)(AddressPrint, { address: data.shipping_address, type: "shipping" }),
        !isSameAddress(data.shipping_address, data.billing_address) ? /* @__PURE__ */ (0, import_jsx_runtime214.jsx)(AddressPrint, { address: data.billing_address, type: "billing" }) : /* @__PURE__ */ (0, import_jsx_runtime214.jsxs)("div", { className: "grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime214.jsx)(
            import_ui136.Text,
            {
              size: "small",
              leading: "compact",
              weight: "plus",
              className: "text-ui-fg-subtle",
              children: t4("addresses.billingAddress.label")
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime214.jsx)(import_ui136.Text, { size: "small", leading: "compact", className: "text-ui-fg-muted", children: t4("addresses.billingAddress.sameAsShipping") })
        ] })
      ] });
    };
    CustomerInfo = Object.assign(
      {},
      {
        ID: ID2,
        Company,
        Contact,
        Addresses
      }
    );
    getOrderCustomer = (obj) => {
      const { first_name: sFirstName, last_name: sLastName } = obj.shipping_address || {};
      const { first_name: bFirstName, last_name: bLastName } = obj.billing_address || {};
      const { first_name: cFirstName, last_name: cLastName } = obj.customer || {};
      const customerName = [cFirstName, cLastName].filter(Boolean).join(" ");
      const shippingName = [sFirstName, sLastName].filter(Boolean).join(" ");
      const billingName = [bFirstName, bLastName].filter(Boolean).join(" ");
      const name = customerName || shippingName || billingName;
      return name;
    };
  }
});

// src/components/common/customer-info/index.ts
var init_customer_info2 = __esm({
  "src/components/common/customer-info/index.ts"() {
    "use strict";
    init_customer_info();
  }
});

// src/routes/orders/order-detail/components/order-customer-section/order-customer-section.tsx
var import_ui137, import_react_i18next138, import_icons68, import_jsx_runtime215, OrderCustomerSection, Header9;
var init_order_customer_section = __esm({
  "src/routes/orders/order-detail/components/order-customer-section/order-customer-section.tsx"() {
    "use strict";
    import_ui137 = require("@medusajs/ui");
    import_react_i18next138 = require("react-i18next");
    import_icons68 = require("@medusajs/icons");
    init_action_menu2();
    init_customer_info2();
    import_jsx_runtime215 = require("react/jsx-runtime");
    OrderCustomerSection = ({ order }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime215.jsxs)(import_ui137.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime215.jsx)(Header9, {}),
        /* @__PURE__ */ (0, import_jsx_runtime215.jsx)(CustomerInfo.ID, { data: order }),
        /* @__PURE__ */ (0, import_jsx_runtime215.jsx)(CustomerInfo.Contact, { data: order }),
        /* @__PURE__ */ (0, import_jsx_runtime215.jsx)(CustomerInfo.Company, { data: order }),
        /* @__PURE__ */ (0, import_jsx_runtime215.jsx)(CustomerInfo.Addresses, { data: order })
      ] });
    };
    Header9 = () => {
      const { t: t4 } = (0, import_react_i18next138.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime215.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime215.jsx)(import_ui137.Heading, { level: "h2", children: t4("fields.customer") }),
        /* @__PURE__ */ (0, import_jsx_runtime215.jsx)(
          ActionMenu,
          {
            groups: [
              {
                actions: [
                  {
                    label: t4("transferOwnership.label"),
                    to: `transfer-ownership`,
                    icon: /* @__PURE__ */ (0, import_jsx_runtime215.jsx)(import_icons68.ArrowPath, {})
                  }
                ]
              },
              {
                actions: [
                  {
                    label: t4("addresses.shippingAddress.editLabel"),
                    to: "shipping-address",
                    icon: /* @__PURE__ */ (0, import_jsx_runtime215.jsx)(import_icons68.FlyingBox, {})
                  },
                  {
                    label: t4("addresses.billingAddress.editLabel"),
                    to: "billing-address",
                    icon: /* @__PURE__ */ (0, import_jsx_runtime215.jsx)(import_icons68.CurrencyDollar, {})
                  }
                ]
              },
              {
                actions: [
                  {
                    label: t4("email.editLabel"),
                    to: `email`,
                    icon: /* @__PURE__ */ (0, import_jsx_runtime215.jsx)(import_icons68.Envelope, {})
                  }
                ]
              }
            ]
          }
        )
      ] });
    };
  }
});

// src/routes/orders/order-detail/components/order-customer-section/index.ts
var init_order_customer_section2 = __esm({
  "src/routes/orders/order-detail/components/order-customer-section/index.ts"() {
    "use strict";
    init_order_customer_section();
  }
});

// src/lib/format-provider.ts
var formatProvider;
var init_format_provider = __esm({
  "src/lib/format-provider.ts"() {
    "use strict";
    formatProvider = (id2) => {
      const [_, name, type] = id2.split("_");
      return name.split("-").map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(" ") + (type ? ` (${type.toUpperCase()})` : "");
    };
  }
});

// src/routes/orders/order-detail/components/order-fulfillment-section/order-fulfillment-section.tsx
var import_icons69, import_ui138, import_date_fns4, import_react_i18next139, import_react_router_dom65, import_jsx_runtime216, OrderFulfillmentSection, UnfulfilledItem, UnfulfilledItemBreakdown, UnfulfilledItemDisplay, Fulfillment;
var init_order_fulfillment_section = __esm({
  "src/routes/orders/order-detail/components/order-fulfillment-section/order-fulfillment-section.tsx"() {
    "use strict";
    import_icons69 = require("@medusajs/icons");
    import_ui138 = require("@medusajs/ui");
    import_date_fns4 = require("date-fns");
    import_react_i18next139 = require("react-i18next");
    import_react_router_dom65 = require("react-router-dom");
    init_action_menu2();
    init_skeleton2();
    init_thumbnail2();
    init_orders();
    init_stock_locations();
    init_format_provider();
    init_money_amount_helpers();
    import_jsx_runtime216 = require("react/jsx-runtime");
    OrderFulfillmentSection = ({
      order
    }) => {
      const fulfillments = order.fulfillments || [];
      return /* @__PURE__ */ (0, import_jsx_runtime216.jsxs)("div", { className: "flex flex-col gap-y-3", children: [
        /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(UnfulfilledItemBreakdown, { order }),
        fulfillments.map((f, index2) => /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(Fulfillment, { index: index2, fulfillment: f, order }, f.id))
      ] });
    };
    UnfulfilledItem = ({
      item,
      currencyCode
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime216.jsxs)(
        "div",
        {
          className: "text-ui-fg-subtle grid grid-cols-2 items-start px-6 py-4",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime216.jsxs)("div", { className: "flex items-start gap-x-4", children: [
              /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(Thumbnail, { src: item.thumbnail }),
              /* @__PURE__ */ (0, import_jsx_runtime216.jsxs)("div", { children: [
                /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(
                  import_ui138.Text,
                  {
                    size: "small",
                    leading: "compact",
                    weight: "plus",
                    className: "text-ui-fg-base",
                    children: item.title
                  }
                ),
                item.variant.sku && /* @__PURE__ */ (0, import_jsx_runtime216.jsxs)("div", { className: "flex items-center gap-x-1", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(import_ui138.Text, { size: "small", children: item.variant.sku }),
                  /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(import_ui138.Copy, { content: item.variant.sku, className: "text-ui-fg-muted" })
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(import_ui138.Text, { size: "small", children: item.variant.options.map((o) => o.value).join(" \xB7 ") })
              ] })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime216.jsxs)("div", { className: "grid grid-cols-3 items-center gap-x-4", children: [
              /* @__PURE__ */ (0, import_jsx_runtime216.jsx)("div", { className: "flex items-center justify-end", children: /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(import_ui138.Text, { size: "small", children: getLocaleAmount(item.unit_price, currencyCode) }) }),
              /* @__PURE__ */ (0, import_jsx_runtime216.jsx)("div", { className: "flex items-center justify-end", children: /* @__PURE__ */ (0, import_jsx_runtime216.jsxs)(import_ui138.Text, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime216.jsx)("span", { className: "tabular-nums", children: item.quantity - item.detail.fulfilled_quantity }),
                "x"
              ] }) }),
              /* @__PURE__ */ (0, import_jsx_runtime216.jsx)("div", { className: "flex items-center justify-end", children: /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(import_ui138.Text, { size: "small", children: getLocaleAmount(item.subtotal || 0, currencyCode) }) })
            ] })
          ]
        },
        item.id
      );
    };
    UnfulfilledItemBreakdown = ({ order }) => {
      const unfulfilledItemsWithShipping = order.items.filter(
        (i) => i.requires_shipping && i.detail.fulfilled_quantity < i.quantity
      );
      const unfulfilledItemsWithoutShipping = order.items.filter(
        (i) => !i.requires_shipping && i.detail.fulfilled_quantity < i.quantity
      );
      return /* @__PURE__ */ (0, import_jsx_runtime216.jsxs)(import_jsx_runtime216.Fragment, { children: [
        !!unfulfilledItemsWithShipping.length && /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(
          UnfulfilledItemDisplay,
          {
            order,
            unfulfilledItems: unfulfilledItemsWithShipping,
            requiresShipping: true
          }
        ),
        !!unfulfilledItemsWithoutShipping.length && /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(
          UnfulfilledItemDisplay,
          {
            order,
            unfulfilledItems: unfulfilledItemsWithoutShipping,
            requiresShipping: false
          }
        )
      ] });
    };
    UnfulfilledItemDisplay = ({
      order,
      unfulfilledItems,
      requiresShipping = false
    }) => {
      const { t: t4 } = (0, import_react_i18next139.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime216.jsxs)(import_ui138.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime216.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(import_ui138.Heading, { level: "h2", children: t4("orders.fulfillment.unfulfilledItems") }),
          /* @__PURE__ */ (0, import_jsx_runtime216.jsxs)("div", { className: "flex items-center gap-x-4", children: [
            requiresShipping && /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(import_ui138.StatusBadge, { color: "red", className: "text-nowrap", children: t4("orders.fulfillment.requiresShipping") }),
            /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(import_ui138.StatusBadge, { color: "red", className: "text-nowrap", children: t4("orders.fulfillment.awaitingFulfillmentBadge") }),
            /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(
              ActionMenu,
              {
                groups: [
                  {
                    actions: [
                      {
                        label: t4("orders.fulfillment.fulfillItems"),
                        icon: /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(import_icons69.Buildings, {}),
                        to: `/orders/${order.id}/fulfillment?requires_shipping=${requiresShipping}`
                      }
                    ]
                  }
                ]
              }
            )
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime216.jsx)("div", { children: unfulfilledItems.map((item) => /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(
          UnfulfilledItem,
          {
            item,
            currencyCode: order.currency_code
          },
          item.id
        )) })
      ] });
    };
    Fulfillment = ({
      fulfillment,
      order,
      index: index2
    }) => {
      const { t: t4 } = (0, import_react_i18next139.useTranslation)();
      const prompt = (0, import_ui138.usePrompt)();
      const navigate = (0, import_react_router_dom65.useNavigate)();
      const showLocation = !!fulfillment.location_id;
      const { stock_location, isError, error } = useStockLocation(
        fulfillment.location_id,
        void 0,
        {
          enabled: showLocation
        }
      );
      let statusText = fulfillment.requires_shipping ? "Awaiting shipping" : "Awaiting delivery";
      let statusColor2 = "blue";
      let statusTimestamp = fulfillment.created_at;
      if (fulfillment.canceled_at) {
        statusText = "Canceled";
        statusColor2 = "red";
        statusTimestamp = fulfillment.canceled_at;
      } else if (fulfillment.delivered_at) {
        statusText = "Delivered";
        statusColor2 = "green";
        statusTimestamp = fulfillment.delivered_at;
      } else if (fulfillment.shipped_at) {
        statusText = "Shipped";
        statusColor2 = "green";
        statusTimestamp = fulfillment.shipped_at;
      }
      const { mutateAsync } = useCancelOrderFulfillment(order.id, fulfillment.id);
      const { mutateAsync: markAsDelivered } = useMarkOrderFulfillmentAsDelivered(
        order.id,
        fulfillment.id
      );
      const showShippingButton = !fulfillment.canceled_at && !fulfillment.shipped_at && !fulfillment.delivered_at && fulfillment.requires_shipping;
      const showDeliveryButton = !fulfillment.canceled_at && !fulfillment.delivered_at;
      const handleMarkAsDelivered = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("orders.fulfillment.markAsDeliveredWarning"),
          confirmText: t4("actions.continue"),
          cancelText: t4("actions.cancel"),
          variant: "confirmation"
        });
        if (res) {
          await markAsDelivered(
            {},
            {
              onSuccess: () => {
                import_ui138.toast.success(t4("orders.fulfillment.toast.fulfillmentDelivered"));
              },
              onError: (e) => {
                import_ui138.toast.error(e.message);
              }
            }
          );
        }
      };
      const handleCancel = async () => {
        if (fulfillment.shipped_at) {
          import_ui138.toast.warning(t4("orders.fulfillment.toast.fulfillmentShipped"));
          return;
        }
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("orders.fulfillment.cancelWarning"),
          confirmText: t4("actions.continue"),
          cancelText: t4("actions.cancel")
        });
        if (res) {
          await mutateAsync(void 0, {
            onSuccess: () => {
              import_ui138.toast.success(t4("orders.fulfillment.toast.canceled"));
            },
            onError: (e) => {
              import_ui138.toast.error(e.message);
            }
          });
        }
      };
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime216.jsxs)(import_ui138.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime216.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(import_ui138.Heading, { level: "h2", children: t4("orders.fulfillment.number", {
            number: index2 + 1
          }) }),
          /* @__PURE__ */ (0, import_jsx_runtime216.jsxs)("div", { className: "flex items-center gap-x-4", children: [
            /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(
              import_ui138.Tooltip,
              {
                content: (0, import_date_fns4.format)(
                  new Date(statusTimestamp),
                  "dd MMM, yyyy, HH:mm:ss"
                ),
                children: /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(import_ui138.StatusBadge, { color: statusColor2, className: "text-nowrap", children: statusText })
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(
              ActionMenu,
              {
                groups: [
                  {
                    actions: [
                      {
                        label: t4("actions.cancel"),
                        icon: /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(import_icons69.XCircle, {}),
                        onClick: handleCancel,
                        disabled: !!fulfillment.canceled_at
                      }
                    ]
                  }
                ]
              }
            )
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime216.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-start px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(import_ui138.Text, { size: "small", leading: "compact", weight: "plus", children: t4("orders.fulfillment.itemsLabel") }),
          /* @__PURE__ */ (0, import_jsx_runtime216.jsx)("ul", { children: fulfillment.items.map((f_item) => /* @__PURE__ */ (0, import_jsx_runtime216.jsx)("li", { children: /* @__PURE__ */ (0, import_jsx_runtime216.jsxs)(import_ui138.Text, { size: "small", leading: "compact", children: [
            f_item.quantity,
            "x ",
            f_item.title
          ] }) }, f_item.line_item_id)) })
        ] }),
        showLocation && /* @__PURE__ */ (0, import_jsx_runtime216.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(import_ui138.Text, { size: "small", leading: "compact", weight: "plus", children: t4("orders.fulfillment.shippingFromLabel") }),
          stock_location ? /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(
            import_react_router_dom65.Link,
            {
              to: `/settings/locations/${stock_location.id}`,
              className: "text-ui-fg-interactive hover:text-ui-fg-interactive-hover transition-fg",
              children: /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(import_ui138.Text, { size: "small", leading: "compact", children: stock_location.name })
            }
          ) : /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(Skeleton, { className: "w-16" })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime216.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(import_ui138.Text, { size: "small", leading: "compact", weight: "plus", children: t4("fields.provider") }),
          /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(import_ui138.Text, { size: "small", leading: "compact", children: formatProvider(fulfillment.provider_id) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime216.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-start px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(import_ui138.Text, { size: "small", leading: "compact", weight: "plus", children: t4("orders.fulfillment.trackingLabel") }),
          /* @__PURE__ */ (0, import_jsx_runtime216.jsx)("div", { children: fulfillment.labels && fulfillment.labels.length > 0 ? /* @__PURE__ */ (0, import_jsx_runtime216.jsx)("ul", { children: fulfillment.labels.map((tlink) => {
            const hasUrl = tlink.url && tlink.url.length > 0 && tlink.url !== "#";
            if (hasUrl) {
              return /* @__PURE__ */ (0, import_jsx_runtime216.jsx)("li", { children: /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(
                "a",
                {
                  href: tlink.url,
                  target: "_blank",
                  rel: "noopener noreferrer",
                  className: "text-ui-fg-interactive hover:text-ui-fg-interactive-hover transition-fg",
                  children: /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(import_ui138.Text, { size: "small", leading: "compact", children: tlink.tracking_number })
                }
              ) }, tlink.tracking_number);
            }
            return /* @__PURE__ */ (0, import_jsx_runtime216.jsx)("li", { children: /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(import_ui138.Text, { size: "small", leading: "compact", children: tlink.tracking_number }) }, tlink.tracking_number);
          }) }) : /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(import_ui138.Text, { size: "small", leading: "compact", children: "-" }) })
        ] }),
        (showShippingButton || showDeliveryButton) && /* @__PURE__ */ (0, import_jsx_runtime216.jsxs)("div", { className: "bg-ui-bg-subtle flex items-center justify-end rounded-b-xl px-4 py-4 gap-x-2", children: [
          showDeliveryButton && /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(import_ui138.Button, { onClick: handleMarkAsDelivered, variant: "secondary", children: t4("orders.fulfillment.markAsDelivered") }),
          showShippingButton && /* @__PURE__ */ (0, import_jsx_runtime216.jsx)(
            import_ui138.Button,
            {
              onClick: () => navigate(`./${fulfillment.id}/create-shipment`),
              variant: "secondary",
              children: t4("orders.fulfillment.markAsShipped")
            }
          )
        ] })
      ] });
    };
  }
});

// src/routes/orders/order-detail/components/order-fulfillment-section/index.ts
var init_order_fulfillment_section2 = __esm({
  "src/routes/orders/order-detail/components/order-fulfillment-section/index.ts"() {
    "use strict";
    init_order_fulfillment_section();
  }
});

// src/routes/orders/order-detail/components/order-general-section/order-general-section.tsx
var import_icons70, import_ui139, import_date_fns5, import_react_i18next140, import_jsx_runtime217, OrderGeneralSection, FulfillmentBadge, PaymentBadge;
var init_order_general_section = __esm({
  "src/routes/orders/order-detail/components/order-general-section/order-general-section.tsx"() {
    "use strict";
    import_icons70 = require("@medusajs/icons");
    import_ui139 = require("@medusajs/ui");
    import_date_fns5 = require("date-fns");
    import_react_i18next140 = require("react-i18next");
    init_action_menu2();
    init_orders();
    init_order_helpers();
    import_jsx_runtime217 = require("react/jsx-runtime");
    OrderGeneralSection = ({ order }) => {
      const { t: t4 } = (0, import_react_i18next140.useTranslation)();
      const prompt = (0, import_ui139.usePrompt)();
      const { mutateAsync: cancelOrder } = useCancelOrder(order.id);
      const handleCancel = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("orders.cancelWarning", {
            id: `#${order.display_id}`
          }),
          confirmText: t4("actions.continue"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await cancelOrder(order.id);
      };
      return /* @__PURE__ */ (0, import_jsx_runtime217.jsxs)(import_ui139.Container, { className: "flex items-center justify-between px-6 py-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime217.jsxs)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_runtime217.jsxs)("div", { className: "flex items-center gap-x-1", children: [
            /* @__PURE__ */ (0, import_jsx_runtime217.jsxs)(import_ui139.Heading, { children: [
              "#",
              order.display_id
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime217.jsx)(import_ui139.Copy, { content: `#${order.display_id}`, className: "text-ui-fg-muted" })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime217.jsx)(import_ui139.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("orders.onDateFromSalesChannel", {
            date: (0, import_date_fns5.format)(new Date(order.created_at), "dd MMM, yyyy, HH:mm:ss"),
            salesChannel: order.sales_channel?.name
          }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime217.jsxs)("div", { className: "flex items-center gap-x-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime217.jsxs)("div", { className: "flex items-center gap-x-1.5", children: [
            /* @__PURE__ */ (0, import_jsx_runtime217.jsx)(PaymentBadge, { order }),
            /* @__PURE__ */ (0, import_jsx_runtime217.jsx)(FulfillmentBadge, { order })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime217.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      label: t4("actions.cancel"),
                      onClick: handleCancel,
                      icon: /* @__PURE__ */ (0, import_jsx_runtime217.jsx)(import_icons70.XCircle, {})
                    }
                  ]
                }
              ]
            }
          )
        ] })
      ] });
    };
    FulfillmentBadge = ({ order }) => {
      const { t: t4 } = (0, import_react_i18next140.useTranslation)();
      const { label, color } = getOrderFulfillmentStatus(
        t4,
        order.fulfillment_status
      );
      return /* @__PURE__ */ (0, import_jsx_runtime217.jsx)(import_ui139.StatusBadge, { color, className: "text-nowrap", children: label });
    };
    PaymentBadge = ({ order }) => {
      const { t: t4 } = (0, import_react_i18next140.useTranslation)();
      return null;
      const { label, color } = getOrderPaymentStatus(t4, order.payment_status);
      return /* @__PURE__ */ (0, import_jsx_runtime217.jsx)(import_ui139.StatusBadge, { color, className: "text-nowrap", children: label });
    };
  }
});

// src/routes/orders/order-detail/components/order-general-section/index.ts
var init_order_general_section2 = __esm({
  "src/routes/orders/order-detail/components/order-general-section/index.ts"() {
    "use strict";
    init_order_general_section();
  }
});

// src/components/common/button-menu/button-menu.tsx
var import_ui140, import_react_router_dom66, import_jsx_runtime218, ButtonMenu;
var init_button_menu = __esm({
  "src/components/common/button-menu/button-menu.tsx"() {
    "use strict";
    import_ui140 = require("@medusajs/ui");
    import_react_router_dom66 = require("react-router-dom");
    import_jsx_runtime218 = require("react/jsx-runtime");
    ButtonMenu = ({
      groups,
      children
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime218.jsxs)(import_ui140.DropdownMenu, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime218.jsx)(import_ui140.DropdownMenu.Trigger, { asChild: true, children }),
        /* @__PURE__ */ (0, import_jsx_runtime218.jsx)(import_ui140.DropdownMenu.Content, { children: groups.map((group, index2) => {
          if (!group.actions.length) {
            return null;
          }
          const isLast = index2 === groups.length - 1;
          return /* @__PURE__ */ (0, import_jsx_runtime218.jsxs)(import_ui140.DropdownMenu.Group, { children: [
            group.actions.map((action, index3) => {
              if (action.onClick) {
                return /* @__PURE__ */ (0, import_jsx_runtime218.jsxs)(
                  import_ui140.DropdownMenu.Item,
                  {
                    disabled: action.disabled,
                    onClick: (e) => {
                      e.stopPropagation();
                      action.onClick();
                    },
                    className: (0, import_ui140.clx)(
                      "[&_svg]:text-ui-fg-subtle flex items-center gap-x-2",
                      {
                        "[&_svg]:text-ui-fg-disabled": action.disabled
                      }
                    ),
                    children: [
                      action.icon,
                      /* @__PURE__ */ (0, import_jsx_runtime218.jsx)("span", { children: action.label })
                    ]
                  },
                  index3
                );
              }
              return /* @__PURE__ */ (0, import_jsx_runtime218.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime218.jsx)(
                import_ui140.DropdownMenu.Item,
                {
                  className: (0, import_ui140.clx)(
                    "[&_svg]:text-ui-fg-subtle flex items-center gap-x-2",
                    {
                      "[&_svg]:text-ui-fg-disabled": action.disabled
                    }
                  ),
                  asChild: true,
                  disabled: action.disabled,
                  children: /* @__PURE__ */ (0, import_jsx_runtime218.jsxs)(import_react_router_dom66.Link, { to: action.to, onClick: (e) => e.stopPropagation(), children: [
                    action.icon,
                    /* @__PURE__ */ (0, import_jsx_runtime218.jsx)("span", { children: action.label })
                  ] })
                }
              ) }, index3);
            }),
            !isLast && /* @__PURE__ */ (0, import_jsx_runtime218.jsx)(import_ui140.DropdownMenu.Separator, {})
          ] }, index2);
        }) })
      ] });
    };
  }
});

// src/lib/rma.ts
function getReturnableQuantity(item) {
  const {
    delivered_quantity,
    return_received_quantity,
    return_dismissed_quantity,
    return_requested_quantity
  } = item.detail;
  return delivered_quantity - (return_received_quantity + return_requested_quantity + return_dismissed_quantity);
}
var init_rma = __esm({
  "src/lib/rma.ts"() {
    "use strict";
  }
});

// src/lib/storefront.ts
var MEDUSA_STOREFRONT_URL;
var init_storefront = __esm({
  "src/lib/storefront.ts"() {
    "use strict";
    MEDUSA_STOREFRONT_URL = __STOREFRONT_URL__ ?? "http://localhost:8000";
  }
});

// src/routes/orders/order-detail/components/copy-payment-link/copy-payment-link.tsx
var import_icons71, import_ui141, import_copy_to_clipboard2, import_react125, import_react_i18next141, import_jsx_runtime219, CopyPaymentLink;
var init_copy_payment_link = __esm({
  "src/routes/orders/order-detail/components/copy-payment-link/copy-payment-link.tsx"() {
    "use strict";
    import_icons71 = require("@medusajs/icons");
    import_ui141 = require("@medusajs/ui");
    import_copy_to_clipboard2 = __toESM(require_copy_to_clipboard());
    import_react125 = __toESM(require("react"));
    import_react_i18next141 = require("react-i18next");
    init_money_amount_helpers();
    init_storefront();
    import_jsx_runtime219 = require("react/jsx-runtime");
    CopyPaymentLink = import_react125.default.forwardRef(
      ({ paymentCollection, order }, ref) => {
        const [done, setDone] = (0, import_react125.useState)(false);
        const [open, setOpen] = (0, import_react125.useState)(false);
        const [text, setText] = (0, import_react125.useState)("CopyPaymentLink");
        const { t: t4 } = (0, import_react_i18next141.useTranslation)();
        const copyToClipboard = async (e) => {
          e.stopPropagation();
          setDone(true);
          (0, import_copy_to_clipboard2.default)(
            `${MEDUSA_STOREFRONT_URL}/payment-collection/${paymentCollection.id}`
          );
          setTimeout(() => {
            setDone(false);
          }, 2e3);
        };
        import_react125.default.useEffect(() => {
          if (done) {
            setText(t4("actions.copied"));
            return;
          }
          setTimeout(() => {
            setText(t4("actions.copy"));
          }, 500);
        }, [done]);
        return /* @__PURE__ */ (0, import_jsx_runtime219.jsx)(import_ui141.Tooltip, { content: text, open: done || open, onOpenChange: setOpen, children: /* @__PURE__ */ (0, import_jsx_runtime219.jsxs)(
          import_ui141.Button,
          {
            ref,
            variant: "secondary",
            size: "small",
            "aria-label": "CopyPaymentLink code snippet",
            onClick: copyToClipboard,
            children: [
              done ? /* @__PURE__ */ (0, import_jsx_runtime219.jsx)(import_icons71.CheckCircleSolid, { className: "inline" }) : /* @__PURE__ */ (0, import_jsx_runtime219.jsx)(import_icons71.SquareTwoStack, { className: "inline" }),
              t4("orders.payment.paymentLink", {
                amount: getStylizedAmount(
                  paymentCollection.amount,
                  order?.currency_code
                )
              })
            ]
          }
        ) });
      }
    );
    CopyPaymentLink.displayName = "CopyPaymentLink";
  }
});

// src/components/common/date/index.ts
function formatDate(date3) {
  const value = new Date(date3);
  value.setMinutes(value.getMinutes() - value.getTimezoneOffset());
  const hour12 = Intl.DateTimeFormat().resolvedOptions().hour12;
  const timestampFormat = hour12 ? "dd MMM yyyy hh:MM a" : "dd MMM yyyy HH:MM";
  return (0, import_format2.default)(value, timestampFormat);
}
var import_format2;
var init_date = __esm({
  "src/components/common/date/index.ts"() {
    "use strict";
    import_format2 = __toESM(require("date-fns/format"));
  }
});

// src/routes/orders/order-detail/components/order-summary-section/return-info-popover.tsx
function ReturnInfoPopover({ orderReturn }) {
  const { t: t4 } = (0, import_react_i18next142.useTranslation)();
  const [open, setOpen] = (0, import_react126.useState)(false);
  const handleMouseEnter = () => {
    setOpen(true);
  };
  const handleMouseLeave = () => {
    setOpen(false);
  };
  let returnType = "Return";
  let returnTypeId = orderReturn.id;
  if (orderReturn.claim_id) {
    returnType = "Claim";
    returnTypeId = orderReturn.claim_id;
  }
  if (orderReturn.exchange_id) {
    returnType = "Exchange";
    returnTypeId = orderReturn.exchange_id;
  }
  if (typeof orderReturn !== "object") {
    return;
  }
  return /* @__PURE__ */ (0, import_jsx_runtime220.jsxs)(import_ui142.Popover, { open, children: [
    /* @__PURE__ */ (0, import_jsx_runtime220.jsx)(
      import_ui142.Popover.Trigger,
      {
        onMouseEnter: handleMouseEnter,
        onMouseLeave: handleMouseLeave,
        autoFocus: false,
        className: "focus-visible:outline-none align-sub",
        children: /* @__PURE__ */ (0, import_jsx_runtime220.jsx)(import_icons72.InformationCircleSolid, {})
      }
    ),
    /* @__PURE__ */ (0, import_jsx_runtime220.jsx)(
      import_ui142.Popover.Content,
      {
        align: "center",
        side: "top",
        className: "bg-ui-bg-component focus-visible:outline-none p-2",
        children: /* @__PURE__ */ (0, import_jsx_runtime220.jsxs)("div", { className: "", children: [
          /* @__PURE__ */ (0, import_jsx_runtime220.jsxs)(import_ui142.Badge, { size: "2xsmall", className: "mb-2", rounded: "full", children: [
            returnType,
            ": #",
            returnTypeId.slice(-7)
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime220.jsxs)(import_ui142.Text, { size: "xsmall", children: [
            /* @__PURE__ */ (0, import_jsx_runtime220.jsx)("span", { className: "text-ui-fg-subtle", children: t4(`orders.returns.returnRequested`) }),
            " \xB7 ",
            formatDate(orderReturn.requested_at)
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime220.jsxs)(import_ui142.Text, { size: "xsmall", children: [
            /* @__PURE__ */ (0, import_jsx_runtime220.jsx)("span", { className: "text-ui-fg-subtle", children: t4(`orders.returns.itemReceived`) }),
            " \xB7 ",
            orderReturn.received_at ? formatDate(orderReturn.received_at) : "-"
          ] })
        ] })
      }
    )
  ] });
}
var import_icons72, import_ui142, import_react126, import_react_i18next142, import_jsx_runtime220, return_info_popover_default;
var init_return_info_popover = __esm({
  "src/routes/orders/order-detail/components/order-summary-section/return-info-popover.tsx"() {
    "use strict";
    import_icons72 = require("@medusajs/icons");
    import_ui142 = require("@medusajs/ui");
    import_react126 = require("react");
    import_react_i18next142 = require("react-i18next");
    init_date();
    import_jsx_runtime220 = require("react/jsx-runtime");
    return_info_popover_default = ReturnInfoPopover;
  }
});

// src/routes/orders/order-detail/components/order-summary-section/shipping-info-popover.tsx
function ShippingInfoPopover({ shippingMethod }) {
  const { t: t4 } = (0, import_react_i18next143.useTranslation)();
  const shippingDetail = shippingMethod?.detail;
  if (!shippingDetail) {
    return;
  }
  let rmaType = t4("orders.return");
  let rmaId = shippingDetail.return_id;
  if (shippingDetail.claim_id) {
    rmaType = t4("orders.claim");
    rmaId = shippingDetail.claim_id;
  }
  if (shippingDetail.exchange_id) {
    rmaType = t4("orders.exchange");
    rmaId = shippingDetail.exchange_id;
  }
  if (!rmaId) {
    return;
  }
  return /* @__PURE__ */ (0, import_jsx_runtime221.jsx)(
    import_ui143.Tooltip,
    {
      content: /* @__PURE__ */ (0, import_jsx_runtime221.jsxs)(import_ui143.Badge, { size: "2xsmall", rounded: "full", children: [
        rmaType,
        ": #",
        rmaId.slice(-7)
      ] }),
      children: /* @__PURE__ */ (0, import_jsx_runtime221.jsx)(import_icons73.InformationCircleSolid, { className: "inline-block text-ui-fg-muted ml-1" })
    }
  );
}
var import_icons73, import_ui143, import_react_i18next143, import_jsx_runtime221, shipping_info_popover_default;
var init_shipping_info_popover = __esm({
  "src/routes/orders/order-detail/components/order-summary-section/shipping-info-popover.tsx"() {
    "use strict";
    import_icons73 = require("@medusajs/icons");
    import_ui143 = require("@medusajs/ui");
    import_react_i18next143 = require("react-i18next");
    import_jsx_runtime221 = require("react/jsx-runtime");
    shipping_info_popover_default = ShippingInfoPopover;
  }
});

// src/routes/orders/order-detail/components/order-summary-section/order-summary-section.tsx
var import_react127, import_react_i18next144, import_react_router_dom67, import_icons74, import_ui144, import_jsx_runtime222, OrderSummarySection, Header10, Item4, ItemBreakdown, Cost, CostBreakdown, InventoryKitBreakdown, ReturnBreakdownWithDamages, ReturnBreakdown, ClaimBreakdown, ExchangeBreakdown, Total2;
var init_order_summary_section = __esm({
  "src/routes/orders/order-detail/components/order-summary-section/order-summary-section.tsx"() {
    "use strict";
    import_react127 = require("react");
    import_react_i18next144 = require("react-i18next");
    import_react_router_dom67 = require("react-router-dom");
    import_icons74 = require("@medusajs/icons");
    import_ui144 = require("@medusajs/ui");
    init_action_menu2();
    init_button_menu();
    init_thumbnail2();
    init_claims();
    init_exchanges();
    init_orders();
    init_payment_collections();
    init_reservations();
    init_returns();
    init_use_date();
    init_format_currency();
    init_money_amount_helpers();
    init_payment();
    init_rma();
    init_copy_payment_link();
    init_return_info_popover();
    init_shipping_info_popover();
    import_jsx_runtime222 = require("react/jsx-runtime");
    OrderSummarySection = ({ order }) => {
      const { t: t4 } = (0, import_react_i18next144.useTranslation)();
      const navigate = (0, import_react_router_dom67.useNavigate)();
      const prompt = (0, import_ui144.usePrompt)();
      const { reservations } = useReservationItems(
        {
          line_item_id: order?.items?.map((i) => i.id)
        },
        { enabled: Array.isArray(order?.items) }
      );
      const { order: orderPreview } = useOrderPreview(order.id);
      const { returns = [] } = useReturns({
        status: "requested",
        order_id: order.id,
        fields: "+received_at"
      });
      const receivableReturns = (0, import_react127.useMemo)(
        () => returns.filter((r) => !r.canceled_at),
        [returns]
      );
      const showReturns = !!receivableReturns.length;
      const showAllocateButton = (0, import_react127.useMemo)(() => {
        if (!reservations) {
          return false;
        }
        const reservationsMap = new Map(
          reservations.map((r) => [r.line_item_id, r.id])
        );
        for (const item of order.items) {
          if (item.variant?.manage_inventory) {
            if (item.quantity - item.detail.fulfilled_quantity > 0) {
              if (!reservationsMap.has(item.id)) {
                return true;
              }
            }
          }
        }
        return false;
      }, [reservations]);
      const unpaidPaymentCollection = order.payment_collections.find(
        (pc) => pc.status === "not_paid"
      );
      const { mutateAsync: markAsPaid } = useMarkPaymentCollectionAsPaid(
        order.id,
        unpaidPaymentCollection?.id
      );
      const showPayment = unpaidPaymentCollection && (order?.summary?.pending_difference || 0) > 0;
      const showRefund = (order?.summary?.pending_difference || 0) < 0;
      const handleMarkAsPaid = async (paymentCollection) => {
        const res = await prompt({
          title: t4("orders.payment.markAsPaid"),
          description: t4("orders.payment.markAsPaidPayment", {
            amount: formatCurrency(
              paymentCollection.amount,
              order.currency_code
            )
          }),
          confirmText: t4("actions.confirm"),
          cancelText: t4("actions.cancel"),
          variant: "confirmation"
        });
        if (!res) {
          return;
        }
        await markAsPaid(
          { order_id: order.id },
          {
            onSuccess: () => {
              import_ui144.toast.success(
                t4("orders.payment.markAsPaidPaymentSuccess", {
                  amount: formatCurrency(
                    paymentCollection.amount,
                    order.currency_code
                  )
                })
              );
            },
            onError: (error) => {
              import_ui144.toast.error(error.message);
            }
          }
        );
      };
      return /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)(import_ui144.Container, { className: "divide-y divide-dashed p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(Header10, { order, orderPreview }),
        /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(ItemBreakdown, { order, reservations }),
        /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(CostBreakdown, { order }),
        /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(Total2, { order }),
        (showAllocateButton || showReturns || showPayment || showRefund) && /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)("div", { className: "bg-ui-bg-subtle flex items-center justify-end gap-x-2 rounded-b-xl px-4 py-4", children: [
          showReturns && (receivableReturns.length === 1 ? /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
            import_ui144.Button,
            {
              onClick: () => navigate(
                `/orders/${order.id}/returns/${receivableReturns[0].id}/receive`
              ),
              variant: "secondary",
              size: "small",
              children: t4("orders.returns.receive.action")
            }
          ) : /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
            ButtonMenu,
            {
              groups: [
                {
                  actions: receivableReturns.map((r) => {
                    let id2 = r.id;
                    let returnType = "Return";
                    if (r.exchange_id) {
                      id2 = r.exchange_id;
                      returnType = "Exchange";
                    }
                    if (r.claim_id) {
                      id2 = r.claim_id;
                      returnType = "Claim";
                    }
                    return {
                      label: t4("orders.returns.receive.receiveItems", {
                        id: `#${id2.slice(-7)}`,
                        returnType
                      }),
                      icon: /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_icons74.ArrowLongRight, {}),
                      to: `/orders/${order.id}/returns/${r.id}/receive`
                    };
                  })
                }
              ],
              children: /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_ui144.Button, { variant: "secondary", size: "small", children: t4("orders.returns.receive.action") })
            }
          )),
          showAllocateButton && /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
            import_ui144.Button,
            {
              onClick: () => navigate(`./allocate-items`),
              variant: "secondary",
              children: t4("orders.allocateItems.action")
            }
          ),
          showPayment && /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
            CopyPaymentLink,
            {
              paymentCollection: unpaidPaymentCollection,
              order
            }
          ),
          showPayment && /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
            import_ui144.Button,
            {
              size: "small",
              variant: "secondary",
              onClick: () => handleMarkAsPaid(unpaidPaymentCollection),
              children: t4("orders.payment.markAsPaid")
            }
          ),
          showRefund && /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
            import_ui144.Button,
            {
              size: "small",
              variant: "secondary",
              onClick: () => navigate(`/orders/${order.id}/refund`),
              children: t4("orders.payment.refundAmount", {
                amount: getStylizedAmount(
                  (order?.summary?.pending_difference || 0) * -1,
                  order?.currency_code
                )
              })
            }
          )
        ] })
      ] });
    };
    Header10 = ({
      order,
      orderPreview
    }) => {
      const { t: t4 } = (0, import_react_i18next144.useTranslation)();
      const shouldDisableReturn = order.items.every(
        (i) => !(getReturnableQuantity(i) > 0)
      );
      const isOrderEditActive = orderPreview?.order_change?.change_type === "edit";
      const isOrderEditPending = orderPreview?.order_change?.change_type === "edit" && orderPreview?.order_change?.status === "pending";
      return /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_ui144.Heading, { level: "h2", children: t4("fields.summary") }),
        /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
          ActionMenu,
          {
            groups: [
              {
                actions: [
                  {
                    label: t4(
                      isOrderEditPending ? "orders.summary.editOrderContinue" : "orders.summary.editOrder"
                    ),
                    to: `/orders/${order.id}/edits`,
                    icon: /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_icons74.PencilSquare, {}),
                    disabled: orderPreview?.order_change && orderPreview?.order_change?.change_type !== "edit" || orderPreview?.order_change?.change_type === "edit" && orderPreview?.order_change?.status === "requested"
                  }
                ]
              },
              {
                actions: [
                  {
                    label: t4("orders.returns.create"),
                    to: `/orders/${order.id}/returns`,
                    icon: /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_icons74.ArrowUturnLeft, {}),
                    disabled: shouldDisableReturn || isOrderEditActive || !!orderPreview?.order_change?.exchange_id || !!orderPreview?.order_change?.claim_id
                  },
                  {
                    label: orderPreview?.order_change?.id && orderPreview?.order_change?.exchange_id ? t4("orders.exchanges.manage") : t4("orders.exchanges.create"),
                    to: `/orders/${order.id}/exchanges`,
                    icon: /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_icons74.ArrowPath, {}),
                    disabled: shouldDisableReturn || isOrderEditActive || !!orderPreview?.order_change?.return_id && !!!orderPreview?.order_change?.exchange_id || !!orderPreview?.order_change?.claim_id
                  },
                  {
                    label: orderPreview?.order_change?.id && orderPreview?.order_change?.claim_id ? t4("orders.claims.manage") : t4("orders.claims.create"),
                    to: `/orders/${order.id}/claims`,
                    icon: /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_icons74.ExclamationCircle, {}),
                    disabled: shouldDisableReturn || isOrderEditActive || !!orderPreview?.order_change?.return_id && !!!orderPreview?.order_change?.claim_id || !!orderPreview?.order_change?.exchange_id
                  }
                ]
              }
            ]
          }
        )
      ] });
    };
    Item4 = ({
      item,
      currencyCode,
      reservation,
      returns,
      claims,
      exchanges
    }) => {
      const { t: t4 } = (0, import_react_i18next144.useTranslation)();
      const isInventoryManaged = item.variant?.manage_inventory;
      const hasInventoryKit = isInventoryManaged && (item.variant?.inventory_items?.length || 0) > 1;
      const hasUnfulfilledItems = item.quantity - item.detail.fulfilled_quantity > 0;
      return /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)(import_jsx_runtime222.Fragment, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)(
          "div",
          {
            className: "text-ui-fg-subtle grid grid-cols-2 items-center gap-x-4 px-6 py-4",
            children: [
              /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)("div", { className: "flex items-start gap-x-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(Thumbnail, { src: item.thumbnail }),
                /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)("div", { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
                    import_ui144.Text,
                    {
                      size: "small",
                      leading: "compact",
                      weight: "plus",
                      className: "text-ui-fg-base",
                      children: item.title
                    }
                  ),
                  item.variant_sku && /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)("div", { className: "flex items-center gap-x-1", children: [
                    /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_ui144.Text, { size: "small", children: item.variant_sku }),
                    /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_ui144.Copy, { content: item.variant_sku, className: "text-ui-fg-muted" })
                  ] }),
                  /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_ui144.Text, { size: "small", children: item.variant?.options?.map((o) => o.value).join(" \xB7 ") })
                ] })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)("div", { className: "grid grid-cols-3 items-center gap-x-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("div", { className: "flex items-center justify-end gap-x-4", children: /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_ui144.Text, { size: "small", children: getLocaleAmount(item.unit_price, currencyCode) }) }),
                /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)("div", { className: "flex items-center gap-x-2", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("div", { className: "w-fit min-w-[27px]", children: /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)(import_ui144.Text, { size: "small", children: [
                    /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("span", { className: "tabular-nums", children: item.quantity }),
                    "x"
                  ] }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("div", { className: "overflow-visible", children: isInventoryManaged && hasUnfulfilledItems && /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
                    import_ui144.StatusBadge,
                    {
                      color: reservation ? "green" : "orange",
                      className: "text-nowrap",
                      children: reservation ? t4("orders.reservations.allocatedLabel") : t4("orders.reservations.notAllocatedLabel")
                    }
                  ) })
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("div", { className: "flex items-center justify-end", children: /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_ui144.Text, { size: "small", className: "pt-[1px]", children: getLocaleAmount(item.subtotal || 0, currencyCode) }) })
              ] })
            ]
          },
          item.id
        ),
        hasInventoryKit && /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(InventoryKitBreakdown, { item }),
        returns.map((r) => /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(ReturnBreakdown, { orderReturn: r, itemId: item.id }, r.id)),
        claims.map((claim) => /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(ClaimBreakdown, { claim, itemId: item.id }, claim.id)),
        exchanges.map((exchange) => /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
          ExchangeBreakdown,
          {
            exchange,
            itemId: item.id
          },
          exchange.id
        ))
      ] });
    };
    ItemBreakdown = ({
      order,
      reservations
    }) => {
      const { claims = [] } = useClaims({
        order_id: order.id,
        fields: "*additional_items"
      });
      const { exchanges = [] } = useExchanges({
        order_id: order.id,
        fields: "*additional_items"
      });
      const { returns = [] } = useReturns({
        order_id: order.id,
        fields: "*items,*items.reason"
      });
      const reservationsMap = (0, import_react127.useMemo)(
        () => new Map((reservations || []).map((r) => [r.line_item_id, r])),
        [reservations]
      );
      return /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("div", { children: order.items?.map((item) => {
        const reservation = reservationsMap.get(item.id);
        return /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
          Item4,
          {
            item,
            currencyCode: order.currency_code,
            reservation,
            returns,
            exchanges,
            claims
          },
          item.id
        );
      }) });
    };
    Cost = ({
      label,
      value,
      secondaryValue,
      tooltip
    }) => /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)("div", { className: "grid grid-cols-3 items-center", children: [
      /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)(import_ui144.Text, { size: "small", leading: "compact", children: [
        label,
        " ",
        tooltip
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("div", { className: "text-right", children: /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_ui144.Text, { size: "small", leading: "compact", children: secondaryValue }) }),
      /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("div", { className: "text-right", children: /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_ui144.Text, { size: "small", leading: "compact", children: value }) })
    ] });
    CostBreakdown = ({
      order
    }) => {
      const { t: t4 } = (0, import_react_i18next144.useTranslation)();
      const [isTaxOpen, setIsTaxOpen] = (0, import_react127.useState)(false);
      const [isShippingOpen, setIsShippingOpen] = (0, import_react127.useState)(false);
      const discountCodes = (0, import_react127.useMemo)(() => {
        const codes = /* @__PURE__ */ new Set();
        order.items.forEach(
          (item) => item.adjustments?.forEach((adj) => {
            codes.add(adj.code);
          })
        );
        return Array.from(codes).sort();
      }, [order]);
      const taxCodes = (0, import_react127.useMemo)(() => {
        const taxCodeMap = {};
        order.items.forEach((item) => {
          item.tax_lines?.forEach((line) => {
            taxCodeMap[line.code] = (taxCodeMap[line.code] || 0) + line.total;
          });
        });
        order.shipping_methods.forEach((sm) => {
          sm.tax_lines?.forEach((line) => {
            taxCodeMap[line.code] = (taxCodeMap[line.code] || 0) + line.total;
          });
        });
        return taxCodeMap;
      }, [order]);
      const automaticTaxesOn = !!order.region.automatic_taxes;
      const hasTaxLines = !!Object.keys(taxCodes).length;
      const discountTotal = automaticTaxesOn ? order.discount_total : order.discount_subtotal;
      return /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)("div", { className: "text-ui-fg-subtle flex flex-col gap-y-2 px-6 py-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
          Cost,
          {
            label: t4(
              automaticTaxesOn ? "orders.summary.itemTotal" : "orders.summary.itemSubtotal"
            ),
            value: getLocaleAmount(order.item_total, order.currency_code)
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
          Cost,
          {
            label: /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)(
              "div",
              {
                onClick: () => setIsShippingOpen((o) => !o),
                className: "flex cursor-pointer items-center gap-1",
                children: [
                  /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("span", { children: t4(
                    automaticTaxesOn ? "orders.summary.shippingTotal" : "orders.summary.shippingSubtotal"
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
                    import_icons74.TriangleDownMini,
                    {
                      style: {
                        transform: `rotate(${isShippingOpen ? 0 : -90}deg)`
                      }
                    }
                  )
                ]
              }
            ),
            value: getLocaleAmount(
              automaticTaxesOn ? order.shipping_total : order.shipping_subtotal,
              order.currency_code
            )
          }
        ),
        isShippingOpen && /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("div", { className: "flex flex-col gap-1 pl-5", children: (order.shipping_methods || []).sort(
          (m1, m2) => m1.created_at.localeCompare(m2.created_at)
        ).map((sm, i) => {
          return /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)(
            "div",
            {
              className: "flex items-center justify-between gap-x-2",
              children: [
                /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)("span", { className: "txt-small text-ui-fg-subtle font-medium", children: [
                  sm.name,
                  sm.detail.return_id && ` (${t4("fields.returnShipping")})`,
                  " ",
                  /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(shipping_info_popover_default, { shippingMethod: sm }, i)
                ] }) }),
                /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("div", { className: "relative flex-1", children: /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("div", { className: "bottom-[calc(50% - 2px)] absolute h-[1px] w-full border-b border-dashed" }) }),
                /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("span", { className: "txt-small text-ui-fg-muted", children: getLocaleAmount(
                  automaticTaxesOn ? sm.total : sm.subtotal,
                  order.currency_code
                ) })
              ]
            },
            sm.id
          );
        }) }),
        /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
          Cost,
          {
            label: t4(
              automaticTaxesOn ? "orders.summary.discountTotal" : "orders.summary.discountSubtotal"
            ),
            secondaryValue: discountCodes.join(", "),
            value: discountTotal > 0 ? `- ${getLocaleAmount(discountTotal, order.currency_code)}` : "-"
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)(import_jsx_runtime222.Fragment, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)("div", { className: "flex justify-between", children: [
            /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)(
              "div",
              {
                onClick: () => hasTaxLines && setIsTaxOpen((o) => !o),
                className: (0, import_ui144.clx)("flex items-center gap-1", {
                  "cursor-pointer": hasTaxLines
                }),
                children: [
                  /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("span", { className: "txt-small select-none", children: t4(
                    automaticTaxesOn ? "orders.summary.taxTotalIncl" : "orders.summary.taxTotal"
                  ) }),
                  hasTaxLines && /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
                    import_icons74.TriangleDownMini,
                    {
                      style: {
                        transform: `rotate(${isTaxOpen ? 0 : -90}deg)`
                      }
                    }
                  )
                ]
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("div", { className: "text-right", children: /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_ui144.Text, { size: "small", leading: "compact", children: getLocaleAmount(order.tax_total, order.currency_code) }) })
          ] }),
          isTaxOpen && /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("div", { className: "flex flex-col gap-1 pl-5", children: Object.entries(taxCodes).map(([code, total]) => {
            return /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)(
              "div",
              {
                className: "flex items-center justify-between gap-x-2",
                children: [
                  /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("span", { className: "txt-small text-ui-fg-subtle font-medium", children: code }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("div", { className: "relative flex-1", children: /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("div", { className: "bottom-[calc(50% - 2px)] absolute h-[1px] w-full border-b border-dashed" }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("span", { className: "txt-small text-ui-fg-muted", children: getLocaleAmount(total, order.currency_code) })
                ]
              },
              code
            );
          }) })
        ] })
      ] });
    };
    InventoryKitBreakdown = ({ item }) => {
      const { t: t4 } = (0, import_react_i18next144.useTranslation)();
      const [isOpen, setIsOpen] = (0, import_react127.useState)(false);
      const inventory = item.variant.inventory_items;
      return /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)(import_jsx_runtime222.Fragment, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)(
          "div",
          {
            onClick: () => setIsOpen((o) => !o),
            className: "flex cursor-pointer items-center gap-2 border-t border-dashed px-6 py-4",
            children: [
              /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
                import_icons74.TriangleDownMini,
                {
                  style: {
                    transform: `rotate(${isOpen ? 0 : -90}deg)`
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("span", { className: "text-ui-fg-muted txt-small select-none", children: t4("orders.summary.inventoryKit", { count: inventory.length }) })
            ]
          }
        ),
        isOpen && /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("div", { className: "flex flex-col gap-1 px-6 pb-4", children: inventory.map((i) => {
          return /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)(
            "div",
            {
              className: "flex items-center justify-between gap-x-2",
              children: [
                /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)("span", { className: "txt-small text-ui-fg-subtle font-medium", children: [
                  i.inventory.title,
                  i.inventory.sku && /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)("span", { className: "text-ui-fg-subtle font-normal", children: [
                    " ",
                    "\u22C5 ",
                    i.inventory.sku
                  ] })
                ] }) }),
                /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("div", { className: "relative flex-1", children: /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("div", { className: "bottom-[calc(50% - 2px)] absolute h-[1px] w-full border-b border-dashed" }) }),
                /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)("span", { className: "txt-small text-ui-fg-muted", children: [
                  i.required_quantity,
                  "x"
                ] })
              ]
            },
            i.inventory.id
          );
        }) })
      ] });
    };
    ReturnBreakdownWithDamages = ({
      orderReturn,
      itemId
    }) => {
      const { t: t4 } = (0, import_react_i18next144.useTranslation)();
      const item = orderReturn?.items?.find((ri) => ri.item_id === itemId);
      const damagedQuantity = item?.damaged_quantity || 0;
      return item && /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)(
        "div",
        {
          className: "txt-compact-small-plus text-ui-fg-subtle bg-ui-bg-subtle flex flex-row justify-between gap-y-2 border-t-2 border-dotted px-6 py-4",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)("div", { className: "flex items-center gap-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_icons74.ArrowDownRightMini, { className: "text-ui-fg-muted" }),
              /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_ui144.Text, { size: "small", children: t4(`orders.returns.damagedItemsReturned`, {
                quantity: damagedQuantity
              }) }),
              item?.note && /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_ui144.Tooltip, { content: item.note, children: /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_icons74.DocumentText, { className: "text-ui-tag-neutral-icon ml-1 inline" }) }),
              item?.reason && /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
                import_ui144.Badge,
                {
                  size: "2xsmall",
                  className: "cursor-default select-none capitalize",
                  rounded: "full",
                  children: item?.reason?.label
                }
              )
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)(import_ui144.Text, { size: "small", leading: "compact", className: "text-ui-fg-muted", children: [
              t4(`orders.returns.damagedItemReceived`),
              /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("span", { className: "ml-2", children: /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(return_info_popover_default, { orderReturn }) })
            ] })
          ]
        },
        orderReturn.id
      );
    };
    ReturnBreakdown = ({
      orderReturn,
      itemId
    }) => {
      const { t: t4 } = (0, import_react_i18next144.useTranslation)();
      const { getRelativeDate } = useDate();
      if (!["requested", "received", "partially_received"].includes(
        orderReturn.status || ""
      )) {
        return null;
      }
      const isRequested = orderReturn.status === "requested";
      const item = orderReturn?.items?.find((ri) => ri.item_id === itemId);
      const damagedQuantity = item?.damaged_quantity || 0;
      return item && /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)(import_jsx_runtime222.Fragment, { children: [
        damagedQuantity > 0 && /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
          ReturnBreakdownWithDamages,
          {
            orderReturn,
            itemId
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)(
          "div",
          {
            className: "txt-compact-small-plus text-ui-fg-subtle bg-ui-bg-subtle flex flex-row justify-between gap-y-2 border-t-2 border-dotted px-6 py-4",
            children: [
              /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)("div", { className: "flex items-center gap-2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_icons74.ArrowDownRightMini, { className: "text-ui-fg-muted" }),
                /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_ui144.Text, { size: "small", children: t4(
                  `orders.returns.${isRequested ? "returnRequestedInfo" : "returnReceivedInfo"}`,
                  {
                    requestedItemsCount: item?.[isRequested ? "quantity" : "received_quantity"]
                  }
                ) }),
                item?.note && /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_ui144.Tooltip, { content: item.note, children: /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_icons74.DocumentText, { className: "text-ui-tag-neutral-icon ml-1 inline" }) }),
                item?.reason && /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
                  import_ui144.Badge,
                  {
                    size: "2xsmall",
                    className: "cursor-default select-none capitalize",
                    rounded: "full",
                    children: item?.reason?.label
                  }
                )
              ] }),
              orderReturn && isRequested && /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)(import_ui144.Text, { size: "small", leading: "compact", className: "text-ui-fg-muted", children: [
                getRelativeDate(orderReturn.created_at),
                /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("span", { className: "ml-2", children: /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(return_info_popover_default, { orderReturn }) })
              ] }),
              orderReturn && !isRequested && /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)(import_ui144.Text, { size: "small", leading: "compact", className: "text-ui-fg-muted", children: [
                t4(`orders.returns.itemReceived`),
                /* @__PURE__ */ (0, import_jsx_runtime222.jsx)("span", { className: "ml-2", children: /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(return_info_popover_default, { orderReturn }) })
              ] })
            ]
          },
          item.id
        )
      ] });
    };
    ClaimBreakdown = ({
      claim,
      itemId
    }) => {
      const { t: t4 } = (0, import_react_i18next144.useTranslation)();
      const { getRelativeDate } = useDate();
      const items = claim.additional_items.filter(
        (item) => item.item?.id === itemId
      );
      return !!items.length && /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)(
        "div",
        {
          className: "txt-compact-small-plus text-ui-fg-subtle bg-ui-bg-subtle flex flex-row justify-between gap-y-2 border-b-2 border-t-2 border-dotted px-6 py-4",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)("div", { className: "flex items-center gap-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_icons74.ArrowDownRightMini, { className: "text-ui-fg-muted" }),
              /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_ui144.Text, { size: "small", children: t4(`orders.claims.outboundItemAdded`, {
                itemsCount: items.reduce(
                  (acc, item) => acc = acc + item.quantity,
                  0
                )
              }) })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_ui144.Text, { size: "small", leading: "compact", className: "text-ui-fg-muted", children: getRelativeDate(claim.created_at) })
          ]
        },
        claim.id
      );
    };
    ExchangeBreakdown = ({
      exchange,
      itemId
    }) => {
      const { t: t4 } = (0, import_react_i18next144.useTranslation)();
      const { getRelativeDate } = useDate();
      const items = exchange.additional_items.filter(
        (item) => item?.item?.id === itemId
      );
      return !!items.length && /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)(
        "div",
        {
          className: "txt-compact-small-plus text-ui-fg-subtle bg-ui-bg-subtle flex flex-row justify-between gap-y-2 border-b-2 border-t-2 border-dotted px-6 py-4",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)("div", { className: "flex items-center gap-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_icons74.ArrowDownRightMini, { className: "text-ui-fg-muted" }),
              /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_ui144.Text, { size: "small", children: t4(`orders.exchanges.outboundItemAdded`, {
                itemsCount: items.reduce(
                  (acc, item) => acc = acc + item.quantity,
                  0
                )
              }) })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(import_ui144.Text, { size: "small", leading: "compact", className: "text-ui-fg-muted", children: getRelativeDate(exchange.created_at) })
          ]
        },
        exchange.id
      );
    };
    Total2 = ({ order }) => {
      const { t: t4 } = (0, import_react_i18next144.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)("div", { className: " flex flex-col gap-y-2 px-6 py-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)("div", { className: "text-ui-fg-base flex items-center justify-between", children: [
          /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
            import_ui144.Text,
            {
              weight: "plus",
              className: "text-ui-fg-subtle",
              size: "small",
              leading: "compact",
              children: t4("fields.total")
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
            import_ui144.Text,
            {
              weight: "plus",
              className: "text-ui-fg-subtle",
              size: "small",
              leading: "compact",
              children: getStylizedAmount(order.total, order.currency_code)
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)("div", { className: "text-ui-fg-base flex items-center justify-between", children: [
          /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
            import_ui144.Text,
            {
              weight: "plus",
              className: "text-ui-fg-subtle",
              size: "small",
              leading: "compact",
              children: t4("fields.paidTotal")
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
            import_ui144.Text,
            {
              weight: "plus",
              className: "text-ui-fg-subtle",
              size: "small",
              leading: "compact",
              children: getStylizedAmount(
                getTotalCaptured(order.payment_collections || []),
                order.currency_code
              )
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime222.jsxs)("div", { className: "text-ui-fg-base flex items-center justify-between", children: [
          /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
            import_ui144.Text,
            {
              className: "text-ui-fg-subtle text-semibold",
              size: "small",
              leading: "compact",
              weight: "plus",
              children: t4("orders.returns.outstandingAmount")
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime222.jsx)(
            import_ui144.Text,
            {
              className: "text-ui-fg-subtle text-bold",
              size: "small",
              leading: "compact",
              weight: "plus",
              children: getStylizedAmount(
                order.summary.pending_difference || 0,
                order.currency_code
              )
            }
          )
        ] })
      ] });
    };
  }
});

// src/routes/orders/order-detail/components/order-summary-section/index.ts
var init_order_summary_section2 = __esm({
  "src/routes/orders/order-detail/components/order-summary-section/index.ts"() {
    "use strict";
    init_order_summary_section();
  }
});

// src/routes/orders/order-detail/order-detail.tsx
var import_react_router_dom68, import_jsx_runtime223, OrderDetail;
var init_order_detail = __esm({
  "src/routes/orders/order-detail/order-detail.tsx"() {
    "use strict";
    import_react_router_dom68 = require("react-router-dom");
    init_skeleton2();
    init_pages();
    init_extensions();
    init_orders();
    init_active_order_claim_section2();
    init_active_order_exchange_section2();
    init_active_order_return_section2();
    init_order_active_edit_section2();
    init_order_activity_section2();
    init_order_customer_section2();
    init_order_fulfillment_section2();
    init_order_general_section2();
    init_order_payment_section2();
    init_order_summary_section2();
    init_constants7();
    import_jsx_runtime223 = require("react/jsx-runtime");
    OrderDetail = () => {
      const initialData = (0, import_react_router_dom68.useLoaderData)();
      const { id: id2 } = (0, import_react_router_dom68.useParams)();
      const { getWidgets } = useDashboardExtension();
      const { order, isLoading, isError, error } = useOrder(
        id2,
        {
          fields: DEFAULT_FIELDS2
        },
        {
          initialData
        }
      );
      if (order) {
        order.items = order.items.sort((itemA, itemB) => {
          if (itemA.created_at > itemB.created_at) {
            return 1;
          }
          if (itemA.created_at < itemB.created_at) {
            return -1;
          }
          return 0;
        });
      }
      const { order: orderPreview, isLoading: isPreviewLoading } = useOrderPreview(
        id2
      );
      if (isLoading || !order || isPreviewLoading) {
        return /* @__PURE__ */ (0, import_jsx_runtime223.jsx)(TwoColumnPageSkeleton, { mainSections: 4, sidebarSections: 2, showJSON: true });
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime223.jsxs)(
        TwoColumnPage,
        {
          widgets: {
            after: getWidgets("order.details.after"),
            before: getWidgets("order.details.before"),
            sideAfter: getWidgets("order.details.side.after"),
            sideBefore: getWidgets("order.details.side.before")
          },
          data: order,
          showJSON: true,
          hasOutlet: true,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime223.jsxs)(TwoColumnPage.Main, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime223.jsx)(OrderActiveEditSection, { order }),
              /* @__PURE__ */ (0, import_jsx_runtime223.jsx)(ActiveOrderClaimSection, { orderPreview }),
              /* @__PURE__ */ (0, import_jsx_runtime223.jsx)(ActiveOrderExchangeSection, { orderPreview }),
              /* @__PURE__ */ (0, import_jsx_runtime223.jsx)(ActiveOrderReturnSection, { orderPreview }),
              /* @__PURE__ */ (0, import_jsx_runtime223.jsx)(OrderGeneralSection, { order }),
              /* @__PURE__ */ (0, import_jsx_runtime223.jsx)(OrderSummarySection, { order }),
              /* @__PURE__ */ (0, import_jsx_runtime223.jsx)(OrderPaymentSection, { order }),
              /* @__PURE__ */ (0, import_jsx_runtime223.jsx)(OrderFulfillmentSection, { order })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime223.jsxs)(TwoColumnPage.Sidebar, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime223.jsx)(OrderCustomerSection, { order }),
              /* @__PURE__ */ (0, import_jsx_runtime223.jsx)(OrderActivitySection, { order })
            ] })
          ]
        }
      );
    };
  }
});

// src/routes/orders/order-detail/index.ts
var order_detail_exports = {};
__export(order_detail_exports, {
  Component: () => OrderDetail,
  loader: () => orderLoader
});
var init_order_detail2 = __esm({
  "src/routes/orders/order-detail/index.ts"() {
    "use strict";
    init_loader7();
    init_order_detail();
  }
});

// src/lib/order-item.ts
var getFulfillableQuantity;
var init_order_item = __esm({
  "src/lib/order-item.ts"() {
    "use strict";
    getFulfillableQuantity = (item) => {
      return item.quantity - item.detail.fulfilled_quantity;
    };
  }
});

// src/routes/orders/order-create-fulfillment/components/order-create-fulfillment-form/constants.ts
var import_zod26, CreateFulfillmentSchema;
var init_constants8 = __esm({
  "src/routes/orders/order-create-fulfillment/components/order-create-fulfillment-form/constants.ts"() {
    "use strict";
    import_zod26 = require("zod");
    CreateFulfillmentSchema = import_zod26.z.object({
      quantity: import_zod26.z.record(import_zod26.z.string(), import_zod26.z.number()),
      location_id: import_zod26.z.string(),
      shipping_option_id: import_zod26.z.string().optional(),
      send_notification: import_zod26.z.boolean().optional()
    });
  }
});

// src/routes/orders/order-create-fulfillment/components/order-create-fulfillment-form/order-create-fulfillment-item.tsx
function OrderCreateFulfillmentItem({
  item,
  form,
  locationId,
  itemReservedQuantitiesMap
}) {
  const { t: t4 } = (0, import_react_i18next145.useTranslation)();
  const { variant } = useProductVariant(
    item.variant.product_id,
    item.variant_id,
    {
      fields: "*inventory,*inventory.location_levels"
    }
  );
  const { availableQuantity, inStockQuantity } = (0, import_react128.useMemo)(() => {
    if (!variant || !locationId) {
      return {};
    }
    const { inventory } = variant;
    const locationInventory = inventory[0]?.location_levels?.find(
      (inv) => inv.location_id === locationId
    );
    if (!locationInventory) {
      return {};
    }
    const reservedQuantityForItem = itemReservedQuantitiesMap.get(item.id) ?? 0;
    return {
      availableQuantity: locationInventory.available_quantity + reservedQuantityForItem,
      inStockQuantity: locationInventory.stocked_quantity
    };
  }, [variant, locationId, itemReservedQuantitiesMap]);
  const minValue = 0;
  const maxValue = Math.min(
    getFulfillableQuantity(item),
    availableQuantity || Number.MAX_SAFE_INTEGER
  );
  return /* @__PURE__ */ (0, import_jsx_runtime224.jsx)("div", { className: "bg-ui-bg-subtle shadow-elevation-card-rest my-2 rounded-xl ", children: /* @__PURE__ */ (0, import_jsx_runtime224.jsxs)("div", { className: "flex flex-col gap-x-2 gap-y-2 border-b p-3 text-sm sm:flex-row", children: [
    /* @__PURE__ */ (0, import_jsx_runtime224.jsxs)("div", { className: "flex flex-1 items-center gap-x-3", children: [
      /* @__PURE__ */ (0, import_jsx_runtime224.jsx)(Thumbnail, { src: item.thumbnail }),
      /* @__PURE__ */ (0, import_jsx_runtime224.jsxs)("div", { className: "flex flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime224.jsxs)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_runtime224.jsx)(import_ui145.Text, { className: "txt-small", as: "span", weight: "plus", children: item.title }),
          item.variant?.sku && /* @__PURE__ */ (0, import_jsx_runtime224.jsxs)("span", { children: [
            "(",
            item.variant.sku,
            ")"
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime224.jsx)(import_ui145.Text, { as: "div", className: "text-ui-fg-subtle txt-small", children: item.variant?.title ?? "" })
      ] })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime224.jsxs)("div", { className: "flex flex-1 items-center gap-x-1", children: [
      /* @__PURE__ */ (0, import_jsx_runtime224.jsx)("div", { className: "mr-2 block h-[16px] w-[2px] bg-gray-200" }),
      /* @__PURE__ */ (0, import_jsx_runtime224.jsxs)("div", { className: "text-small flex flex-1 flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime224.jsx)("span", { className: "text-ui-fg-subtle font-medium", children: t4("orders.fulfillment.available") }),
        /* @__PURE__ */ (0, import_jsx_runtime224.jsx)("span", { className: "text-ui-fg-subtle", children: availableQuantity || "N/A" })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime224.jsxs)("div", { className: "flex flex-1 items-center gap-x-1", children: [
        /* @__PURE__ */ (0, import_jsx_runtime224.jsx)("div", { className: "mr-2 block h-[16px] w-[2px] bg-gray-200" }),
        /* @__PURE__ */ (0, import_jsx_runtime224.jsxs)("div", { className: "flex flex-col", children: [
          /* @__PURE__ */ (0, import_jsx_runtime224.jsx)("span", { className: "text-ui-fg-subtle font-medium", children: t4("orders.fulfillment.inStock") }),
          /* @__PURE__ */ (0, import_jsx_runtime224.jsxs)("span", { className: "text-ui-fg-subtle", children: [
            inStockQuantity || "N/A",
            " ",
            inStockQuantity && /* @__PURE__ */ (0, import_jsx_runtime224.jsxs)("span", { className: "font-medium text-red-500", children: [
              "-",
              form.getValues(`quantity.${item.id}`)
            ] })
          ] })
        ] })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime224.jsxs)("div", { className: "flex flex-1 items-center gap-1", children: [
        /* @__PURE__ */ (0, import_jsx_runtime224.jsx)(
          Form.Field,
          {
            control: form.control,
            name: `quantity.${item.id}`,
            rules: { required: true, min: minValue, max: maxValue },
            render: ({ field }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime224.jsxs)(Form.Item, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime224.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime224.jsx)(
                  import_ui145.Input,
                  {
                    className: "bg-ui-bg-base txt-small w-[50px] rounded-lg text-right [appearance:textfield] [&::-webkit-inner-spin-button]:appearance-none [&::-webkit-outer-spin-button]:appearance-none",
                    type: "number",
                    ...field,
                    onChange: (e) => {
                      const val = e.target.value === "" ? null : Number(e.target.value);
                      field.onChange(val);
                      if (!isNaN(val)) {
                        if (val < minValue || val > maxValue) {
                          form.setError(`quantity.${item.id}`, {
                            type: "manual",
                            message: t4(
                              "orders.fulfillment.error.wrongQuantity",
                              {
                                count: maxValue,
                                number: maxValue
                              }
                            )
                          });
                        } else {
                          form.clearErrors(`quantity.${item.id}`);
                        }
                      }
                    }
                  }
                ) }),
                /* @__PURE__ */ (0, import_jsx_runtime224.jsx)(Form.ErrorMessage, {})
              ] });
            }
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime224.jsxs)("span", { className: "text-ui-fg-subtle", children: [
          "/ ",
          item.quantity,
          " ",
          t4("fields.qty")
        ] })
      ] })
    ] })
  ] }) });
}
var import_react128, import_react_i18next145, import_ui145, import_jsx_runtime224;
var init_order_create_fulfillment_item = __esm({
  "src/routes/orders/order-create-fulfillment/components/order-create-fulfillment-form/order-create-fulfillment-item.tsx"() {
    "use strict";
    import_react128 = require("react");
    import_react_i18next145 = require("react-i18next");
    import_ui145 = require("@medusajs/ui");
    init_form2();
    init_thumbnail2();
    init_products();
    init_order_item();
    import_jsx_runtime224 = require("react/jsx-runtime");
  }
});

// src/routes/orders/order-create-fulfillment/components/order-create-fulfillment-form/order-create-fulfillment-form.tsx
function OrderCreateFulfillmentForm({
  order,
  requiresShipping
}) {
  const { t: t4 } = (0, import_react_i18next146.useTranslation)();
  const { handleSuccess } = useRouteModal();
  const { mutateAsync: createOrderFulfillment, isPending: isMutating } = useCreateOrderFulfillment(order.id);
  const { reservations } = useReservationItems({
    line_item_id: order.items.map((i) => i.id)
  });
  const itemReservedQuantitiesMap = (0, import_react129.useMemo)(
    () => new Map((reservations || []).map((r) => [r.line_item_id, r.quantity])),
    [reservations]
  );
  const [fulfillableItems, setFulfillableItems] = (0, import_react129.useState)(
    () => (order.items || []).filter(
      (item) => item.requires_shipping === requiresShipping && getFulfillableQuantity(item) > 0
    )
  );
  const form = (0, import_react_hook_form32.useForm)({
    defaultValues: {
      quantity: fulfillableItems.reduce((acc, item) => {
        acc[item.id] = getFulfillableQuantity(item);
        return acc;
      }, {}),
      send_notification: !order.no_notification
    },
    resolver: (0, import_zod27.zodResolver)(CreateFulfillmentSchema)
  });
  const { stock_locations = [] } = useStockLocations();
  const handleSubmit = form.handleSubmit(async (data) => {
    try {
      await createOrderFulfillment({
        location_id: data.location_id,
        // shipping_option_id: data.shipping_option_id,
        no_notification: !data.send_notification,
        items: Object.entries(data.quantity).filter(([, value]) => !!value).map(([id2, quantity]) => ({
          id: id2,
          quantity
        }))
      });
      import_ui146.toast.success(t4("orders.fulfillment.toast.created"));
      handleSuccess(`/orders/${order.id}`);
    } catch (e) {
      import_ui146.toast.error(e.message);
    }
  });
  (0, import_react129.useEffect)(() => {
    if (stock_locations?.length) {
      form.setValue("location_id", stock_locations[0].id);
    }
  }, [stock_locations?.length]);
  const selectedLocationId = (0, import_react_hook_form32.useWatch)({
    name: "location_id",
    control: form.control
  });
  const fulfilledQuantityArray = (order.items || []).map(
    (item) => item.requires_shipping === requiresShipping && item.detail.fulfilled_quantity
  );
  (0, import_react129.useEffect)(() => {
    const itemsToFulfill = order?.items?.filter(
      (item) => item.requires_shipping === requiresShipping && getFulfillableQuantity(item) > 0
    ) || [];
    setFulfillableItems(itemsToFulfill);
    if (itemsToFulfill.length) {
      form.clearErrors("root");
    } else {
      form.setError("root", {
        type: "manual",
        message: t4("orders.fulfillment.error.noItems")
      });
    }
    const quantityMap = itemsToFulfill.reduce((acc, item) => {
      acc[item.id] = getFulfillableQuantity(item);
      return acc;
    }, {});
    form.setValue("quantity", quantityMap);
  }, [...fulfilledQuantityArray, requiresShipping]);
  return /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime225.jsxs)(
    KeyboundForm,
    {
      onSubmit: handleSubmit,
      className: "flex h-full flex-col overflow-hidden",
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime225.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(import_ui146.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(import_ui146.Button, { size: "small", type: "submit", isLoading: isMutating, children: t4("orders.fulfillment.create") })
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(RouteFocusModal.Body, { className: "flex h-full w-full flex-col items-center divide-y overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime225.jsx)("div", { className: "flex size-full flex-col items-center overflow-auto p-16", children: /* @__PURE__ */ (0, import_jsx_runtime225.jsx)("div", { className: "flex w-full max-w-[736px] flex-col justify-center px-2 pb-2", children: /* @__PURE__ */ (0, import_jsx_runtime225.jsxs)("div", { className: "flex flex-col divide-y divide-dashed", children: [
          /* @__PURE__ */ (0, import_jsx_runtime225.jsx)("div", { className: "pb-8", children: /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "location_id",
              render: ({ field: { onChange, ref, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime225.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime225.jsxs)("div", { className: "flex flex-col gap-2 xl:flex-row xl:items-center", children: [
                    /* @__PURE__ */ (0, import_jsx_runtime225.jsxs)("div", { className: "flex-1", children: [
                      /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(Form.Label, { children: t4("fields.location") }),
                      /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(Form.Hint, { children: t4("orders.fulfillment.locationDescription") })
                    ] }),
                    /* @__PURE__ */ (0, import_jsx_runtime225.jsx)("div", { className: "flex-1", children: /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime225.jsxs)(import_ui146.Select, { onValueChange: onChange, ...field, children: [
                      /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(
                        import_ui146.Select.Trigger,
                        {
                          className: "bg-ui-bg-base",
                          ref,
                          children: /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(import_ui146.Select.Value, {})
                        }
                      ),
                      /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(import_ui146.Select.Content, { children: stock_locations.map((l) => /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(import_ui146.Select.Item, { value: l.id, children: l.name }, l.id)) })
                    ] }) }) })
                  ] }),
                  /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ) }),
          /* @__PURE__ */ (0, import_jsx_runtime225.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime225.jsxs)(Form.Item, { className: "mt-8", children: [
              /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(Form.Label, { children: t4("orders.fulfillment.itemsToFulfill") }),
              /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(Form.Hint, { children: t4("orders.fulfillment.itemsToFulfillDesc") }),
              /* @__PURE__ */ (0, import_jsx_runtime225.jsx)("div", { className: "flex flex-col gap-y-1", children: fulfillableItems.map((item) => {
                return /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(
                  OrderCreateFulfillmentItem,
                  {
                    form,
                    item,
                    locationId: selectedLocationId,
                    itemReservedQuantitiesMap
                  },
                  item.id
                );
              }) })
            ] }),
            form.formState.errors.root && /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(
              import_ui146.Alert,
              {
                variant: "error",
                dismissible: false,
                className: "flex items-center",
                classNameInner: "flex justify-between flex-1 items-center",
                children: form.formState.errors.root.message
              }
            )
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime225.jsx)("div", { className: "mt-8 pt-8 ", children: /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "send_notification",
              render: ({ field: { onChange, value, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime225.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime225.jsxs)("div", { className: "flex items-center justify-between", children: [
                    /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(Form.Label, { children: t4("orders.returns.sendNotification") }),
                    /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(
                      import_ui146.Switch,
                      {
                        checked: !!value,
                        onCheckedChange: onChange,
                        ...field
                      }
                    ) }) })
                  ] }),
                  /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(Form.Hint, { className: "!mt-1", children: t4("orders.fulfillment.sendNotificationHint") }),
                  /* @__PURE__ */ (0, import_jsx_runtime225.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ) })
        ] }) }) }) })
      ]
    }
  ) });
}
var import_zod27, import_react129, import_react_i18next146, import_ui146, import_react_hook_form32, import_jsx_runtime225;
var init_order_create_fulfillment_form = __esm({
  "src/routes/orders/order-create-fulfillment/components/order-create-fulfillment-form/order-create-fulfillment-form.tsx"() {
    "use strict";
    import_zod27 = require("@hookform/resolvers/zod");
    import_react129 = require("react");
    import_react_i18next146 = require("react-i18next");
    import_ui146 = require("@medusajs/ui");
    import_react_hook_form32 = require("react-hook-form");
    init_form2();
    init_modals();
    init_keybound_form2();
    init_orders();
    init_stock_locations();
    init_order_item();
    init_constants8();
    init_order_create_fulfillment_item();
    init_api();
    import_jsx_runtime225 = require("react/jsx-runtime");
  }
});

// src/routes/orders/order-create-fulfillment/components/order-create-fulfillment-form/index.ts
var init_order_create_fulfillment_form2 = __esm({
  "src/routes/orders/order-create-fulfillment/components/order-create-fulfillment-form/index.ts"() {
    "use strict";
    init_order_create_fulfillment_form();
  }
});

// src/routes/orders/order-create-fulfillment/order-create-fulfillments.tsx
function OrderCreateFulfillment() {
  const { id: id2 } = (0, import_react_router_dom69.useParams)();
  const [searchParams] = (0, import_react_router_dom69.useSearchParams)();
  const requiresShipping = searchParams.get("requires_shipping") === "true";
  const { order, isLoading, isError, error } = useOrder(id2, {
    fields: "currency_code,*items,*items.variant,*shipping_address"
  });
  if (isError) {
    throw error;
  }
  const ready = !isLoading && order;
  return /* @__PURE__ */ (0, import_jsx_runtime226.jsx)(RouteFocusModal, { children: ready && /* @__PURE__ */ (0, import_jsx_runtime226.jsx)(
    OrderCreateFulfillmentForm,
    {
      order,
      requiresShipping
    }
  ) });
}
var import_react_router_dom69, import_jsx_runtime226;
var init_order_create_fulfillments = __esm({
  "src/routes/orders/order-create-fulfillment/order-create-fulfillments.tsx"() {
    "use strict";
    import_react_router_dom69 = require("react-router-dom");
    init_modals();
    init_orders();
    init_order_create_fulfillment_form2();
    import_jsx_runtime226 = require("react/jsx-runtime");
  }
});

// src/routes/orders/order-create-fulfillment/index.ts
var order_create_fulfillment_exports = {};
__export(order_create_fulfillment_exports, {
  Component: () => OrderCreateFulfillment
});
var init_order_create_fulfillment = __esm({
  "src/routes/orders/order-create-fulfillment/index.ts"() {
    "use strict";
    init_order_create_fulfillments();
  }
});

// src/routes/orders/order-receive-return/components/order-receive-return-form/constants.ts
var import_zod28, ReceiveReturnSchema;
var init_constants9 = __esm({
  "src/routes/orders/order-receive-return/components/order-receive-return-form/constants.ts"() {
    "use strict";
    import_zod28 = require("zod");
    ReceiveReturnSchema = import_zod28.z.object({
      items: import_zod28.z.array(
        import_zod28.z.object({
          quantity: import_zod28.z.number().nullish(),
          dismissed_quantity: import_zod28.z.number().nullish(),
          item_id: import_zod28.z.string()
        })
      ),
      send_notification: import_zod28.z.boolean().optional()
    });
  }
});

// src/routes/orders/order-receive-return/components/order-receive-return-form/dismissed-quantity.tsx
function DismissedQuantity({
  form,
  item,
  index: index2,
  returnId,
  orderId
}) {
  const { t: t4 } = (0, import_react_i18next147.useTranslation)();
  const [isOpen, setIsOpen] = (0, import_react130.useState)(false);
  const { mutateAsync: addDismissedItems } = useAddDismissItems(
    returnId,
    orderId
  );
  const { mutateAsync: updateDismissedItems } = useUpdateDismissItem(
    returnId,
    orderId
  );
  const { mutateAsync: removeDismissedItems } = useRemoveDismissItem(
    returnId,
    orderId
  );
  const [receivedQuantity, dismissedQuantity] = (0, import_react130.useMemo)(() => {
    const receivedAction = item.actions?.find(
      (a) => a.action === "RECEIVE_RETURN_ITEM"
    );
    const dismissedAction = item.actions?.find(
      (a) => a.action === "RECEIVE_DAMAGED_RETURN_ITEM"
    );
    return [receivedAction?.details.quantity, dismissedAction?.details.quantity];
  }, [item]);
  const onDismissedQuantityChanged = async (value) => {
    const action = item.actions?.find(
      (a) => a.action === "RECEIVE_DAMAGED_RETURN_ITEM"
    );
    if (typeof value === "number" && value < 0) {
      form.setValue(`items.${index2}.dismissed_quantity`, dismissedQuantity, {
        shouldTouch: true,
        shouldDirty: true
      });
      import_ui147.toast.error(t4("orders.returns.receive.toast.errorNegativeValue"));
      return;
    }
    if (typeof value === "number" && value > item.quantity - item.detail.return_received_quantity) {
      form.setValue(`items.${index2}.dismissed_quantity`, dismissedQuantity, {
        shouldTouch: true,
        shouldDirty: true
      });
      import_ui147.toast.error(t4("orders.returns.receive.toast.errorLargeDamagedValue"));
      return;
    }
    try {
      if (value) {
        if (!action) {
          await addDismissedItems({
            items: [{ id: item.id, quantity: value }]
          });
        } else {
          await updateDismissedItems({ actionId: action.id, quantity: value });
        }
      } else {
        if (action) {
          await removeDismissedItems(action.id);
        }
      }
    } catch (e) {
      import_ui147.toast.error(e.message);
    }
  };
  return /* @__PURE__ */ (0, import_jsx_runtime227.jsxs)(import_ui147.Popover, { open: isOpen, onOpenChange: setIsOpen, children: [
    /* @__PURE__ */ (0, import_jsx_runtime227.jsx)(import_ui147.Popover.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime227.jsxs)(import_ui147.Button, { className: "flex gap-2 px-2", variant: "secondary", type: "button", children: [
      /* @__PURE__ */ (0, import_jsx_runtime227.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime227.jsx)(import_icons75.HeartBroken, {}) }),
      !!dismissedQuantity && /* @__PURE__ */ (0, import_jsx_runtime227.jsx)("span", { children: dismissedQuantity })
    ] }) }),
    /* @__PURE__ */ (0, import_jsx_runtime227.jsx)(import_ui147.Popover.Content, { align: "center", children: /* @__PURE__ */ (0, import_jsx_runtime227.jsxs)("div", { className: "flex flex-col p-2", children: [
      /* @__PURE__ */ (0, import_jsx_runtime227.jsx)("span", { className: "txt-small text-ui-fg-subtle mb-2 font-medium", children: t4("orders.returns.receive.writeOffInputLabel") }),
      /* @__PURE__ */ (0, import_jsx_runtime227.jsx)(
        Form.Field,
        {
          control: form.control,
          name: `items.${index2}.dismissed_quantity`,
          render: ({ field: { onChange, value, ...field } }) => {
            return /* @__PURE__ */ (0, import_jsx_runtime227.jsx)(Form.Item, { className: "w-full", children: /* @__PURE__ */ (0, import_jsx_runtime227.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime227.jsx)(
              import_ui147.Input,
              {
                min: 0,
                max: item.quantity,
                type: "number",
                value,
                className: "bg-ui-bg-field-component text-right [appearance:textfield] [&::-webkit-inner-spin-button]:appearance-none [&::-webkit-outer-spin-button]:appearance-none",
                onChange: (e) => {
                  const value2 = e.target.value === "" ? null : parseFloat(e.target.value);
                  onChange(value2);
                },
                ...field,
                onBlur: () => {
                  field.onBlur();
                  onDismissedQuantityChanged(value);
                }
              }
            ) }) });
          }
        }
      )
    ] }) })
  ] });
}
var import_react130, import_icons75, import_react_i18next147, import_ui147, import_jsx_runtime227, dismissed_quantity_default;
var init_dismissed_quantity = __esm({
  "src/routes/orders/order-receive-return/components/order-receive-return-form/dismissed-quantity.tsx"() {
    "use strict";
    import_react130 = require("react");
    import_icons75 = require("@medusajs/icons");
    import_react_i18next147 = require("react-i18next");
    import_ui147 = require("@medusajs/ui");
    init_form2();
    init_returns();
    import_jsx_runtime227 = require("react/jsx-runtime");
    dismissed_quantity_default = DismissedQuantity;
  }
});

// src/routes/orders/order-receive-return/components/order-receive-return-form/order-receive-return-form.tsx
function OrderReceiveReturnForm({
  order,
  preview,
  orderReturn
}) {
  const { t: t4 } = (0, import_react_i18next148.useTranslation)();
  const { handleSuccess } = useRouteModal();
  const previewItems = (0, import_react131.useMemo)(() => {
    const idsMap = {};
    orderReturn.items.forEach((i) => idsMap[i.item_id] = true);
    return preview.items.filter((i) => idsMap[i.id]);
  }, [preview.items, orderReturn]);
  const { mutateAsync: confirmReturnReceive } = useConfirmReturnReceive(
    orderReturn.id,
    order.id
  );
  const { mutateAsync: cancelReceiveReturn } = useCancelReceiveReturn(
    orderReturn.id,
    order.id
  );
  const { mutateAsync: addReceiveItems } = useAddReceiveItems(
    orderReturn.id,
    order.id
  );
  const { mutateAsync: updateReceiveItem } = useUpdateReceiveItem(
    orderReturn.id,
    order.id
  );
  const { mutateAsync: removeReceiveItem } = useRemoveReceiveItems(
    orderReturn.id,
    order.id
  );
  const { stock_location } = useStockLocation(
    orderReturn.location_id,
    void 0,
    {
      enabled: !!orderReturn.location_id
    }
  );
  const itemsMap = (0, import_react131.useMemo)(() => {
    const ret = {};
    order.items.forEach((i) => ret[i.id] = i);
    return ret;
  }, [order.items]);
  const form = (0, import_react_hook_form33.useForm)({
    defaultValues: {
      items: previewItems?.sort((i1, i2) => i1.id.localeCompare(i2.id)).map((i) => ({
        item_id: i.id
      })),
      send_notification: false
    },
    resolver: (0, import_zod29.zodResolver)(ReceiveReturnSchema)
  });
  (0, import_react131.useEffect)(() => {
    previewItems?.sort((i1, i2) => i1.id.localeCompare(i2.id)).forEach((item, index2) => {
      const receivedAction = item.actions?.find(
        (a) => a.action === "RECEIVE_RETURN_ITEM"
      );
      const dismissedAction = item.actions?.find(
        (a) => a.action === "RECEIVE_DAMAGED_RETURN_ITEM"
      );
      form.setValue(
        `items.${index2}.quantity`,
        receivedAction?.details.quantity,
        { shouldTouch: true, shouldDirty: true }
      );
      form.setValue(
        `items.${index2}.dismissed_quantity`,
        dismissedAction?.details.quantity,
        { shouldTouch: true, shouldDirty: true }
      );
    });
  }, [previewItems]);
  const handleSubmit = form.handleSubmit(async (data) => {
    try {
      await confirmReturnReceive({ no_notification: !data.send_notification });
      handleSuccess(`/orders/${order.id}`);
      import_ui148.toast.success(t4("general.success"), {
        description: t4("orders.returns.receive.toast.success"),
        dismissLabel: t4("actions.close")
      });
    } catch (e) {
      import_ui148.toast.error(t4("general.error"), {
        description: e.message,
        dismissLabel: t4("actions.close")
      });
    }
  });
  const handleQuantityChange = async (itemId, value, index2) => {
    const item = previewItems?.find((i) => i.id === itemId);
    const action = item?.actions?.find(
      (a) => a.action === "RECEIVE_RETURN_ITEM"
    );
    if (typeof value === "number" && value < 0) {
      form.setValue(
        `items.${index2}.quantity`,
        item.detail.return_received_quantity,
        { shouldTouch: true, shouldDirty: true }
      );
      import_ui148.toast.error(t4("orders.returns.receive.toast.errorNegativeValue"));
      return;
    }
    if (typeof value === "number" && value > item.quantity) {
      form.setValue(
        `items.${index2}.quantity`,
        item.detail.return_received_quantity,
        { shouldTouch: true, shouldDirty: true }
      );
      import_ui148.toast.error(t4("orders.returns.receive.toast.errorLargeValue"));
      return;
    }
    try {
      if (action) {
        if (value === null || value === 0) {
          await removeReceiveItem(action.id);
          return;
        }
        await updateReceiveItem({ actionId: action.id, quantity: value });
      } else {
        if (typeof value === "number" && value > 0 && value <= item.quantity) {
          await addReceiveItems({ items: [{ id: item.id, quantity: value }] });
        }
      }
    } catch (e) {
      import_ui148.toast.error(e.message);
    }
  };
  const onFormClose = async (isSubmitSuccessful) => {
    try {
      if (!isSubmitSuccessful) {
        await cancelReceiveReturn();
      }
    } catch (e) {
      import_ui148.toast.error(e.message);
    }
  };
  return /* @__PURE__ */ (0, import_jsx_runtime228.jsx)(RouteDrawer.Form, { form, onClose: onFormClose, children: /* @__PURE__ */ (0, import_jsx_runtime228.jsxs)(
    KeyboundForm,
    {
      onSubmit: handleSubmit,
      className: "flex size-full flex-col overflow-hidden",
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime228.jsxs)(RouteDrawer.Body, { className: "flex size-full flex-col overflow-auto", children: [
          /* @__PURE__ */ (0, import_jsx_runtime228.jsxs)("div", { className: "flex justify-between", children: [
            /* @__PURE__ */ (0, import_jsx_runtime228.jsx)("div", { children: stock_location && /* @__PURE__ */ (0, import_jsx_runtime228.jsxs)("div", { className: "flex items-center gap-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime228.jsx)(import_icons76.ArrrowRight, { className: "text-ui-fg-subtle" }),
              " ",
              /* @__PURE__ */ (0, import_jsx_runtime228.jsx)("span", { className: "text-ui-fg-base txt-small font-medium", children: stock_location.name })
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime228.jsx)("span", { className: "text-ui-fg-muted txt-small text-right", children: t4("orders.returns.receive.itemsLabel") })
          ] }),
          previewItems.map((item, ind) => {
            const originalItem = itemsMap[item.id];
            return /* @__PURE__ */ (0, import_jsx_runtime228.jsx)(
              "div",
              {
                className: "bg-ui-bg-subtle shadow-elevation-card-rest mt-2 rounded-xl",
                children: /* @__PURE__ */ (0, import_jsx_runtime228.jsxs)("div", { className: "flex flex-col items-center gap-x-2 gap-y-2 p-3 text-sm md:flex-row", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime228.jsxs)("div", { className: "flex flex-1 items-center gap-x-3", children: [
                    /* @__PURE__ */ (0, import_jsx_runtime228.jsxs)(import_ui148.Text, { size: "small", className: "text-ui-fg-subtle", children: [
                      item.quantity,
                      "x"
                    ] }),
                    /* @__PURE__ */ (0, import_jsx_runtime228.jsx)(Thumbnail, { src: item.thumbnail }),
                    /* @__PURE__ */ (0, import_jsx_runtime228.jsxs)("div", { className: "flex flex-col", children: [
                      /* @__PURE__ */ (0, import_jsx_runtime228.jsxs)("div", { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime228.jsxs)(import_ui148.Text, { className: "txt-small", as: "span", weight: "plus", children: [
                          item.title,
                          " "
                        ] }),
                        originalItem.variant.sku && /* @__PURE__ */ (0, import_jsx_runtime228.jsxs)("span", { children: [
                          "(",
                          originalItem.variant.sku,
                          ")"
                        ] })
                      ] }),
                      /* @__PURE__ */ (0, import_jsx_runtime228.jsx)(import_ui148.Text, { as: "div", className: "text-ui-fg-subtle txt-small", children: originalItem.variant.product.title })
                    ] })
                  ] }),
                  /* @__PURE__ */ (0, import_jsx_runtime228.jsxs)("div", { className: "flex flex-1 flex-row items-center gap-2", children: [
                    /* @__PURE__ */ (0, import_jsx_runtime228.jsx)(
                      dismissed_quantity_default,
                      {
                        form,
                        item,
                        index: ind,
                        returnId: orderReturn.id,
                        orderId: order.id
                      }
                    ),
                    /* @__PURE__ */ (0, import_jsx_runtime228.jsx)(
                      Form.Field,
                      {
                        control: form.control,
                        name: `items.${ind}.quantity`,
                        render: ({ field: { onChange, value, ...field } }) => {
                          return /* @__PURE__ */ (0, import_jsx_runtime228.jsx)(Form.Item, { className: "w-full", children: /* @__PURE__ */ (0, import_jsx_runtime228.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime228.jsx)(
                            import_ui148.Input,
                            {
                              min: 0,
                              max: item.quantity,
                              type: "number",
                              value,
                              className: "bg-ui-bg-field-component text-right [appearance:textfield] [&::-webkit-inner-spin-button]:appearance-none [&::-webkit-outer-spin-button]:appearance-none",
                              onChange: (e) => {
                                const value2 = e.target.value === "" ? null : parseFloat(e.target.value);
                                onChange(value2);
                              },
                              ...field,
                              onBlur: () => {
                                field.onBlur();
                                handleQuantityChange(item.id, value, ind);
                              }
                            }
                          ) }) });
                        }
                      }
                    )
                  ] })
                ] })
              },
              item.id
            );
          }),
          /* @__PURE__ */ (0, import_jsx_runtime228.jsxs)("div", { className: "my-6 border-b border-t border-dashed py-4", children: [
            /* @__PURE__ */ (0, import_jsx_runtime228.jsxs)("div", { className: "mb-2 flex items-center justify-between", children: [
              /* @__PURE__ */ (0, import_jsx_runtime228.jsx)("span", { className: "txt-small text-ui-fg-subtle", children: t4("fields.total") }),
              /* @__PURE__ */ (0, import_jsx_runtime228.jsx)("span", { className: "txt-small text-ui-fg-subtle", children: getStylizedAmount(preview.total, order.currency_code) })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime228.jsxs)("div", { className: "mt-4 flex items-center justify-between border-t border-dotted pt-4", children: [
              /* @__PURE__ */ (0, import_jsx_runtime228.jsx)("span", { className: "txt-small font-medium", children: t4("orders.returns.outstandingAmount") }),
              /* @__PURE__ */ (0, import_jsx_runtime228.jsx)("span", { className: "txt-small font-medium", children: getStylizedAmount(
                preview.summary.pending_difference || 0,
                order.currency_code
              ) })
            ] })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime228.jsx)(import_ui148.Alert, { className: "rounded-xl", variant: "warning", children: t4("orders.returns.receive.inventoryWarning") }),
          /* @__PURE__ */ (0, import_jsx_runtime228.jsx)("div", { className: "bg-ui-bg-subtle shadow-elevation-card-rest my-2 rounded-xl p-3", children: /* @__PURE__ */ (0, import_jsx_runtime228.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "send_notification",
              render: ({ field: { onChange, value, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime228.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime228.jsxs)("div", { className: "flex items-center gap-3", children: [
                    /* @__PURE__ */ (0, import_jsx_runtime228.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime228.jsx)(
                      import_ui148.Switch,
                      {
                        className: "mt-1 self-start",
                        checked: !!value,
                        onCheckedChange: onChange,
                        ...field
                      }
                    ) }),
                    /* @__PURE__ */ (0, import_jsx_runtime228.jsxs)("div", { className: "flex flex-col", children: [
                      /* @__PURE__ */ (0, import_jsx_runtime228.jsx)(Form.Label, { children: t4("orders.returns.sendNotification") }),
                      /* @__PURE__ */ (0, import_jsx_runtime228.jsx)(Form.Hint, { className: "!mt-1", children: t4("orders.returns.receive.sendNotificationHint") })
                    ] })
                  ] }),
                  /* @__PURE__ */ (0, import_jsx_runtime228.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime228.jsx)(RouteDrawer.Footer, { className: "overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime228.jsxs)("div", { className: "flex items-center gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime228.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime228.jsx)(import_ui148.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime228.jsx)(import_ui148.Button, { size: "small", type: "submit", isLoading: false, children: t4("actions.save") })
        ] }) })
      ]
    }
  ) });
}
var import_zod29, import_icons76, import_ui148, import_react131, import_react_hook_form33, import_react_i18next148, import_jsx_runtime228;
var init_order_receive_return_form = __esm({
  "src/routes/orders/order-receive-return/components/order-receive-return-form/order-receive-return-form.tsx"() {
    "use strict";
    import_zod29 = require("@hookform/resolvers/zod");
    import_icons76 = require("@medusajs/icons");
    import_ui148 = require("@medusajs/ui");
    import_react131 = require("react");
    import_react_hook_form33 = require("react-hook-form");
    import_react_i18next148 = require("react-i18next");
    init_form2();
    init_thumbnail2();
    init_modals();
    init_keybound_form2();
    init_api();
    init_returns();
    init_money_amount_helpers();
    init_constants9();
    init_dismissed_quantity();
    import_jsx_runtime228 = require("react/jsx-runtime");
  }
});

// src/routes/orders/order-receive-return/components/order-receive-return-form/index.ts
var init_order_receive_return_form2 = __esm({
  "src/routes/orders/order-receive-return/components/order-receive-return-form/index.ts"() {
    "use strict";
    init_order_receive_return_form();
  }
});

// src/routes/orders/order-receive-return/order-receive-return.tsx
function OrderReceiveReturn() {
  const { id: id2, return_id } = (0, import_react_router_dom70.useParams)();
  const { t: t4 } = (0, import_react_i18next149.useTranslation)();
  const navigate = (0, import_react_router_dom70.useNavigate)();
  const { order } = useOrder(id2, { fields: "+currency_code,*items" });
  const { order: preview } = useOrderPreview(id2);
  const { return: orderReturn } = useReturn(return_id, {
    fields: "*items.item,*items.item.variant,*items.item.variant.product"
  });
  const { mutateAsync: initiateReceiveReturn } = useInitiateReceiveReturn(
    return_id,
    id2
  );
  const { mutateAsync: addReceiveItems } = useAddReceiveItems(return_id, id2);
  (0, import_react132.useEffect)(() => {
    ;
    (async function() {
      if (IS_REQUEST_RUNNING || !preview) {
        return;
      }
      if (preview.order_change) {
        if (preview.order_change.change_type !== "return_receive") {
          navigate(`/orders/${id2}`, { replace: true });
          import_ui149.toast.error(t4("orders.returns.activeChangeError"));
        }
        return;
      }
      IS_REQUEST_RUNNING = true;
      try {
        const { return: _return } = await initiateReceiveReturn({});
        await addReceiveItems({
          items: _return.items.map((i) => ({
            id: i.item_id,
            quantity: i.quantity
          }))
        });
      } catch (e) {
        import_ui149.toast.error(e.message);
      } finally {
        IS_REQUEST_RUNNING = false;
      }
    })();
  }, [preview]);
  const ready = order && orderReturn && preview;
  return /* @__PURE__ */ (0, import_jsx_runtime229.jsxs)(RouteDrawer, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime229.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime229.jsx)(import_ui149.Heading, { children: t4("orders.returns.receive.title", {
      returnId: return_id?.slice(-7)
    }) }) }),
    ready && /* @__PURE__ */ (0, import_jsx_runtime229.jsx)(
      OrderReceiveReturnForm,
      {
        order,
        orderReturn,
        preview
      }
    )
  ] });
}
var import_react_router_dom70, import_react_i18next149, import_ui149, import_react132, import_jsx_runtime229, IS_REQUEST_RUNNING;
var init_order_receive_return = __esm({
  "src/routes/orders/order-receive-return/order-receive-return.tsx"() {
    "use strict";
    import_react_router_dom70 = require("react-router-dom");
    import_react_i18next149 = require("react-i18next");
    import_ui149 = require("@medusajs/ui");
    import_react132 = require("react");
    init_orders();
    init_modals();
    init_order_receive_return_form2();
    init_returns();
    import_jsx_runtime229 = require("react/jsx-runtime");
    IS_REQUEST_RUNNING = false;
  }
});

// src/routes/orders/order-receive-return/index.ts
var order_receive_return_exports = {};
__export(order_receive_return_exports, {
  Component: () => OrderReceiveReturn
});
var init_order_receive_return2 = __esm({
  "src/routes/orders/order-receive-return/index.ts"() {
    "use strict";
    init_order_receive_return();
  }
});

// src/routes/orders/order-allocate-items/components/order-create-fulfillment-form/constants.ts
var import_zod30, AllocateItemsSchema;
var init_constants10 = __esm({
  "src/routes/orders/order-allocate-items/components/order-create-fulfillment-form/constants.ts"() {
    "use strict";
    import_zod30 = require("zod");
    AllocateItemsSchema = import_zod30.z.object({
      location_id: import_zod30.z.string(),
      quantity: import_zod30.z.record(import_zod30.z.string(), import_zod30.z.number().or(import_zod30.z.string()))
    });
  }
});

// src/routes/orders/order-allocate-items/components/order-create-fulfillment-form/order-allocate-items-item.tsx
function OrderAllocateItemsItem({
  item,
  form,
  locationId,
  onQuantityChange
}) {
  const { t: t4 } = (0, import_react_i18next150.useTranslation)();
  const variant = item.variant;
  const inventory = item.variant.inventory;
  const [isOpen, setIsOpen] = (0, import_react133.useState)(false);
  const quantityField = (0, import_react_hook_form34.useWatch)({
    control: form.control,
    name: "quantity"
  });
  const hasInventoryKit = !!variant?.inventory_items.length && variant?.inventory_items.length > 1;
  const { availableQuantity, inStockQuantity } = (0, import_react133.useMemo)(() => {
    if (!variant || !locationId) {
      return {};
    }
    const { inventory: inventory2 } = variant;
    const locationInventory = inventory2[0]?.location_levels?.find(
      (inv) => inv.location_id === locationId
    );
    if (!locationInventory) {
      return {};
    }
    return {
      availableQuantity: locationInventory.available_quantity,
      inStockQuantity: locationInventory.stocked_quantity
    };
  }, [variant, locationId]);
  const hasQuantityError = !hasInventoryKit && availableQuantity && quantityField[`${item.id}-${item.variant.inventory[0].id}`] && quantityField[`${item.id}-${item.variant.inventory[0].id}`] > availableQuantity;
  const minValue = 0;
  const maxValue = Math.min(
    getFulfillableQuantity(item),
    availableQuantity || Number.MAX_SAFE_INTEGER
  );
  return /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("div", { className: "bg-ui-bg-subtle shadow-elevation-card-rest my-2 min-w-[720px] divide-y divide-dashed rounded-xl", children: [
    /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("div", { className: "flex items-center gap-x-3 p-3 text-sm", children: [
      /* @__PURE__ */ (0, import_jsx_runtime230.jsx)("div", { className: "flex flex-1 items-center", children: /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("div", { className: "flex items-center gap-x-3", children: [
        hasQuantityError && /* @__PURE__ */ (0, import_jsx_runtime230.jsx)(import_icons77.ExclamationCircleSolid, { className: "text-ui-fg-error" }),
        /* @__PURE__ */ (0, import_jsx_runtime230.jsx)(Thumbnail, { src: item.thumbnail }),
        /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("div", { className: "flex flex-col", children: [
          /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("div", { className: "flex flex-row", children: [
            /* @__PURE__ */ (0, import_jsx_runtime230.jsx)(import_ui150.Text, { className: "txt-small flex", as: "span", weight: "plus", children: item.variant.product.title }),
            item.variant.sku && /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("span", { className: "text-ui-fg-subtle", children: [
              " ",
              "(",
              item.variant.sku,
              ")"
            ] }),
            hasInventoryKit && /* @__PURE__ */ (0, import_jsx_runtime230.jsx)(import_icons77.Component, { className: "text-ui-fg-muted ml-2 overflow-visible pt-[2px]" })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime230.jsx)(import_ui150.Text, { as: "div", className: "text-ui-fg-subtle txt-small", children: item.title })
        ] })
      ] }) }),
      /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)(
        "div",
        {
          className: (0, import_ui150.clx)(
            "flex flex-1 items-center gap-x-3",
            hasInventoryKit ? "justify-end" : "justify-between"
          ),
          children: [
            !hasInventoryKit && /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)(import_jsx_runtime230.Fragment, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("div", { className: "flex items-center gap-3", children: [
                /* @__PURE__ */ (0, import_jsx_runtime230.jsx)("div", { className: "bg-ui-border-strong block h-[12px] w-[1px]" }),
                /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("div", { className: "txt-small flex flex-col", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime230.jsx)("span", { className: "text-ui-fg-subtle font-medium", children: t4("labels.available") }),
                  /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("span", { className: "text-ui-fg-muted", children: [
                    availableQuantity || "-",
                    availableQuantity && !hasInventoryKit && quantityField[`${item.id}-${item.variant.inventory[0].id}`] && /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("span", { className: "text-ui-fg-error txt-small ml-1", children: [
                      "-",
                      quantityField[`${item.id}-${item.variant.inventory[0].id}`]
                    ] })
                  ] })
                ] })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("div", { className: "flex items-center gap-3", children: [
                /* @__PURE__ */ (0, import_jsx_runtime230.jsx)("div", { className: "bg-ui-border-strong block h-[12px] w-[1px]" }),
                /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("div", { className: "txt-small flex flex-col", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime230.jsx)("span", { className: "text-ui-fg-subtle font-medium", children: t4("labels.inStock") }),
                  /* @__PURE__ */ (0, import_jsx_runtime230.jsx)("span", { className: "text-ui-fg-muted", children: inStockQuantity || "-" })
                ] })
              ] })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("div", { className: "flex items-center gap-3", children: [
              /* @__PURE__ */ (0, import_jsx_runtime230.jsx)("div", { className: "bg-ui-border-strong block h-[12px] w-[1px]" }),
              /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("div", { className: "text-ui-fg-subtle txt-small mr-2 flex flex-row items-center gap-2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime230.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: hasInventoryKit ? `quantity.${item.id}-` : `quantity.${item.id}-${item.variant.inventory[0].id}`,
                    rules: {
                      required: !hasInventoryKit,
                      min: !hasInventoryKit && minValue,
                      max: maxValue
                    },
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime230.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime230.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime230.jsx)(
                        import_ui150.Input,
                        {
                          className: "bg-ui-bg-base txt-small w-[46px] rounded-lg text-right [appearance:textfield] [&::-webkit-inner-spin-button]:appearance-none [&::-webkit-outer-spin-button]:appearance-none",
                          type: "number",
                          ...field,
                          disabled: !locationId,
                          onChange: (e) => {
                            const val = e.target.value === "" ? null : Number(e.target.value);
                            onQuantityChange(
                              item.variant.inventory[0],
                              item,
                              hasInventoryKit,
                              val,
                              true
                            );
                          }
                        }
                      ) }) });
                    }
                  }
                ),
                " ",
                "/ ",
                item.quantity,
                " ",
                t4("fields.qty")
              ] })
            ] })
          ]
        }
      )
    ] }),
    hasInventoryKit && /* @__PURE__ */ (0, import_jsx_runtime230.jsx)("div", { className: "px-4 py-2", children: /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)(
      "div",
      {
        onClick: () => setIsOpen((o) => !o),
        className: "flex items-center gap-x-2",
        children: [
          /* @__PURE__ */ (0, import_jsx_runtime230.jsx)(
            import_icons77.TriangleDownMini,
            {
              style: { transform: `rotate(${isOpen ? -90 : 0}deg)` },
              className: "text-ui-fg-muted -mt-[1px]"
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime230.jsx)("span", { className: "txt-small text-ui-fg-muted cursor-pointer", children: t4("orders.allocateItems.consistsOf", {
            num: inventory.length
          }) })
        ]
      }
    ) }),
    isOpen && variant.inventory.map((i, ind) => {
      const location = i.location_levels.find(
        (l) => l.location_id === locationId
      );
      const hasQuantityError2 = !!quantityField[`${item.id}-${i.id}`] && quantityField[`${item.id}-${i.id}`] > location.available_quantity;
      return /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("div", { className: "txt-small flex items-center gap-x-3 p-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("div", { className: "flex flex-1 flex-row items-center gap-3", children: [
          hasQuantityError2 && /* @__PURE__ */ (0, import_jsx_runtime230.jsx)(import_icons77.ExclamationCircleSolid, { className: "text-ui-fg-error" }),
          /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("div", { className: "flex flex-col", children: [
            /* @__PURE__ */ (0, import_jsx_runtime230.jsx)("span", { className: "text-ui-fg-subtle", children: i.title }),
            /* @__PURE__ */ (0, import_jsx_runtime230.jsx)("span", { className: "text-ui-fg-muted", children: t4("orders.allocateItems.requires", {
              num: variant.inventory_items[ind].required_quantity
            }) })
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("div", { className: "flex flex-1 flex-row justify-between", children: [
          /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("div", { className: "flex items-center gap-3", children: [
            /* @__PURE__ */ (0, import_jsx_runtime230.jsx)("div", { className: "bg-ui-border-strong block h-[12px] w-[1px]" }),
            /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("div", { className: "txt-small flex flex-col", children: [
              /* @__PURE__ */ (0, import_jsx_runtime230.jsx)("span", { className: "text-ui-fg-subtle font-medium", children: t4("labels.available") }),
              /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("span", { className: "text-ui-fg-muted", children: [
                location?.available_quantity || "-",
                location?.available_quantity && quantityField[`${item.id}-${i.id}`] && /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("span", { className: "text-ui-fg-error txt-small ml-1", children: [
                  "-",
                  quantityField[`${item.id}-${i.id}`]
                ] })
              ] })
            ] })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("div", { className: "flex items-center gap-3", children: [
            /* @__PURE__ */ (0, import_jsx_runtime230.jsx)("div", { className: "bg-ui-border-strong block h-[12px] w-[1px]" }),
            /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("div", { className: "txt-small flex flex-col", children: [
              /* @__PURE__ */ (0, import_jsx_runtime230.jsx)("span", { className: "text-ui-fg-subtle font-medium", children: t4("labels.inStock") }),
              /* @__PURE__ */ (0, import_jsx_runtime230.jsx)("span", { className: "text-ui-fg-muted", children: location?.stocked_quantity || "-" })
            ] })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("div", { className: "flex items-center gap-3", children: [
            /* @__PURE__ */ (0, import_jsx_runtime230.jsx)("div", { className: "bg-ui-border-strong block h-[12px] w-[1px]" }),
            /* @__PURE__ */ (0, import_jsx_runtime230.jsxs)("div", { className: "text-ui-fg-subtle txt-small mr-1 flex flex-row items-center gap-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime230.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: `quantity.${item.id}-${i.id}`,
                  rules: {
                    required: true,
                    min: 0,
                    max: location?.available_quantity
                  },
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime230.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime230.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime230.jsx)(
                      import_ui150.Input,
                      {
                        className: "bg-ui-bg-base txt-small w-[46px] rounded-lg text-right [appearance:textfield] [&::-webkit-inner-spin-button]:appearance-none [&::-webkit-outer-spin-button]:appearance-none",
                        type: "number",
                        ...field,
                        disabled: !locationId,
                        onChange: (e) => {
                          const val = e.target.value === "" ? null : Number(e.target.value);
                          onQuantityChange(
                            i,
                            item,
                            hasInventoryKit,
                            val
                          );
                        }
                      }
                    ) }) });
                  }
                }
              ),
              "/",
              " ",
              item.quantity * variant.inventory_items[ind].required_quantity,
              " ",
              t4("fields.qty")
            ] })
          ] })
        ] })
      ] }, i.id);
    })
  ] });
}
var import_react133, import_react_i18next150, import_icons77, import_react_hook_form34, import_ui150, import_jsx_runtime230;
var init_order_allocate_items_item = __esm({
  "src/routes/orders/order-allocate-items/components/order-create-fulfillment-form/order-allocate-items-item.tsx"() {
    "use strict";
    import_react133 = require("react");
    import_react_i18next150 = require("react-i18next");
    import_icons77 = require("@medusajs/icons");
    import_react_hook_form34 = require("react-hook-form");
    import_ui150 = require("@medusajs/ui");
    init_thumbnail2();
    init_order_item();
    init_form2();
    import_jsx_runtime230 = require("react/jsx-runtime");
  }
});

// src/routes/orders/order-allocate-items/components/order-create-fulfillment-form/order-allocate-items-form.tsx
function OrderAllocateItemsForm({ order }) {
  const { t: t4 } = (0, import_react_i18next151.useTranslation)();
  const { handleSuccess } = useRouteModal();
  const [disableSubmit, setDisableSubmit] = (0, import_react134.useState)(false);
  const [filterTerm, setFilterTerm] = (0, import_react134.useState)("");
  const { mutateAsync: allocateItems, isPending: isMutating } = useCreateReservationItem();
  const itemsToAllocate = (0, import_react134.useMemo)(
    () => order.items.filter(
      (item) => item.variant.manage_inventory && item.variant.inventory.length && item.quantity - item.detail.fulfilled_quantity > 0
    ),
    [order.items]
  );
  const filteredItems = (0, import_react134.useMemo)(() => {
    return itemsToAllocate.filter(
      (i) => i.variant.title.toLowerCase().includes(filterTerm) || i.variant.product.title.toLowerCase().includes(filterTerm)
    );
  }, [itemsToAllocate, filterTerm]);
  const noItemsToAllocate = !itemsToAllocate.length;
  const form = (0, import_react_hook_form35.useForm)({
    defaultValues: {
      location_id: "",
      quantity: defaultAllocations(itemsToAllocate)
    },
    resolver: (0, import_zod31.zodResolver)(AllocateItemsSchema)
  });
  const { stock_locations = [] } = useStockLocations();
  const handleSubmit = form.handleSubmit(async (data) => {
    try {
      const payload = Object.entries(data.quantity).filter(([key]) => !key.endsWith("-")).map(([key, quantity]) => [...key.split("-"), quantity]);
      if (payload.some((d) => d[2] === "")) {
        form.setError("root.quantityNotAllocated", {
          type: "manual",
          message: t4("orders.allocateItems.error.quantityNotAllocated")
        });
        return;
      }
      const promises = payload.map(
        ([itemId, inventoryId, quantity]) => allocateItems({
          location_id: data.location_id,
          inventory_item_id: inventoryId,
          line_item_id: itemId,
          quantity
        })
      );
      await Promise.all(promises);
      await queryClient.invalidateQueries({
        queryKey: ordersQueryKeys.details()
      });
      handleSuccess(`/orders/${order.id}`);
      import_ui151.toast.success(t4("general.success"), {
        description: t4("orders.allocateItems.toast.created"),
        dismissLabel: t4("actions.close")
      });
    } catch (e) {
      import_ui151.toast.error(t4("general.error"), {
        description: e.message,
        dismissLabel: t4("actions.close")
      });
    }
  });
  const onQuantityChange = (inventoryItem, lineItem, hasInventoryKit, value, isRoot) => {
    let shouldDisableSubmit = false;
    const key = isRoot && hasInventoryKit ? `quantity.${lineItem.id}-` : `quantity.${lineItem.id}-${inventoryItem.id}`;
    form.setValue(key, value);
    if (value) {
      const location = inventoryItem.location_levels.find(
        (l) => l.location_id === selectedLocationId
      );
      if (location) {
        if (location.available_quantity < value) {
          shouldDisableSubmit = true;
        }
      }
    }
    if (hasInventoryKit && !isRoot) {
      form.resetField(`quantity.${lineItem.id}-`, { defaultValue: "" });
    }
    if (hasInventoryKit && isRoot) {
      const item = itemsToAllocate.find((i) => i.id === lineItem.id);
      item.variant.inventory_items.forEach((ii, ind) => {
        const num = value || 0;
        const inventory = item.variant.inventory[ind];
        form.setValue(
          `quantity.${lineItem.id}-${inventory.id}`,
          num * ii.required_quantity
        );
        if (value) {
          const location = inventory.location_levels.find(
            (l) => l.location_id === selectedLocationId
          );
          if (location) {
            if (location.available_quantity < value) {
              shouldDisableSubmit = true;
            }
          }
        }
      });
    }
    form.clearErrors("root.quantityNotAllocated");
    setDisableSubmit(shouldDisableSubmit);
  };
  const selectedLocationId = (0, import_react_hook_form35.useWatch)({
    name: "location_id",
    control: form.control
  });
  (0, import_react134.useEffect)(() => {
    if (selectedLocationId) {
      form.setValue("quantity", defaultAllocations(itemsToAllocate));
    }
  }, [selectedLocationId]);
  const allocationError = form.formState.errors?.root?.quantityNotAllocated?.message;
  return /* @__PURE__ */ (0, import_jsx_runtime231.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime231.jsxs)(
    KeyboundForm,
    {
      onSubmit: handleSubmit,
      className: "flex h-full flex-col overflow-hidden",
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime231.jsx)(RouteFocusModal.Header, {}),
        /* @__PURE__ */ (0, import_jsx_runtime231.jsx)(RouteFocusModal.Body, { className: "flex h-full w-full flex-col items-center divide-y overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime231.jsx)("div", { className: "flex size-full flex-col items-center overflow-auto p-16", children: /* @__PURE__ */ (0, import_jsx_runtime231.jsx)("div", { className: "flex w-full max-w-[736px] flex-col justify-center px-2 pb-2", children: /* @__PURE__ */ (0, import_jsx_runtime231.jsxs)("div", { className: "flex flex-col gap-8 divide-y divide-dashed", children: [
          /* @__PURE__ */ (0, import_jsx_runtime231.jsx)(import_ui151.Heading, { children: t4("orders.allocateItems.title") }),
          /* @__PURE__ */ (0, import_jsx_runtime231.jsxs)("div", { className: "flex-1 divide-y divide-dashed pt-8", children: [
            /* @__PURE__ */ (0, import_jsx_runtime231.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "location_id",
                render: ({ field: { onChange, ref, ...field } }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime231.jsxs)(Form.Item, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime231.jsxs)("div", { className: "flex items-center gap-3", children: [
                      /* @__PURE__ */ (0, import_jsx_runtime231.jsxs)("div", { className: "flex-1", children: [
                        /* @__PURE__ */ (0, import_jsx_runtime231.jsx)(Form.Label, { children: t4("fields.location") }),
                        /* @__PURE__ */ (0, import_jsx_runtime231.jsx)(Form.Hint, { children: t4("orders.allocateItems.locationDescription") })
                      ] }),
                      /* @__PURE__ */ (0, import_jsx_runtime231.jsx)("div", { className: "flex-1", children: /* @__PURE__ */ (0, import_jsx_runtime231.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime231.jsxs)(import_ui151.Select, { onValueChange: onChange, ...field, children: [
                        /* @__PURE__ */ (0, import_jsx_runtime231.jsx)(
                          import_ui151.Select.Trigger,
                          {
                            className: "bg-ui-bg-base",
                            ref,
                            children: /* @__PURE__ */ (0, import_jsx_runtime231.jsx)(import_ui151.Select.Value, {})
                          }
                        ),
                        /* @__PURE__ */ (0, import_jsx_runtime231.jsx)(import_ui151.Select.Content, { children: stock_locations.map((l) => /* @__PURE__ */ (0, import_jsx_runtime231.jsx)(import_ui151.Select.Item, { value: l.id, children: l.name }, l.id)) })
                      ] }) }) })
                    ] }),
                    /* @__PURE__ */ (0, import_jsx_runtime231.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime231.jsxs)(Form.Item, { className: "mt-8 pt-8", children: [
              /* @__PURE__ */ (0, import_jsx_runtime231.jsxs)("div", { className: "flex flex-row items-center", children: [
                /* @__PURE__ */ (0, import_jsx_runtime231.jsxs)("div", { className: "flex-1", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime231.jsx)(Form.Label, { children: t4("orders.allocateItems.itemsToAllocate") }),
                  /* @__PURE__ */ (0, import_jsx_runtime231.jsx)(Form.Hint, { children: t4("orders.allocateItems.itemsToAllocateDesc") })
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime231.jsx)("div", { className: "flex-1", children: /* @__PURE__ */ (0, import_jsx_runtime231.jsx)(
                  import_ui151.Input,
                  {
                    value: filterTerm,
                    onChange: (e) => setFilterTerm(e.target.value),
                    placeholder: t4("orders.allocateItems.search"),
                    autoComplete: "off",
                    type: "search"
                  }
                ) })
              ] }),
              allocationError && /* @__PURE__ */ (0, import_jsx_runtime231.jsx)(import_ui151.Alert, { className: "mb-4", dismissible: true, variant: "error", children: allocationError }),
              /* @__PURE__ */ (0, import_jsx_runtime231.jsx)("div", { className: "flex flex-col gap-y-1", children: filteredItems.map((item) => /* @__PURE__ */ (0, import_jsx_runtime231.jsx)(
                OrderAllocateItemsItem,
                {
                  form,
                  item,
                  locationId: selectedLocationId,
                  onQuantityChange
                },
                item.id
              )) })
            ] })
          ] })
        ] }) }) }) }),
        /* @__PURE__ */ (0, import_jsx_runtime231.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime231.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime231.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime231.jsx)(import_ui151.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime231.jsx)(
            import_ui151.Button,
            {
              size: "small",
              type: "submit",
              isLoading: isMutating,
              disabled: !selectedLocationId || disableSubmit,
              children: t4("orders.allocateItems.action")
            }
          )
        ] }) })
      ]
    }
  ) });
}
function defaultAllocations(items) {
  const ret = {};
  items.forEach((item) => {
    const hasInventoryKit = item.variant.inventory_items.length > 1;
    ret[hasInventoryKit ? `${item.id}-` : `${item.id}-${item.variant.inventory[0].id}`] = "";
    if (hasInventoryKit) {
      item.variant.inventory.forEach((i) => {
        ret[`${item.id}-${i.id}`] = "";
      });
    }
  });
  return ret;
}
var import_zod31, import_react134, import_react_i18next151, import_ui151, import_react_hook_form35, import_jsx_runtime231;
var init_order_allocate_items_form = __esm({
  "src/routes/orders/order-allocate-items/components/order-create-fulfillment-form/order-allocate-items-form.tsx"() {
    "use strict";
    import_zod31 = require("@hookform/resolvers/zod");
    import_react134 = require("react");
    import_react_i18next151 = require("react-i18next");
    import_ui151 = require("@medusajs/ui");
    import_react_hook_form35 = require("react-hook-form");
    init_form2();
    init_modals();
    init_keybound_form2();
    init_orders();
    init_reservations();
    init_stock_locations();
    init_query_client();
    init_constants10();
    init_order_allocate_items_item();
    import_jsx_runtime231 = require("react/jsx-runtime");
  }
});

// src/routes/orders/order-allocate-items/components/order-create-fulfillment-form/index.ts
var init_order_create_fulfillment_form3 = __esm({
  "src/routes/orders/order-allocate-items/components/order-create-fulfillment-form/index.ts"() {
    "use strict";
    init_order_allocate_items_form();
  }
});

// src/routes/orders/order-allocate-items/order-allocate-items.tsx
function OrderAllocateItems() {
  const { id: id2 } = (0, import_react_router_dom71.useParams)();
  const { order, isLoading, isError, error } = useOrder(id2, {
    fields: "currency_code,*items,*items.variant,+items.variant.product.title,*items.variant.inventory,*items.variant.inventory.location_levels,*items.variant.inventory_items,*shipping_address"
  });
  if (isError) {
    throw error;
  }
  const ready = !isLoading && order;
  return /* @__PURE__ */ (0, import_jsx_runtime232.jsx)(RouteFocusModal, { children: ready && /* @__PURE__ */ (0, import_jsx_runtime232.jsx)(OrderAllocateItemsForm, { order }) });
}
var import_react_router_dom71, import_jsx_runtime232;
var init_order_allocate_items = __esm({
  "src/routes/orders/order-allocate-items/order-allocate-items.tsx"() {
    "use strict";
    import_react_router_dom71 = require("react-router-dom");
    init_orders();
    init_modals();
    init_order_create_fulfillment_form3();
    import_jsx_runtime232 = require("react/jsx-runtime");
  }
});

// src/routes/orders/order-allocate-items/index.ts
var order_allocate_items_exports = {};
__export(order_allocate_items_exports, {
  Component: () => OrderAllocateItems
});
var init_order_allocate_items2 = __esm({
  "src/routes/orders/order-allocate-items/index.ts"() {
    "use strict";
    init_order_allocate_items();
  }
});

// src/routes/orders/order-create-shipment/components/order-create-shipment-form/constants.ts
var import_zod32, CreateShipmentSchema;
var init_constants11 = __esm({
  "src/routes/orders/order-create-shipment/components/order-create-shipment-form/constants.ts"() {
    "use strict";
    import_zod32 = require("zod");
    CreateShipmentSchema = import_zod32.z.object({
      labels: import_zod32.z.array(
        import_zod32.z.object({
          tracking_number: import_zod32.z.string(),
          // TODO: this 2 are not optional in the API
          tracking_url: import_zod32.z.string().optional(),
          label_url: import_zod32.z.string().optional()
        })
      ),
      send_notification: import_zod32.z.boolean().optional()
    });
  }
});

// src/routes/orders/order-create-shipment/components/order-create-shipment-form/order-create-shipment-form.tsx
function OrderCreateShipmentForm({
  order,
  fulfillment
}) {
  const { t: t4 } = (0, import_react_i18next152.useTranslation)();
  const { handleSuccess } = useRouteModal();
  const { mutateAsync: createShipment, isPending: isMutating } = useCreateOrderShipment(order.id, fulfillment?.id);
  const form = (0, import_react_hook_form36.useForm)({
    defaultValues: {
      send_notification: !order.no_notification
    },
    resolver: (0, import_zod33.zodResolver)(CreateShipmentSchema)
  });
  const { fields: labels, append } = (0, import_react_hook_form36.useFieldArray)({
    name: "labels",
    control: form.control
  });
  const handleSubmit = form.handleSubmit(async (data) => {
    await createShipment(
      {
        items: fulfillment?.items?.map((i) => ({
          id: i.line_item_id,
          quantity: i.quantity
        })),
        labels: data.labels.filter((l) => !!l.tracking_number).map((l) => ({
          tracking_number: l.tracking_number,
          tracking_url: "#",
          label_url: "#"
        })),
        no_notification: !data.send_notification
      },
      {
        onSuccess: () => {
          import_ui152.toast.success(t4("orders.shipment.toastCreated"));
          handleSuccess(`/orders/${order.id}`);
        },
        onError: (e) => {
          import_ui152.toast.error(e.message);
        }
      }
    );
  });
  return /* @__PURE__ */ (0, import_jsx_runtime233.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime233.jsxs)(
    KeyboundForm,
    {
      onSubmit: handleSubmit,
      className: "flex h-full flex-col overflow-hidden",
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime233.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime233.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime233.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime233.jsx)(import_ui152.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime233.jsx)(import_ui152.Button, { size: "small", type: "submit", isLoading: isMutating, children: t4("actions.save") })
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime233.jsx)(RouteFocusModal.Body, { className: "flex h-full w-full flex-col items-center divide-y overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime233.jsx)("div", { className: "flex size-full flex-col items-center overflow-auto p-16", children: /* @__PURE__ */ (0, import_jsx_runtime233.jsx)("div", { className: "flex w-full max-w-[736px] flex-col justify-center px-2 pb-2", children: /* @__PURE__ */ (0, import_jsx_runtime233.jsxs)("div", { className: "flex flex-col divide-y", children: [
          /* @__PURE__ */ (0, import_jsx_runtime233.jsxs)("div", { className: "flex flex-1 flex-col", children: [
            /* @__PURE__ */ (0, import_jsx_runtime233.jsx)(import_ui152.Heading, { className: "mb-4", children: t4("orders.shipment.title") }),
            labels.map((label, index2) => /* @__PURE__ */ (0, import_jsx_runtime233.jsx)(
              Form.Field,
              {
                control: form.control,
                name: `labels.${index2}.tracking_number`,
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime233.jsxs)(Form.Item, { className: "mb-4", children: [
                    index2 === 0 && /* @__PURE__ */ (0, import_jsx_runtime233.jsx)(Form.Label, { children: t4("orders.shipment.trackingNumber") }),
                    /* @__PURE__ */ (0, import_jsx_runtime233.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime233.jsx)(import_ui152.Input, { ...field, placeholder: "123-456-789" }) }),
                    /* @__PURE__ */ (0, import_jsx_runtime233.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              },
              label.id
            )),
            /* @__PURE__ */ (0, import_jsx_runtime233.jsx)(
              import_ui152.Button,
              {
                type: "button",
                onClick: () => append({ tracking_number: "" }),
                className: "self-end",
                variant: "secondary",
                children: t4("orders.shipment.addTracking")
              }
            )
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime233.jsx)("div", { className: "mt-8 pt-8 ", children: /* @__PURE__ */ (0, import_jsx_runtime233.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "send_notification",
              render: ({ field: { onChange, value, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime233.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime233.jsxs)("div", { className: "flex items-center justify-between", children: [
                    /* @__PURE__ */ (0, import_jsx_runtime233.jsx)(Form.Label, { children: t4("orders.shipment.sendNotification") }),
                    /* @__PURE__ */ (0, import_jsx_runtime233.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime233.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime233.jsx)(
                      import_ui152.Switch,
                      {
                        checked: !!value,
                        onCheckedChange: onChange,
                        ...field
                      }
                    ) }) })
                  ] }),
                  /* @__PURE__ */ (0, import_jsx_runtime233.jsx)(Form.Hint, { className: "!mt-1", children: t4("orders.shipment.sendNotificationHint") }),
                  /* @__PURE__ */ (0, import_jsx_runtime233.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ) })
        ] }) }) }) })
      ]
    }
  ) });
}
var import_zod33, import_react_i18next152, import_ui152, import_react_hook_form36, import_jsx_runtime233;
var init_order_create_shipment_form = __esm({
  "src/routes/orders/order-create-shipment/components/order-create-shipment-form/order-create-shipment-form.tsx"() {
    "use strict";
    import_zod33 = require("@hookform/resolvers/zod");
    import_react_i18next152 = require("react-i18next");
    import_ui152 = require("@medusajs/ui");
    import_react_hook_form36 = require("react-hook-form");
    init_form2();
    init_modals();
    init_keybound_form2();
    init_api();
    init_constants11();
    import_jsx_runtime233 = require("react/jsx-runtime");
  }
});

// src/routes/orders/order-create-shipment/components/order-create-shipment-form/index.ts
var init_order_create_shipment_form2 = __esm({
  "src/routes/orders/order-create-shipment/components/order-create-shipment-form/index.ts"() {
    "use strict";
    init_order_create_shipment_form();
  }
});

// src/routes/orders/order-create-shipment/order-create-shipment.tsx
function OrderCreateShipment() {
  const { id: id2, f_id } = (0, import_react_router_dom72.useParams)();
  const { order, isLoading, isError, error } = useOrder(id2, {
    fields: "*fulfillments,*fulfillments.items"
  });
  if (isError) {
    throw error;
  }
  const ready = !isLoading && order;
  return /* @__PURE__ */ (0, import_jsx_runtime234.jsx)(RouteFocusModal, { children: ready && /* @__PURE__ */ (0, import_jsx_runtime234.jsx)(
    OrderCreateShipmentForm,
    {
      order,
      fulfillment: order.fulfillments?.find((f) => f.id === f_id)
    }
  ) });
}
var import_react_router_dom72, import_jsx_runtime234;
var init_order_create_shipment = __esm({
  "src/routes/orders/order-create-shipment/order-create-shipment.tsx"() {
    "use strict";
    import_react_router_dom72 = require("react-router-dom");
    init_modals();
    init_orders();
    init_order_create_shipment_form2();
    import_jsx_runtime234 = require("react/jsx-runtime");
  }
});

// src/routes/orders/order-create-shipment/index.ts
var order_create_shipment_exports = {};
__export(order_create_shipment_exports, {
  Component: () => OrderCreateShipment
});
var init_order_create_shipment2 = __esm({
  "src/routes/orders/order-create-shipment/index.ts"() {
    "use strict";
    init_order_create_shipment();
  }
});

// src/routes/orders/common/placeholders.tsx
var import_react_i18next153, import_react_router_dom73, import_jsx_runtime235, ReturnShippingPlaceholder, OutboundShippingPlaceholder;
var init_placeholders = __esm({
  "src/routes/orders/common/placeholders.tsx"() {
    "use strict";
    import_react_i18next153 = require("react-i18next");
    import_react_router_dom73 = require("react-router-dom");
    import_jsx_runtime235 = require("react/jsx-runtime");
    ReturnShippingPlaceholder = () => {
      const { t: t4 } = (0, import_react_i18next153.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime235.jsxs)("div", { className: "flex h-[120px] flex-col items-center justify-center gap-2 p-2 text-center", children: [
        /* @__PURE__ */ (0, import_jsx_runtime235.jsx)("span", { className: "txt-small text-ui-fg-subtle font-medium", children: t4("orders.returns.placeholders.noReturnShippingOptions.title") }),
        /* @__PURE__ */ (0, import_jsx_runtime235.jsx)("span", { className: "txt-small text-ui-fg-muted", children: /* @__PURE__ */ (0, import_jsx_runtime235.jsx)(
          import_react_i18next153.Trans,
          {
            i18nKey: "orders.returns.placeholders.noReturnShippingOptions.hint",
            components: {
              LinkComponent: /* @__PURE__ */ (0, import_jsx_runtime235.jsx)(import_react_router_dom73.Link, { to: `/settings/locations`, className: "text-blue-500" })
            }
          }
        ) })
      ] });
    };
    OutboundShippingPlaceholder = () => {
      const { t: t4 } = (0, import_react_i18next153.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime235.jsxs)("div", { className: "flex h-[120px] flex-col items-center justify-center gap-2 p-2 text-center", children: [
        /* @__PURE__ */ (0, import_jsx_runtime235.jsx)("span", { className: "txt-small text-ui-fg-subtle font-medium", children: t4("orders.returns.placeholders.outboundShippingOptions.title") }),
        /* @__PURE__ */ (0, import_jsx_runtime235.jsx)("span", { className: "txt-small text-ui-fg-muted", children: /* @__PURE__ */ (0, import_jsx_runtime235.jsx)(
          import_react_i18next153.Trans,
          {
            i18nKey: "orders.returns.placeholders.outboundShippingOptions.hint",
            components: {
              LinkComponent: /* @__PURE__ */ (0, import_jsx_runtime235.jsx)(import_react_router_dom73.Link, { to: `/settings/locations`, className: "text-blue-500" })
            }
          }
        ) })
      ] });
    };
  }
});

// src/routes/orders/order-create-return/components/add-return-items-table/use-return-item-table-columns.tsx
var import_react135, import_ui153, import_react_table17, import_react_i18next154, import_jsx_runtime236, columnHelper16, useReturnItemTableColumns;
var init_use_return_item_table_columns = __esm({
  "src/routes/orders/order-create-return/components/add-return-items-table/use-return-item-table-columns.tsx"() {
    "use strict";
    import_react135 = require("react");
    import_ui153 = require("@medusajs/ui");
    import_react_table17 = require("@tanstack/react-table");
    import_react_i18next154 = require("react-i18next");
    init_product_cell2();
    init_money_amount_helpers();
    init_rma();
    import_jsx_runtime236 = require("react/jsx-runtime");
    columnHelper16 = (0, import_react_table17.createColumnHelper)();
    useReturnItemTableColumns = (currencyCode) => {
      const { t: t4 } = (0, import_react_i18next154.useTranslation)();
      return (0, import_react135.useMemo)(
        () => [
          columnHelper16.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime236.jsx)(
                import_ui153.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              const isSelectable = row.getCanSelect();
              return /* @__PURE__ */ (0, import_jsx_runtime236.jsx)(
                import_ui153.Checkbox,
                {
                  disabled: !isSelectable,
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          columnHelper16.display({
            id: "product",
            header: () => /* @__PURE__ */ (0, import_jsx_runtime236.jsx)(ProductHeader, {}),
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime236.jsx)(ProductCell, { product: row.original.variant.product })
          }),
          columnHelper16.accessor("variant.sku", {
            header: t4("fields.sku"),
            cell: ({ getValue: getValue2 }) => {
              return getValue2() || "-";
            }
          }),
          columnHelper16.accessor("variant.title", {
            header: t4("fields.variant")
          }),
          columnHelper16.accessor("quantity", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime236.jsx)("div", { className: "flex size-full items-center overflow-hidden text-right", children: /* @__PURE__ */ (0, import_jsx_runtime236.jsx)("span", { className: "truncate", children: t4("fields.quantity") }) }),
            cell: ({ getValue: getValue2, row }) => {
              return getReturnableQuantity(row.original);
            }
          }),
          columnHelper16.accessor("refundable_total", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime236.jsx)("div", { className: "flex size-full items-center justify-end overflow-hidden text-right", children: /* @__PURE__ */ (0, import_jsx_runtime236.jsx)("span", { className: "truncate", children: t4("fields.price") }) }),
            cell: ({ getValue: getValue2 }) => {
              const amount = getValue2() || 0;
              const stylized = getStylizedAmount(amount, currencyCode);
              return /* @__PURE__ */ (0, import_jsx_runtime236.jsx)("div", { className: "flex size-full items-center justify-end overflow-hidden text-right", children: /* @__PURE__ */ (0, import_jsx_runtime236.jsx)("span", { className: "truncate", children: stylized }) });
            }
          })
        ],
        [t4, currencyCode]
      );
    };
  }
});

// src/routes/orders/order-create-return/components/add-return-items-table/use-return-item-table-filters.tsx
var import_react_i18next155, useReturnItemTableFilters;
var init_use_return_item_table_filters = __esm({
  "src/routes/orders/order-create-return/components/add-return-items-table/use-return-item-table-filters.tsx"() {
    "use strict";
    import_react_i18next155 = require("react-i18next");
    useReturnItemTableFilters = () => {
      const { t: t4 } = (0, import_react_i18next155.useTranslation)();
      const filters = [
        {
          key: "returnable_quantity",
          label: t4("orders.returns.returnableQuantityLabel"),
          type: "number"
        },
        {
          key: "refundable_amount",
          label: t4("orders.returns.refundableAmountLabel"),
          type: "number"
        },
        {
          key: "created_at",
          label: t4("fields.createdAt"),
          type: "date"
        },
        {
          key: "updated_at",
          label: t4("fields.updatedAt"),
          type: "date"
        }
      ];
      return filters;
    };
  }
});

// src/routes/orders/order-create-return/components/add-return-items-table/use-return-item-table-query.tsx
var useReturnItemTableQuery;
var init_use_return_item_table_query = __esm({
  "src/routes/orders/order-create-return/components/add-return-items-table/use-return-item-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useReturnItemTableQuery = ({
      pageSize = 50,
      prefix
    }) => {
      const raw = useQueryParams(
        [
          "q",
          "offset",
          "order",
          "created_at",
          "updated_at",
          "returnable_quantity",
          "refundable_amount"
        ],
        prefix
      );
      const {
        offset: offset4,
        created_at,
        updated_at,
        refundable_amount,
        returnable_quantity,
        ...rest
      } = raw;
      const searchParams = {
        ...rest,
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0,
        refundable_amount: refundable_amount ? JSON.parse(refundable_amount) : void 0,
        returnable_quantity: returnable_quantity ? JSON.parse(returnable_quantity) : void 0
      };
      return { searchParams, raw };
    };
  }
});

// src/routes/orders/order-create-return/components/add-return-items-table/add-return-items-table.tsx
var import_react136, import_react_i18next156, import_jsx_runtime237, PAGE_SIZE10, PREFIX2, AddReturnItemsTable, sortItems, filterByDate, defaultOperators, filterByNumber;
var init_add_return_items_table = __esm({
  "src/routes/orders/order-create-return/components/add-return-items-table/add-return-items-table.tsx"() {
    "use strict";
    import_react136 = require("react");
    import_react_i18next156 = require("react-i18next");
    init_data_table2();
    init_use_data_table();
    init_money_amount_helpers();
    init_rma();
    init_use_return_item_table_columns();
    init_use_return_item_table_filters();
    init_use_return_item_table_query();
    import_jsx_runtime237 = require("react/jsx-runtime");
    PAGE_SIZE10 = 50;
    PREFIX2 = "rit";
    AddReturnItemsTable = ({
      onSelectionChange,
      selectedItems: selectedItems2,
      items,
      currencyCode
    }) => {
      const { t: t4 } = (0, import_react_i18next156.useTranslation)();
      const [rowSelection, setRowSelection] = (0, import_react136.useState)(
        selectedItems2.reduce((acc, id2) => {
          acc[id2] = true;
          return acc;
        }, {})
      );
      const updater = (fn) => {
        const newState = typeof fn === "function" ? fn(rowSelection) : fn;
        setRowSelection(newState);
        onSelectionChange(Object.keys(newState));
      };
      const { searchParams, raw } = useReturnItemTableQuery({
        pageSize: PAGE_SIZE10,
        prefix: PREFIX2
      });
      const queriedItems = (0, import_react136.useMemo)(() => {
        const {
          order,
          offset: offset4,
          limit,
          q,
          created_at,
          updated_at,
          refundable_amount,
          returnable_quantity
        } = searchParams;
        let results = items;
        if (q) {
          results = results.filter((i) => {
            return i.variant.product.title.toLowerCase().includes(q.toLowerCase()) || i.variant.title.toLowerCase().includes(q.toLowerCase()) || i.variant.sku?.toLowerCase().includes(q.toLowerCase());
          });
        }
        if (order) {
          const direction = order[0] === "-" ? "desc" : "asc";
          const field = order.replace("-", "");
          results = sortItems(results, field, direction);
        }
        if (created_at) {
          results = filterByDate(results, created_at, "created_at");
        }
        if (updated_at) {
          results = filterByDate(results, updated_at, "updated_at");
        }
        if (returnable_quantity) {
          results = filterByNumber(
            results,
            returnable_quantity,
            "returnable_quantity",
            currencyCode
          );
        }
        if (refundable_amount) {
          results = filterByNumber(
            results,
            refundable_amount,
            "refundable_amount",
            currencyCode
          );
        }
        return results.slice(offset4, offset4 + limit);
      }, [items, currencyCode, searchParams]);
      const columns = useReturnItemTableColumns(currencyCode);
      const filters = useReturnItemTableFilters();
      const { table } = useDataTable({
        data: queriedItems,
        columns,
        count: queriedItems.length,
        enablePagination: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE10,
        enableRowSelection: (row) => {
          return getReturnableQuantity(row.original) > 0;
        },
        rowSelection: {
          state: rowSelection,
          updater
        }
      });
      return /* @__PURE__ */ (0, import_jsx_runtime237.jsx)("div", { className: "flex size-full flex-col overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime237.jsx)(
        DataTable,
        {
          table,
          columns,
          pageSize: PAGE_SIZE10,
          count: queriedItems.length,
          filters,
          pagination: true,
          layout: "fill",
          search: true,
          orderBy: [
            { key: "product_title", label: t4("fields.product") },
            { key: "variant_title", label: t4("fields.variant") },
            { key: "sku", label: t4("fields.sku") },
            {
              key: "returnable_quantity",
              label: t4("orders.fields.returnableQuantity")
            },
            {
              key: "refundable_amount",
              label: t4("orders.fields.refundableAmount")
            }
          ],
          prefix: PREFIX2,
          queryObject: raw
        }
      ) });
    };
    sortItems = (items, field, direction) => {
      return items.sort((a, b) => {
        let aValue;
        let bValue;
        if (field === "product_title") {
          aValue = a.variant.product.title;
          bValue = b.variant.product.title;
        } else if (field === "variant_title") {
          aValue = a.variant.title;
          bValue = b.variant.title;
        } else if (field === "sku") {
          aValue = a.variant.sku;
          bValue = b.variant.sku;
        } else if (field === "returnable_quantity") {
          aValue = a.quantity - (a.returned_quantity || 0);
          bValue = b.quantity - (b.returned_quantity || 0);
        } else if (field === "refundable_amount") {
          aValue = a.refundable || 0;
          bValue = b.refundable || 0;
        }
        if (aValue < bValue) {
          return direction === "asc" ? -1 : 1;
        }
        if (aValue > bValue) {
          return direction === "asc" ? 1 : -1;
        }
        return 0;
      });
    };
    filterByDate = (items, date3, field) => {
      const { gt, gte, lt, lte } = date3;
      return items.filter((i) => {
        const itemDate = new Date(i[field]);
        let isValid = true;
        if (gt) {
          isValid = isValid && itemDate > new Date(gt);
        }
        if (gte) {
          isValid = isValid && itemDate >= new Date(gte);
        }
        if (lt) {
          isValid = isValid && itemDate < new Date(lt);
        }
        if (lte) {
          isValid = isValid && itemDate <= new Date(lte);
        }
        return isValid;
      });
    };
    defaultOperators = {
      eq: void 0,
      gt: void 0,
      gte: void 0,
      lt: void 0,
      lte: void 0
    };
    filterByNumber = (items, value, field, currency_code) => {
      const { eq, gt, lt, gte, lte } = typeof value === "object" ? { ...defaultOperators, ...value } : { ...defaultOperators, eq: value };
      return items.filter((i) => {
        const returnableQuantity = i.quantity - (i.returned_quantity || 0);
        const refundableAmount = getStylizedAmount(i.refundable || 0, currency_code);
        const itemValue = field === "returnable_quantity" ? returnableQuantity : refundableAmount;
        if (eq) {
          return itemValue === eq;
        }
        let isValid = true;
        if (gt) {
          isValid = isValid && itemValue > gt;
        }
        if (gte) {
          isValid = isValid && itemValue >= gte;
        }
        if (lt) {
          isValid = isValid && itemValue < lt;
        }
        if (lte) {
          isValid = isValid && itemValue <= lte;
        }
        return isValid;
      });
    };
  }
});

// src/routes/orders/order-create-return/components/add-return-items-table/index.ts
var init_add_return_items_table2 = __esm({
  "src/routes/orders/order-create-return/components/add-return-items-table/index.ts"() {
    "use strict";
    init_add_return_items_table();
  }
});

// src/routes/orders/order-create-return/components/return-create-form/return-item.tsx
function ReturnItem({
  item,
  previewItem,
  currencyCode,
  form,
  onRemove,
  onUpdate,
  index: index2
}) {
  const { t: t4 } = (0, import_react_i18next157.useTranslation)();
  const { return_reasons = [] } = useReturnReasons({ fields: "+label" });
  const formItem = form.watch(`items.${index2}`);
  const showReturnReason = typeof formItem.reason_id === "string";
  const showNote = typeof formItem.note === "string";
  return /* @__PURE__ */ (0, import_jsx_runtime238.jsxs)("div", { className: "bg-ui-bg-subtle shadow-elevation-card-rest my-2 rounded-xl ", children: [
    /* @__PURE__ */ (0, import_jsx_runtime238.jsxs)("div", { className: "flex flex-col items-center gap-x-2 gap-y-2 border-b p-3 text-sm md:flex-row", children: [
      /* @__PURE__ */ (0, import_jsx_runtime238.jsxs)("div", { className: "flex flex-1 items-center gap-x-3", children: [
        /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(Thumbnail, { src: item.thumbnail }),
        /* @__PURE__ */ (0, import_jsx_runtime238.jsxs)("div", { className: "flex flex-col", children: [
          /* @__PURE__ */ (0, import_jsx_runtime238.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime238.jsxs)(import_ui154.Text, { className: "txt-small", as: "span", weight: "plus", children: [
              item.title,
              " "
            ] }),
            item.variant.sku && /* @__PURE__ */ (0, import_jsx_runtime238.jsxs)("span", { children: [
              "(",
              item.variant.sku,
              ")"
            ] })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(import_ui154.Text, { as: "div", className: "text-ui-fg-subtle txt-small", children: item.variant.product.title })
        ] })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime238.jsxs)("div", { className: "flex flex-1 justify-between", children: [
        /* @__PURE__ */ (0, import_jsx_runtime238.jsxs)("div", { className: "flex flex-grow items-center gap-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(
            Form.Field,
            {
              control: form.control,
              name: `items.${index2}.quantity`,
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime238.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(
                    import_ui154.Input,
                    {
                      className: "bg-ui-bg-base txt-small w-[67px] rounded-lg",
                      min: 1,
                      max: item.quantity,
                      type: "number",
                      ...field,
                      onChange: (e) => {
                        const val = e.target.value;
                        const payload = val === "" ? null : Number(val);
                        field.onChange(payload);
                        if (payload) {
                          onUpdate({ quantity: payload });
                        }
                      }
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(import_ui154.Text, { className: "txt-small text-ui-fg-subtle", children: t4("fields.qty") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime238.jsx)("div", { className: "text-ui-fg-subtle txt-small mr-2 flex flex-shrink-0", children: /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(
          MoneyAmountCell,
          {
            currencyCode,
            amount: previewItem.return_requested_total
          }
        ) }),
        /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(
          ActionMenu,
          {
            groups: [
              {
                actions: [
                  !showReturnReason && {
                    label: t4("actions.addReason"),
                    onClick: () => form.setValue(`items.${index2}.reason_id`, ""),
                    icon: /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(import_icons78.ChatBubble, {})
                  },
                  !showNote && {
                    label: t4("actions.addNote"),
                    onClick: () => form.setValue(`items.${index2}.note`, ""),
                    icon: /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(import_icons78.DocumentText, {})
                  },
                  {
                    label: t4("actions.remove"),
                    onClick: onRemove,
                    icon: /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(import_icons78.XCircle, {})
                  }
                ].filter(Boolean)
              }
            ]
          }
        )
      ] })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime238.jsxs)(import_jsx_runtime238.Fragment, { children: [
      showReturnReason && /* @__PURE__ */ (0, import_jsx_runtime238.jsxs)("div", { className: "grid grid-cols-1 gap-2 p-3 md:grid-cols-2", children: [
        /* @__PURE__ */ (0, import_jsx_runtime238.jsxs)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(Form.Label, { children: t4("orders.returns.reason") }),
          /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(Form.Hint, { className: "!mt-1", children: t4("orders.returns.reasonHint") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime238.jsxs)("div", { className: "flex items-center gap-1", children: [
          /* @__PURE__ */ (0, import_jsx_runtime238.jsx)("div", { className: "flex-grow", children: /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(
            Form.Field,
            {
              control: form.control,
              name: `items.${index2}.reason_id`,
              render: ({ field: { ref, value, onChange, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime238.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(
                    Combobox,
                    {
                      className: "bg-ui-bg-field-component hover:bg-ui-bg-field-component-hover",
                      value,
                      onChange: (v) => {
                        onUpdate({ reason_id: v });
                        onChange(v);
                      },
                      ...field,
                      options: return_reasons.map((reason) => ({
                        label: reason.label,
                        value: reason.id
                      }))
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ) }),
          /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(
            import_ui154.IconButton,
            {
              type: "button",
              className: "flex-shrink",
              variant: "transparent",
              onClick: () => {
                onUpdate({ reason_id: null });
                form.setValue(`items.${index2}.reason_id`, null);
              },
              children: /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(import_icons78.XMark, { className: "text-ui-fg-muted" })
            }
          )
        ] })
      ] }),
      showNote && /* @__PURE__ */ (0, import_jsx_runtime238.jsxs)("div", { className: "grid grid-cols-1 gap-2 p-3 md:grid-cols-2", children: [
        /* @__PURE__ */ (0, import_jsx_runtime238.jsxs)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(Form.Label, { children: t4("orders.returns.note") }),
          /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(Form.Hint, { className: "!mt-1", children: t4("orders.returns.noteHint") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime238.jsxs)("div", { className: "flex items-center gap-1", children: [
          /* @__PURE__ */ (0, import_jsx_runtime238.jsx)("div", { className: "flex-grow", children: /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(
            Form.Field,
            {
              control: form.control,
              name: `items.${index2}.note`,
              render: ({ field: { ref, onChange, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime238.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(
                    import_ui154.Input,
                    {
                      onChange,
                      ...field,
                      onBlur: () => onUpdate({ internal_note: field.value }),
                      className: "bg-ui-bg-field-component hover:bg-ui-bg-field-component-hover"
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ) }),
          /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(
            import_ui154.IconButton,
            {
              type: "button",
              className: "flex-shrink",
              variant: "transparent",
              onClick: () => {
                form.setValue(`items.${index2}.note`, {
                  shouldDirty: true,
                  shouldTouch: true
                });
                onUpdate({ internal_note: null });
              },
              children: /* @__PURE__ */ (0, import_jsx_runtime238.jsx)(import_icons78.XMark, { className: "text-ui-fg-muted" })
            }
          )
        ] })
      ] })
    ] })
  ] });
}
var import_react_i18next157, import_ui154, import_icons78, import_jsx_runtime238;
var init_return_item = __esm({
  "src/routes/orders/order-create-return/components/return-create-form/return-item.tsx"() {
    "use strict";
    import_react_i18next157 = require("react-i18next");
    import_ui154 = require("@medusajs/ui");
    import_icons78 = require("@medusajs/icons");
    init_thumbnail2();
    init_money_amount_cell2();
    init_form2();
    init_action_menu2();
    init_combobox2();
    init_return_reasons();
    import_jsx_runtime238 = require("react/jsx-runtime");
  }
});

// src/routes/orders/order-create-return/components/return-create-form/schema.ts
var import_zod34, ReturnCreateSchema;
var init_schema2 = __esm({
  "src/routes/orders/order-create-return/components/return-create-form/schema.ts"() {
    "use strict";
    import_zod34 = require("zod");
    ReturnCreateSchema = import_zod34.z.object({
      items: import_zod34.z.array(
        import_zod34.z.object({
          item_id: import_zod34.z.string(),
          quantity: import_zod34.z.number(),
          reason_id: import_zod34.z.string().optional().nullable(),
          note: import_zod34.z.string().optional().nullable()
        })
      ),
      location_id: import_zod34.z.string().optional(),
      option_id: import_zod34.z.string(),
      send_notification: import_zod34.z.boolean().optional(),
      // TODO: implement this
      receive_now: import_zod34.z.boolean().optional()
    });
  }
});

// src/routes/orders/order-create-return/components/return-create-form/return-create-form.tsx
var import_zod35, import_icons79, import_ui155, import_react137, import_react_hook_form37, import_react_i18next158, import_jsx_runtime239, selectedItems, ReturnCreateForm;
var init_return_create_form = __esm({
  "src/routes/orders/order-create-return/components/return-create-form/return-create-form.tsx"() {
    "use strict";
    import_zod35 = require("@hookform/resolvers/zod");
    import_icons79 = require("@medusajs/icons");
    import_ui155 = require("@medusajs/ui");
    import_react137 = require("react");
    import_react_hook_form37 = require("react-hook-form");
    import_react_i18next158 = require("react-i18next");
    init_modals();
    init_form2();
    init_combobox2();
    init_keybound_form2();
    init_returns();
    init_shipping_options();
    init_stock_locations();
    init_client2();
    init_currencies2();
    init_money_amount_helpers();
    init_placeholders();
    init_add_return_items_table2();
    init_return_item();
    init_schema2();
    import_jsx_runtime239 = require("react/jsx-runtime");
    selectedItems = [];
    ReturnCreateForm = ({
      order,
      preview,
      activeReturn
    }) => {
      const { t: t4 } = (0, import_react_i18next158.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const itemsMap = (0, import_react137.useMemo)(
        () => new Map((order.items || []).map((i) => [i.id, i])),
        [order.items]
      );
      const previewItems = (0, import_react137.useMemo)(
        () => preview.items.filter(
          (i) => !!i.actions?.find((a) => a.return_id === activeReturn.id)
        ),
        [preview.items]
      );
      const previewItemsMap = (0, import_react137.useMemo)(
        () => new Map(previewItems.map((i) => [i.id, i])),
        [previewItems]
      );
      const { setIsOpen } = useStackedModal();
      const [isShippingPriceEdit, setIsShippingPriceEdit] = (0, import_react137.useState)(false);
      const [customShippingAmount, setCustomShippingAmount] = (0, import_react137.useState)(0);
      const [inventoryMap, setInventoryMap] = (0, import_react137.useState)({});
      const { stock_locations = [] } = useStockLocations({ limit: 999 });
      const { shipping_options = [] } = useShippingOptions({
        limit: 999,
        fields: "*prices,+service_zone.fulfillment_set.location.id"
        /**
         * TODO: this should accept filter for location_id
         */
      });
      const { mutateAsync: confirmReturnRequest, isPending: isConfirming } = useConfirmReturnRequest(activeReturn.id, order.id);
      const { mutateAsync: cancelReturnRequest, isPending: isCanceling } = useCancelReturnRequest(activeReturn.id, order.id);
      const { mutateAsync: updateReturnRequest, isPending: isUpdating } = useUpdateReturn(activeReturn.id, order.id);
      const { mutateAsync: addReturnShipping, isPending: isAddingReturnShipping } = useAddReturnShipping(activeReturn.id, order.id);
      const {
        mutateAsync: updateReturnShipping,
        isPending: isUpdatingReturnShipping
      } = useUpdateReturnShipping(activeReturn.id, order.id);
      const {
        mutateAsync: deleteReturnShipping,
        isPending: isDeletingReturnShipping
      } = useDeleteReturnShipping(activeReturn.id, order.id);
      const { mutateAsync: addReturnItem, isPending: isAddingReturnItem } = useAddReturnItem(activeReturn.id, order.id);
      const { mutateAsync: removeReturnItem, isPending: isRemovingReturnItem } = useRemoveReturnItem(activeReturn.id, order.id);
      const { mutateAsync: updateReturnItem, isPending: isUpdatingReturnItem } = useUpdateReturnItem(activeReturn.id, order.id);
      const isRequestLoading = isConfirming || isCanceling || isAddingReturnShipping || isUpdatingReturnShipping || isDeletingReturnShipping || isAddingReturnItem || isRemovingReturnItem || isUpdatingReturnItem || isUpdating;
      const form = (0, import_react_hook_form37.useForm)({
        /**
         * TODO: reason selection once Return reason settings are added
         */
        defaultValues: () => {
          const method = preview.shipping_methods.find(
            (s) => !!s.actions?.find((a) => a.action === "SHIPPING_ADD")
          );
          return Promise.resolve({
            items: previewItems.map((i) => ({
              item_id: i.id,
              quantity: i.detail.return_requested_quantity,
              note: i.actions?.find((a) => a.action === "RETURN_ITEM")?.internal_note,
              reason_id: i.actions?.find((a) => a.action === "RETURN_ITEM")?.details?.reason_id
            })),
            option_id: method ? method.shipping_option_id : "",
            location_id: activeReturn?.location_id,
            send_notification: false
          });
        },
        resolver: (0, import_zod35.zodResolver)(ReturnCreateSchema)
      });
      const {
        fields: items,
        append,
        remove,
        update
      } = (0, import_react_hook_form37.useFieldArray)({
        name: "items",
        control: form.control
      });
      (0, import_react137.useEffect)(() => {
        const existingItemsMap = {};
        previewItems.forEach((i) => {
          const ind = items.findIndex((field) => field.item_id === i.id);
          if (!i.detail.return_requested_quantity) {
            return;
          }
          existingItemsMap[i.id] = true;
          if (ind > -1) {
            if (items[ind].quantity !== i.detail.return_requested_quantity) {
              const returnItemAction = i.actions?.find(
                (a) => a.action === "RETURN_ITEM"
              );
              update(ind, {
                ...items[ind],
                quantity: i.detail.return_requested_quantity,
                note: returnItemAction?.internal_note,
                reason_id: returnItemAction?.details?.reason_id
              });
            }
          } else {
            append({ item_id: i.id, quantity: i.detail.return_requested_quantity });
          }
        });
        items.forEach((i, ind) => {
          if (!(i.item_id in existingItemsMap)) {
            remove(ind);
          }
        });
      }, [previewItems]);
      (0, import_react137.useEffect)(() => {
        const method = preview.shipping_methods?.find(
          (s) => !!s.actions?.find((a) => a.action === "SHIPPING_ADD")
        );
        if (method) {
          form.setValue("option_id", method.shipping_option_id);
        } else {
          form.setValue("option_id", "");
        }
      }, [preview.shipping_methods]);
      const showPlaceholder = !items.length;
      const locationId = form.watch("location_id");
      const shippingOptionId = form.watch("option_id");
      const prompt = (0, import_ui155.usePrompt)();
      const handleSubmit = form.handleSubmit(async (data) => {
        try {
          const res = await prompt({
            title: t4("general.areYouSure"),
            description: t4("orders.returns.confirmText"),
            confirmText: t4("actions.continue"),
            cancelText: t4("actions.cancel"),
            variant: "confirmation"
          });
          if (!res) {
            return;
          }
          await confirmReturnRequest({ no_notification: !data.send_notification });
          handleSuccess();
        } catch (e) {
          import_ui155.toast.error(t4("general.error"), {
            description: e.message,
            dismissLabel: t4("actions.close")
          });
        }
      });
      const onItemsSelected = () => {
        addReturnItem({
          items: selectedItems.map((id2) => ({
            id: id2,
            quantity: 1
          }))
        });
        setIsOpen("items", false);
      };
      const onLocationChange = async (selectedLocationId) => {
        await updateReturnRequest({ location_id: selectedLocationId });
      };
      const onShippingOptionChange = async (selectedOptionId) => {
        const promises = preview.shipping_methods.map((s) => s.actions?.find((a) => a.action === "SHIPPING_ADD")?.id).filter(Boolean).map(deleteReturnShipping);
        await Promise.all(promises);
        await addReturnShipping({ shipping_option_id: selectedOptionId });
      };
      (0, import_react137.useEffect)(() => {
        if (isShippingPriceEdit) {
          document.getElementById("js-shipping-input").focus();
        }
      }, [isShippingPriceEdit]);
      (0, import_react137.useEffect)(() => {
        form.setValue("location_id", activeReturn?.location_id || "");
      }, [activeReturn]);
      const showLevelsWarning = (0, import_react137.useMemo)(() => {
        if (!locationId) {
          return false;
        }
        const allItemsHaveLocation = items.map((_i) => {
          const item = itemsMap.get(_i.item_id);
          if (!item?.variant_id) {
            return true;
          }
          if (!item.variant.manage_inventory) {
            return true;
          }
          return inventoryMap[item.variant_id]?.find(
            (l) => l.location_id === locationId
          );
        }).every(Boolean);
        return !allItemsHaveLocation;
      }, [items, inventoryMap, locationId]);
      (0, import_react137.useEffect)(() => {
        const getInventoryMap = async () => {
          const ret = {};
          if (!items.length) {
            return ret;
          }
          ;
          (await Promise.all(
            items.map(async (_i) => {
              const item = itemsMap.get(_i.item_id);
              if (!item.variant_id) {
                return void 0;
              }
              return await sdk.admin.product.retrieveVariant(
                item.variant.product.id,
                item.variant_id,
                { fields: "*inventory,*inventory.location_levels" }
              );
            })
          )).filter((it) => it?.variant).forEach((item) => {
            const { variant } = item;
            const levels = variant.inventory[0]?.location_levels;
            if (!levels) {
              return;
            }
            ret[variant.id] = levels;
          });
          return ret;
        };
        getInventoryMap().then((map) => {
          setInventoryMap(map);
        });
      }, [items]);
      const returnTotal = preview.return_requested_total;
      const shippingTotal = (0, import_react137.useMemo)(() => {
        const method = preview.shipping_methods.find(
          (sm) => !!sm.actions?.find((a) => a.action === "SHIPPING_ADD")
        );
        return method?.total || 0;
      }, [preview.shipping_methods]);
      const refundAmount = returnTotal - shippingTotal;
      return /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(
        RouteFocusModal.Form,
        {
          form,
          onClose: (isSubmitSuccessful) => {
            if (!isSubmitSuccessful) {
              cancelReturnRequest();
            }
          },
          children: /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)(KeyboundForm, { onSubmit: handleSubmit, className: "flex h-full flex-col", children: [
            /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(RouteFocusModal.Header, {}),
            /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(RouteFocusModal.Body, { className: "flex size-full justify-center overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)("div", { className: "mt-16 w-[720px] max-w-[100%] px-4 md:p-0", children: [
              /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(import_ui155.Heading, { level: "h1", children: t4("orders.returns.create") }),
              /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)("div", { className: "mt-8 flex items-center justify-between", children: [
                /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(import_ui155.Heading, { level: "h2", children: t4("orders.returns.inbound") }),
                /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)(StackedFocusModal, { id: "items", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(StackedFocusModal.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime239.jsx)("a", { className: "focus-visible:shadow-borders-focus transition-fg txt-compact-small-plus cursor-pointer text-blue-500 outline-none hover:text-blue-400", children: t4("actions.addItems") }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)(StackedFocusModal.Content, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(StackedFocusModal.Header, {}),
                    /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(
                      AddReturnItemsTable,
                      {
                        items: order.items,
                        selectedItems: items.map((i) => i.item_id),
                        currencyCode: order.currency_code,
                        onSelectionChange: (s) => selectedItems = s
                      }
                    ),
                    /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(StackedFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime239.jsx)("div", { className: "flex w-full items-center justify-end gap-x-4", children: /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
                      /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(
                        import_ui155.Button,
                        {
                          type: "button",
                          variant: "secondary",
                          size: "small",
                          children: t4("actions.cancel")
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(
                        import_ui155.Button,
                        {
                          type: "submit",
                          variant: "primary",
                          size: "small",
                          role: "button",
                          onClick: () => onItemsSelected(),
                          children: t4("actions.save")
                        },
                        "submit-button"
                      )
                    ] }) }) })
                  ] })
                ] })
              ] }),
              showPlaceholder && /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(
                "div",
                {
                  style: {
                    background: "repeating-linear-gradient(-45deg, rgb(212, 212, 216, 0.15), rgb(212, 212, 216,.15) 10px, transparent 10px, transparent 20px)"
                  },
                  className: "bg-ui-bg-field mt-4 block h-[56px] w-full rounded-lg border border-dashed"
                }
              ),
              items.filter((item) => !!previewItemsMap.get(item.item_id)).map((item, index2) => /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(
                ReturnItem,
                {
                  item: itemsMap.get(item.item_id),
                  previewItem: previewItemsMap.get(item.item_id),
                  currencyCode: order.currency_code,
                  form,
                  onRemove: () => {
                    const actionId = previewItems.find((i) => i.id === item.item_id)?.actions?.find((a) => a.action === "RETURN_ITEM")?.id;
                    if (actionId) {
                      removeReturnItem(actionId);
                    }
                  },
                  onUpdate: (payload) => {
                    const action = previewItems.find((i) => i.id === item.item_id)?.actions?.find((a) => a.action === "RETURN_ITEM");
                    if (action) {
                      updateReturnItem(
                        { ...payload, actionId: action.id },
                        {
                          onError: (error) => {
                            if (action.details?.quantity && payload.quantity) {
                              form.setValue(
                                `items.${index2}.quantity`,
                                action.details?.quantity
                              );
                            }
                            import_ui155.toast.error(error.message);
                          }
                        }
                      );
                    }
                  },
                  index: index2
                },
                item.id
              )),
              !showPlaceholder && /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)("div", { className: "mt-8 flex flex-col gap-y-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)("div", { className: "grid grid-cols-1 gap-2 md:grid-cols-2", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)("div", { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(Form.Label, { children: t4("orders.returns.location") }),
                    /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(Form.Hint, { className: "!mt-1", children: t4("orders.returns.locationHint") })
                  ] }),
                  /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(
                    Form.Field,
                    {
                      control: form.control,
                      name: "location_id",
                      render: ({ field: { value, onChange, ...field } }) => {
                        return /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(
                          Combobox,
                          {
                            value,
                            onChange: (v) => {
                              onChange(v);
                              onLocationChange(v);
                            },
                            ...field,
                            options: (stock_locations ?? []).map(
                              (stockLocation) => ({
                                label: stockLocation.name,
                                value: stockLocation.id
                              })
                            )
                          }
                        ) }) });
                      }
                    }
                  )
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)("div", { className: "grid grid-cols-1 gap-2 md:grid-cols-2", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)("div", { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)(Form.Label, { children: [
                      t4("orders.returns.inboundShipping"),
                      /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)(
                        import_ui155.Text,
                        {
                          size: "small",
                          leading: "compact",
                          className: "text-ui-fg-muted ml-1 inline",
                          children: [
                            "(",
                            t4("fields.optional"),
                            ")"
                          ]
                        }
                      )
                    ] }),
                    /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(Form.Hint, { className: "!mt-1", children: t4("orders.returns.inboundShippingHint") })
                  ] }),
                  /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(
                    Form.Field,
                    {
                      control: form.control,
                      name: "option_id",
                      render: ({ field: { value, onChange, ...field } }) => {
                        return /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(
                          Combobox,
                          {
                            value,
                            onChange: (v) => {
                              onChange(v);
                              onShippingOptionChange(v);
                            },
                            ...field,
                            options: (shipping_options ?? []).filter(
                              (so) => (locationId ? so.service_zone.fulfillment_set.location.id === locationId : true) && !!so.rules.find(
                                (r) => r.attribute === "is_return" && r.value === "true"
                              )
                            ).map((so) => ({
                              label: so.name,
                              value: so.id
                            })),
                            disabled: !locationId,
                            noResultsPlaceholder: /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(ReturnShippingPlaceholder, {})
                          }
                        ) }) });
                      }
                    }
                  )
                ] })
              ] }),
              showLevelsWarning && /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)(import_ui155.Alert, { variant: "warning", dismissible: true, className: "mt-4 p-5", children: [
                /* @__PURE__ */ (0, import_jsx_runtime239.jsx)("div", { className: "text-ui-fg-subtle txt-small pb-2 font-medium leading-[20px]", children: t4("orders.returns.noInventoryLevel") }),
                /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(import_ui155.Text, { className: "text-ui-fg-subtle txt-small leading-normal", children: t4("orders.returns.noInventoryLevelDesc") })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)("div", { className: "mt-8 border-y border-dotted py-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)("div", { className: "mb-2 flex items-center justify-between", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime239.jsx)("span", { className: "txt-small text-ui-fg-subtle", children: t4("orders.returns.returnTotal") }),
                  /* @__PURE__ */ (0, import_jsx_runtime239.jsx)("span", { className: "txt-small text-ui-fg-subtle", children: getStylizedAmount(
                    returnTotal ? -1 * returnTotal : returnTotal,
                    order.currency_code
                  ) })
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)("div", { className: "flex items-center justify-between", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime239.jsx)("span", { className: "txt-small text-ui-fg-subtle", children: t4("orders.returns.inboundShipping") }),
                  /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)("span", { className: "txt-small text-ui-fg-subtle flex items-center", children: [
                    !isShippingPriceEdit && /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(
                      import_ui155.IconButton,
                      {
                        onClick: () => setIsShippingPriceEdit(true),
                        variant: "transparent",
                        className: "text-ui-fg-muted",
                        disabled: showPlaceholder || !shippingOptionId,
                        children: /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(import_icons79.PencilSquare, {})
                      }
                    ),
                    isShippingPriceEdit ? /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(
                      import_ui155.CurrencyInput,
                      {
                        id: "js-shipping-input",
                        onBlur: () => {
                          let actionId;
                          preview.shipping_methods.forEach((s) => {
                            if (s.actions) {
                              for (const a of s.actions) {
                                if (a.action === "SHIPPING_ADD") {
                                  actionId = a.id;
                                }
                              }
                            }
                          });
                          if (actionId) {
                            updateReturnShipping({
                              actionId,
                              custom_amount: typeof customShippingAmount === "string" ? null : customShippingAmount
                            });
                          }
                          setIsShippingPriceEdit(false);
                        },
                        symbol: currencies[order.currency_code.toUpperCase()].symbol_native,
                        code: order.currency_code,
                        onValueChange: (value) => setCustomShippingAmount(value ? parseFloat(value) : ""),
                        value: customShippingAmount,
                        disabled: showPlaceholder
                      }
                    ) : getStylizedAmount(shippingTotal, order.currency_code)
                  ] })
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)("div", { className: "mt-4 flex items-center justify-between border-t border-dotted pt-4", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime239.jsx)("span", { className: "txt-small font-medium", children: t4("orders.returns.refundAmount") }),
                  /* @__PURE__ */ (0, import_jsx_runtime239.jsx)("span", { className: "txt-small font-medium", children: getStylizedAmount(
                    refundAmount ? -1 * refundAmount : refundAmount,
                    order.currency_code
                  ) })
                ] })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime239.jsx)("div", { className: "bg-ui-bg-field mt-8 rounded-lg border py-2 pl-2 pr-4", children: /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "send_notification",
                  render: ({ field: { onChange, value, ...field } }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)("div", { className: "flex items-center", children: [
                        /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(Form.Control, { className: "mr-4 self-start", children: /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(
                          import_ui155.Switch,
                          {
                            className: "mt-[2px]",
                            checked: !!value,
                            onCheckedChange: onChange,
                            ...field
                          }
                        ) }),
                        /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)("div", { className: "block", children: [
                          /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(Form.Label, { children: t4("orders.returns.sendNotification") }),
                          /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(Form.Hint, { className: "!mt-1", children: t4("orders.returns.sendNotificationHint") })
                        ] })
                      ] }),
                      /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ) }),
              /* @__PURE__ */ (0, import_jsx_runtime239.jsx)("div", { className: "p-8" })
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime239.jsx)("div", { className: "flex w-full items-center justify-end gap-x-4", children: /* @__PURE__ */ (0, import_jsx_runtime239.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(import_ui155.Button, { type: "button", variant: "secondary", size: "small", children: t4("orders.returns.cancel.title") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime239.jsx)(
                import_ui155.Button,
                {
                  type: "submit",
                  variant: "primary",
                  size: "small",
                  isLoading: isRequestLoading,
                  children: t4("orders.returns.confirm")
                },
                "submit-button"
              )
            ] }) }) })
          ] })
        }
      );
    };
  }
});

// src/routes/orders/order-create-return/components/return-create-form/index.ts
var init_return_create_form2 = __esm({
  "src/routes/orders/order-create-return/components/return-create-form/index.ts"() {
    "use strict";
    init_return_create_form();
  }
});

// src/routes/orders/order-create-return/return-create.tsx
var import_react_router_dom74, import_react138, import_react_i18next159, import_ui156, import_jsx_runtime240, IS_REQUEST_RUNNING2, ReturnCreate;
var init_return_create = __esm({
  "src/routes/orders/order-create-return/return-create.tsx"() {
    "use strict";
    import_react_router_dom74 = require("react-router-dom");
    import_react138 = require("react");
    import_react_i18next159 = require("react-i18next");
    import_ui156 = require("@medusajs/ui");
    init_modals();
    init_return_create_form2();
    init_orders();
    init_returns();
    init_constants7();
    import_jsx_runtime240 = require("react/jsx-runtime");
    IS_REQUEST_RUNNING2 = false;
    ReturnCreate = () => {
      const { id: id2 } = (0, import_react_router_dom74.useParams)();
      const navigate = (0, import_react_router_dom74.useNavigate)();
      const { t: t4 } = (0, import_react_i18next159.useTranslation)();
      const { order } = useOrder(id2, {
        fields: DEFAULT_FIELDS2
      });
      const { order: preview } = useOrderPreview(id2, void 0, {});
      const [activeReturnId, setActiveReturnId] = (0, import_react138.useState)();
      const { mutateAsync: initiateReturn } = useInitiateReturn(order.id);
      const { return: activeReturn } = useReturn(activeReturnId, void 0, {
        enabled: !!activeReturnId
      });
      (0, import_react138.useEffect)(() => {
        async function run() {
          if (IS_REQUEST_RUNNING2 || !preview) {
            return;
          }
          if (preview.order_change) {
            if (preview.order_change.change_type === "return_request") {
              setActiveReturnId(preview.order_change.return_id);
            } else {
              navigate(`/orders/${order.id}`, { replace: true });
              import_ui156.toast.error(t4("orders.returns.activeChangeError"));
            }
            return;
          }
          IS_REQUEST_RUNNING2 = true;
          try {
            const orderReturn = await initiateReturn({ order_id: order.id });
            setActiveReturnId(orderReturn.id);
          } catch (e) {
            navigate(`/orders/${order.id}`, { replace: true });
            import_ui156.toast.error(e.message);
          } finally {
            IS_REQUEST_RUNNING2 = false;
          }
        }
        run();
      }, [preview]);
      return /* @__PURE__ */ (0, import_jsx_runtime240.jsx)(RouteFocusModal, { children: activeReturn && preview && order && /* @__PURE__ */ (0, import_jsx_runtime240.jsx)(
        ReturnCreateForm,
        {
          order,
          activeReturn,
          preview
        }
      ) });
    };
  }
});

// src/routes/orders/order-create-return/index.ts
var order_create_return_exports = {};
__export(order_create_return_exports, {
  Component: () => ReturnCreate
});
var init_order_create_return = __esm({
  "src/routes/orders/order-create-return/index.ts"() {
    "use strict";
    init_return_create();
  }
});

// src/routes/orders/order-create-claim/components/add-claim-items-table/use-claim-item-table-columns.tsx
var import_react139, import_ui157, import_react_table18, import_react_i18next160, import_jsx_runtime241, columnHelper17, useClaimItemTableColumns;
var init_use_claim_item_table_columns = __esm({
  "src/routes/orders/order-create-claim/components/add-claim-items-table/use-claim-item-table-columns.tsx"() {
    "use strict";
    import_react139 = require("react");
    import_ui157 = require("@medusajs/ui");
    import_react_table18 = require("@tanstack/react-table");
    import_react_i18next160 = require("react-i18next");
    init_product_cell2();
    init_money_amount_helpers();
    init_rma();
    import_jsx_runtime241 = require("react/jsx-runtime");
    columnHelper17 = (0, import_react_table18.createColumnHelper)();
    useClaimItemTableColumns = (currencyCode) => {
      const { t: t4 } = (0, import_react_i18next160.useTranslation)();
      return (0, import_react139.useMemo)(
        () => [
          columnHelper17.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime241.jsx)(
                import_ui157.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              const isSelectable = row.getCanSelect();
              return /* @__PURE__ */ (0, import_jsx_runtime241.jsx)(
                import_ui157.Checkbox,
                {
                  disabled: !isSelectable,
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          columnHelper17.display({
            id: "product",
            header: () => /* @__PURE__ */ (0, import_jsx_runtime241.jsx)(ProductHeader, {}),
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime241.jsx)(ProductCell, { product: row.original.variant.product })
          }),
          columnHelper17.accessor("variant.sku", {
            header: t4("fields.sku"),
            cell: ({ getValue: getValue2 }) => {
              return getValue2() || "-";
            }
          }),
          columnHelper17.accessor("variant.title", {
            header: t4("fields.variant")
          }),
          columnHelper17.accessor("quantity", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime241.jsx)("div", { className: "flex size-full items-center overflow-hidden text-right", children: /* @__PURE__ */ (0, import_jsx_runtime241.jsx)("span", { className: "truncate", children: t4("fields.quantity") }) }),
            cell: ({ getValue: getValue2, row }) => {
              return getReturnableQuantity(row.original);
            }
          }),
          columnHelper17.accessor("refundable_total", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime241.jsx)("div", { className: "flex size-full items-center justify-end overflow-hidden text-right", children: /* @__PURE__ */ (0, import_jsx_runtime241.jsx)("span", { className: "truncate", children: t4("fields.price") }) }),
            cell: ({ getValue: getValue2 }) => {
              const amount = getValue2() || 0;
              const stylized = getStylizedAmount(amount, currencyCode);
              return /* @__PURE__ */ (0, import_jsx_runtime241.jsx)("div", { className: "flex size-full items-center justify-end overflow-hidden text-right", children: /* @__PURE__ */ (0, import_jsx_runtime241.jsx)("span", { className: "truncate", children: stylized }) });
            }
          })
        ],
        [t4, currencyCode]
      );
    };
  }
});

// src/routes/orders/order-create-claim/components/add-claim-items-table/use-claim-item-table-filters.tsx
var import_react_i18next161, useClaimItemTableFilters;
var init_use_claim_item_table_filters = __esm({
  "src/routes/orders/order-create-claim/components/add-claim-items-table/use-claim-item-table-filters.tsx"() {
    "use strict";
    import_react_i18next161 = require("react-i18next");
    useClaimItemTableFilters = () => {
      const { t: t4 } = (0, import_react_i18next161.useTranslation)();
      const filters = [
        {
          key: "returnable_quantity",
          label: t4("orders.returns.returnableQuantityLabel"),
          type: "number"
        },
        {
          key: "refundable_amount",
          label: t4("orders.returns.refundableAmountLabel"),
          type: "number"
        },
        {
          key: "created_at",
          label: t4("fields.createdAt"),
          type: "date"
        },
        {
          key: "updated_at",
          label: t4("fields.updatedAt"),
          type: "date"
        }
      ];
      return filters;
    };
  }
});

// src/routes/orders/order-create-claim/components/add-claim-items-table/use-claim-item-table-query.tsx
var useClaimItemTableQuery;
var init_use_claim_item_table_query = __esm({
  "src/routes/orders/order-create-claim/components/add-claim-items-table/use-claim-item-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useClaimItemTableQuery = ({
      pageSize = 50,
      prefix
    }) => {
      const raw = useQueryParams(
        [
          "q",
          "offset",
          "order",
          "created_at",
          "updated_at",
          "returnable_quantity",
          "refundable_amount"
        ],
        prefix
      );
      const {
        offset: offset4,
        created_at,
        updated_at,
        refundable_amount,
        returnable_quantity,
        ...rest
      } = raw;
      const searchParams = {
        ...rest,
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0,
        refundable_amount: refundable_amount ? JSON.parse(refundable_amount) : void 0,
        returnable_quantity: returnable_quantity ? JSON.parse(returnable_quantity) : void 0
      };
      return { searchParams, raw };
    };
  }
});

// src/routes/orders/order-create-claim/components/add-claim-items-table/add-claim-items-table.tsx
var import_react140, import_react_i18next162, import_jsx_runtime242, PAGE_SIZE11, PREFIX3, AddClaimItemsTable, sortItems2, filterByDate2, defaultOperators2, filterByNumber2;
var init_add_claim_items_table = __esm({
  "src/routes/orders/order-create-claim/components/add-claim-items-table/add-claim-items-table.tsx"() {
    "use strict";
    import_react140 = require("react");
    import_react_i18next162 = require("react-i18next");
    init_data_table2();
    init_use_data_table();
    init_money_amount_helpers();
    init_rma();
    init_use_claim_item_table_columns();
    init_use_claim_item_table_filters();
    init_use_claim_item_table_query();
    import_jsx_runtime242 = require("react/jsx-runtime");
    PAGE_SIZE11 = 50;
    PREFIX3 = "rit";
    AddClaimItemsTable = ({
      onSelectionChange,
      selectedItems: selectedItems2,
      items,
      currencyCode
    }) => {
      const { t: t4 } = (0, import_react_i18next162.useTranslation)();
      const [rowSelection, setRowSelection] = (0, import_react140.useState)(
        selectedItems2.reduce((acc, id2) => {
          acc[id2] = true;
          return acc;
        }, {})
      );
      const updater = (fn) => {
        const newState = typeof fn === "function" ? fn(rowSelection) : fn;
        setRowSelection(newState);
        onSelectionChange(Object.keys(newState));
      };
      const { searchParams, raw } = useClaimItemTableQuery({
        pageSize: PAGE_SIZE11,
        prefix: PREFIX3
      });
      const queriedItems = (0, import_react140.useMemo)(() => {
        const {
          order,
          offset: offset4,
          limit,
          q,
          created_at,
          updated_at,
          refundable_amount,
          returnable_quantity
        } = searchParams;
        let results = items;
        if (q) {
          results = results.filter((i) => {
            return i.variant.product.title.toLowerCase().includes(q.toLowerCase()) || i.variant.title.toLowerCase().includes(q.toLowerCase()) || i.variant.sku?.toLowerCase().includes(q.toLowerCase());
          });
        }
        if (order) {
          const direction = order[0] === "-" ? "desc" : "asc";
          const field = order.replace("-", "");
          results = sortItems2(results, field, direction);
        }
        if (created_at) {
          results = filterByDate2(results, created_at, "created_at");
        }
        if (updated_at) {
          results = filterByDate2(results, updated_at, "updated_at");
        }
        if (returnable_quantity) {
          results = filterByNumber2(
            results,
            returnable_quantity,
            "returnable_quantity",
            currencyCode
          );
        }
        if (refundable_amount) {
          results = filterByNumber2(
            results,
            refundable_amount,
            "refundable_amount",
            currencyCode
          );
        }
        return results.slice(offset4, offset4 + limit);
      }, [items, currencyCode, searchParams]);
      const columns = useClaimItemTableColumns(currencyCode);
      const filters = useClaimItemTableFilters();
      const { table } = useDataTable({
        data: queriedItems,
        columns,
        count: queriedItems.length,
        enablePagination: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE11,
        enableRowSelection: (row) => {
          return getReturnableQuantity(row.original) > 0;
        },
        rowSelection: {
          state: rowSelection,
          updater
        }
      });
      return /* @__PURE__ */ (0, import_jsx_runtime242.jsx)("div", { className: "flex size-full flex-col overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime242.jsx)(
        DataTable,
        {
          table,
          columns,
          pageSize: PAGE_SIZE11,
          count: queriedItems.length,
          filters,
          pagination: true,
          layout: "fill",
          search: true,
          orderBy: [
            { key: "product_title", label: t4("fields.product") },
            { key: "variant_title", label: t4("fields.variant") },
            { key: "sku", label: t4("fields.sku") },
            {
              key: "returnable_quantity",
              label: t4("orders.fields.returnableQuantity")
            },
            {
              key: "refundable_amount",
              label: t4("orders.fields.refundableAmount")
            }
          ],
          prefix: PREFIX3,
          queryObject: raw
        }
      ) });
    };
    sortItems2 = (items, field, direction) => {
      return items.sort((a, b) => {
        let aValue;
        let bValue;
        if (field === "product_title") {
          aValue = a.variant.product.title;
          bValue = b.variant.product.title;
        } else if (field === "variant_title") {
          aValue = a.variant.title;
          bValue = b.variant.title;
        } else if (field === "sku") {
          aValue = a.variant.sku;
          bValue = b.variant.sku;
        } else if (field === "returnable_quantity") {
          aValue = a.quantity - (a.returned_quantity || 0);
          bValue = b.quantity - (b.returned_quantity || 0);
        } else if (field === "refundable_amount") {
          aValue = a.refundable || 0;
          bValue = b.refundable || 0;
        }
        if (aValue < bValue) {
          return direction === "asc" ? -1 : 1;
        }
        if (aValue > bValue) {
          return direction === "asc" ? 1 : -1;
        }
        return 0;
      });
    };
    filterByDate2 = (items, date3, field) => {
      const { gt, gte, lt, lte } = date3;
      return items.filter((i) => {
        const itemDate = new Date(i[field]);
        let isValid = true;
        if (gt) {
          isValid = isValid && itemDate > new Date(gt);
        }
        if (gte) {
          isValid = isValid && itemDate >= new Date(gte);
        }
        if (lt) {
          isValid = isValid && itemDate < new Date(lt);
        }
        if (lte) {
          isValid = isValid && itemDate <= new Date(lte);
        }
        return isValid;
      });
    };
    defaultOperators2 = {
      eq: void 0,
      gt: void 0,
      gte: void 0,
      lt: void 0,
      lte: void 0
    };
    filterByNumber2 = (items, value, field, currency_code) => {
      const { eq, gt, lt, gte, lte } = typeof value === "object" ? { ...defaultOperators2, ...value } : { ...defaultOperators2, eq: value };
      return items.filter((i) => {
        const returnableQuantity = i.quantity - (i.returned_quantity || 0);
        const refundableAmount = getStylizedAmount(i.refundable || 0, currency_code);
        const itemValue = field === "returnable_quantity" ? returnableQuantity : refundableAmount;
        if (eq) {
          return itemValue === eq;
        }
        let isValid = true;
        if (gt) {
          isValid = isValid && itemValue > gt;
        }
        if (gte) {
          isValid = isValid && itemValue >= gte;
        }
        if (lt) {
          isValid = isValid && itemValue < lt;
        }
        if (lte) {
          isValid = isValid && itemValue <= lte;
        }
        return isValid;
      });
    };
  }
});

// src/routes/orders/order-create-claim/components/add-claim-items-table/index.ts
var init_add_claim_items_table2 = __esm({
  "src/routes/orders/order-create-claim/components/add-claim-items-table/index.ts"() {
    "use strict";
    init_add_claim_items_table();
  }
});

// src/routes/orders/order-create-claim/components/claim-create-form/claim-inbound-item.tsx
function ClaimInboundItem({
  item,
  previewItem,
  currencyCode,
  form,
  onRemove,
  onUpdate,
  index: index2
}) {
  const { t: t4 } = (0, import_react_i18next163.useTranslation)();
  const { return_reasons = [] } = useReturnReasons({ fields: "+label" });
  const formItem = form.watch(`inbound_items.${index2}`);
  const showReturnReason = typeof formItem.reason_id === "string";
  const showNote = typeof formItem.note === "string";
  return /* @__PURE__ */ (0, import_jsx_runtime243.jsxs)("div", { className: "bg-ui-bg-subtle shadow-elevation-card-rest my-2 rounded-xl ", children: [
    /* @__PURE__ */ (0, import_jsx_runtime243.jsxs)("div", { className: "flex flex-col items-center gap-x-2 gap-y-2 border-b p-3 text-sm md:flex-row", children: [
      /* @__PURE__ */ (0, import_jsx_runtime243.jsxs)("div", { className: "flex flex-1 items-center gap-x-3", children: [
        /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(Thumbnail, { src: item.thumbnail }),
        /* @__PURE__ */ (0, import_jsx_runtime243.jsxs)("div", { className: "flex flex-col", children: [
          /* @__PURE__ */ (0, import_jsx_runtime243.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime243.jsxs)(import_ui158.Text, { className: "txt-small", as: "span", weight: "plus", children: [
              item.title,
              " "
            ] }),
            item.variant?.sku && /* @__PURE__ */ (0, import_jsx_runtime243.jsxs)("span", { children: [
              "(",
              item.variant.sku,
              ")"
            ] })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(import_ui158.Text, { as: "div", className: "text-ui-fg-subtle txt-small", children: item.variant?.product?.title })
        ] })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime243.jsxs)("div", { className: "flex flex-1 justify-between", children: [
        /* @__PURE__ */ (0, import_jsx_runtime243.jsxs)("div", { className: "flex flex-grow items-center gap-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(
            Form.Field,
            {
              control: form.control,
              name: `inbound_items.${index2}.quantity`,
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime243.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(
                    import_ui158.Input,
                    {
                      ...field,
                      className: "bg-ui-bg-base txt-small w-[67px] rounded-lg",
                      min: 1,
                      max: item.quantity,
                      type: "number",
                      onBlur: (e) => {
                        const val = e.target.value;
                        const payload = val === "" ? null : Number(val);
                        field.onChange(payload);
                        if (payload) {
                          onUpdate({ quantity: payload });
                        }
                      }
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(import_ui158.Text, { className: "txt-small text-ui-fg-subtle", children: t4("fields.qty") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime243.jsx)("div", { className: "text-ui-fg-subtle txt-small mr-2 flex flex-shrink-0", children: /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(
          MoneyAmountCell,
          {
            currencyCode,
            amount: previewItem.return_requested_total
          }
        ) }),
        /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(
          ActionMenu,
          {
            groups: [
              {
                actions: [
                  !showReturnReason && {
                    label: t4("actions.addReason"),
                    onClick: () => form.setValue(`inbound_items.${index2}.reason_id`, ""),
                    icon: /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(import_icons80.ChatBubble, {})
                  },
                  !showNote && {
                    label: t4("actions.addNote"),
                    onClick: () => form.setValue(`inbound_items.${index2}.note`, ""),
                    icon: /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(import_icons80.DocumentText, {})
                  },
                  {
                    label: t4("actions.remove"),
                    onClick: onRemove,
                    icon: /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(import_icons80.XCircle, {})
                  }
                ].filter(Boolean)
              }
            ]
          }
        )
      ] })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime243.jsxs)(import_jsx_runtime243.Fragment, { children: [
      showReturnReason && /* @__PURE__ */ (0, import_jsx_runtime243.jsxs)("div", { className: "grid grid-cols-1 gap-2 p-3 md:grid-cols-2", children: [
        /* @__PURE__ */ (0, import_jsx_runtime243.jsxs)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(Form.Label, { children: t4("orders.returns.reason") }),
          /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(Form.Hint, { className: "!mt-1", children: t4("orders.returns.reasonHint") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime243.jsxs)("div", { className: "flex items-center gap-1", children: [
          /* @__PURE__ */ (0, import_jsx_runtime243.jsx)("div", { className: "flex-grow", children: /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(
            Form.Field,
            {
              control: form.control,
              name: `inbound_items.${index2}.reason_id`,
              render: ({ field: { ref, value, onChange, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime243.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(
                    Combobox,
                    {
                      className: "bg-ui-bg-field-component hover:bg-ui-bg-field-component-hover",
                      value,
                      onChange: (v) => {
                        onUpdate({ reason_id: v });
                        onChange(v);
                      },
                      ...field,
                      options: return_reasons.map((reason) => ({
                        label: reason.label,
                        value: reason.id
                      }))
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ) }),
          /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(
            import_ui158.IconButton,
            {
              type: "button",
              className: "flex-shrink",
              variant: "transparent",
              onClick: () => {
                form.setValue(`inbound_items.${index2}.reason_id`, null);
                onUpdate({ reason_id: null });
              },
              children: /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(import_icons80.XMark, { className: "text-ui-fg-muted" })
            }
          )
        ] })
      ] }),
      showNote && /* @__PURE__ */ (0, import_jsx_runtime243.jsxs)("div", { className: "grid grid-cols-1 gap-2 p-3 md:grid-cols-2", children: [
        /* @__PURE__ */ (0, import_jsx_runtime243.jsxs)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(Form.Label, { children: t4("orders.returns.note") }),
          /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(Form.Hint, { className: "!mt-1", children: t4("orders.returns.noteHint") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime243.jsxs)("div", { className: "flex items-center gap-1", children: [
          /* @__PURE__ */ (0, import_jsx_runtime243.jsx)("div", { className: "flex-grow", children: /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(
            Form.Field,
            {
              control: form.control,
              name: `inbound_items.${index2}.note`,
              render: ({ field: { ref, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime243.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(
                    import_ui158.Input,
                    {
                      ...field,
                      onBlur: () => {
                        field.onChange(field.value);
                        onUpdate({ internal_note: field.value });
                      },
                      className: "bg-ui-bg-field-component hover:bg-ui-bg-field-component-hover"
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ) }),
          /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(
            import_ui158.IconButton,
            {
              type: "button",
              className: "flex-shrink",
              variant: "transparent",
              onClick: () => {
                form.setValue(`inbound_items.${index2}.note`, null);
                onUpdate({ internal_note: null });
              },
              children: /* @__PURE__ */ (0, import_jsx_runtime243.jsx)(import_icons80.XMark, { className: "text-ui-fg-muted" })
            }
          )
        ] })
      ] })
    ] })
  ] });
}
var import_icons80, import_ui158, import_react_i18next163, import_jsx_runtime243;
var init_claim_inbound_item = __esm({
  "src/routes/orders/order-create-claim/components/claim-create-form/claim-inbound-item.tsx"() {
    "use strict";
    import_icons80 = require("@medusajs/icons");
    import_ui158 = require("@medusajs/ui");
    import_react_i18next163 = require("react-i18next");
    init_action_menu2();
    init_form2();
    init_thumbnail2();
    init_combobox2();
    init_money_amount_cell2();
    init_return_reasons();
    import_jsx_runtime243 = require("react/jsx-runtime");
  }
});

// src/routes/orders/order-create-claim/components/claim-create-form/schema.ts
var import_zod36, ClaimCreateSchema;
var init_schema3 = __esm({
  "src/routes/orders/order-create-claim/components/claim-create-form/schema.ts"() {
    "use strict";
    import_zod36 = require("zod");
    ClaimCreateSchema = import_zod36.z.object({
      inbound_items: import_zod36.z.array(
        import_zod36.z.object({
          item_id: import_zod36.z.string(),
          quantity: import_zod36.z.number(),
          reason_id: import_zod36.z.string().nullish(),
          note: import_zod36.z.string().nullish()
        })
      ),
      outbound_items: import_zod36.z.array(
        import_zod36.z.object({
          item_id: import_zod36.z.string(),
          // TODO: variant id?
          quantity: import_zod36.z.number()
        })
      ),
      location_id: import_zod36.z.string().optional(),
      inbound_option_id: import_zod36.z.string().nullish(),
      outbound_option_id: import_zod36.z.string().nullish(),
      send_notification: import_zod36.z.boolean().optional()
    });
  }
});

// src/routes/orders/order-create-claim/components/add-claim-outbound-items-table/use-claim-outbound-item-table-columns.tsx
var import_ui159, import_react_table19, import_react141, import_react_i18next164, import_jsx_runtime244, columnHelper18, useClaimOutboundItemTableColumns;
var init_use_claim_outbound_item_table_columns = __esm({
  "src/routes/orders/order-create-claim/components/add-claim-outbound-items-table/use-claim-outbound-item-table-columns.tsx"() {
    "use strict";
    import_ui159 = require("@medusajs/ui");
    import_react_table19 = require("@tanstack/react-table");
    import_react141 = require("react");
    import_react_i18next164 = require("react-i18next");
    init_product_cell2();
    import_jsx_runtime244 = require("react/jsx-runtime");
    columnHelper18 = (0, import_react_table19.createColumnHelper)();
    useClaimOutboundItemTableColumns = (currencyCode) => {
      const { t: t4 } = (0, import_react_i18next164.useTranslation)();
      return (0, import_react141.useMemo)(
        () => [
          columnHelper18.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime244.jsx)(
                import_ui159.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              const isSelectable = row.getCanSelect();
              return /* @__PURE__ */ (0, import_jsx_runtime244.jsx)(
                import_ui159.Checkbox,
                {
                  disabled: !isSelectable,
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          columnHelper18.display({
            id: "product",
            header: () => /* @__PURE__ */ (0, import_jsx_runtime244.jsx)(ProductHeader, {}),
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime244.jsx)(ProductCell, { product: row.original.product });
            }
          }),
          columnHelper18.accessor("sku", {
            header: t4("fields.sku"),
            cell: ({ getValue: getValue2 }) => {
              return getValue2() || "-";
            }
          }),
          columnHelper18.accessor("title", {
            header: t4("fields.title")
          })
        ],
        [t4, currencyCode]
      );
    };
  }
});

// src/routes/orders/order-create-claim/components/add-claim-outbound-items-table/use-claim-outbound-item-table-filters.tsx
var import_react_i18next165, useClaimOutboundItemTableFilters;
var init_use_claim_outbound_item_table_filters = __esm({
  "src/routes/orders/order-create-claim/components/add-claim-outbound-items-table/use-claim-outbound-item-table-filters.tsx"() {
    "use strict";
    import_react_i18next165 = require("react-i18next");
    useClaimOutboundItemTableFilters = () => {
      const { t: t4 } = (0, import_react_i18next165.useTranslation)();
      const filters = [
        {
          key: "created_at",
          label: t4("fields.createdAt"),
          type: "date"
        },
        {
          key: "updated_at",
          label: t4("fields.updatedAt"),
          type: "date"
        }
      ];
      return filters;
    };
  }
});

// src/routes/orders/order-create-claim/components/add-claim-outbound-items-table/use-claim-outbound-item-table-query.tsx
var useClaimOutboundItemTableQuery;
var init_use_claim_outbound_item_table_query = __esm({
  "src/routes/orders/order-create-claim/components/add-claim-outbound-items-table/use-claim-outbound-item-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useClaimOutboundItemTableQuery = ({
      pageSize = 50,
      prefix
    }) => {
      const raw = useQueryParams(
        ["q", "offset", "order", "created_at", "updated_at"],
        prefix
      );
      const { offset: offset4, created_at, updated_at, ...rest } = raw;
      const searchParams = {
        ...rest,
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0
      };
      return { searchParams, raw };
    };
  }
});

// src/routes/orders/order-create-claim/components/add-claim-outbound-items-table/add-claim-outbound-items-table.tsx
var import_react142, import_react_i18next166, import_jsx_runtime245, PAGE_SIZE12, PREFIX4, AddClaimOutboundItemsTable;
var init_add_claim_outbound_items_table = __esm({
  "src/routes/orders/order-create-claim/components/add-claim-outbound-items-table/add-claim-outbound-items-table.tsx"() {
    "use strict";
    import_react142 = require("react");
    import_react_i18next166 = require("react-i18next");
    init_data_table2();
    init_api();
    init_use_data_table();
    init_use_claim_outbound_item_table_columns();
    init_use_claim_outbound_item_table_filters();
    init_use_claim_outbound_item_table_query();
    import_jsx_runtime245 = require("react/jsx-runtime");
    PAGE_SIZE12 = 50;
    PREFIX4 = "rit";
    AddClaimOutboundItemsTable = ({
      onSelectionChange,
      selectedItems: selectedItems2,
      currencyCode
    }) => {
      const { t: t4 } = (0, import_react_i18next166.useTranslation)();
      const [rowSelection, setRowSelection] = (0, import_react142.useState)(
        selectedItems2.reduce((acc, id2) => {
          acc[id2] = true;
          return acc;
        }, {})
      );
      const updater = (fn) => {
        const newState = typeof fn === "function" ? fn(rowSelection) : fn;
        setRowSelection(newState);
        onSelectionChange(Object.keys(newState));
      };
      const { searchParams, raw } = useClaimOutboundItemTableQuery({
        pageSize: PAGE_SIZE12,
        prefix: PREFIX4
      });
      const { variants = [], count: count3 } = useVariants({
        ...searchParams,
        fields: "*inventory_items.inventory.location_levels,+inventory_quantity"
      });
      const columns = useClaimOutboundItemTableColumns(currencyCode);
      const filters = useClaimOutboundItemTableFilters();
      const { table } = useDataTable({
        data: variants,
        columns,
        count: count3,
        enablePagination: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE12,
        enableRowSelection: (_row) => {
          return true;
        },
        rowSelection: {
          state: rowSelection,
          updater
        }
      });
      return /* @__PURE__ */ (0, import_jsx_runtime245.jsx)("div", { className: "flex size-full flex-col overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime245.jsx)(
        DataTable,
        {
          table,
          columns,
          pageSize: PAGE_SIZE12,
          count: count3,
          filters,
          pagination: true,
          layout: "fill",
          search: true,
          orderBy: [
            { key: "product_id", label: t4("fields.product") },
            { key: "title", label: t4("fields.title") },
            { key: "sku", label: t4("fields.sku") }
          ],
          prefix: PREFIX4,
          queryObject: raw
        }
      ) });
    };
  }
});

// src/routes/orders/order-create-claim/components/add-claim-outbound-items-table/index.ts
var init_add_claim_outbound_items_table2 = __esm({
  "src/routes/orders/order-create-claim/components/add-claim-outbound-items-table/index.ts"() {
    "use strict";
    init_add_claim_outbound_items_table();
  }
});

// src/routes/orders/order-create-claim/components/claim-create-form/claim-outbound-item.tsx
function ClaimOutboundItem({
  previewItem,
  currencyCode,
  form,
  onRemove,
  onUpdate,
  index: index2
}) {
  const { t: t4 } = (0, import_react_i18next167.useTranslation)();
  return /* @__PURE__ */ (0, import_jsx_runtime246.jsx)("div", { className: "bg-ui-bg-subtle shadow-elevation-card-rest my-2 rounded-xl ", children: /* @__PURE__ */ (0, import_jsx_runtime246.jsxs)("div", { className: "flex flex-col items-center gap-x-2 gap-y-2 border-b p-3 text-sm md:flex-row", children: [
    /* @__PURE__ */ (0, import_jsx_runtime246.jsxs)("div", { className: "flex flex-1 items-center gap-x-3", children: [
      /* @__PURE__ */ (0, import_jsx_runtime246.jsx)(Thumbnail, { src: previewItem.thumbnail }),
      /* @__PURE__ */ (0, import_jsx_runtime246.jsxs)("div", { className: "flex flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime246.jsxs)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_runtime246.jsxs)(import_ui160.Text, { className: "txt-small", as: "span", weight: "plus", children: [
            previewItem.title,
            " "
          ] }),
          previewItem.variant_sku && /* @__PURE__ */ (0, import_jsx_runtime246.jsxs)("span", { children: [
            "(",
            previewItem.variant_sku,
            ")"
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime246.jsx)(import_ui160.Text, { as: "div", className: "text-ui-fg-subtle txt-small", children: previewItem.product_title })
      ] })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime246.jsxs)("div", { className: "flex flex-1 justify-between", children: [
      /* @__PURE__ */ (0, import_jsx_runtime246.jsxs)("div", { className: "flex flex-grow items-center gap-2", children: [
        /* @__PURE__ */ (0, import_jsx_runtime246.jsx)(
          Form.Field,
          {
            control: form.control,
            name: `outbound_items.${index2}.quantity`,
            render: ({ field }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime246.jsxs)(Form.Item, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime246.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime246.jsx)(
                  import_ui160.Input,
                  {
                    ...field,
                    className: "bg-ui-bg-base txt-small w-[67px] rounded-lg",
                    min: 1,
                    type: "number",
                    onBlur: (e) => {
                      const val = e.target.value;
                      const payload = val === "" ? null : Number(val);
                      field.onChange(payload);
                      if (payload) {
                        onUpdate({ quantity: payload });
                      }
                    }
                  }
                ) }),
                /* @__PURE__ */ (0, import_jsx_runtime246.jsx)(Form.ErrorMessage, {})
              ] });
            }
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime246.jsx)(import_ui160.Text, { className: "txt-small text-ui-fg-subtle", children: t4("fields.qty") })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime246.jsx)("div", { className: "text-ui-fg-subtle txt-small mr-2 flex flex-shrink-0", children: /* @__PURE__ */ (0, import_jsx_runtime246.jsx)(
        MoneyAmountCell,
        {
          currencyCode,
          amount: previewItem.total
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime246.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  label: t4("actions.remove"),
                  onClick: onRemove,
                  icon: /* @__PURE__ */ (0, import_jsx_runtime246.jsx)(import_icons81.XCircle, {})
                }
              ].filter(Boolean)
            }
          ]
        }
      )
    ] })
  ] }) });
}
var import_icons81, import_ui160, import_react_i18next167, import_jsx_runtime246;
var init_claim_outbound_item = __esm({
  "src/routes/orders/order-create-claim/components/claim-create-form/claim-outbound-item.tsx"() {
    "use strict";
    import_icons81 = require("@medusajs/icons");
    import_ui160 = require("@medusajs/ui");
    import_react_i18next167 = require("react-i18next");
    init_action_menu2();
    init_form2();
    init_thumbnail2();
    init_money_amount_cell2();
    import_jsx_runtime246 = require("react/jsx-runtime");
  }
});

// src/routes/orders/order-create-claim/components/claim-create-form/item-placeholder.tsx
var import_jsx_runtime247, ItemPlaceholder;
var init_item_placeholder = __esm({
  "src/routes/orders/order-create-claim/components/claim-create-form/item-placeholder.tsx"() {
    "use strict";
    import_jsx_runtime247 = require("react/jsx-runtime");
    ItemPlaceholder = () => {
      return /* @__PURE__ */ (0, import_jsx_runtime247.jsx)(
        "div",
        {
          style: {
            background: "repeating-linear-gradient(-45deg, rgb(212, 212, 216, 0.15), rgb(212, 212, 216,.15) 10px, transparent 10px, transparent 20px)"
          },
          className: "bg-ui-bg-field mt-4 block h-[56px] w-full rounded-lg border border-dashed"
        }
      );
    };
  }
});

// src/routes/orders/order-create-claim/components/claim-create-form/claim-outbound-section.tsx
var import_ui161, import_react143, import_react_hook_form38, import_react_i18next168, import_jsx_runtime248, itemsToAdd, itemsToRemove, ClaimOutboundSection;
var init_claim_outbound_section = __esm({
  "src/routes/orders/order-create-claim/components/claim-create-form/claim-outbound-section.tsx"() {
    "use strict";
    import_ui161 = require("@medusajs/ui");
    import_react143 = require("react");
    import_react_hook_form38 = require("react-hook-form");
    import_react_i18next168 = require("react-i18next");
    init_form2();
    init_combobox2();
    init_modals();
    init_claims();
    init_shipping_options();
    init_client2();
    init_placeholders();
    init_add_claim_outbound_items_table2();
    init_claim_outbound_item();
    init_item_placeholder();
    import_jsx_runtime248 = require("react/jsx-runtime");
    itemsToAdd = [];
    itemsToRemove = [];
    ClaimOutboundSection = ({
      order,
      preview,
      claim,
      form
    }) => {
      const { t: t4 } = (0, import_react_i18next168.useTranslation)();
      const { setIsOpen } = useStackedModal();
      const [inventoryMap, setInventoryMap] = (0, import_react143.useState)({});
      const { shipping_options = [] } = useShippingOptions({
        limit: 999,
        fields: "*prices,+service_zone.fulfillment_set.location.id"
      });
      const { mutateAsync: addOutboundShipping } = useAddClaimOutboundShipping(
        claim.id,
        order.id
      );
      const { mutateAsync: deleteOutboundShipping } = useDeleteClaimOutboundShipping(claim.id, order.id);
      const { mutateAsync: addOutboundItem } = useAddClaimOutboundItems(
        claim.id,
        order.id
      );
      const { mutateAsync: updateOutboundItem } = useUpdateClaimOutboundItems(
        claim.id,
        order.id
      );
      const { mutateAsync: removeOutboundItem } = useRemoveClaimOutboundItem(
        claim.id,
        order.id
      );
      const previewOutboundItems = (0, import_react143.useMemo)(
        () => preview?.items?.filter(
          (i) => !!i.actions?.find(
            (a) => a.claim_id === claim.id && a.action === "ITEM_ADD"
          )
        ),
        [preview.items]
      );
      const variantItemMap = (0, import_react143.useMemo)(
        () => new Map(order?.items?.map((i) => [i.variant_id, i])),
        [order.items]
      );
      const {
        fields: outboundItems,
        append,
        remove,
        update
      } = (0, import_react_hook_form38.useFieldArray)({
        name: "outbound_items",
        control: form.control
      });
      const variantOutboundMap = (0, import_react143.useMemo)(
        () => new Map(previewOutboundItems.map((i) => [i.variant_id, i])),
        [previewOutboundItems, outboundItems]
      );
      (0, import_react143.useEffect)(() => {
        const existingItemsMap = {};
        previewOutboundItems.forEach((i) => {
          const ind = outboundItems.findIndex((field) => field.item_id === i.id);
          existingItemsMap[i.id] = true;
          if (ind > -1) {
            if (outboundItems[ind].quantity !== i.detail.quantity) {
              update(ind, {
                ...outboundItems[ind],
                quantity: i.detail.quantity
              });
            }
          } else {
            append(
              {
                item_id: i.id,
                quantity: i.detail.quantity,
                variant_id: i.variant_id
              },
              { shouldFocus: false }
            );
          }
        });
        outboundItems.forEach((i, ind) => {
          if (!(i.item_id in existingItemsMap)) {
            remove(ind);
          }
        });
      }, [previewOutboundItems]);
      const locationId = form.watch("location_id");
      const showOutboundItemsPlaceholder = !outboundItems.length;
      const onItemsSelected = async () => {
        itemsToAdd.length && await addOutboundItem(
          {
            items: itemsToAdd.map((variantId) => ({
              variant_id: variantId,
              quantity: 1
            }))
          },
          {
            onError: (error) => {
              import_ui161.toast.error(error.message);
            }
          }
        );
        for (const itemToRemove of itemsToRemove) {
          const action = previewOutboundItems.find((i) => i.variant_id === itemToRemove)?.actions?.find((a) => a.action === "ITEM_ADD");
          if (action?.id) {
            await removeOutboundItem(action?.id, {
              onError: (error) => {
                import_ui161.toast.error(error.message);
              }
            });
          }
        }
        setIsOpen("outbound-items", false);
      };
      const onShippingOptionChange = async (selectedOptionId) => {
        const outboundShippingMethods = preview.shipping_methods.filter((s) => {
          const action = s.actions?.find(
            (a) => a.action === "SHIPPING_ADD" && !a.return_id
          );
          return action && !!!action?.return_id;
        });
        const promises = outboundShippingMethods.filter(Boolean).map((outboundShippingMethod) => {
          const action = outboundShippingMethod.actions?.find(
            (a) => a.action === "SHIPPING_ADD" && !a.return_id
          );
          if (action) {
            return deleteOutboundShipping(action.id);
          }
        });
        await Promise.all(promises);
        await addOutboundShipping(
          { shipping_option_id: selectedOptionId },
          {
            onError: (error) => {
              import_ui161.toast.error(error.message);
            }
          }
        );
      };
      const showLevelsWarning = (0, import_react143.useMemo)(() => {
        if (!locationId) {
          return false;
        }
        const allItemsHaveLocation = outboundItems.map((i) => {
          const item = variantItemMap.get(i.variant_id);
          if (!item?.variant_id || !item?.variant) {
            return true;
          }
          if (!item.variant.manage_inventory) {
            return true;
          }
          return inventoryMap[item.variant_id]?.find(
            (l) => l.location_id === locationId
          );
        }).every(Boolean);
        return !allItemsHaveLocation;
      }, [outboundItems, inventoryMap, locationId]);
      (0, import_react143.useEffect)(() => {
        const getInventoryMap = async () => {
          const ret = {};
          if (!outboundItems.length) {
            return ret;
          }
          const variantIds = outboundItems.map((item) => item?.variant_id).filter(Boolean);
          const variants = (await sdk.admin.productVariant.list(
            { id: variantIds },
            { fields: "*inventory,*inventory.location_levels" }
          )).variants;
          variants.forEach((variant) => {
            ret[variant.id] = variant.inventory?.[0]?.location_levels || [];
          });
          return ret;
        };
        getInventoryMap().then((map) => {
          setInventoryMap(map);
        });
      }, [outboundItems]);
      return /* @__PURE__ */ (0, import_jsx_runtime248.jsxs)("div", { children: [
        /* @__PURE__ */ (0, import_jsx_runtime248.jsxs)("div", { className: "mt-8 flex items-center justify-between", children: [
          /* @__PURE__ */ (0, import_jsx_runtime248.jsx)(import_ui161.Heading, { level: "h2", children: t4("orders.returns.outbound") }),
          /* @__PURE__ */ (0, import_jsx_runtime248.jsxs)(StackedFocusModal, { id: "outbound-items", children: [
            /* @__PURE__ */ (0, import_jsx_runtime248.jsx)(StackedFocusModal.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime248.jsx)("a", { className: "focus-visible:shadow-borders-focus transition-fg txt-compact-small-plus cursor-pointer text-blue-500 outline-none hover:text-blue-400", children: t4("actions.addItems") }) }),
            /* @__PURE__ */ (0, import_jsx_runtime248.jsxs)(StackedFocusModal.Content, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime248.jsx)(StackedFocusModal.Header, {}),
              /* @__PURE__ */ (0, import_jsx_runtime248.jsx)(
                AddClaimOutboundItemsTable,
                {
                  selectedItems: outboundItems.map((i) => i.variant_id),
                  currencyCode: order.currency_code,
                  onSelectionChange: (finalSelection) => {
                    const alreadySelected = outboundItems.map((i) => i.variant_id);
                    itemsToAdd = finalSelection.filter(
                      (selection) => !alreadySelected.includes(selection)
                    );
                    itemsToRemove = alreadySelected.filter(
                      (selection) => !finalSelection.includes(selection)
                    );
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime248.jsx)(StackedFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime248.jsx)("div", { className: "flex w-full items-center justify-end gap-x-4", children: /* @__PURE__ */ (0, import_jsx_runtime248.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime248.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime248.jsx)(import_ui161.Button, { type: "button", variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
                /* @__PURE__ */ (0, import_jsx_runtime248.jsx)(
                  import_ui161.Button,
                  {
                    type: "submit",
                    variant: "primary",
                    size: "small",
                    role: "button",
                    onClick: async () => await onItemsSelected(),
                    children: t4("actions.save")
                  },
                  "submit-button"
                )
              ] }) }) })
            ] })
          ] })
        ] }),
        showOutboundItemsPlaceholder && /* @__PURE__ */ (0, import_jsx_runtime248.jsx)(ItemPlaceholder, {}),
        outboundItems.map(
          (item, index2) => variantOutboundMap.get(item.variant_id) && /* @__PURE__ */ (0, import_jsx_runtime248.jsx)(
            ClaimOutboundItem,
            {
              previewItem: variantOutboundMap.get(item.variant_id),
              currencyCode: order.currency_code,
              form,
              onRemove: () => {
                const actionId = previewOutboundItems.find((i) => i.id === item.item_id)?.actions?.find((a) => a.action === "ITEM_ADD")?.id;
                if (actionId) {
                  removeOutboundItem(actionId, {
                    onError: (error) => {
                      import_ui161.toast.error(error.message);
                    }
                  });
                }
              },
              onUpdate: (payload) => {
                const actionId = previewOutboundItems.find((i) => i.id === item.item_id)?.actions?.find((a) => a.action === "ITEM_ADD")?.id;
                if (actionId) {
                  updateOutboundItem(
                    { ...payload, actionId },
                    {
                      onError: (error) => {
                        import_ui161.toast.error(error.message);
                      }
                    }
                  );
                }
              },
              index: index2
            },
            item.id
          )
        ),
        !showOutboundItemsPlaceholder && /* @__PURE__ */ (0, import_jsx_runtime248.jsx)("div", { className: "mt-8 flex flex-col gap-y-4", children: /* @__PURE__ */ (0, import_jsx_runtime248.jsxs)("div", { className: "grid grid-cols-1 gap-2 md:grid-cols-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime248.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime248.jsx)(Form.Label, { children: t4("orders.claims.outboundShipping") }),
            /* @__PURE__ */ (0, import_jsx_runtime248.jsx)(Form.Hint, { className: "!mt-1", children: t4("orders.claims.outboundShippingHint") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime248.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "outbound_option_id",
              render: ({ field: { value, onChange, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime248.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime248.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime248.jsx)(
                  Combobox,
                  {
                    value: value ?? void 0,
                    onChange: (val) => {
                      onChange(val);
                      val && onShippingOptionChange(val);
                    },
                    ...field,
                    options: shipping_options.map((so) => ({
                      label: so.name,
                      value: so.id
                    })),
                    disabled: !shipping_options.length,
                    noResultsPlaceholder: /* @__PURE__ */ (0, import_jsx_runtime248.jsx)(OutboundShippingPlaceholder, {})
                  }
                ) }) });
              }
            }
          )
        ] }) }),
        showLevelsWarning && /* @__PURE__ */ (0, import_jsx_runtime248.jsxs)(import_ui161.Alert, { variant: "warning", dismissible: true, className: "mt-4 p-5", children: [
          /* @__PURE__ */ (0, import_jsx_runtime248.jsx)("div", { className: "text-ui-fg-subtle txt-small pb-2 font-medium leading-[20px]", children: t4("orders.returns.noInventoryLevel") }),
          /* @__PURE__ */ (0, import_jsx_runtime248.jsx)(import_ui161.Text, { className: "text-ui-fg-subtle txt-small leading-normal", children: t4("orders.returns.noInventoryLevelDesc") })
        ] })
      ] });
    };
  }
});

// src/routes/orders/order-create-claim/components/claim-create-form/claim-create-form.tsx
var import_zod37, import_icons82, import_ui162, import_react144, import_react_hook_form39, import_react_i18next169, import_jsx_runtime249, itemsToAdd2, itemsToRemove2, IS_CANCELING, ClaimCreateForm;
var init_claim_create_form = __esm({
  "src/routes/orders/order-create-claim/components/claim-create-form/claim-create-form.tsx"() {
    "use strict";
    import_zod37 = require("@hookform/resolvers/zod");
    import_icons82 = require("@medusajs/icons");
    import_ui162 = require("@medusajs/ui");
    import_react144 = require("react");
    import_react_hook_form39 = require("react-hook-form");
    import_react_i18next169 = require("react-i18next");
    init_modals();
    init_form2();
    init_combobox2();
    init_shipping_options();
    init_stock_locations();
    init_money_amount_helpers();
    init_add_claim_items_table2();
    init_claim_inbound_item();
    init_schema3();
    init_keybound_form();
    init_claims();
    init_returns();
    init_client2();
    init_currencies2();
    init_placeholders();
    init_claim_outbound_section();
    init_item_placeholder();
    import_jsx_runtime249 = require("react/jsx-runtime");
    itemsToAdd2 = [];
    itemsToRemove2 = [];
    IS_CANCELING = false;
    ClaimCreateForm = ({
      order,
      preview,
      claim,
      orderReturn
    }) => {
      const { t: t4 } = (0, import_react_i18next169.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const { setIsOpen } = useStackedModal();
      const [isShippingInboundPriceEdit, setIsShippingInboundPriceEdit] = (0, import_react144.useState)(false);
      const [isShippingOutboundPriceEdit, setIsShippingOutboundPriceEdit] = (0, import_react144.useState)(false);
      const [customInboundShippingAmount, setCustomInboundShippingAmount] = (0, import_react144.useState)(0);
      const [customOutboundShippingAmount, setCustomOutboundShippingAmount] = (0, import_react144.useState)(0);
      const [inventoryMap, setInventoryMap] = (0, import_react144.useState)({});
      const { mutateAsync: confirmClaimRequest, isPending: isConfirming } = useClaimConfirmRequest(claim.id, order.id);
      const { mutateAsync: cancelClaimRequest, isPending: isCanceling } = useCancelClaimRequest(claim.id, order.id);
      const { mutateAsync: updateReturn, isPending: isUpdating } = useUpdateReturn(
        preview?.order_change?.return_id,
        order.id
      );
      const {
        mutateAsync: addInboundShipping,
        isPending: isAddingInboundShipping
      } = useAddClaimInboundShipping(claim.id, order.id);
      const {
        mutateAsync: updateInboundShipping,
        isPending: isUpdatingInboundShipping
      } = useUpdateClaimInboundShipping(claim.id, order.id);
      const {
        mutateAsync: updateOutboundShipping,
        isPending: isUpdatingOutboundShipping
      } = useUpdateClaimOutboundShipping(claim.id, order.id);
      const {
        mutateAsync: deleteInboundShipping,
        isPending: isDeletingInboundShipping
      } = useDeleteClaimInboundShipping(claim.id, order.id);
      const { mutateAsync: addInboundItem, isPending: isAddingInboundItem } = useAddClaimInboundItems(claim.id, order.id);
      const { mutateAsync: updateInboundItem, isPending: isUpdatingInboundItem } = useUpdateClaimInboundItem(claim.id, order.id);
      const { mutateAsync: removeInboundItem, isPending: isRemovingInboundItem } = useRemoveClaimInboundItem(claim.id, order.id);
      const isRequestLoading = isConfirming || isCanceling || isAddingInboundShipping || isUpdatingInboundShipping || isDeletingInboundShipping || isUpdatingOutboundShipping || isAddingInboundItem || isRemovingInboundItem || isUpdatingInboundItem || isUpdating;
      const previewItems = (0, import_react144.useMemo)(
        () => preview?.items?.filter(
          (i) => !!i.actions?.find((a) => a.claim_id === claim.id)
        ),
        [preview.items]
      );
      const inboundPreviewItems = previewItems.filter(
        (item) => !!item.actions?.find((a) => a.action === "RETURN_ITEM")
      );
      const outboundPreviewItems = previewItems.filter(
        (item) => !!item.actions?.find((a) => a.action === "ITEM_ADD")
      );
      const itemsMap = (0, import_react144.useMemo)(
        () => new Map(order?.items?.map((i) => [i.id, i])),
        [order.items]
      );
      const form = (0, import_react_hook_form39.useForm)({
        defaultValues: () => {
          const inboundShippingMethod = preview.shipping_methods.find((s) => {
            return !!s.actions?.find(
              (a) => a.action === "SHIPPING_ADD" && !!a.return_id
            );
          });
          const outboundShippingMethod = preview.shipping_methods.find((s) => {
            return !!s.actions?.find(
              (a) => a.action === "SHIPPING_ADD" && !a.return_id
            );
          });
          return Promise.resolve({
            inbound_items: inboundPreviewItems.map((i) => {
              const inboundAction = i.actions?.find(
                (a) => a.action === "RETURN_ITEM"
              );
              return {
                item_id: i.id,
                variant_id: i.variant_id,
                quantity: i.detail.return_requested_quantity,
                note: inboundAction?.internal_note,
                reason_id: inboundAction?.details?.reason_id
              };
            }),
            outbound_items: outboundPreviewItems.map((i) => ({
              item_id: i.id,
              variant_id: i.variant_id,
              quantity: i.detail.quantity
            })),
            inbound_option_id: inboundShippingMethod ? inboundShippingMethod.shipping_option_id : "",
            outbound_option_id: outboundShippingMethod ? outboundShippingMethod.shipping_option_id : "",
            location_id: orderReturn?.location_id,
            send_notification: false
          });
        },
        resolver: (0, import_zod37.zodResolver)(ClaimCreateSchema)
      });
      const locationId = form.watch("location_id");
      const { stock_locations = [] } = useStockLocations({ limit: 999 });
      const { shipping_options = [] } = useShippingOptions(
        {
          limit: 999,
          fields: "*prices,+service_zone.fulfillment_set.location.id",
          stock_location_id: locationId
        },
        {
          enabled: !!locationId
        }
      );
      const inboundShippingOptions = shipping_options.filter(
        (shippingOption) => !!shippingOption.rules.find(
          (r) => r.attribute === "is_return" && r.value === "true"
        )
      );
      const inboundShipping = preview.shipping_methods.find((s) => {
        return !!s.actions?.find(
          (a) => a.action === "SHIPPING_ADD" && !!a.return_id
        );
      });
      const outboundShipping = preview.shipping_methods.find((s) => {
        return !!s.actions?.find((a) => a.action === "SHIPPING_ADD" && !a.return_id);
      });
      (0, import_react144.useEffect)(() => {
        if (inboundShipping) {
          setCustomInboundShippingAmount(inboundShipping.total);
        }
      }, [inboundShipping]);
      (0, import_react144.useEffect)(() => {
        if (outboundShipping) {
          setCustomOutboundShippingAmount(outboundShipping.total);
        }
      }, [outboundShipping]);
      const {
        fields: inboundItems,
        append,
        remove,
        update
      } = (0, import_react_hook_form39.useFieldArray)({
        name: "inbound_items",
        control: form.control
      });
      const previewItemsMap = (0, import_react144.useMemo)(
        () => new Map(previewItems.map((i) => [i.id, i])),
        [previewItems, inboundItems]
      );
      (0, import_react144.useEffect)(() => {
        const existingItemsMap = {};
        inboundPreviewItems.forEach((i) => {
          const ind = inboundItems.findIndex((field) => field.item_id === i.id);
          existingItemsMap[i.id] = true;
          if (ind > -1) {
            if (inboundItems[ind].quantity !== i.detail.return_requested_quantity) {
              const returnItemAction = i.actions?.find(
                (a) => a.action === "RETURN_ITEM"
              );
              update(ind, {
                ...inboundItems[ind],
                quantity: i.detail.return_requested_quantity,
                note: returnItemAction?.internal_note,
                reason_id: returnItemAction?.details?.reason_id
              });
            }
          } else {
            append(
              { item_id: i.id, quantity: i.detail.return_requested_quantity },
              { shouldFocus: false }
            );
          }
        });
        inboundItems.forEach((i, ind) => {
          if (!(i.item_id in existingItemsMap)) {
            remove(ind);
          }
        });
      }, [previewItems]);
      (0, import_react144.useEffect)(() => {
        const inboundShipping2 = preview.shipping_methods.find(
          (s) => !!s.actions?.find((a) => a.action === "SHIPPING_ADD" && !!a.return_id)
        );
        if (inboundShipping2) {
          form.setValue("inbound_option_id", inboundShipping2.shipping_option_id);
        } else {
          form.setValue("inbound_option_id", null);
        }
        const outboundShipping2 = preview.shipping_methods.find(
          (s) => !!s.actions?.find((a) => a.action === "SHIPPING_ADD" && !a.return_id)
        );
        if (outboundShipping2) {
          form.setValue("outbound_option_id", outboundShipping2.shipping_option_id);
        } else {
          form.setValue("outbound_option_id", null);
        }
      }, [preview.shipping_methods]);
      (0, import_react144.useEffect)(() => {
        form.setValue("location_id", orderReturn?.location_id);
      }, [orderReturn]);
      const showInboundItemsPlaceholder = !inboundPreviewItems.length;
      const showOutboundItemsPlaceholder = !outboundPreviewItems.length;
      const inboundShippingOptionId = form.watch("inbound_option_id");
      const outboundShippingOptionId = form.watch("outbound_option_id");
      const prompt = (0, import_ui162.usePrompt)();
      const handleSubmit = form.handleSubmit(async (data) => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("orders.claims.confirmText"),
          confirmText: t4("actions.continue"),
          cancelText: t4("actions.cancel"),
          variant: "confirmation"
        });
        if (!res) {
          return;
        }
        await confirmClaimRequest(
          { no_notification: !data.send_notification },
          {
            onSuccess: () => {
              import_ui162.toast.success(t4("orders.claims.toast.confirmedSuccessfully"));
              handleSuccess();
            },
            onError: (error) => {
              import_ui162.toast.error(error.message);
            }
          }
        );
      });
      const onItemsSelected = async () => {
        itemsToAdd2.length && await addInboundItem(
          {
            items: itemsToAdd2.map((id2) => ({
              id: id2,
              quantity: 1
            }))
          },
          {
            onError: (error) => {
              import_ui162.toast.error(error.message);
            }
          }
        );
        for (const itemToRemove of itemsToRemove2) {
          const actionId = previewItems.find((i) => i.id === itemToRemove)?.actions?.find((a) => a.action === "RETURN_ITEM")?.id;
          if (actionId) {
            await removeInboundItem(actionId, {
              onError: (error) => {
                import_ui162.toast.error(error.message);
              }
            });
          }
        }
        setIsOpen("inbound-items", false);
      };
      const onLocationChange = async (selectedLocationId) => {
        await updateReturn({ location_id: selectedLocationId });
      };
      const onShippingOptionChange = async (selectedOptionId) => {
        const inboundShippingMethods = preview.shipping_methods.filter((s) => {
          const action = s.actions?.find(
            (a) => a.action === "SHIPPING_ADD" && !!a.return_id
          );
          return action && !action?.return_id;
        });
        const promises = inboundShippingMethods.filter(Boolean).map((inboundShippingMethod) => {
          const action = inboundShippingMethod.actions?.find(
            (a) => a.action === "SHIPPING_ADD" && !!a.return_id
          );
          if (action) {
            return deleteInboundShipping(action.id);
          }
        });
        await Promise.all(promises);
        await addInboundShipping(
          { shipping_option_id: selectedOptionId },
          {
            onError: (error) => {
              import_ui162.toast.error(error.message);
            }
          }
        );
      };
      (0, import_react144.useEffect)(() => {
        if (isShippingInboundPriceEdit) {
          document.getElementById("js-shipping-inbound-input")?.focus();
        }
      }, [isShippingInboundPriceEdit]);
      (0, import_react144.useEffect)(() => {
        if (isShippingOutboundPriceEdit) {
          document.getElementById("js-shipping-outbound-input")?.focus();
        }
      }, [isShippingOutboundPriceEdit]);
      const showLevelsWarning = (0, import_react144.useMemo)(() => {
        if (!locationId) {
          return false;
        }
        const allItemsHaveLocation = inboundItems.map((_i) => {
          const item = itemsMap.get(_i.item_id);
          if (!item?.variant_id || !item?.variant) {
            return true;
          }
          if (!item.variant.manage_inventory) {
            return true;
          }
          return inventoryMap[item.variant_id]?.find(
            (l) => l.location_id === locationId
          );
        }).every(Boolean);
        return !allItemsHaveLocation;
      }, [inboundItems, inventoryMap, locationId]);
      (0, import_react144.useEffect)(() => {
        const getInventoryMap = async () => {
          const ret = {};
          if (!inboundItems.length) {
            return ret;
          }
          const variantIds = inboundItems.map((item) => item?.variant_id).filter(Boolean);
          const variants = (await sdk.admin.productVariant.list(
            { id: variantIds },
            { fields: "*inventory,*inventory.location_levels" }
          )).variants;
          variants.forEach((variant) => {
            ret[variant.id] = variant.inventory?.[0]?.location_levels || [];
          });
          return ret;
        };
        getInventoryMap().then((map) => {
          setInventoryMap(map);
        });
      }, [inboundItems]);
      (0, import_react144.useEffect)(() => {
        return () => {
          if (IS_CANCELING) {
            cancelClaimRequest(void 0, {
              onSuccess: () => {
                import_ui162.toast.success(t4("orders.claims.actions.cancelClaim.successToast"));
              },
              onError: (error) => {
                import_ui162.toast.error(error.message);
              }
            });
            IS_CANCELING = false;
          }
        };
      }, []);
      const inboundShippingTotal = (0, import_react144.useMemo)(() => {
        const method = preview.shipping_methods.find(
          (sm) => !!sm.actions?.find((a) => a.action === "SHIPPING_ADD" && !!a.return_id)
        );
        return method?.total || 0;
      }, [preview.shipping_methods]);
      return /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)(KeyboundForm, { onSubmit: handleSubmit, className: "flex h-full flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(RouteFocusModal.Header, {}),
        /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(RouteFocusModal.Body, { className: "flex size-full justify-center overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)("div", { className: "mt-16 w-[720px] max-w-[100%] px-4 md:p-0", children: [
          /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(import_ui162.Heading, { level: "h1", children: t4("orders.claims.create") }),
          /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)("div", { className: "mt-8 flex items-center justify-between", children: [
            /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(import_ui162.Heading, { level: "h2", children: t4("orders.returns.inbound") }),
            /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)(StackedFocusModal, { id: "inbound-items", children: [
              /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(StackedFocusModal.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime249.jsx)("a", { className: "focus-visible:shadow-borders-focus transition-fg txt-compact-small-plus cursor-pointer text-blue-500 outline-none hover:text-blue-400", children: t4("actions.addItems") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)(StackedFocusModal.Content, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(StackedFocusModal.Header, {}),
                /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(
                  AddClaimItemsTable,
                  {
                    items: order.items,
                    selectedItems: inboundItems.map((i) => i.item_id),
                    currencyCode: order.currency_code,
                    onSelectionChange: (finalSelection) => {
                      const alreadySelected = inboundItems.map((i) => i.item_id);
                      itemsToAdd2 = finalSelection.filter(
                        (selection) => !alreadySelected.includes(selection)
                      );
                      itemsToRemove2 = alreadySelected.filter(
                        (selection) => !finalSelection.includes(selection)
                      );
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(StackedFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime249.jsx)("div", { className: "flex w-full items-center justify-end gap-x-4", children: /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(
                    import_ui162.Button,
                    {
                      type: "button",
                      variant: "secondary",
                      size: "small",
                      children: t4("actions.cancel")
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(
                    import_ui162.Button,
                    {
                      type: "submit",
                      variant: "primary",
                      size: "small",
                      role: "button",
                      onClick: async () => await onItemsSelected(),
                      children: t4("actions.save")
                    },
                    "submit-button"
                  )
                ] }) }) })
              ] })
            ] })
          ] }),
          showInboundItemsPlaceholder && /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(ItemPlaceholder, {}),
          inboundItems.map(
            (item, index2) => previewItemsMap.get(item.item_id) && itemsMap.get(item.item_id) && /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(
              ClaimInboundItem,
              {
                item: itemsMap.get(item.item_id),
                previewItem: previewItemsMap.get(item.item_id),
                currencyCode: order.currency_code,
                form,
                onRemove: () => {
                  const actionId = previewItems.find((i) => i.id === item.item_id)?.actions?.find((a) => a.action === "RETURN_ITEM")?.id;
                  if (actionId) {
                    removeInboundItem(actionId, {
                      onError: (error) => {
                        import_ui162.toast.error(error.message);
                      }
                    });
                  }
                },
                onUpdate: (payload) => {
                  const action = previewItems.find((i) => i.id === item.item_id)?.actions?.find((a) => a.action === "RETURN_ITEM");
                  if (action) {
                    updateInboundItem(
                      { ...payload, actionId: action.id },
                      {
                        onError: (error) => {
                          if (action.details?.quantity && payload.quantity) {
                            form.setValue(
                              `inbound_items.${index2}.quantity`,
                              action.details?.quantity
                            );
                          }
                          import_ui162.toast.error(error.message);
                        }
                      }
                    );
                  }
                },
                index: index2
              },
              item.id
            )
          ),
          !showInboundItemsPlaceholder && /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)("div", { className: "mt-8 flex flex-col gap-y-4", children: [
            /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)("div", { className: "grid grid-cols-1 gap-2 md:grid-cols-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)("div", { children: [
                /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(Form.Label, { children: t4("orders.returns.location") }),
                /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(Form.Hint, { className: "!mt-1", children: t4("orders.returns.locationHint") })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "location_id",
                  render: ({ field: { value, onChange, ...field } }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(
                      Combobox,
                      {
                        ...field,
                        value: value ?? void 0,
                        onChange: (v) => {
                          onChange(v);
                          onLocationChange(v);
                        },
                        options: (stock_locations ?? []).map(
                          (stockLocation) => ({
                            label: stockLocation.name,
                            value: stockLocation.id
                          })
                        )
                      }
                    ) }) });
                  }
                }
              )
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)("div", { className: "grid grid-cols-1 gap-2 md:grid-cols-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)("div", { children: [
                /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)(Form.Label, { children: [
                  t4("orders.returns.inboundShipping"),
                  /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)(
                    import_ui162.Text,
                    {
                      size: "small",
                      leading: "compact",
                      className: "text-ui-fg-muted ml-1 inline",
                      children: [
                        "(",
                        t4("fields.optional"),
                        ")"
                      ]
                    }
                  )
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(Form.Hint, { className: "!mt-1", children: t4("orders.returns.inboundShippingHint") })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "inbound_option_id",
                  render: ({ field: { value, onChange, ...field } }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(
                      Combobox,
                      {
                        value: value ?? void 0,
                        onChange: (val) => {
                          onChange(val);
                          val && onShippingOptionChange(val);
                        },
                        ...field,
                        options: inboundShippingOptions.map((so) => ({
                          label: so.name,
                          value: so.id
                        })),
                        disabled: !locationId,
                        noResultsPlaceholder: /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(ReturnShippingPlaceholder, {})
                      }
                    ) }) });
                  }
                }
              )
            ] })
          ] }),
          showLevelsWarning && /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)(import_ui162.Alert, { variant: "warning", dismissible: true, className: "mt-4 p-5", children: [
            /* @__PURE__ */ (0, import_jsx_runtime249.jsx)("div", { className: "text-ui-fg-subtle txt-small pb-2 font-medium leading-[20px]", children: t4("orders.returns.noInventoryLevel") }),
            /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(import_ui162.Text, { className: "text-ui-fg-subtle txt-small leading-normal", children: t4("orders.returns.noInventoryLevelDesc") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(
            ClaimOutboundSection,
            {
              form,
              preview,
              order,
              claim
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)("div", { className: "mt-8 border-y border-dotted py-4", children: [
            /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)("div", { className: "mb-2 flex items-center justify-between", children: [
              /* @__PURE__ */ (0, import_jsx_runtime249.jsx)("span", { className: "txt-small text-ui-fg-subtle", children: t4("orders.returns.inboundTotal") }),
              /* @__PURE__ */ (0, import_jsx_runtime249.jsx)("span", { className: "txt-small text-ui-fg-subtle", children: getStylizedAmount(
                inboundPreviewItems.reduce((acc, item) => {
                  const action = item.actions?.find(
                    (act) => act.action === "RETURN_ITEM"
                  );
                  acc = acc + (action?.amount || 0);
                  return acc;
                }, 0) * -1,
                order.currency_code
              ) })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)("div", { className: "mb-2 flex items-center justify-between", children: [
              /* @__PURE__ */ (0, import_jsx_runtime249.jsx)("span", { className: "txt-small text-ui-fg-subtle", children: t4("orders.claims.outboundTotal") }),
              /* @__PURE__ */ (0, import_jsx_runtime249.jsx)("span", { className: "txt-small text-ui-fg-subtle", children: getStylizedAmount(
                outboundPreviewItems.reduce((acc, item) => {
                  const action = item.actions?.find(
                    (act) => act.action === "ITEM_ADD"
                  );
                  acc = acc + (action?.amount || 0);
                  return acc;
                }, 0),
                order.currency_code
              ) })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)("div", { className: "mb-2 flex items-center justify-between", children: [
              /* @__PURE__ */ (0, import_jsx_runtime249.jsx)("span", { className: "txt-small text-ui-fg-subtle", children: t4("orders.returns.inboundShipping") }),
              /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)("span", { className: "txt-small text-ui-fg-subtle flex items-center", children: [
                !isShippingInboundPriceEdit && /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(
                  import_ui162.IconButton,
                  {
                    onClick: () => setIsShippingInboundPriceEdit(true),
                    variant: "transparent",
                    className: "text-ui-fg-muted",
                    disabled: showInboundItemsPlaceholder || !inboundShippingOptionId,
                    children: /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(import_icons82.PencilSquare, {})
                  }
                ),
                isShippingInboundPriceEdit ? /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(
                  import_ui162.CurrencyInput,
                  {
                    id: "js-shipping-inbound-input",
                    onBlur: () => {
                      let actionId;
                      preview.shipping_methods.forEach((s) => {
                        if (s.actions) {
                          for (const a of s.actions) {
                            if (a.action === "SHIPPING_ADD" && !!a.return_id) {
                              actionId = a.id;
                            }
                          }
                        }
                      });
                      const customPrice = customInboundShippingAmount === "" ? null : parseFloat(customInboundShippingAmount);
                      if (actionId) {
                        updateInboundShipping(
                          {
                            actionId,
                            custom_amount: customPrice
                          },
                          {
                            onError: (error) => {
                              import_ui162.toast.error(error.message);
                            }
                          }
                        );
                      }
                      setIsShippingInboundPriceEdit(false);
                    },
                    symbol: currencies[order.currency_code.toUpperCase()].symbol_native,
                    code: order.currency_code,
                    onValueChange: setCustomInboundShippingAmount,
                    value: customInboundShippingAmount,
                    disabled: showInboundItemsPlaceholder
                  }
                ) : getStylizedAmount(inboundShippingTotal, order.currency_code)
              ] })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)("div", { className: "flex items-center justify-between", children: [
              /* @__PURE__ */ (0, import_jsx_runtime249.jsx)("span", { className: "txt-small text-ui-fg-subtle", children: t4("orders.claims.outboundShipping") }),
              /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)("span", { className: "txt-small text-ui-fg-subtle flex items-center", children: [
                !isShippingOutboundPriceEdit && /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(
                  import_ui162.IconButton,
                  {
                    onClick: () => setIsShippingOutboundPriceEdit(true),
                    variant: "transparent",
                    className: "text-ui-fg-muted",
                    disabled: showOutboundItemsPlaceholder || !outboundShippingOptionId,
                    children: /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(import_icons82.PencilSquare, {})
                  }
                ),
                isShippingOutboundPriceEdit ? /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(
                  import_ui162.CurrencyInput,
                  {
                    id: "js-shipping-outbound-input",
                    onBlur: () => {
                      let actionId;
                      preview.shipping_methods.forEach((s) => {
                        if (s.actions) {
                          for (const a of s.actions) {
                            if (a.action === "SHIPPING_ADD" && !a.return_id) {
                              actionId = a.id;
                            }
                          }
                        }
                      });
                      const customPrice = customOutboundShippingAmount === "" ? null : parseFloat(customOutboundShippingAmount);
                      if (actionId) {
                        updateOutboundShipping(
                          {
                            actionId,
                            custom_amount: customPrice
                          },
                          {
                            onError: (error) => {
                              import_ui162.toast.error(error.message);
                            }
                          }
                        );
                      }
                      setIsShippingOutboundPriceEdit(false);
                    },
                    symbol: currencies[order.currency_code.toUpperCase()].symbol_native,
                    code: order.currency_code,
                    onValueChange: setCustomOutboundShippingAmount,
                    value: customOutboundShippingAmount,
                    disabled: showOutboundItemsPlaceholder
                  }
                ) : getStylizedAmount(
                  outboundShipping?.amount ?? 0,
                  order.currency_code
                )
              ] })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)("div", { className: "mt-4 flex items-center justify-between border-t border-dotted pt-4", children: [
              /* @__PURE__ */ (0, import_jsx_runtime249.jsx)("span", { className: "txt-small font-medium", children: t4("orders.claims.refundAmount") }),
              /* @__PURE__ */ (0, import_jsx_runtime249.jsx)("span", { className: "txt-small font-medium", children: getStylizedAmount(
                preview.summary.pending_difference,
                order.currency_code
              ) })
            ] })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime249.jsx)("div", { className: "bg-ui-bg-field mt-8 rounded-lg border py-2 pl-2 pr-4", children: /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "send_notification",
              render: ({ field: { onChange, value, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)("div", { className: "flex items-center", children: [
                    /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(Form.Control, { className: "mr-4 self-start", children: /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(
                      import_ui162.Switch,
                      {
                        className: "mt-[2px]",
                        checked: !!value,
                        onCheckedChange: onChange,
                        ...field
                      }
                    ) }),
                    /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)("div", { className: "block", children: [
                      /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(Form.Label, { children: t4("orders.returns.sendNotification") }),
                      /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(Form.Hint, { className: "!mt-1", children: t4("orders.returns.sendNotificationHint") })
                    ] })
                  ] }),
                  /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ) }),
          /* @__PURE__ */ (0, import_jsx_runtime249.jsx)("div", { className: "p-8" })
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime249.jsx)("div", { className: "flex w-full items-center justify-end gap-x-4", children: /* @__PURE__ */ (0, import_jsx_runtime249.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(
            import_ui162.Button,
            {
              type: "button",
              onClick: () => IS_CANCELING = true,
              variant: "secondary",
              size: "small",
              children: t4("orders.claims.cancel.title")
            }
          ) }),
          /* @__PURE__ */ (0, import_jsx_runtime249.jsx)(
            import_ui162.Button,
            {
              type: "submit",
              variant: "primary",
              size: "small",
              isLoading: isRequestLoading,
              children: t4("orders.claims.confirm")
            },
            "submit-button"
          )
        ] }) }) })
      ] }) });
    };
  }
});

// src/routes/orders/order-create-claim/components/claim-create-form/index.ts
var init_claim_create_form2 = __esm({
  "src/routes/orders/order-create-claim/components/claim-create-form/index.ts"() {
    "use strict";
    init_claim_create_form();
  }
});

// src/routes/orders/order-create-claim/claim-create.tsx
var import_ui163, import_react145, import_react_i18next170, import_react_router_dom75, import_jsx_runtime250, IS_REQUEST_RUNNING3, ClaimCreate;
var init_claim_create = __esm({
  "src/routes/orders/order-create-claim/claim-create.tsx"() {
    "use strict";
    import_ui163 = require("@medusajs/ui");
    import_react145 = require("react");
    import_react_i18next170 = require("react-i18next");
    import_react_router_dom75 = require("react-router-dom");
    init_modals();
    init_claims();
    init_orders();
    init_returns();
    init_constants7();
    init_claim_create_form2();
    import_jsx_runtime250 = require("react/jsx-runtime");
    IS_REQUEST_RUNNING3 = false;
    ClaimCreate = () => {
      const { id: id2 } = (0, import_react_router_dom75.useParams)();
      const navigate = (0, import_react_router_dom75.useNavigate)();
      const { t: t4 } = (0, import_react_i18next170.useTranslation)();
      const { order } = useOrder(id2, {
        fields: DEFAULT_FIELDS2
      });
      const { order: preview } = useOrderPreview(id2);
      const [activeClaimId, setActiveClaimId] = (0, import_react145.useState)();
      const { mutateAsync: createClaim } = useCreateClaim(order.id);
      const { claim } = useClaim(activeClaimId, void 0, {
        enabled: !!activeClaimId
      });
      const { return: orderReturn } = useReturn(claim?.return_id, void 0, {
        enabled: !!claim?.return_id
      });
      (0, import_react145.useEffect)(() => {
        async function run() {
          if (IS_REQUEST_RUNNING3 || !preview) {
            return;
          }
          if (preview.order_change) {
            if (preview.order_change.change_type === "claim") {
              setActiveClaimId(preview.order_change.claim_id);
            } else {
              navigate(`/orders/${preview.id}`, { replace: true });
              import_ui163.toast.error(t4("orders.claims.activeChangeError"));
            }
            return;
          }
          IS_REQUEST_RUNNING3 = true;
          try {
            const { claim: createdClaim } = await createClaim({
              order_id: preview.id,
              type: "replace"
            });
            setActiveClaimId(createdClaim.id);
          } catch (e) {
            import_ui163.toast.error(e.message);
            navigate(`/orders/${preview.id}`, { replace: true });
          } finally {
            IS_REQUEST_RUNNING3 = false;
          }
        }
        run();
      }, [preview]);
      return /* @__PURE__ */ (0, import_jsx_runtime250.jsx)(RouteFocusModal, { children: claim && preview && order && /* @__PURE__ */ (0, import_jsx_runtime250.jsx)(
        ClaimCreateForm,
        {
          order,
          claim,
          preview,
          orderReturn
        }
      ) });
    };
  }
});

// src/routes/orders/order-create-claim/index.ts
var order_create_claim_exports = {};
__export(order_create_claim_exports, {
  Component: () => ClaimCreate
});
var init_order_create_claim = __esm({
  "src/routes/orders/order-create-claim/index.ts"() {
    "use strict";
    init_claim_create();
  }
});

// src/routes/orders/order-create-exchange/components/exchange-create-form/schema.ts
var import_zod38, ExchangeCreateSchema;
var init_schema4 = __esm({
  "src/routes/orders/order-create-exchange/components/exchange-create-form/schema.ts"() {
    "use strict";
    import_zod38 = require("zod");
    ExchangeCreateSchema = import_zod38.z.object({
      inbound_items: import_zod38.z.array(
        import_zod38.z.object({
          item_id: import_zod38.z.string(),
          quantity: import_zod38.z.number(),
          reason_id: import_zod38.z.string().nullish(),
          note: import_zod38.z.string().nullish()
        })
      ),
      outbound_items: import_zod38.z.array(
        import_zod38.z.object({
          item_id: import_zod38.z.string(),
          quantity: import_zod38.z.number()
        })
      ),
      location_id: import_zod38.z.string().optional(),
      inbound_option_id: import_zod38.z.string().nullish(),
      outbound_option_id: import_zod38.z.string().nullish(),
      send_notification: import_zod38.z.boolean().optional()
    });
  }
});

// src/routes/orders/order-create-exchange/components/add-exchange-inbound-items-table/use-exchange-item-table-columns.tsx
var import_ui164, import_react_table20, import_react146, import_react_i18next171, import_jsx_runtime251, columnHelper19, useExchangeItemTableColumns;
var init_use_exchange_item_table_columns = __esm({
  "src/routes/orders/order-create-exchange/components/add-exchange-inbound-items-table/use-exchange-item-table-columns.tsx"() {
    "use strict";
    import_ui164 = require("@medusajs/ui");
    import_react_table20 = require("@tanstack/react-table");
    import_react146 = require("react");
    import_react_i18next171 = require("react-i18next");
    init_product_cell2();
    init_money_amount_helpers();
    init_rma();
    import_jsx_runtime251 = require("react/jsx-runtime");
    columnHelper19 = (0, import_react_table20.createColumnHelper)();
    useExchangeItemTableColumns = (currencyCode) => {
      const { t: t4 } = (0, import_react_i18next171.useTranslation)();
      return (0, import_react146.useMemo)(
        () => [
          columnHelper19.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime251.jsx)(
                import_ui164.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              const isSelectable = row.getCanSelect();
              return /* @__PURE__ */ (0, import_jsx_runtime251.jsx)(
                import_ui164.Checkbox,
                {
                  disabled: !isSelectable,
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          columnHelper19.display({
            id: "product",
            header: () => /* @__PURE__ */ (0, import_jsx_runtime251.jsx)(ProductHeader, {}),
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime251.jsx)(ProductCell, { product: row.original.variant.product })
          }),
          columnHelper19.accessor("variant.sku", {
            header: t4("fields.sku"),
            cell: ({ getValue: getValue2 }) => {
              return getValue2() || "-";
            }
          }),
          columnHelper19.accessor("variant.title", {
            header: t4("fields.variant")
          }),
          columnHelper19.accessor("quantity", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime251.jsx)("div", { className: "flex size-full items-center overflow-hidden text-right", children: /* @__PURE__ */ (0, import_jsx_runtime251.jsx)("span", { className: "truncate", children: t4("fields.quantity") }) }),
            cell: ({ getValue: getValue2, row }) => {
              return getReturnableQuantity(row.original);
            }
          }),
          columnHelper19.accessor("refundable_total", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime251.jsx)("div", { className: "flex size-full items-center justify-end overflow-hidden text-right", children: /* @__PURE__ */ (0, import_jsx_runtime251.jsx)("span", { className: "truncate", children: t4("fields.price") }) }),
            cell: ({ getValue: getValue2 }) => {
              const amount = getValue2() || 0;
              const stylized = getStylizedAmount(amount, currencyCode);
              return /* @__PURE__ */ (0, import_jsx_runtime251.jsx)("div", { className: "flex size-full items-center justify-end overflow-hidden text-right", children: /* @__PURE__ */ (0, import_jsx_runtime251.jsx)("span", { className: "truncate", children: stylized }) });
            }
          })
        ],
        [t4, currencyCode]
      );
    };
  }
});

// src/routes/orders/order-create-exchange/components/add-exchange-inbound-items-table/use-exchange-item-table-filters.tsx
var import_react_i18next172, useExchangeItemTableFilters;
var init_use_exchange_item_table_filters = __esm({
  "src/routes/orders/order-create-exchange/components/add-exchange-inbound-items-table/use-exchange-item-table-filters.tsx"() {
    "use strict";
    import_react_i18next172 = require("react-i18next");
    useExchangeItemTableFilters = () => {
      const { t: t4 } = (0, import_react_i18next172.useTranslation)();
      const filters = [
        {
          key: "created_at",
          label: t4("fields.createdAt"),
          type: "date"
        },
        {
          key: "updated_at",
          label: t4("fields.updatedAt"),
          type: "date"
        }
      ];
      return filters;
    };
  }
});

// src/routes/orders/order-create-exchange/components/add-exchange-inbound-items-table/use-exchange-item-table-query.tsx
var useExchangeItemTableQuery;
var init_use_exchange_item_table_query = __esm({
  "src/routes/orders/order-create-exchange/components/add-exchange-inbound-items-table/use-exchange-item-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useExchangeItemTableQuery = ({
      pageSize = 50,
      prefix
    }) => {
      const raw = useQueryParams(
        ["q", "offset", "order", "created_at", "updated_at"],
        prefix
      );
      const { offset: offset4, created_at, updated_at, ...rest } = raw;
      const searchParams = {
        ...rest,
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0
      };
      return { searchParams, raw };
    };
  }
});

// src/routes/orders/order-create-exchange/components/add-exchange-inbound-items-table/add-exchange-inbound-items-table.tsx
var import_react147, import_react_i18next173, import_jsx_runtime252, PAGE_SIZE13, PREFIX5, AddExchangeInboundItemsTable, sortItems3, filterByDate3;
var init_add_exchange_inbound_items_table = __esm({
  "src/routes/orders/order-create-exchange/components/add-exchange-inbound-items-table/add-exchange-inbound-items-table.tsx"() {
    "use strict";
    import_react147 = require("react");
    import_react_i18next173 = require("react-i18next");
    init_data_table2();
    init_use_data_table();
    init_rma();
    init_use_exchange_item_table_columns();
    init_use_exchange_item_table_filters();
    init_use_exchange_item_table_query();
    import_jsx_runtime252 = require("react/jsx-runtime");
    PAGE_SIZE13 = 50;
    PREFIX5 = "rit";
    AddExchangeInboundItemsTable = ({
      onSelectionChange,
      selectedItems: selectedItems2,
      items,
      currencyCode
    }) => {
      const { t: t4 } = (0, import_react_i18next173.useTranslation)();
      const [rowSelection, setRowSelection] = (0, import_react147.useState)(
        selectedItems2.reduce((acc, id2) => {
          acc[id2] = true;
          return acc;
        }, {})
      );
      const updater = (fn) => {
        const newState = typeof fn === "function" ? fn(rowSelection) : fn;
        setRowSelection(newState);
        onSelectionChange(Object.keys(newState));
      };
      const { searchParams, raw } = useExchangeItemTableQuery({
        pageSize: PAGE_SIZE13,
        prefix: PREFIX5
      });
      const queriedItems = (0, import_react147.useMemo)(() => {
        const { order, offset: offset4, limit, q, created_at, updated_at } = searchParams;
        let results = items;
        if (q) {
          results = results.filter((i) => {
            return i.variant.product.title.toLowerCase().includes(q.toLowerCase()) || i.variant.title.toLowerCase().includes(q.toLowerCase()) || i.variant.sku?.toLowerCase().includes(q.toLowerCase());
          });
        }
        if (order) {
          const direction = order[0] === "-" ? "desc" : "asc";
          const field = order.replace("-", "");
          results = sortItems3(results, field, direction);
        }
        if (created_at) {
          results = filterByDate3(results, created_at, "created_at");
        }
        if (updated_at) {
          results = filterByDate3(results, updated_at, "updated_at");
        }
        return results.slice(offset4, offset4 + limit);
      }, [items, currencyCode, searchParams]);
      const columns = useExchangeItemTableColumns(currencyCode);
      const filters = useExchangeItemTableFilters();
      const { table } = useDataTable({
        data: queriedItems,
        columns,
        count: queriedItems.length,
        enablePagination: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE13,
        enableRowSelection: (row) => {
          return getReturnableQuantity(row.original) > 0;
        },
        rowSelection: {
          state: rowSelection,
          updater
        }
      });
      return /* @__PURE__ */ (0, import_jsx_runtime252.jsx)("div", { className: "flex size-full flex-col overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime252.jsx)(
        DataTable,
        {
          table,
          columns,
          pageSize: PAGE_SIZE13,
          count: queriedItems.length,
          filters,
          pagination: true,
          layout: "fill",
          search: true,
          orderBy: [
            { key: "product_title", label: t4("fields.product") },
            { key: "variant_title", label: t4("fields.variant") },
            { key: "sku", label: t4("fields.sku") }
          ],
          prefix: PREFIX5,
          queryObject: raw
        }
      ) });
    };
    sortItems3 = (items, field, direction) => {
      return items.sort((a, b) => {
        let aValue;
        let bValue;
        if (field === "product_title") {
          aValue = a.variant.product.title;
          bValue = b.variant.product.title;
        } else if (field === "variant_title") {
          aValue = a.variant.title;
          bValue = b.variant.title;
        } else if (field === "sku") {
          aValue = a.variant.sku;
          bValue = b.variant.sku;
        }
        if (aValue < bValue) {
          return direction === "asc" ? -1 : 1;
        }
        if (aValue > bValue) {
          return direction === "asc" ? 1 : -1;
        }
        return 0;
      });
    };
    filterByDate3 = (items, date3, field) => {
      const { gt, gte, lt, lte } = date3;
      return items.filter((i) => {
        const itemDate = new Date(i[field]);
        let isValid = true;
        if (gt) {
          isValid = isValid && itemDate > new Date(gt);
        }
        if (gte) {
          isValid = isValid && itemDate >= new Date(gte);
        }
        if (lt) {
          isValid = isValid && itemDate < new Date(lt);
        }
        if (lte) {
          isValid = isValid && itemDate <= new Date(lte);
        }
        return isValid;
      });
    };
  }
});

// src/routes/orders/order-create-exchange/components/add-exchange-inbound-items-table/index.ts
var init_add_exchange_inbound_items_table2 = __esm({
  "src/routes/orders/order-create-exchange/components/add-exchange-inbound-items-table/index.ts"() {
    "use strict";
    init_add_exchange_inbound_items_table();
  }
});

// src/routes/orders/order-create-exchange/components/exchange-create-form/exchange-inbound-item.tsx
function ExchangeInboundItem({
  item,
  previewItem,
  currencyCode,
  form,
  onRemove,
  onUpdate,
  index: index2
}) {
  const { t: t4 } = (0, import_react_i18next174.useTranslation)();
  const { return_reasons = [] } = useReturnReasons({ fields: "+label" });
  const formItem = form.watch(`inbound_items.${index2}`);
  const showReturnReason = typeof formItem.reason_id === "string";
  const showNote = typeof formItem.note === "string";
  return /* @__PURE__ */ (0, import_jsx_runtime253.jsxs)("div", { className: "bg-ui-bg-subtle shadow-elevation-card-rest my-2 rounded-xl ", children: [
    /* @__PURE__ */ (0, import_jsx_runtime253.jsxs)("div", { className: "flex flex-col items-center gap-x-2 gap-y-2 p-3 text-sm md:flex-row", children: [
      /* @__PURE__ */ (0, import_jsx_runtime253.jsxs)("div", { className: "flex flex-1 items-center gap-x-3", children: [
        /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(Thumbnail, { src: item.thumbnail }),
        /* @__PURE__ */ (0, import_jsx_runtime253.jsxs)("div", { className: "flex flex-col", children: [
          /* @__PURE__ */ (0, import_jsx_runtime253.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime253.jsxs)(import_ui165.Text, { className: "txt-small", as: "span", weight: "plus", children: [
              item.title,
              " "
            ] }),
            item.variant?.sku && /* @__PURE__ */ (0, import_jsx_runtime253.jsxs)("span", { children: [
              "(",
              item.variant.sku,
              ")"
            ] })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(import_ui165.Text, { as: "div", className: "text-ui-fg-subtle txt-small", children: item.variant?.product?.title })
        ] })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime253.jsxs)("div", { className: "flex flex-1 justify-between", children: [
        /* @__PURE__ */ (0, import_jsx_runtime253.jsxs)("div", { className: "flex flex-grow items-center gap-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(
            Form.Field,
            {
              control: form.control,
              name: `inbound_items.${index2}.quantity`,
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime253.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(
                    import_ui165.Input,
                    {
                      ...field,
                      className: "bg-ui-bg-base txt-small w-[67px] rounded-lg",
                      min: 1,
                      max: item.quantity,
                      type: "number",
                      onBlur: (e) => {
                        const val = e.target.value;
                        const payload = val === "" ? null : Number(val);
                        field.onChange(payload);
                        if (payload) {
                          onUpdate({ quantity: payload });
                        }
                      }
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(import_ui165.Text, { className: "txt-small text-ui-fg-subtle", children: t4("fields.qty") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime253.jsx)("div", { className: "text-ui-fg-subtle txt-small mr-2 flex flex-shrink-0", children: /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(
          MoneyAmountCell,
          {
            currencyCode,
            amount: previewItem.return_requested_total
          }
        ) }),
        /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(
          ActionMenu,
          {
            groups: [
              {
                actions: [
                  !showReturnReason && {
                    label: t4("actions.addReason"),
                    onClick: () => form.setValue(`inbound_items.${index2}.reason_id`, ""),
                    icon: /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(import_icons83.ChatBubble, {})
                  },
                  !showNote && {
                    label: t4("actions.addNote"),
                    onClick: () => form.setValue(`inbound_items.${index2}.note`, ""),
                    icon: /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(import_icons83.DocumentText, {})
                  },
                  {
                    label: t4("actions.remove"),
                    onClick: onRemove,
                    icon: /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(import_icons83.XCircle, {})
                  }
                ].filter(Boolean)
              }
            ]
          }
        )
      ] })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime253.jsxs)(import_jsx_runtime253.Fragment, { children: [
      showReturnReason && /* @__PURE__ */ (0, import_jsx_runtime253.jsxs)("div", { className: "grid grid-cols-1 gap-2 p-3 md:grid-cols-2", children: [
        /* @__PURE__ */ (0, import_jsx_runtime253.jsxs)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(Form.Label, { children: t4("orders.returns.reason") }),
          /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(Form.Hint, { className: "!mt-1", children: t4("orders.returns.reasonHint") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime253.jsxs)("div", { className: "flex items-center gap-1", children: [
          /* @__PURE__ */ (0, import_jsx_runtime253.jsx)("div", { className: "flex-grow", children: /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(
            Form.Field,
            {
              control: form.control,
              name: `inbound_items.${index2}.reason_id`,
              render: ({ field: { ref, value, onChange, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime253.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(
                    Combobox,
                    {
                      className: "bg-ui-bg-field-component hover:bg-ui-bg-field-component-hover",
                      value,
                      onChange: (v) => {
                        onUpdate({ reason_id: v });
                        onChange(v);
                      },
                      ...field,
                      options: return_reasons.map((reason) => ({
                        label: reason.label,
                        value: reason.id
                      }))
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ) }),
          /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(
            import_ui165.IconButton,
            {
              type: "button",
              className: "flex-shrink",
              variant: "transparent",
              onClick: () => {
                form.setValue(`inbound_items.${index2}.reason_id`, null);
                onUpdate({ reason_id: null });
              },
              children: /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(import_icons83.XMark, { className: "text-ui-fg-muted" })
            }
          )
        ] })
      ] }),
      showNote && /* @__PURE__ */ (0, import_jsx_runtime253.jsxs)("div", { className: "grid grid-cols-1 gap-2 p-3 md:grid-cols-2", children: [
        /* @__PURE__ */ (0, import_jsx_runtime253.jsxs)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(Form.Label, { children: t4("orders.returns.note") }),
          /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(Form.Hint, { className: "!mt-1", children: t4("orders.returns.noteHint") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime253.jsxs)("div", { className: "flex items-center gap-1", children: [
          /* @__PURE__ */ (0, import_jsx_runtime253.jsx)("div", { className: "flex-grow", children: /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(
            Form.Field,
            {
              control: form.control,
              name: `inbound_items.${index2}.note`,
              render: ({ field: { ref, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime253.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(
                    import_ui165.Input,
                    {
                      ...field,
                      onBlur: () => {
                        field.onChange(field.value);
                        onUpdate({ internal_note: field.value });
                      },
                      className: "bg-ui-bg-field-component hover:bg-ui-bg-field-component-hover"
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ) }),
          /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(
            import_ui165.IconButton,
            {
              type: "button",
              className: "flex-shrink",
              variant: "transparent",
              onClick: () => {
                form.setValue(`inbound_items.${index2}.note`, null);
                onUpdate({ internal_note: null });
              },
              children: /* @__PURE__ */ (0, import_jsx_runtime253.jsx)(import_icons83.XMark, { className: "text-ui-fg-muted" })
            }
          )
        ] })
      ] })
    ] })
  ] });
}
var import_icons83, import_ui165, import_react_i18next174, import_jsx_runtime253;
var init_exchange_inbound_item = __esm({
  "src/routes/orders/order-create-exchange/components/exchange-create-form/exchange-inbound-item.tsx"() {
    "use strict";
    import_icons83 = require("@medusajs/icons");
    import_ui165 = require("@medusajs/ui");
    import_react_i18next174 = require("react-i18next");
    init_action_menu2();
    init_form2();
    init_thumbnail2();
    init_combobox2();
    init_money_amount_cell2();
    init_return_reasons();
    import_jsx_runtime253 = require("react/jsx-runtime");
  }
});

// src/routes/orders/order-create-exchange/components/exchange-create-form/exchange-inbound-section.tsx
var import_ui166, import_react148, import_react_hook_form40, import_react_i18next175, import_jsx_runtime254, itemsToAdd3, itemsToRemove3, ExchangeInboundSection;
var init_exchange_inbound_section = __esm({
  "src/routes/orders/order-create-exchange/components/exchange-create-form/exchange-inbound-section.tsx"() {
    "use strict";
    import_ui166 = require("@medusajs/ui");
    import_react148 = require("react");
    import_react_hook_form40 = require("react-hook-form");
    import_react_i18next175 = require("react-i18next");
    init_form2();
    init_combobox2();
    init_modals();
    init_api();
    init_exchanges();
    init_returns();
    init_client2();
    init_placeholders();
    init_item_placeholder();
    init_add_exchange_inbound_items_table2();
    init_exchange_inbound_item();
    import_jsx_runtime254 = require("react/jsx-runtime");
    itemsToAdd3 = [];
    itemsToRemove3 = [];
    ExchangeInboundSection = ({
      order,
      preview,
      exchange,
      form,
      orderReturn
    }) => {
      const { t: t4 } = (0, import_react_i18next175.useTranslation)();
      const { setIsOpen } = useStackedModal();
      const [inventoryMap, setInventoryMap] = (0, import_react148.useState)({});
      const { mutateAsync: updateReturn } = useUpdateReturn(
        preview?.order_change?.return_id,
        order.id
      );
      const { mutateAsync: addInboundShipping } = useAddExchangeInboundShipping(
        exchange.id,
        order.id
      );
      const { mutateAsync: deleteInboundShipping } = useDeleteExchangeInboundShipping(exchange.id, order.id);
      const { mutateAsync: addInboundItem } = useAddExchangeInboundItems(
        exchange.id,
        order.id
      );
      const { mutateAsync: updateInboundItem } = useUpdateExchangeInboundItem(
        exchange.id,
        order.id
      );
      const { mutateAsync: removeInboundItem } = useRemoveExchangeInboundItem(
        exchange.id,
        order.id
      );
      const previewInboundItems = (0, import_react148.useMemo)(
        () => preview?.items?.filter(
          (i) => !!i.actions?.find((a) => a.exchange_id === exchange.id)
        ),
        [preview.items]
      );
      const inboundPreviewItems = previewInboundItems.filter(
        (item) => !!item.actions?.find((a) => a.action === "RETURN_ITEM")
      );
      const itemsMap = (0, import_react148.useMemo)(
        () => new Map(order?.items?.map((i) => [i.id, i])),
        [order.items]
      );
      const locationId = form.watch("location_id");
      const { stock_locations = [] } = useStockLocations({ limit: 999 });
      const { shipping_options = [] } = useShippingOptions(
        {
          limit: 999,
          fields: "*prices,+service_zone.fulfillment_set.location.id",
          stock_location_id: locationId
        },
        {
          enabled: !!locationId
        }
      );
      const inboundShippingOptions = shipping_options.filter(
        (shippingOption) => !!shippingOption.rules.find(
          (r) => r.attribute === "is_return" && r.value === "true"
        )
      );
      const {
        fields: inboundItems,
        append,
        remove,
        update
      } = (0, import_react_hook_form40.useFieldArray)({
        name: "inbound_items",
        control: form.control
      });
      const inboundItemsMap = (0, import_react148.useMemo)(
        () => new Map(previewInboundItems.map((i) => [i.id, i])),
        [previewInboundItems, inboundItems]
      );
      (0, import_react148.useEffect)(() => {
        const existingItemsMap = {};
        inboundPreviewItems.forEach((i) => {
          const ind = inboundItems.findIndex((field) => field.item_id === i.id);
          existingItemsMap[i.id] = true;
          if (ind > -1) {
            if (inboundItems[ind].quantity !== i.detail.return_requested_quantity) {
              const returnItemAction = i.actions?.find(
                (a) => a.action === "RETURN_ITEM"
              );
              update(ind, {
                ...inboundItems[ind],
                quantity: i.detail.return_requested_quantity,
                note: returnItemAction?.internal_note,
                reason_id: returnItemAction?.details?.reason_id
              });
            }
          } else {
            append(
              { item_id: i.id, quantity: i.detail.return_requested_quantity },
              { shouldFocus: false }
            );
          }
        });
        inboundItems.forEach((i, ind) => {
          if (!(i.item_id in existingItemsMap)) {
            remove(ind);
          }
        });
      }, [previewInboundItems]);
      (0, import_react148.useEffect)(() => {
        const inboundShippingMethod = preview.shipping_methods.find(
          (s) => s.actions?.find((a) => a.action === "SHIPPING_ADD" && !!a.return_id)
        );
        if (inboundShippingMethod) {
          form.setValue(
            "inbound_option_id",
            inboundShippingMethod.shipping_option_id
          );
        } else {
          form.setValue("inbound_option_id", null);
        }
      }, [preview.shipping_methods]);
      (0, import_react148.useEffect)(() => {
        form.setValue("location_id", orderReturn?.location_id);
      }, [orderReturn]);
      const showInboundItemsPlaceholder = !inboundItems.length;
      const onItemsSelected = async () => {
        itemsToAdd3.length && await addInboundItem(
          {
            items: itemsToAdd3.map((id2) => ({
              id: id2,
              quantity: 1
            }))
          },
          {
            onError: (error) => {
              import_ui166.toast.error(error.message);
            }
          }
        );
        for (const itemToRemove of itemsToRemove3) {
          const actionId = previewInboundItems.find((i) => i.id === itemToRemove)?.actions?.find((a) => a.action === "RETURN_ITEM")?.id;
          if (actionId) {
            await removeInboundItem(actionId, {
              onError: (error) => {
                import_ui166.toast.error(error.message);
              }
            });
          }
        }
        setIsOpen("inbound-items", false);
      };
      const onLocationChange = async (selectedLocationId) => {
        await updateReturn({ location_id: selectedLocationId });
      };
      const onShippingOptionChange = async (selectedOptionId) => {
        const inboundShippingMethods = preview.shipping_methods.filter(
          (s) => s.actions?.find((a) => a.action === "SHIPPING_ADD" && !!a.return_id)
        );
        const promises = inboundShippingMethods.filter(Boolean).map((inboundShippingMethod) => {
          const action = inboundShippingMethod.actions?.find(
            (a) => a.action === "SHIPPING_ADD" && !!a.return_id
          );
          if (action) {
            return deleteInboundShipping(action.id);
          }
        });
        await Promise.all(promises);
        await addInboundShipping(
          { shipping_option_id: selectedOptionId },
          {
            onError: (error) => {
              import_ui166.toast.error(error.message);
            }
          }
        );
      };
      const showLevelsWarning = (0, import_react148.useMemo)(() => {
        if (!locationId) {
          return false;
        }
        const allItemsHaveLocation = inboundItems.map((_i) => {
          const item = itemsMap.get(_i.item_id);
          if (!item?.variant_id || !item?.variant) {
            return true;
          }
          if (!item.variant.manage_inventory) {
            return true;
          }
          return inventoryMap[item.variant_id]?.find(
            (l) => l.location_id === locationId
          );
        }).every(Boolean);
        return !allItemsHaveLocation;
      }, [inboundItems, inventoryMap, locationId]);
      (0, import_react148.useEffect)(() => {
        const getInventoryMap = async () => {
          const ret = {};
          if (!inboundItems.length) {
            return ret;
          }
          const variantIds = inboundItems.map((item) => item?.variant_id).filter(Boolean);
          const variants = (await sdk.admin.productVariant.list(
            { id: variantIds },
            { fields: "*inventory,*inventory.location_levels" }
          )).variants;
          variants.forEach((variant) => {
            ret[variant.id] = variant.inventory?.[0]?.location_levels || [];
          });
          return ret;
        };
        getInventoryMap().then((map) => {
          setInventoryMap(map);
        });
      }, [inboundItems]);
      return /* @__PURE__ */ (0, import_jsx_runtime254.jsxs)("div", { children: [
        /* @__PURE__ */ (0, import_jsx_runtime254.jsxs)("div", { className: "mt-8 flex items-center justify-between", children: [
          /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(import_ui166.Heading, { level: "h2", children: t4("orders.returns.inbound") }),
          /* @__PURE__ */ (0, import_jsx_runtime254.jsxs)(StackedFocusModal, { id: "inbound-items", children: [
            /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(StackedFocusModal.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime254.jsx)("a", { className: "focus-visible:shadow-borders-focus transition-fg txt-compact-small-plus cursor-pointer text-blue-500 outline-none hover:text-blue-400", children: t4("actions.addItems") }) }),
            /* @__PURE__ */ (0, import_jsx_runtime254.jsxs)(StackedFocusModal.Content, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(StackedFocusModal.Header, {}),
              /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(
                AddExchangeInboundItemsTable,
                {
                  items: order.items,
                  selectedItems: inboundItems.map((i) => i.item_id),
                  currencyCode: order.currency_code,
                  onSelectionChange: (finalSelection) => {
                    const alreadySelected = inboundItems.map((i) => i.item_id);
                    itemsToAdd3 = finalSelection.filter(
                      (selection) => !alreadySelected.includes(selection)
                    );
                    itemsToRemove3 = alreadySelected.filter(
                      (selection) => !finalSelection.includes(selection)
                    );
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(StackedFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime254.jsx)("div", { className: "flex w-full items-center justify-end gap-x-4", children: /* @__PURE__ */ (0, import_jsx_runtime254.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(import_ui166.Button, { type: "button", variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
                /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(
                  import_ui166.Button,
                  {
                    type: "submit",
                    variant: "primary",
                    size: "small",
                    role: "button",
                    onClick: async () => await onItemsSelected(),
                    children: t4("actions.save")
                  },
                  "submit-button"
                )
              ] }) }) })
            ] })
          ] })
        ] }),
        showInboundItemsPlaceholder && /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(ItemPlaceholder, {}),
        inboundItems.map(
          (item, index2) => inboundItemsMap.get(item.item_id) && itemsMap.get(item.item_id) && /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(
            ExchangeInboundItem,
            {
              item: itemsMap.get(item.item_id),
              previewItem: inboundItemsMap.get(item.item_id),
              currencyCode: order.currency_code,
              form,
              onRemove: () => {
                const actionId = previewInboundItems.find((i) => i.id === item.item_id)?.actions?.find((a) => a.action === "RETURN_ITEM")?.id;
                if (actionId) {
                  removeInboundItem(actionId, {
                    onError: (error) => {
                      import_ui166.toast.error(error.message);
                    }
                  });
                }
              },
              onUpdate: (payload) => {
                const action = previewInboundItems.find((i) => i.id === item.item_id)?.actions?.find((a) => a.action === "RETURN_ITEM");
                if (action) {
                  updateInboundItem(
                    { ...payload, actionId: action.id },
                    {
                      onError: (error) => {
                        if (action.details?.quantity && payload.quantity) {
                          form.setValue(
                            `inbound_items.${index2}.quantity`,
                            action.details?.quantity
                          );
                        }
                        import_ui166.toast.error(error.message);
                      }
                    }
                  );
                }
              },
              index: index2
            },
            item.id
          )
        ),
        !showInboundItemsPlaceholder && /* @__PURE__ */ (0, import_jsx_runtime254.jsxs)("div", { className: "mt-8 flex flex-col gap-y-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime254.jsxs)("div", { className: "grid grid-cols-1 gap-2 md:grid-cols-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime254.jsxs)("div", { children: [
              /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(Form.Label, { children: t4("orders.returns.location") }),
              /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(Form.Hint, { className: "!mt-1", children: t4("orders.returns.locationHint") })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "location_id",
                render: ({ field: { value, onChange, ...field } }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(
                    Combobox,
                    {
                      ...field,
                      value: value ?? void 0,
                      onChange: (v) => {
                        onChange(v);
                        onLocationChange(v);
                      },
                      options: (stock_locations ?? []).map(
                        (stockLocation) => ({
                          label: stockLocation.name,
                          value: stockLocation.id
                        })
                      )
                    }
                  ) }) });
                }
              }
            )
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime254.jsxs)("div", { className: "grid grid-cols-1 gap-2 md:grid-cols-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime254.jsxs)("div", { children: [
              /* @__PURE__ */ (0, import_jsx_runtime254.jsxs)(Form.Label, { children: [
                t4("orders.returns.inboundShipping"),
                /* @__PURE__ */ (0, import_jsx_runtime254.jsxs)(
                  import_ui166.Text,
                  {
                    size: "small",
                    leading: "compact",
                    className: "text-ui-fg-muted inline ml-1",
                    children: [
                      "(",
                      t4("fields.optional"),
                      ")"
                    ]
                  }
                )
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(Form.Hint, { className: "!mt-1", children: t4("orders.returns.inboundShippingHint") })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "inbound_option_id",
                render: ({ field: { value, onChange, ...field } }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(
                    Combobox,
                    {
                      value: value ?? void 0,
                      onChange: (val) => {
                        onChange(val);
                        val && onShippingOptionChange(val);
                      },
                      ...field,
                      options: inboundShippingOptions.map((so) => ({
                        label: so.name,
                        value: so.id
                      })),
                      disabled: !locationId,
                      noResultsPlaceholder: /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(ReturnShippingPlaceholder, {})
                    }
                  ) }) });
                }
              }
            )
          ] })
        ] }),
        showLevelsWarning && /* @__PURE__ */ (0, import_jsx_runtime254.jsxs)(import_ui166.Alert, { variant: "warning", dismissible: true, className: "mt-4 p-5", children: [
          /* @__PURE__ */ (0, import_jsx_runtime254.jsx)("div", { className: "text-ui-fg-subtle txt-small pb-2 font-medium leading-[20px]", children: t4("orders.returns.noInventoryLevel") }),
          /* @__PURE__ */ (0, import_jsx_runtime254.jsx)(import_ui166.Text, { className: "text-ui-fg-subtle txt-small leading-normal", children: t4("orders.returns.noInventoryLevelDesc") })
        ] })
      ] });
    };
  }
});

// src/routes/orders/order-create-exchange/components/add-exchange-outbound-items-table/use-exchange-outbound-item-table-columns.tsx
var import_ui167, import_react_table21, import_react149, import_react_i18next176, import_jsx_runtime255, columnHelper20, useExchangeOutboundItemTableColumns;
var init_use_exchange_outbound_item_table_columns = __esm({
  "src/routes/orders/order-create-exchange/components/add-exchange-outbound-items-table/use-exchange-outbound-item-table-columns.tsx"() {
    "use strict";
    import_ui167 = require("@medusajs/ui");
    import_react_table21 = require("@tanstack/react-table");
    import_react149 = require("react");
    import_react_i18next176 = require("react-i18next");
    init_product_cell2();
    import_jsx_runtime255 = require("react/jsx-runtime");
    columnHelper20 = (0, import_react_table21.createColumnHelper)();
    useExchangeOutboundItemTableColumns = (currencyCode) => {
      const { t: t4 } = (0, import_react_i18next176.useTranslation)();
      return (0, import_react149.useMemo)(
        () => [
          columnHelper20.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime255.jsx)(
                import_ui167.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              const isSelectable = row.getCanSelect();
              return /* @__PURE__ */ (0, import_jsx_runtime255.jsx)(
                import_ui167.Checkbox,
                {
                  disabled: !isSelectable,
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          columnHelper20.display({
            id: "product",
            header: () => /* @__PURE__ */ (0, import_jsx_runtime255.jsx)(ProductHeader, {}),
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime255.jsx)(ProductCell, { product: row.original.product });
            }
          }),
          columnHelper20.accessor("sku", {
            header: t4("fields.sku"),
            cell: ({ getValue: getValue2 }) => {
              return getValue2() || "-";
            }
          }),
          columnHelper20.accessor("title", {
            header: t4("fields.title")
          })
        ],
        [t4, currencyCode]
      );
    };
  }
});

// src/routes/orders/order-create-exchange/components/add-exchange-outbound-items-table/use-exchange-outbound-item-table-filters.tsx
var import_react_i18next177, useExchangeOutboundItemTableFilters;
var init_use_exchange_outbound_item_table_filters = __esm({
  "src/routes/orders/order-create-exchange/components/add-exchange-outbound-items-table/use-exchange-outbound-item-table-filters.tsx"() {
    "use strict";
    import_react_i18next177 = require("react-i18next");
    useExchangeOutboundItemTableFilters = () => {
      const { t: t4 } = (0, import_react_i18next177.useTranslation)();
      const filters = [
        {
          key: "created_at",
          label: t4("fields.createdAt"),
          type: "date"
        },
        {
          key: "updated_at",
          label: t4("fields.updatedAt"),
          type: "date"
        }
      ];
      return filters;
    };
  }
});

// src/routes/orders/order-create-exchange/components/add-exchange-outbound-items-table/use-exchange-outbound-item-table-query.tsx
var useExchangeOutboundItemTableQuery;
var init_use_exchange_outbound_item_table_query = __esm({
  "src/routes/orders/order-create-exchange/components/add-exchange-outbound-items-table/use-exchange-outbound-item-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useExchangeOutboundItemTableQuery = ({
      pageSize = 50,
      prefix
    }) => {
      const raw = useQueryParams(
        ["q", "offset", "order", "created_at", "updated_at"],
        prefix
      );
      const { offset: offset4, created_at, updated_at, ...rest } = raw;
      const searchParams = {
        ...rest,
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0
      };
      return { searchParams, raw };
    };
  }
});

// src/routes/orders/order-create-exchange/components/add-exchange-outbound-items-table/add-exchange-outbound-items-table.tsx
var import_react150, import_react_i18next178, import_jsx_runtime256, PAGE_SIZE14, PREFIX6, AddExchangeOutboundItemsTable;
var init_add_exchange_outbound_items_table = __esm({
  "src/routes/orders/order-create-exchange/components/add-exchange-outbound-items-table/add-exchange-outbound-items-table.tsx"() {
    "use strict";
    import_react150 = require("react");
    import_react_i18next178 = require("react-i18next");
    init_data_table2();
    init_api();
    init_use_data_table();
    init_use_exchange_outbound_item_table_columns();
    init_use_exchange_outbound_item_table_filters();
    init_use_exchange_outbound_item_table_query();
    import_jsx_runtime256 = require("react/jsx-runtime");
    PAGE_SIZE14 = 50;
    PREFIX6 = "rit";
    AddExchangeOutboundItemsTable = ({
      onSelectionChange,
      selectedItems: selectedItems2,
      currencyCode
    }) => {
      const { t: t4 } = (0, import_react_i18next178.useTranslation)();
      const [rowSelection, setRowSelection] = (0, import_react150.useState)(
        selectedItems2.reduce((acc, id2) => {
          acc[id2] = true;
          return acc;
        }, {})
      );
      const updater = (fn) => {
        const newState = typeof fn === "function" ? fn(rowSelection) : fn;
        setRowSelection(newState);
        onSelectionChange(Object.keys(newState));
      };
      const { searchParams, raw } = useExchangeOutboundItemTableQuery({
        pageSize: PAGE_SIZE14,
        prefix: PREFIX6
      });
      const { variants = [], count: count3 } = useVariants({
        ...searchParams,
        fields: "*inventory_items.inventory.location_levels,+inventory_quantity"
      });
      const columns = useExchangeOutboundItemTableColumns(currencyCode);
      const filters = useExchangeOutboundItemTableFilters();
      const { table } = useDataTable({
        data: variants,
        columns,
        count: count3,
        enablePagination: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE14,
        enableRowSelection: (_row) => {
          return true;
        },
        rowSelection: {
          state: rowSelection,
          updater
        }
      });
      return /* @__PURE__ */ (0, import_jsx_runtime256.jsx)("div", { className: "flex size-full flex-col overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime256.jsx)(
        DataTable,
        {
          table,
          columns,
          pageSize: PAGE_SIZE14,
          count: count3,
          filters,
          pagination: true,
          layout: "fill",
          search: true,
          orderBy: [
            { key: "product_id", label: t4("fields.product") },
            { key: "title", label: t4("fields.title") },
            { key: "sku", label: t4("fields.sku") }
          ],
          prefix: PREFIX6,
          queryObject: raw
        }
      ) });
    };
  }
});

// src/routes/orders/order-create-exchange/components/add-exchange-outbound-items-table/index.ts
var init_add_exchange_outbound_items_table2 = __esm({
  "src/routes/orders/order-create-exchange/components/add-exchange-outbound-items-table/index.ts"() {
    "use strict";
    init_add_exchange_outbound_items_table();
  }
});

// src/routes/orders/order-create-exchange/components/exchange-create-form/exchange-outbound-item.tsx
function ExchangeOutboundItem({
  previewItem,
  currencyCode,
  form,
  onRemove,
  onUpdate,
  index: index2
}) {
  const { t: t4 } = (0, import_react_i18next179.useTranslation)();
  return /* @__PURE__ */ (0, import_jsx_runtime257.jsx)("div", { className: "bg-ui-bg-subtle shadow-elevation-card-rest my-2 rounded-xl ", children: /* @__PURE__ */ (0, import_jsx_runtime257.jsxs)("div", { className: "flex flex-col items-center gap-x-2 gap-y-2 p-3 text-sm md:flex-row", children: [
    /* @__PURE__ */ (0, import_jsx_runtime257.jsxs)("div", { className: "flex flex-1 items-center gap-x-3", children: [
      /* @__PURE__ */ (0, import_jsx_runtime257.jsx)(Thumbnail, { src: previewItem.thumbnail }),
      /* @__PURE__ */ (0, import_jsx_runtime257.jsxs)("div", { className: "flex flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime257.jsxs)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_runtime257.jsxs)(import_ui168.Text, { className: "txt-small", as: "span", weight: "plus", children: [
            previewItem.title,
            " "
          ] }),
          previewItem.variant_sku && /* @__PURE__ */ (0, import_jsx_runtime257.jsxs)("span", { children: [
            "(",
            previewItem.variant_sku,
            ")"
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime257.jsx)(import_ui168.Text, { as: "div", className: "text-ui-fg-subtle txt-small", children: previewItem.product_title })
      ] })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime257.jsxs)("div", { className: "flex flex-1 justify-between", children: [
      /* @__PURE__ */ (0, import_jsx_runtime257.jsxs)("div", { className: "flex flex-grow items-center gap-2", children: [
        /* @__PURE__ */ (0, import_jsx_runtime257.jsx)(
          Form.Field,
          {
            control: form.control,
            name: `outbound_items.${index2}.quantity`,
            render: ({ field }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime257.jsxs)(Form.Item, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime257.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime257.jsx)(
                  import_ui168.Input,
                  {
                    ...field,
                    className: "bg-ui-bg-base txt-small w-[67px] rounded-lg",
                    min: 1,
                    type: "number",
                    onBlur: (e) => {
                      const val = e.target.value;
                      const payload = val === "" ? null : Number(val);
                      field.onChange(payload);
                      if (payload) {
                        onUpdate({ quantity: payload });
                      }
                    }
                  }
                ) }),
                /* @__PURE__ */ (0, import_jsx_runtime257.jsx)(Form.ErrorMessage, {})
              ] });
            }
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime257.jsx)(import_ui168.Text, { className: "txt-small text-ui-fg-subtle", children: t4("fields.qty") })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime257.jsx)("div", { className: "text-ui-fg-subtle txt-small mr-2 flex flex-shrink-0", children: /* @__PURE__ */ (0, import_jsx_runtime257.jsx)(
        MoneyAmountCell,
        {
          currencyCode,
          amount: previewItem.total
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime257.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  label: t4("actions.remove"),
                  onClick: onRemove,
                  icon: /* @__PURE__ */ (0, import_jsx_runtime257.jsx)(import_icons84.XCircle, {})
                }
              ].filter(Boolean)
            }
          ]
        }
      )
    ] })
  ] }) });
}
var import_icons84, import_ui168, import_react_i18next179, import_jsx_runtime257;
var init_exchange_outbound_item = __esm({
  "src/routes/orders/order-create-exchange/components/exchange-create-form/exchange-outbound-item.tsx"() {
    "use strict";
    import_icons84 = require("@medusajs/icons");
    import_ui168 = require("@medusajs/ui");
    import_react_i18next179 = require("react-i18next");
    init_action_menu2();
    init_form2();
    init_thumbnail2();
    init_money_amount_cell2();
    import_jsx_runtime257 = require("react/jsx-runtime");
  }
});

// src/routes/orders/order-create-exchange/components/exchange-create-form/exchange-outbound-section.tsx
var import_ui169, import_react151, import_react_hook_form41, import_react_i18next180, import_jsx_runtime258, itemsToAdd4, itemsToRemove4, ExchangeOutboundSection;
var init_exchange_outbound_section = __esm({
  "src/routes/orders/order-create-exchange/components/exchange-create-form/exchange-outbound-section.tsx"() {
    "use strict";
    import_ui169 = require("@medusajs/ui");
    import_react151 = require("react");
    import_react_hook_form41 = require("react-hook-form");
    import_react_i18next180 = require("react-i18next");
    init_form2();
    init_combobox2();
    init_modals();
    init_exchanges();
    init_shipping_options();
    init_client2();
    init_placeholders();
    init_item_placeholder();
    init_add_exchange_outbound_items_table2();
    init_exchange_outbound_item();
    import_jsx_runtime258 = require("react/jsx-runtime");
    itemsToAdd4 = [];
    itemsToRemove4 = [];
    ExchangeOutboundSection = ({
      order,
      preview,
      exchange,
      form
    }) => {
      const { t: t4 } = (0, import_react_i18next180.useTranslation)();
      const { setIsOpen } = useStackedModal();
      const [inventoryMap, setInventoryMap] = (0, import_react151.useState)({});
      const { shipping_options = [] } = useShippingOptions({
        limit: 999,
        fields: "*prices,+service_zone.fulfillment_set.location.id"
      });
      const { mutateAsync: addOutboundShipping } = useAddExchangeOutboundShipping(
        exchange.id,
        order.id
      );
      const { mutateAsync: deleteOutboundShipping } = useDeleteExchangeOutboundShipping(exchange.id, order.id);
      const { mutateAsync: addOutboundItem } = useAddExchangeOutboundItems(
        exchange.id,
        order.id
      );
      const { mutateAsync: updateOutboundItem } = useUpdateExchangeOutboundItems(
        exchange.id,
        order.id
      );
      const { mutateAsync: removeOutboundItem } = useRemoveExchangeOutboundItem(
        exchange.id,
        order.id
      );
      const previewOutboundItems = (0, import_react151.useMemo)(
        () => preview?.items?.filter(
          (i) => !!i.actions?.find(
            (a) => a.exchange_id === exchange.id && a.action === "ITEM_ADD"
          )
        ),
        [preview.items]
      );
      const variantItemMap = (0, import_react151.useMemo)(
        () => new Map(order?.items?.map((i) => [i.variant_id, i])),
        [order.items]
      );
      const {
        fields: outboundItems,
        append,
        remove,
        update
      } = (0, import_react_hook_form41.useFieldArray)({
        name: "outbound_items",
        control: form.control
      });
      const variantOutboundMap = (0, import_react151.useMemo)(
        () => new Map(previewOutboundItems.map((i) => [i.variant_id, i])),
        [previewOutboundItems, outboundItems]
      );
      (0, import_react151.useEffect)(() => {
        const existingItemsMap = {};
        previewOutboundItems.forEach((i) => {
          const ind = outboundItems.findIndex((field) => field.item_id === i.id);
          existingItemsMap[i.id] = true;
          if (ind > -1) {
            if (outboundItems[ind].quantity !== i.detail.quantity) {
              update(ind, {
                ...outboundItems[ind],
                quantity: i.detail.quantity
              });
            }
          } else {
            append(
              {
                item_id: i.id,
                quantity: i.detail.quantity,
                variant_id: i.variant_id
              },
              { shouldFocus: false }
            );
          }
        });
        outboundItems.forEach((i, ind) => {
          if (!(i.item_id in existingItemsMap)) {
            remove(ind);
          }
        });
      }, [previewOutboundItems]);
      const locationId = form.watch("location_id");
      const showOutboundItemsPlaceholder = !outboundItems.length;
      const onItemsSelected = async () => {
        itemsToAdd4.length && await addOutboundItem(
          {
            items: itemsToAdd4.map((variantId) => ({
              variant_id: variantId,
              quantity: 1
            }))
          },
          {
            onError: (error) => {
              import_ui169.toast.error(error.message);
            }
          }
        );
        for (const itemToRemove of itemsToRemove4) {
          const action = previewOutboundItems.find((i) => i.variant_id === itemToRemove)?.actions?.find((a) => a.action === "ITEM_ADD");
          if (action?.id) {
            await removeOutboundItem(action?.id, {
              onError: (error) => {
                import_ui169.toast.error(error.message);
              }
            });
          }
        }
        setIsOpen("outbound-items", false);
      };
      (0, import_react151.useEffect)(() => {
        const outboundShipping = preview.shipping_methods.find(
          (s) => !!s.actions?.find((a) => a.action === "SHIPPING_ADD" && !a.return_id)
        );
        if (outboundShipping) {
          form.setValue("outbound_option_id", outboundShipping.shipping_option_id);
        } else {
          form.setValue("outbound_option_id", null);
        }
      }, [preview.shipping_methods]);
      const onShippingOptionChange = async (selectedOptionId) => {
        const outboundShippingMethods = preview.shipping_methods.filter(
          (s) => !!s.actions?.find((a) => a.action === "SHIPPING_ADD" && !a.return_id)
        );
        const promises = outboundShippingMethods.filter(Boolean).map((outboundShippingMethod) => {
          const action = outboundShippingMethod.actions?.find(
            (a) => a.action === "SHIPPING_ADD" && !a.return_id
          );
          if (action) {
            return deleteOutboundShipping(action.id);
          }
        });
        await Promise.all(promises);
        await addOutboundShipping(
          { shipping_option_id: selectedOptionId },
          {
            onError: (error) => {
              import_ui169.toast.error(error.message);
            }
          }
        );
      };
      const showLevelsWarning = (0, import_react151.useMemo)(() => {
        if (!locationId) {
          return false;
        }
        const allItemsHaveLocation = outboundItems.map((i) => {
          const item = variantItemMap.get(i.variant_id);
          if (!item?.variant_id || !item?.variant) {
            return true;
          }
          if (!item.variant.manage_inventory) {
            return true;
          }
          return inventoryMap[item.variant_id]?.find(
            (l) => l.location_id === locationId
          );
        }).every(Boolean);
        return !allItemsHaveLocation;
      }, [outboundItems, inventoryMap, locationId]);
      (0, import_react151.useEffect)(() => {
        const getInventoryMap = async () => {
          const ret = {};
          if (!outboundItems.length) {
            return ret;
          }
          const variantIds = outboundItems.map((item) => item?.variant_id).filter(Boolean);
          const variants = (await sdk.admin.productVariant.list(
            { id: variantIds },
            { fields: "*inventory,*inventory.location_levels" }
          )).variants;
          variants.forEach((variant) => {
            ret[variant.id] = variant.inventory?.[0]?.location_levels || [];
          });
          return ret;
        };
        getInventoryMap().then((map) => {
          setInventoryMap(map);
        });
      }, [outboundItems]);
      return /* @__PURE__ */ (0, import_jsx_runtime258.jsxs)("div", { children: [
        /* @__PURE__ */ (0, import_jsx_runtime258.jsxs)("div", { className: "mt-8 flex items-center justify-between", children: [
          /* @__PURE__ */ (0, import_jsx_runtime258.jsx)(import_ui169.Heading, { level: "h2", children: t4("orders.returns.outbound") }),
          /* @__PURE__ */ (0, import_jsx_runtime258.jsxs)(StackedFocusModal, { id: "outbound-items", children: [
            /* @__PURE__ */ (0, import_jsx_runtime258.jsx)(StackedFocusModal.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime258.jsx)("a", { className: "focus-visible:shadow-borders-focus transition-fg txt-compact-small-plus cursor-pointer text-blue-500 outline-none hover:text-blue-400", children: t4("actions.addItems") }) }),
            /* @__PURE__ */ (0, import_jsx_runtime258.jsxs)(StackedFocusModal.Content, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime258.jsx)(StackedFocusModal.Header, {}),
              /* @__PURE__ */ (0, import_jsx_runtime258.jsx)(
                AddExchangeOutboundItemsTable,
                {
                  selectedItems: outboundItems.map((i) => i.variant_id),
                  currencyCode: order.currency_code,
                  onSelectionChange: (finalSelection) => {
                    const alreadySelected = outboundItems.map((i) => i.variant_id);
                    itemsToAdd4 = finalSelection.filter(
                      (selection) => !alreadySelected.includes(selection)
                    );
                    itemsToRemove4 = alreadySelected.filter(
                      (selection) => !finalSelection.includes(selection)
                    );
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime258.jsx)(StackedFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime258.jsx)("div", { className: "flex w-full items-center justify-end gap-x-4", children: /* @__PURE__ */ (0, import_jsx_runtime258.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime258.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime258.jsx)(import_ui169.Button, { type: "button", variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
                /* @__PURE__ */ (0, import_jsx_runtime258.jsx)(
                  import_ui169.Button,
                  {
                    type: "submit",
                    variant: "primary",
                    size: "small",
                    role: "button",
                    onClick: async () => await onItemsSelected(),
                    children: t4("actions.save")
                  },
                  "submit-button"
                )
              ] }) }) })
            ] })
          ] })
        ] }),
        showOutboundItemsPlaceholder && /* @__PURE__ */ (0, import_jsx_runtime258.jsx)(ItemPlaceholder, {}),
        outboundItems.map(
          (item, index2) => variantOutboundMap.get(item.variant_id) && /* @__PURE__ */ (0, import_jsx_runtime258.jsx)(
            ExchangeOutboundItem,
            {
              previewItem: variantOutboundMap.get(item.variant_id),
              currencyCode: order.currency_code,
              form,
              onRemove: () => {
                const actionId = previewOutboundItems.find((i) => i.id === item.item_id)?.actions?.find((a) => a.action === "ITEM_ADD")?.id;
                if (actionId) {
                  removeOutboundItem(actionId, {
                    onError: (error) => {
                      import_ui169.toast.error(error.message);
                    }
                  });
                }
              },
              onUpdate: (payload) => {
                const actionId = previewOutboundItems.find((i) => i.id === item.item_id)?.actions?.find((a) => a.action === "ITEM_ADD")?.id;
                if (actionId) {
                  updateOutboundItem(
                    { ...payload, actionId },
                    {
                      onError: (error) => {
                        import_ui169.toast.error(error.message);
                      }
                    }
                  );
                }
              },
              index: index2
            },
            item.id
          )
        ),
        !showOutboundItemsPlaceholder && /* @__PURE__ */ (0, import_jsx_runtime258.jsx)("div", { className: "mt-8 flex flex-col gap-y-4", children: /* @__PURE__ */ (0, import_jsx_runtime258.jsxs)("div", { className: "grid grid-cols-1 gap-2 md:grid-cols-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime258.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime258.jsx)(Form.Label, { children: t4("orders.exchanges.outboundShipping") }),
            /* @__PURE__ */ (0, import_jsx_runtime258.jsx)(Form.Hint, { className: "!mt-1", children: t4("orders.exchanges.outboundShippingHint") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime258.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "outbound_option_id",
              render: ({ field: { value, onChange, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime258.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime258.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime258.jsx)(
                  Combobox,
                  {
                    noResultsPlaceholder: /* @__PURE__ */ (0, import_jsx_runtime258.jsx)(OutboundShippingPlaceholder, {}),
                    value: value ?? void 0,
                    onChange: (val) => {
                      onChange(val);
                      val && onShippingOptionChange(val);
                    },
                    ...field,
                    options: shipping_options.map((so) => ({
                      label: so.name,
                      value: so.id
                    })),
                    disabled: !shipping_options.length
                  }
                ) }) });
              }
            }
          )
        ] }) }),
        showLevelsWarning && /* @__PURE__ */ (0, import_jsx_runtime258.jsxs)(import_ui169.Alert, { variant: "warning", dismissible: true, className: "mt-4 p-5", children: [
          /* @__PURE__ */ (0, import_jsx_runtime258.jsx)("div", { className: "text-ui-fg-subtle txt-small pb-2 font-medium leading-[20px]", children: t4("orders.returns.noInventoryLevel") }),
          /* @__PURE__ */ (0, import_jsx_runtime258.jsx)(import_ui169.Text, { className: "text-ui-fg-subtle txt-small leading-normal", children: t4("orders.returns.noInventoryLevelDesc") })
        ] })
      ] });
    };
  }
});

// src/routes/orders/order-create-exchange/components/exchange-create-form/exchange-create-form.tsx
var import_zod39, import_icons85, import_ui170, import_react152, import_react_hook_form42, import_react_i18next181, import_jsx_runtime259, IS_CANCELING2, ExchangeCreateForm;
var init_exchange_create_form = __esm({
  "src/routes/orders/order-create-exchange/components/exchange-create-form/exchange-create-form.tsx"() {
    "use strict";
    import_zod39 = require("@hookform/resolvers/zod");
    import_icons85 = require("@medusajs/icons");
    import_ui170 = require("@medusajs/ui");
    import_react152 = require("react");
    import_react_hook_form42 = require("react-hook-form");
    import_react_i18next181 = require("react-i18next");
    init_modals();
    init_form2();
    init_money_amount_helpers();
    init_schema4();
    init_keybound_form();
    init_exchanges();
    init_currencies2();
    init_exchange_inbound_section();
    init_exchange_outbound_section();
    import_jsx_runtime259 = require("react/jsx-runtime");
    IS_CANCELING2 = false;
    ExchangeCreateForm = ({
      order,
      preview,
      exchange,
      orderReturn
    }) => {
      const { t: t4 } = (0, import_react_i18next181.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const [isInboundShippingPriceEdit, setIsInboundShippingPriceEdit] = (0, import_react152.useState)(false);
      const [isOutboundShippingPriceEdit, setIsOutboundShippingPriceEdit] = (0, import_react152.useState)(false);
      const [customInboundShippingAmount, setCustomInboundShippingAmount] = (0, import_react152.useState)(0);
      const [customOutboundShippingAmount, setCustomOutboundShippingAmount] = (0, import_react152.useState)(0);
      const { mutateAsync: confirmExchangeRequest, isPending: isConfirming } = useExchangeConfirmRequest(exchange.id, order.id);
      const { mutateAsync: cancelExchangeRequest, isPending: isCanceling } = useCancelExchangeRequest(exchange.id, order.id);
      const {
        mutateAsync: updateInboundShipping,
        isPending: isUpdatingOutboundShipping
      } = useUpdateExchangeInboundShipping(exchange.id, order.id);
      const {
        mutateAsync: updateOutboundShipping,
        isPending: isUpdatingInboundShipping
      } = useUpdateExchangeOutboundShipping(exchange.id, order.id);
      const isRequestLoading = isConfirming || isCanceling || isUpdatingInboundShipping || isUpdatingOutboundShipping;
      const previewItems = (0, import_react152.useMemo)(
        () => preview?.items?.filter(
          (i) => !!i.actions?.find((a) => a.exchange_id === exchange.id)
        ),
        [preview.items]
      );
      const inboundPreviewItems = previewItems.filter(
        (item) => !!item.actions?.find((a) => a.action === "RETURN_ITEM")
      );
      const outboundPreviewItems = previewItems.filter(
        (item) => !!item.actions?.find((a) => a.action === "ITEM_ADD")
      );
      const form = (0, import_react_hook_form42.useForm)({
        defaultValues: () => {
          const inboundShippingMethod = preview.shipping_methods.find((s) => {
            return !!s.actions?.find(
              (a) => a.action === "SHIPPING_ADD" && !!a.return_id
            );
          });
          const outboundShippingMethod = preview.shipping_methods.find((s) => {
            return !!s.actions?.find(
              (a) => a.action === "SHIPPING_ADD" && !a.return_id
            );
          });
          return Promise.resolve({
            inbound_items: inboundPreviewItems.map((i) => {
              const inboundAction = i.actions?.find(
                (a) => a.action === "RETURN_ITEM"
              );
              return {
                item_id: i.id,
                variant_id: i.variant_id,
                quantity: i.detail.return_requested_quantity,
                note: inboundAction?.internal_note,
                reason_id: inboundAction?.details?.reason_id
              };
            }),
            outbound_items: outboundPreviewItems.map((i) => ({
              item_id: i.id,
              variant_id: i.variant_id,
              quantity: i.detail.quantity
            })),
            inbound_option_id: inboundShippingMethod ? inboundShippingMethod.shipping_option_id : "",
            outbound_option_id: outboundShippingMethod ? outboundShippingMethod.shipping_option_id : "",
            location_id: orderReturn?.location_id,
            send_notification: false
          });
        },
        resolver: (0, import_zod39.zodResolver)(ExchangeCreateSchema)
      });
      const inboundShipping = preview.shipping_methods.find((s) => {
        return !!s.actions?.find(
          (a) => a.action === "SHIPPING_ADD" && !!a.return_id
        );
      });
      const outboundShipping = preview.shipping_methods.find((s) => {
        return !!s.actions?.find((a) => a.action === "SHIPPING_ADD" && !a.return_id);
      });
      (0, import_react152.useEffect)(() => {
        if (inboundShipping) {
          setCustomInboundShippingAmount(inboundShipping.total);
        }
      }, [inboundShipping]);
      (0, import_react152.useEffect)(() => {
        if (outboundShipping) {
          setCustomOutboundShippingAmount(outboundShipping.total);
        }
      }, [outboundShipping]);
      const inboundShippingOptionId = form.watch("inbound_option_id");
      const outboundShippingOptionId = form.watch("outbound_option_id");
      const prompt = (0, import_ui170.usePrompt)();
      const handleSubmit = form.handleSubmit(async (data) => {
        try {
          const res = await prompt({
            title: t4("general.areYouSure"),
            description: t4("orders.exchanges.confirmText"),
            confirmText: t4("actions.continue"),
            cancelText: t4("actions.cancel"),
            variant: "confirmation"
          });
          if (!res) {
            return;
          }
          await confirmExchangeRequest({ no_notification: !data.send_notification });
          handleSuccess();
        } catch (e) {
          import_ui170.toast.error(t4("general.error"), {
            description: e.message
          });
        }
      });
      (0, import_react152.useEffect)(() => {
        if (isInboundShippingPriceEdit) {
          document.getElementById("js-inbound-shipping-input")?.focus();
        }
      }, [isInboundShippingPriceEdit]);
      (0, import_react152.useEffect)(() => {
        if (isOutboundShippingPriceEdit) {
          document.getElementById("js-outbound-shipping-input")?.focus();
        }
      }, [isOutboundShippingPriceEdit]);
      (0, import_react152.useEffect)(() => {
        return () => {
          if (IS_CANCELING2) {
            cancelExchangeRequest(void 0, {
              onSuccess: () => {
                import_ui170.toast.success(
                  t4("orders.exchanges.actions.cancelExchange.successToast")
                );
              },
              onError: (error) => {
                import_ui170.toast.error(error.message);
              }
            });
            IS_CANCELING2 = false;
          }
        };
      }, []);
      const inboundShippingTotal = (0, import_react152.useMemo)(() => {
        const method = preview.shipping_methods.find(
          (sm) => !!sm.actions?.find((a) => a.action === "SHIPPING_ADD" && !!a.return_id)
        );
        return method?.total || 0;
      }, [preview.shipping_methods]);
      return /* @__PURE__ */ (0, import_jsx_runtime259.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime259.jsxs)(KeyboundForm, { onSubmit: handleSubmit, className: "flex h-full flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime259.jsx)(RouteFocusModal.Header, {}),
        /* @__PURE__ */ (0, import_jsx_runtime259.jsx)(RouteFocusModal.Body, { className: "flex size-full justify-center overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime259.jsxs)("div", { className: "mt-16 w-[720px] max-w-[100%] px-4 md:p-0", children: [
          /* @__PURE__ */ (0, import_jsx_runtime259.jsx)(import_ui170.Heading, { level: "h1", children: t4("orders.exchanges.create") }),
          /* @__PURE__ */ (0, import_jsx_runtime259.jsx)(
            ExchangeInboundSection,
            {
              form,
              preview,
              order,
              exchange,
              orderReturn
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime259.jsx)(
            ExchangeOutboundSection,
            {
              form,
              preview,
              order,
              exchange
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime259.jsxs)("div", { className: "mt-8 border-y border-dotted py-4", children: [
            /* @__PURE__ */ (0, import_jsx_runtime259.jsxs)("div", { className: "mb-2 flex items-center justify-between", children: [
              /* @__PURE__ */ (0, import_jsx_runtime259.jsx)("span", { className: "txt-small text-ui-fg-subtle", children: t4("orders.returns.inboundTotal") }),
              /* @__PURE__ */ (0, import_jsx_runtime259.jsx)("span", { className: "txt-small text-ui-fg-subtle", children: getStylizedAmount(
                inboundPreviewItems.reduce((acc, item) => {
                  const action = item.actions?.find(
                    (act) => act.action === "RETURN_ITEM"
                  );
                  acc = acc + (action?.amount || 0);
                  return acc;
                }, 0) * -1,
                order.currency_code
              ) })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime259.jsxs)("div", { className: "mb-2 flex items-center justify-between", children: [
              /* @__PURE__ */ (0, import_jsx_runtime259.jsx)("span", { className: "txt-small text-ui-fg-subtle", children: t4("orders.exchanges.outboundTotal") }),
              /* @__PURE__ */ (0, import_jsx_runtime259.jsx)("span", { className: "txt-small text-ui-fg-subtle", children: getStylizedAmount(
                outboundPreviewItems.reduce((acc, item) => {
                  const action = item.actions?.find(
                    (act) => act.action === "ITEM_ADD"
                  );
                  acc = acc + (action?.amount || 0);
                  return acc;
                }, 0),
                order.currency_code
              ) })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime259.jsxs)("div", { className: "mb-2 flex items-center justify-between", children: [
              /* @__PURE__ */ (0, import_jsx_runtime259.jsx)("span", { className: "txt-small text-ui-fg-subtle", children: t4("orders.returns.inboundShipping") }),
              /* @__PURE__ */ (0, import_jsx_runtime259.jsxs)("span", { className: "txt-small text-ui-fg-subtle flex items-center", children: [
                !isInboundShippingPriceEdit && /* @__PURE__ */ (0, import_jsx_runtime259.jsx)(
                  import_ui170.IconButton,
                  {
                    onClick: () => setIsInboundShippingPriceEdit(true),
                    variant: "transparent",
                    className: "text-ui-fg-muted",
                    disabled: !inboundPreviewItems?.length || !inboundShippingOptionId,
                    children: /* @__PURE__ */ (0, import_jsx_runtime259.jsx)(import_icons85.PencilSquare, {})
                  }
                ),
                isInboundShippingPriceEdit ? /* @__PURE__ */ (0, import_jsx_runtime259.jsx)(
                  import_ui170.CurrencyInput,
                  {
                    id: "js-inbound-shipping-input",
                    onBlur: () => {
                      let actionId;
                      preview.shipping_methods.forEach((s) => {
                        if (s.actions) {
                          for (const a of s.actions) {
                            if (a.action === "SHIPPING_ADD" && !!a.return_id) {
                              actionId = a.id;
                            }
                          }
                        }
                      });
                      const customPrice = customInboundShippingAmount === "" ? null : parseFloat(customInboundShippingAmount);
                      if (actionId) {
                        updateInboundShipping(
                          {
                            actionId,
                            custom_amount: customPrice
                          },
                          {
                            onError: (error) => {
                              import_ui170.toast.error(error.message);
                            }
                          }
                        );
                      }
                      setIsInboundShippingPriceEdit(false);
                    },
                    symbol: currencies[order.currency_code.toUpperCase()].symbol_native,
                    code: order.currency_code,
                    onValueChange: setCustomInboundShippingAmount,
                    value: customInboundShippingAmount,
                    disabled: !inboundPreviewItems?.length
                  }
                ) : getStylizedAmount(inboundShippingTotal, order.currency_code)
              ] })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime259.jsxs)("div", { className: "flex items-center justify-between", children: [
              /* @__PURE__ */ (0, import_jsx_runtime259.jsx)("span", { className: "txt-small text-ui-fg-subtle", children: t4("orders.exchanges.outboundShipping") }),
              /* @__PURE__ */ (0, import_jsx_runtime259.jsxs)("span", { className: "txt-small text-ui-fg-subtle flex items-center", children: [
                !isOutboundShippingPriceEdit && /* @__PURE__ */ (0, import_jsx_runtime259.jsx)(
                  import_ui170.IconButton,
                  {
                    onClick: () => setIsOutboundShippingPriceEdit(true),
                    variant: "transparent",
                    className: "text-ui-fg-muted",
                    disabled: !outboundPreviewItems?.length || !outboundShippingOptionId,
                    children: /* @__PURE__ */ (0, import_jsx_runtime259.jsx)(import_icons85.PencilSquare, {})
                  }
                ),
                isOutboundShippingPriceEdit ? /* @__PURE__ */ (0, import_jsx_runtime259.jsx)(
                  import_ui170.CurrencyInput,
                  {
                    id: "js-outbound-shipping-input",
                    onBlur: () => {
                      let actionId;
                      preview.shipping_methods.forEach((s) => {
                        if (s.actions) {
                          for (const a of s.actions) {
                            if (a.action === "SHIPPING_ADD" && !a.return_id) {
                              actionId = a.id;
                            }
                          }
                        }
                      });
                      const customPrice = customOutboundShippingAmount === "" ? null : parseFloat(customOutboundShippingAmount);
                      if (actionId) {
                        updateOutboundShipping(
                          {
                            actionId,
                            custom_amount: customPrice
                          },
                          {
                            onError: (error) => {
                              import_ui170.toast.error(error.message);
                            }
                          }
                        );
                      }
                      setIsOutboundShippingPriceEdit(false);
                    },
                    symbol: currencies[order.currency_code.toUpperCase()].symbol_native,
                    code: order.currency_code,
                    onValueChange: setCustomOutboundShippingAmount,
                    value: customOutboundShippingAmount,
                    disabled: !outboundPreviewItems?.length
                  }
                ) : getStylizedAmount(
                  outboundShipping?.amount ?? 0,
                  order.currency_code
                )
              ] })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime259.jsxs)("div", { className: "mt-4 flex items-center justify-between border-t border-dotted pt-4", children: [
              /* @__PURE__ */ (0, import_jsx_runtime259.jsx)("span", { className: "txt-small font-medium", children: t4("orders.exchanges.refundAmount") }),
              /* @__PURE__ */ (0, import_jsx_runtime259.jsx)("span", { className: "txt-small font-medium", children: getStylizedAmount(
                preview.summary.pending_difference,
                order.currency_code
              ) })
            ] })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime259.jsx)("div", { className: "bg-ui-bg-field mt-8 rounded-lg border py-2 pl-2 pr-4", children: /* @__PURE__ */ (0, import_jsx_runtime259.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "send_notification",
              render: ({ field: { onChange, value, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime259.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime259.jsxs)("div", { className: "flex items-center", children: [
                    /* @__PURE__ */ (0, import_jsx_runtime259.jsx)(Form.Control, { className: "mr-4 self-start", children: /* @__PURE__ */ (0, import_jsx_runtime259.jsx)(
                      import_ui170.Switch,
                      {
                        className: "mt-[2px]",
                        checked: !!value,
                        onCheckedChange: onChange,
                        ...field
                      }
                    ) }),
                    /* @__PURE__ */ (0, import_jsx_runtime259.jsxs)("div", { className: "block", children: [
                      /* @__PURE__ */ (0, import_jsx_runtime259.jsx)(Form.Label, { children: t4("orders.returns.sendNotification") }),
                      /* @__PURE__ */ (0, import_jsx_runtime259.jsx)(Form.Hint, { className: "!mt-1", children: t4("orders.returns.sendNotificationHint") })
                    ] })
                  ] }),
                  /* @__PURE__ */ (0, import_jsx_runtime259.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ) }),
          /* @__PURE__ */ (0, import_jsx_runtime259.jsx)("div", { className: "p-8" })
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime259.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime259.jsx)("div", { className: "flex w-full items-center justify-end gap-x-4", children: /* @__PURE__ */ (0, import_jsx_runtime259.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime259.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime259.jsx)(
            import_ui170.Button,
            {
              type: "button",
              onClick: () => IS_CANCELING2 = true,
              variant: "secondary",
              size: "small",
              children: t4("orders.exchanges.cancel.title")
            }
          ) }),
          /* @__PURE__ */ (0, import_jsx_runtime259.jsx)(
            import_ui170.Button,
            {
              type: "submit",
              variant: "primary",
              size: "small",
              isLoading: isRequestLoading,
              children: t4("orders.exchanges.confirm")
            },
            "submit-button"
          )
        ] }) }) })
      ] }) });
    };
  }
});

// src/routes/orders/order-create-exchange/components/exchange-create-form/index.ts
var init_exchange_create_form2 = __esm({
  "src/routes/orders/order-create-exchange/components/exchange-create-form/index.ts"() {
    "use strict";
    init_exchange_create_form();
  }
});

// src/routes/orders/order-create-exchange/exchange-create.tsx
var import_ui171, import_react153, import_react_i18next182, import_react_router_dom76, import_jsx_runtime260, IS_REQUEST_RUNNING4, ExchangeCreate;
var init_exchange_create = __esm({
  "src/routes/orders/order-create-exchange/exchange-create.tsx"() {
    "use strict";
    import_ui171 = require("@medusajs/ui");
    import_react153 = require("react");
    import_react_i18next182 = require("react-i18next");
    import_react_router_dom76 = require("react-router-dom");
    init_modals();
    init_exchanges();
    init_orders();
    init_returns();
    init_constants7();
    init_exchange_create_form2();
    import_jsx_runtime260 = require("react/jsx-runtime");
    IS_REQUEST_RUNNING4 = false;
    ExchangeCreate = () => {
      const { id: id2 } = (0, import_react_router_dom76.useParams)();
      const navigate = (0, import_react_router_dom76.useNavigate)();
      const { t: t4 } = (0, import_react_i18next182.useTranslation)();
      const { order } = useOrder(id2, {
        fields: DEFAULT_FIELDS2
      });
      const { order: preview } = useOrderPreview(id2);
      const [activeExchangeId, setActiveExchangeId] = (0, import_react153.useState)();
      const { mutateAsync: createExchange } = useCreateExchange(order.id);
      const { exchange } = useExchange(activeExchangeId, void 0, {
        enabled: !!activeExchangeId
      });
      const { return: orderReturn } = useReturn(exchange?.return_id, void 0, {
        enabled: !!exchange?.return_id
      });
      (0, import_react153.useEffect)(() => {
        async function run() {
          if (IS_REQUEST_RUNNING4 || !preview) {
            return;
          }
          if (preview.order_change) {
            if (preview.order_change.change_type === "exchange") {
              setActiveExchangeId(preview.order_change.exchange_id);
            } else {
              navigate(`/orders/${preview.id}`, { replace: true });
              import_ui171.toast.error(t4("orders.exchanges.activeChangeError"));
            }
            return;
          }
          IS_REQUEST_RUNNING4 = true;
          try {
            const { exchange: createdExchange } = await createExchange({
              order_id: preview.id
            });
            setActiveExchangeId(createdExchange.id);
          } catch (e) {
            import_ui171.toast.error(e.message);
            navigate(`/orders/${preview.id}`, { replace: true });
          } finally {
            IS_REQUEST_RUNNING4 = false;
          }
        }
        run();
      }, [preview]);
      return /* @__PURE__ */ (0, import_jsx_runtime260.jsx)(RouteFocusModal, { children: exchange && preview && order && /* @__PURE__ */ (0, import_jsx_runtime260.jsx)(
        ExchangeCreateForm,
        {
          order,
          exchange,
          preview,
          orderReturn
        }
      ) });
    };
  }
});

// src/routes/orders/order-create-exchange/index.ts
var order_create_exchange_exports = {};
__export(order_create_exchange_exports, {
  Component: () => ExchangeCreate
});
var init_order_create_exchange = __esm({
  "src/routes/orders/order-create-exchange/index.ts"() {
    "use strict";
    init_exchange_create();
  }
});

// src/routes/orders/order-create-edit/components/add-order-edit-items-table/use-order-edit-item-table-columns.tsx
var import_ui172, import_react_table22, import_react154, import_react_i18next183, import_jsx_runtime261, columnHelper21, useOrderEditItemsTableColumns;
var init_use_order_edit_item_table_columns = __esm({
  "src/routes/orders/order-create-edit/components/add-order-edit-items-table/use-order-edit-item-table-columns.tsx"() {
    "use strict";
    import_ui172 = require("@medusajs/ui");
    import_react_table22 = require("@tanstack/react-table");
    import_react154 = require("react");
    import_react_i18next183 = require("react-i18next");
    init_product_cell2();
    import_jsx_runtime261 = require("react/jsx-runtime");
    columnHelper21 = (0, import_react_table22.createColumnHelper)();
    useOrderEditItemsTableColumns = (currencyCode) => {
      const { t: t4 } = (0, import_react_i18next183.useTranslation)();
      return (0, import_react154.useMemo)(
        () => [
          columnHelper21.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime261.jsx)(
                import_ui172.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              const isSelectable = row.getCanSelect();
              return /* @__PURE__ */ (0, import_jsx_runtime261.jsx)(
                import_ui172.Checkbox,
                {
                  disabled: !isSelectable,
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          columnHelper21.display({
            id: "product",
            header: () => /* @__PURE__ */ (0, import_jsx_runtime261.jsx)(ProductHeader, {}),
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime261.jsx)(ProductCell, { product: row.original.product });
            }
          }),
          columnHelper21.accessor("sku", {
            header: t4("fields.sku"),
            cell: ({ getValue: getValue2 }) => {
              return getValue2() || "-";
            }
          }),
          columnHelper21.accessor("title", {
            header: t4("fields.title")
          })
        ],
        [t4, currencyCode]
      );
    };
  }
});

// src/routes/orders/order-create-edit/components/add-order-edit-items-table/use-order-edit-item-table-filters.tsx
var import_react_i18next184, useOrderEditItemTableFilters;
var init_use_order_edit_item_table_filters = __esm({
  "src/routes/orders/order-create-edit/components/add-order-edit-items-table/use-order-edit-item-table-filters.tsx"() {
    "use strict";
    import_react_i18next184 = require("react-i18next");
    useOrderEditItemTableFilters = () => {
      const { t: t4 } = (0, import_react_i18next184.useTranslation)();
      const filters = [
        {
          key: "created_at",
          label: t4("fields.createdAt"),
          type: "date"
        },
        {
          key: "updated_at",
          label: t4("fields.updatedAt"),
          type: "date"
        }
      ];
      return filters;
    };
  }
});

// src/routes/orders/order-create-edit/components/add-order-edit-items-table/use-order-edit-item-table-query.tsx
var useOrderEditItemTableQuery;
var init_use_order_edit_item_table_query = __esm({
  "src/routes/orders/order-create-edit/components/add-order-edit-items-table/use-order-edit-item-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useOrderEditItemTableQuery = ({
      pageSize = 50,
      prefix
    }) => {
      const raw = useQueryParams(
        ["q", "offset", "order", "created_at", "updated_at"],
        prefix
      );
      const { offset: offset4, created_at, updated_at, ...rest } = raw;
      const searchParams = {
        ...rest,
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0
      };
      return { searchParams, raw };
    };
  }
});

// src/routes/orders/order-create-edit/components/add-order-edit-items-table/add-order-edit-items-table.tsx
var import_react155, import_react_i18next185, import_jsx_runtime262, PAGE_SIZE15, PREFIX7, AddOrderEditItemsTable;
var init_add_order_edit_items_table = __esm({
  "src/routes/orders/order-create-edit/components/add-order-edit-items-table/add-order-edit-items-table.tsx"() {
    "use strict";
    import_react155 = require("react");
    import_react_i18next185 = require("react-i18next");
    init_data_table2();
    init_api();
    init_use_data_table();
    init_use_order_edit_item_table_columns();
    init_use_order_edit_item_table_filters();
    init_use_order_edit_item_table_query();
    import_jsx_runtime262 = require("react/jsx-runtime");
    PAGE_SIZE15 = 50;
    PREFIX7 = "rit";
    AddOrderEditItemsTable = ({
      onSelectionChange,
      currencyCode
    }) => {
      const { t: t4 } = (0, import_react_i18next185.useTranslation)();
      const [rowSelection, setRowSelection] = (0, import_react155.useState)({});
      const updater = (fn) => {
        const newState = typeof fn === "function" ? fn(rowSelection) : fn;
        setRowSelection(newState);
        onSelectionChange(Object.keys(newState));
      };
      const { searchParams, raw } = useOrderEditItemTableQuery({
        pageSize: PAGE_SIZE15,
        prefix: PREFIX7
      });
      const { variants = [], count: count3 } = useVariants({
        ...searchParams,
        fields: "*inventory_items.inventory.location_levels,+inventory_quantity"
      });
      const columns = useOrderEditItemsTableColumns(currencyCode);
      const filters = useOrderEditItemTableFilters();
      const { table } = useDataTable({
        data: variants,
        columns,
        count: count3,
        enablePagination: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE15,
        enableRowSelection: (_row) => {
          return true;
        },
        rowSelection: {
          state: rowSelection,
          updater
        }
      });
      return /* @__PURE__ */ (0, import_jsx_runtime262.jsx)("div", { className: "flex size-full flex-col overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime262.jsx)(
        DataTable,
        {
          table,
          columns,
          pageSize: PAGE_SIZE15,
          count: count3,
          filters,
          pagination: true,
          layout: "fill",
          search: true,
          orderBy: [
            { key: "product_id", label: t4("fields.product") },
            { key: "title", label: t4("fields.title") },
            { key: "sku", label: t4("fields.sku") }
          ],
          prefix: PREFIX7,
          queryObject: raw
        }
      ) });
    };
  }
});

// src/routes/orders/order-create-edit/components/add-order-edit-items-table/index.ts
var init_add_order_edit_items_table2 = __esm({
  "src/routes/orders/order-create-edit/components/add-order-edit-items-table/index.ts"() {
    "use strict";
    init_add_order_edit_items_table();
  }
});

// src/routes/orders/order-create-edit/components/order-edit-create-form/order-edit-item.tsx
function OrderEditItem({ item, currencyCode, orderId }) {
  const { t: t4 } = (0, import_react_i18next186.useTranslation)();
  const { mutateAsync: addItems } = useAddOrderEditItems(orderId);
  const { mutateAsync: updateAddedItem } = useUpdateOrderEditAddedItem(orderId);
  const { mutateAsync: updateOriginalItem } = useUpdateOrderEditOriginalItem(orderId);
  const { mutateAsync: undoAction } = useRemoveOrderEditItem(orderId);
  const isAddedItem = (0, import_react156.useMemo)(
    () => !!item.actions?.find((a) => a.action === "ITEM_ADD"),
    [item]
  );
  const isItemUpdated = (0, import_react156.useMemo)(
    () => !!item.actions?.find((a) => a.action === "ITEM_UPDATE"),
    [item]
  );
  const isItemRemoved = (0, import_react156.useMemo)(() => {
    const updateAction = item.actions?.find((a) => a.action === "ITEM_UPDATE");
    return !!updateAction && item.quantity === item.detail.fulfilled_quantity;
  }, [item]);
  const onUpdate = async (quantity) => {
    if (quantity <= item.detail.fulfilled_quantity) {
      import_ui173.toast.error(t4("orders.edits.validation.quantityLowerThanFulfillment"));
      return;
    }
    if (quantity === item.quantity) {
      return;
    }
    const addItemAction = item.actions?.find((a) => a.action === "ITEM_ADD");
    try {
      if (addItemAction) {
        await updateAddedItem({ quantity, actionId: addItemAction.id });
      } else {
        await updateOriginalItem({ quantity, itemId: item.id });
      }
    } catch (e) {
      import_ui173.toast.error(e.message);
    }
  };
  const onRemove = async () => {
    const addItemAction = item.actions?.find((a) => a.action === "ITEM_ADD");
    try {
      if (addItemAction) {
        await undoAction(addItemAction.id);
      } else {
        await updateOriginalItem({
          quantity: item.detail.fulfilled_quantity,
          //
          itemId: item.id
        });
      }
    } catch (e) {
      import_ui173.toast.error(e.message);
    }
  };
  const onRemoveUndo = async () => {
    const updateItemAction = item.actions?.find(
      (a) => a.action === "ITEM_UPDATE"
    );
    try {
      if (updateItemAction) {
        await undoAction(updateItemAction.id);
      }
    } catch (e) {
      import_ui173.toast.error(e.message);
    }
  };
  const onDuplicate = async () => {
    try {
      await addItems({
        items: [
          {
            variant_id: item.variant_id,
            quantity: item.quantity
          }
        ]
      });
    } catch (e) {
      import_ui173.toast.error(e.message);
    }
  };
  return /* @__PURE__ */ (0, import_jsx_runtime263.jsx)(
    "div",
    {
      className: "bg-ui-bg-subtle shadow-elevation-card-rest my-2 rounded-xl ",
      children: /* @__PURE__ */ (0, import_jsx_runtime263.jsxs)("div", { className: "flex flex-col items-center gap-x-2 gap-y-2 p-3 text-sm md:flex-row", children: [
        /* @__PURE__ */ (0, import_jsx_runtime263.jsxs)("div", { className: "flex flex-1 items-center justify-between", children: [
          /* @__PURE__ */ (0, import_jsx_runtime263.jsxs)("div", { className: "flex flex-row items-center gap-x-3", children: [
            /* @__PURE__ */ (0, import_jsx_runtime263.jsx)(Thumbnail, { src: item.thumbnail }),
            /* @__PURE__ */ (0, import_jsx_runtime263.jsxs)("div", { className: "flex flex-col", children: [
              /* @__PURE__ */ (0, import_jsx_runtime263.jsxs)("div", { children: [
                /* @__PURE__ */ (0, import_jsx_runtime263.jsxs)(import_ui173.Text, { className: "txt-small", as: "span", weight: "plus", children: [
                  item.title,
                  " "
                ] }),
                item.variant_sku && /* @__PURE__ */ (0, import_jsx_runtime263.jsxs)("span", { children: [
                  "(",
                  item.variant_sku,
                  ")"
                ] })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime263.jsx)(import_ui173.Text, { as: "div", className: "text-ui-fg-subtle txt-small", children: item.product_title })
            ] })
          ] }),
          isAddedItem && /* @__PURE__ */ (0, import_jsx_runtime263.jsx)(import_ui173.Badge, { size: "2xsmall", rounded: "full", color: "blue", className: "mr-1", children: t4("general.new") }),
          isItemRemoved ? /* @__PURE__ */ (0, import_jsx_runtime263.jsx)(import_ui173.Badge, { size: "2xsmall", rounded: "full", color: "red", className: "mr-1", children: t4("general.removed") }) : isItemUpdated && /* @__PURE__ */ (0, import_jsx_runtime263.jsx)(
            import_ui173.Badge,
            {
              size: "2xsmall",
              rounded: "full",
              color: "orange",
              className: "mr-1",
              children: t4("general.modified")
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime263.jsxs)("div", { className: "flex flex-1 justify-between", children: [
          /* @__PURE__ */ (0, import_jsx_runtime263.jsxs)("div", { className: "flex flex-grow items-center gap-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime263.jsx)(
              import_ui173.Input,
              {
                className: "bg-ui-bg-base txt-small w-[67px] rounded-lg [appearance:textfield] [&::-webkit-inner-spin-button]:appearance-none [&::-webkit-outer-spin-button]:appearance-none",
                type: "number",
                disabled: item.detail.fulfilled_quantity === item.quantity,
                min: item.detail.fulfilled_quantity,
                defaultValue: item.quantity,
                onBlur: (e) => {
                  const val = e.target.value;
                  const payload = val === "" ? null : Number(val);
                  if (payload) {
                    onUpdate(payload);
                  }
                }
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime263.jsx)(import_ui173.Text, { className: "txt-small text-ui-fg-subtle", children: t4("fields.qty") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime263.jsx)("div", { className: "text-ui-fg-subtle txt-small mr-2 flex flex-shrink-0", children: /* @__PURE__ */ (0, import_jsx_runtime263.jsx)(MoneyAmountCell, { currencyCode, amount: item.total }) }),
          /* @__PURE__ */ (0, import_jsx_runtime263.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      label: t4("actions.duplicate"),
                      onClick: onDuplicate,
                      icon: /* @__PURE__ */ (0, import_jsx_runtime263.jsx)(import_icons86.DocumentSeries, {})
                    }
                  ]
                },
                {
                  actions: [
                    !isItemRemoved ? {
                      label: t4("actions.remove"),
                      onClick: onRemove,
                      icon: /* @__PURE__ */ (0, import_jsx_runtime263.jsx)(import_icons86.XCircle, {}),
                      disabled: item.detail.fulfilled_quantity === item.quantity
                    } : {
                      label: t4("actions.undo"),
                      onClick: onRemoveUndo,
                      icon: /* @__PURE__ */ (0, import_jsx_runtime263.jsx)(import_icons86.ArrowUturnLeft, {})
                    }
                  ].filter(Boolean)
                }
              ]
            }
          )
        ] })
      ] })
    },
    item.quantity
  );
}
var import_icons86, import_ui173, import_react_i18next186, import_react156, import_jsx_runtime263;
var init_order_edit_item = __esm({
  "src/routes/orders/order-create-edit/components/order-edit-create-form/order-edit-item.tsx"() {
    "use strict";
    import_icons86 = require("@medusajs/icons");
    import_ui173 = require("@medusajs/ui");
    import_react_i18next186 = require("react-i18next");
    init_action_menu2();
    init_thumbnail2();
    init_money_amount_cell2();
    import_react156 = require("react");
    init_order_edits();
    import_jsx_runtime263 = require("react/jsx-runtime");
  }
});

// src/routes/orders/order-create-edit/components/order-edit-create-form/order-edit-items-section.tsx
var import_react157, import_ui174, import_react_i18next187, import_jsx_runtime264, addedVariants, OrderEditItemsSection;
var init_order_edit_items_section = __esm({
  "src/routes/orders/order-create-edit/components/order-edit-create-form/order-edit-items-section.tsx"() {
    "use strict";
    import_react157 = require("react");
    import_ui174 = require("@medusajs/ui");
    import_react_i18next187 = require("react-i18next");
    init_modals();
    init_add_order_edit_items_table2();
    init_order_edit_item();
    init_order_edits();
    import_jsx_runtime264 = require("react/jsx-runtime");
    addedVariants = [];
    OrderEditItemsSection = ({
      order,
      preview
    }) => {
      const { t: t4 } = (0, import_react_i18next187.useTranslation)();
      const { setIsOpen } = useStackedModal();
      const [filterTerm, setFilterTerm] = (0, import_react157.useState)("");
      const { mutateAsync: addItems, isPending } = useAddOrderEditItems(order.id);
      const onItemsSelected = async () => {
        try {
          await addItems({
            items: addedVariants.map((i) => ({
              variant_id: i,
              quantity: 1
            }))
          });
        } catch (e) {
          import_ui174.toast.error(e.message);
        }
        setIsOpen("inbound-items", false);
      };
      const filteredItems = (0, import_react157.useMemo)(() => {
        return preview.items.filter(
          (i) => i.title.toLowerCase().includes(filterTerm) || i.product_title.toLowerCase().includes(filterTerm)
        );
      }, [preview, filterTerm]);
      return /* @__PURE__ */ (0, import_jsx_runtime264.jsxs)("div", { children: [
        /* @__PURE__ */ (0, import_jsx_runtime264.jsxs)("div", { className: "mb-3 mt-8 flex items-center justify-between", children: [
          /* @__PURE__ */ (0, import_jsx_runtime264.jsx)(import_ui174.Heading, { level: "h2", children: t4("fields.items") }),
          /* @__PURE__ */ (0, import_jsx_runtime264.jsxs)("div", { className: "flex gap-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime264.jsx)(
              import_ui174.Input,
              {
                value: filterTerm,
                onChange: (e) => setFilterTerm(e.target.value),
                placeholder: t4("fields.search"),
                autoComplete: "off",
                type: "search"
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime264.jsxs)(StackedFocusModal, { id: "inbound-items", children: [
              /* @__PURE__ */ (0, import_jsx_runtime264.jsx)(StackedFocusModal.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime264.jsx)(import_ui174.Button, { variant: "secondary", size: "small", children: t4("actions.addItems") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime264.jsxs)(StackedFocusModal.Content, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime264.jsx)(StackedFocusModal.Header, {}),
                /* @__PURE__ */ (0, import_jsx_runtime264.jsx)(
                  AddOrderEditItemsTable,
                  {
                    currencyCode: order.currency_code,
                    onSelectionChange: (finalSelection) => {
                      addedVariants = finalSelection;
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime264.jsx)(StackedFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime264.jsx)("div", { className: "flex w-full items-center justify-end gap-x-4", children: /* @__PURE__ */ (0, import_jsx_runtime264.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime264.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime264.jsx)(import_ui174.Button, { type: "button", variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime264.jsx)(
                    import_ui174.Button,
                    {
                      type: "submit",
                      variant: "primary",
                      size: "small",
                      role: "button",
                      disabled: isPending,
                      onClick: async () => await onItemsSelected(),
                      children: t4("actions.save")
                    },
                    "submit-button"
                  )
                ] }) }) })
              ] })
            ] })
          ] })
        ] }),
        filteredItems.map((item) => /* @__PURE__ */ (0, import_jsx_runtime264.jsx)(
          OrderEditItem,
          {
            item,
            orderId: order.id,
            currencyCode: order.currency_code
          },
          item.id
        )),
        filterTerm && !filteredItems.length && /* @__PURE__ */ (0, import_jsx_runtime264.jsx)(
          "div",
          {
            style: {
              background: "repeating-linear-gradient(-45deg, rgb(212, 212, 216, 0.15), rgb(212, 212, 216,.15) 10px, transparent 10px, transparent 20px)"
            },
            className: "bg-ui-bg-field mt-4 block h-[56px] w-full rounded-lg border border-dashed"
          }
        )
      ] });
    };
  }
});

// src/routes/orders/order-create-edit/components/order-edit-create-form/schema.ts
var import_zod40, OrderEditCreateSchema;
var init_schema5 = __esm({
  "src/routes/orders/order-create-edit/components/order-edit-create-form/schema.ts"() {
    "use strict";
    import_zod40 = require("zod");
    OrderEditCreateSchema = import_zod40.z.object({
      note: import_zod40.z.string().optional(),
      send_notification: import_zod40.z.boolean().optional()
    });
  }
});

// src/routes/orders/order-create-edit/components/order-edit-create-form/order-edit-create-form.tsx
var import_zod41, import_ui175, import_react_hook_form43, import_react_i18next188, import_jsx_runtime265, OrderEditCreateForm;
var init_order_edit_create_form = __esm({
  "src/routes/orders/order-create-edit/components/order-edit-create-form/order-edit-create-form.tsx"() {
    "use strict";
    import_zod41 = require("@hookform/resolvers/zod");
    import_ui175 = require("@medusajs/ui");
    import_react_hook_form43 = require("react-hook-form");
    import_react_i18next188 = require("react-i18next");
    init_modals();
    init_form2();
    init_keybound_form2();
    init_order_edits();
    init_money_amount_helpers();
    init_order_edit_items_section();
    init_schema5();
    import_jsx_runtime265 = require("react/jsx-runtime");
    OrderEditCreateForm = ({
      order,
      preview
    }) => {
      const { t: t4 } = (0, import_react_i18next188.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const { mutateAsync: cancelOrderEditRequest, isPending: isCanceling } = useCancelOrderEdit(order.id);
      const { mutateAsync: requestOrderEdit, isPending: isRequesting } = useRequestOrderEdit(order.id);
      const isRequestRunning = isCanceling || isRequesting;
      const form = (0, import_react_hook_form43.useForm)({
        defaultValues: () => {
          return Promise.resolve({
            note: "",
            // TODO: add note when update edit route is added
            send_notification: false
            // TODO: not supported in the API ATM
          });
        },
        resolver: (0, import_zod41.zodResolver)(OrderEditCreateSchema)
      });
      const prompt = (0, import_ui175.usePrompt)();
      const handleSubmit = form.handleSubmit(async (data) => {
        try {
          const res = await prompt({
            title: t4("general.areYouSure"),
            description: t4("orders.edits.confirmText"),
            confirmText: t4("actions.continue"),
            cancelText: t4("actions.cancel"),
            variant: "confirmation"
          });
          if (!res) {
            return;
          }
          await requestOrderEdit();
          import_ui175.toast.success(t4("orders.edits.createSuccessToast"));
          handleSuccess();
        } catch (e) {
          import_ui175.toast.error(t4("general.error"), {
            description: e.message
          });
        }
      });
      return /* @__PURE__ */ (0, import_jsx_runtime265.jsx)(
        RouteFocusModal.Form,
        {
          form,
          onClose: (isSubmitSuccessful) => {
            if (!isSubmitSuccessful) {
              cancelOrderEditRequest(void 0, {
                onSuccess: () => {
                  import_ui175.toast.success(t4("orders.edits.cancelSuccessToast"));
                },
                onError: (error) => {
                  import_ui175.toast.error(error.message);
                }
              });
            }
          },
          children: /* @__PURE__ */ (0, import_jsx_runtime265.jsxs)(KeyboundForm, { onSubmit: handleSubmit, className: "flex h-full flex-col", children: [
            /* @__PURE__ */ (0, import_jsx_runtime265.jsx)(RouteFocusModal.Header, {}),
            /* @__PURE__ */ (0, import_jsx_runtime265.jsx)(RouteFocusModal.Body, { className: "flex size-full justify-center overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime265.jsxs)("div", { className: "mt-16 w-[720px] max-w-[100%] px-4 md:p-0", children: [
              /* @__PURE__ */ (0, import_jsx_runtime265.jsx)(import_ui175.Heading, { level: "h1", children: t4("orders.edits.create") }),
              /* @__PURE__ */ (0, import_jsx_runtime265.jsx)(OrderEditItemsSection, { preview, order }),
              /* @__PURE__ */ (0, import_jsx_runtime265.jsxs)("div", { className: "mt-8 border-y border-dotted py-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime265.jsxs)("div", { className: "mb-2 flex items-center justify-between", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime265.jsx)("span", { className: "txt-small text-ui-fg-subtle", children: t4("orders.edits.currentTotal") }),
                  /* @__PURE__ */ (0, import_jsx_runtime265.jsx)("span", { className: "txt-small text-ui-fg-subtle", children: getStylizedAmount(order.total, order.currency_code) })
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime265.jsxs)("div", { className: "mb-2 flex items-center justify-between", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime265.jsx)("span", { className: "txt-small text-ui-fg-subtle", children: t4("orders.edits.newTotal") }),
                  /* @__PURE__ */ (0, import_jsx_runtime265.jsx)("span", { className: "txt-small text-ui-fg-subtle", children: getStylizedAmount(preview.total, order.currency_code) })
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime265.jsxs)("div", { className: "mt-4 flex items-center justify-between border-t border-dotted pt-4", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime265.jsx)("span", { className: "txt-small font-medium", children: t4("orders.exchanges.refundAmount") }),
                  /* @__PURE__ */ (0, import_jsx_runtime265.jsx)("span", { className: "txt-small font-medium", children: getStylizedAmount(
                    preview.summary.pending_difference,
                    order.currency_code
                  ) })
                ] })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime265.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "note",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime265.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime265.jsxs)("div", { className: "mt-8 flex", children: [
                      /* @__PURE__ */ (0, import_jsx_runtime265.jsxs)("div", { className: "block flex-1", children: [
                        /* @__PURE__ */ (0, import_jsx_runtime265.jsx)(Form.Label, { children: t4("fields.note") }),
                        /* @__PURE__ */ (0, import_jsx_runtime265.jsx)(Form.Hint, { className: "!mt-1", children: t4("orders.edits.noteHint") })
                      ] }),
                      /* @__PURE__ */ (0, import_jsx_runtime265.jsx)("div", { className: "w-full flex-1 flex-grow", children: /* @__PURE__ */ (0, import_jsx_runtime265.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime265.jsx)(import_ui175.Input, { ...field, placeholder: t4("fields.note") }) }) })
                    ] }) });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime265.jsx)("div", { className: "bg-ui-bg-field mt-8 rounded-lg border py-2 pl-2 pr-4", children: /* @__PURE__ */ (0, import_jsx_runtime265.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "send_notification",
                  render: ({ field: { onChange, value, ...field } }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime265.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime265.jsxs)("div", { className: "flex items-center", children: [
                        /* @__PURE__ */ (0, import_jsx_runtime265.jsx)(Form.Control, { className: "mr-4 self-start", children: /* @__PURE__ */ (0, import_jsx_runtime265.jsx)(
                          import_ui175.Switch,
                          {
                            className: "mt-[2px]",
                            checked: !!value,
                            onCheckedChange: onChange,
                            ...field
                          }
                        ) }),
                        /* @__PURE__ */ (0, import_jsx_runtime265.jsxs)("div", { className: "block", children: [
                          /* @__PURE__ */ (0, import_jsx_runtime265.jsx)(Form.Label, { children: t4("orders.returns.sendNotification") }),
                          /* @__PURE__ */ (0, import_jsx_runtime265.jsx)(Form.Hint, { className: "!mt-1", children: t4("orders.returns.sendNotificationHint") })
                        ] })
                      ] }),
                      /* @__PURE__ */ (0, import_jsx_runtime265.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ) }),
              /* @__PURE__ */ (0, import_jsx_runtime265.jsx)("div", { className: "p-8" })
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime265.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime265.jsx)("div", { className: "flex w-full items-center justify-end gap-x-4", children: /* @__PURE__ */ (0, import_jsx_runtime265.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime265.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime265.jsx)(import_ui175.Button, { type: "button", variant: "secondary", size: "small", children: t4("orders.edits.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime265.jsx)(
                import_ui175.Button,
                {
                  type: "submit",
                  variant: "primary",
                  size: "small",
                  isLoading: isRequestRunning,
                  children: t4("orders.edits.confirm")
                },
                "submit-button"
              )
            ] }) }) })
          ] })
        }
      );
    };
  }
});

// src/routes/orders/order-create-edit/components/order-edit-create-form/index.ts
var init_order_edit_create_form2 = __esm({
  "src/routes/orders/order-create-edit/components/order-edit-create-form/index.ts"() {
    "use strict";
    init_order_edit_create_form();
  }
});

// src/routes/orders/order-create-edit/order-edit-create.tsx
var import_ui176, import_react158, import_react_i18next189, import_react_router_dom77, import_jsx_runtime266, IS_REQUEST_RUNNING5, OrderEditCreate;
var init_order_edit_create = __esm({
  "src/routes/orders/order-create-edit/order-edit-create.tsx"() {
    "use strict";
    import_ui176 = require("@medusajs/ui");
    import_react158 = require("react");
    import_react_i18next189 = require("react-i18next");
    import_react_router_dom77 = require("react-router-dom");
    init_modals();
    init_orders();
    init_constants7();
    init_order_edit_create_form2();
    init_order_edits();
    import_jsx_runtime266 = require("react/jsx-runtime");
    IS_REQUEST_RUNNING5 = false;
    OrderEditCreate = () => {
      const { id: id2 } = (0, import_react_router_dom77.useParams)();
      const navigate = (0, import_react_router_dom77.useNavigate)();
      const { t: t4 } = (0, import_react_i18next189.useTranslation)();
      const { order } = useOrder(id2, {
        fields: DEFAULT_FIELDS2
      });
      const { order: preview } = useOrderPreview(id2);
      const { mutateAsync: createOrderEdit } = useCreateOrderEdit(order.id);
      (0, import_react158.useEffect)(() => {
        async function run() {
          if (IS_REQUEST_RUNNING5 || !preview) {
            return;
          }
          if (preview.order_change) {
            if (preview.order_change.change_type !== "edit") {
              navigate(`/orders/${preview.id}`, { replace: true });
              import_ui176.toast.error(t4("orders.edits.activeChangeError"));
            }
            return;
          }
          IS_REQUEST_RUNNING5 = true;
          try {
            const { order: order2 } = await createOrderEdit({
              order_id: preview.id
            });
          } catch (e) {
            import_ui176.toast.error(e.message);
            navigate(`/orders/${preview.id}`, { replace: true });
          } finally {
            IS_REQUEST_RUNNING5 = false;
          }
        }
        run();
      }, [preview]);
      return /* @__PURE__ */ (0, import_jsx_runtime266.jsx)(RouteFocusModal, { children: preview && order && /* @__PURE__ */ (0, import_jsx_runtime266.jsx)(OrderEditCreateForm, { order, preview }) });
    };
  }
});

// src/routes/orders/order-create-edit/index.ts
var order_create_edit_exports = {};
__export(order_create_edit_exports, {
  Component: () => OrderEditCreate
});
var init_order_create_edit = __esm({
  "src/routes/orders/order-create-edit/index.ts"() {
    "use strict";
    init_order_edit_create();
  }
});

// src/routes/orders/order-create-refund/components/create-refund-form/create-refund-form.tsx
var import_zod42, import_ui177, import_react159, import_react_hook_form44, import_react_i18next190, import_react_router_dom78, zod8, import_jsx_runtime267, CreateRefundSchema, CreateRefundForm;
var init_create_refund_form = __esm({
  "src/routes/orders/order-create-refund/components/create-refund-form/create-refund-form.tsx"() {
    "use strict";
    import_zod42 = require("@hookform/resolvers/zod");
    import_ui177 = require("@medusajs/ui");
    import_react159 = require("react");
    import_react_hook_form44 = require("react-hook-form");
    import_react_i18next190 = require("react-i18next");
    import_react_router_dom78 = require("react-router-dom");
    zod8 = __toESM(require("zod"));
    init_form2();
    init_modals();
    init_keybound_form2();
    init_api();
    init_currencies2();
    init_format_currency();
    init_money_amount_helpers();
    init_order_payment_section2();
    import_jsx_runtime267 = require("react/jsx-runtime");
    CreateRefundSchema = zod8.object({
      amount: zod8.number(),
      refund_reason_id: zod8.string().nullish(),
      note: zod8.string().optional()
    });
    CreateRefundForm = ({
      order,
      refundReasons
    }) => {
      const { t: t4 } = (0, import_react_i18next190.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const navigate = (0, import_react_router_dom78.useNavigate)();
      const [searchParams] = (0, import_react_router_dom78.useSearchParams)();
      const paymentId = searchParams.get("paymentId");
      const payments = getPaymentsFromOrder(order);
      const payment = payments.find((p) => p.id === paymentId);
      const paymentAmount = payment?.amount || 0;
      const form = (0, import_react_hook_form44.useForm)({
        defaultValues: {
          amount: paymentAmount,
          note: ""
        },
        resolver: (0, import_zod42.zodResolver)(CreateRefundSchema)
      });
      (0, import_react159.useEffect)(() => {
        const pendingDifference = order.summary.pending_difference;
        const paymentAmount2 = payment?.amount || 0;
        const pendingAmount = pendingDifference < 0 ? Math.min(pendingDifference, paymentAmount2) : paymentAmount2;
        const normalizedAmount = pendingAmount < 0 ? pendingAmount * -1 : pendingAmount;
        form.setValue("amount", normalizedAmount);
      }, [payment]);
      const { mutateAsync, isPending } = useRefundPayment(order.id, payment?.id);
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(
          {
            amount: data.amount,
            refund_reason_id: data.refund_reason_id,
            note: data.note
          },
          {
            onSuccess: () => {
              import_ui177.toast.success(
                t4("orders.payment.refundPaymentSuccess", {
                  amount: formatCurrency(data.amount, payment?.currency_code)
                })
              );
              handleSuccess();
            },
            onError: (error) => {
              import_ui177.toast.error(error.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime267.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime267.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex size-full flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime267.jsx)(RouteDrawer.Body, { className: "flex-1 overflow-auto", children: /* @__PURE__ */ (0, import_jsx_runtime267.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
              /* @__PURE__ */ (0, import_jsx_runtime267.jsxs)(
                import_ui177.Select,
                {
                  value: payment?.id,
                  onValueChange: (value) => {
                    navigate(`/orders/${order.id}/refund?paymentId=${value}`, {
                      replace: true
                    });
                  },
                  children: [
                    /* @__PURE__ */ (0, import_jsx_runtime267.jsx)(import_ui177.Label, { className: "txt-compact-small mb-[-6px] font-sans font-medium", children: t4("orders.payment.selectPaymentToRefund") }),
                    /* @__PURE__ */ (0, import_jsx_runtime267.jsx)(import_ui177.Select.Trigger, { children: /* @__PURE__ */ (0, import_jsx_runtime267.jsx)(
                      import_ui177.Select.Value,
                      {
                        placeholder: t4("orders.payment.selectPaymentToRefund")
                      }
                    ) }),
                    /* @__PURE__ */ (0, import_jsx_runtime267.jsx)(import_ui177.Select.Content, { children: payments.map((payment2) => /* @__PURE__ */ (0, import_jsx_runtime267.jsxs)(import_ui177.Select.Item, { value: payment2.id, children: [
                      /* @__PURE__ */ (0, import_jsx_runtime267.jsxs)("span", { children: [
                        getLocaleAmount(
                          payment2.amount,
                          payment2.currency_code
                        ),
                        " - "
                      ] }),
                      /* @__PURE__ */ (0, import_jsx_runtime267.jsx)("span", { children: payment2.provider_id }),
                      /* @__PURE__ */ (0, import_jsx_runtime267.jsxs)("span", { children: [
                        " - (",
                        payment2.id.replace("pay_", ""),
                        ")"
                      ] })
                    ] }, payment2.id)) })
                  ]
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime267.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "amount",
                  rules: {
                    required: true,
                    min: 0,
                    max: paymentAmount
                  },
                  render: ({ field: { onChange, ...field } }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime267.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime267.jsx)(Form.Label, { children: t4("fields.amount") }),
                      /* @__PURE__ */ (0, import_jsx_runtime267.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime267.jsx)(
                        import_ui177.CurrencyInput,
                        {
                          ...field,
                          min: 0,
                          onChange: (e) => {
                            const val = e.target.value === "" ? null : Number(e.target.value);
                            onChange(val);
                            if (val && !isNaN(val)) {
                              if (val < 0 || val > paymentAmount) {
                                form.setError(`amount`, {
                                  type: "manual",
                                  message: t4(
                                    "orders.payment.createRefundWrongQuantity",
                                    { number: paymentAmount }
                                  )
                                });
                              } else {
                                form.clearErrors(`amount`);
                              }
                            }
                          },
                          code: order.currency_code,
                          symbol: getCurrencySymbol(order.currency_code),
                          value: field.value
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime267.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime267.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: `note`,
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime267.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime267.jsx)(Form.Label, { children: t4("fields.note") }),
                      /* @__PURE__ */ (0, import_jsx_runtime267.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime267.jsx)(import_ui177.Textarea, { ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime267.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              )
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime267.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime267.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime267.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime267.jsx)(import_ui177.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime267.jsx)(
                import_ui177.Button,
                {
                  isLoading: isPending,
                  type: "submit",
                  variant: "primary",
                  size: "small",
                  disabled: !!Object.keys(form.formState.errors || {}).length,
                  children: t4("actions.save")
                }
              )
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/orders/order-create-refund/components/create-refund-form/index.ts
var init_create_refund_form2 = __esm({
  "src/routes/orders/order-create-refund/components/create-refund-form/index.ts"() {
    "use strict";
    init_create_refund_form();
  }
});

// src/routes/orders/order-create-refund/order-create-refund.tsx
var import_ui178, import_react_i18next191, import_react_router_dom79, import_jsx_runtime268, OrderCreateRefund;
var init_order_create_refund = __esm({
  "src/routes/orders/order-create-refund/order-create-refund.tsx"() {
    "use strict";
    import_ui178 = require("@medusajs/ui");
    import_react_i18next191 = require("react-i18next");
    import_react_router_dom79 = require("react-router-dom");
    init_modals();
    init_api();
    init_constants7();
    init_create_refund_form2();
    import_jsx_runtime268 = require("react/jsx-runtime");
    OrderCreateRefund = () => {
      const { t: t4 } = (0, import_react_i18next191.useTranslation)();
      const params2 = (0, import_react_router_dom79.useParams)();
      const { order } = useOrder(params2.id, {
        fields: DEFAULT_FIELDS2
      });
      const {
        refund_reasons: refundReasons,
        isLoading: isRefundReasonsLoading,
        isError: isRefundReasonsError,
        error: refundReasonsError
      } = useRefundReasons();
      if (isRefundReasonsError) {
        throw refundReasonsError;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime268.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime268.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime268.jsx)(import_ui178.Heading, { children: t4("orders.payment.createRefund") }) }),
        order && !isRefundReasonsLoading && refundReasons && /* @__PURE__ */ (0, import_jsx_runtime268.jsx)(CreateRefundForm, { order, refundReasons })
      ] });
    };
  }
});

// src/routes/orders/order-create-refund/index.ts
var order_create_refund_exports = {};
__export(order_create_refund_exports, {
  Component: () => OrderCreateRefund
});
var init_order_create_refund2 = __esm({
  "src/routes/orders/order-create-refund/index.ts"() {
    "use strict";
    init_order_create_refund();
  }
});

// src/routes/promotions/promotion-list/loader.ts
var params, promotionsListQuery, promotionsLoader;
var init_loader8 = __esm({
  "src/routes/promotions/promotion-list/loader.ts"() {
    "use strict";
    init_promotions();
    init_client2();
    init_query_client();
    params = {
      limit: 20,
      offset: 0
    };
    promotionsListQuery = () => ({
      queryKey: promotionsQueryKeys.list(params),
      queryFn: async () => sdk.admin.promotion.list(params)
    });
    promotionsLoader = (client) => {
      return async () => {
        const query = promotionsListQuery();
        return queryClient.getQueryData(
          query.queryKey
        ) ?? await client.fetchQuery(query);
      };
    };
  }
});

// src/components/table/table-cells/common/code-cell/code-cell.tsx
var import_ui179, import_jsx_runtime269, CodeCell, CodeHeader;
var init_code_cell = __esm({
  "src/components/table/table-cells/common/code-cell/code-cell.tsx"() {
    "use strict";
    import_ui179 = require("@medusajs/ui");
    import_jsx_runtime269 = require("react/jsx-runtime");
    CodeCell = ({ code }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime269.jsx)("div", { className: "flex h-full w-full items-center gap-x-3 overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime269.jsx)(import_ui179.Badge, { size: "2xsmall", className: "truncate", children: code }) });
    };
    CodeHeader = ({ text }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime269.jsx)("div", { className: " flex h-full w-full items-center ", children: /* @__PURE__ */ (0, import_jsx_runtime269.jsx)("span", { children: text }) });
    };
  }
});

// src/components/table/table-cells/common/code-cell/index.ts
var init_code_cell2 = __esm({
  "src/components/table/table-cells/common/code-cell/index.ts"() {
    "use strict";
    init_code_cell();
  }
});

// src/lib/promotions.ts
var getPromotionStatus;
var init_promotions2 = __esm({
  "src/lib/promotions.ts"() {
    "use strict";
    getPromotionStatus = (promotion) => {
      const date3 = /* @__PURE__ */ new Date();
      const campaign = promotion.campaign;
      if (!campaign) {
        return "ACTIVE" /* ACTIVE */;
      }
      if (new Date(campaign.starts_at) > date3) {
        return "SCHEDULED" /* SCHEDULED */;
      }
      const campaignBudget = campaign.budget;
      const overBudget = campaignBudget && campaignBudget.used > campaignBudget.limit;
      if (campaign.ends_at && new Date(campaign.ends_at) < date3 || overBudget) {
        return "EXPIRED" /* EXPIRED */;
      }
      return "ACTIVE" /* ACTIVE */;
    };
  }
});

// src/components/table/table-cells/promotion/status-cell/status-cell.tsx
var import_react_i18next192, import_jsx_runtime270, StatusCell2;
var init_status_cell3 = __esm({
  "src/components/table/table-cells/promotion/status-cell/status-cell.tsx"() {
    "use strict";
    import_react_i18next192 = require("react-i18next");
    init_promotions2();
    init_status_cell2();
    import_jsx_runtime270 = require("react/jsx-runtime");
    StatusCell2 = ({ promotion }) => {
      const { t: t4 } = (0, import_react_i18next192.useTranslation)();
      const statusMap = {
        ["DISABLED" /* DISABLED */]: ["grey", t4("statuses.disabled")],
        ["ACTIVE" /* ACTIVE */]: ["green", t4("statuses.active")],
        ["SCHEDULED" /* SCHEDULED */]: ["orange", t4("statuses.scheduled")],
        ["EXPIRED" /* EXPIRED */]: ["red", t4("statuses.expired")]
      };
      const [color, text] = statusMap[getPromotionStatus(promotion)];
      return /* @__PURE__ */ (0, import_jsx_runtime270.jsx)(StatusCell, { color, children: text });
    };
  }
});

// src/components/table/table-cells/promotion/status-cell/index.ts
var init_status_cell4 = __esm({
  "src/components/table/table-cells/promotion/status-cell/index.ts"() {
    "use strict";
    init_status_cell3();
  }
});

// src/hooks/table/columns/use-promotion-table-columns.tsx
var import_react_table23, import_react160, import_react_i18next193, import_jsx_runtime271, columnHelper22, usePromotionTableColumns;
var init_use_promotion_table_columns = __esm({
  "src/hooks/table/columns/use-promotion-table-columns.tsx"() {
    "use strict";
    import_react_table23 = require("@tanstack/react-table");
    import_react160 = require("react");
    import_react_i18next193 = require("react-i18next");
    init_code_cell2();
    init_text_cell2();
    init_status_cell4();
    import_jsx_runtime271 = require("react/jsx-runtime");
    columnHelper22 = (0, import_react_table23.createColumnHelper)();
    usePromotionTableColumns = () => {
      const { t: t4 } = (0, import_react_i18next193.useTranslation)();
      return (0, import_react160.useMemo)(
        () => [
          columnHelper22.display({
            id: "code",
            header: () => /* @__PURE__ */ (0, import_jsx_runtime271.jsx)(CodeHeader, { text: t4("fields.code") }),
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime271.jsx)(CodeCell, { code: row.original.code })
          }),
          columnHelper22.display({
            id: "method",
            header: () => /* @__PURE__ */ (0, import_jsx_runtime271.jsx)(TextHeader, { text: t4("promotions.fields.method") }),
            cell: ({ row }) => {
              const text = row.original.is_automatic ? t4("promotions.form.method.automatic.title") : t4("promotions.form.method.code.title");
              return /* @__PURE__ */ (0, import_jsx_runtime271.jsx)(TextCell, { text });
            }
          }),
          columnHelper22.display({
            id: "status",
            header: () => /* @__PURE__ */ (0, import_jsx_runtime271.jsx)(TextHeader, { text: t4("fields.status") }),
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime271.jsx)(StatusCell2, { promotion: row.original })
          })
        ],
        [t4]
      );
    };
  }
});

// src/hooks/table/query/use-promotion-table-query.tsx
var usePromotionTableQuery;
var init_use_promotion_table_query = __esm({
  "src/hooks/table/query/use-promotion-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    usePromotionTableQuery = ({
      prefix,
      pageSize = 20
    }) => {
      const queryObject = useQueryParams(
        ["offset", "q", "created_at", "updated_at"],
        prefix
      );
      const { offset: offset4, q, created_at, updated_at } = queryObject;
      const searchParams = {
        limit: pageSize,
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0,
        offset: offset4 ? Number(offset4) : 0,
        q
      };
      return {
        searchParams,
        raw: queryObject
      };
    };
  }
});

// src/routes/promotions/promotion-list/components/promotion-list-table/promotion-list-table.tsx
var import_icons87, import_ui180, import_react_table24, import_react161, import_react_i18next194, import_react_router_dom80, import_react_query54, import_jsx_runtime272, PAGE_SIZE16, PromotionListTable, PromotionActions, columnHelper23, useColumns8;
var init_promotion_list_table = __esm({
  "src/routes/promotions/promotion-list/components/promotion-list-table/promotion-list-table.tsx"() {
    "use strict";
    import_icons87 = require("@medusajs/icons");
    import_ui180 = require("@medusajs/ui");
    import_react_table24 = require("@tanstack/react-table");
    import_react161 = require("react");
    import_react_i18next194 = require("react-i18next");
    import_react_router_dom80 = require("react-router-dom");
    import_react_query54 = require("@tanstack/react-query");
    init_action_menu2();
    init_data_table2();
    init_promotions();
    init_use_promotion_table_columns();
    init_use_promotion_table_filters();
    init_use_promotion_table_query();
    init_use_data_table();
    import_jsx_runtime272 = require("react/jsx-runtime");
    PAGE_SIZE16 = 20;
    PromotionListTable = () => {
      const { t: t4 } = (0, import_react_i18next194.useTranslation)();
      const initialData = (0, import_react_router_dom80.useLoaderData)();
      const { searchParams, raw } = usePromotionTableQuery({ pageSize: PAGE_SIZE16 });
      const { promotions, count: count3, isLoading, isError, error } = usePromotions(
        { ...searchParams },
        {
          initialData,
          placeholderData: import_react_query54.keepPreviousData
        }
      );
      const filters = usePromotionTableFilters();
      const columns = useColumns8();
      const { table } = useDataTable({
        data: promotions ?? [],
        columns,
        count: count3,
        enablePagination: true,
        pageSize: PAGE_SIZE16,
        getRowId: (row) => row.id
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime272.jsxs)(import_ui180.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime272.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime272.jsx)(import_ui180.Heading, { level: "h2", children: t4("promotions.domain") }),
          /* @__PURE__ */ (0, import_jsx_runtime272.jsx)(import_ui180.Button, { size: "small", variant: "secondary", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime272.jsx)(import_react_router_dom80.Link, { to: "create", children: t4("actions.create") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime272.jsx)(
          DataTable,
          {
            table,
            columns,
            count: count3,
            pageSize: PAGE_SIZE16,
            filters,
            search: true,
            pagination: true,
            isLoading,
            queryObject: raw,
            navigateTo: (row) => `${row.original.id}`,
            orderBy: [
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ]
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime272.jsx)(import_react_router_dom80.Outlet, {})
      ] });
    };
    PromotionActions = ({ promotion }) => {
      const { t: t4 } = (0, import_react_i18next194.useTranslation)();
      const prompt = (0, import_ui180.usePrompt)();
      const navigate = (0, import_react_router_dom80.useNavigate)();
      const { mutateAsync } = useDeletePromotion(promotion.id);
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("promotions.deleteWarning", { code: promotion.code }),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel"),
          verificationInstruction: t4("general.typeToConfirm"),
          verificationText: promotion.code
        });
        if (!res) {
          return;
        }
        try {
          await mutateAsync(void 0, {
            onSuccess: () => {
              navigate("/promotions", { replace: true });
            }
          });
        } catch {
          throw new Error(
            `Promotion with code ${promotion.code} could not be deleted`
          );
        }
      };
      return /* @__PURE__ */ (0, import_jsx_runtime272.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime272.jsx)(import_icons87.PencilSquare, {}),
                  label: t4("actions.edit"),
                  to: `/promotions/${promotion.id}/edit`
                },
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime272.jsx)(import_icons87.Trash, {}),
                  label: t4("actions.delete"),
                  onClick: handleDelete
                }
              ]
            }
          ]
        }
      );
    };
    columnHelper23 = (0, import_react_table24.createColumnHelper)();
    useColumns8 = () => {
      const base = usePromotionTableColumns();
      return (0, import_react161.useMemo)(
        () => [
          ...base,
          columnHelper23.display({
            id: "actions",
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime272.jsx)(PromotionActions, { promotion: row.original });
            }
          })
        ],
        [base]
      );
    };
  }
});

// src/routes/promotions/promotion-list/components/promotion-list-table/index.ts
var init_promotion_list_table2 = __esm({
  "src/routes/promotions/promotion-list/components/promotion-list-table/index.ts"() {
    "use strict";
    init_promotion_list_table();
  }
});

// src/routes/promotions/promotion-list/promotions-list.tsx
var import_jsx_runtime273, PromotionsList;
var init_promotions_list = __esm({
  "src/routes/promotions/promotion-list/promotions-list.tsx"() {
    "use strict";
    init_pages();
    init_extensions();
    init_promotion_list_table2();
    import_jsx_runtime273 = require("react/jsx-runtime");
    PromotionsList = () => {
      const { getWidgets } = useDashboardExtension();
      return /* @__PURE__ */ (0, import_jsx_runtime273.jsx)(
        SingleColumnPage,
        {
          widgets: {
            before: getWidgets("promotion.list.before"),
            after: getWidgets("promotion.list.after")
          },
          children: /* @__PURE__ */ (0, import_jsx_runtime273.jsx)(PromotionListTable, {})
        }
      );
    };
  }
});

// src/routes/promotions/promotion-list/index.ts
var promotion_list_exports = {};
__export(promotion_list_exports, {
  Component: () => PromotionsList,
  promotionsLoader: () => promotionsLoader
});
var init_promotion_list = __esm({
  "src/routes/promotions/promotion-list/index.ts"() {
    "use strict";
    init_loader8();
    init_promotions_list();
  }
});

// src/components/inputs/percentage-input/percentage-input.tsx
var import_ui181, import_react162, import_react_currency_input_field2, import_jsx_runtime274, DeprecatedPercentageInput, PercentageInput;
var init_percentage_input = __esm({
  "src/components/inputs/percentage-input/percentage-input.tsx"() {
    "use strict";
    import_ui181 = require("@medusajs/ui");
    import_react162 = require("react");
    import_react_currency_input_field2 = __toESM(require("react-currency-input-field"));
    import_jsx_runtime274 = require("react/jsx-runtime");
    DeprecatedPercentageInput = (0, import_react162.forwardRef)(({ min: min2 = 0, max: max2 = 100, step = 1e-4, ...props }, ref) => {
      return /* @__PURE__ */ (0, import_jsx_runtime274.jsxs)("div", { className: "relative", children: [
        /* @__PURE__ */ (0, import_jsx_runtime274.jsx)("div", { className: "absolute inset-y-0 left-0 z-10 flex w-8 items-center justify-center border-r", children: /* @__PURE__ */ (0, import_jsx_runtime274.jsx)(
          import_ui181.Text,
          {
            className: "text-ui-fg-muted",
            size: "small",
            leading: "compact",
            weight: "plus",
            children: "%"
          }
        ) }),
        /* @__PURE__ */ (0, import_jsx_runtime274.jsx)(
          import_ui181.Input,
          {
            ref,
            type: "number",
            min: min2,
            max: max2,
            step,
            ...props,
            className: "pl-10"
          }
        )
      ] });
    });
    DeprecatedPercentageInput.displayName = "PercentageInput";
    PercentageInput = (0, import_react162.forwardRef)(({ min: min2 = 0, decimalScale = 2, className, ...props }, ref) => {
      return /* @__PURE__ */ (0, import_jsx_runtime274.jsxs)("div", { className: "relative", children: [
        /* @__PURE__ */ (0, import_jsx_runtime274.jsx)(
          import_react_currency_input_field2.default,
          {
            ref,
            min: min2,
            autoComplete: "off",
            decimalScale,
            decimalsLimit: decimalScale,
            ...props,
            className: (0, import_ui181.clx)(
              "caret-ui-fg-base bg-ui-bg-field shadow-buttons-neutral transition-fg txt-compact-small flex w-full select-none appearance-none items-center justify-between rounded-md px-2 py-1.5 pr-10 text-right outline-none",
              "placeholder:text-ui-fg-muted text-ui-fg-base",
              "hover:bg-ui-bg-field-hover",
              "focus-visible:shadow-borders-interactive-with-active data-[state=open]:!shadow-borders-interactive-with-active",
              "aria-[invalid=true]:border-ui-border-error aria-[invalid=true]:shadow-borders-error",
              "invalid::border-ui-border-error invalid:shadow-borders-error",
              "disabled:!bg-ui-bg-disabled disabled:!text-ui-fg-disabled",
              className
            )
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime274.jsx)("div", { className: "absolute inset-y-0 right-0 z-10 flex w-8 items-center justify-center border-l", children: /* @__PURE__ */ (0, import_jsx_runtime274.jsx)(
          import_ui181.Text,
          {
            className: "text-ui-fg-muted",
            size: "small",
            leading: "compact",
            weight: "plus",
            children: "%"
          }
        ) })
      ] });
    });
    PercentageInput.displayName = "PercentageInput";
  }
});

// src/components/inputs/percentage-input/index.ts
var init_percentage_input2 = __esm({
  "src/components/inputs/percentage-input/index.ts"() {
    "use strict";
    init_percentage_input();
  }
});

// src/routes/campaigns/common/constants.ts
var DEFAULT_CAMPAIGN_VALUES;
var init_constants12 = __esm({
  "src/routes/campaigns/common/constants.ts"() {
    "use strict";
    DEFAULT_CAMPAIGN_VALUES = {
      name: "",
      description: "",
      campaign_identifier: "",
      starts_at: null,
      ends_at: null,
      budget: {
        type: "usage",
        currency_code: null,
        limit: null
      }
    };
  }
});

// src/routes/promotions/common/edit-rules/components/edit-rules-form/utils.ts
var generateRuleAttributes;
var init_utils9 = __esm({
  "src/routes/promotions/common/edit-rules/components/edit-rules-form/utils.ts"() {
    "use strict";
    generateRuleAttributes = (rules) => (rules || []).map((rule) => ({
      id: rule.id,
      required: rule.required,
      field_type: rule.field_type,
      disguised: rule.disguised,
      attribute: rule.attribute,
      operator: rule.operator,
      values: rule.field_type === "number" || rule.operator === "eq" ? typeof rule.values === "object" ? rule.values[0]?.value : rule.values : rule?.values?.map((v) => v.value)
    }));
  }
});

// src/routes/promotions/common/edit-rules/components/rule-value-form-field/rule-value-form-field.tsx
var import_ui182, import_react_hook_form45, import_jsx_runtime275, buildFilters, RuleValueFormField;
var init_rule_value_form_field = __esm({
  "src/routes/promotions/common/edit-rules/components/rule-value-form-field/rule-value-form-field.tsx"() {
    "use strict";
    import_ui182 = require("@medusajs/ui");
    import_react_hook_form45 = require("react-hook-form");
    init_form2();
    init_combobox2();
    init_promotions();
    init_store();
    import_jsx_runtime275 = require("react/jsx-runtime");
    buildFilters = (attribute, store) => {
      if (!attribute || !store) {
        return {};
      }
      if (attribute === "currency_code") {
        return {
          value: store.supported_currencies?.map((c) => c.currency_code)
        };
      }
      return {};
    };
    RuleValueFormField = ({
      form,
      identifier,
      scope,
      valuesField,
      operatorsField,
      valuesRef,
      fieldRule,
      attributes,
      ruleType
    }) => {
      const attribute = attributes?.find(
        (attr) => attr.value === fieldRule.attribute
      );
      const { store, isLoading: isStoreLoading } = useStore();
      const { values: options = [] } = usePromotionRuleValues(
        ruleType,
        attribute?.id,
        buildFilters(attribute?.id, store),
        {
          enabled: !!attribute?.id && ["select", "multiselect"].includes(attribute.field_type) && !isStoreLoading
        }
      );
      const watchOperator = (0, import_react_hook_form45.useWatch)({
        control: form.control,
        name: operatorsField.name
      });
      return /* @__PURE__ */ (0, import_jsx_runtime275.jsx)(
        Form.Field,
        {
          ...valuesField,
          render: ({ field: { onChange, ref, ...field } }) => {
            if (attribute?.field_type === "number") {
              return /* @__PURE__ */ (0, import_jsx_runtime275.jsxs)(Form.Item, { className: "basis-1/2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime275.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime275.jsx)(
                  import_ui182.Input,
                  {
                    ...field,
                    type: "number",
                    onChange,
                    className: "bg-ui-bg-base",
                    ref: valuesRef,
                    min: 1,
                    disabled: !fieldRule.attribute
                  }
                ) }),
                /* @__PURE__ */ (0, import_jsx_runtime275.jsx)(Form.ErrorMessage, {})
              ] });
            } else if (attribute?.field_type === "text") {
              return /* @__PURE__ */ (0, import_jsx_runtime275.jsxs)(Form.Item, { className: "basis-1/2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime275.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime275.jsx)(
                  import_ui182.Input,
                  {
                    ...field,
                    onChange,
                    className: "bg-ui-bg-base",
                    disabled: !fieldRule.attribute
                  }
                ) }),
                /* @__PURE__ */ (0, import_jsx_runtime275.jsx)(Form.ErrorMessage, {})
              ] });
            } else if (watchOperator === "eq") {
              return /* @__PURE__ */ (0, import_jsx_runtime275.jsxs)(Form.Item, { className: "basis-1/2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime275.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime275.jsxs)(
                  import_ui182.Select,
                  {
                    ...field,
                    value: Array.isArray(field.value) ? field.value[0] : field.value,
                    onValueChange: onChange,
                    disabled: !fieldRule.attribute,
                    children: [
                      /* @__PURE__ */ (0, import_jsx_runtime275.jsx)(import_ui182.Select.Trigger, { ref, className: "bg-ui-bg-base", children: /* @__PURE__ */ (0, import_jsx_runtime275.jsx)(import_ui182.Select.Value, { placeholder: "Select Value" }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime275.jsx)(import_ui182.Select.Content, { children: options?.map((option, i) => /* @__PURE__ */ (0, import_jsx_runtime275.jsx)(
                        import_ui182.Select.Item,
                        {
                          value: option.value,
                          children: /* @__PURE__ */ (0, import_jsx_runtime275.jsx)("span", { className: "text-ui-fg-subtle", children: option.label })
                        },
                        `${identifier}-value-option-${i}`
                      )) })
                    ]
                  }
                ) }),
                /* @__PURE__ */ (0, import_jsx_runtime275.jsx)(Form.ErrorMessage, {})
              ] });
            } else {
              return /* @__PURE__ */ (0, import_jsx_runtime275.jsxs)(Form.Item, { className: "basis-1/2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime275.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime275.jsx)(
                  Combobox,
                  {
                    ...field,
                    placeholder: "Select Values",
                    options,
                    onChange,
                    className: "bg-ui-bg-base",
                    disabled: !fieldRule.attribute
                  }
                ) }),
                /* @__PURE__ */ (0, import_jsx_runtime275.jsx)(Form.ErrorMessage, {})
              ] });
            }
          }
        },
        `${identifier}.${scope}.${valuesField.name}-${fieldRule.attribute}`
      );
    };
  }
});

// src/routes/promotions/common/edit-rules/components/rule-value-form-field/index.ts
var init_rule_value_form_field2 = __esm({
  "src/routes/promotions/common/edit-rules/components/rule-value-form-field/index.ts"() {
    "use strict";
    init_rule_value_form_field();
  }
});

// src/routes/promotions/common/edit-rules/components/rules-form-field/constants.ts
var requiredProductRule;
var init_constants13 = __esm({
  "src/routes/promotions/common/edit-rules/components/rules-form-field/constants.ts"() {
    "use strict";
    requiredProductRule = {
      id: "product",
      attribute: "items.product.id",
      attribute_label: "Product",
      operator: "eq",
      operator_label: "Equal",
      values: [],
      required: true,
      field_type: "select",
      disguised: false
    };
  }
});

// src/routes/promotions/common/edit-rules/components/rules-form-field/rules-form-field.tsx
var import_icons88, import_ui183, import_react163, import_react_hook_form46, import_react_i18next195, import_jsx_runtime276, RulesFormField;
var init_rules_form_field = __esm({
  "src/routes/promotions/common/edit-rules/components/rules-form-field/rules-form-field.tsx"() {
    "use strict";
    import_icons88 = require("@medusajs/icons");
    import_ui183 = require("@medusajs/ui");
    import_react163 = require("react");
    import_react_hook_form46 = require("react-hook-form");
    import_react_i18next195 = require("react-i18next");
    init_form2();
    init_promotions();
    init_utils9();
    init_rule_value_form_field2();
    init_constants13();
    import_jsx_runtime276 = require("react/jsx-runtime");
    RulesFormField = ({
      form,
      ruleType,
      setRulesToRemove,
      rulesToRemove,
      scope = "rules",
      promotion
    }) => {
      const { t: t4 } = (0, import_react_i18next195.useTranslation)();
      const formData = form.getValues();
      const { attributes } = usePromotionRuleAttributes(ruleType, formData.type);
      const { fields, append, remove, update, replace } = (0, import_react_hook_form46.useFieldArray)({
        control: form.control,
        name: scope,
        keyName: scope
      });
      const promotionType = (0, import_react_hook_form46.useWatch)({
        control: form.control,
        name: "type",
        defaultValue: promotion?.type
      });
      const applicationMethodType = (0, import_react_hook_form46.useWatch)({
        control: form.control,
        name: "application_method.type",
        defaultValue: promotion?.application_method?.type
      });
      const query = promotionType ? {
        promotion_type: promotionType,
        application_method_type: applicationMethodType
      } : {};
      const { rules, isLoading } = usePromotionRules(
        promotion?.id || null,
        ruleType,
        query,
        {
          enabled: !!promotion?.id || !!promotionType && !!applicationMethodType
        }
      );
      (0, import_react163.useEffect)(() => {
        if (isLoading) {
          return;
        }
        if (ruleType === "rules" && !fields.length) {
          form.resetField("rules");
          replace(generateRuleAttributes(rules));
        }
        if (ruleType === "buy-rules" && !fields.length) {
          form.resetField("application_method.buy_rules");
          const rulesToAppend = promotion?.id || promotionType === "standard" ? rules : [...rules, requiredProductRule];
          replace(generateRuleAttributes(rulesToAppend));
        }
        if (ruleType === "target-rules" && !fields.length) {
          form.resetField("application_method.target_rules");
          const rulesToAppend = promotion?.id || promotionType === "standard" ? rules : [...rules, requiredProductRule];
          replace(generateRuleAttributes(rulesToAppend));
        }
      }, [promotionType, isLoading]);
      return /* @__PURE__ */ (0, import_jsx_runtime276.jsxs)("div", { className: "flex flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime276.jsx)(import_ui183.Heading, { level: "h2", className: "mb-2", children: t4(`promotions.fields.conditions.${ruleType}.title`) }),
        /* @__PURE__ */ (0, import_jsx_runtime276.jsx)(import_ui183.Text, { className: "text-ui-fg-subtle txt-small mb-6", children: t4(`promotions.fields.conditions.${ruleType}.description`) }),
        fields.map((fieldRule, index2) => {
          const identifier = fieldRule.id;
          const { ref: attributeRef, ...attributeField } = form.register(
            `${scope}.${index2}.attribute`
          );
          const { ref: operatorRef, ...operatorsField } = form.register(
            `${scope}.${index2}.operator`
          );
          const { ref: valuesRef, ...valuesField } = form.register(
            `${scope}.${index2}.values`
          );
          return /* @__PURE__ */ (0, import_jsx_runtime276.jsxs)(import_react163.Fragment, { children: [
            /* @__PURE__ */ (0, import_jsx_runtime276.jsxs)("div", { className: "bg-ui-bg-subtle border-ui-border-base flex flex-row gap-2 rounded-xl border px-2 py-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime276.jsxs)("div", { className: "grow", children: [
                /* @__PURE__ */ (0, import_jsx_runtime276.jsx)(
                  Form.Field,
                  {
                    ...attributeField,
                    render: ({ field: { onChange, ref, ...field } }) => {
                      const existingAttributes = fields?.map((field2) => field2.attribute) || [];
                      const attributeOptions = attributes?.filter((attr) => {
                        if (attr.value === fieldRule.attribute) {
                          return true;
                        }
                        return !existingAttributes.includes(attr.value);
                      }) || [];
                      return /* @__PURE__ */ (0, import_jsx_runtime276.jsxs)(Form.Item, { className: "mb-2", children: [
                        fieldRule.required && /* @__PURE__ */ (0, import_jsx_runtime276.jsx)("p", { className: "text text-ui-fg-muted txt-small", children: t4("promotions.form.required") }),
                        /* @__PURE__ */ (0, import_jsx_runtime276.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime276.jsxs)(
                          import_ui183.Select,
                          {
                            ...field,
                            onValueChange: (e) => {
                              const currentAttributeOption = attributeOptions.find((ao) => ao.id === e);
                              update(index2, {
                                ...fieldRule,
                                values: [],
                                disguised: currentAttributeOption?.disguised || false
                              });
                              onChange(e);
                            },
                            disabled: fieldRule.required,
                            children: [
                              /* @__PURE__ */ (0, import_jsx_runtime276.jsx)(
                                import_ui183.Select.Trigger,
                                {
                                  ref: attributeRef,
                                  className: "bg-ui-bg-base",
                                  children: /* @__PURE__ */ (0, import_jsx_runtime276.jsx)(
                                    import_ui183.Select.Value,
                                    {
                                      placeholder: t4(
                                        "promotions.form.selectAttribute"
                                      )
                                    }
                                  )
                                }
                              ),
                              /* @__PURE__ */ (0, import_jsx_runtime276.jsx)(import_ui183.Select.Content, { children: attributeOptions?.map((c, i) => /* @__PURE__ */ (0, import_jsx_runtime276.jsx)(
                                import_ui183.Select.Item,
                                {
                                  value: c.value,
                                  children: /* @__PURE__ */ (0, import_jsx_runtime276.jsx)("span", { className: "text-ui-fg-subtle", children: c.label })
                                },
                                `${identifier}-attribute-option-${i}`
                              )) })
                            ]
                          }
                        ) }),
                        /* @__PURE__ */ (0, import_jsx_runtime276.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  },
                  `${identifier}.${scope}.${attributeField.name}`
                ),
                /* @__PURE__ */ (0, import_jsx_runtime276.jsxs)("div", { className: "flex gap-2", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime276.jsx)(
                    Form.Field,
                    {
                      ...operatorsField,
                      render: ({ field: { onChange, ref, ...field } }) => {
                        const currentAttributeOption = attributes.find(
                          (attr) => attr.value === fieldRule.attribute
                        );
                        return /* @__PURE__ */ (0, import_jsx_runtime276.jsxs)(Form.Item, { className: "basis-1/2", children: [
                          /* @__PURE__ */ (0, import_jsx_runtime276.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime276.jsxs)(
                            import_ui183.Select,
                            {
                              ...field,
                              disabled: !fieldRule.attribute,
                              onValueChange: onChange,
                              children: [
                                /* @__PURE__ */ (0, import_jsx_runtime276.jsx)(
                                  import_ui183.Select.Trigger,
                                  {
                                    ref: operatorRef,
                                    className: "bg-ui-bg-base",
                                    children: /* @__PURE__ */ (0, import_jsx_runtime276.jsx)(import_ui183.Select.Value, { placeholder: "Select Operator" })
                                  }
                                ),
                                /* @__PURE__ */ (0, import_jsx_runtime276.jsx)(import_ui183.Select.Content, { children: currentAttributeOption?.operators?.map(
                                  (c, i) => /* @__PURE__ */ (0, import_jsx_runtime276.jsx)(
                                    import_ui183.Select.Item,
                                    {
                                      value: c.value,
                                      children: /* @__PURE__ */ (0, import_jsx_runtime276.jsx)("span", { className: "text-ui-fg-subtle", children: c.label })
                                    },
                                    `${identifier}-operator-option-${i}`
                                  )
                                ) })
                              ]
                            }
                          ) }),
                          /* @__PURE__ */ (0, import_jsx_runtime276.jsx)(Form.ErrorMessage, {})
                        ] });
                      }
                    },
                    `${identifier}.${scope}.${operatorsField.name}`
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime276.jsx)(
                    RuleValueFormField,
                    {
                      form,
                      identifier,
                      scope,
                      valuesField,
                      operatorsField,
                      valuesRef,
                      fieldRule,
                      attributes,
                      ruleType
                    }
                  )
                ] })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime276.jsx)("div", { className: "flex-none self-center px-1", children: /* @__PURE__ */ (0, import_jsx_runtime276.jsx)(
                import_icons88.XMarkMini,
                {
                  className: `text-ui-fg-muted cursor-pointer ${fieldRule.required ? "invisible" : "visible"}`,
                  onClick: () => {
                    if (!fieldRule.required) {
                      setRulesToRemove && setRulesToRemove([...rulesToRemove, fieldRule]);
                      remove(index2);
                    }
                  }
                }
              ) })
            ] }),
            index2 < fields.length - 1 && /* @__PURE__ */ (0, import_jsx_runtime276.jsxs)("div", { className: "relative px-6 py-3", children: [
              /* @__PURE__ */ (0, import_jsx_runtime276.jsx)("div", { className: "border-ui-border-strong absolute bottom-0 left-[40px] top-0 z-[-1] w-px bg-[linear-gradient(var(--border-strong)_33%,rgba(255,255,255,0)_0%)] bg-[length:1px_3px] bg-repeat-y" }),
              /* @__PURE__ */ (0, import_jsx_runtime276.jsx)(import_ui183.Badge, { size: "2xsmall", className: " text-xs", children: t4("promotions.form.and") })
            ] })
          ] }, `${fieldRule.id}.${index2}.${fieldRule.attribute}`);
        }),
        /* @__PURE__ */ (0, import_jsx_runtime276.jsxs)("div", { className: !!fields.length ? "mt-6" : "", children: [
          /* @__PURE__ */ (0, import_jsx_runtime276.jsx)(
            import_ui183.Button,
            {
              type: "button",
              variant: "secondary",
              className: "inline-block",
              onClick: () => {
                append({
                  attribute: "",
                  operator: "",
                  values: [],
                  required: false
                });
              },
              children: t4("promotions.fields.addCondition")
            }
          ),
          !!fields.length && /* @__PURE__ */ (0, import_jsx_runtime276.jsx)(
            import_ui183.Button,
            {
              type: "button",
              variant: "transparent",
              className: "text-ui-fg-muted hover:text-ui-fg-subtle ml-2 inline-block",
              onClick: () => {
                const indicesToRemove = fields.map((field, index2) => field.required ? null : index2).filter((f) => f !== null);
                setRulesToRemove && setRulesToRemove(fields.filter((field) => !field.required));
                remove(indicesToRemove);
              },
              children: t4("promotions.fields.clearAll")
            }
          )
        ] })
      ] });
    };
  }
});

// src/routes/promotions/common/edit-rules/components/rules-form-field/index.ts
var init_rules_form_field2 = __esm({
  "src/routes/promotions/common/edit-rules/components/rules-form-field/index.ts"() {
    "use strict";
    init_rules_form_field();
  }
});

// src/routes/campaigns/common/components/create-campaign-form-fields/create-campaign-form-fields.tsx
var import_ui184, import_react164, import_react_hook_form47, import_react_i18next196, import_jsx_runtime277, CreateCampaignFormFields;
var init_create_campaign_form_fields = __esm({
  "src/routes/campaigns/common/components/create-campaign-form-fields/create-campaign-form-fields.tsx"() {
    "use strict";
    import_ui184 = require("@medusajs/ui");
    import_react164 = require("react");
    import_react_hook_form47 = require("react-hook-form");
    import_react_i18next196 = require("react-i18next");
    init_form2();
    init_store();
    init_currencies2();
    import_jsx_runtime277 = require("react/jsx-runtime");
    CreateCampaignFormFields = ({ form, fieldScope = "" }) => {
      const { t: t4 } = (0, import_react_i18next196.useTranslation)();
      const { store } = useStore();
      const watchValueType = (0, import_react_hook_form47.useWatch)({
        control: form.control,
        name: `${fieldScope}budget.type`
      });
      const isTypeSpend = watchValueType === "spend";
      const currencyValue = (0, import_react_hook_form47.useWatch)({
        control: form.control,
        name: `${fieldScope}budget.currency_code`
      });
      const promotionCurrencyValue = (0, import_react_hook_form47.useWatch)({
        control: form.control,
        name: `application_method.currency_code`
      });
      const currency = currencyValue || promotionCurrencyValue;
      (0, import_react164.useEffect)(() => {
        form.setValue(`${fieldScope}budget.limit`, null);
        if (isTypeSpend) {
          form.setValue(`campaign.budget.currency_code`, promotionCurrencyValue);
        }
        if (watchValueType === "usage") {
          form.setValue(`campaign.budget.currency_code`, null);
        }
      }, [watchValueType]);
      if (promotionCurrencyValue) {
        const formCampaignBudget = form.getValues().campaign?.budget;
        const formCampaignCurrency = formCampaignBudget?.currency_code;
        if (formCampaignBudget?.type === "spend" && formCampaignCurrency !== promotionCurrencyValue) {
          form.setValue("campaign.budget.currency_code", promotionCurrencyValue);
        }
      }
      return /* @__PURE__ */ (0, import_jsx_runtime277.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8", children: [
        /* @__PURE__ */ (0, import_jsx_runtime277.jsxs)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(import_ui184.Heading, { children: t4("campaigns.create.header") }),
          /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(import_ui184.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("campaigns.create.hint") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime277.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime277.jsxs)("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(
              Form.Field,
              {
                control: form.control,
                name: `${fieldScope}name`,
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime277.jsxs)(Form.Item, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(Form.Label, { children: t4("fields.name") }),
                    /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(import_ui184.Input, { ...field }) }),
                    /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(
              Form.Field,
              {
                control: form.control,
                name: `${fieldScope}campaign_identifier`,
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime277.jsxs)(Form.Item, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(Form.Label, { children: t4("campaigns.fields.identifier") }),
                    /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(import_ui184.Input, { ...field }) }),
                    /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              }
            )
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(
            Form.Field,
            {
              control: form.control,
              name: `${fieldScope}description`,
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime277.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(Form.Label, { optional: true, children: t4("fields.description") }),
                  /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(import_ui184.Textarea, { ...field }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime277.jsxs)("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(
            Form.Field,
            {
              control: form.control,
              name: `${fieldScope}starts_at`,
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime277.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(Form.Label, { optional: true, children: t4("campaigns.fields.start_date") }),
                  /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(
                    import_ui184.DatePicker,
                    {
                      granularity: "minute",
                      shouldCloseOnSelect: false,
                      ...field
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(
            Form.Field,
            {
              control: form.control,
              name: `${fieldScope}ends_at`,
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime277.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(Form.Label, { optional: true, children: t4("campaigns.fields.end_date") }),
                  /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(
                    import_ui184.DatePicker,
                    {
                      granularity: "minute",
                      shouldCloseOnSelect: false,
                      ...field
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime277.jsxs)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(import_ui184.Heading, { children: t4("campaigns.budget.create.header") }),
          /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(import_ui184.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("campaigns.budget.create.hint") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(
          Form.Field,
          {
            control: form.control,
            name: `${fieldScope}budget.type`,
            render: ({ field }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime277.jsxs)(Form.Item, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(
                  Form.Label,
                  {
                    tooltip: fieldScope?.length && !currency ? t4("promotions.tooltips.campaignType") : void 0,
                    children: t4("campaigns.budget.fields.type")
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime277.jsxs)(
                  import_ui184.RadioGroup,
                  {
                    className: "flex gap-y-3",
                    ...field,
                    onValueChange: field.onChange,
                    children: [
                      /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(
                        import_ui184.RadioGroup.ChoiceBox,
                        {
                          value: "usage",
                          label: t4("campaigns.budget.type.usage.title"),
                          description: t4("campaigns.budget.type.usage.description")
                        }
                      ),
                      /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(
                        import_ui184.RadioGroup.ChoiceBox,
                        {
                          value: "spend",
                          label: t4("campaigns.budget.type.spend.title"),
                          description: t4("campaigns.budget.type.spend.description"),
                          disabled: fieldScope?.length ? !currency : false
                        }
                      )
                    ]
                  }
                ) }),
                /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(Form.ErrorMessage, {})
              ] });
            }
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime277.jsxs)("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2", children: [
          isTypeSpend && /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(
            Form.Field,
            {
              control: form.control,
              name: `${fieldScope}budget.currency_code`,
              render: ({ field: { onChange, ref, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime277.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(
                    Form.Label,
                    {
                      tooltip: fieldScope?.length && !currency ? t4("promotions.campaign_currency.tooltip") : void 0,
                      children: t4("fields.currency")
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime277.jsxs)(
                    import_ui184.Select,
                    {
                      ...field,
                      onValueChange: onChange,
                      disabled: !!fieldScope.length,
                      children: [
                        /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(import_ui184.Select.Trigger, { ref, children: /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(import_ui184.Select.Value, {}) }),
                        /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(import_ui184.Select.Content, { children: Object.values(currencies).filter(
                          (currency2) => !!store?.supported_currencies?.find(
                            (c) => c.currency_code === currency2.code.toLocaleLowerCase()
                          )
                        ).map((currency2) => /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(
                          import_ui184.Select.Item,
                          {
                            value: currency2.code.toLowerCase(),
                            children: currency2.name
                          },
                          currency2.code
                        )) })
                      ]
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(
            Form.Field,
            {
              control: form.control,
              name: `${fieldScope}budget.limit`,
              render: ({ field: { onChange, value, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime277.jsxs)(Form.Item, { className: "basis-1/2", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(
                    Form.Label,
                    {
                      tooltip: !currency && isTypeSpend ? t4("promotions.fields.amount.tooltip") : void 0,
                      children: t4("campaigns.budget.fields.limit")
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(Form.Control, { children: isTypeSpend ? /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(
                    import_ui184.CurrencyInput,
                    {
                      min: 0,
                      onValueChange: (value2) => onChange(value2 ? parseInt(value2) : ""),
                      code: currencyValue,
                      symbol: currencyValue ? getCurrencySymbol(currencyValue) : "",
                      ...field,
                      value,
                      disabled: !currency && isTypeSpend
                    }
                  ) : /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(
                    import_ui184.Input,
                    {
                      type: "number",
                      ...field,
                      min: 0,
                      value,
                      onChange: (e) => {
                        onChange(
                          e.target.value === "" ? null : parseInt(e.target.value)
                        );
                      }
                    },
                    "usage"
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime277.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          )
        ] })
      ] });
    };
  }
});

// src/routes/campaigns/common/components/create-campaign-form-fields/index.ts
var init_create_campaign_form_fields2 = __esm({
  "src/routes/campaigns/common/components/create-campaign-form-fields/index.ts"() {
    "use strict";
    init_create_campaign_form_fields();
  }
});

// src/routes/promotions/promotion-add-campaign/components/add-campaign-promotion-form/campaign-details.tsx
var import_ui185, import_react165, import_react_i18next197, import_jsx_runtime278, CampaignDetails;
var init_campaign_details = __esm({
  "src/routes/promotions/promotion-add-campaign/components/add-campaign-promotion-form/campaign-details.tsx"() {
    "use strict";
    import_ui185 = require("@medusajs/ui");
    import_react165 = require("react");
    import_react_i18next197 = require("react-i18next");
    import_jsx_runtime278 = require("react/jsx-runtime");
    CampaignDetails = ({ campaign }) => {
      const { t: t4 } = (0, import_react_i18next197.useTranslation)();
      if (!campaign) {
        return;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime278.jsxs)(import_react165.Fragment, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime278.jsxs)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_runtime278.jsx)(import_ui185.Heading, { level: "h2", className: "mb-4", children: t4("campaigns.details") }),
          /* @__PURE__ */ (0, import_jsx_runtime278.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center py-1", children: [
            /* @__PURE__ */ (0, import_jsx_runtime278.jsx)(import_ui185.Text, { className: "txt-small-plus font-", children: t4("campaigns.fields.identifier") }),
            /* @__PURE__ */ (0, import_jsx_runtime278.jsx)("div", { className: "flex items-center gap-1", children: /* @__PURE__ */ (0, import_jsx_runtime278.jsx)(import_ui185.Text, { className: "txt-small", children: campaign.campaign_identifier || "-" }) })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime278.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center py-1", children: [
            /* @__PURE__ */ (0, import_jsx_runtime278.jsx)(import_ui185.Text, { className: "txt-small-plus", children: t4("fields.description") }),
            /* @__PURE__ */ (0, import_jsx_runtime278.jsx)("div", { className: "flex items-center gap-1", children: /* @__PURE__ */ (0, import_jsx_runtime278.jsx)(import_ui185.Text, { className: "txt-small", children: campaign.description || "-" }) })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime278.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center py-1", children: [
            /* @__PURE__ */ (0, import_jsx_runtime278.jsx)(import_ui185.Text, { className: "txt-small-plus", children: t4("campaigns.fields.start_date") }),
            /* @__PURE__ */ (0, import_jsx_runtime278.jsx)("div", { className: "flex items-center gap-1", children: /* @__PURE__ */ (0, import_jsx_runtime278.jsx)(import_ui185.Text, { className: "txt-small", children: campaign.starts_at?.toString() || "-" }) })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime278.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center py-1", children: [
            /* @__PURE__ */ (0, import_jsx_runtime278.jsx)(import_ui185.Text, { className: "txt-small-plus", children: t4("campaigns.fields.end_date") }),
            /* @__PURE__ */ (0, import_jsx_runtime278.jsx)("div", { className: "flex items-center gap-1", children: /* @__PURE__ */ (0, import_jsx_runtime278.jsx)(import_ui185.Text, { className: "txt-small", children: campaign.ends_at?.toString() || "-" }) })
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime278.jsxs)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_runtime278.jsx)(import_ui185.Heading, { level: "h2", className: "mb-4", children: t4("campaigns.budget.details") }),
          /* @__PURE__ */ (0, import_jsx_runtime278.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center py-1", children: [
            /* @__PURE__ */ (0, import_jsx_runtime278.jsx)(import_ui185.Text, { className: "txt-small-plus font-", children: t4("campaigns.budget.fields.type") }),
            /* @__PURE__ */ (0, import_jsx_runtime278.jsx)("div", { className: "flex items-center gap-1", children: /* @__PURE__ */ (0, import_jsx_runtime278.jsx)(import_ui185.Text, { className: "txt-small", children: campaign.budget?.type || "-" }) })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime278.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center py-1", children: [
            /* @__PURE__ */ (0, import_jsx_runtime278.jsx)(import_ui185.Text, { className: "txt-small-plus", children: t4("campaigns.budget.fields.currency") }),
            /* @__PURE__ */ (0, import_jsx_runtime278.jsx)("div", { className: "flex items-center gap-1", children: /* @__PURE__ */ (0, import_jsx_runtime278.jsx)(import_ui185.Text, { className: "txt-small", children: campaign?.budget?.currency_code || "-" }) })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime278.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center py-1", children: [
            /* @__PURE__ */ (0, import_jsx_runtime278.jsx)(import_ui185.Text, { className: "txt-small-plus", children: t4("campaigns.budget.fields.limit") }),
            /* @__PURE__ */ (0, import_jsx_runtime278.jsx)("div", { className: "flex items-center gap-1", children: /* @__PURE__ */ (0, import_jsx_runtime278.jsx)(import_ui185.Text, { className: "txt-small", children: campaign.budget?.limit || "-" }) })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime278.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center py-1", children: [
            /* @__PURE__ */ (0, import_jsx_runtime278.jsx)(import_ui185.Text, { className: "txt-small-plus", children: t4("campaigns.budget.fields.used") }),
            /* @__PURE__ */ (0, import_jsx_runtime278.jsx)("div", { className: "flex items-center gap-1", children: /* @__PURE__ */ (0, import_jsx_runtime278.jsx)(import_ui185.Text, { className: "txt-small", children: campaign.budget?.used || "-" }) })
          ] })
        ] })
      ] });
    };
  }
});

// src/routes/promotions/promotion-add-campaign/components/add-campaign-promotion-form/add-campaign-promotion-form.tsx
var import_zod43, import_ui186, import_react166, import_react_hook_form48, import_react_i18next198, zod9, import_jsx_runtime279, EditPromotionSchema, AddCampaignPromotionFields, AddCampaignPromotionForm;
var init_add_campaign_promotion_form = __esm({
  "src/routes/promotions/promotion-add-campaign/components/add-campaign-promotion-form/add-campaign-promotion-form.tsx"() {
    "use strict";
    import_zod43 = require("@hookform/resolvers/zod");
    import_ui186 = require("@medusajs/ui");
    import_react166 = require("react");
    import_react_hook_form48 = require("react-hook-form");
    import_react_i18next198 = require("react-i18next");
    zod9 = __toESM(require("zod"));
    init_form2();
    init_modals();
    init_keybound_form2();
    init_promotions();
    init_create_campaign_form_fields2();
    init_campaign_details();
    import_jsx_runtime279 = require("react/jsx-runtime");
    EditPromotionSchema = zod9.object({
      campaign_id: zod9.string().optional().nullable(),
      campaign_choice: zod9.enum(["none", "existing"]).optional()
    });
    AddCampaignPromotionFields = ({
      form,
      campaigns,
      withNewCampaign = true
    }) => {
      const { t: t4 } = (0, import_react_i18next198.useTranslation)();
      const watchCampaignId = (0, import_react_hook_form48.useWatch)({
        control: form.control,
        name: "campaign_id"
      });
      const watchCampaignChoice = (0, import_react_hook_form48.useWatch)({
        control: form.control,
        name: "campaign_choice"
      });
      const selectedCampaign = campaigns.find((c) => c.id === watchCampaignId);
      return /* @__PURE__ */ (0, import_jsx_runtime279.jsxs)("div", { className: "flex flex-col gap-y-8", children: [
        /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(
          Form.Field,
          {
            control: form.control,
            name: "campaign_choice",
            render: ({ field }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime279.jsxs)(Form.Item, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(Form.Label, { children: t4("promotions.fields.campaign") }),
                /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime279.jsxs)(
                  import_ui186.RadioGroup,
                  {
                    className: "grid grid-cols-1 gap-3",
                    ...field,
                    value: field.value,
                    onValueChange: field.onChange,
                    children: [
                      /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(
                        import_ui186.RadioGroup.ChoiceBox,
                        {
                          value: "none",
                          label: t4("promotions.form.campaign.none.title"),
                          description: t4("promotions.form.campaign.none.description")
                        }
                      ),
                      /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(
                        import_ui186.RadioGroup.ChoiceBox,
                        {
                          value: "existing",
                          label: t4("promotions.form.campaign.existing.title"),
                          description: t4(
                            "promotions.form.campaign.existing.description"
                          )
                        }
                      ),
                      withNewCampaign && /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(
                        import_ui186.RadioGroup.ChoiceBox,
                        {
                          value: "new",
                          label: t4("promotions.form.campaign.new.title"),
                          description: t4(
                            "promotions.form.campaign.new.description"
                          )
                        }
                      )
                    ]
                  }
                ) }),
                /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(Form.ErrorMessage, {})
              ] });
            }
          }
        ),
        watchCampaignChoice === "existing" && /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(
          Form.Field,
          {
            control: form.control,
            name: "campaign_id",
            render: ({ field: { onChange, ref, ...field } }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime279.jsxs)(Form.Item, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(Form.Label, { children: t4("promotions.form.campaign.existing.title") }),
                /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime279.jsxs)(import_ui186.Select, { onValueChange: onChange, ...field, children: [
                  /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(import_ui186.Select.Trigger, { ref, children: /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(import_ui186.Select.Value, {}) }),
                  /* @__PURE__ */ (0, import_jsx_runtime279.jsxs)(import_ui186.Select.Content, { children: [
                    !campaigns.length && /* @__PURE__ */ (0, import_jsx_runtime279.jsxs)("div", { className: "flex h-[120px] flex-col items-center justify-center gap-2 p-2", children: [
                      /* @__PURE__ */ (0, import_jsx_runtime279.jsx)("span", { className: "txt-small text-ui-fg-subtle font-medium", children: t4(
                        "promotions.form.campaign.existing.placeholder.title"
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime279.jsx)("span", { className: "txt-small text-ui-fg-muted", children: t4(
                        "promotions.form.campaign.existing.placeholder.desc"
                      ) })
                    ] }),
                    campaigns.map((c) => /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(import_ui186.Select.Item, { value: c.id, children: c.name?.toUpperCase() }, c.id))
                  ] })
                ] }) }),
                /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(
                  import_ui186.Text,
                  {
                    size: "small",
                    leading: "compact",
                    className: "text-ui-fg-subtle",
                    children: /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(
                      import_react_i18next198.Trans,
                      {
                        t: t4,
                        i18nKey: "campaigns.fields.campaign_id.hint",
                        components: [/* @__PURE__ */ (0, import_jsx_runtime279.jsx)("br", {}, "break")]
                      }
                    )
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(Form.ErrorMessage, {})
              ] });
            }
          }
        ),
        watchCampaignChoice === "new" && /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(CreateCampaignFormFields, { form, fieldScope: "campaign." }),
        /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(CampaignDetails, { campaign: selectedCampaign })
      ] });
    };
    AddCampaignPromotionForm = ({
      promotion,
      campaigns
    }) => {
      const { t: t4 } = (0, import_react_i18next198.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const { campaign } = promotion;
      const originalId = campaign?.id;
      const form = (0, import_react_hook_form48.useForm)({
        defaultValues: {
          campaign_id: campaign?.id,
          campaign_choice: campaign?.id ? "existing" : "none"
        },
        resolver: (0, import_zod43.zodResolver)(EditPromotionSchema)
      });
      const { setValue } = form;
      const { mutateAsync, isPending } = useUpdatePromotion(promotion.id);
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(
          { campaign_id: data.campaign_id },
          {
            onSuccess: () => {
              import_ui186.toast.success(t4("promotions.campaign.edit.successToast"));
              handleSuccess();
            },
            onError: (e) => {
              import_ui186.toast.error(e.message);
            }
          }
        );
      });
      const watchCampaignChoice = (0, import_react_hook_form48.useWatch)({
        control: form.control,
        name: "campaign_choice"
      });
      (0, import_react166.useEffect)(() => {
        if (watchCampaignChoice === "none") {
          setValue("campaign_id", null);
        }
        if (watchCampaignChoice === "existing") {
          setValue("campaign_id", originalId);
        }
      }, [watchCampaignChoice, setValue, originalId]);
      return /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime279.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex size-full flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(RouteDrawer.Body, { className: "size-full overflow-auto", children: /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(
              AddCampaignPromotionFields,
              {
                form,
                campaigns,
                withNewCampaign: false
              }
            ) }),
            /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime279.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(import_ui186.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime279.jsx)(import_ui186.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/promotions/promotion-add-campaign/components/add-campaign-promotion-form/index.ts
var init_add_campaign_promotion_form2 = __esm({
  "src/routes/promotions/promotion-add-campaign/components/add-campaign-promotion-form/index.ts"() {
    "use strict";
    init_add_campaign_promotion_form();
  }
});

// src/routes/promotions/promotion-create/components/create-promotion-form/constants.ts
var init_constants14 = __esm({
  "src/routes/promotions/promotion-create/components/create-promotion-form/constants.ts"() {
    "use strict";
  }
});

// src/components/utilities/visually-hidden/visually-hidden.tsx
var import_jsx_runtime280, VisuallyHidden;
var init_visually_hidden = __esm({
  "src/components/utilities/visually-hidden/visually-hidden.tsx"() {
    "use strict";
    import_jsx_runtime280 = require("react/jsx-runtime");
    VisuallyHidden = ({ children }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime280.jsx)("span", { className: "sr-only", children });
    };
  }
});

// src/components/utilities/visually-hidden/index.ts
var init_visually_hidden2 = __esm({
  "src/components/utilities/visually-hidden/index.ts"() {
    "use strict";
    init_visually_hidden();
  }
});

// src/routes/campaigns/campaign-create/components/create-campaign-form/create-campaign-form.tsx
var import_zod44, import_ui187, import_react_hook_form49, import_react_i18next199, zod10, import_jsx_runtime281, CreateCampaignSchema, CreateCampaignForm;
var init_create_campaign_form = __esm({
  "src/routes/campaigns/campaign-create/components/create-campaign-form/create-campaign-form.tsx"() {
    "use strict";
    import_zod44 = require("@hookform/resolvers/zod");
    import_ui187 = require("@medusajs/ui");
    import_react_hook_form49 = require("react-hook-form");
    import_react_i18next199 = require("react-i18next");
    zod10 = __toESM(require("zod"));
    init_modals();
    init_keybound_form2();
    init_visually_hidden2();
    init_campaigns();
    init_create_campaign_form_fields2();
    init_constants12();
    import_jsx_runtime281 = require("react/jsx-runtime");
    CreateCampaignSchema = zod10.object({
      name: zod10.string().min(1),
      description: zod10.string().optional(),
      campaign_identifier: zod10.string().min(1),
      starts_at: zod10.date().nullable(),
      ends_at: zod10.date().nullable(),
      budget: zod10.object({
        limit: zod10.number().min(0).nullish(),
        type: zod10.enum(["spend", "usage"]),
        currency_code: zod10.string().nullish()
      })
    });
    CreateCampaignForm = () => {
      const { t: t4 } = (0, import_react_i18next199.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const { mutateAsync, isPending } = useCreateCampaign();
      const form = (0, import_react_hook_form49.useForm)({
        defaultValues: DEFAULT_CAMPAIGN_VALUES,
        resolver: (0, import_zod44.zodResolver)(CreateCampaignSchema)
      });
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(
          {
            name: data.name,
            description: data.description,
            campaign_identifier: data.campaign_identifier,
            starts_at: data.starts_at,
            ends_at: data.ends_at,
            budget: {
              type: data.budget.type,
              limit: data.budget.limit ? data.budget.limit : void 0,
              currency_code: data.budget.currency_code
            }
          },
          {
            onSuccess: ({ campaign }) => {
              import_ui187.toast.success(
                t4("campaigns.create.successToast", {
                  name: campaign.name
                })
              );
              handleSuccess(`/campaigns/${campaign.id}`);
            },
            onError: (error) => {
              import_ui187.toast.error(error.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime281.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime281.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex size-full flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime281.jsxs)(RouteFocusModal.Header, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime281.jsx)(RouteFocusModal.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime281.jsx)(VisuallyHidden, { children: t4("campaigns.create.title") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime281.jsx)(RouteFocusModal.Description, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime281.jsx)(VisuallyHidden, { children: t4("campaigns.create.description") }) })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime281.jsx)(RouteFocusModal.Body, { className: "flex size-full flex-col items-center overflow-auto py-16", children: /* @__PURE__ */ (0, import_jsx_runtime281.jsx)(CreateCampaignFormFields, { form }) }),
            /* @__PURE__ */ (0, import_jsx_runtime281.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime281.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime281.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime281.jsx)(import_ui187.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime281.jsx)(
                import_ui187.Button,
                {
                  size: "small",
                  variant: "primary",
                  type: "submit",
                  isLoading: isPending,
                  children: t4("actions.create")
                }
              )
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/campaigns/campaign-create/components/create-campaign-form/index.ts
var init_create_campaign_form2 = __esm({
  "src/routes/campaigns/campaign-create/components/create-campaign-form/index.ts"() {
    "use strict";
    init_create_campaign_form();
  }
});

// src/routes/promotions/promotion-create/components/create-promotion-form/form-schema.ts
var import_zod45, RuleSchema, CreatePromotionSchema;
var init_form_schema = __esm({
  "src/routes/promotions/promotion-create/components/create-promotion-form/form-schema.ts"() {
    "use strict";
    import_zod45 = require("zod");
    init_create_campaign_form2();
    RuleSchema = import_zod45.z.array(
      import_zod45.z.object({
        id: import_zod45.z.string().optional(),
        attribute: import_zod45.z.string().min(1, { message: "Required field" }),
        operator: import_zod45.z.string().min(1, { message: "Required field" }),
        values: import_zod45.z.union([
          import_zod45.z.number().min(1, { message: "Required field" }),
          import_zod45.z.string().min(1, { message: "Required field" }),
          import_zod45.z.array(import_zod45.z.string()).min(1, { message: "Required field" })
        ]),
        required: import_zod45.z.boolean().optional(),
        disguised: import_zod45.z.boolean().optional(),
        field_type: import_zod45.z.string().optional()
      })
    );
    CreatePromotionSchema = import_zod45.z.object({
      template_id: import_zod45.z.string().optional(),
      campaign_id: import_zod45.z.string().optional(),
      campaign_choice: import_zod45.z.enum(["none", "existing", "new"]).optional(),
      is_automatic: import_zod45.z.string().toLowerCase(),
      code: import_zod45.z.string().min(1),
      type: import_zod45.z.enum(["buyget", "standard"]),
      rules: RuleSchema,
      application_method: import_zod45.z.object({
        allocation: import_zod45.z.enum(["each", "across"]),
        value: import_zod45.z.number().min(0),
        currency_code: import_zod45.z.string().optional(),
        max_quantity: import_zod45.z.number().optional().nullable(),
        target_rules: RuleSchema,
        buy_rules: RuleSchema,
        type: import_zod45.z.enum(["fixed", "percentage"]),
        target_type: import_zod45.z.enum(["order", "shipping_methods", "items"])
      }),
      campaign: CreateCampaignSchema.optional()
    }).refine(
      (data) => {
        if (data.application_method.allocation === "across") {
          return true;
        }
        return data.application_method.allocation === "each" && typeof data.application_method.max_quantity === "number";
      },
      {
        path: ["application_method.max_quantity"],
        message: `required field`
      }
    );
  }
});

// src/routes/promotions/promotion-create/components/create-promotion-form/templates.ts
var commonHiddenFields, templates;
var init_templates = __esm({
  "src/routes/promotions/promotion-create/components/create-promotion-form/templates.ts"() {
    "use strict";
    commonHiddenFields = [
      "type",
      "application_method.type",
      "application_method.allocation"
    ];
    templates = [
      {
        id: "amount_off_products",
        type: "standard",
        title: "Amount off products",
        description: "Discount specific products or collection of products",
        hiddenFields: [...commonHiddenFields],
        defaults: {
          is_automatic: "false",
          type: "standard",
          application_method: {
            allocation: "each",
            target_type: "items",
            type: "fixed"
          }
        }
      },
      {
        id: "amount_off_order",
        type: "standard",
        title: "Amount off order",
        description: "Discounts the total order amount",
        hiddenFields: [...commonHiddenFields],
        defaults: {
          is_automatic: "false",
          type: "standard",
          application_method: {
            allocation: "across",
            target_type: "order",
            type: "fixed"
          }
        }
      },
      {
        id: "percentage_off_product",
        type: "standard",
        title: "Percentage off product",
        description: "Discounts a percentage off selected products",
        hiddenFields: [...commonHiddenFields],
        defaults: {
          is_automatic: "false",
          type: "standard",
          application_method: {
            allocation: "each",
            target_type: "items",
            type: "percentage"
          }
        }
      },
      {
        id: "percentage_off_order",
        type: "standard",
        title: "Percentage off order",
        description: "Discounts a percentage of the total order amount",
        hiddenFields: [...commonHiddenFields],
        defaults: {
          is_automatic: "false",
          type: "standard",
          application_method: {
            allocation: "across",
            target_type: "order",
            type: "percentage"
          }
        }
      },
      {
        id: "buy_get",
        type: "buy_get",
        title: "Buy X Get Y",
        description: "Buy X product(s), get Y product(s)",
        hiddenFields: [...commonHiddenFields, "application_method.value"],
        defaults: {
          is_automatic: "false",
          type: "buyget",
          application_method: {
            type: "percentage",
            value: 100,
            apply_to_quantity: 1,
            max_quantity: 1
          }
        }
      }
    ];
  }
});

// src/routes/promotions/promotion-create/components/create-promotion-form/create-promotion-form.tsx
var import_zod46, import_ui188, import_react167, import_react_hook_form50, import_react_i18next200, import_jsx_runtime282, defaultValues, CreatePromotionForm;
var init_create_promotion_form = __esm({
  "src/routes/promotions/promotion-create/components/create-promotion-form/create-promotion-form.tsx"() {
    "use strict";
    import_zod46 = require("@hookform/resolvers/zod");
    import_ui188 = require("@medusajs/ui");
    import_react167 = require("react");
    import_react_hook_form50 = require("react-hook-form");
    import_react_i18next200 = require("react-i18next");
    init_divider2();
    init_form2();
    init_percentage_input2();
    init_modals();
    init_keybound_form2();
    init_campaigns();
    init_promotions();
    init_currencies2();
    init_constants12();
    init_rules_form_field2();
    init_add_campaign_promotion_form2();
    init_constants14();
    init_form_schema();
    init_templates();
    import_jsx_runtime282 = require("react/jsx-runtime");
    defaultValues = {
      campaign_id: void 0,
      template_id: templates[0].id,
      campaign_choice: "none",
      is_automatic: "false",
      code: "",
      type: "standard",
      rules: [],
      application_method: {
        allocation: "each",
        type: "fixed",
        target_type: "items",
        max_quantity: 1,
        target_rules: [],
        buy_rules: []
      },
      campaign: void 0
    };
    CreatePromotionForm = () => {
      const [tab, setTab] = (0, import_react167.useState)("type" /* TYPE */);
      const [tabState, setTabState] = (0, import_react167.useState)({
        ["type" /* TYPE */]: "in-progress",
        ["promotion" /* PROMOTION */]: "not-started",
        ["campaign" /* CAMPAIGN */]: "not-started"
      });
      const { t: t4 } = (0, import_react_i18next200.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form50.useForm)({
        defaultValues,
        resolver: (0, import_zod46.zodResolver)(CreatePromotionSchema)
      });
      const { mutateAsync: createPromotion } = useCreatePromotion();
      const handleSubmit = form.handleSubmit(
        async (data) => {
          const {
            campaign_choice: _campaignChoice,
            is_automatic,
            template_id: _templateId,
            application_method,
            rules,
            ...promotionData
          } = data;
          const {
            target_rules: targetRulesData = [],
            buy_rules: buyRulesData = [],
            ...applicationMethodData
          } = application_method;
          const disguisedRules = [
            ...targetRulesData.filter((r) => !!r.disguised),
            ...buyRulesData.filter((r) => !!r.disguised),
            ...rules.filter((r) => !!r.disguised)
          ];
          const applicationMethodRuleData = {};
          for (const rule of disguisedRules) {
            applicationMethodRuleData[rule.attribute] = rule.field_type === "number" ? parseInt(rule.values) : rule.values;
          }
          const buildRulesData = (rules2) => {
            return rules2.filter((r) => !r.disguised).map((rule) => ({
              operator: rule.operator,
              attribute: rule.attribute,
              values: rule.values
            }));
          };
          createPromotion(
            {
              ...promotionData,
              rules: buildRulesData(rules),
              application_method: {
                ...applicationMethodData,
                ...applicationMethodRuleData,
                target_rules: buildRulesData(targetRulesData),
                buy_rules: buildRulesData(buyRulesData)
              },
              is_automatic: is_automatic === "true"
            },
            {
              onSuccess: ({ promotion }) => {
                import_ui188.toast.success(
                  t4("promotions.toasts.promotionCreateSuccess", {
                    code: promotion.code
                  })
                );
                handleSuccess();
              },
              onError: (e) => {
                import_ui188.toast.error(e.message);
              }
            }
          );
        },
        async (error) => {
          const { campaign: _campaign, ...rest } = error || {};
          const errorInPromotionTab = !!Object.keys(rest || {}).length;
          if (errorInPromotionTab) {
            import_ui188.toast.error(t4("promotions.errors.promotionTabError"));
          }
        }
      );
      const handleTabChange = async (tab2) => {
        switch (tab2) {
          case "type" /* TYPE */:
            setTabState((prev) => ({
              ...prev,
              ["type" /* TYPE */]: "in-progress"
            }));
            setTab(tab2);
            break;
          case "promotion" /* PROMOTION */:
            setTabState((prev) => ({
              ...prev,
              ["type" /* TYPE */]: "completed",
              ["promotion" /* PROMOTION */]: "in-progress"
            }));
            setTab(tab2);
            break;
          case "campaign" /* CAMPAIGN */: {
            const valid = await form.trigger();
            if (!valid) {
              setTabState({
                ["type" /* TYPE */]: "completed",
                ["promotion" /* PROMOTION */]: "in-progress",
                ["campaign" /* CAMPAIGN */]: "not-started"
              });
              setTab("promotion" /* PROMOTION */);
              break;
            }
            setTabState((prev) => ({
              ...prev,
              ["promotion" /* PROMOTION */]: "completed",
              ["campaign" /* CAMPAIGN */]: "in-progress"
            }));
            setTab(tab2);
            break;
          }
        }
      };
      const handleContinue = async () => {
        switch (tab) {
          case "type" /* TYPE */:
            handleTabChange("promotion" /* PROMOTION */);
            break;
          case "promotion" /* PROMOTION */: {
            const valid = await form.trigger();
            if (valid) {
              handleTabChange("campaign" /* CAMPAIGN */);
            }
            break;
          }
          case "campaign" /* CAMPAIGN */:
            break;
        }
      };
      const watchTemplateId = (0, import_react_hook_form50.useWatch)({
        control: form.control,
        name: "template_id"
      });
      const currentTemplate = (0, import_react167.useMemo)(() => {
        const currentTemplate2 = templates.find(
          (template) => template.id === watchTemplateId
        );
        if (!currentTemplate2) {
          return;
        }
        form.reset({ ...defaultValues, template_id: watchTemplateId });
        for (const [key, value] of Object.entries(currentTemplate2.defaults)) {
          if (typeof value === "object") {
            for (const [subKey, subValue] of Object.entries(value)) {
              form.setValue(`application_method.${subKey}`, subValue);
            }
          } else {
            form.setValue(key, value);
          }
        }
        return currentTemplate2;
      }, [watchTemplateId]);
      const watchValueType = (0, import_react_hook_form50.useWatch)({
        control: form.control,
        name: "application_method.type"
      });
      const isFixedValueType = watchValueType === "fixed";
      const watchAllocation = (0, import_react_hook_form50.useWatch)({
        control: form.control,
        name: "application_method.allocation"
      });
      (0, import_react167.useEffect)(() => {
        if (watchAllocation === "across") {
          form.setValue("application_method.max_quantity", null);
        }
      }, [watchAllocation]);
      const watchType = (0, import_react_hook_form50.useWatch)({
        control: form.control,
        name: "type"
      });
      const isTypeStandard = watchType === "standard";
      const targetType = (0, import_react_hook_form50.useWatch)({
        control: form.control,
        name: "application_method.target_type"
      });
      const isTargetTypeOrder = targetType === "order";
      const formData = form.getValues();
      let campaignQuery = {};
      if (isFixedValueType && formData.application_method.currency_code) {
        campaignQuery = {
          budget: { currency_code: formData.application_method.currency_code }
        };
      }
      const { campaigns } = useCampaigns(campaignQuery);
      const watchCampaignChoice = (0, import_react_hook_form50.useWatch)({
        control: form.control,
        name: "campaign_choice"
      });
      (0, import_react167.useEffect)(() => {
        const formData2 = form.getValues();
        if (watchCampaignChoice !== "existing") {
          form.setValue("campaign_id", void 0);
        }
        if (watchCampaignChoice !== "new") {
          form.setValue("campaign", void 0);
        }
        if (watchCampaignChoice === "new") {
          if (!formData2.campaign || !formData2.campaign?.budget?.type) {
            form.setValue("campaign", {
              ...DEFAULT_CAMPAIGN_VALUES,
              budget: {
                ...DEFAULT_CAMPAIGN_VALUES.budget,
                currency_code: formData2.application_method.currency_code
              }
            });
          }
        }
      }, [watchCampaignChoice]);
      const watchRules = (0, import_react_hook_form50.useWatch)({
        control: form.control,
        name: "rules"
      });
      const watchCurrencyRule = watchRules.find(
        (rule) => rule.attribute === "currency_code"
      );
      if (watchCurrencyRule) {
        const formData2 = form.getValues();
        const currencyCode = formData2.application_method.currency_code;
        const ruleValue = watchCurrencyRule.values;
        if (!Array.isArray(ruleValue) && currencyCode !== ruleValue) {
          form.setValue("application_method.currency_code", ruleValue);
        }
      }
      return /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime282.jsxs)(KeyboundForm, { className: "flex h-full flex-col", onSubmit: handleSubmit, children: [
        /* @__PURE__ */ (0, import_jsx_runtime282.jsxs)(
          import_ui188.ProgressTabs,
          {
            value: tab,
            onValueChange: (tab2) => handleTabChange(tab2),
            className: "flex h-full flex-col overflow-hidden",
            children: [
              /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime282.jsx)("div", { className: "flex w-full items-center justify-between gap-x-4", children: /* @__PURE__ */ (0, import_jsx_runtime282.jsx)("div", { className: "-my-2 w-full max-w-[600px] border-l", children: /* @__PURE__ */ (0, import_jsx_runtime282.jsxs)(import_ui188.ProgressTabs.List, { className: "grid w-full grid-cols-3", children: [
                /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                  import_ui188.ProgressTabs.Trigger,
                  {
                    className: "w-full",
                    value: "type" /* TYPE */,
                    status: tabState["type" /* TYPE */],
                    children: t4("promotions.tabs.template")
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                  import_ui188.ProgressTabs.Trigger,
                  {
                    className: "w-full",
                    value: "promotion" /* PROMOTION */,
                    status: tabState["promotion" /* PROMOTION */],
                    children: t4("promotions.tabs.details")
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                  import_ui188.ProgressTabs.Trigger,
                  {
                    className: "w-full",
                    value: "campaign" /* CAMPAIGN */,
                    status: tabState["campaign" /* CAMPAIGN */],
                    children: t4("promotions.tabs.campaign")
                  }
                )
              ] }) }) }) }),
              /* @__PURE__ */ (0, import_jsx_runtime282.jsxs)(RouteFocusModal.Body, { className: "size-full overflow-hidden", children: [
                /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                  import_ui188.ProgressTabs.Content,
                  {
                    value: "type" /* TYPE */,
                    className: "size-full overflow-y-auto",
                    children: /* @__PURE__ */ (0, import_jsx_runtime282.jsx)("div", { className: "flex size-full flex-col items-center", children: /* @__PURE__ */ (0, import_jsx_runtime282.jsx)("div", { className: "w-full max-w-[720px] py-16", children: /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                      Form.Field,
                      {
                        control: form.control,
                        name: "template_id",
                        render: ({ field }) => {
                          return /* @__PURE__ */ (0, import_jsx_runtime282.jsxs)(Form.Item, { children: [
                            /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Form.Label, { children: t4("promotions.fields.type") }),
                            /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                              import_ui188.RadioGroup,
                              {
                                className: "flex-col gap-y-3",
                                ...field,
                                onValueChange: field.onChange,
                                children: templates.map((template) => {
                                  return /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                                    import_ui188.RadioGroup.ChoiceBox,
                                    {
                                      value: template.id,
                                      label: template.title,
                                      description: template.description
                                    },
                                    template.id
                                  );
                                })
                              },
                              "template_id"
                            ) }),
                            /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Form.ErrorMessage, {})
                          ] });
                        }
                      }
                    ) }) })
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                  import_ui188.ProgressTabs.Content,
                  {
                    value: "promotion" /* PROMOTION */,
                    className: "size-full overflow-y-auto",
                    children: /* @__PURE__ */ (0, import_jsx_runtime282.jsx)("div", { className: "flex size-full flex-col items-center", children: /* @__PURE__ */ (0, import_jsx_runtime282.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8 py-16", children: [
                      /* @__PURE__ */ (0, import_jsx_runtime282.jsxs)(import_ui188.Heading, { level: "h1", className: "text-fg-base", children: [
                        t4(`promotions.sections.details`),
                        currentTemplate?.title && /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                          import_ui188.Badge,
                          {
                            className: "ml-2 align-middle",
                            color: "grey",
                            size: "2xsmall",
                            rounded: "full",
                            children: currentTemplate?.title
                          }
                        )
                      ] }),
                      form.formState.errors.root && /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                        import_ui188.Alert,
                        {
                          variant: "error",
                          dismissible: false,
                          className: "text-balance",
                          children: form.formState.errors.root.message
                        }
                      ),
                      /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                        Form.Field,
                        {
                          control: form.control,
                          name: "is_automatic",
                          render: ({ field }) => {
                            return /* @__PURE__ */ (0, import_jsx_runtime282.jsxs)(Form.Item, { children: [
                              /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Form.Label, { children: t4("promotions.form.method.label") }),
                              /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime282.jsxs)(
                                import_ui188.RadioGroup,
                                {
                                  className: "flex gap-y-3",
                                  ...field,
                                  value: field.value,
                                  onValueChange: field.onChange,
                                  children: [
                                    /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                                      import_ui188.RadioGroup.ChoiceBox,
                                      {
                                        value: "false",
                                        label: t4("promotions.form.method.code.title"),
                                        description: t4(
                                          "promotions.form.method.code.description"
                                        ),
                                        className: (0, import_ui188.clx)("basis-1/2")
                                      }
                                    ),
                                    /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                                      import_ui188.RadioGroup.ChoiceBox,
                                      {
                                        value: "true",
                                        label: t4(
                                          "promotions.form.method.automatic.title"
                                        ),
                                        description: t4(
                                          "promotions.form.method.automatic.description"
                                        ),
                                        className: (0, import_ui188.clx)("basis-1/2")
                                      }
                                    )
                                  ]
                                }
                              ) }),
                              /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Form.ErrorMessage, {})
                            ] });
                          }
                        }
                      ),
                      /* @__PURE__ */ (0, import_jsx_runtime282.jsx)("div", { className: "flex gap-y-4", children: /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                        Form.Field,
                        {
                          control: form.control,
                          name: "code",
                          render: ({ field }) => {
                            return /* @__PURE__ */ (0, import_jsx_runtime282.jsxs)(Form.Item, { className: "basis-1/2", children: [
                              /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Form.Label, { children: t4("promotions.form.code.title") }),
                              /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(import_ui188.Input, { ...field, placeholder: "SUMMER15" }) }),
                              /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                                import_ui188.Text,
                                {
                                  size: "small",
                                  leading: "compact",
                                  className: "text-ui-fg-subtle",
                                  children: /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                                    import_react_i18next200.Trans,
                                    {
                                      t: t4,
                                      i18nKey: "promotions.form.code.description",
                                      components: [/* @__PURE__ */ (0, import_jsx_runtime282.jsx)("br", {}, "break")]
                                    }
                                  )
                                }
                              )
                            ] });
                          }
                        }
                      ) }),
                      !currentTemplate?.hiddenFields?.includes("type") && /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                        Form.Field,
                        {
                          control: form.control,
                          name: "type",
                          render: ({ field }) => {
                            return /* @__PURE__ */ (0, import_jsx_runtime282.jsxs)(Form.Item, { children: [
                              /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Form.Label, { children: t4("promotions.fields.type") }),
                              /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime282.jsxs)(
                                import_ui188.RadioGroup,
                                {
                                  className: "flex gap-y-3",
                                  ...field,
                                  onValueChange: field.onChange,
                                  children: [
                                    /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                                      import_ui188.RadioGroup.ChoiceBox,
                                      {
                                        value: "standard",
                                        label: t4(
                                          "promotions.form.type.standard.title"
                                        ),
                                        description: t4(
                                          "promotions.form.type.standard.description"
                                        ),
                                        className: (0, import_ui188.clx)("basis-1/2")
                                      }
                                    ),
                                    /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                                      import_ui188.RadioGroup.ChoiceBox,
                                      {
                                        value: "buyget",
                                        label: t4("promotions.form.type.buyget.title"),
                                        description: t4(
                                          "promotions.form.type.buyget.description"
                                        ),
                                        className: (0, import_ui188.clx)("basis-1/2")
                                      }
                                    )
                                  ]
                                }
                              ) }),
                              /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Form.ErrorMessage, {})
                            ] });
                          }
                        }
                      ),
                      /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Divider, {}),
                      /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(RulesFormField, { form, ruleType: "rules" }),
                      /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Divider, {}),
                      !currentTemplate?.hiddenFields?.includes(
                        "application_method.type"
                      ) && /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                        Form.Field,
                        {
                          control: form.control,
                          name: "application_method.type",
                          render: ({ field }) => {
                            return /* @__PURE__ */ (0, import_jsx_runtime282.jsxs)(Form.Item, { children: [
                              /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Form.Label, { children: t4("promotions.fields.value_type") }),
                              /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime282.jsxs)(
                                import_ui188.RadioGroup,
                                {
                                  className: "flex gap-y-3",
                                  ...field,
                                  onValueChange: field.onChange,
                                  children: [
                                    /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                                      import_ui188.RadioGroup.ChoiceBox,
                                      {
                                        value: "fixed",
                                        label: t4(
                                          "promotions.form.value_type.fixed.title"
                                        ),
                                        description: t4(
                                          "promotions.form.value_type.fixed.description"
                                        ),
                                        className: (0, import_ui188.clx)("basis-1/2")
                                      }
                                    ),
                                    /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                                      import_ui188.RadioGroup.ChoiceBox,
                                      {
                                        value: "percentage",
                                        label: t4(
                                          "promotions.form.value_type.percentage.title"
                                        ),
                                        description: t4(
                                          "promotions.form.value_type.percentage.description"
                                        ),
                                        className: (0, import_ui188.clx)("basis-1/2")
                                      }
                                    )
                                  ]
                                }
                              ) }),
                              /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Form.ErrorMessage, {})
                            ] });
                          }
                        }
                      ),
                      /* @__PURE__ */ (0, import_jsx_runtime282.jsxs)("div", { className: "flex gap-x-2 gap-y-4", children: [
                        !currentTemplate?.hiddenFields?.includes(
                          "application_method.value"
                        ) && /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                          Form.Field,
                          {
                            control: form.control,
                            name: "application_method.value",
                            render: ({ field: { onChange, value, ...field } }) => {
                              const currencyCode = form.getValues().application_method.currency_code;
                              return /* @__PURE__ */ (0, import_jsx_runtime282.jsxs)(Form.Item, { className: "basis-1/2", children: [
                                /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                                  Form.Label,
                                  {
                                    tooltip: currencyCode || !isFixedValueType ? void 0 : t4("promotions.fields.amount.tooltip"),
                                    children: t4("promotions.form.value.title")
                                  }
                                ),
                                /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Form.Control, { children: isFixedValueType ? /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                                  import_ui188.CurrencyInput,
                                  {
                                    ...field,
                                    min: 0,
                                    onValueChange: (value2) => {
                                      onChange(value2 ? parseInt(value2) : "");
                                    },
                                    code: currencyCode || "USD",
                                    symbol: currencyCode ? getCurrencySymbol(currencyCode) : "$",
                                    value,
                                    disabled: !currencyCode
                                  }
                                ) : /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                                  DeprecatedPercentageInput,
                                  {
                                    className: "text-right",
                                    min: 0,
                                    max: 100,
                                    ...field,
                                    value,
                                    onChange: (e) => {
                                      onChange(
                                        e.target.value === "" ? null : parseInt(e.target.value)
                                      );
                                    }
                                  },
                                  "amount"
                                ) }),
                                /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                                  import_ui188.Text,
                                  {
                                    size: "small",
                                    leading: "compact",
                                    className: "text-ui-fg-subtle",
                                    children: /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                                      import_react_i18next200.Trans,
                                      {
                                        t: t4,
                                        i18nKey: isFixedValueType ? "promotions.form.value_type.fixed.description" : "promotions.form.value_type.percentage.description",
                                        components: [/* @__PURE__ */ (0, import_jsx_runtime282.jsx)("br", {}, "break")]
                                      }
                                    )
                                  }
                                ),
                                /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Form.ErrorMessage, {})
                              ] });
                            }
                          }
                        ),
                        isTypeStandard && watchAllocation === "each" && /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                          Form.Field,
                          {
                            control: form.control,
                            name: "application_method.max_quantity",
                            render: ({ field }) => {
                              return /* @__PURE__ */ (0, import_jsx_runtime282.jsxs)(Form.Item, { className: "basis-1/2", children: [
                                /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Form.Label, { children: t4("promotions.form.max_quantity.title") }),
                                /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                                  import_ui188.Input,
                                  {
                                    ...form.register(
                                      "application_method.max_quantity",
                                      { valueAsNumber: true }
                                    ),
                                    type: "number",
                                    min: 1,
                                    placeholder: "3"
                                  }
                                ) }),
                                /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                                  import_ui188.Text,
                                  {
                                    size: "small",
                                    leading: "compact",
                                    className: "text-ui-fg-subtle",
                                    children: /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                                      import_react_i18next200.Trans,
                                      {
                                        t: t4,
                                        i18nKey: "promotions.form.max_quantity.description",
                                        components: [/* @__PURE__ */ (0, import_jsx_runtime282.jsx)("br", {}, "break")]
                                      }
                                    )
                                  }
                                )
                              ] });
                            }
                          }
                        )
                      ] }),
                      isTypeStandard && !currentTemplate?.hiddenFields?.includes(
                        "application_method.allocation"
                      ) && /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                        Form.Field,
                        {
                          control: form.control,
                          name: "application_method.allocation",
                          render: ({ field }) => {
                            return /* @__PURE__ */ (0, import_jsx_runtime282.jsxs)(Form.Item, { children: [
                              /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Form.Label, { children: t4("promotions.fields.allocation") }),
                              /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime282.jsxs)(
                                import_ui188.RadioGroup,
                                {
                                  className: "flex gap-y-3",
                                  ...field,
                                  onValueChange: field.onChange,
                                  children: [
                                    /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                                      import_ui188.RadioGroup.ChoiceBox,
                                      {
                                        value: "each",
                                        label: t4(
                                          "promotions.form.allocation.each.title"
                                        ),
                                        description: t4(
                                          "promotions.form.allocation.each.description"
                                        ),
                                        className: (0, import_ui188.clx)("basis-1/2")
                                      }
                                    ),
                                    /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                                      import_ui188.RadioGroup.ChoiceBox,
                                      {
                                        value: "across",
                                        label: t4(
                                          "promotions.form.allocation.across.title"
                                        ),
                                        description: t4(
                                          "promotions.form.allocation.across.description"
                                        ),
                                        className: (0, import_ui188.clx)("basis-1/2")
                                      }
                                    )
                                  ]
                                }
                              ) }),
                              /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Form.ErrorMessage, {})
                            ] });
                          }
                        }
                      ),
                      !isTypeStandard && /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(import_jsx_runtime282.Fragment, { children: /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                        RulesFormField,
                        {
                          form,
                          ruleType: "buy-rules",
                          scope: "application_method.buy_rules"
                        }
                      ) }),
                      !isTargetTypeOrder && /* @__PURE__ */ (0, import_jsx_runtime282.jsxs)(import_jsx_runtime282.Fragment, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(Divider, {}),
                        /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                          RulesFormField,
                          {
                            form,
                            ruleType: "target-rules",
                            scope: "application_method.target_rules"
                          }
                        )
                      ] })
                    ] }) })
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                  import_ui188.ProgressTabs.Content,
                  {
                    value: "campaign" /* CAMPAIGN */,
                    className: "size-full overflow-auto",
                    children: /* @__PURE__ */ (0, import_jsx_runtime282.jsx)("div", { className: "flex flex-col items-center", children: /* @__PURE__ */ (0, import_jsx_runtime282.jsx)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8 py-16", children: /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
                      AddCampaignPromotionFields,
                      {
                        form,
                        campaigns: campaigns || []
                      }
                    ) }) })
                  }
                )
              ] })
            ]
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime282.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(import_ui188.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
          tab === "campaign" /* CAMPAIGN */ ? /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
            import_ui188.Button,
            {
              type: "submit",
              size: "small",
              isLoading: false,
              children: t4("actions.save")
            },
            "save-btn"
          ) : /* @__PURE__ */ (0, import_jsx_runtime282.jsx)(
            import_ui188.Button,
            {
              type: "button",
              onClick: handleContinue,
              size: "small",
              children: t4("actions.continue")
            },
            "continue-btn"
          )
        ] }) })
      ] }) });
    };
  }
});

// src/routes/promotions/promotion-create/promotion-create.tsx
var import_jsx_runtime283, PromotionCreate;
var init_promotion_create = __esm({
  "src/routes/promotions/promotion-create/promotion-create.tsx"() {
    "use strict";
    init_modals();
    init_create_promotion_form();
    import_jsx_runtime283 = require("react/jsx-runtime");
    PromotionCreate = () => {
      return /* @__PURE__ */ (0, import_jsx_runtime283.jsx)(RouteFocusModal, { children: /* @__PURE__ */ (0, import_jsx_runtime283.jsx)(CreatePromotionForm, {}) });
    };
  }
});

// src/routes/promotions/promotion-create/index.ts
var promotion_create_exports = {};
__export(promotion_create_exports, {
  Component: () => PromotionCreate
});
var init_promotion_create2 = __esm({
  "src/routes/promotions/promotion-create/index.ts"() {
    "use strict";
    init_promotion_create();
  }
});

// src/routes/promotions/promotion-detail/loader.ts
var promotionDetailQuery, promotionLoader;
var init_loader9 = __esm({
  "src/routes/promotions/promotion-detail/loader.ts"() {
    "use strict";
    init_promotions();
    init_client2();
    init_query_client();
    promotionDetailQuery = (id2) => ({
      queryKey: promotionsQueryKeys.detail(id2),
      queryFn: async () => sdk.admin.promotion.retrieve(id2)
    });
    promotionLoader = async ({ params: params2 }) => {
      const id2 = params2.id;
      const query = promotionDetailQuery(id2);
      return queryClient.getQueryData(
        query.queryKey
      ) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/components/common/date-range-display/date-range-display.tsx
var import_ui189, import_react_i18next201, import_jsx_runtime284, DateRangeDisplay, Bar;
var init_date_range_display = __esm({
  "src/components/common/date-range-display/date-range-display.tsx"() {
    "use strict";
    import_ui189 = require("@medusajs/ui");
    import_react_i18next201 = require("react-i18next");
    init_use_date();
    import_jsx_runtime284 = require("react/jsx-runtime");
    DateRangeDisplay = ({
      startsAt,
      endsAt,
      showTime = false
    }) => {
      const startDate = startsAt ? new Date(startsAt) : null;
      const endDate = endsAt ? new Date(endsAt) : null;
      const { t: t4 } = (0, import_react_i18next201.useTranslation)();
      const { getFullDate } = useDate();
      return /* @__PURE__ */ (0, import_jsx_runtime284.jsxs)("div", { className: "grid gap-3 md:grid-cols-2", children: [
        /* @__PURE__ */ (0, import_jsx_runtime284.jsxs)("div", { className: "shadow-elevation-card-rest bg-ui-bg-component text-ui-fg-subtle flex items-center gap-x-3 rounded-md px-3 py-1.5", children: [
          /* @__PURE__ */ (0, import_jsx_runtime284.jsx)(Bar, { date: startDate }),
          /* @__PURE__ */ (0, import_jsx_runtime284.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime284.jsx)(import_ui189.Text, { weight: "plus", size: "small", children: t4("fields.startDate") }),
            /* @__PURE__ */ (0, import_jsx_runtime284.jsx)(import_ui189.Text, { size: "small", className: "tabular-nums", children: startDate ? getFullDate({
              date: startDate,
              includeTime: showTime
            }) : "-" })
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime284.jsxs)("div", { className: "shadow-elevation-card-rest bg-ui-bg-component text-ui-fg-subtle flex items-center gap-x-3 rounded-md px-3 py-1.5", children: [
          /* @__PURE__ */ (0, import_jsx_runtime284.jsx)(Bar, { date: endDate }),
          /* @__PURE__ */ (0, import_jsx_runtime284.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime284.jsx)(import_ui189.Text, { size: "small", weight: "plus", children: t4("fields.endDate") }),
            /* @__PURE__ */ (0, import_jsx_runtime284.jsx)(import_ui189.Text, { size: "small", className: "tabular-nums", children: endDate ? getFullDate({
              date: endDate,
              includeTime: showTime
            }) : "-" })
          ] })
        ] })
      ] });
    };
    Bar = ({ date: date3 }) => {
      const now = /* @__PURE__ */ new Date();
      const isDateInFuture = date3 && date3 > now;
      return /* @__PURE__ */ (0, import_jsx_runtime284.jsx)(
        "div",
        {
          className: (0, import_ui189.clx)("bg-ui-tag-neutral-icon h-8 w-1 rounded-full", {
            "bg-ui-tag-orange-icon": isDateInFuture
          })
        }
      );
    };
  }
});

// src/components/common/date-range-display/index.ts
var init_date_range_display2 = __esm({
  "src/components/common/date-range-display/index.ts"() {
    "use strict";
    init_date_range_display();
  }
});

// src/routes/promotions/promotion-detail/components/campaign-section/campaign-section.tsx
var import_icons89, import_ui190, import_react_i18next202, import_react_router_dom81, import_jsx_runtime285, CampaignDetailSection, CampaignSection;
var init_campaign_section = __esm({
  "src/routes/promotions/promotion-detail/components/campaign-section/campaign-section.tsx"() {
    "use strict";
    import_icons89 = require("@medusajs/icons");
    import_ui190 = require("@medusajs/ui");
    import_react_i18next202 = require("react-i18next");
    import_react_router_dom81 = require("react-router-dom");
    init_action_menu2();
    init_date_range_display2();
    init_empty_table_content2();
    import_jsx_runtime285 = require("react/jsx-runtime");
    CampaignDetailSection = ({
      campaign
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime285.jsxs)("div", { className: "flex flex-col gap-y-3", children: [
        /* @__PURE__ */ (0, import_jsx_runtime285.jsxs)("div", { className: "text-ui-fg-muted flex items-center gap-x-1.5", children: [
          /* @__PURE__ */ (0, import_jsx_runtime285.jsx)(import_ui190.Text, { size: "small", weight: "plus", className: "text-ui-fg-base", children: campaign.name }),
          /* @__PURE__ */ (0, import_jsx_runtime285.jsx)(import_ui190.Text, { size: "small", weight: "plus", children: "\xB7" }),
          /* @__PURE__ */ (0, import_jsx_runtime285.jsx)(import_ui190.Text, { size: "small", weight: "plus", children: campaign.campaign_identifier })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime285.jsx)(
          DateRangeDisplay,
          {
            startsAt: campaign.starts_at,
            endsAt: campaign.ends_at,
            showTime: true
          }
        )
      ] });
    };
    CampaignSection = ({
      campaign
    }) => {
      const { t: t4 } = (0, import_react_i18next202.useTranslation)();
      const { id: id2 } = (0, import_react_router_dom81.useParams)();
      const actions = [
        {
          label: t4("actions.edit"),
          to: "add-to-campaign",
          icon: /* @__PURE__ */ (0, import_jsx_runtime285.jsx)(import_icons89.PencilSquare, {})
        }
      ];
      if (campaign) {
        actions.unshift({
          label: t4("promotions.campaign.actions.goToCampaign"),
          to: `/campaigns/${campaign.id}`,
          icon: /* @__PURE__ */ (0, import_jsx_runtime285.jsx)(import_icons89.ArrowUpRightOnBox, {})
        });
      }
      return /* @__PURE__ */ (0, import_jsx_runtime285.jsxs)(import_ui190.Container, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime285.jsxs)("div", { className: "flex items-center justify-between", children: [
          /* @__PURE__ */ (0, import_jsx_runtime285.jsx)(import_ui190.Heading, { level: "h2", children: t4("promotions.fields.campaign") }),
          /* @__PURE__ */ (0, import_jsx_runtime285.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions
                }
              ]
            }
          )
        ] }),
        campaign ? /* @__PURE__ */ (0, import_jsx_runtime285.jsx)(CampaignDetailSection, { campaign }) : /* @__PURE__ */ (0, import_jsx_runtime285.jsx)(
          NoRecords,
          {
            className: "h-[180px] pt-4 text-center",
            title: "Not part of a campaign",
            message: "Add this promotion to an existing campaign",
            action: {
              to: `/promotions/${id2}/add-to-campaign`,
              label: "Add to Campaign"
            },
            buttonVariant: "transparentIconLeft"
          }
        )
      ] });
    };
  }
});

// src/routes/promotions/promotion-detail/components/campaign-section/index.ts
var init_campaign_section2 = __esm({
  "src/routes/promotions/promotion-detail/components/campaign-section/index.ts"() {
    "use strict";
    init_campaign_section();
  }
});

// src/components/common/badge-list-summary/badge-list-summary.tsx
var import_ui191, import_react_i18next203, import_jsx_runtime286, BadgeListSummary;
var init_badge_list_summary = __esm({
  "src/components/common/badge-list-summary/badge-list-summary.tsx"() {
    "use strict";
    import_ui191 = require("@medusajs/ui");
    import_react_i18next203 = require("react-i18next");
    import_jsx_runtime286 = require("react/jsx-runtime");
    BadgeListSummary = ({
      list,
      className,
      inline: inline3,
      rounded = false,
      n = 2
    }) => {
      const { t: t4 } = (0, import_react_i18next203.useTranslation)();
      const title = t4("general.plusCount", {
        count: list.length - n
      });
      return /* @__PURE__ */ (0, import_jsx_runtime286.jsxs)(
        "div",
        {
          className: (0, import_ui191.clx)(
            "text-ui-fg-subtle txt-compact-small gap-x-2 overflow-hidden",
            {
              "inline-flex": inline3,
              flex: !inline3
            },
            className
          ),
          children: [
            list.slice(0, n).map((item) => {
              return /* @__PURE__ */ (0, import_jsx_runtime286.jsx)(import_ui191.Badge, { rounded: rounded ? "full" : "base", size: "2xsmall", children: item }, item);
            }),
            list.length > n && /* @__PURE__ */ (0, import_jsx_runtime286.jsx)("div", { className: "whitespace-nowrap", children: /* @__PURE__ */ (0, import_jsx_runtime286.jsx)(
              import_ui191.Tooltip,
              {
                content: /* @__PURE__ */ (0, import_jsx_runtime286.jsx)("ul", { children: list.slice(n).map((c) => /* @__PURE__ */ (0, import_jsx_runtime286.jsx)("li", { children: c }, c)) }),
                children: /* @__PURE__ */ (0, import_jsx_runtime286.jsx)(
                  import_ui191.Badge,
                  {
                    rounded: rounded ? "full" : "base",
                    size: "2xsmall",
                    className: "cursor-default whitespace-nowrap",
                    children: title
                  }
                )
              }
            ) })
          ]
        }
      );
    };
  }
});

// src/components/common/badge-list-summary/index.ts
var init_badge_list_summary2 = __esm({
  "src/components/common/badge-list-summary/index.ts"() {
    "use strict";
    init_badge_list_summary();
  }
});

// src/routes/promotions/promotion-detail/components/promotion-conditions-section/promotion-conditions-section.tsx
function RuleBlock({ rule }) {
  return /* @__PURE__ */ (0, import_jsx_runtime287.jsx)("div", { className: "bg-ui-bg-subtle shadow-borders-base align-center flex justify-around rounded-md p-2", children: /* @__PURE__ */ (0, import_jsx_runtime287.jsxs)("div", { className: "text-ui-fg-subtle txt-compact-xsmall flex items-center whitespace-nowrap", children: [
    /* @__PURE__ */ (0, import_jsx_runtime287.jsx)(
      import_ui192.Badge,
      {
        size: "2xsmall",
        className: "txt-compact-xsmall-plus tag-neutral-text mx-1 inline-block truncate",
        children: rule.attribute_label
      },
      "rule-attribute"
    ),
    /* @__PURE__ */ (0, import_jsx_runtime287.jsx)("span", { className: "txt-compact-2xsmall mx-1 inline-block", children: rule.operator_label }),
    /* @__PURE__ */ (0, import_jsx_runtime287.jsx)(
      BadgeListSummary,
      {
        inline: true,
        className: "!txt-compact-small-plus",
        list: rule.field_type === "number" ? [rule.values] : rule.values?.map((v) => v.label)
      }
    )
  ] }) });
}
var import_icons90, import_ui192, import_react_i18next204, import_jsx_runtime287, PromotionConditionsSection;
var init_promotion_conditions_section = __esm({
  "src/routes/promotions/promotion-detail/components/promotion-conditions-section/promotion-conditions-section.tsx"() {
    "use strict";
    import_icons90 = require("@medusajs/icons");
    import_ui192 = require("@medusajs/ui");
    import_react_i18next204 = require("react-i18next");
    init_action_menu2();
    init_badge_list_summary2();
    init_empty_table_content2();
    import_jsx_runtime287 = require("react/jsx-runtime");
    PromotionConditionsSection = ({
      rules,
      ruleType
    }) => {
      const { t: t4 } = (0, import_react_i18next204.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime287.jsxs)(import_ui192.Container, { className: "p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime287.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime287.jsx)("div", { className: "flex flex-col", children: /* @__PURE__ */ (0, import_jsx_runtime287.jsx)(import_ui192.Heading, { children: t4(`promotions.fields.conditions.${ruleType}.title`) }) }),
          /* @__PURE__ */ (0, import_jsx_runtime287.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      icon: /* @__PURE__ */ (0, import_jsx_runtime287.jsx)(import_icons90.PencilSquare, {}),
                      label: t4("actions.edit"),
                      to: `${ruleType}/edit`
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime287.jsxs)("div", { className: "text-ui-fg-subtle flex flex-col gap-2 px-6 pb-4 pt-2", children: [
          !rules.length && /* @__PURE__ */ (0, import_jsx_runtime287.jsx)(
            NoRecords,
            {
              className: "h-[180px]",
              title: t4("general.noRecordsTitle"),
              message: t4("promotions.conditions.list.noRecordsMessage"),
              action: {
                to: `${ruleType}/edit`,
                label: t4("promotions.conditions.add")
              },
              buttonVariant: "transparentIconLeft"
            }
          ),
          rules.map((rule) => /* @__PURE__ */ (0, import_jsx_runtime287.jsx)(RuleBlock, { rule }, `${rule.id}-${rule.attribute}`))
        ] })
      ] });
    };
  }
});

// src/routes/promotions/promotion-detail/components/promotion-conditions-section/index.ts
var init_promotion_conditions_section2 = __esm({
  "src/routes/promotions/promotion-detail/components/promotion-conditions-section/index.ts"() {
    "use strict";
    init_promotion_conditions_section();
  }
});

// src/lib/percentage-helpers.ts
var formatter, formatPercentage;
var init_percentage_helpers = __esm({
  "src/lib/percentage-helpers.ts"() {
    "use strict";
    formatter = new Intl.NumberFormat([], {
      style: "percent",
      minimumFractionDigits: 2
    });
    formatPercentage = (value, isPercentageValue = false) => {
      let val = value || 0;
      if (!isPercentageValue) {
        val = val / 100;
      }
      return formatter.format(val);
    };
  }
});

// src/routes/promotions/promotion-detail/components/promotion-general-section/promotion-general-section.tsx
function getDisplayValue(promotion) {
  const value = promotion.application_method?.value;
  if (!value) {
    return null;
  }
  if (promotion.application_method?.type === "fixed") {
    const currency = promotion.application_method?.currency_code;
    if (!currency) {
      return null;
    }
    return formatCurrency(value, currency);
  } else if (promotion.application_method?.type === "percentage") {
    return formatPercentage(value);
  }
  return null;
}
var import_icons91, import_ui193, import_react_i18next205, import_react_router_dom82, import_jsx_runtime288, PromotionGeneralSection;
var init_promotion_general_section = __esm({
  "src/routes/promotions/promotion-detail/components/promotion-general-section/promotion-general-section.tsx"() {
    "use strict";
    import_icons91 = require("@medusajs/icons");
    import_ui193 = require("@medusajs/ui");
    import_react_i18next205 = require("react-i18next");
    import_react_router_dom82 = require("react-router-dom");
    init_action_menu2();
    init_promotions();
    init_format_currency();
    init_percentage_helpers();
    init_promotions2();
    import_jsx_runtime288 = require("react/jsx-runtime");
    PromotionGeneralSection = ({
      promotion
    }) => {
      const { t: t4 } = (0, import_react_i18next205.useTranslation)();
      const prompt = (0, import_ui193.usePrompt)();
      const navigate = (0, import_react_router_dom82.useNavigate)();
      const { mutateAsync } = useDeletePromotion(promotion.id);
      const handleDelete = async () => {
        const confirm = await prompt({
          title: t4("general.areYouSure"),
          description: t4("promotions.deleteWarning", {
            code: promotion.code
          }),
          verificationInstruction: t4("general.typeToConfirm"),
          verificationText: promotion.code,
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!confirm) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            navigate("/promotions", { replace: true });
          }
        });
      };
      const [color, text] = {
        ["DISABLED" /* DISABLED */]: ["grey", t4("statuses.disabled")],
        ["ACTIVE" /* ACTIVE */]: ["green", t4("statuses.active")],
        ["SCHEDULED" /* SCHEDULED */]: ["orange", t4("statuses.scheduled")],
        ["EXPIRED" /* EXPIRED */]: ["red", t4("statuses.expired")]
      }[getPromotionStatus(promotion)];
      const displayValue = getDisplayValue(promotion);
      return /* @__PURE__ */ (0, import_jsx_runtime288.jsxs)(import_ui193.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime288.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime288.jsx)("div", { className: "flex flex-col", children: /* @__PURE__ */ (0, import_jsx_runtime288.jsx)(import_ui193.Heading, { children: promotion.code }) }),
          /* @__PURE__ */ (0, import_jsx_runtime288.jsxs)("div", { className: "flex items-center gap-x-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime288.jsx)(import_ui193.StatusBadge, { color, children: text }),
            /* @__PURE__ */ (0, import_jsx_runtime288.jsx)(
              ActionMenu,
              {
                groups: [
                  {
                    actions: [
                      {
                        icon: /* @__PURE__ */ (0, import_jsx_runtime288.jsx)(import_icons91.PencilSquare, {}),
                        label: t4("actions.edit"),
                        to: `/promotions/${promotion.id}/edit`
                      }
                    ]
                  },
                  {
                    actions: [
                      {
                        icon: /* @__PURE__ */ (0, import_jsx_runtime288.jsx)(import_icons91.Trash, {}),
                        label: t4("actions.delete"),
                        onClick: handleDelete
                      }
                    ]
                  }
                ]
              }
            )
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime288.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-start px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime288.jsx)(import_ui193.Text, { size: "small", weight: "plus", leading: "compact", children: t4("promotions.fields.campaign") }),
          /* @__PURE__ */ (0, import_jsx_runtime288.jsx)(import_ui193.Text, { size: "small", leading: "compact", className: "text-pretty", children: promotion.is_automatic ? t4("promotions.form.method.automatic.title") : t4("promotions.form.method.code.title") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime288.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime288.jsx)(import_ui193.Text, { size: "small", weight: "plus", leading: "compact", children: t4("fields.code") }),
          /* @__PURE__ */ (0, import_jsx_runtime288.jsx)(import_ui193.Copy, { content: promotion.code, asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime288.jsx)(
            import_ui193.Badge,
            {
              size: "2xsmall",
              rounded: "full",
              className: "cursor-pointer text-pretty",
              children: promotion.code
            }
          ) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime288.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-start px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime288.jsx)(import_ui193.Text, { size: "small", weight: "plus", leading: "compact", children: t4("promotions.fields.type") }),
          /* @__PURE__ */ (0, import_jsx_runtime288.jsx)(import_ui193.Text, { size: "small", leading: "compact", className: "text-pretty capitalize", children: promotion.type })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime288.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-start px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime288.jsx)(import_ui193.Text, { size: "small", weight: "plus", leading: "compact", children: t4("promotions.fields.value") }),
          /* @__PURE__ */ (0, import_jsx_runtime288.jsxs)("div", { className: "flex items-center gap-x-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime288.jsx)(import_ui193.Text, { className: "inline", size: "small", leading: "compact", children: displayValue || "-" }),
            promotion?.application_method?.type === "fixed" && /* @__PURE__ */ (0, import_jsx_runtime288.jsx)(import_ui193.Badge, { size: "2xsmall", rounded: "full", children: promotion?.application_method?.currency_code?.toUpperCase() })
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime288.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-start px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime288.jsx)(import_ui193.Text, { size: "small", weight: "plus", leading: "compact", children: t4("promotions.fields.allocation") }),
          /* @__PURE__ */ (0, import_jsx_runtime288.jsx)(import_ui193.Text, { size: "small", leading: "compact", className: "text-pretty capitalize", children: promotion.application_method?.allocation })
        ] })
      ] });
    };
  }
});

// src/routes/promotions/promotion-detail/components/promotion-general-section/index.ts
var init_promotion_general_section2 = __esm({
  "src/routes/promotions/promotion-detail/components/promotion-general-section/index.ts"() {
    "use strict";
    init_promotion_general_section();
  }
});

// src/routes/promotions/promotion-detail/promotion-detail.tsx
var import_react_router_dom83, import_jsx_runtime289, PromotionDetail;
var init_promotion_detail = __esm({
  "src/routes/promotions/promotion-detail/promotion-detail.tsx"() {
    "use strict";
    import_react_router_dom83 = require("react-router-dom");
    init_skeleton2();
    init_pages();
    init_extensions();
    init_promotions();
    init_campaign_section2();
    init_promotion_conditions_section2();
    init_promotion_general_section2();
    import_jsx_runtime289 = require("react/jsx-runtime");
    PromotionDetail = () => {
      const initialData = (0, import_react_router_dom83.useLoaderData)();
      const { id: id2 } = (0, import_react_router_dom83.useParams)();
      const { promotion, isLoading } = usePromotion(id2, { initialData });
      const query = {};
      if (promotion?.type === "buyget") {
        query.promotion_type = promotion.type;
      }
      const { rules } = usePromotionRules(id2, "rules", query);
      const { rules: targetRules } = usePromotionRules(id2, "target-rules", query);
      const { rules: buyRules } = usePromotionRules(id2, "buy-rules", query);
      const { getWidgets } = useDashboardExtension();
      if (isLoading || !promotion) {
        return /* @__PURE__ */ (0, import_jsx_runtime289.jsx)(TwoColumnPageSkeleton, { mainSections: 3, sidebarSections: 1, showJSON: true });
      }
      return /* @__PURE__ */ (0, import_jsx_runtime289.jsxs)(
        TwoColumnPage,
        {
          data: promotion,
          widgets: {
            after: getWidgets("promotion.details.after"),
            before: getWidgets("promotion.details.before"),
            sideAfter: getWidgets("promotion.details.side.after"),
            sideBefore: getWidgets("promotion.details.side.before")
          },
          hasOutlet: true,
          showJSON: true,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime289.jsxs)(TwoColumnPage.Main, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime289.jsx)(PromotionGeneralSection, { promotion }),
              /* @__PURE__ */ (0, import_jsx_runtime289.jsx)(PromotionConditionsSection, { rules: rules || [], ruleType: "rules" }),
              /* @__PURE__ */ (0, import_jsx_runtime289.jsx)(
                PromotionConditionsSection,
                {
                  rules: targetRules || [],
                  ruleType: "target-rules"
                }
              ),
              promotion.type === "buyget" && /* @__PURE__ */ (0, import_jsx_runtime289.jsx)(
                PromotionConditionsSection,
                {
                  rules: buyRules || [],
                  ruleType: "buy-rules"
                }
              )
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime289.jsx)(TwoColumnPage.Sidebar, { children: /* @__PURE__ */ (0, import_jsx_runtime289.jsx)(CampaignSection, { campaign: promotion.campaign }) })
          ]
        }
      );
    };
  }
});

// src/routes/promotions/promotion-detail/index.ts
var promotion_detail_exports = {};
__export(promotion_detail_exports, {
  Component: () => PromotionDetail,
  loader: () => promotionLoader
});
var init_promotion_detail2 = __esm({
  "src/routes/promotions/promotion-detail/index.ts"() {
    "use strict";
    init_loader9();
    init_promotion_detail();
  }
});

// src/routes/promotions/promotion-edit-details/components/edit-promotion-form/edit-promotion-details-form.tsx
var import_zod47, import_ui194, import_react_hook_form51, import_react_i18next206, zod11, import_jsx_runtime290, EditPromotionSchema2, EditPromotionDetailsForm;
var init_edit_promotion_details_form = __esm({
  "src/routes/promotions/promotion-edit-details/components/edit-promotion-form/edit-promotion-details-form.tsx"() {
    "use strict";
    import_zod47 = require("@hookform/resolvers/zod");
    import_ui194 = require("@medusajs/ui");
    import_react_hook_form51 = require("react-hook-form");
    import_react_i18next206 = require("react-i18next");
    zod11 = __toESM(require("zod"));
    init_form2();
    init_percentage_input2();
    init_modals();
    init_keybound_form2();
    init_promotions();
    init_currencies2();
    import_jsx_runtime290 = require("react/jsx-runtime");
    EditPromotionSchema2 = zod11.object({
      is_automatic: zod11.string().toLowerCase(),
      code: zod11.string().min(1),
      value_type: zod11.enum(["fixed", "percentage"]),
      value: zod11.number(),
      allocation: zod11.enum(["each", "across"])
    });
    EditPromotionDetailsForm = ({
      promotion
    }) => {
      const { t: t4 } = (0, import_react_i18next206.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form51.useForm)({
        defaultValues: {
          is_automatic: promotion.is_automatic.toString(),
          code: promotion.code,
          value: promotion.application_method.value,
          allocation: promotion.application_method.allocation,
          value_type: promotion.application_method.type
        },
        resolver: (0, import_zod47.zodResolver)(EditPromotionSchema2)
      });
      const watchValueType = (0, import_react_hook_form51.useWatch)({
        control: form.control,
        name: "value_type"
      });
      const isFixedValueType = watchValueType === "fixed";
      const { mutateAsync, isPending } = useUpdatePromotion(promotion.id);
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(
          {
            is_automatic: data.is_automatic === "true",
            code: data.code,
            application_method: {
              value: data.value,
              type: data.value_type,
              allocation: data.allocation
            }
          },
          {
            onSuccess: () => {
              handleSuccess();
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime290.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex flex-1 flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(RouteDrawer.Body, { className: "flex flex-1 flex-col gap-y-8 overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime290.jsxs)("div", { className: "flex flex-col gap-y-8", children: [
              /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "is_automatic",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime290.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(Form.Label, { children: t4("promotions.form.method.label") }),
                      /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime290.jsxs)(
                        import_ui194.RadioGroup,
                        {
                          className: "flex-col gap-y-3",
                          ...field,
                          value: field.value,
                          onValueChange: field.onChange,
                          children: [
                            /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(
                              import_ui194.RadioGroup.ChoiceBox,
                              {
                                value: "false",
                                label: t4("promotions.form.method.code.title"),
                                description: t4(
                                  "promotions.form.method.code.description"
                                )
                              }
                            ),
                            /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(
                              import_ui194.RadioGroup.ChoiceBox,
                              {
                                value: "true",
                                label: t4("promotions.form.method.automatic.title"),
                                description: t4(
                                  "promotions.form.method.automatic.description"
                                )
                              }
                            )
                          ]
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime290.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "code",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime290.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(Form.Label, { children: t4("promotions.form.code.title") }),
                        /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(import_ui194.Input, { ...field }) })
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(
                  import_ui194.Text,
                  {
                    size: "small",
                    leading: "compact",
                    className: "text-ui-fg-subtle",
                    children: /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(
                      import_react_i18next206.Trans,
                      {
                        t: t4,
                        i18nKey: "promotions.form.code.description",
                        components: [/* @__PURE__ */ (0, import_jsx_runtime290.jsx)("br", {}, "break")]
                      }
                    )
                  }
                )
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "value_type",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime290.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(Form.Label, { children: t4("promotions.fields.value_type") }),
                      /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime290.jsxs)(
                        import_ui194.RadioGroup,
                        {
                          className: "flex-col gap-y-3",
                          ...field,
                          onValueChange: field.onChange,
                          children: [
                            /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(
                              import_ui194.RadioGroup.ChoiceBox,
                              {
                                value: "fixed",
                                label: t4("promotions.form.value_type.fixed.title"),
                                description: t4(
                                  "promotions.form.value_type.fixed.description"
                                )
                              }
                            ),
                            /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(
                              import_ui194.RadioGroup.ChoiceBox,
                              {
                                value: "percentage",
                                label: t4(
                                  "promotions.form.value_type.percentage.title"
                                ),
                                description: t4(
                                  "promotions.form.value_type.percentage.description"
                                )
                              }
                            )
                          ]
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "value",
                  render: ({ field: { onChange, ...field } }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime290.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(Form.Label, { children: isFixedValueType ? t4("fields.amount") : t4("fields.percentage") }),
                      /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(Form.Control, { children: isFixedValueType ? /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(
                        import_ui194.CurrencyInput,
                        {
                          min: 0,
                          onValueChange: (val) => onChange(val ? parseInt(val) : null),
                          code: "USD",
                          symbol: getCurrencySymbol("USD"),
                          ...field,
                          value: field.value
                        }
                      ) : /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(
                        DeprecatedPercentageInput,
                        {
                          min: 0,
                          max: 100,
                          ...field,
                          value: field.value || "",
                          onChange: (e) => {
                            onChange(
                              e.target.value === "" ? null : parseInt(e.target.value)
                            );
                          }
                        },
                        "amount"
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "allocation",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime290.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(Form.Label, { children: t4("promotions.fields.allocation") }),
                      /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime290.jsxs)(
                        import_ui194.RadioGroup,
                        {
                          className: "flex-col gap-y-3",
                          ...field,
                          onValueChange: field.onChange,
                          children: [
                            /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(
                              import_ui194.RadioGroup.ChoiceBox,
                              {
                                value: "each",
                                label: t4("promotions.form.allocation.each.title"),
                                description: t4(
                                  "promotions.form.allocation.each.description"
                                )
                              }
                            ),
                            /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(
                              import_ui194.RadioGroup.ChoiceBox,
                              {
                                value: "across",
                                label: t4("promotions.form.allocation.across.title"),
                                description: t4(
                                  "promotions.form.allocation.across.description"
                                )
                              }
                            )
                          ]
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              )
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime290.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(import_ui194.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime290.jsx)(import_ui194.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/promotions/promotion-edit-details/components/edit-promotion-form/index.ts
var init_edit_promotion_form = __esm({
  "src/routes/promotions/promotion-edit-details/components/edit-promotion-form/index.ts"() {
    "use strict";
    init_edit_promotion_details_form();
  }
});

// src/routes/promotions/promotion-edit-details/promotion-edit-details.tsx
var import_ui195, import_react_i18next207, import_react_router_dom84, import_jsx_runtime291, PromotionEditDetails;
var init_promotion_edit_details = __esm({
  "src/routes/promotions/promotion-edit-details/promotion-edit-details.tsx"() {
    "use strict";
    import_ui195 = require("@medusajs/ui");
    import_react_i18next207 = require("react-i18next");
    import_react_router_dom84 = require("react-router-dom");
    init_modals();
    init_promotions();
    init_edit_promotion_form();
    import_jsx_runtime291 = require("react/jsx-runtime");
    PromotionEditDetails = () => {
      const { id: id2 } = (0, import_react_router_dom84.useParams)();
      const { t: t4 } = (0, import_react_i18next207.useTranslation)();
      const { promotion, isLoading, isError, error } = usePromotion(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime291.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime291.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime291.jsx)(import_ui195.Heading, { children: t4("promotions.edit.title") }) }),
        !isLoading && promotion && /* @__PURE__ */ (0, import_jsx_runtime291.jsx)(EditPromotionDetailsForm, { promotion })
      ] });
    };
  }
});

// src/routes/promotions/promotion-edit-details/index.ts
var promotion_edit_details_exports = {};
__export(promotion_edit_details_exports, {
  Component: () => PromotionEditDetails
});
var init_promotion_edit_details2 = __esm({
  "src/routes/promotions/promotion-edit-details/index.ts"() {
    "use strict";
    init_promotion_edit_details();
  }
});

// src/routes/promotions/promotion-add-campaign/promotion-add-campaign.tsx
var import_ui196, import_react_i18next208, import_react_router_dom85, import_jsx_runtime292, PromotionAddCampaign;
var init_promotion_add_campaign = __esm({
  "src/routes/promotions/promotion-add-campaign/promotion-add-campaign.tsx"() {
    "use strict";
    import_ui196 = require("@medusajs/ui");
    import_react_i18next208 = require("react-i18next");
    import_react_router_dom85 = require("react-router-dom");
    init_modals();
    init_campaigns();
    init_promotions();
    init_add_campaign_promotion_form2();
    import_jsx_runtime292 = require("react/jsx-runtime");
    PromotionAddCampaign = () => {
      const { id: id2 } = (0, import_react_router_dom85.useParams)();
      const { t: t4 } = (0, import_react_i18next208.useTranslation)();
      const { promotion, isPending, isError, error } = usePromotion(id2);
      let campaignQuery = {};
      if (promotion?.application_method?.currency_code) {
        campaignQuery = {
          budget: {
            currency_code: promotion?.application_method?.currency_code
          }
        };
      }
      const {
        campaigns,
        isPending: areCampaignsLoading,
        isError: isCampaignError,
        error: campaignError
      } = useCampaigns(campaignQuery);
      if (isError || isCampaignError) {
        throw error || campaignError;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime292.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime292.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime292.jsx)(import_ui196.Heading, { children: t4("promotions.campaign.edit.header") }) }),
        !isPending && !areCampaignsLoading && promotion && campaigns && /* @__PURE__ */ (0, import_jsx_runtime292.jsx)(AddCampaignPromotionForm, { promotion, campaigns })
      ] });
    };
  }
});

// src/routes/promotions/promotion-add-campaign/index.ts
var promotion_add_campaign_exports = {};
__export(promotion_add_campaign_exports, {
  Component: () => PromotionAddCampaign
});
var init_promotion_add_campaign2 = __esm({
  "src/routes/promotions/promotion-add-campaign/index.ts"() {
    "use strict";
    init_promotion_add_campaign();
  }
});

// src/routes/promotions/common/edit-rules/components/edit-rules-form/form-schema.ts
var import_i18next5, import_zod48, EditRules;
var init_form_schema2 = __esm({
  "src/routes/promotions/common/edit-rules/components/edit-rules-form/form-schema.ts"() {
    "use strict";
    import_i18next5 = __toESM(require("i18next"));
    import_zod48 = require("zod");
    EditRules = import_zod48.z.object({
      type: import_zod48.z.string().optional(),
      rules: import_zod48.z.array(
        import_zod48.z.object({
          id: import_zod48.z.string().optional(),
          attribute: import_zod48.z.string().min(1, { message: import_i18next5.default.t("promotions.form.required") }),
          operator: import_zod48.z.string().min(1, { message: import_i18next5.default.t("promotions.form.required") }),
          values: import_zod48.z.union([
            import_zod48.z.number().min(1, { message: import_i18next5.default.t("promotions.form.required") }),
            import_zod48.z.string().min(1, { message: import_i18next5.default.t("promotions.form.required") }),
            import_zod48.z.array(import_zod48.z.string()).min(1, { message: import_i18next5.default.t("promotions.form.required") })
          ]),
          required: import_zod48.z.boolean().optional(),
          disguised: import_zod48.z.boolean().optional(),
          field_type: import_zod48.z.string().optional()
        })
      )
    });
  }
});

// src/routes/promotions/common/edit-rules/components/edit-rules-form/edit-rules-form.tsx
var import_zod49, import_ui197, import_react168, import_react_hook_form52, import_react_i18next209, import_jsx_runtime293, EditRulesForm;
var init_edit_rules_form = __esm({
  "src/routes/promotions/common/edit-rules/components/edit-rules-form/edit-rules-form.tsx"() {
    "use strict";
    import_zod49 = require("@hookform/resolvers/zod");
    import_ui197 = require("@medusajs/ui");
    import_react168 = require("react");
    import_react_hook_form52 = require("react-hook-form");
    import_react_i18next209 = require("react-i18next");
    init_modals();
    init_keybound_form2();
    init_rules_form_field2();
    init_form_schema2();
    import_jsx_runtime293 = require("react/jsx-runtime");
    EditRulesForm = ({
      promotion,
      ruleType,
      handleSubmit,
      isSubmitting
    }) => {
      const { t: t4 } = (0, import_react_i18next209.useTranslation)();
      const [rulesToRemove, setRulesToRemove] = (0, import_react168.useState)([]);
      const form = (0, import_react_hook_form52.useForm)({
        defaultValues: { rules: [], type: promotion.type },
        resolver: (0, import_zod49.zodResolver)(EditRules)
      });
      const handleFormSubmit = form.handleSubmit(handleSubmit(rulesToRemove));
      return /* @__PURE__ */ (0, import_jsx_runtime293.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime293.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleFormSubmit,
          className: "flex h-full flex-col",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime293.jsx)(RouteDrawer.Body, { children: /* @__PURE__ */ (0, import_jsx_runtime293.jsx)(
              RulesFormField,
              {
                form,
                ruleType,
                setRulesToRemove,
                rulesToRemove,
                promotion
              }
            ) }),
            /* @__PURE__ */ (0, import_jsx_runtime293.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime293.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime293.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime293.jsx)(import_ui197.Button, { size: "small", variant: "secondary", disabled: isSubmitting, children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime293.jsx)(import_ui197.Button, { size: "small", type: "submit", isLoading: isSubmitting, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/promotions/common/edit-rules/components/edit-rules-form/index.ts
var init_edit_rules_form2 = __esm({
  "src/routes/promotions/common/edit-rules/components/edit-rules-form/index.ts"() {
    "use strict";
    init_edit_rules_form();
  }
});

// src/routes/promotions/common/edit-rules/components/edit-rules-wrapper/utils.ts
var getRuleValue;
var init_utils10 = __esm({
  "src/routes/promotions/common/edit-rules/components/edit-rules-wrapper/utils.ts"() {
    "use strict";
    getRuleValue = (rule) => {
      if (rule.field_type === "number") {
        return parseInt(rule.values);
      }
      return rule.values;
    };
  }
});

// src/routes/promotions/common/edit-rules/components/edit-rules-wrapper/edit-rules-wrapper.tsx
var import_jsx_runtime294, EditRulesWrapper;
var init_edit_rules_wrapper = __esm({
  "src/routes/promotions/common/edit-rules/components/edit-rules-wrapper/edit-rules-wrapper.tsx"() {
    "use strict";
    init_modals();
    init_promotions();
    init_edit_rules_form2();
    init_utils10();
    import_jsx_runtime294 = require("react/jsx-runtime");
    EditRulesWrapper = ({
      promotion,
      rules,
      ruleType
    }) => {
      const { handleSuccess } = useRouteModal();
      const { mutateAsync: updatePromotion } = useUpdatePromotion(promotion.id);
      const { mutateAsync: addPromotionRules } = usePromotionAddRules(
        promotion.id,
        ruleType
      );
      const { mutateAsync: removePromotionRules } = usePromotionRemoveRules(
        promotion.id,
        ruleType
      );
      const { mutateAsync: updatePromotionRules, isPending } = usePromotionUpdateRules(promotion.id, ruleType);
      const handleSubmit = (rulesToRemove) => {
        return async function(data) {
          const applicationMethodData = {};
          const { rules: allRules = [] } = data;
          const disguisedRules = allRules.filter((rule) => rule.disguised);
          const disguisedRulesToRemove = rulesToRemove?.filter((r) => r.disguised) || [];
          for (const rule of disguisedRules) {
            applicationMethodData[rule.attribute] = getRuleValue(rule);
          }
          for (const rule of disguisedRulesToRemove) {
            applicationMethodData[rule.attribute] = null;
          }
          const rulesData = allRules.filter((rule) => !rule.disguised);
          const rulesToCreate = rulesData.filter(
            (rule) => !("id" in rule)
          );
          const rulesToUpdate = rulesData.filter(
            (rule) => typeof rule.id === "string"
          );
          if (Object.keys(applicationMethodData).length) {
            await updatePromotion({
              application_method: applicationMethodData
            });
          }
          rulesToCreate.length && await addPromotionRules({
            rules: rulesToCreate.map((rule) => {
              return {
                attribute: rule.attribute,
                operator: rule.operator,
                values: rule.values
              };
            })
          });
          rulesToRemove?.length && await removePromotionRules({
            rule_ids: rulesToRemove.map((r) => r.id).filter(Boolean)
          });
          rulesToUpdate.length && await updatePromotionRules({
            rules: rulesToUpdate.map((rule) => {
              return {
                id: rule.id,
                attribute: rule.attribute,
                operator: rule.operator,
                values: rule.values
              };
            })
          });
          handleSuccess();
        };
      };
      return /* @__PURE__ */ (0, import_jsx_runtime294.jsx)(
        EditRulesForm,
        {
          promotion,
          rules,
          ruleType,
          handleSubmit,
          isSubmitting: isPending
        }
      );
    };
  }
});

// src/routes/promotions/common/edit-rules/components/edit-rules-wrapper/index.ts
var init_edit_rules_wrapper2 = __esm({
  "src/routes/promotions/common/edit-rules/components/edit-rules-wrapper/index.ts"() {
    "use strict";
    init_edit_rules_wrapper();
  }
});

// src/routes/promotions/common/edit-rules/edit-rules.tsx
var import_ui198, import_react_i18next210, import_react_router_dom86, import_jsx_runtime295, EditRules2;
var init_edit_rules = __esm({
  "src/routes/promotions/common/edit-rules/edit-rules.tsx"() {
    "use strict";
    import_ui198 = require("@medusajs/ui");
    import_react_i18next210 = require("react-i18next");
    import_react_router_dom86 = require("react-router-dom");
    init_modals();
    init_promotions();
    init_edit_rules_wrapper2();
    import_jsx_runtime295 = require("react/jsx-runtime");
    EditRules2 = () => {
      const params2 = (0, import_react_router_dom86.useParams)();
      const allowedParams = [
        "rules" /* RULES */,
        "buy-rules" /* BUY_RULES */,
        "target-rules" /* TARGET_RULES */
      ];
      if (!allowedParams.includes(params2.ruleType)) {
        throw "invalid page";
      }
      const { t: t4 } = (0, import_react_i18next210.useTranslation)();
      const ruleType = params2.ruleType;
      const id2 = params2.id;
      const rules = [];
      const { promotion, isPending: isLoading, isError, error } = usePromotion(id2);
      if (promotion) {
        if (ruleType === "rules" /* RULES */) {
          rules.push(...promotion.rules || []);
        } else if (ruleType === "target-rules" /* TARGET_RULES */) {
          rules.push(...promotion?.application_method?.target_rules || []);
        } else if (ruleType === "buy-rules" /* BUY_RULES */) {
          rules.push(...promotion.application_method?.buy_rules || []);
        }
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime295.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime295.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime295.jsx)(import_ui198.Heading, { children: t4(`promotions.edit.${ruleType}.title`) }) }),
        !isLoading && promotion && /* @__PURE__ */ (0, import_jsx_runtime295.jsx)(
          EditRulesWrapper,
          {
            promotion,
            rules,
            ruleType
          }
        )
      ] });
    };
  }
});

// src/routes/promotions/common/edit-rules/index.ts
var edit_rules_exports = {};
__export(edit_rules_exports, {
  Component: () => EditRules2
});
var init_edit_rules2 = __esm({
  "src/routes/promotions/common/edit-rules/index.ts"() {
    "use strict";
    init_edit_rules();
  }
});

// src/hooks/table/columns/use-campaign-table-columns.tsx
var import_react_table25, import_react169, import_react_i18next211, import_jsx_runtime296, columnHelper24, useCampaignTableColumns;
var init_use_campaign_table_columns = __esm({
  "src/hooks/table/columns/use-campaign-table-columns.tsx"() {
    "use strict";
    import_react_table25 = require("@tanstack/react-table");
    import_react169 = require("react");
    import_react_i18next211 = require("react-i18next");
    init_date_cell2();
    init_text_cell2();
    init_description_cell2();
    init_name_cell2();
    import_jsx_runtime296 = require("react/jsx-runtime");
    columnHelper24 = (0, import_react_table25.createColumnHelper)();
    useCampaignTableColumns = () => {
      const { t: t4 } = (0, import_react_i18next211.useTranslation)();
      return (0, import_react169.useMemo)(
        () => [
          columnHelper24.accessor("name", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime296.jsx)(NameHeader, {}),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime296.jsx)(NameCell, { name: getValue2() })
          }),
          columnHelper24.accessor("description", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime296.jsx)(DescriptionHeader, {}),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime296.jsx)(DescriptionCell, { description: getValue2() })
          }),
          columnHelper24.accessor("campaign_identifier", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime296.jsx)(TextHeader, { text: t4("campaigns.fields.identifier") }),
            cell: ({ getValue: getValue2 }) => {
              const value = getValue2();
              return /* @__PURE__ */ (0, import_jsx_runtime296.jsx)(TextCell, { text: value });
            }
          }),
          columnHelper24.accessor("starts_at", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime296.jsx)(TextHeader, { text: t4("campaigns.fields.start_date") }),
            cell: ({ getValue: getValue2 }) => {
              const value = getValue2();
              if (!value) {
                return;
              }
              const date3 = new Date(value);
              return /* @__PURE__ */ (0, import_jsx_runtime296.jsx)(DateCell, { date: date3 });
            }
          }),
          columnHelper24.accessor("ends_at", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime296.jsx)(TextHeader, { text: t4("campaigns.fields.end_date") }),
            cell: ({ getValue: getValue2 }) => {
              const value = getValue2();
              if (!value) {
                return;
              }
              const date3 = new Date(value);
              return /* @__PURE__ */ (0, import_jsx_runtime296.jsx)(DateCell, { date: date3 });
            }
          })
        ],
        [t4]
      );
    };
  }
});

// src/routes/campaigns/campaign-list/components/campaign-list-table.tsx
var import_icons92, import_ui199, import_react_query55, import_react_table26, import_react170, import_react_i18next212, import_react_router_dom87, import_jsx_runtime297, PAGE_SIZE17, CampaignListTable, CampaignActions, columnHelper25, useColumns9;
var init_campaign_list_table = __esm({
  "src/routes/campaigns/campaign-list/components/campaign-list-table.tsx"() {
    "use strict";
    import_icons92 = require("@medusajs/icons");
    import_ui199 = require("@medusajs/ui");
    import_react_query55 = require("@tanstack/react-query");
    import_react_table26 = require("@tanstack/react-table");
    import_react170 = require("react");
    import_react_i18next212 = require("react-i18next");
    import_react_router_dom87 = require("react-router-dom");
    init_action_menu2();
    init_data_table2();
    init_campaigns();
    init_use_campaign_table_columns();
    init_use_campaign_table_query();
    init_use_data_table();
    import_jsx_runtime297 = require("react/jsx-runtime");
    PAGE_SIZE17 = 20;
    CampaignListTable = () => {
      const { t: t4 } = (0, import_react_i18next212.useTranslation)();
      const { raw, searchParams } = useCampaignTableQuery({ pageSize: PAGE_SIZE17 });
      const {
        campaigns,
        count: count3,
        isPending: isLoading,
        isError,
        error
      } = useCampaigns(searchParams, {
        placeholderData: import_react_query55.keepPreviousData
      });
      const columns = useColumns9();
      const { table } = useDataTable({
        data: campaigns ?? [],
        columns,
        count: count3,
        enablePagination: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE17
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime297.jsxs)(import_ui199.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime297.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime297.jsx)(import_ui199.Heading, { level: "h2", children: t4("campaigns.domain") }),
          /* @__PURE__ */ (0, import_jsx_runtime297.jsx)(import_react_router_dom87.Link, { to: "/campaigns/create", children: /* @__PURE__ */ (0, import_jsx_runtime297.jsx)(import_ui199.Button, { size: "small", variant: "secondary", children: t4("actions.create") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime297.jsx)(
          DataTable,
          {
            table,
            columns,
            count: count3,
            pageSize: PAGE_SIZE17,
            pagination: true,
            search: true,
            navigateTo: (row) => row.id,
            isLoading,
            queryObject: raw,
            orderBy: [
              { key: "name", label: t4("fields.name") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ]
          }
        )
      ] });
    };
    CampaignActions = ({ campaign }) => {
      const { t: t4 } = (0, import_react_i18next212.useTranslation)();
      const prompt = (0, import_ui199.usePrompt)();
      const { mutateAsync } = useDeleteCampaign(campaign.id);
      const handleDelete = async () => {
        const confirm = await prompt({
          title: t4("general.areYouSure"),
          description: t4("campaigns.deleteCampaignWarning", {
            name: campaign.name
          }),
          verificationInstruction: t4("general.typeToConfirm"),
          verificationText: campaign.name,
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!confirm) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            import_ui199.toast.success(
              t4("campaigns.delete.successToast", { name: campaign.name })
            );
          },
          onError: (e) => {
            import_ui199.toast.error(e.message);
          }
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime297.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime297.jsx)(import_icons92.PencilSquare, {}),
                  label: t4("actions.edit"),
                  to: `/campaigns/${campaign.id}/edit`
                }
              ]
            },
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime297.jsx)(import_icons92.Trash, {}),
                  label: t4("actions.delete"),
                  onClick: handleDelete
                }
              ]
            }
          ]
        }
      );
    };
    columnHelper25 = (0, import_react_table26.createColumnHelper)();
    useColumns9 = () => {
      const base = useCampaignTableColumns();
      return (0, import_react170.useMemo)(
        () => [
          ...base,
          columnHelper25.display({
            id: "actions",
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime297.jsx)(CampaignActions, { campaign: row.original });
            }
          })
        ],
        [base]
      );
    };
  }
});

// src/routes/campaigns/campaign-list/campaign-list.tsx
var import_jsx_runtime298, CampaignList;
var init_campaign_list = __esm({
  "src/routes/campaigns/campaign-list/campaign-list.tsx"() {
    "use strict";
    init_pages();
    init_extensions();
    init_campaign_list_table();
    import_jsx_runtime298 = require("react/jsx-runtime");
    CampaignList = () => {
      const { getWidgets } = useDashboardExtension();
      return /* @__PURE__ */ (0, import_jsx_runtime298.jsx)(
        SingleColumnPage,
        {
          widgets: {
            after: getWidgets("campaign.list.after"),
            before: getWidgets("campaign.list.before")
          },
          hasOutlet: true,
          children: /* @__PURE__ */ (0, import_jsx_runtime298.jsx)(CampaignListTable, {})
        }
      );
    };
  }
});

// src/routes/campaigns/campaign-list/index.ts
var campaign_list_exports = {};
__export(campaign_list_exports, {
  Component: () => CampaignList
});
var init_campaign_list2 = __esm({
  "src/routes/campaigns/campaign-list/index.ts"() {
    "use strict";
    init_campaign_list();
  }
});

// src/routes/campaigns/campaign-create/campaign-create.tsx
var import_jsx_runtime299, CampaignCreate;
var init_campaign_create = __esm({
  "src/routes/campaigns/campaign-create/campaign-create.tsx"() {
    "use strict";
    init_modals();
    init_create_campaign_form2();
    import_jsx_runtime299 = require("react/jsx-runtime");
    CampaignCreate = () => {
      return /* @__PURE__ */ (0, import_jsx_runtime299.jsx)(RouteFocusModal, { children: /* @__PURE__ */ (0, import_jsx_runtime299.jsx)(CreateCampaignForm, {}) });
    };
  }
});

// src/routes/campaigns/campaign-create/index.ts
var campaign_create_exports = {};
__export(campaign_create_exports, {
  Component: () => CampaignCreate
});
var init_campaign_create2 = __esm({
  "src/routes/campaigns/campaign-create/index.ts"() {
    "use strict";
    init_campaign_create();
  }
});

// src/routes/campaigns/campaign-detail/components/campaign-budget/campaign-budget.tsx
var import_icons93, import_ui200, import_react_i18next213, import_jsx_runtime300, CampaignBudget;
var init_campaign_budget = __esm({
  "src/routes/campaigns/campaign-detail/components/campaign-budget/campaign-budget.tsx"() {
    "use strict";
    import_icons93 = require("@medusajs/icons");
    import_ui200 = require("@medusajs/ui");
    import_react_i18next213 = require("react-i18next");
    init_action_menu2();
    import_jsx_runtime300 = require("react/jsx-runtime");
    CampaignBudget = ({ campaign }) => {
      const { t: t4 } = (0, import_react_i18next213.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime300.jsxs)(import_ui200.Container, { className: "flex flex-col gap-y-4 px-6 py-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime300.jsxs)("div", { className: "flex justify-between", children: [
          /* @__PURE__ */ (0, import_jsx_runtime300.jsxs)("div", { className: "flex-grow", children: [
            /* @__PURE__ */ (0, import_jsx_runtime300.jsx)("div", { className: "bg-ui-bg-base shadow-borders-base float-left flex size-7 items-center justify-center rounded-md", children: /* @__PURE__ */ (0, import_jsx_runtime300.jsx)("div", { className: "bg-ui-bg-component flex size-6 items-center justify-center rounded-[4px]", children: /* @__PURE__ */ (0, import_jsx_runtime300.jsx)(import_icons93.ChartPie, { className: "text-ui-fg-subtle" }) }) }),
            /* @__PURE__ */ (0, import_jsx_runtime300.jsx)(
              import_ui200.Heading,
              {
                className: "text-ui-fg-subtle ml-10 mt-[1.5px] font-normal",
                level: "h3",
                children: t4("campaigns.fields.budget_limit")
              }
            )
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime300.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      icon: /* @__PURE__ */ (0, import_jsx_runtime300.jsx)(import_icons93.PencilSquare, {}),
                      label: t4("actions.edit"),
                      to: `edit-budget`
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime300.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime300.jsx)(
          import_ui200.Text,
          {
            className: "text-ui-fg-subtle border-ui-border-strong border-l-4 pl-3",
            size: "small",
            leading: "compact",
            children: /* @__PURE__ */ (0, import_jsx_runtime300.jsx)(
              import_react_i18next213.Trans,
              {
                i18nKey: "campaigns.totalSpend",
                values: {
                  amount: campaign?.budget?.limit || "no limit",
                  currency: campaign?.budget?.type === "spend" && campaign?.budget.limit ? campaign.budget?.currency_code : ""
                },
                components: [
                  /* @__PURE__ */ (0, import_jsx_runtime300.jsx)(
                    "span",
                    {
                      className: "text-ui-fg-base txt-compact-medium-plus text-lg"
                    },
                    "amount"
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime300.jsx)(
                    "span",
                    {
                      className: "text-ui-fg-base txt-compact-medium-plus text-lg"
                    },
                    "currency"
                  )
                ]
              }
            )
          }
        ) })
      ] });
    };
  }
});

// src/routes/campaigns/campaign-detail/components/campaign-budget/index.ts
var init_campaign_budget2 = __esm({
  "src/routes/campaigns/campaign-detail/components/campaign-budget/index.ts"() {
    "use strict";
    init_campaign_budget();
  }
});

// src/routes/campaigns/common/utils/campaign-status.ts
function campaignStatus(campaign) {
  if (campaign.ends_at) {
    if ((0, import_date_fns6.isBefore)(new Date(campaign.ends_at), /* @__PURE__ */ new Date())) {
      return "expired";
    }
  }
  if (campaign.starts_at) {
    if ((0, import_date_fns6.isAfter)(new Date(campaign.starts_at), /* @__PURE__ */ new Date())) {
      return "scheduled";
    }
  }
  return "active";
}
var import_date_fns6, statusColor;
var init_campaign_status = __esm({
  "src/routes/campaigns/common/utils/campaign-status.ts"() {
    "use strict";
    import_date_fns6 = require("date-fns");
    statusColor = (status) => {
      switch (status) {
        case "expired":
          return "red";
        case "scheduled":
          return "orange";
        case "active":
          return "green";
        default:
          return "grey";
      }
    };
  }
});

// src/routes/campaigns/campaign-detail/components/campaign-general-section/campaign-general-section.tsx
var import_icons94, import_ui201, import_react_i18next214, import_react_router_dom88, import_jsx_runtime301, CampaignGeneralSection;
var init_campaign_general_section = __esm({
  "src/routes/campaigns/campaign-detail/components/campaign-general-section/campaign-general-section.tsx"() {
    "use strict";
    import_icons94 = require("@medusajs/icons");
    import_ui201 = require("@medusajs/ui");
    import_react_i18next214 = require("react-i18next");
    import_react_router_dom88 = require("react-router-dom");
    init_action_menu2();
    init_campaigns();
    init_currencies2();
    init_campaign_status();
    import_jsx_runtime301 = require("react/jsx-runtime");
    CampaignGeneralSection = ({
      campaign
    }) => {
      const { t: t4 } = (0, import_react_i18next214.useTranslation)();
      const prompt = (0, import_ui201.usePrompt)();
      const navigate = (0, import_react_router_dom88.useNavigate)();
      const { mutateAsync } = useDeleteCampaign(campaign.id);
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("campaigns.delete.title"),
          description: t4("campaigns.delete.description", {
            name: campaign.name
          }),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            import_ui201.toast.success(
              t4("campaigns.delete.successToast", {
                name: campaign.name
              })
            );
            navigate("/campaigns", { replace: true });
          },
          onError: (error) => {
            import_ui201.toast.error(error.message);
          }
        });
      };
      const status = campaignStatus(campaign);
      return /* @__PURE__ */ (0, import_jsx_runtime301.jsxs)(import_ui201.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime301.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime301.jsx)(import_ui201.Heading, { children: campaign.name }),
          /* @__PURE__ */ (0, import_jsx_runtime301.jsxs)("div", { className: "flex items-center gap-x-4", children: [
            /* @__PURE__ */ (0, import_jsx_runtime301.jsx)(import_ui201.StatusBadge, { color: statusColor(status), children: t4(`campaigns.status.${status}`) }),
            /* @__PURE__ */ (0, import_jsx_runtime301.jsx)(
              ActionMenu,
              {
                groups: [
                  {
                    actions: [
                      {
                        icon: /* @__PURE__ */ (0, import_jsx_runtime301.jsx)(import_icons94.PencilSquare, {}),
                        label: t4("actions.edit"),
                        to: `/campaigns/${campaign.id}/edit`
                      }
                    ]
                  },
                  {
                    actions: [
                      {
                        icon: /* @__PURE__ */ (0, import_jsx_runtime301.jsx)(import_icons94.Trash, {}),
                        label: t4("actions.delete"),
                        onClick: handleDelete
                      }
                    ]
                  }
                ]
              }
            )
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime301.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime301.jsx)(import_ui201.Text, { size: "small", leading: "compact", weight: "plus", children: t4("campaigns.fields.identifier") }),
          /* @__PURE__ */ (0, import_jsx_runtime301.jsx)(import_ui201.Text, { size: "small", leading: "compact", children: campaign.campaign_identifier })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime301.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime301.jsx)(import_ui201.Text, { size: "small", leading: "compact", weight: "plus", children: t4("fields.description") }),
          /* @__PURE__ */ (0, import_jsx_runtime301.jsx)(import_ui201.Text, { size: "small", leading: "compact", children: campaign.description || "-" })
        ] }),
        campaign?.budget && campaign.budget.type === "spend" && /* @__PURE__ */ (0, import_jsx_runtime301.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime301.jsx)(import_ui201.Text, { size: "small", leading: "compact", weight: "plus", children: t4("fields.currency") }),
          /* @__PURE__ */ (0, import_jsx_runtime301.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime301.jsx)(import_ui201.Badge, { size: "xsmall", children: campaign?.budget.currency_code }),
            /* @__PURE__ */ (0, import_jsx_runtime301.jsx)(import_ui201.Text, { className: "inline pl-3", size: "small", leading: "compact", children: currencies[campaign?.budget.currency_code?.toUpperCase()]?.name })
          ] })
        ] })
      ] });
    };
  }
});

// src/routes/campaigns/campaign-detail/components/campaign-general-section/index.ts
var init_campaign_general_section2 = __esm({
  "src/routes/campaigns/campaign-detail/components/campaign-general-section/index.ts"() {
    "use strict";
    init_campaign_general_section();
  }
});

// src/routes/campaigns/campaign-detail/components/campaign-promotion-section/campaign-promotion-section.tsx
var import_icons95, import_ui202, import_react_table27, import_react171, import_react_i18next215, import_react_router_dom89, import_jsx_runtime302, PAGE_SIZE18, CampaignPromotionSection, PromotionActions2, columnHelper26, useColumns10;
var init_campaign_promotion_section = __esm({
  "src/routes/campaigns/campaign-detail/components/campaign-promotion-section/campaign-promotion-section.tsx"() {
    "use strict";
    import_icons95 = require("@medusajs/icons");
    import_ui202 = require("@medusajs/ui");
    import_react_table27 = require("@tanstack/react-table");
    import_react171 = require("react");
    import_react_i18next215 = require("react-i18next");
    import_react_router_dom89 = require("react-router-dom");
    init_action_menu2();
    init_data_table2();
    init_campaigns();
    init_promotions();
    init_use_promotion_table_columns();
    init_use_promotion_table_filters();
    init_use_promotion_table_query();
    init_use_data_table();
    import_jsx_runtime302 = require("react/jsx-runtime");
    PAGE_SIZE18 = 10;
    CampaignPromotionSection = ({
      campaign
    }) => {
      const [rowSelection, setRowSelection] = (0, import_react171.useState)({});
      const { t: t4 } = (0, import_react_i18next215.useTranslation)();
      const prompt = (0, import_ui202.usePrompt)();
      const columns = useColumns10();
      const filters = usePromotionTableFilters();
      const { searchParams, raw } = usePromotionTableQuery({ pageSize: PAGE_SIZE18 });
      const { promotions, count: count3, isLoading, isError, error } = usePromotions({
        ...searchParams,
        campaign_id: campaign.id
      });
      const { table } = useDataTable({
        data: promotions ?? [],
        columns,
        count: count3,
        getRowId: (row) => row.id,
        enablePagination: true,
        enableRowSelection: true,
        pageSize: PAGE_SIZE18,
        rowSelection: {
          state: rowSelection,
          updater: setRowSelection
        },
        meta: { campaignId: campaign.id }
      });
      if (isError) {
        throw error;
      }
      const { mutateAsync } = useAddOrRemoveCampaignPromotions(campaign.id);
      const handleRemove = async () => {
        const keys = Object.keys(rowSelection);
        const res = await prompt({
          title: t4("campaigns.promotions.remove.title", { count: keys.length }),
          description: t4("campaigns.promotions.remove.description", {
            count: keys.length
          }),
          confirmText: t4("actions.continue"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(
          { remove: keys },
          { onSuccess: () => setRowSelection({}) }
        );
      };
      return /* @__PURE__ */ (0, import_jsx_runtime302.jsxs)(import_ui202.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime302.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime302.jsx)(import_ui202.Heading, { level: "h2", children: t4("promotions.domain") }),
          /* @__PURE__ */ (0, import_jsx_runtime302.jsx)(import_react_router_dom89.Link, { to: `/campaigns/${campaign.id}/add-promotions`, children: /* @__PURE__ */ (0, import_jsx_runtime302.jsx)(import_ui202.Button, { variant: "secondary", size: "small", children: t4("general.add") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime302.jsx)(
          DataTable,
          {
            table,
            columns,
            pageSize: PAGE_SIZE18,
            isLoading,
            count: count3,
            navigateTo: (row) => `/promotions/${row.id}`,
            filters,
            search: true,
            pagination: true,
            orderBy: [
              { key: "code", label: t4("fields.code") },
              { key: "type", label: t4("fields.type") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            queryObject: raw,
            commands: [
              {
                action: handleRemove,
                label: t4("actions.remove"),
                shortcut: "r"
              }
            ],
            noRecords: {
              message: t4("campaigns.promotions.list.noRecordsMessage")
            }
          }
        )
      ] });
    };
    PromotionActions2 = ({
      promotion,
      campaignId
    }) => {
      const { t: t4 } = (0, import_react_i18next215.useTranslation)();
      const { mutateAsync } = useAddOrRemoveCampaignPromotions(campaignId);
      const prompt = (0, import_ui202.usePrompt)();
      const handleRemove = async () => {
        const res = await prompt({
          title: t4("campaigns.promotions.remove.title", {
            count: 1
          }),
          description: t4("campaigns.promotions.remove.description", {
            count: 1
          }),
          confirmText: t4("actions.continue"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync({
          remove: [promotion.id]
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime302.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime302.jsx)(import_icons95.PencilSquare, {}),
                  label: t4("actions.edit"),
                  to: `/promotions/${promotion.id}/edit`
                }
              ]
            },
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime302.jsx)(import_icons95.Trash, {}),
                  label: t4("actions.remove"),
                  onClick: handleRemove
                }
              ]
            }
          ]
        }
      );
    };
    columnHelper26 = (0, import_react_table27.createColumnHelper)();
    useColumns10 = () => {
      const columns = usePromotionTableColumns();
      return (0, import_react171.useMemo)(
        () => [
          columnHelper26.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime302.jsx)(
                import_ui202.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime302.jsx)(
                import_ui202.Checkbox,
                {
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...columns,
          columnHelper26.display({
            id: "actions",
            cell: ({ row, table }) => {
              const { campaignId } = table.options.meta;
              return /* @__PURE__ */ (0, import_jsx_runtime302.jsx)(
                PromotionActions2,
                {
                  promotion: row.original,
                  campaignId
                }
              );
            }
          })
        ],
        [columns]
      );
    };
  }
});

// src/routes/campaigns/campaign-detail/components/campaign-promotion-section/index.ts
var init_campaign_promotion_section2 = __esm({
  "src/routes/campaigns/campaign-detail/components/campaign-promotion-section/index.ts"() {
    "use strict";
    init_campaign_promotion_section();
  }
});

// src/routes/campaigns/campaign-detail/components/campaign-spend/campaign-spend.tsx
var import_icons96, import_ui203, import_react_i18next216, import_jsx_runtime303, CampaignSpend;
var init_campaign_spend = __esm({
  "src/routes/campaigns/campaign-detail/components/campaign-spend/campaign-spend.tsx"() {
    "use strict";
    import_icons96 = require("@medusajs/icons");
    import_ui203 = require("@medusajs/ui");
    import_react_i18next216 = require("react-i18next");
    import_jsx_runtime303 = require("react/jsx-runtime");
    CampaignSpend = ({ campaign }) => {
      const { t: t4 } = (0, import_react_i18next216.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime303.jsxs)(import_ui203.Container, { className: "flex flex-col gap-y-4 px-6 py-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime303.jsxs)("div", { className: "mb-2 grid grid-cols-[28px_1fr] items-center gap-x-3", children: [
          /* @__PURE__ */ (0, import_jsx_runtime303.jsx)("div", { className: "bg-ui-bg-base shadow-borders-base flex size-7 items-center justify-center rounded-md", children: /* @__PURE__ */ (0, import_jsx_runtime303.jsx)("div", { className: "bg-ui-bg-component flex size-6 items-center justify-center rounded-[4px]", children: /* @__PURE__ */ (0, import_jsx_runtime303.jsx)(import_icons96.CurrencyDollar, { className: "text-ui-fg-subtle" }) }) }),
          /* @__PURE__ */ (0, import_jsx_runtime303.jsx)(import_ui203.Heading, { level: "h3", className: "text-ui-fg-subtle font-normal", children: campaign.budget?.type === "spend" ? t4("campaigns.fields.total_spend") : t4("campaigns.fields.total_used") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime303.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime303.jsx)(
          import_ui203.Text,
          {
            className: "text-ui-fg-subtle border-ui-border-strong border-l-4 pl-3",
            size: "small",
            leading: "compact",
            children: /* @__PURE__ */ (0, import_jsx_runtime303.jsx)(
              import_react_i18next216.Trans,
              {
                i18nKey: "campaigns.totalSpend",
                values: {
                  amount: campaign?.budget?.used || 0,
                  currency: campaign?.budget?.type === "spend" ? campaign?.budget?.currency_code : ""
                },
                components: [
                  /* @__PURE__ */ (0, import_jsx_runtime303.jsx)(
                    "span",
                    {
                      className: "text-ui-fg-base txt-compact-medium-plus text-lg"
                    },
                    "amount"
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime303.jsx)(
                    "span",
                    {
                      className: "text-ui-fg-base txt-compact-medium-plus text-lg"
                    },
                    "currency"
                  )
                ]
              }
            )
          }
        ) })
      ] });
    };
  }
});

// src/routes/campaigns/campaign-detail/components/campaign-spend/index.ts
var init_campaign_spend2 = __esm({
  "src/routes/campaigns/campaign-detail/components/campaign-spend/index.ts"() {
    "use strict";
    init_campaign_spend();
  }
});

// src/routes/campaigns/campaign-detail/components/campaign-configuration-section/campaign-configuration-section.tsx
var import_ui204, import_icons97, import_react_i18next217, import_jsx_runtime304, CampaignConfigurationSection;
var init_campaign_configuration_section = __esm({
  "src/routes/campaigns/campaign-detail/components/campaign-configuration-section/campaign-configuration-section.tsx"() {
    "use strict";
    import_ui204 = require("@medusajs/ui");
    import_icons97 = require("@medusajs/icons");
    import_react_i18next217 = require("react-i18next");
    init_action_menu2();
    init_date_range_display2();
    import_jsx_runtime304 = require("react/jsx-runtime");
    CampaignConfigurationSection = ({
      campaign
    }) => {
      const { t: t4 } = (0, import_react_i18next217.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime304.jsxs)(import_ui204.Container, { className: "flex flex-col gap-y-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime304.jsxs)("div", { className: "flex items-center justify-between", children: [
          /* @__PURE__ */ (0, import_jsx_runtime304.jsx)(import_ui204.Heading, { level: "h2", children: t4("campaigns.configuration.header") }),
          /* @__PURE__ */ (0, import_jsx_runtime304.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      label: t4("actions.edit"),
                      icon: /* @__PURE__ */ (0, import_jsx_runtime304.jsx)(import_icons97.PencilSquare, {}),
                      to: "configuration"
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime304.jsx)(
          DateRangeDisplay,
          {
            startsAt: campaign.starts_at,
            endsAt: campaign.ends_at,
            showTime: true
          }
        )
      ] });
    };
  }
});

// src/routes/campaigns/campaign-detail/components/campaign-configuration-section/index.ts
var init_campaign_configuration_section2 = __esm({
  "src/routes/campaigns/campaign-detail/components/campaign-configuration-section/index.ts"() {
    "use strict";
    init_campaign_configuration_section();
  }
});

// src/routes/campaigns/campaign-detail/campaign-detail.tsx
var import_react_router_dom90, import_jsx_runtime305, CampaignDetail;
var init_campaign_detail = __esm({
  "src/routes/campaigns/campaign-detail/campaign-detail.tsx"() {
    "use strict";
    import_react_router_dom90 = require("react-router-dom");
    init_campaigns();
    init_campaign_budget2();
    init_campaign_general_section2();
    init_campaign_promotion_section2();
    init_campaign_spend2();
    init_skeleton2();
    init_pages();
    init_extensions();
    init_campaign_configuration_section2();
    import_jsx_runtime305 = require("react/jsx-runtime");
    CampaignDetail = () => {
      const initialData = (0, import_react_router_dom90.useLoaderData)();
      const { id: id2 } = (0, import_react_router_dom90.useParams)();
      const { campaign, isLoading, isError, error } = useCampaign(
        id2,
        { fields: "+promotions.id" },
        { initialData }
      );
      const { getWidgets } = useDashboardExtension();
      if (isLoading || !campaign) {
        return /* @__PURE__ */ (0, import_jsx_runtime305.jsx)(
          TwoColumnPageSkeleton,
          {
            mainSections: 2,
            sidebarSections: 3,
            showJSON: true,
            showMetadata: true
          }
        );
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime305.jsxs)(
        TwoColumnPage,
        {
          widgets: {
            after: getWidgets("campaign.details.after"),
            before: getWidgets("campaign.details.before"),
            sideAfter: getWidgets("campaign.details.side.after"),
            sideBefore: getWidgets("campaign.details.side.before")
          },
          hasOutlet: true,
          showJSON: true,
          showMetadata: true,
          data: campaign,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime305.jsxs)(TwoColumnPage.Main, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime305.jsx)(CampaignGeneralSection, { campaign }),
              /* @__PURE__ */ (0, import_jsx_runtime305.jsx)(CampaignPromotionSection, { campaign })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime305.jsxs)(TwoColumnPage.Sidebar, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime305.jsx)(CampaignConfigurationSection, { campaign }),
              /* @__PURE__ */ (0, import_jsx_runtime305.jsx)(CampaignSpend, { campaign }),
              /* @__PURE__ */ (0, import_jsx_runtime305.jsx)(CampaignBudget, { campaign })
            ] })
          ]
        }
      );
    };
  }
});

// src/routes/campaigns/campaign-detail/loader.ts
var campaignDetailQuery, campaignLoader;
var init_loader10 = __esm({
  "src/routes/campaigns/campaign-detail/loader.ts"() {
    "use strict";
    init_campaigns();
    init_client2();
    init_query_client();
    campaignDetailQuery = (id2) => ({
      queryKey: campaignsQueryKeys.detail(id2),
      queryFn: async () => sdk.admin.campaign.retrieve(id2, {
        fields: "+promotions.id"
      })
    });
    campaignLoader = async ({ params: params2 }) => {
      const id2 = params2.id;
      const query = campaignDetailQuery(id2);
      return queryClient.getQueryData(query.queryKey) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/routes/campaigns/campaign-detail/index.ts
var campaign_detail_exports = {};
__export(campaign_detail_exports, {
  Component: () => CampaignDetail,
  loader: () => campaignLoader
});
var init_campaign_detail2 = __esm({
  "src/routes/campaigns/campaign-detail/index.ts"() {
    "use strict";
    init_campaign_detail();
    init_loader10();
  }
});

// src/routes/campaigns/campaign-edit/components/edit-campaign-form/edit-campaign-form.tsx
var import_zod50, import_ui205, import_react_hook_form53, import_react_i18next218, zod12, import_jsx_runtime306, EditCampaignSchema, EditCampaignForm;
var init_edit_campaign_form = __esm({
  "src/routes/campaigns/campaign-edit/components/edit-campaign-form/edit-campaign-form.tsx"() {
    "use strict";
    import_zod50 = require("@hookform/resolvers/zod");
    import_ui205 = require("@medusajs/ui");
    import_react_hook_form53 = require("react-hook-form");
    import_react_i18next218 = require("react-i18next");
    zod12 = __toESM(require("zod"));
    init_form2();
    init_modals();
    init_keybound_form2();
    init_campaigns();
    import_jsx_runtime306 = require("react/jsx-runtime");
    EditCampaignSchema = zod12.object({
      name: zod12.string(),
      description: zod12.string().optional(),
      campaign_identifier: zod12.string().optional(),
      starts_at: zod12.date().optional(),
      ends_at: zod12.date().optional()
    });
    EditCampaignForm = ({ campaign }) => {
      const { t: t4 } = (0, import_react_i18next218.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form53.useForm)({
        defaultValues: {
          name: campaign.name || "",
          description: campaign.description || "",
          campaign_identifier: campaign.campaign_identifier || "",
          starts_at: campaign.starts_at ? new Date(campaign.starts_at) : void 0,
          ends_at: campaign.ends_at ? new Date(campaign.ends_at) : void 0
        },
        resolver: (0, import_zod50.zodResolver)(EditCampaignSchema)
      });
      const { mutateAsync, isPending } = useUpdateCampaign(campaign.id);
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(
          {
            name: data.name,
            description: data.description,
            campaign_identifier: data.campaign_identifier,
            starts_at: data.starts_at,
            ends_at: data.ends_at
          },
          {
            onSuccess: ({ campaign: campaign2 }) => {
              import_ui205.toast.success(
                t4("campaigns.edit.successToast", {
                  name: campaign2.name
                })
              );
              handleSuccess();
            },
            onError: (error) => {
              import_ui205.toast.error(error.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime306.jsxs)(KeyboundForm, { onSubmit: handleSubmit, className: "flex flex-1 flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(RouteDrawer.Body, { children: /* @__PURE__ */ (0, import_jsx_runtime306.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "name",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime306.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(Form.Label, { children: t4("fields.name") }),
                  /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(import_ui205.Input, { ...field }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "description",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime306.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(Form.Label, { children: t4("fields.description") }),
                  /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(import_ui205.Input, { ...field }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "campaign_identifier",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime306.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(Form.Label, { children: t4("campaigns.fields.identifier") }),
                  /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(import_ui205.Input, { ...field }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "starts_at",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime306.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(Form.Label, { children: t4("campaigns.fields.start_date") }),
                  /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(
                    import_ui205.DatePicker,
                    {
                      granularity: "minute",
                      hourCycle: 12,
                      shouldCloseOnSelect: false,
                      ...field
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "ends_at",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime306.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(Form.Label, { children: t4("campaigns.fields.end_date") }),
                  /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(
                    import_ui205.DatePicker,
                    {
                      granularity: "minute",
                      shouldCloseOnSelect: false,
                      ...field
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          )
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime306.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(import_ui205.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime306.jsx)(
            import_ui205.Button,
            {
              isLoading: isPending,
              type: "submit",
              variant: "primary",
              size: "small",
              children: t4("actions.save")
            }
          )
        ] }) })
      ] }) });
    };
  }
});

// src/routes/campaigns/campaign-edit/components/edit-campaign-form/index.ts
var init_edit_campaign_form2 = __esm({
  "src/routes/campaigns/campaign-edit/components/edit-campaign-form/index.ts"() {
    "use strict";
    init_edit_campaign_form();
  }
});

// src/routes/campaigns/campaign-edit/campaign-edit.tsx
var import_ui206, import_react_i18next219, import_react_router_dom91, import_jsx_runtime307, CampaignEdit;
var init_campaign_edit = __esm({
  "src/routes/campaigns/campaign-edit/campaign-edit.tsx"() {
    "use strict";
    import_ui206 = require("@medusajs/ui");
    import_react_i18next219 = require("react-i18next");
    import_react_router_dom91 = require("react-router-dom");
    init_modals();
    init_visually_hidden2();
    init_campaigns();
    init_edit_campaign_form2();
    import_jsx_runtime307 = require("react/jsx-runtime");
    CampaignEdit = () => {
      const { t: t4 } = (0, import_react_i18next219.useTranslation)();
      const { id: id2 } = (0, import_react_router_dom91.useParams)();
      const { campaign, isLoading, isError, error } = useCampaign(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime307.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime307.jsxs)(RouteDrawer.Header, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime307.jsx)(RouteDrawer.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime307.jsx)(import_ui206.Heading, { children: t4("campaigns.edit.header") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime307.jsx)(RouteDrawer.Description, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime307.jsx)(VisuallyHidden, { children: t4("campaigns.edit.description") }) })
        ] }),
        !isLoading && campaign && /* @__PURE__ */ (0, import_jsx_runtime307.jsx)(EditCampaignForm, { campaign })
      ] });
    };
  }
});

// src/routes/campaigns/campaign-edit/index.ts
var campaign_edit_exports = {};
__export(campaign_edit_exports, {
  Component: () => CampaignEdit
});
var init_campaign_edit2 = __esm({
  "src/routes/campaigns/campaign-edit/index.ts"() {
    "use strict";
    init_campaign_edit();
  }
});

// src/routes/campaigns/campaign-configuration/components/campaign-configuration-form/campaign-configuration-form.tsx
var import_zod51, import_ui207, import_react_hook_form54, import_react_i18next220, import_zod52, import_jsx_runtime308, CampaignConfigurationSchema, CampaignConfigurationForm;
var init_campaign_configuration_form = __esm({
  "src/routes/campaigns/campaign-configuration/components/campaign-configuration-form/campaign-configuration-form.tsx"() {
    "use strict";
    import_zod51 = require("@hookform/resolvers/zod");
    import_ui207 = require("@medusajs/ui");
    import_react_hook_form54 = require("react-hook-form");
    import_react_i18next220 = require("react-i18next");
    import_zod52 = require("zod");
    init_form2();
    init_modals();
    init_keybound_form2();
    init_campaigns();
    import_jsx_runtime308 = require("react/jsx-runtime");
    CampaignConfigurationSchema = import_zod52.z.object({
      starts_at: import_zod52.z.date().nullable(),
      ends_at: import_zod52.z.date().nullable()
    });
    CampaignConfigurationForm = ({
      campaign
    }) => {
      const { t: t4 } = (0, import_react_i18next220.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form54.useForm)({
        defaultValues: {
          starts_at: campaign.starts_at ? new Date(campaign.starts_at) : void 0,
          ends_at: campaign.ends_at ? new Date(campaign.ends_at) : void 0
        },
        resolver: (0, import_zod51.zodResolver)(CampaignConfigurationSchema)
      });
      const { mutateAsync, isPending } = useUpdateCampaign(campaign.id);
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(
          {
            starts_at: data.starts_at || null,
            ends_at: data.ends_at || null
          },
          {
            onSuccess: ({ campaign: campaign2 }) => {
              import_ui207.toast.success(
                t4("campaigns.configuration.edit.successToast", {
                  name: campaign2.name
                })
              );
              handleSuccess();
            },
            onError: (error) => {
              import_ui207.toast.error(error.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime308.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime308.jsxs)(KeyboundForm, { onSubmit: handleSubmit, className: "flex flex-1 flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime308.jsx)(RouteDrawer.Body, { children: /* @__PURE__ */ (0, import_jsx_runtime308.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime308.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "starts_at",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime308.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime308.jsx)(Form.Label, { children: t4("campaigns.fields.start_date") }),
                  /* @__PURE__ */ (0, import_jsx_runtime308.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime308.jsx)(
                    import_ui207.DatePicker,
                    {
                      granularity: "minute",
                      hourCycle: 12,
                      shouldCloseOnSelect: false,
                      ...field
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime308.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime308.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "ends_at",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime308.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime308.jsx)(Form.Label, { children: t4("campaigns.fields.end_date") }),
                  /* @__PURE__ */ (0, import_jsx_runtime308.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime308.jsx)(
                    import_ui207.DatePicker,
                    {
                      granularity: "minute",
                      shouldCloseOnSelect: false,
                      ...field
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime308.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          )
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime308.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime308.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime308.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime308.jsx)(import_ui207.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime308.jsx)(
            import_ui207.Button,
            {
              isLoading: isPending,
              type: "submit",
              variant: "primary",
              size: "small",
              children: t4("actions.save")
            }
          )
        ] }) })
      ] }) });
    };
  }
});

// src/routes/campaigns/campaign-configuration/components/campaign-configuration-form/index.ts
var init_campaign_configuration_form2 = __esm({
  "src/routes/campaigns/campaign-configuration/components/campaign-configuration-form/index.ts"() {
    "use strict";
    init_campaign_configuration_form();
  }
});

// src/routes/campaigns/campaign-configuration/campaign-configuration.tsx
var import_ui208, import_react_i18next221, import_react_router_dom92, import_jsx_runtime309, CampaignConfiguration;
var init_campaign_configuration = __esm({
  "src/routes/campaigns/campaign-configuration/campaign-configuration.tsx"() {
    "use strict";
    import_ui208 = require("@medusajs/ui");
    import_react_i18next221 = require("react-i18next");
    import_react_router_dom92 = require("react-router-dom");
    init_modals();
    init_campaigns();
    init_campaign_configuration_form2();
    import_jsx_runtime309 = require("react/jsx-runtime");
    CampaignConfiguration = () => {
      const { t: t4 } = (0, import_react_i18next221.useTranslation)();
      const { id: id2 } = (0, import_react_router_dom92.useParams)();
      const { campaign, isLoading, isError, error } = useCampaign(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime309.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime309.jsxs)(RouteDrawer.Header, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime309.jsx)(RouteDrawer.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime309.jsx)(import_ui208.Heading, { children: t4("campaigns.configuration.edit.header") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime309.jsx)(RouteDrawer.Description, { className: "sr-only", children: t4("campaigns.configuration.edit.description") })
        ] }),
        !isLoading && campaign && /* @__PURE__ */ (0, import_jsx_runtime309.jsx)(CampaignConfigurationForm, { campaign })
      ] });
    };
  }
});

// src/routes/campaigns/campaign-configuration/index.ts
var campaign_configuration_exports = {};
__export(campaign_configuration_exports, {
  Component: () => CampaignConfiguration
});
var init_campaign_configuration2 = __esm({
  "src/routes/campaigns/campaign-configuration/index.ts"() {
    "use strict";
    init_campaign_configuration();
  }
});

// src/routes/campaigns/campaign-budget-edit/components/edit-campaign-budget-form/edit-campaign-budget-form.tsx
var import_zod53, import_ui209, import_react_hook_form55, import_react_i18next222, zod13, import_jsx_runtime310, EditCampaignSchema2, EditCampaignBudgetForm;
var init_edit_campaign_budget_form = __esm({
  "src/routes/campaigns/campaign-budget-edit/components/edit-campaign-budget-form/edit-campaign-budget-form.tsx"() {
    "use strict";
    import_zod53 = require("@hookform/resolvers/zod");
    import_ui209 = require("@medusajs/ui");
    import_react_hook_form55 = require("react-hook-form");
    import_react_i18next222 = require("react-i18next");
    zod13 = __toESM(require("zod"));
    init_form2();
    init_modals();
    init_keybound_form2();
    init_campaigns();
    init_currencies2();
    import_jsx_runtime310 = require("react/jsx-runtime");
    EditCampaignSchema2 = zod13.object({
      limit: zod13.number().min(0).optional().nullable()
    });
    EditCampaignBudgetForm = ({
      campaign
    }) => {
      const { t: t4 } = (0, import_react_i18next222.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form55.useForm)({
        defaultValues: {
          limit: campaign?.budget?.limit || void 0
        },
        resolver: (0, import_zod53.zodResolver)(EditCampaignSchema2)
      });
      const { mutateAsync, isPending } = useUpdateCampaign(campaign.id);
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(
          {
            budget: {
              limit: data.limit ? data.limit : null
            }
          },
          {
            onSuccess: ({ campaign: campaign2 }) => {
              import_ui209.toast.success(
                t4("campaigns.edit.successToast", {
                  name: campaign2.name
                })
              );
              handleSuccess();
            },
            onError: (error) => {
              import_ui209.toast.error(error.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime310.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime310.jsxs)(KeyboundForm, { onSubmit: handleSubmit, className: "flex flex-1 flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime310.jsx)(RouteDrawer.Body, { children: /* @__PURE__ */ (0, import_jsx_runtime310.jsx)("div", { className: "flex flex-col gap-y-4", children: /* @__PURE__ */ (0, import_jsx_runtime310.jsx)(
          Form.Field,
          {
            control: form.control,
            name: "limit",
            render: ({ field: { onChange, value, ...field } }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime310.jsxs)(Form.Item, { className: "basis-1/2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime310.jsx)(Form.Label, { children: t4("campaigns.budget.fields.limit") }),
                /* @__PURE__ */ (0, import_jsx_runtime310.jsx)(Form.Control, { children: campaign.budget?.type === "spend" ? /* @__PURE__ */ (0, import_jsx_runtime310.jsx)(
                  import_ui209.CurrencyInput,
                  {
                    min: 0,
                    onValueChange: (value2) => onChange(value2 ? parseInt(value2) : null),
                    code: campaign.budget?.currency_code,
                    symbol: campaign.budget?.currency_code ? getCurrencySymbol(
                      campaign.budget?.currency_code
                    ) : "",
                    ...field,
                    value: value || void 0
                  }
                ) : /* @__PURE__ */ (0, import_jsx_runtime310.jsx)(
                  import_ui209.Input,
                  {
                    min: 0,
                    ...field,
                    value,
                    onChange: (e) => {
                      onChange(
                        e.target.value === "" ? null : parseInt(e.target.value)
                      );
                    }
                  },
                  "usage"
                ) }),
                /* @__PURE__ */ (0, import_jsx_runtime310.jsx)(Form.ErrorMessage, {})
              ] });
            }
          }
        ) }) }),
        /* @__PURE__ */ (0, import_jsx_runtime310.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime310.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime310.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime310.jsx)(import_ui209.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime310.jsx)(
            import_ui209.Button,
            {
              isLoading: isPending,
              type: "submit",
              variant: "primary",
              size: "small",
              children: t4("actions.save")
            }
          )
        ] }) })
      ] }) });
    };
  }
});

// src/routes/campaigns/campaign-budget-edit/components/edit-campaign-budget-form/index.ts
var init_edit_campaign_budget_form2 = __esm({
  "src/routes/campaigns/campaign-budget-edit/components/edit-campaign-budget-form/index.ts"() {
    "use strict";
    init_edit_campaign_budget_form();
  }
});

// src/routes/campaigns/campaign-budget-edit/campaign-budget-edit.tsx
var import_ui210, import_react_i18next223, import_react_router_dom93, import_jsx_runtime311, CampaignBudgetEdit;
var init_campaign_budget_edit = __esm({
  "src/routes/campaigns/campaign-budget-edit/campaign-budget-edit.tsx"() {
    "use strict";
    import_ui210 = require("@medusajs/ui");
    import_react_i18next223 = require("react-i18next");
    import_react_router_dom93 = require("react-router-dom");
    init_modals();
    init_campaigns();
    init_edit_campaign_budget_form2();
    import_jsx_runtime311 = require("react/jsx-runtime");
    CampaignBudgetEdit = () => {
      const { t: t4 } = (0, import_react_i18next223.useTranslation)();
      const { id: id2 } = (0, import_react_router_dom93.useParams)();
      const { campaign, isLoading, isError, error } = useCampaign(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime311.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime311.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime311.jsx)(RouteDrawer.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime311.jsx)(import_ui210.Heading, { children: t4("campaigns.budget.edit.header") }) }) }),
        !isLoading && campaign && /* @__PURE__ */ (0, import_jsx_runtime311.jsx)(EditCampaignBudgetForm, { campaign })
      ] });
    };
  }
});

// src/routes/campaigns/campaign-budget-edit/index.ts
var campaign_budget_edit_exports = {};
__export(campaign_budget_edit_exports, {
  Component: () => CampaignBudgetEdit
});
var init_campaign_budget_edit2 = __esm({
  "src/routes/campaigns/campaign-budget-edit/index.ts"() {
    "use strict";
    init_campaign_budget_edit();
  }
});

// src/routes/campaigns/add-campaign-promotions/components/add-campaign-promotions-form.tsx
var import_zod54, import_ui211, import_react_query56, import_react_table28, import_react172, import_react_hook_form56, import_react_i18next224, zod14, import_jsx_runtime312, AddCampaignPromotionsSchema, PAGE_SIZE19, AddCampaignPromotionsForm, columnHelper27, useColumns11;
var init_add_campaign_promotions_form = __esm({
  "src/routes/campaigns/add-campaign-promotions/components/add-campaign-promotions-form.tsx"() {
    "use strict";
    import_zod54 = require("@hookform/resolvers/zod");
    import_ui211 = require("@medusajs/ui");
    import_react_query56 = require("@tanstack/react-query");
    import_react_table28 = require("@tanstack/react-table");
    import_react172 = require("react");
    import_react_hook_form56 = require("react-hook-form");
    import_react_i18next224 = require("react-i18next");
    zod14 = __toESM(require("zod"));
    init_modals();
    init_data_table2();
    init_keybound_form2();
    init_campaigns();
    init_promotions();
    init_use_promotion_table_columns();
    init_use_promotion_table_filters();
    init_use_promotion_table_query();
    init_use_data_table();
    import_jsx_runtime312 = require("react/jsx-runtime");
    AddCampaignPromotionsSchema = zod14.object({
      promotion_ids: zod14.array(zod14.string()).min(1)
    });
    PAGE_SIZE19 = 50;
    AddCampaignPromotionsForm = ({
      campaign
    }) => {
      const { t: t4 } = (0, import_react_i18next224.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form56.useForm)({
        defaultValues: { promotion_ids: [] },
        resolver: (0, import_zod54.zodResolver)(AddCampaignPromotionsSchema)
      });
      const { setValue } = form;
      const { mutateAsync, isPending } = useAddOrRemoveCampaignPromotions(
        campaign.id
      );
      const [rowSelection, setRowSelection] = (0, import_react172.useState)({});
      const updater = (fn) => {
        const state = typeof fn === "function" ? fn(rowSelection) : fn;
        const ids = Object.keys(state);
        setValue("promotion_ids", ids, {
          shouldDirty: true,
          shouldTouch: true
        });
        setRowSelection(state);
      };
      const { searchParams, raw } = usePromotionTableQuery({ pageSize: PAGE_SIZE19 });
      const {
        promotions,
        count: count3,
        isPending: isLoading
      } = usePromotions({ ...searchParams }, { placeholderData: import_react_query56.keepPreviousData });
      const columns = useColumns11();
      const filters = usePromotionTableFilters();
      const { table } = useDataTable({
        data: promotions ?? [],
        columns,
        enableRowSelection: (row) => {
          return row.original.campaign_id !== campaign.id;
        },
        enablePagination: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE19,
        count: count3,
        rowSelection: {
          state: rowSelection,
          updater
        },
        meta: {
          campaignId: campaign.id,
          currencyCode: campaign?.budget?.currency_code,
          budgetType: campaign?.budget?.type
        }
      });
      const handleSubmit = form.handleSubmit(async (values) => {
        await mutateAsync(
          { add: values.promotion_ids },
          {
            onSuccess: () => {
              import_ui211.toast.success(
                t4("campaigns.promotions.toast.success", {
                  count: values.promotion_ids.length
                })
              );
              handleSuccess();
            },
            onError: (error) => import_ui211.toast.error(error.message)
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime312.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime312.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex h-full flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime312.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime312.jsx)("div", { className: "flex items-center justify-end gap-x-2", children: form.formState.errors.promotion_ids && /* @__PURE__ */ (0, import_jsx_runtime312.jsx)(import_ui211.Hint, { variant: "error", children: form.formState.errors.promotion_ids.message }) }) }),
            /* @__PURE__ */ (0, import_jsx_runtime312.jsx)(RouteFocusModal.Body, { className: "flex size-full flex-col overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime312.jsx)(
              DataTable,
              {
                table,
                count: count3,
                columns,
                pageSize: PAGE_SIZE19,
                isLoading,
                filters,
                orderBy: [
                  { key: "code", label: t4("fields.code") },
                  { key: "type", label: t4("fields.type") },
                  { key: "created_at", label: t4("fields.createdAt") },
                  { key: "updated_at", label: t4("fields.updatedAt") }
                ],
                queryObject: raw,
                layout: "fill",
                pagination: true,
                search: "autofocus",
                noRecords: {
                  message: t4("campaigns.promotions.add.list.noRecordsMessage")
                }
              }
            ) }),
            /* @__PURE__ */ (0, import_jsx_runtime312.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime312.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime312.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime312.jsx)(import_ui211.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime312.jsx)(import_ui211.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
    columnHelper27 = (0, import_react_table28.createColumnHelper)();
    useColumns11 = () => {
      const base = usePromotionTableColumns();
      const { t: t4 } = (0, import_react_i18next224.useTranslation)();
      return (0, import_react172.useMemo)(
        () => [
          columnHelper27.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime312.jsx)(
                import_ui211.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllRowsSelected(!!value)
                }
              );
            },
            cell: ({ row, table }) => {
              const { campaignId, currencyCode, budgetType } = table.options.meta;
              const isTypeSpend = budgetType === "spend";
              const isAdded = row.original.campaign_id === campaignId;
              const isAddedToADiffCampaign = !!row.original.campaign_id && row.original.campaign_id !== campaignId;
              const currencyMismatch = isTypeSpend && row.original.application_method?.currency_code !== currencyCode;
              const isSelected2 = row.getIsSelected() || isAdded;
              const isIndeterminate = currencyMismatch || isAddedToADiffCampaign;
              const Component5 = /* @__PURE__ */ (0, import_jsx_runtime312.jsx)(
                import_ui211.Checkbox,
                {
                  checked: isIndeterminate ? "indeterminate" : isSelected2,
                  disabled: isAdded || isAddedToADiffCampaign || currencyMismatch,
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
              if (isAddedToADiffCampaign) {
                return /* @__PURE__ */ (0, import_jsx_runtime312.jsx)(
                  import_ui211.Tooltip,
                  {
                    content: t4("campaigns.promotions.alreadyAddedDiffCampaign", {
                      name: row.original?.campaign?.name
                    }),
                    side: "right",
                    children: Component5
                  }
                );
              }
              if (currencyMismatch) {
                return /* @__PURE__ */ (0, import_jsx_runtime312.jsx)(
                  import_ui211.Tooltip,
                  {
                    content: t4("campaigns.promotions.currencyMismatch"),
                    side: "right",
                    children: Component5
                  }
                );
              }
              if (isAdded) {
                return /* @__PURE__ */ (0, import_jsx_runtime312.jsx)(
                  import_ui211.Tooltip,
                  {
                    content: t4("campaigns.promotions.alreadyAdded"),
                    side: "right",
                    children: Component5
                  }
                );
              }
              return Component5;
            }
          }),
          ...base
        ],
        [t4, base]
      );
    };
  }
});

// src/routes/campaigns/add-campaign-promotions/components/index.ts
var init_components2 = __esm({
  "src/routes/campaigns/add-campaign-promotions/components/index.ts"() {
    "use strict";
    init_add_campaign_promotions_form();
  }
});

// src/routes/campaigns/add-campaign-promotions/add-campaign-promotions.tsx
var import_react_router_dom94, import_jsx_runtime313, AddCampaignPromotions;
var init_add_campaign_promotions = __esm({
  "src/routes/campaigns/add-campaign-promotions/add-campaign-promotions.tsx"() {
    "use strict";
    import_react_router_dom94 = require("react-router-dom");
    init_modals();
    init_campaigns();
    init_components2();
    import_jsx_runtime313 = require("react/jsx-runtime");
    AddCampaignPromotions = () => {
      const { id: id2 } = (0, import_react_router_dom94.useParams)();
      const { campaign, isError, error } = useCampaign(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime313.jsx)(RouteFocusModal, { children: campaign && /* @__PURE__ */ (0, import_jsx_runtime313.jsx)(AddCampaignPromotionsForm, { campaign }) });
    };
  }
});

// src/routes/campaigns/add-campaign-promotions/index.ts
var add_campaign_promotions_exports = {};
__export(add_campaign_promotions_exports, {
  Component: () => AddCampaignPromotions
});
var init_add_campaign_promotions2 = __esm({
  "src/routes/campaigns/add-campaign-promotions/index.ts"() {
    "use strict";
    init_add_campaign_promotions();
  }
});

// src/hooks/table/columns/use-collection-table-columns.tsx
var import_react_table29, import_react173, import_react_i18next225, import_jsx_runtime314, columnHelper28, useCollectionTableColumns;
var init_use_collection_table_columns = __esm({
  "src/hooks/table/columns/use-collection-table-columns.tsx"() {
    "use strict";
    import_react_table29 = require("@tanstack/react-table");
    import_react173 = require("react");
    import_react_i18next225 = require("react-i18next");
    init_text_cell2();
    import_jsx_runtime314 = require("react/jsx-runtime");
    columnHelper28 = (0, import_react_table29.createColumnHelper)();
    useCollectionTableColumns = () => {
      const { t: t4 } = (0, import_react_i18next225.useTranslation)();
      return (0, import_react173.useMemo)(
        () => [
          columnHelper28.accessor("title", {
            header: t4("fields.title"),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime314.jsx)(TextCell, { text: getValue2() })
          }),
          columnHelper28.accessor("handle", {
            header: t4("fields.handle"),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime314.jsx)(TextCell, { text: `/${getValue2()}` })
          }),
          columnHelper28.accessor("products", {
            header: t4("fields.products"),
            cell: ({ getValue: getValue2 }) => {
              const count3 = getValue2()?.length || void 0;
              return /* @__PURE__ */ (0, import_jsx_runtime314.jsx)(TextCell, { text: count3 });
            }
          })
        ],
        [t4]
      );
    };
  }
});

// src/routes/collections/collection-list/components/collection-list-table/collection-row-actions.tsx
var import_icons98, import_ui212, import_react_i18next226, import_jsx_runtime315, CollectionRowActions;
var init_collection_row_actions = __esm({
  "src/routes/collections/collection-list/components/collection-list-table/collection-row-actions.tsx"() {
    "use strict";
    import_icons98 = require("@medusajs/icons");
    import_ui212 = require("@medusajs/ui");
    import_react_i18next226 = require("react-i18next");
    init_action_menu2();
    init_collections();
    import_jsx_runtime315 = require("react/jsx-runtime");
    CollectionRowActions = ({
      collection
    }) => {
      const { t: t4 } = (0, import_react_i18next226.useTranslation)();
      const prompt = (0, import_ui212.usePrompt)();
      const { mutateAsync } = useDeleteCollection(collection.id);
      const handleDeleteCollection = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("collections.deleteWarning", {
            title: collection.title
          }),
          verificationText: collection.title,
          verificationInstruction: t4("general.typeToConfirm"),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync();
      };
      return /* @__PURE__ */ (0, import_jsx_runtime315.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  label: t4("actions.edit"),
                  to: `/collections/${collection.id}/edit`,
                  icon: /* @__PURE__ */ (0, import_jsx_runtime315.jsx)(import_icons98.PencilSquare, {})
                }
              ]
            },
            {
              actions: [
                {
                  label: t4("actions.delete"),
                  onClick: handleDeleteCollection,
                  icon: /* @__PURE__ */ (0, import_jsx_runtime315.jsx)(import_icons98.Trash, {}),
                  disabled: !collection.id
                }
              ]
            }
          ]
        }
      );
    };
  }
});

// src/routes/collections/collection-list/components/collection-list-table/collection-list-table.tsx
var import_ui213, import_react_i18next227, import_react_router_dom95, import_react_query57, import_react_table30, import_react174, import_jsx_runtime316, PAGE_SIZE20, CollectionListTable, columnHelper29, useColumns12;
var init_collection_list_table = __esm({
  "src/routes/collections/collection-list/components/collection-list-table/collection-list-table.tsx"() {
    "use strict";
    import_ui213 = require("@medusajs/ui");
    import_react_i18next227 = require("react-i18next");
    import_react_router_dom95 = require("react-router-dom");
    import_react_query57 = require("@tanstack/react-query");
    import_react_table30 = require("@tanstack/react-table");
    import_react174 = require("react");
    init_data_table2();
    init_collections();
    init_use_collection_table_columns();
    init_filters();
    init_query();
    init_use_data_table();
    init_collection_row_actions();
    import_jsx_runtime316 = require("react/jsx-runtime");
    PAGE_SIZE20 = 20;
    CollectionListTable = () => {
      const { t: t4 } = (0, import_react_i18next227.useTranslation)();
      const { searchParams, raw } = useCollectionTableQuery({ pageSize: PAGE_SIZE20 });
      const { collections, count: count3, isError, error, isLoading } = useCollections(
        {
          ...searchParams,
          fields: "+products.id"
        },
        {
          placeholderData: import_react_query57.keepPreviousData
        }
      );
      const filters = useCollectionTableFilters();
      const columns = useColumns12();
      const { table } = useDataTable({
        data: collections ?? [],
        columns,
        count: count3,
        enablePagination: true,
        getRowId: (row, index2) => row.id ?? `${index2}`,
        pageSize: PAGE_SIZE20
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime316.jsxs)(import_ui213.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime316.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime316.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime316.jsx)(import_ui213.Heading, { children: t4("collections.domain") }),
            /* @__PURE__ */ (0, import_jsx_runtime316.jsx)(import_ui213.Text, { className: "text-ui-fg-subtle", size: "small", children: t4("collections.subtitle") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime316.jsx)(import_react_router_dom95.Link, { to: "/collections/create", children: /* @__PURE__ */ (0, import_jsx_runtime316.jsx)(import_ui213.Button, { size: "small", variant: "secondary", children: t4("actions.create") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime316.jsx)(
          DataTable,
          {
            table,
            columns,
            pageSize: PAGE_SIZE20,
            count: count3,
            filters,
            orderBy: [
              { key: "title", label: t4("fields.title") },
              { key: "handle", label: t4("fields.handle") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            search: true,
            navigateTo: (row) => `/collections/${row.original.id}`,
            queryObject: raw,
            isLoading
          }
        )
      ] });
    };
    columnHelper29 = (0, import_react_table30.createColumnHelper)();
    useColumns12 = () => {
      const base = useCollectionTableColumns();
      return (0, import_react174.useMemo)(
        () => [
          ...base,
          columnHelper29.display({
            id: "actions",
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime316.jsx)(CollectionRowActions, { collection: row.original })
          })
        ],
        [base]
      );
    };
  }
});

// src/routes/collections/collection-list/components/collection-list-table/index.ts
var init_collection_list_table2 = __esm({
  "src/routes/collections/collection-list/components/collection-list-table/index.ts"() {
    "use strict";
    init_collection_list_table();
  }
});

// src/routes/collections/collection-list/collection-list.tsx
var import_jsx_runtime317, CollectionList;
var init_collection_list = __esm({
  "src/routes/collections/collection-list/collection-list.tsx"() {
    "use strict";
    init_pages();
    init_extensions();
    init_collection_list_table2();
    import_jsx_runtime317 = require("react/jsx-runtime");
    CollectionList = () => {
      const { getWidgets } = useDashboardExtension();
      return /* @__PURE__ */ (0, import_jsx_runtime317.jsx)(
        SingleColumnPage,
        {
          widgets: {
            after: getWidgets("product_collection.list.after"),
            before: getWidgets("product_collection.list.before")
          },
          children: /* @__PURE__ */ (0, import_jsx_runtime317.jsx)(CollectionListTable, {})
        }
      );
    };
  }
});

// src/routes/collections/collection-list/index.ts
var collection_list_exports = {};
__export(collection_list_exports, {
  Component: () => CollectionList
});
var init_collection_list2 = __esm({
  "src/routes/collections/collection-list/index.ts"() {
    "use strict";
    init_collection_list();
  }
});

// src/routes/collections/collection-create/components/create-collection-form/create-collection-form.tsx
var import_zod55, import_ui214, import_react_hook_form57, import_react_i18next228, zod15, import_jsx_runtime318, CreateCollectionSchema, CreateCollectionForm;
var init_create_collection_form = __esm({
  "src/routes/collections/collection-create/components/create-collection-form/create-collection-form.tsx"() {
    "use strict";
    import_zod55 = require("@hookform/resolvers/zod");
    import_ui214 = require("@medusajs/ui");
    import_react_hook_form57 = require("react-hook-form");
    import_react_i18next228 = require("react-i18next");
    zod15 = __toESM(require("zod"));
    init_form2();
    init_handle_input2();
    init_modals();
    init_keybound_form2();
    init_collections();
    import_jsx_runtime318 = require("react/jsx-runtime");
    CreateCollectionSchema = zod15.object({
      title: zod15.string().min(1),
      handle: zod15.string().optional()
    });
    CreateCollectionForm = () => {
      const { t: t4 } = (0, import_react_i18next228.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form57.useForm)({
        defaultValues: {
          title: "",
          handle: ""
        },
        resolver: (0, import_zod55.zodResolver)(CreateCollectionSchema)
      });
      const { mutateAsync, isPending } = useCreateCollection();
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(data, {
          onSuccess: ({ collection }) => {
            handleSuccess(`/collections/${collection.id}`);
            import_ui214.toast.success(t4("collections.createSuccess"));
          },
          onError: (error) => {
            import_ui214.toast.error(error.message);
          }
        });
      });
      return /* @__PURE__ */ (0, import_jsx_runtime318.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime318.jsxs)(KeyboundForm, { onSubmit: handleSubmit, children: [
        /* @__PURE__ */ (0, import_jsx_runtime318.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime318.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime318.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime318.jsx)(import_ui214.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime318.jsx)(
            import_ui214.Button,
            {
              size: "small",
              variant: "primary",
              type: "submit",
              isLoading: isPending,
              children: t4("actions.create")
            }
          )
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime318.jsx)(RouteFocusModal.Body, { className: "flex flex-col items-center p-16", children: /* @__PURE__ */ (0, import_jsx_runtime318.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8", children: [
          /* @__PURE__ */ (0, import_jsx_runtime318.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime318.jsx)(import_ui214.Heading, { children: t4("collections.createCollection") }),
            /* @__PURE__ */ (0, import_jsx_runtime318.jsx)(import_ui214.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("collections.createCollectionHint") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime318.jsxs)("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime318.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "title",
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime318.jsxs)(Form.Item, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime318.jsx)(Form.Label, { children: t4("fields.title") }),
                    /* @__PURE__ */ (0, import_jsx_runtime318.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime318.jsx)(import_ui214.Input, { autoComplete: "off", ...field }) }),
                    /* @__PURE__ */ (0, import_jsx_runtime318.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime318.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "handle",
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime318.jsxs)(Form.Item, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime318.jsx)(
                      Form.Label,
                      {
                        optional: true,
                        tooltip: t4("collections.handleTooltip"),
                        children: t4("fields.handle")
                      }
                    ),
                    /* @__PURE__ */ (0, import_jsx_runtime318.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime318.jsx)(HandleInput, { ...field }) }),
                    /* @__PURE__ */ (0, import_jsx_runtime318.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              }
            )
          ] })
        ] }) })
      ] }) });
    };
  }
});

// src/routes/collections/collection-create/components/create-collection-form/index.ts
var init_create_collection_form2 = __esm({
  "src/routes/collections/collection-create/components/create-collection-form/index.ts"() {
    "use strict";
    init_create_collection_form();
  }
});

// src/routes/collections/collection-create/collection-create.tsx
var import_jsx_runtime319, CollectionCreate;
var init_collection_create = __esm({
  "src/routes/collections/collection-create/collection-create.tsx"() {
    "use strict";
    init_modals();
    init_create_collection_form2();
    import_jsx_runtime319 = require("react/jsx-runtime");
    CollectionCreate = () => {
      return /* @__PURE__ */ (0, import_jsx_runtime319.jsx)(RouteFocusModal, { children: /* @__PURE__ */ (0, import_jsx_runtime319.jsx)(CreateCollectionForm, {}) });
    };
  }
});

// src/routes/collections/collection-create/index.ts
var collection_create_exports = {};
__export(collection_create_exports, {
  Component: () => CollectionCreate
});
var init_collection_create2 = __esm({
  "src/routes/collections/collection-create/index.ts"() {
    "use strict";
    init_collection_create();
  }
});

// src/routes/collections/collection-detail/components/collection-general-section/collection-general-section.tsx
var import_icons99, import_ui215, import_react_i18next229, import_react_router_dom96, import_jsx_runtime320, CollectionGeneralSection;
var init_collection_general_section = __esm({
  "src/routes/collections/collection-detail/components/collection-general-section/collection-general-section.tsx"() {
    "use strict";
    import_icons99 = require("@medusajs/icons");
    import_ui215 = require("@medusajs/ui");
    import_react_i18next229 = require("react-i18next");
    init_action_menu2();
    init_collections();
    import_react_router_dom96 = require("react-router-dom");
    import_jsx_runtime320 = require("react/jsx-runtime");
    CollectionGeneralSection = ({
      collection
    }) => {
      const { t: t4 } = (0, import_react_i18next229.useTranslation)();
      const prompt = (0, import_ui215.usePrompt)();
      const navigate = (0, import_react_router_dom96.useNavigate)();
      const { mutateAsync } = useDeleteCollection(collection.id);
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("collections.deleteWarning", {
            count: 1,
            title: collection.title
          })
        });
        if (!res) {
          return;
        }
        await mutateAsync();
        navigate("../", { replace: true });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime320.jsxs)(import_ui215.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime320.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime320.jsx)(import_ui215.Heading, { children: collection.title }),
          /* @__PURE__ */ (0, import_jsx_runtime320.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      icon: /* @__PURE__ */ (0, import_jsx_runtime320.jsx)(import_icons99.PencilSquare, {}),
                      label: t4("actions.edit"),
                      to: `/collections/${collection.id}/edit`,
                      disabled: !collection.id
                    }
                  ]
                },
                {
                  actions: [
                    {
                      icon: /* @__PURE__ */ (0, import_jsx_runtime320.jsx)(import_icons99.Trash, {}),
                      label: t4("actions.delete"),
                      onClick: handleDelete,
                      disabled: !collection.id
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime320.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime320.jsx)(import_ui215.Text, { size: "small", leading: "compact", weight: "plus", children: t4("fields.handle") }),
          /* @__PURE__ */ (0, import_jsx_runtime320.jsxs)(import_ui215.Text, { size: "small", children: [
            "/",
            collection.handle
          ] })
        ] })
      ] });
    };
  }
});

// src/routes/collections/collection-detail/components/collection-general-section/index.ts
var init_collection_general_section2 = __esm({
  "src/routes/collections/collection-detail/components/collection-general-section/index.ts"() {
    "use strict";
    init_collection_general_section();
  }
});

// src/routes/collections/collection-detail/components/collection-product-section/collection-product-section.tsx
var import_icons100, import_ui216, import_react_query58, import_react_table31, import_react175, import_react_i18next230, import_jsx_runtime321, PAGE_SIZE21, CollectionProductSection, ProductActions2, columnHelper30, useColumns13;
var init_collection_product_section = __esm({
  "src/routes/collections/collection-detail/components/collection-product-section/collection-product-section.tsx"() {
    "use strict";
    import_icons100 = require("@medusajs/icons");
    import_ui216 = require("@medusajs/ui");
    import_react_query58 = require("@tanstack/react-query");
    import_react_table31 = require("@tanstack/react-table");
    import_react175 = require("react");
    import_react_i18next230 = require("react-i18next");
    init_action_menu2();
    init_data_table2();
    init_collections();
    init_products();
    init_use_product_table_columns();
    init_use_product_table_filters();
    init_use_product_table_query();
    init_use_data_table();
    import_jsx_runtime321 = require("react/jsx-runtime");
    PAGE_SIZE21 = 10;
    CollectionProductSection = ({
      collection
    }) => {
      const { t: t4 } = (0, import_react_i18next230.useTranslation)();
      const { searchParams, raw } = useProductTableQuery({ pageSize: PAGE_SIZE21 });
      const { products, count: count3, isLoading, isError, error } = useProducts(
        {
          limit: PAGE_SIZE21,
          ...searchParams,
          collection_id: [collection.id]
        },
        {
          placeholderData: import_react_query58.keepPreviousData
        }
      );
      const filters = useProductTableFilters(["collections"]);
      const columns = useColumns13();
      const { table } = useDataTable({
        data: products ?? [],
        columns,
        getRowId: (row) => row.id,
        count: count3,
        enablePagination: true,
        enableRowSelection: true,
        pageSize: PAGE_SIZE21,
        meta: {
          collectionId: collection.id
        }
      });
      const prompt = (0, import_ui216.usePrompt)();
      const { mutateAsync } = useUpdateCollectionProducts(collection.id);
      const handleRemove = async (selection) => {
        const ids = Object.keys(selection);
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("collections.removeProductsWarning", {
            count: ids.length
          }),
          confirmText: t4("actions.remove"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(
          {
            remove: ids
          },
          {
            onSuccess: () => {
              import_ui216.toast.success(
                t4("collections.products.remove.successToast", {
                  count: ids.length
                })
              );
            },
            onError: (e) => {
              import_ui216.toast.error(e.message);
            }
          }
        );
      };
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime321.jsxs)(import_ui216.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime321.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime321.jsx)(import_ui216.Heading, { level: "h2", children: t4("products.domain") }),
          /* @__PURE__ */ (0, import_jsx_runtime321.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      icon: /* @__PURE__ */ (0, import_jsx_runtime321.jsx)(import_icons100.Plus, {}),
                      label: t4("actions.add"),
                      to: "products"
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime321.jsx)(
          DataTable,
          {
            table,
            columns,
            search: true,
            pagination: true,
            pageSize: PAGE_SIZE21,
            navigateTo: ({ original }) => `/products/${original.id}`,
            count: count3,
            filters,
            isLoading,
            orderBy: [
              { key: "title", label: t4("fields.title") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            queryObject: raw,
            commands: [
              {
                action: handleRemove,
                label: t4("actions.remove"),
                shortcut: "r"
              }
            ],
            noRecords: {
              message: t4("collections.products.list.noRecordsMessage")
            }
          }
        )
      ] });
    };
    ProductActions2 = ({
      product,
      collectionId
    }) => {
      const { t: t4 } = (0, import_react_i18next230.useTranslation)();
      const prompt = (0, import_ui216.usePrompt)();
      const { mutateAsync } = useUpdateCollectionProducts(collectionId);
      const handleRemove = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("collections.removeSingleProductWarning", {
            title: product.title
          }),
          confirmText: t4("actions.remove"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(
          {
            remove: [product.id]
          },
          {
            onSuccess: () => {
              import_ui216.toast.success(
                t4("collections.products.remove.successToast", {
                  count: 1
                })
              );
            },
            onError: (e) => {
              import_ui216.toast.error(e.message);
            }
          }
        );
      };
      return /* @__PURE__ */ (0, import_jsx_runtime321.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime321.jsx)(import_icons100.PencilSquare, {}),
                  label: t4("actions.edit"),
                  to: `/products/${product.id}/edit`
                }
              ]
            },
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime321.jsx)(import_icons100.Trash, {}),
                  label: t4("actions.remove"),
                  onClick: handleRemove
                }
              ]
            }
          ]
        }
      );
    };
    columnHelper30 = (0, import_react_table31.createColumnHelper)();
    useColumns13 = () => {
      const columns = useProductTableColumns();
      return (0, import_react175.useMemo)(
        () => [
          columnHelper30.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime321.jsx)(
                import_ui216.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime321.jsx)(
                import_ui216.Checkbox,
                {
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...columns,
          columnHelper30.display({
            id: "actions",
            cell: ({ row, table }) => {
              const { collectionId } = table.options.meta;
              return /* @__PURE__ */ (0, import_jsx_runtime321.jsx)(
                ProductActions2,
                {
                  product: row.original,
                  collectionId
                }
              );
            }
          })
        ],
        [columns]
      );
    };
  }
});

// src/routes/collections/collection-detail/components/collection-product-section/index.ts
var init_collection_product_section2 = __esm({
  "src/routes/collections/collection-detail/components/collection-product-section/index.ts"() {
    "use strict";
    init_collection_product_section();
  }
});

// src/routes/collections/collection-detail/collection-detail.tsx
var import_react_router_dom97, import_jsx_runtime322, CollectionDetail;
var init_collection_detail = __esm({
  "src/routes/collections/collection-detail/collection-detail.tsx"() {
    "use strict";
    import_react_router_dom97 = require("react-router-dom");
    init_skeleton2();
    init_pages();
    init_extensions();
    init_collections();
    init_collection_general_section2();
    init_collection_product_section2();
    import_jsx_runtime322 = require("react/jsx-runtime");
    CollectionDetail = () => {
      const initialData = (0, import_react_router_dom97.useLoaderData)();
      const { id: id2 } = (0, import_react_router_dom97.useParams)();
      const { collection, isLoading, isError, error } = useCollection(id2, {
        initialData
      });
      const { getWidgets } = useDashboardExtension();
      if (isLoading || !collection) {
        return /* @__PURE__ */ (0, import_jsx_runtime322.jsx)(SingleColumnPageSkeleton, { sections: 2, showJSON: true, showMetadata: true });
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime322.jsxs)(
        SingleColumnPage,
        {
          widgets: {
            after: getWidgets("product_collection.details.after"),
            before: getWidgets("product_collection.details.before")
          },
          showJSON: true,
          showMetadata: true,
          data: collection,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime322.jsx)(CollectionGeneralSection, { collection }),
            /* @__PURE__ */ (0, import_jsx_runtime322.jsx)(CollectionProductSection, { collection })
          ]
        }
      );
    };
  }
});

// src/routes/collections/collection-detail/loader.ts
var collectionDetailQuery, collectionLoader;
var init_loader11 = __esm({
  "src/routes/collections/collection-detail/loader.ts"() {
    "use strict";
    init_collections();
    init_client2();
    init_query_client();
    collectionDetailQuery = (id2) => ({
      queryKey: collectionsQueryKeys.detail(id2),
      queryFn: async () => sdk.admin.productCollection.retrieve(id2)
    });
    collectionLoader = async ({ params: params2 }) => {
      const id2 = params2.id;
      const query = collectionDetailQuery(id2);
      return queryClient.getQueryData(
        query.queryKey
      ) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/routes/collections/collection-detail/index.ts
var collection_detail_exports = {};
__export(collection_detail_exports, {
  Component: () => CollectionDetail,
  loader: () => collectionLoader
});
var init_collection_detail2 = __esm({
  "src/routes/collections/collection-detail/index.ts"() {
    "use strict";
    init_collection_detail();
    init_loader11();
  }
});

// src/routes/collections/collection-edit/components/edit-collection-form/edit-collection-form.tsx
var import_zod56, import_ui217, import_react_hook_form58, import_react_i18next231, zod16, import_jsx_runtime323, EditCollectionSchema, EditCollectionForm;
var init_edit_collection_form = __esm({
  "src/routes/collections/collection-edit/components/edit-collection-form/edit-collection-form.tsx"() {
    "use strict";
    import_zod56 = require("@hookform/resolvers/zod");
    import_ui217 = require("@medusajs/ui");
    import_react_hook_form58 = require("react-hook-form");
    import_react_i18next231 = require("react-i18next");
    zod16 = __toESM(require("zod"));
    init_form2();
    init_modals();
    init_keybound_form2();
    init_collections();
    import_jsx_runtime323 = require("react/jsx-runtime");
    EditCollectionSchema = zod16.object({
      title: zod16.string().min(1),
      handle: zod16.string().min(1)
    });
    EditCollectionForm = ({ collection }) => {
      const { t: t4 } = (0, import_react_i18next231.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form58.useForm)({
        defaultValues: {
          title: collection.title,
          handle: collection.handle
        },
        resolver: (0, import_zod56.zodResolver)(EditCollectionSchema)
      });
      const { mutateAsync, isPending } = useUpdateCollection(collection.id);
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(data, {
          onSuccess: () => {
            handleSuccess();
          }
        });
      });
      return /* @__PURE__ */ (0, import_jsx_runtime323.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime323.jsxs)(KeyboundForm, { onSubmit: handleSubmit, className: "flex flex-1 flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime323.jsx)(RouteDrawer.Body, { children: /* @__PURE__ */ (0, import_jsx_runtime323.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime323.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "title",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime323.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime323.jsx)(Form.Label, { children: t4("fields.title") }),
                  /* @__PURE__ */ (0, import_jsx_runtime323.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime323.jsx)(import_ui217.Input, { ...field }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime323.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime323.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "handle",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime323.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime323.jsx)(Form.Label, { tooltip: t4("collections.handleTooltip"), children: t4("fields.handle") }),
                  /* @__PURE__ */ (0, import_jsx_runtime323.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime323.jsxs)("div", { className: "relative", children: [
                    /* @__PURE__ */ (0, import_jsx_runtime323.jsx)("div", { className: "absolute inset-y-0 left-0 z-10 flex w-8 items-center justify-center border-r", children: /* @__PURE__ */ (0, import_jsx_runtime323.jsx)(
                      import_ui217.Text,
                      {
                        className: "text-ui-fg-muted",
                        size: "small",
                        leading: "compact",
                        weight: "plus",
                        children: "/"
                      }
                    ) }),
                    /* @__PURE__ */ (0, import_jsx_runtime323.jsx)(import_ui217.Input, { ...field, className: "pl-10" })
                  ] }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime323.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          )
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime323.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime323.jsxs)("div", { className: "flex items-center gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime323.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime323.jsx)(import_ui217.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime323.jsx)(import_ui217.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
        ] }) })
      ] }) });
    };
  }
});

// src/routes/collections/collection-edit/components/edit-collection-form/index.ts
var init_edit_collection_form2 = __esm({
  "src/routes/collections/collection-edit/components/edit-collection-form/index.ts"() {
    "use strict";
    init_edit_collection_form();
  }
});

// src/routes/collections/collection-edit/collection-edit.tsx
var import_ui218, import_react_i18next232, import_react_router_dom98, import_jsx_runtime324, CollectionEdit;
var init_collection_edit = __esm({
  "src/routes/collections/collection-edit/collection-edit.tsx"() {
    "use strict";
    import_ui218 = require("@medusajs/ui");
    import_react_i18next232 = require("react-i18next");
    import_react_router_dom98 = require("react-router-dom");
    init_modals();
    init_collections();
    init_edit_collection_form2();
    import_jsx_runtime324 = require("react/jsx-runtime");
    CollectionEdit = () => {
      const { id: id2 } = (0, import_react_router_dom98.useParams)();
      const { t: t4 } = (0, import_react_i18next232.useTranslation)();
      const { collection, isLoading, isError, error } = useCollection(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime324.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime324.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime324.jsx)(import_ui218.Heading, { children: t4("collections.editCollection") }) }),
        !isLoading && collection && /* @__PURE__ */ (0, import_jsx_runtime324.jsx)(EditCollectionForm, { collection })
      ] });
    };
  }
});

// src/routes/collections/collection-edit/index.ts
var collection_edit_exports = {};
__export(collection_edit_exports, {
  Component: () => CollectionEdit
});
var init_collection_edit2 = __esm({
  "src/routes/collections/collection-edit/index.ts"() {
    "use strict";
    init_collection_edit();
  }
});

// src/routes/collections/collection-add-products/components/add-products-to-collection-form/add-products-to-collection-form.tsx
var import_zod57, import_ui219, import_react_query59, import_react_table32, import_react176, import_react_hook_form59, import_react_i18next233, zod17, import_jsx_runtime325, AddProductsToCollectionSchema, PAGE_SIZE22, PREFIX8, AddProductsToCollectionForm, columnHelper31, useColumns14;
var init_add_products_to_collection_form = __esm({
  "src/routes/collections/collection-add-products/components/add-products-to-collection-form/add-products-to-collection-form.tsx"() {
    "use strict";
    import_zod57 = require("@hookform/resolvers/zod");
    import_ui219 = require("@medusajs/ui");
    import_react_query59 = require("@tanstack/react-query");
    import_react_table32 = require("@tanstack/react-table");
    import_react176 = require("react");
    import_react_hook_form59 = require("react-hook-form");
    import_react_i18next233 = require("react-i18next");
    zod17 = __toESM(require("zod"));
    init_modals();
    init_data_table();
    init_keybound_form();
    init_collections();
    init_products();
    init_use_product_table_columns();
    init_use_product_table_filters();
    init_use_product_table_query();
    init_use_data_table();
    import_jsx_runtime325 = require("react/jsx-runtime");
    AddProductsToCollectionSchema = zod17.object({
      add: zod17.array(zod17.string()).min(1)
    });
    PAGE_SIZE22 = 50;
    PREFIX8 = "p";
    AddProductsToCollectionForm = ({
      collection
    }) => {
      const { t: t4 } = (0, import_react_i18next233.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form59.useForm)({
        defaultValues: {
          add: []
        },
        resolver: (0, import_zod57.zodResolver)(AddProductsToCollectionSchema)
      });
      const { setValue } = form;
      const { mutateAsync, isPending: isMutating } = useUpdateCollectionProducts(
        collection.id
      );
      const [rowSelection, setRowSelection] = (0, import_react176.useState)({});
      const updater = (newSelection) => {
        const update = typeof newSelection === "function" ? newSelection(rowSelection) : newSelection;
        setValue(
          "add",
          Object.keys(update).filter((k) => update[k]),
          {
            shouldDirty: true,
            shouldTouch: true
          }
        );
        setRowSelection(update);
      };
      (0, import_react176.useEffect)(() => {
        setValue(
          "add",
          Object.keys(rowSelection).filter((k) => rowSelection[k]),
          {
            shouldDirty: true,
            shouldTouch: true
          }
        );
      }, [rowSelection, setValue]);
      const { searchParams, raw } = useProductTableQuery({
        prefix: PREFIX8,
        pageSize: PAGE_SIZE22
      });
      const { products, count: count3, isLoading, isError, error } = useProducts(
        {
          fields: "*variants,*sales_channels",
          ...searchParams
        },
        {
          placeholderData: import_react_query59.keepPreviousData
        }
      );
      const columns = useColumns14();
      const filters = useProductTableFilters(["collections"]);
      const { table } = useDataTable({
        data: products ?? [],
        columns,
        count: count3,
        pageSize: PAGE_SIZE22,
        prefix: PREFIX8,
        getRowId: (row) => row.id,
        enableRowSelection: true,
        rowSelection: {
          state: rowSelection,
          updater
        },
        enablePagination: true,
        meta: {
          collectionId: collection.id
        }
      });
      const handleSubmit = form.handleSubmit(async (values) => {
        await mutateAsync(
          {
            add: values.add
          },
          {
            onSuccess: () => {
              import_ui219.toast.success(
                t4("collections.products.add.successToast", {
                  count: values.add.length
                })
              );
              handleSuccess();
            },
            onError: (e) => {
              import_ui219.toast.error(e.message);
            }
          }
        );
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime325.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime325.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex h-full flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime325.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime325.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              form.formState.errors.add && /* @__PURE__ */ (0, import_jsx_runtime325.jsx)(import_ui219.Hint, { variant: "error", children: form.formState.errors.add.message }),
              /* @__PURE__ */ (0, import_jsx_runtime325.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime325.jsx)(import_ui219.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime325.jsx)(import_ui219.Button, { size: "small", type: "submit", isLoading: isMutating, children: t4("actions.save") })
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime325.jsx)(RouteFocusModal.Body, { className: "size-full overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime325.jsx)(
              DataTable,
              {
                table,
                columns,
                pageSize: PAGE_SIZE22,
                count: count3,
                queryObject: raw,
                filters,
                orderBy: [
                  { key: "title", label: t4("fields.title") },
                  { key: "created_at", label: t4("fields.createdAt") },
                  { key: "updated_at", label: t4("fields.updatedAt") }
                ],
                prefix: PREFIX8,
                isLoading,
                layout: "fill",
                pagination: true,
                search: "autofocus"
              }
            ) })
          ]
        }
      ) });
    };
    columnHelper31 = (0, import_react_table32.createColumnHelper)();
    useColumns14 = () => {
      const { t: t4 } = (0, import_react_i18next233.useTranslation)();
      const base = useProductTableColumns();
      return (0, import_react176.useMemo)(
        () => [
          columnHelper31.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime325.jsx)(
                import_ui219.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row, table }) => {
              const { collectionId } = table.options.meta;
              const isAdded = row.original.collection_id === collectionId;
              const isSelected2 = row.getIsSelected() || isAdded;
              const Component5 = /* @__PURE__ */ (0, import_jsx_runtime325.jsx)(
                import_ui219.Checkbox,
                {
                  checked: isSelected2,
                  disabled: isAdded,
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
              if (isAdded) {
                return /* @__PURE__ */ (0, import_jsx_runtime325.jsx)(
                  import_ui219.Tooltip,
                  {
                    content: t4("salesChannels.productAlreadyAdded"),
                    side: "right",
                    children: Component5
                  }
                );
              }
              return Component5;
            }
          }),
          ...base
        ],
        [t4, base]
      );
    };
  }
});

// src/routes/collections/collection-add-products/components/add-products-to-collection-form/index.ts
var init_add_products_to_collection_form2 = __esm({
  "src/routes/collections/collection-add-products/components/add-products-to-collection-form/index.ts"() {
    "use strict";
    init_add_products_to_collection_form();
  }
});

// src/routes/collections/collection-add-products/collection-add-products.tsx
var import_react_router_dom99, import_jsx_runtime326, CollectionAddProducts;
var init_collection_add_products = __esm({
  "src/routes/collections/collection-add-products/collection-add-products.tsx"() {
    "use strict";
    import_react_router_dom99 = require("react-router-dom");
    init_modals();
    init_collections();
    init_add_products_to_collection_form2();
    import_jsx_runtime326 = require("react/jsx-runtime");
    CollectionAddProducts = () => {
      const { id: id2 } = (0, import_react_router_dom99.useParams)();
      const { collection, isLoading, isError, error } = useCollection(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime326.jsx)(RouteFocusModal, { children: !isLoading && collection && /* @__PURE__ */ (0, import_jsx_runtime326.jsx)(AddProductsToCollectionForm, { collection }) });
    };
  }
});

// src/routes/collections/collection-add-products/index.ts
var collection_add_products_exports = {};
__export(collection_add_products_exports, {
  Component: () => CollectionAddProducts
});
var init_collection_add_products2 = __esm({
  "src/routes/collections/collection-add-products/index.ts"() {
    "use strict";
    init_collection_add_products();
  }
});

// src/routes/price-lists/common/constants.ts
var PriceListStatus, PriceListType;
var init_constants15 = __esm({
  "src/routes/price-lists/common/constants.ts"() {
    "use strict";
    PriceListStatus = /* @__PURE__ */ ((PriceListStatus2) => {
      PriceListStatus2["ACTIVE"] = "active";
      PriceListStatus2["DRAFT"] = "draft";
      return PriceListStatus2;
    })(PriceListStatus || {});
    PriceListType = /* @__PURE__ */ ((PriceListType2) => {
      PriceListType2["SALE"] = "sale";
      PriceListType2["OVERRIDE"] = "override";
      return PriceListType2;
    })(PriceListType || {});
  }
});

// src/routes/price-lists/common/utils.ts
var import_react_router_dom100, getValues, getPriceListStatus, isProductRow, extractPricesFromVariants, exctractPricesFromProducts;
var init_utils11 = __esm({
  "src/routes/price-lists/common/utils.ts"() {
    "use strict";
    import_react_router_dom100 = require("react-router-dom");
    init_cast_number();
    init_constants15();
    getValues = (priceList) => {
      const startsAt = priceList.starts_at;
      const endsAt = priceList.ends_at;
      const isExpired = endsAt ? new Date(endsAt) < /* @__PURE__ */ new Date() : false;
      const isScheduled = startsAt ? new Date(startsAt) > /* @__PURE__ */ new Date() : false;
      const isDraft = priceList.status === "draft" /* DRAFT */;
      return {
        isExpired,
        isScheduled,
        isDraft
      };
    };
    getPriceListStatus = (t4, priceList) => {
      const { isExpired, isScheduled, isDraft } = getValues(priceList);
      let text = t4("priceLists.fields.status.options.active");
      let color = "green";
      let status = "active" /* ACTIVE */;
      if (isDraft) {
        color = "grey";
        text = t4("priceLists.fields.status.options.draft");
        status = "draft" /* DRAFT */;
      }
      if (isExpired) {
        color = "red";
        text = t4("priceLists.fields.status.options.expired");
        status = "expired" /* EXPIRED */;
      }
      if (isScheduled) {
        color = "orange";
        text = t4("priceLists.fields.status.options.scheduled");
        status = "scheduled" /* SCHEDULED */;
      }
      return {
        color,
        text,
        status
      };
    };
    isProductRow = (row) => {
      return "variants" in row;
    };
    extractPricesFromVariants = (variantId, variant, regions) => {
      const extractPriceDetails = (price, priceType, id2) => {
        const currencyCode = priceType === "currency" ? id2 : regions.find((r) => r.id === id2)?.currency_code;
        if (!currencyCode) {
          throw (0, import_react_router_dom100.json)({ message: "Currency code not found" }, 400);
        }
        return {
          amount: castNumber(price.amount),
          ...priceType === "region" ? { rules: { region_id: id2 } } : {},
          currency_code: currencyCode,
          variant_id: variantId
        };
      };
      const currencyPrices = Object.entries(variant.currency_prices || {}).flatMap(
        ([currencyCode, currencyPrice]) => {
          return currencyPrice?.amount ? [extractPriceDetails(currencyPrice, "currency", currencyCode)] : [];
        }
      );
      const regionPrices = Object.entries(variant.region_prices || {}).flatMap(
        ([regionId, regionPrice]) => {
          return regionPrice?.amount ? [extractPriceDetails(regionPrice, "region", regionId)] : [];
        }
      );
      return [...currencyPrices, ...regionPrices];
    };
    exctractPricesFromProducts = (products, regions) => {
      return Object.values(products).flatMap(
        ({ variants }) => Object.entries(variants).flatMap(
          ([variantId, variant]) => extractPricesFromVariants(variantId, variant, regions)
        )
      );
    };
  }
});

// src/routes/price-lists/common/hooks/use-delete-price-list-action.tsx
var import_ui220, import_react_i18next234, import_react_router_dom101, useDeletePriceListAction;
var init_use_delete_price_list_action = __esm({
  "src/routes/price-lists/common/hooks/use-delete-price-list-action.tsx"() {
    "use strict";
    import_ui220 = require("@medusajs/ui");
    import_react_i18next234 = require("react-i18next");
    import_react_router_dom101 = require("react-router-dom");
    init_price_lists();
    useDeletePriceListAction = ({
      priceList
    }) => {
      const { t: t4 } = (0, import_react_i18next234.useTranslation)();
      const prompt = (0, import_ui220.usePrompt)();
      const navigate = (0, import_react_router_dom101.useNavigate)();
      const { mutateAsync } = useDeletePriceList(priceList.id);
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("priceLists.delete.confirmation", {
            title: priceList.title
          }),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            import_ui220.toast.success(
              t4("priceLists.delete.successToast", {
                title: priceList.title
              })
            );
            navigate("/price-lists");
          },
          onError: (e) => {
            import_ui220.toast.error(e.message);
          }
        });
      };
      return handleDelete;
    };
  }
});

// src/routes/price-lists/price-list-list/components/price-list-list-table/price-list-list-table-actions.tsx
var import_icons101, import_react_i18next235, import_jsx_runtime327, PriceListListTableActions;
var init_price_list_list_table_actions = __esm({
  "src/routes/price-lists/price-list-list/components/price-list-list-table/price-list-list-table-actions.tsx"() {
    "use strict";
    import_icons101 = require("@medusajs/icons");
    import_react_i18next235 = require("react-i18next");
    init_action_menu2();
    init_use_delete_price_list_action();
    import_jsx_runtime327 = require("react/jsx-runtime");
    PriceListListTableActions = ({
      priceList
    }) => {
      const { t: t4 } = (0, import_react_i18next235.useTranslation)();
      const handleDelete = useDeletePriceListAction({ priceList });
      return /* @__PURE__ */ (0, import_jsx_runtime327.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  label: t4("actions.edit"),
                  to: `${priceList.id}/edit`,
                  icon: /* @__PURE__ */ (0, import_jsx_runtime327.jsx)(import_icons101.PencilSquare, {})
                }
              ]
            },
            {
              actions: [
                {
                  label: t4("actions.delete"),
                  onClick: handleDelete,
                  icon: /* @__PURE__ */ (0, import_jsx_runtime327.jsx)(import_icons101.Trash, {})
                }
              ]
            }
          ]
        }
      );
    };
  }
});

// src/routes/price-lists/price-list-list/components/price-list-list-table/use-pricing-table-columns.tsx
var import_react_table33, import_react177, import_react_i18next236, import_jsx_runtime328, columnHelper32, usePricingTableColumns;
var init_use_pricing_table_columns = __esm({
  "src/routes/price-lists/price-list-list/components/price-list-list-table/use-pricing-table-columns.tsx"() {
    "use strict";
    import_react_table33 = require("@tanstack/react-table");
    import_react177 = require("react");
    import_react_i18next236 = require("react-i18next");
    init_status_cell2();
    init_text_cell2();
    init_utils11();
    init_price_list_list_table_actions();
    import_jsx_runtime328 = require("react/jsx-runtime");
    columnHelper32 = (0, import_react_table33.createColumnHelper)();
    usePricingTableColumns = () => {
      const { t: t4 } = (0, import_react_i18next236.useTranslation)();
      return (0, import_react177.useMemo)(
        () => [
          columnHelper32.accessor("title", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime328.jsx)(TextHeader, { text: t4("fields.title") }),
            cell: (info) => info.getValue()
          }),
          columnHelper32.accessor("status", {
            header: t4("priceLists.fields.status.label"),
            cell: ({ row }) => {
              const { color, text } = getPriceListStatus(t4, row.original);
              return /* @__PURE__ */ (0, import_jsx_runtime328.jsx)(StatusCell, { color, children: text });
            }
          }),
          columnHelper32.accessor("prices", {
            header: t4("priceLists.fields.priceOverrides.header"),
            cell: (info) => /* @__PURE__ */ (0, import_jsx_runtime328.jsx)(TextCell, { text: `${info.getValue()?.length || "-"}` })
          }),
          columnHelper32.display({
            id: "actions",
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime328.jsx)(PriceListListTableActions, { priceList: row.original })
          })
        ],
        [t4]
      );
    };
  }
});

// src/routes/price-lists/price-list-list/components/price-list-list-table/use-pricing-table-filters.tsx
var usePricingTableFilters;
var init_use_pricing_table_filters = __esm({
  "src/routes/price-lists/price-list-list/components/price-list-list-table/use-pricing-table-filters.tsx"() {
    "use strict";
    init_use_date_table_filters();
    usePricingTableFilters = () => {
      const dateFilters = useDateTableFilters();
      return dateFilters;
    };
  }
});

// src/routes/price-lists/price-list-list/components/price-list-list-table/use-pricing-table-query.tsx
var usePricingTableQuery;
var init_use_pricing_table_query = __esm({
  "src/routes/price-lists/price-list-list/components/price-list-list-table/use-pricing-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    usePricingTableQuery = ({
      pageSize = 20,
      prefix
    }) => {
      const raw = useQueryParams(["offset", "q", "order", "status"], prefix);
      const searchParams = {
        limit: pageSize,
        offset: raw.offset ? Number(raw.offset) : 0,
        order: raw.order,
        status: raw.status?.split(","),
        q: raw.q
      };
      return {
        searchParams,
        raw
      };
    };
  }
});

// src/routes/price-lists/price-list-list/components/price-list-list-table/price-list-list-table.tsx
var import_ui221, import_react_query60, import_react_i18next237, import_react_router_dom102, import_jsx_runtime329, PAGE_SIZE23, PriceListListTable;
var init_price_list_list_table = __esm({
  "src/routes/price-lists/price-list-list/components/price-list-list-table/price-list-list-table.tsx"() {
    "use strict";
    import_ui221 = require("@medusajs/ui");
    import_react_query60 = require("@tanstack/react-query");
    import_react_i18next237 = require("react-i18next");
    import_react_router_dom102 = require("react-router-dom");
    init_data_table2();
    init_price_lists();
    init_use_data_table();
    init_use_pricing_table_columns();
    init_use_pricing_table_filters();
    init_use_pricing_table_query();
    import_jsx_runtime329 = require("react/jsx-runtime");
    PAGE_SIZE23 = 20;
    PriceListListTable = () => {
      const { t: t4 } = (0, import_react_i18next237.useTranslation)();
      const { searchParams, raw } = usePricingTableQuery({
        pageSize: PAGE_SIZE23
      });
      const { price_lists, count: count3, isLoading, isError, error } = usePriceLists(
        searchParams,
        {
          placeholderData: import_react_query60.keepPreviousData
        }
      );
      const filters = usePricingTableFilters();
      const columns = usePricingTableColumns();
      const { table } = useDataTable({
        data: price_lists || [],
        columns,
        count: count3,
        enablePagination: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE23
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime329.jsxs)(import_ui221.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime329.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime329.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime329.jsx)(import_ui221.Heading, { children: t4("priceLists.domain") }),
            /* @__PURE__ */ (0, import_jsx_runtime329.jsx)(import_ui221.Text, { className: "text-ui-fg-subtle", size: "small", children: t4("priceLists.subtitle") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime329.jsx)(import_ui221.Button, { size: "small", variant: "secondary", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime329.jsx)(import_react_router_dom102.Link, { to: "create", children: t4("actions.create") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime329.jsx)(
          DataTable,
          {
            table,
            columns,
            count: count3,
            filters,
            orderBy: [
              { key: "title", label: t4("fields.title") },
              { key: "status", label: t4("fields.status") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            queryObject: raw,
            pageSize: PAGE_SIZE23,
            navigateTo: (row) => row.original.id,
            isLoading,
            pagination: true,
            search: true
          }
        )
      ] });
    };
  }
});

// src/routes/price-lists/price-list-list/components/price-list-list-table/index.ts
var init_price_list_list_table2 = __esm({
  "src/routes/price-lists/price-list-list/components/price-list-list-table/index.ts"() {
    "use strict";
    init_price_list_list_table();
  }
});

// src/routes/price-lists/price-list-list/price-list-list.tsx
var import_jsx_runtime330, PriceListList;
var init_price_list_list = __esm({
  "src/routes/price-lists/price-list-list/price-list-list.tsx"() {
    "use strict";
    init_pages();
    init_extensions();
    init_price_list_list_table2();
    import_jsx_runtime330 = require("react/jsx-runtime");
    PriceListList = () => {
      const { getWidgets } = useDashboardExtension();
      return /* @__PURE__ */ (0, import_jsx_runtime330.jsx)(
        SingleColumnPage,
        {
          widgets: {
            after: getWidgets("price_list.list.after"),
            before: getWidgets("price_list.list.before")
          },
          children: /* @__PURE__ */ (0, import_jsx_runtime330.jsx)(PriceListListTable, {})
        }
      );
    };
  }
});

// src/routes/price-lists/price-list-list/index.ts
var price_list_list_exports = {};
__export(price_list_list_exports, {
  Component: () => PriceListList
});
var init_price_list_list2 = __esm({
  "src/routes/price-lists/price-list-list/index.ts"() {
    "use strict";
    init_price_list_list();
  }
});

// src/routes/price-lists/common/hooks/use-price-list-currency-data.tsx
var usePriceListCurrencyData;
var init_use_price_list_currency_data = __esm({
  "src/routes/price-lists/common/hooks/use-price-list-currency-data.tsx"() {
    "use strict";
    init_regions();
    init_store();
    init_price_preferences();
    usePriceListCurrencyData = () => {
      const {
        store,
        isPending: isStorePending,
        isError: isStoreError,
        error: storeError
      } = useStore({
        fields: "+supported_currencies"
      });
      const currencies2 = store?.supported_currencies;
      const {
        regions,
        isPending: isRegionsPending,
        isError: isRegionsError,
        error: regionsError
      } = useRegions({
        fields: "id,name,currency_code",
        limit: 999
      });
      const {
        price_preferences: pricePreferences,
        isPending: isPreferencesPending,
        isError: isPreferencesError,
        error: preferencesError
      } = usePricePreferences({});
      const isReady = !!currencies2 && !!regions && !!pricePreferences && !isStorePending && !isRegionsPending && !isPreferencesPending;
      if (isRegionsError) {
        throw regionsError;
      }
      if (isStoreError) {
        throw storeError;
      }
      if (isPreferencesError) {
        throw preferencesError;
      }
      if (!isReady) {
        return {
          regions: void 0,
          currencies: void 0,
          pricePreferences: void 0,
          isReady: false
        };
      }
      return { regions, currencies: currencies2, pricePreferences, isReady };
    };
  }
});

// src/hooks/table/columns/use-customer-group-table-columns.tsx
var import_react_table34, import_react178, import_react_i18next238, import_jsx_runtime331, columnHelper33, useCustomerGroupTableColumns;
var init_use_customer_group_table_columns = __esm({
  "src/hooks/table/columns/use-customer-group-table-columns.tsx"() {
    "use strict";
    import_react_table34 = require("@tanstack/react-table");
    import_react178 = require("react");
    import_react_i18next238 = require("react-i18next");
    init_text_cell2();
    import_jsx_runtime331 = require("react/jsx-runtime");
    columnHelper33 = (0, import_react_table34.createColumnHelper)();
    useCustomerGroupTableColumns = () => {
      const { t: t4 } = (0, import_react_i18next238.useTranslation)();
      return (0, import_react178.useMemo)(
        () => [
          columnHelper33.accessor("name", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime331.jsx)(TextHeader, { text: t4("fields.name") }),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime331.jsx)(TextCell, { text: getValue2() || "-" })
          }),
          columnHelper33.accessor("customers", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime331.jsx)(TextHeader, { text: t4("customers.domain") }),
            cell: ({ getValue: getValue2 }) => {
              const count3 = getValue2()?.length ?? 0;
              return /* @__PURE__ */ (0, import_jsx_runtime331.jsx)(TextCell, { text: count3 });
            }
          })
        ],
        [t4]
      );
    };
  }
});

// src/routes/price-lists/common/components/price-list-customer-group-rule-form/price-list-customer-group-rule-form.tsx
var import_ui222, import_react_query61, import_react_table35, import_react179, import_react_i18next239, import_jsx_runtime332, PAGE_SIZE24, PREFIX9, initRowSelection, PriceListCustomerGroupRuleForm, columnHelper34, useColumns15;
var init_price_list_customer_group_rule_form = __esm({
  "src/routes/price-lists/common/components/price-list-customer-group-rule-form/price-list-customer-group-rule-form.tsx"() {
    "use strict";
    import_ui222 = require("@medusajs/ui");
    import_react_query61 = require("@tanstack/react-query");
    import_react_table35 = require("@tanstack/react-table");
    import_react179 = require("react");
    import_react_i18next239 = require("react-i18next");
    init_stacked_drawer2();
    init_stacked_focus_modal2();
    init_data_table2();
    init_customer_groups();
    init_use_customer_group_table_columns();
    init_use_customer_group_table_filters();
    init_use_customer_group_table_query();
    init_use_data_table();
    import_jsx_runtime332 = require("react/jsx-runtime");
    PAGE_SIZE24 = 50;
    PREFIX9 = "cg";
    initRowSelection = (state) => {
      return state.reduce((acc, group) => {
        acc[group.id] = true;
        return acc;
      }, {});
    };
    PriceListCustomerGroupRuleForm = ({
      state,
      setState,
      type
    }) => {
      const { t: t4 } = (0, import_react_i18next239.useTranslation)();
      const [rowSelection, setRowSelection] = (0, import_react179.useState)(
        initRowSelection(state)
      );
      const [intermediate, setIntermediate] = (0, import_react179.useState)(state);
      (0, import_react179.useEffect)(() => {
        setRowSelection(initRowSelection(state));
        setIntermediate(state);
      }, [state]);
      const { searchParams, raw } = useCustomerGroupTableQuery({
        pageSize: PAGE_SIZE24,
        prefix: PREFIX9
      });
      const { customer_groups, count: count3, isLoading, isError, error } = useCustomerGroups(
        { ...searchParams, fields: "id,name,customers.id" },
        {
          placeholderData: import_react_query61.keepPreviousData
        }
      );
      const updater = (value) => {
        const state2 = typeof value === "function" ? value(rowSelection) : value;
        const currentIds = Object.keys(rowSelection);
        const ids = Object.keys(state2);
        const newIds = ids.filter((id2) => !currentIds.includes(id2));
        const removedIds = currentIds.filter((id2) => !ids.includes(id2));
        const newCustomerGroups = customer_groups?.filter((cg) => newIds.includes(cg.id)).map((cg) => ({ id: cg.id, name: cg.name })) || [];
        const filteredIntermediate = intermediate.filter(
          (cg) => !removedIds.includes(cg.id)
        );
        setIntermediate([...filteredIntermediate, ...newCustomerGroups]);
        setRowSelection(state2);
      };
      const handleSave = () => {
        setState(intermediate);
      };
      const filters = useCustomerGroupTableFilters();
      const columns = useColumns15();
      const { table } = useDataTable({
        data: customer_groups || [],
        columns,
        count: count3,
        enablePagination: true,
        enableRowSelection: true,
        getRowId: (row) => row.id,
        rowSelection: {
          state: rowSelection,
          updater
        },
        pageSize: PAGE_SIZE24,
        prefix: PREFIX9
      });
      const Component5 = type === "focus" ? StackedFocusModal : StackedDrawer;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime332.jsxs)("div", { className: "flex size-full flex-col overflow-hidden", children: [
        /* @__PURE__ */ (0, import_jsx_runtime332.jsx)(Component5.Body, { className: "min-h-0 p-0", children: /* @__PURE__ */ (0, import_jsx_runtime332.jsx)(
          DataTable,
          {
            table,
            columns,
            pageSize: PAGE_SIZE24,
            count: count3,
            isLoading,
            filters,
            orderBy: [
              { key: "name", label: t4("fields.name") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            layout: "fill",
            pagination: true,
            search: true,
            prefix: PREFIX9,
            queryObject: raw
          }
        ) }),
        /* @__PURE__ */ (0, import_jsx_runtime332.jsxs)(Component5.Footer, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime332.jsx)(Component5.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime332.jsx)(import_ui222.Button, { variant: "secondary", size: "small", type: "button", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime332.jsx)(import_ui222.Button, { type: "button", size: "small", onClick: handleSave, children: t4("actions.save") })
        ] })
      ] });
    };
    columnHelper34 = (0, import_react_table35.createColumnHelper)();
    useColumns15 = () => {
      const base = useCustomerGroupTableColumns();
      return (0, import_react179.useMemo)(
        () => [
          columnHelper34.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime332.jsx)(
                import_ui222.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime332.jsx)(
                import_ui222.Checkbox,
                {
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...base
        ],
        [base]
      );
    };
  }
});

// src/routes/price-lists/common/components/price-list-customer-group-rule-form/index.ts
var init_price_list_customer_group_rule_form2 = __esm({
  "src/routes/price-lists/common/components/price-list-customer-group-rule-form/index.ts"() {
    "use strict";
    init_price_list_customer_group_rule_form();
  }
});

// src/routes/price-lists/price-list-create/components/price-list-create-form/price-list-details-form.tsx
var import_icons102, import_ui223, import_react_hook_form60, import_react_i18next240, import_jsx_runtime333, PriceListDetailsForm;
var init_price_list_details_form = __esm({
  "src/routes/price-lists/price-list-create/components/price-list-create-form/price-list-details-form.tsx"() {
    "use strict";
    import_icons102 = require("@medusajs/icons");
    import_ui223 = require("@medusajs/ui");
    import_react_hook_form60 = require("react-hook-form");
    import_react_i18next240 = require("react-i18next");
    init_divider2();
    init_form2();
    init_stacked_focus_modal2();
    init_stacked_modal_provider2();
    init_price_list_customer_group_rule_form2();
    import_jsx_runtime333 = require("react/jsx-runtime");
    PriceListDetailsForm = ({ form }) => {
      const { t: t4 } = (0, import_react_i18next240.useTranslation)();
      const { fields, remove, append } = (0, import_react_hook_form60.useFieldArray)({
        control: form.control,
        name: "rules.customer_group_id",
        keyName: "cg_id"
      });
      const { setIsOpen } = useStackedModal();
      const handleAddCustomerGroup = (groups) => {
        const newIds = groups.map((group) => group.id);
        const fieldsToAdd = groups.filter(
          (group) => !fields.some((field) => field.id === group.id)
        );
        for (const field of fields) {
          if (!newIds.includes(field.id)) {
            remove(fields.indexOf(field));
          }
        }
        append(fieldsToAdd);
        setIsOpen("cg", false);
      };
      return /* @__PURE__ */ (0, import_jsx_runtime333.jsx)("div", { className: "flex flex-1 flex-col items-center overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8 px-8 py-16", children: [
        /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(import_ui223.Heading, { children: t4("priceLists.create.header") }),
          /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(import_ui223.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("priceLists.create.subheader") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(
          Form.Field,
          {
            control: form.control,
            name: "type",
            render: ({ field: { onChange, ...rest } }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)(Form.Item, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)("div", { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.Label, { children: t4("priceLists.fields.type.label") }),
                    /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.Hint, { children: t4("priceLists.fields.type.hint") })
                  ] }),
                  /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)(
                    import_ui223.RadioGroup,
                    {
                      onValueChange: onChange,
                      ...rest,
                      className: "grid grid-cols-1 gap-4 md:grid-cols-2",
                      children: [
                        /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(
                          import_ui223.RadioGroup.ChoiceBox,
                          {
                            value: "sale",
                            label: t4("priceLists.fields.type.options.sale.label"),
                            description: t4(
                              "priceLists.fields.type.options.sale.description"
                            )
                          }
                        ),
                        /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(
                          import_ui223.RadioGroup.ChoiceBox,
                          {
                            value: "override",
                            label: t4(
                              "priceLists.fields.type.options.override.label"
                            ),
                            description: t4(
                              "priceLists.fields.type.options.override.description"
                            )
                          }
                        )
                      ]
                    }
                  ) })
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.ErrorMessage, {})
              ] });
            }
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)("div", { className: "grid grid-cols-1  gap-4 md:grid-cols-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "title",
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)(Form.Item, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.Label, { children: t4("fields.title") }),
                    /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(import_ui223.Input, { ...field }) }),
                    /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "status",
                render: ({ field: { onChange, ref, ...field } }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)(Form.Item, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.Label, { children: t4("priceLists.fields.status.label") }),
                    /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)(import_ui223.Select, { ...field, onValueChange: onChange, children: [
                      /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(import_ui223.Select.Trigger, { ref, children: /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(import_ui223.Select.Value, {}) }),
                      /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)(import_ui223.Select.Content, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(import_ui223.Select.Item, { value: "active", children: t4("priceLists.fields.status.options.active") }),
                        /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(import_ui223.Select.Item, { value: "draft", children: t4("priceLists.fields.status.options.draft") })
                      ] })
                    ] }) }),
                    /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              }
            )
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "description",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.Label, { children: t4("fields.description") }),
                  /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(import_ui223.Textarea, { ...field }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Divider, {}),
        /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(
          Form.Field,
          {
            control: form.control,
            name: "starts_at",
            render: ({ field }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)(Form.Item, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)("div", { className: "grid grid-cols-1 gap-3 md:grid-cols-2", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)("div", { className: "flex flex-col", children: [
                    /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.Label, { optional: true, children: t4("priceLists.fields.startsAt.label") }),
                    /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.Hint, { children: t4("priceLists.fields.startsAt.hint") })
                  ] }),
                  /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(
                    import_ui223.DatePicker,
                    {
                      granularity: "minute",
                      shouldCloseOnSelect: false,
                      ...field
                    }
                  ) })
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.ErrorMessage, {})
              ] });
            }
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Divider, {}),
        /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(
          Form.Field,
          {
            control: form.control,
            name: "ends_at",
            render: ({ field }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)(Form.Item, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)("div", { className: "grid grid-cols-1 gap-3 md:grid-cols-2", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)("div", { className: "flex flex-col", children: [
                    /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.Label, { optional: true, children: t4("priceLists.fields.endsAt.label") }),
                    /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.Hint, { children: t4("priceLists.fields.endsAt.hint") })
                  ] }),
                  /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(
                    import_ui223.DatePicker,
                    {
                      granularity: "minute",
                      shouldCloseOnSelect: false,
                      ...field
                    }
                  ) })
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.ErrorMessage, {})
              ] });
            }
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Divider, {}),
        /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(
          Form.Field,
          {
            control: form.control,
            name: "rules.customer_group_id",
            render: ({ field }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)(Form.Item, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)("div", { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.Label, { optional: true, children: t4("priceLists.fields.customerAvailability.label") }),
                  /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.Hint, { children: t4("priceLists.fields.customerAvailability.hint") })
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)(
                  "div",
                  {
                    className: (0, import_ui223.clx)(
                      "bg-ui-bg-component shadow-elevation-card-rest transition-fg grid gap-1.5 rounded-xl py-1.5",
                      "aria-[invalid='true']:shadow-borders-error"
                    ),
                    role: "application",
                    ref: field.ref,
                    children: [
                      /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)("div", { className: "text-ui-fg-subtle grid gap-1.5 px-1.5 md:grid-cols-2", children: [
                        /* @__PURE__ */ (0, import_jsx_runtime333.jsx)("div", { className: "bg-ui-bg-field shadow-borders-base txt-compact-small rounded-md px-2 py-1.5", children: t4("priceLists.fields.customerAvailability.attribute") }),
                        /* @__PURE__ */ (0, import_jsx_runtime333.jsx)("div", { className: "bg-ui-bg-field shadow-borders-base txt-compact-small rounded-md px-2 py-1.5", children: t4("operators.in") })
                      ] }),
                      /* @__PURE__ */ (0, import_jsx_runtime333.jsx)("div", { className: "flex items-center gap-1.5 px-1.5", children: /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)(StackedFocusModal, { id: "cg", children: [
                        /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(StackedFocusModal.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)(
                          "button",
                          {
                            type: "button",
                            className: "bg-ui-bg-field-component hover:bg-ui-bg-field-component-hover shadow-borders-base txt-compact-small text-ui-fg-muted transition-fg focus-visible:shadow-borders-interactive-with-active flex flex-1 items-center gap-x-2 rounded-md px-2 py-1.5 outline-none",
                            children: [
                              /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(import_icons102.MagnifyingGlass, {}),
                              t4(
                                "priceLists.fields.customerAvailability.placeholder"
                              )
                            ]
                          }
                        ) }),
                        /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(StackedFocusModal.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(import_ui223.Button, { variant: "secondary", children: t4("actions.browse") }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)(StackedFocusModal.Content, { children: [
                          /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(StackedFocusModal.Header, {}),
                          /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(
                            PriceListCustomerGroupRuleForm,
                            {
                              state: fields,
                              setState: handleAddCustomerGroup,
                              type: "focus"
                            }
                          )
                        ] })
                      ] }) }),
                      fields.length > 0 ? /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)("div", { className: "flex flex-col gap-y-1.5", children: [
                        /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Divider, { variant: "dashed" }),
                        /* @__PURE__ */ (0, import_jsx_runtime333.jsx)("div", { className: "flex flex-col gap-y-1.5 px-1.5", children: fields.map((field2, index2) => {
                          return /* @__PURE__ */ (0, import_jsx_runtime333.jsxs)(
                            "div",
                            {
                              className: "bg-ui-bg-field-component shadow-borders-base flex items-center justify-between gap-2 rounded-md px-2 py-0.5",
                              children: [
                                /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(import_ui223.Text, { size: "small", leading: "compact", children: field2.name }),
                                /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(
                                  import_ui223.IconButton,
                                  {
                                    size: "small",
                                    variant: "transparent",
                                    type: "button",
                                    onClick: () => remove(index2),
                                    children: /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(import_icons102.XMarkMini, {})
                                  }
                                )
                              ]
                            },
                            field2.cg_id
                          );
                        }) })
                      ] }) : null
                    ]
                  }
                ) }),
                /* @__PURE__ */ (0, import_jsx_runtime333.jsx)(Form.ErrorMessage, {})
              ] });
            }
          }
        )
      ] }) });
    };
  }
});

// src/routes/price-lists/common/hooks/use-price-list-grid-columns.tsx
var import_react180, import_react_i18next241, import_jsx_runtime334, columnHelper35, usePriceListGridColumns;
var init_use_price_list_grid_columns = __esm({
  "src/routes/price-lists/common/hooks/use-price-list-grid-columns.tsx"() {
    "use strict";
    import_react180 = require("react");
    import_react_i18next241 = require("react-i18next");
    init_thumbnail2();
    init_data_grid2();
    init_create_data_grid_price_columns();
    init_utils11();
    import_jsx_runtime334 = require("react/jsx-runtime");
    columnHelper35 = createDataGridHelper();
    usePriceListGridColumns = ({
      currencies: currencies2 = [],
      regions = [],
      pricePreferences = []
    }) => {
      const { t: t4 } = (0, import_react_i18next241.useTranslation)();
      const colDefs = (0, import_react180.useMemo)(() => {
        return [
          columnHelper35.column({
            id: t4("fields.title"),
            header: t4("fields.title"),
            cell: (context) => {
              const entity = context.row.original;
              if (isProductRow(entity)) {
                return /* @__PURE__ */ (0, import_jsx_runtime334.jsx)(DataGrid.ReadonlyCell, { context, children: /* @__PURE__ */ (0, import_jsx_runtime334.jsxs)("div", { className: "flex h-full w-full items-center gap-x-2 overflow-hidden", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime334.jsx)(Thumbnail, { src: entity.thumbnail }),
                  /* @__PURE__ */ (0, import_jsx_runtime334.jsx)("span", { className: "truncate", children: entity.title })
                ] }) });
              }
              return /* @__PURE__ */ (0, import_jsx_runtime334.jsx)(DataGrid.ReadonlyCell, { context, children: /* @__PURE__ */ (0, import_jsx_runtime334.jsx)("div", { className: "flex h-full w-full items-center gap-x-2 overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime334.jsx)("span", { className: "truncate", children: entity.title }) }) });
            },
            disableHiding: true
          }),
          ...createDataGridPriceColumns({
            currencies: currencies2.map((c) => c.currency_code),
            regions,
            pricePreferences,
            isReadyOnly: (context) => {
              const entity = context.row.original;
              return isProductRow(entity);
            },
            getFieldName: (context, value) => {
              const entity = context.row.original;
              if (isProductRow(entity)) {
                return null;
              }
              if (context.column.id?.startsWith("currency_prices")) {
                return `products.${entity.product_id}.variants.${entity.id}.currency_prices.${value}.amount`;
              }
              return `products.${entity.product_id}.variants.${entity.id}.region_prices.${value}.amount`;
            },
            t: t4
          })
        ];
      }, [t4, currencies2, regions, pricePreferences]);
      return colDefs;
    };
  }
});

// src/routes/price-lists/price-list-create/components/price-list-create-form/price-list-prices-form.tsx
var import_react181, import_react_hook_form61, import_jsx_runtime335, PriceListPricesForm;
var init_price_list_prices_form = __esm({
  "src/routes/price-lists/price-list-create/components/price-list-create-form/price-list-prices-form.tsx"() {
    "use strict";
    import_react181 = require("react");
    import_react_hook_form61 = require("react-hook-form");
    init_data_grid2();
    init_modals();
    init_products();
    init_use_price_list_grid_columns();
    init_utils11();
    import_jsx_runtime335 = require("react/jsx-runtime");
    PriceListPricesForm = ({
      form,
      currencies: currencies2,
      regions,
      pricePreferences
    }) => {
      const ids = (0, import_react_hook_form61.useWatch)({
        control: form.control,
        name: "product_ids"
      });
      const existingProducts = (0, import_react_hook_form61.useWatch)({
        control: form.control,
        name: "products"
      });
      const { products, isLoading, isError, error } = useProducts({
        id: ids.map((id2) => id2.id),
        limit: ids.length,
        fields: "title,thumbnail,*variants"
      });
      const { setCloseOnEscape } = useRouteModal();
      const { setValue } = form;
      (0, import_react181.useEffect)(() => {
        if (!isLoading && products) {
          products.forEach((product) => {
            if (existingProducts[product.id] || !product.variants) {
              return;
            }
            setValue(`products.${product.id}.variants`, {
              ...product.variants.reduce((variants, variant) => {
                variants[variant.id] = {
                  currency_prices: {},
                  region_prices: {}
                };
                return variants;
              }, {})
            });
          });
        }
      }, [products, existingProducts, isLoading, setValue]);
      const columns = usePriceListGridColumns({
        currencies: currencies2,
        regions,
        pricePreferences
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime335.jsx)("div", { className: "flex size-full flex-col divide-y overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime335.jsx)(
        DataGrid,
        {
          isLoading,
          columns,
          data: products,
          getSubRows: (row) => {
            if (isProductRow(row) && row.variants) {
              return row.variants;
            }
          },
          state: form,
          onEditingChange: (editing) => setCloseOnEscape(!editing)
        }
      ) });
    };
  }
});

// src/routes/price-lists/price-list-create/components/price-list-create-form/price-list-products-form.tsx
function getInitialSelection(products) {
  return products.reduce((acc, curr) => {
    acc[curr.id] = true;
    return acc;
  }, {});
}
var import_ui224, import_react_query62, import_react_table36, import_react182, import_react_hook_form62, import_react_i18next242, import_jsx_runtime336, PAGE_SIZE25, PREFIX10, PriceListProductsForm, columnHelper36, useColumns16;
var init_price_list_products_form = __esm({
  "src/routes/price-lists/price-list-create/components/price-list-create-form/price-list-products-form.tsx"() {
    "use strict";
    import_ui224 = require("@medusajs/ui");
    import_react_query62 = require("@tanstack/react-query");
    import_react_table36 = require("@tanstack/react-table");
    import_react182 = require("react");
    import_react_hook_form62 = require("react-hook-form");
    import_react_i18next242 = require("react-i18next");
    init_data_table2();
    init_products();
    init_use_product_table_columns();
    init_use_product_table_filters();
    init_use_product_table_query();
    init_use_data_table();
    import_jsx_runtime336 = require("react/jsx-runtime");
    PAGE_SIZE25 = 50;
    PREFIX10 = "p";
    PriceListProductsForm = ({ form }) => {
      const { t: t4 } = (0, import_react_i18next242.useTranslation)();
      const { control, setValue } = form;
      const selectedIds = (0, import_react_hook_form62.useWatch)({
        control,
        name: "product_ids"
      });
      const productRecords = (0, import_react_hook_form62.useWatch)({
        control,
        name: "products"
      });
      const [rowSelection, setRowSelection] = (0, import_react182.useState)(
        getInitialSelection(selectedIds)
      );
      const { searchParams, raw } = useProductTableQuery({
        pageSize: PAGE_SIZE25,
        prefix: PREFIX10
      });
      const { products, count: count3, isLoading, isError, error } = useProducts(
        searchParams,
        {
          placeholderData: import_react_query62.keepPreviousData
        }
      );
      const updater = (fn) => {
        const state = typeof fn === "function" ? fn(rowSelection) : fn;
        const ids = Object.keys(state);
        const productRecordKeys = Object.keys(productRecords);
        const updatedRecords = productRecordKeys.reduce((acc, key) => {
          if (ids.includes(key)) {
            acc[key] = productRecords[key];
          }
          return acc;
        }, {});
        const update = ids.map((id2) => ({ id: id2 }));
        setValue("product_ids", update, { shouldDirty: true, shouldTouch: true });
        setValue("products", updatedRecords, {
          shouldDirty: true,
          shouldTouch: true
        });
        setRowSelection(state);
      };
      const columns = useColumns16();
      const filters = useProductTableFilters();
      const { table } = useDataTable({
        data: products || [],
        columns,
        count: count3,
        enablePagination: true,
        enableRowSelection: (row) => {
          return !!row.original.variants?.length;
        },
        getRowId: (row) => row.id,
        rowSelection: {
          state: rowSelection,
          updater
        },
        pageSize: PAGE_SIZE25
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime336.jsx)("div", { className: "flex size-full flex-col", children: /* @__PURE__ */ (0, import_jsx_runtime336.jsx)(
        DataTable,
        {
          table,
          columns,
          filters,
          pageSize: PAGE_SIZE25,
          prefix: PREFIX10,
          count: count3,
          isLoading,
          layout: "fill",
          orderBy: [
            { key: "title", label: t4("fields.title") },
            { key: "status", label: t4("fields.status") },
            { key: "created_at", label: t4("fields.createdAt") },
            { key: "updated_at", label: t4("fields.updatedAt") }
          ],
          pagination: true,
          search: true,
          queryObject: raw,
          noRecords: {
            message: t4("priceLists.create.products.list.noRecordsMessage")
          }
        }
      ) });
    };
    columnHelper36 = (0, import_react_table36.createColumnHelper)();
    useColumns16 = () => {
      const base = useProductTableColumns();
      return (0, import_react182.useMemo)(
        () => [
          columnHelper36.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime336.jsx)(
                import_ui224.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime336.jsx)(
                import_ui224.Checkbox,
                {
                  checked: row.getIsSelected(),
                  disabled: !row.getCanSelect(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...base
        ],
        [base]
      );
    };
  }
});

// src/routes/price-lists/common/schemas.ts
var import_zod58, PriceListCustomerGroupSchema, PriceListRulesSchema, PriceListCreateCurrencyPriceSchema, PriceListCreateRegionPriceSchema, PriceListCreateProductVariantSchema, PriceListCreateProductVariantsSchema, PriceListCreateProductsSchema, PriceListUpdateCurrencyPriceSchema, PriceListUpdateRegionPriceSchema, PriceListUpdateProductVariantsSchema, PriceListUpdateProductsSchema;
var init_schemas = __esm({
  "src/routes/price-lists/common/schemas.ts"() {
    "use strict";
    import_zod58 = require("zod");
    PriceListCustomerGroupSchema = import_zod58.z.object({
      id: import_zod58.z.string(),
      name: import_zod58.z.string()
    });
    PriceListRulesSchema = import_zod58.z.object({
      customer_group_id: import_zod58.z.array(PriceListCustomerGroupSchema).nullish()
    });
    PriceListCreateCurrencyPriceSchema = import_zod58.z.object({
      amount: import_zod58.z.string().or(import_zod58.z.number()).optional()
    });
    PriceListCreateRegionPriceSchema = import_zod58.z.object({
      amount: import_zod58.z.string().or(import_zod58.z.number()).optional()
    });
    PriceListCreateProductVariantSchema = import_zod58.z.object({
      currency_prices: import_zod58.z.record(PriceListCreateCurrencyPriceSchema.optional()),
      region_prices: import_zod58.z.record(PriceListCreateRegionPriceSchema.optional())
    });
    PriceListCreateProductVariantsSchema = import_zod58.z.record(
      PriceListCreateProductVariantSchema
    );
    PriceListCreateProductsSchema = import_zod58.z.record(
      import_zod58.z.object({
        variants: PriceListCreateProductVariantsSchema
      })
    );
    PriceListUpdateCurrencyPriceSchema = import_zod58.z.object({
      amount: import_zod58.z.string().or(import_zod58.z.number()).optional(),
      id: import_zod58.z.string().nullish()
    });
    PriceListUpdateRegionPriceSchema = import_zod58.z.object({
      amount: import_zod58.z.string().or(import_zod58.z.number()).optional(),
      id: import_zod58.z.string().nullish()
    });
    PriceListUpdateProductVariantsSchema = import_zod58.z.record(
      import_zod58.z.object({
        currency_prices: import_zod58.z.record(PriceListUpdateCurrencyPriceSchema.optional()),
        region_prices: import_zod58.z.record(PriceListUpdateRegionPriceSchema.optional())
      })
    );
    PriceListUpdateProductsSchema = import_zod58.z.record(
      import_zod58.z.object({
        variants: PriceListUpdateProductVariantsSchema
      })
    );
  }
});

// src/routes/price-lists/price-list-create/components/price-list-create-form/schema.ts
var import_zod59, PricingCustomerGroupsArray, PricingCreateSchema, PricingDetailsSchema, PricingDetailsFields, PricingProductsSchema, PricingProductsFields, PricingPricesSchema, PricingPricesFields;
var init_schema6 = __esm({
  "src/routes/price-lists/price-list-create/components/price-list-create-form/schema.ts"() {
    "use strict";
    import_zod59 = require("zod");
    init_schemas();
    PricingCustomerGroupsArray = import_zod59.z.array(
      import_zod59.z.object({
        id: import_zod59.z.string(),
        name: import_zod59.z.string()
      })
    );
    PricingCreateSchema = import_zod59.z.object({
      type: import_zod59.z.enum(["sale", "override"]),
      status: import_zod59.z.enum(["draft", "active"]),
      title: import_zod59.z.string().min(1),
      description: import_zod59.z.string().min(1),
      starts_at: import_zod59.z.date().nullish(),
      ends_at: import_zod59.z.date().nullish(),
      product_ids: import_zod59.z.array(import_zod59.z.object({ id: import_zod59.z.string() })).min(1),
      products: PriceListCreateProductsSchema,
      rules: PriceListRulesSchema.nullish()
    });
    PricingDetailsSchema = PricingCreateSchema.pick({
      type: true,
      title: true,
      description: true,
      starts_at: true,
      ends_at: true,
      customer_group_ids: true
    });
    PricingDetailsFields = Object.keys(
      PricingDetailsSchema.shape
    );
    PricingProductsSchema = PricingCreateSchema.pick({
      product_ids: true
    });
    PricingProductsFields = Object.keys(
      PricingProductsSchema.shape
    );
    PricingPricesSchema = PricingCreateSchema.pick({
      products: true
    });
    PricingPricesFields = Object.keys(
      PricingPricesSchema.shape
    );
  }
});

// src/routes/price-lists/price-list-create/components/price-list-create-form/price-list-create-form.tsx
var import_zod60, import_ui225, import_react_hook_form63, import_react_i18next243, import_react183, import_jsx_runtime337, tabOrder, initialTabState2, PriceListCreateForm, PrimaryButton3;
var init_price_list_create_form = __esm({
  "src/routes/price-lists/price-list-create/components/price-list-create-form/price-list-create-form.tsx"() {
    "use strict";
    import_zod60 = require("@hookform/resolvers/zod");
    import_ui225 = require("@medusajs/ui");
    import_react_hook_form63 = require("react-hook-form");
    import_react_i18next243 = require("react-i18next");
    import_react183 = require("react");
    init_modals();
    init_keybound_form2();
    init_price_lists();
    init_utils11();
    init_price_list_details_form();
    init_price_list_prices_form();
    init_price_list_products_form();
    init_schema6();
    import_jsx_runtime337 = require("react/jsx-runtime");
    tabOrder = ["detail" /* DETAIL */, "product" /* PRODUCT */, "price" /* PRICE */];
    initialTabState2 = {
      ["detail" /* DETAIL */]: "in-progress",
      ["product" /* PRODUCT */]: "not-started",
      ["price" /* PRICE */]: "not-started"
    };
    PriceListCreateForm = ({
      regions,
      currencies: currencies2,
      pricePreferences
    }) => {
      const [tab, setTab] = (0, import_react183.useState)("detail" /* DETAIL */);
      const [tabState, setTabState] = (0, import_react183.useState)(initialTabState2);
      const { t: t4 } = (0, import_react_i18next243.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form63.useForm)({
        defaultValues: {
          type: "sale",
          status: "active",
          title: "",
          description: "",
          starts_at: null,
          ends_at: null,
          product_ids: [],
          products: {},
          rules: {
            customer_group_id: []
          }
        },
        resolver: (0, import_zod60.zodResolver)(PricingCreateSchema)
      });
      const { mutateAsync, isPending } = useCreatePriceList();
      const handleSubmit = form.handleSubmit(async (data) => {
        const { rules, products } = data;
        const rulesPayload = rules?.customer_group_id?.length ? { customer_group_id: rules.customer_group_id.map((cg) => cg.id) } : void 0;
        const prices = exctractPricesFromProducts(products, regions);
        await mutateAsync(
          {
            title: data.title,
            type: data.type,
            status: data.status,
            description: data.description,
            starts_at: data.starts_at ? data.starts_at.toISOString() : null,
            ends_at: data.ends_at ? data.ends_at.toISOString() : null,
            rules: rulesPayload,
            prices
          },
          {
            onSuccess: ({ price_list }) => {
              import_ui225.toast.success(
                t4("priceLists.create.successToast", {
                  title: price_list.title
                })
              );
              handleSuccess(`../${price_list.id}`);
            },
            onError: (error) => {
              import_ui225.toast.error(error.message);
            }
          }
        );
      });
      const partialFormValidation2 = (fields, schema) => {
        form.clearErrors(fields);
        const values = fields.reduce((acc, key) => {
          acc[key] = form.getValues(key);
          return acc;
        }, {});
        const validationResult = schema.safeParse(values);
        if (!validationResult.success) {
          validationResult.error.errors.forEach(({ path, message, code }) => {
            form.setError(path.join("."), {
              type: code,
              message
            });
          });
          return false;
        }
        return true;
      };
      const isTabDirty = (tab2) => {
        switch (tab2) {
          case "detail" /* DETAIL */: {
            const fields = PricingDetailsFields;
            return fields.some((field) => {
              return form.getFieldState(field).isDirty;
            });
          }
          case "product" /* PRODUCT */: {
            const fields = PricingProductsFields;
            return fields.some((field) => {
              return form.getFieldState(field).isDirty;
            });
          }
          case "price" /* PRICE */: {
            const fields = PricingPricesFields;
            return fields.some((field) => {
              return form.getFieldState(field).isDirty;
            });
          }
        }
      };
      const handleChangeTab = (update) => {
        if (tab === update) {
          return;
        }
        if (tabOrder.indexOf(update) < tabOrder.indexOf(tab)) {
          const isCurrentTabDirty = isTabDirty(tab);
          setTabState((prev) => ({
            ...prev,
            [tab]: isCurrentTabDirty ? prev[tab] : "not-started",
            [update]: "in-progress"
          }));
          setTab(update);
          return;
        }
        const tabs = tabOrder.slice(0, tabOrder.indexOf(update));
        for (const tab2 of tabs) {
          if (tab2 === "detail" /* DETAIL */) {
            if (!partialFormValidation2(PricingDetailsFields, PricingDetailsSchema)) {
              setTabState((prev) => ({
                ...prev,
                [tab2]: "in-progress"
              }));
              setTab(tab2);
              return;
            }
            setTabState((prev) => ({
              ...prev,
              [tab2]: "completed"
            }));
          } else if (tab2 === "product" /* PRODUCT */) {
            if (!partialFormValidation2(PricingProductsFields, PricingProductsSchema)) {
              setTabState((prev) => ({
                ...prev,
                [tab2]: "in-progress"
              }));
              setTab(tab2);
              return;
            }
            setTabState((prev) => ({
              ...prev,
              [tab2]: "completed"
            }));
          }
        }
        setTabState((prev) => ({
          ...prev,
          [tab]: "completed",
          [update]: "in-progress"
        }));
        setTab(update);
      };
      const handleNextTab = (tab2) => {
        if (tabOrder.indexOf(tab2) + 1 >= tabOrder.length) {
          return;
        }
        const nextTab = tabOrder[tabOrder.indexOf(tab2) + 1];
        handleChangeTab(nextTab);
      };
      return /* @__PURE__ */ (0, import_jsx_runtime337.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime337.jsx)(
        import_ui225.ProgressTabs,
        {
          value: tab,
          onValueChange: (tab2) => handleChangeTab(tab2),
          className: "flex h-full flex-col overflow-hidden",
          children: /* @__PURE__ */ (0, import_jsx_runtime337.jsxs)(KeyboundForm, { onSubmit: handleSubmit, className: "flex h-full flex-col", children: [
            /* @__PURE__ */ (0, import_jsx_runtime337.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime337.jsx)("div", { className: "flex w-full items-center justify-between gap-x-4", children: /* @__PURE__ */ (0, import_jsx_runtime337.jsx)("div", { className: "-my-2 w-full max-w-[600px] border-l", children: /* @__PURE__ */ (0, import_jsx_runtime337.jsxs)(import_ui225.ProgressTabs.List, { className: "grid w-full grid-cols-3", children: [
              /* @__PURE__ */ (0, import_jsx_runtime337.jsx)(
                import_ui225.ProgressTabs.Trigger,
                {
                  status: tabState.detail,
                  value: "detail" /* DETAIL */,
                  children: t4("priceLists.create.tabs.details")
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime337.jsx)(
                import_ui225.ProgressTabs.Trigger,
                {
                  status: tabState.product,
                  value: "product" /* PRODUCT */,
                  children: t4("priceLists.create.tabs.products")
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime337.jsx)(
                import_ui225.ProgressTabs.Trigger,
                {
                  status: tabState.price,
                  value: "price" /* PRICE */,
                  children: t4("priceLists.create.tabs.prices")
                }
              )
            ] }) }) }) }),
            /* @__PURE__ */ (0, import_jsx_runtime337.jsxs)(RouteFocusModal.Body, { className: "size-full overflow-hidden", children: [
              /* @__PURE__ */ (0, import_jsx_runtime337.jsx)(
                import_ui225.ProgressTabs.Content,
                {
                  className: "size-full overflow-y-auto",
                  value: "detail" /* DETAIL */,
                  children: /* @__PURE__ */ (0, import_jsx_runtime337.jsx)(PriceListDetailsForm, { form })
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime337.jsx)(
                import_ui225.ProgressTabs.Content,
                {
                  className: "size-full overflow-y-auto",
                  value: "product" /* PRODUCT */,
                  children: /* @__PURE__ */ (0, import_jsx_runtime337.jsx)(PriceListProductsForm, { form })
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime337.jsx)(
                import_ui225.ProgressTabs.Content,
                {
                  className: "size-full overflow-hidden",
                  value: "price" /* PRICE */,
                  children: /* @__PURE__ */ (0, import_jsx_runtime337.jsx)(
                    PriceListPricesForm,
                    {
                      form,
                      regions,
                      currencies: currencies2,
                      pricePreferences
                    }
                  )
                }
              )
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime337.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime337.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime337.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime337.jsx)(import_ui225.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime337.jsx)(
                PrimaryButton3,
                {
                  tab,
                  next: handleNextTab,
                  isLoading: isPending
                }
              )
            ] }) })
          ] })
        }
      ) });
    };
    PrimaryButton3 = ({ tab, next, isLoading }) => {
      const { t: t4 } = (0, import_react_i18next243.useTranslation)();
      if (tab === "price" /* PRICE */) {
        return /* @__PURE__ */ (0, import_jsx_runtime337.jsx)(
          import_ui225.Button,
          {
            type: "submit",
            variant: "primary",
            size: "small",
            isLoading,
            children: t4("actions.save")
          },
          "submit-button"
        );
      }
      return /* @__PURE__ */ (0, import_jsx_runtime337.jsx)(
        import_ui225.Button,
        {
          type: "button",
          variant: "primary",
          size: "small",
          onClick: () => next(tab),
          children: t4("actions.continue")
        },
        "next-button"
      );
    };
  }
});

// src/routes/price-lists/price-list-create/components/price-list-create-form/index.ts
var init_price_list_create_form2 = __esm({
  "src/routes/price-lists/price-list-create/components/price-list-create-form/index.ts"() {
    "use strict";
    init_price_list_create_form();
  }
});

// src/routes/price-lists/price-list-create/price-list-create.tsx
var import_jsx_runtime338, PriceListCreate;
var init_price_list_create = __esm({
  "src/routes/price-lists/price-list-create/price-list-create.tsx"() {
    "use strict";
    init_modals();
    init_use_price_list_currency_data();
    init_price_list_create_form2();
    import_jsx_runtime338 = require("react/jsx-runtime");
    PriceListCreate = () => {
      const { isReady, regions, currencies: currencies2, pricePreferences } = usePriceListCurrencyData();
      return /* @__PURE__ */ (0, import_jsx_runtime338.jsx)(RouteFocusModal, { children: isReady && /* @__PURE__ */ (0, import_jsx_runtime338.jsx)(
        PriceListCreateForm,
        {
          regions,
          currencies: currencies2,
          pricePreferences
        }
      ) });
    };
  }
});

// src/routes/price-lists/price-list-create/index.ts
var price_list_create_exports = {};
__export(price_list_create_exports, {
  Component: () => PriceListCreate
});
var init_price_list_create2 = __esm({
  "src/routes/price-lists/price-list-create/index.ts"() {
    "use strict";
    init_price_list_create();
  }
});

// src/routes/price-lists/price-list-detail/loader.ts
var pricingDetailQuery, pricingLoader;
var init_loader12 = __esm({
  "src/routes/price-lists/price-list-detail/loader.ts"() {
    "use strict";
    init_price_lists();
    init_client2();
    init_query_client();
    pricingDetailQuery = (id2) => ({
      queryKey: priceListsQueryKeys.detail(id2),
      queryFn: async () => sdk.admin.priceList.retrieve(id2)
    });
    pricingLoader = async ({ params: params2 }) => {
      const id2 = params2.id;
      const query = pricingDetailQuery(id2);
      return queryClient.getQueryData(
        query.queryKey
      ) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/components/common/list-summary/list-summary.tsx
var import_ui226, import_react_i18next244, import_jsx_runtime339, ListSummary;
var init_list_summary = __esm({
  "src/components/common/list-summary/list-summary.tsx"() {
    "use strict";
    import_ui226 = require("@medusajs/ui");
    import_react_i18next244 = require("react-i18next");
    import_jsx_runtime339 = require("react/jsx-runtime");
    ListSummary = ({
      list,
      className,
      variant = "compact",
      inline: inline3,
      n = 2
    }) => {
      const { t: t4 } = (0, import_react_i18next244.useTranslation)();
      const title = t4("general.plusCountMore", {
        count: list.length - n
      });
      return /* @__PURE__ */ (0, import_jsx_runtime339.jsxs)(
        "div",
        {
          className: (0, import_ui226.clx)(
            "text-ui-fg-subtle gap-x-1 overflow-hidden",
            {
              "inline-flex": inline3,
              flex: !inline3,
              "txt-compact-small": variant === "compact",
              "txt-small": variant === "base"
            },
            className
          ),
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime339.jsx)("div", { className: "flex-1 truncate", children: /* @__PURE__ */ (0, import_jsx_runtime339.jsx)("span", { className: "truncate", children: list.slice(0, n).join(", ") }) }),
            list.length > n && /* @__PURE__ */ (0, import_jsx_runtime339.jsx)("div", { className: "whitespace-nowrap", children: /* @__PURE__ */ (0, import_jsx_runtime339.jsx)(
              import_ui226.Tooltip,
              {
                content: /* @__PURE__ */ (0, import_jsx_runtime339.jsx)("ul", { children: list.slice(n).map((c) => /* @__PURE__ */ (0, import_jsx_runtime339.jsx)("li", { children: c }, c)) }),
                children: /* @__PURE__ */ (0, import_jsx_runtime339.jsx)("span", { className: "cursor-default whitespace-nowrap", children: title })
              }
            ) })
          ]
        }
      );
    };
  }
});

// src/components/common/list-summary/index.ts
var init_list_summary2 = __esm({
  "src/components/common/list-summary/index.ts"() {
    "use strict";
    init_list_summary();
  }
});

// src/routes/price-lists/price-list-detail/components/price-list-configuration-section/price-list-configuration-section.tsx
var import_icons103, import_ui227, import_react_i18next245, import_jsx_runtime340, PriceListConfigurationSection, CustomerGroupDisplay;
var init_price_list_configuration_section = __esm({
  "src/routes/price-lists/price-list-detail/components/price-list-configuration-section/price-list-configuration-section.tsx"() {
    "use strict";
    import_icons103 = require("@medusajs/icons");
    import_ui227 = require("@medusajs/ui");
    import_react_i18next245 = require("react-i18next");
    init_action_menu2();
    init_date_range_display2();
    init_list_summary2();
    init_skeleton2();
    init_customer_groups();
    import_jsx_runtime340 = require("react/jsx-runtime");
    PriceListConfigurationSection = ({
      priceList
    }) => {
      const { t: t4 } = (0, import_react_i18next245.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime340.jsxs)(import_ui227.Container, { className: "flex flex-col gap-y-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime340.jsxs)("div", { className: "flex items-center justify-between", children: [
          /* @__PURE__ */ (0, import_jsx_runtime340.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime340.jsx)(import_ui227.Heading, { level: "h2", children: t4("priceLists.configuration.header") }),
            /* @__PURE__ */ (0, import_jsx_runtime340.jsx)(CustomerGroupDisplay, { priceList })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime340.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      label: t4("actions.edit"),
                      to: "configuration",
                      icon: /* @__PURE__ */ (0, import_jsx_runtime340.jsx)(import_icons103.PencilSquare, {})
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime340.jsx)(
          DateRangeDisplay,
          {
            endsAt: priceList.ends_at,
            startsAt: priceList.starts_at,
            showTime: true
          }
        )
      ] });
    };
    CustomerGroupDisplay = ({
      priceList
    }) => {
      const { t: t4 } = (0, import_react_i18next245.useTranslation)();
      const customerGroupIds = priceList.rules.customer_group_id;
      const { customer_groups, isPending, isError, error } = useCustomerGroups(
        {
          id: customerGroupIds
        },
        {
          enabled: !!customerGroupIds?.length
        }
      );
      if (isError) {
        throw error;
      }
      if (!customerGroupIds?.length) {
        return null;
      }
      if (isPending || !customer_groups) {
        return /* @__PURE__ */ (0, import_jsx_runtime340.jsx)(Skeleton, { className: "h-5 w-full max-w-48" });
      }
      return /* @__PURE__ */ (0, import_jsx_runtime340.jsxs)("div", { className: "txt-small-plus text-ui-fg-muted flex items-center gap-x-1.5", children: [
        /* @__PURE__ */ (0, import_jsx_runtime340.jsx)("span", { className: "text-ui-fg-subtle", children: t4("priceLists.fields.customerAvailability.attribute") }),
        /* @__PURE__ */ (0, import_jsx_runtime340.jsx)("span", { children: "\xB7" }),
        /* @__PURE__ */ (0, import_jsx_runtime340.jsx)(
          ListSummary,
          {
            list: customer_groups.map((group) => group.name),
            n: 1,
            className: "txt-small-plus text-ui-fg-muted"
          }
        )
      ] });
    };
  }
});

// src/routes/price-lists/price-list-detail/components/price-list-configuration-section/index.ts
var init_price_list_configuration_section2 = __esm({
  "src/routes/price-lists/price-list-detail/components/price-list-configuration-section/index.ts"() {
    "use strict";
    init_price_list_configuration_section();
  }
});

// src/routes/price-lists/price-list-detail/components/price-list-general-section/price-list-general-section.tsx
var import_icons104, import_ui228, import_react_i18next246, import_jsx_runtime341, PriceListGeneralSection;
var init_price_list_general_section = __esm({
  "src/routes/price-lists/price-list-detail/components/price-list-general-section/price-list-general-section.tsx"() {
    "use strict";
    import_icons104 = require("@medusajs/icons");
    import_ui228 = require("@medusajs/ui");
    import_react_i18next246 = require("react-i18next");
    init_action_menu2();
    init_use_delete_price_list_action();
    init_utils11();
    import_jsx_runtime341 = require("react/jsx-runtime");
    PriceListGeneralSection = ({
      priceList
    }) => {
      const { t: t4 } = (0, import_react_i18next246.useTranslation)();
      const overrideCount = priceList.prices?.length || 0;
      const { color, text } = getPriceListStatus(t4, priceList);
      const handleDelete = useDeletePriceListAction({ priceList });
      const type = priceList.type === "sale" ? t4("priceLists.fields.type.options.sale.label") : t4("priceLists.fields.type.options.override.label");
      return /* @__PURE__ */ (0, import_jsx_runtime341.jsxs)(import_ui228.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime341.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime341.jsx)(import_ui228.Heading, { children: priceList.title }),
          /* @__PURE__ */ (0, import_jsx_runtime341.jsxs)("div", { className: "flex items-center gap-x-4", children: [
            /* @__PURE__ */ (0, import_jsx_runtime341.jsx)(import_ui228.StatusBadge, { color, children: text }),
            /* @__PURE__ */ (0, import_jsx_runtime341.jsx)(
              ActionMenu,
              {
                groups: [
                  {
                    actions: [
                      {
                        label: t4("actions.edit"),
                        to: "edit",
                        icon: /* @__PURE__ */ (0, import_jsx_runtime341.jsx)(import_icons104.PencilSquare, {})
                      }
                    ]
                  },
                  {
                    actions: [
                      {
                        label: t4("actions.delete"),
                        onClick: handleDelete,
                        icon: /* @__PURE__ */ (0, import_jsx_runtime341.jsx)(import_icons104.Trash, {})
                      }
                    ]
                  }
                ]
              }
            )
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime341.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime341.jsx)(import_ui228.Text, { leading: "compact", size: "small", weight: "plus", children: t4("fields.type") }),
          /* @__PURE__ */ (0, import_jsx_runtime341.jsx)(import_ui228.Text, { size: "small", className: "text-pretty", children: type })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime341.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime341.jsx)(import_ui228.Text, { leading: "compact", size: "small", weight: "plus", children: t4("fields.description") }),
          /* @__PURE__ */ (0, import_jsx_runtime341.jsx)(import_ui228.Text, { size: "small", className: "text-pretty", children: priceList.description })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime341.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime341.jsx)(import_ui228.Text, { leading: "compact", size: "small", weight: "plus", children: t4("priceLists.fields.priceOverrides.label") }),
          /* @__PURE__ */ (0, import_jsx_runtime341.jsx)(import_ui228.Text, { size: "small", className: "text-pretty", children: overrideCount || "-" })
        ] })
      ] });
    };
  }
});

// src/routes/price-lists/price-list-detail/components/price-list-general-section/index.ts
var init_price_list_general_section2 = __esm({
  "src/routes/price-lists/price-list-detail/components/price-list-general-section/index.ts"() {
    "use strict";
    init_price_list_general_section();
  }
});

// src/routes/price-lists/price-list-detail/components/price-list-product-section/price-list-product-section.tsx
var import_icons105, import_ui229, import_react_query63, import_react_table37, import_react184, import_react_i18next247, import_react_router_dom103, import_jsx_runtime342, PAGE_SIZE26, PREFIX11, PriceListProductSection, ProductRowAction, columnHelper37, useColumns17;
var init_price_list_product_section = __esm({
  "src/routes/price-lists/price-list-detail/components/price-list-product-section/price-list-product-section.tsx"() {
    "use strict";
    import_icons105 = require("@medusajs/icons");
    import_ui229 = require("@medusajs/ui");
    import_react_query63 = require("@tanstack/react-query");
    import_react_table37 = require("@tanstack/react-table");
    import_react184 = require("react");
    import_react_i18next247 = require("react-i18next");
    import_react_router_dom103 = require("react-router-dom");
    init_action_menu2();
    init_data_table2();
    init_price_lists();
    init_products();
    init_use_product_table_columns();
    init_use_product_table_filters();
    init_use_product_table_query();
    init_use_data_table();
    import_jsx_runtime342 = require("react/jsx-runtime");
    PAGE_SIZE26 = 10;
    PREFIX11 = "p";
    PriceListProductSection = ({
      priceList
    }) => {
      const { t: t4 } = (0, import_react_i18next247.useTranslation)();
      const navigate = (0, import_react_router_dom103.useNavigate)();
      const prompt = (0, import_ui229.usePrompt)();
      const [rowSelection, setRowSelection] = (0, import_react184.useState)({});
      const { searchParams, raw } = useProductTableQuery({
        pageSize: PAGE_SIZE26,
        prefix: PREFIX11
      });
      const { products, count: count3, isLoading, isError, error } = useProducts(
        {
          ...searchParams,
          price_list_id: [priceList.id]
        },
        {
          placeholderData: import_react_query63.keepPreviousData
        }
      );
      const filters = useProductTableFilters();
      const columns = useColumns17(priceList);
      const { mutateAsync } = usePriceListLinkProducts(priceList.id);
      const { table } = useDataTable({
        data: products || [],
        count: count3,
        columns,
        enablePagination: true,
        enableRowSelection: true,
        pageSize: PAGE_SIZE26,
        getRowId: (row) => row.id,
        rowSelection: {
          state: rowSelection,
          updater: setRowSelection
        },
        prefix: PREFIX11
      });
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("priceLists.products.delete.confirmation", {
            count: Object.keys(rowSelection).length
          }),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        mutateAsync(
          {
            remove: Object.keys(rowSelection)
          },
          {
            onSuccess: () => {
              import_ui229.toast.success(
                t4("priceLists.products.delete.successToast", {
                  count: Object.keys(rowSelection).length
                })
              );
              setRowSelection({});
            },
            onError: (e) => {
              import_ui229.toast.error(e.message);
            }
          }
        );
      };
      const handleEdit = async () => {
        const ids = Object.keys(rowSelection).join(",");
        navigate(`products/edit?ids[]=${ids}`);
      };
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime342.jsxs)(import_ui229.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime342.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime342.jsx)(import_ui229.Heading, { children: t4("priceLists.products.header") }),
          /* @__PURE__ */ (0, import_jsx_runtime342.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      label: t4("priceLists.products.actions.addProducts"),
                      to: "products/add",
                      icon: /* @__PURE__ */ (0, import_jsx_runtime342.jsx)(import_icons105.Plus, {})
                    },
                    {
                      label: t4("priceLists.products.actions.editPrices"),
                      to: "products/edit",
                      icon: /* @__PURE__ */ (0, import_jsx_runtime342.jsx)(import_icons105.PencilSquare, {})
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime342.jsx)(
          DataTable,
          {
            table,
            filters,
            columns,
            count: count3,
            pageSize: PAGE_SIZE26,
            isLoading,
            navigateTo: (row) => `/products/${row.original.id}`,
            orderBy: [
              { key: "title", label: t4("fields.title") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            commands: [
              {
                action: handleEdit,
                label: t4("actions.edit"),
                shortcut: "e"
              },
              {
                action: handleDelete,
                label: t4("actions.delete"),
                shortcut: "d"
              }
            ],
            pagination: true,
            search: true,
            prefix: PREFIX11,
            queryObject: raw
          }
        )
      ] });
    };
    ProductRowAction = ({
      product,
      priceList
    }) => {
      const { t: t4 } = (0, import_react_i18next247.useTranslation)();
      const prompt = (0, import_ui229.usePrompt)();
      const { mutateAsync } = usePriceListLinkProducts(priceList.id);
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("priceLists.products.delete.confirmation", {
            count: 1
          }),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        mutateAsync(
          {
            remove: [product.id]
          },
          {
            onSuccess: () => {
              import_ui229.toast.success(
                t4("priceLists.products.delete.successToast", {
                  count: 1
                })
              );
            },
            onError: (e) => {
              import_ui229.toast.error(e.message);
            }
          }
        );
      };
      return /* @__PURE__ */ (0, import_jsx_runtime342.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime342.jsx)(import_icons105.PencilSquare, {}),
                  label: t4("priceLists.products.actions.editPrices"),
                  to: `products/edit?ids[]=${product.id}`
                }
              ]
            },
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime342.jsx)(import_icons105.Trash, {}),
                  label: t4("actions.remove"),
                  onClick: handleDelete
                }
              ]
            }
          ]
        }
      );
    };
    columnHelper37 = (0, import_react_table37.createColumnHelper)();
    useColumns17 = (priceList) => {
      const base = useProductTableColumns();
      return (0, import_react184.useMemo)(
        () => [
          columnHelper37.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime342.jsx)(
                import_ui229.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime342.jsx)(
                import_ui229.Checkbox,
                {
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...base,
          columnHelper37.display({
            id: "actions",
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime342.jsx)(ProductRowAction, { product: row.original, priceList })
          })
        ],
        [base, priceList]
      );
    };
  }
});

// src/routes/price-lists/price-list-detail/components/price-list-product-section/index.ts
var init_price_list_product_section2 = __esm({
  "src/routes/price-lists/price-list-detail/components/price-list-product-section/index.ts"() {
    "use strict";
    init_price_list_product_section();
  }
});

// src/routes/price-lists/price-list-detail/price-list-detail.tsx
var import_react_router_dom104, import_jsx_runtime343, PriceListDetails;
var init_price_list_detail = __esm({
  "src/routes/price-lists/price-list-detail/price-list-detail.tsx"() {
    "use strict";
    import_react_router_dom104 = require("react-router-dom");
    init_price_lists();
    init_price_list_configuration_section2();
    init_price_list_general_section2();
    init_price_list_product_section2();
    init_skeleton2();
    init_pages();
    init_extensions();
    import_jsx_runtime343 = require("react/jsx-runtime");
    PriceListDetails = () => {
      const { id: id2 } = (0, import_react_router_dom104.useParams)();
      const { price_list, isLoading, isError, error } = usePriceList(id2);
      const { getWidgets } = useDashboardExtension();
      if (isLoading || !price_list) {
        return /* @__PURE__ */ (0, import_jsx_runtime343.jsx)(TwoColumnPageSkeleton, { mainSections: 2, sidebarSections: 1, showJSON: true });
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime343.jsxs)(
        TwoColumnPage,
        {
          widgets: {
            after: getWidgets("price_list.details.after"),
            before: getWidgets("price_list.details.before"),
            sideAfter: getWidgets("price_list.details.side.after"),
            sideBefore: getWidgets("price_list.details.side.before")
          },
          data: price_list,
          showJSON: true,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime343.jsxs)(TwoColumnPage.Main, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime343.jsx)(PriceListGeneralSection, { priceList: price_list }),
              /* @__PURE__ */ (0, import_jsx_runtime343.jsx)(PriceListProductSection, { priceList: price_list })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime343.jsx)(TwoColumnPage.Sidebar, { children: /* @__PURE__ */ (0, import_jsx_runtime343.jsx)(PriceListConfigurationSection, { priceList: price_list }) })
          ]
        }
      );
    };
  }
});

// src/routes/price-lists/price-list-detail/index.ts
var price_list_detail_exports = {};
__export(price_list_detail_exports, {
  Component: () => PriceListDetails,
  loader: () => pricingLoader
});
var init_price_list_detail2 = __esm({
  "src/routes/price-lists/price-list-detail/index.ts"() {
    "use strict";
    init_loader12();
    init_price_list_detail();
  }
});

// src/routes/price-lists/price-list-edit/components/price-list-edit-form/edit-price-list-form.tsx
var import_zod61, import_ui230, import_react_hook_form64, import_react_i18next248, import_zod62, import_jsx_runtime344, PriceListEditSchema, PriceListEditForm;
var init_edit_price_list_form = __esm({
  "src/routes/price-lists/price-list-edit/components/price-list-edit-form/edit-price-list-form.tsx"() {
    "use strict";
    import_zod61 = require("@hookform/resolvers/zod");
    import_ui230 = require("@medusajs/ui");
    import_react_hook_form64 = require("react-hook-form");
    import_react_i18next248 = require("react-i18next");
    import_zod62 = require("zod");
    init_form2();
    init_modals();
    init_keybound_form2();
    init_price_lists();
    init_constants15();
    import_jsx_runtime344 = require("react/jsx-runtime");
    PriceListEditSchema = import_zod62.z.object({
      status: import_zod62.z.nativeEnum(PriceListStatus),
      type: import_zod62.z.nativeEnum(PriceListType),
      title: import_zod62.z.string().min(1),
      description: import_zod62.z.string().min(1)
    });
    PriceListEditForm = ({ priceList }) => {
      const { t: t4 } = (0, import_react_i18next248.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form64.useForm)({
        defaultValues: {
          type: priceList.type,
          title: priceList.title,
          description: priceList.description,
          status: priceList.status
        },
        resolver: (0, import_zod61.zodResolver)(PriceListEditSchema)
      });
      const { mutateAsync, isPending } = useUpdatePriceList(priceList.id);
      const handleSubmit = form.handleSubmit(async (values) => {
        await mutateAsync(values, {
          onSuccess: ({ price_list }) => {
            import_ui230.toast.success(
              t4("priceLists.edit.successToast", {
                title: price_list.title
              })
            );
            handleSuccess();
          },
          onError: (error) => {
            import_ui230.toast.error(error.message);
          }
        });
      });
      return /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime344.jsxs)(
        KeyboundForm,
        {
          className: "flex flex-1 flex-col overflow-hidden",
          onSubmit: handleSubmit,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime344.jsxs)(RouteDrawer.Body, { className: "flex flex-1 flex-col gap-y-6 overflow-auto", children: [
              /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "type",
                  render: ({ field: { onChange, ...field } }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime344.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime344.jsxs)("div", { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(Form.Label, { children: t4("priceLists.fields.type.label") }),
                        /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(Form.Hint, { children: t4("priceLists.fields.type.hint") })
                      ] }),
                      /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime344.jsxs)(import_ui230.RadioGroup, { ...field, onValueChange: onChange, children: [
                        /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(
                          import_ui230.RadioGroup.ChoiceBox,
                          {
                            value: "sale" /* SALE */,
                            label: t4("priceLists.fields.type.options.sale.label"),
                            description: t4(
                              "priceLists.fields.type.options.sale.description"
                            )
                          }
                        ),
                        /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(
                          import_ui230.RadioGroup.ChoiceBox,
                          {
                            value: "override" /* OVERRIDE */,
                            label: t4(
                              "priceLists.fields.type.options.override.label"
                            ),
                            description: t4(
                              "priceLists.fields.type.options.override.description"
                            )
                          }
                        )
                      ] }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime344.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "title",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime344.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(Form.Label, { children: t4("fields.title") }),
                        /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(import_ui230.Input, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "status",
                    render: ({ field: { onChange, ref, ...field } }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime344.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(Form.Label, { children: t4("priceLists.fields.status.label") }),
                        /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime344.jsxs)(import_ui230.Select, { ...field, onValueChange: onChange, children: [
                          /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(import_ui230.Select.Trigger, { ref, children: /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(import_ui230.Select.Value, {}) }),
                          /* @__PURE__ */ (0, import_jsx_runtime344.jsxs)(import_ui230.Select.Content, { children: [
                            /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(import_ui230.Select.Item, { value: "active" /* ACTIVE */, children: t4("priceLists.fields.status.options.active") }),
                            /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(import_ui230.Select.Item, { value: "draft" /* DRAFT */, children: t4("priceLists.fields.status.options.draft") })
                          ] })
                        ] }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "description",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime344.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(Form.Label, { children: t4("fields.description") }),
                        /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(import_ui230.Textarea, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                )
              ] })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(RouteDrawer.Footer, { className: "shrink-0", children: /* @__PURE__ */ (0, import_jsx_runtime344.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(import_ui230.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime344.jsx)(import_ui230.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/price-lists/price-list-edit/components/price-list-edit-form/index.ts
var init_price_list_edit_form = __esm({
  "src/routes/price-lists/price-list-edit/components/price-list-edit-form/index.ts"() {
    "use strict";
    init_edit_price_list_form();
  }
});

// src/routes/price-lists/price-list-edit/price-list-edit.tsx
var import_ui231, import_react_i18next249, import_react_router_dom105, import_jsx_runtime345, PriceListEdit;
var init_price_list_edit = __esm({
  "src/routes/price-lists/price-list-edit/price-list-edit.tsx"() {
    "use strict";
    import_ui231 = require("@medusajs/ui");
    import_react_i18next249 = require("react-i18next");
    import_react_router_dom105 = require("react-router-dom");
    init_modals();
    init_price_lists();
    init_price_list_edit_form();
    import_jsx_runtime345 = require("react/jsx-runtime");
    PriceListEdit = () => {
      const { t: t4 } = (0, import_react_i18next249.useTranslation)();
      const { id: id2 } = (0, import_react_router_dom105.useParams)();
      const { price_list, isLoading, isError, error } = usePriceList(id2);
      const ready = !isLoading && price_list;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime345.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime345.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime345.jsx)(import_ui231.Heading, { children: t4("priceLists.edit.header") }) }),
        ready && /* @__PURE__ */ (0, import_jsx_runtime345.jsx)(PriceListEditForm, { priceList: price_list })
      ] });
    };
  }
});

// src/routes/price-lists/price-list-edit/index.ts
var price_list_edit_exports = {};
__export(price_list_edit_exports, {
  Component: () => PriceListEdit
});
var init_price_list_edit2 = __esm({
  "src/routes/price-lists/price-list-edit/index.ts"() {
    "use strict";
    init_price_list_edit();
  }
});

// src/routes/price-lists/price-list-configuration/components/price-list-configuration-form/price-list-configuration-form.tsx
var import_zod63, import_icons106, import_ui232, import_react_hook_form65, import_react_i18next250, import_zod64, import_jsx_runtime346, PriceListConfigurationSchema, STACKED_MODAL_ID, PriceListConfigurationForm;
var init_price_list_configuration_form = __esm({
  "src/routes/price-lists/price-list-configuration/components/price-list-configuration-form/price-list-configuration-form.tsx"() {
    "use strict";
    import_zod63 = require("@hookform/resolvers/zod");
    import_icons106 = require("@medusajs/icons");
    import_ui232 = require("@medusajs/ui");
    import_react_hook_form65 = require("react-hook-form");
    import_react_i18next250 = require("react-i18next");
    import_zod64 = require("zod");
    init_divider2();
    init_form2();
    init_modals();
    init_stacked_drawer2();
    init_stacked_modal_provider2();
    init_keybound_form2();
    init_price_lists();
    init_price_list_customer_group_rule_form2();
    import_jsx_runtime346 = require("react/jsx-runtime");
    PriceListConfigurationSchema = import_zod64.z.object({
      ends_at: import_zod64.z.date().nullable(),
      starts_at: import_zod64.z.date().nullable(),
      customer_group_id: import_zod64.z.array(
        import_zod64.z.object({
          id: import_zod64.z.string(),
          name: import_zod64.z.string()
        })
      )
    });
    STACKED_MODAL_ID = "cg";
    PriceListConfigurationForm = ({
      priceList,
      customerGroups
    }) => {
      const { t: t4 } = (0, import_react_i18next250.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const { setIsOpen } = useStackedModal();
      const form = (0, import_react_hook_form65.useForm)({
        defaultValues: {
          ends_at: priceList.ends_at ? new Date(priceList.ends_at) : null,
          starts_at: priceList.starts_at ? new Date(priceList.starts_at) : null,
          customer_group_id: customerGroups
        },
        resolver: (0, import_zod63.zodResolver)(PriceListConfigurationSchema)
      });
      const { fields, remove, append } = (0, import_react_hook_form65.useFieldArray)({
        control: form.control,
        name: "customer_group_id",
        keyName: "cg_id"
      });
      const handleAddCustomerGroup = (groups) => {
        if (!groups.length) {
          form.setValue("customer_group_id", []);
          setIsOpen(STACKED_MODAL_ID, false);
          return;
        }
        const newIds = groups.map((group) => group.id);
        const fieldsToAdd = groups.filter(
          (group) => !fields.some((field) => field.id === group.id)
        );
        for (const field of fields) {
          if (!newIds.includes(field.id)) {
            remove(fields.indexOf(field));
          }
        }
        append(fieldsToAdd);
        setIsOpen(STACKED_MODAL_ID, false);
      };
      const { mutateAsync } = useUpdatePriceList(priceList.id);
      const handleSubmit = form.handleSubmit(async (values) => {
        const groupIds = values.customer_group_id.map((group) => group.id);
        const rules = { ...priceList.rules };
        if (groupIds.length) {
          rules["customer_group_id"] = groupIds;
        } else {
          delete rules["customer_group_id"];
        }
        await mutateAsync(
          {
            starts_at: values.starts_at?.toISOString() || null,
            ends_at: values.ends_at?.toISOString() || null,
            rules
          },
          {
            onSuccess: () => {
              import_ui232.toast.success(t4("priceLists.configuration.edit.successToast"));
              handleSuccess();
            },
            onError: (error) => import_ui232.toast.error(error.message)
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime346.jsxs)(RouteDrawer.Form, { form, children: [
        /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(RouteDrawer.Description, { className: "sr-only", children: t4("priceLists.configuration.edit.description") }),
        /* @__PURE__ */ (0, import_jsx_runtime346.jsxs)(
          KeyboundForm,
          {
            className: "flex flex-1 flex-col overflow-hidden",
            onSubmit: handleSubmit,
            children: [
              /* @__PURE__ */ (0, import_jsx_runtime346.jsxs)(RouteDrawer.Body, { className: "flex flex-1 flex-col gap-y-8 overflow-auto", children: [
                /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "starts_at",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime346.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime346.jsxs)("div", { className: "grid grid-cols-1 gap-3", children: [
                          /* @__PURE__ */ (0, import_jsx_runtime346.jsxs)("div", { className: "flex flex-col", children: [
                            /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(Form.Label, { optional: true, children: t4("priceLists.fields.startsAt.label") }),
                            /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(Form.Hint, { children: t4("priceLists.fields.startsAt.hint") })
                          ] }),
                          /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(
                            import_ui232.DatePicker,
                            {
                              granularity: "minute",
                              shouldCloseOnSelect: false,
                              ...field
                            }
                          ) })
                        ] }),
                        /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(Divider, {}),
                /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "ends_at",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime346.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime346.jsxs)("div", { className: "grid grid-cols-1 gap-3", children: [
                          /* @__PURE__ */ (0, import_jsx_runtime346.jsxs)("div", { className: "flex flex-col", children: [
                            /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(Form.Label, { optional: true, children: t4("priceLists.fields.endsAt.label") }),
                            /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(Form.Hint, { children: t4("priceLists.fields.endsAt.hint") })
                          ] }),
                          /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(
                            import_ui232.DatePicker,
                            {
                              granularity: "minute",
                              shouldCloseOnSelect: false,
                              ...field
                            }
                          ) })
                        ] }),
                        /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(Divider, {}),
                /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "customer_group_id",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime346.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime346.jsxs)("div", { children: [
                          /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(Form.Label, { optional: true, children: t4("priceLists.fields.customerAvailability.label") }),
                          /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(Form.Hint, { children: t4("priceLists.fields.customerAvailability.hint") })
                        ] }),
                        /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime346.jsxs)(
                          "div",
                          {
                            className: (0, import_ui232.clx)(
                              "bg-ui-bg-component shadow-elevation-card-rest transition-fg grid gap-1.5 rounded-xl py-1.5",
                              "aria-[invalid='true']:shadow-borders-error"
                            ),
                            role: "application",
                            ref: field.ref,
                            children: [
                              /* @__PURE__ */ (0, import_jsx_runtime346.jsxs)("div", { className: "text-ui-fg-subtle grid gap-1.5 px-1.5 md:grid-cols-2", children: [
                                /* @__PURE__ */ (0, import_jsx_runtime346.jsx)("div", { className: "bg-ui-bg-field shadow-borders-base txt-compact-small rounded-md px-2 py-1.5", children: t4(
                                  "priceLists.fields.customerAvailability.attribute"
                                ) }),
                                /* @__PURE__ */ (0, import_jsx_runtime346.jsx)("div", { className: "bg-ui-bg-field shadow-borders-base txt-compact-small rounded-md px-2 py-1.5", children: t4("operators.in") })
                              ] }),
                              /* @__PURE__ */ (0, import_jsx_runtime346.jsx)("div", { className: "flex items-center gap-1.5 px-1.5", children: /* @__PURE__ */ (0, import_jsx_runtime346.jsxs)(StackedDrawer, { id: STACKED_MODAL_ID, children: [
                                /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(StackedDrawer.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime346.jsxs)(
                                  "button",
                                  {
                                    type: "button",
                                    className: "bg-ui-bg-field shadow-borders-base txt-compact-small text-ui-fg-muted flex flex-1 items-center gap-x-2 rounded-md px-2 py-1.5",
                                    children: [
                                      /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(import_icons106.MagnifyingGlass, {}),
                                      t4(
                                        "priceLists.fields.customerAvailability.placeholder"
                                      )
                                    ]
                                  }
                                ) }),
                                /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(StackedDrawer.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(import_ui232.Button, { variant: "secondary", children: t4("actions.browse") }) }),
                                /* @__PURE__ */ (0, import_jsx_runtime346.jsxs)(StackedDrawer.Content, { children: [
                                  /* @__PURE__ */ (0, import_jsx_runtime346.jsxs)(StackedDrawer.Header, { children: [
                                    /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(StackedDrawer.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(import_ui232.Heading, { children: t4(
                                      "priceLists.fields.customerAvailability.header"
                                    ) }) }),
                                    /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(StackedDrawer.Description, { className: "sr-only", children: t4(
                                      "priceLists.fields.customerAvailability.hint"
                                    ) })
                                  ] }),
                                  /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(
                                    PriceListCustomerGroupRuleForm,
                                    {
                                      type: "drawer",
                                      setState: handleAddCustomerGroup,
                                      state: fields
                                    }
                                  )
                                ] })
                              ] }) }),
                              fields.length > 0 ? /* @__PURE__ */ (0, import_jsx_runtime346.jsxs)("div", { className: "flex flex-col gap-y-1.5", children: [
                                /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(Divider, { variant: "dashed" }),
                                /* @__PURE__ */ (0, import_jsx_runtime346.jsx)("div", { className: "flex flex-col gap-y-1.5 px-1.5", children: fields.map((field2, index2) => {
                                  return /* @__PURE__ */ (0, import_jsx_runtime346.jsxs)(
                                    "div",
                                    {
                                      className: "bg-ui-bg-field-component shadow-borders-base flex items-center justify-between gap-2 rounded-md px-2 py-0.5",
                                      children: [
                                        /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(import_ui232.Text, { size: "small", leading: "compact", children: field2.name }),
                                        /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(
                                          import_ui232.IconButton,
                                          {
                                            size: "small",
                                            variant: "transparent",
                                            type: "button",
                                            onClick: () => remove(index2),
                                            children: /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(import_icons106.XMark, {})
                                          }
                                        )
                                      ]
                                    },
                                    field2.cg_id
                                  );
                                }) })
                              ] }) : null
                            ]
                          }
                        ) }),
                        /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                )
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(RouteDrawer.Footer, { className: "shrink-0", children: /* @__PURE__ */ (0, import_jsx_runtime346.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(import_ui232.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
                /* @__PURE__ */ (0, import_jsx_runtime346.jsx)(import_ui232.Button, { size: "small", type: "submit", children: t4("actions.save") })
              ] }) })
            ]
          }
        )
      ] });
    };
  }
});

// src/routes/price-lists/price-list-configuration/components/price-list-configuration-form/index.ts
var init_price_list_configuration_form2 = __esm({
  "src/routes/price-lists/price-list-configuration/components/price-list-configuration-form/index.ts"() {
    "use strict";
    init_price_list_configuration_form();
  }
});

// src/routes/price-lists/price-list-configuration/price-list-configuration.tsx
var import_ui233, import_react_i18next251, import_react_router_dom106, import_jsx_runtime347, PriceListConfiguration;
var init_price_list_configuration = __esm({
  "src/routes/price-lists/price-list-configuration/price-list-configuration.tsx"() {
    "use strict";
    import_ui233 = require("@medusajs/ui");
    import_react_i18next251 = require("react-i18next");
    import_react_router_dom106 = require("react-router-dom");
    init_modals();
    init_customer_groups();
    init_price_lists();
    init_price_list_configuration_form2();
    import_jsx_runtime347 = require("react/jsx-runtime");
    PriceListConfiguration = () => {
      const { t: t4 } = (0, import_react_i18next251.useTranslation)();
      const { id: id2 } = (0, import_react_router_dom106.useParams)();
      const { price_list, isPending, isError, error } = usePriceList(id2);
      const customerGroupIds = price_list?.rules.customer_group_id;
      const {
        customer_groups,
        isPending: isCustomerGroupsPending,
        isError: isCustomerGroupsError,
        error: customerGroupsError
      } = useCustomerGroups(
        {
          id: customerGroupIds
        },
        { enabled: !!customerGroupIds?.length }
      );
      const initialCustomerGroups = customer_groups?.map((group) => ({
        id: group.id,
        name: group.name
      })) || [];
      const isCustomerGroupsReady = isPending ? false : !!customerGroupIds?.length && isCustomerGroupsPending ? false : true;
      const ready = !isPending && !!price_list && isCustomerGroupsReady;
      if (isError) {
        throw error;
      }
      if (isCustomerGroupsError) {
        throw customerGroupsError;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime347.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime347.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime347.jsx)(RouteDrawer.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime347.jsx)(import_ui233.Heading, { children: t4("priceLists.configuration.edit.header") }) }) }),
        ready && /* @__PURE__ */ (0, import_jsx_runtime347.jsx)(
          PriceListConfigurationForm,
          {
            priceList: price_list,
            customerGroups: initialCustomerGroups
          }
        )
      ] });
    };
  }
});

// src/routes/price-lists/price-list-configuration/index.ts
var price_list_configuration_exports = {};
__export(price_list_configuration_exports, {
  Component: () => PriceListConfiguration
});
var init_price_list_configuration2 = __esm({
  "src/routes/price-lists/price-list-configuration/index.ts"() {
    "use strict";
    init_price_list_configuration();
  }
});

// src/routes/price-lists/price-list-prices-add/components/price-list-prices-add-form/price-list-prices-add-prices-form.tsx
var import_react185, import_react_hook_form66, import_jsx_runtime348, PriceListPricesAddPricesForm;
var init_price_list_prices_add_prices_form = __esm({
  "src/routes/price-lists/price-list-prices-add/components/price-list-prices-add-form/price-list-prices-add-prices-form.tsx"() {
    "use strict";
    import_react185 = require("react");
    import_react_hook_form66 = require("react-hook-form");
    init_data_grid2();
    init_modals();
    init_products();
    init_use_price_list_grid_columns();
    init_utils11();
    import_jsx_runtime348 = require("react/jsx-runtime");
    PriceListPricesAddPricesForm = ({
      form,
      currencies: currencies2,
      regions,
      pricePreferences
    }) => {
      const ids = (0, import_react_hook_form66.useWatch)({
        control: form.control,
        name: "product_ids"
      });
      const existingProducts = (0, import_react_hook_form66.useWatch)({
        control: form.control,
        name: "products"
      });
      const { products, isLoading, isError, error } = useProducts({
        id: ids.map((id2) => id2.id),
        limit: ids.length,
        fields: "title,thumbnail,*variants"
      });
      const { setValue } = form;
      const { setCloseOnEscape } = useRouteModal();
      (0, import_react185.useEffect)(() => {
        if (!isLoading && products) {
          products.forEach((product) => {
            if (existingProducts[product.id] || !product.variants) {
              return;
            }
            setValue(`products.${product.id}.variants`, {
              ...product.variants.reduce((variants, variant) => {
                variants[variant.id] = {
                  currency_prices: {},
                  region_prices: {}
                };
                return variants;
              }, {})
            });
          });
        }
      }, [products, existingProducts, isLoading, setValue]);
      const columns = usePriceListGridColumns({
        currencies: currencies2,
        regions,
        pricePreferences
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime348.jsx)("div", { className: "flex size-full flex-col divide-y overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime348.jsx)(
        DataGrid,
        {
          isLoading,
          columns,
          data: products,
          getSubRows: (row) => {
            if (isProductRow(row) && row.variants) {
              return row.variants;
            }
          },
          state: form,
          onEditingChange: (editing) => setCloseOnEscape(!editing)
        }
      ) });
    };
  }
});

// src/routes/price-lists/price-list-prices-add/components/price-list-prices-add-form/price-list-prices-add-product-ids-form.tsx
function getInitialSelection2(products) {
  return products.reduce((acc, curr) => {
    acc[curr.id] = true;
    return acc;
  }, {});
}
var import_ui234, import_react_query64, import_react_table38, import_react186, import_react_hook_form67, import_react_i18next252, import_jsx_runtime349, PAGE_SIZE27, PREFIX12, PriceListPricesAddProductIdsForm, columnHelper38, useColumns18;
var init_price_list_prices_add_product_ids_form = __esm({
  "src/routes/price-lists/price-list-prices-add/components/price-list-prices-add-form/price-list-prices-add-product-ids-form.tsx"() {
    "use strict";
    import_ui234 = require("@medusajs/ui");
    import_react_query64 = require("@tanstack/react-query");
    import_react_table38 = require("@tanstack/react-table");
    import_react186 = require("react");
    import_react_hook_form67 = require("react-hook-form");
    import_react_i18next252 = require("react-i18next");
    init_data_table2();
    init_products();
    init_use_product_table_columns();
    init_use_product_table_filters();
    init_use_product_table_query();
    init_use_data_table();
    import_jsx_runtime349 = require("react/jsx-runtime");
    PAGE_SIZE27 = 50;
    PREFIX12 = "p";
    PriceListPricesAddProductIdsForm = ({
      priceList,
      form
    }) => {
      const { t: t4 } = (0, import_react_i18next252.useTranslation)();
      const { control, setValue } = form;
      const variantIdMap = (0, import_react186.useMemo)(() => {
        return priceList.prices.reduce(
          (acc, curr) => {
            acc[curr.variant_id] = true;
            return acc;
          },
          {}
        );
      }, [priceList.prices]);
      const selectedIds = (0, import_react_hook_form67.useWatch)({
        control,
        name: "product_ids"
      });
      const productRecords = (0, import_react_hook_form67.useWatch)({
        control,
        name: "products"
      });
      const [rowSelection, setRowSelection] = (0, import_react186.useState)(
        getInitialSelection2(selectedIds)
      );
      const { searchParams, raw } = useProductTableQuery({
        pageSize: PAGE_SIZE27,
        prefix: PREFIX12
      });
      const { products, count: count3, isLoading, isError, error } = useProducts(
        searchParams,
        {
          placeholderData: import_react_query64.keepPreviousData
        }
      );
      const updater = (fn) => {
        const state = typeof fn === "function" ? fn(rowSelection) : fn;
        const ids = Object.keys(state);
        const productRecordKeys = Object.keys(productRecords);
        const updatedRecords = productRecordKeys.reduce((acc, key) => {
          if (ids.includes(key)) {
            acc[key] = productRecords[key];
          }
          return acc;
        }, {});
        const update = ids.map((id2) => ({ id: id2 }));
        setValue("product_ids", update, { shouldDirty: true, shouldTouch: true });
        setValue("products", updatedRecords, {
          shouldDirty: true,
          shouldTouch: true
        });
        setRowSelection(state);
      };
      const columns = useColumns18();
      const filters = useProductTableFilters();
      const { table } = useDataTable({
        data: products || [],
        columns,
        count: count3,
        enablePagination: true,
        enableRowSelection: (row) => {
          return !!row.original.variants?.length && !row.original.variants?.some((v) => variantIdMap[v.id]);
        },
        getRowId: (row) => row.id,
        rowSelection: {
          state: rowSelection,
          updater
        },
        pageSize: PAGE_SIZE27,
        meta: {
          variantIdMap
        }
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime349.jsx)("div", { className: "flex size-full flex-col", children: /* @__PURE__ */ (0, import_jsx_runtime349.jsx)(
        DataTable,
        {
          table,
          columns,
          filters,
          pageSize: PAGE_SIZE27,
          prefix: PREFIX12,
          count: count3,
          isLoading,
          layout: "fill",
          orderBy: [
            { key: "title", label: t4("fields.title") },
            { key: "status", label: t4("fields.status") },
            { key: "created_at", label: t4("fields.createdAt") },
            { key: "updated_at", label: t4("fields.updatedAt") }
          ],
          pagination: true,
          search: true,
          queryObject: raw
        }
      ) });
    };
    columnHelper38 = (0, import_react_table38.createColumnHelper)();
    useColumns18 = () => {
      const base = useProductTableColumns();
      return (0, import_react186.useMemo)(
        () => [
          columnHelper38.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime349.jsx)(
                import_ui234.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row, table }) => {
              const { variantIdMap } = table.options.meta;
              const isPreselected = row.original.variants?.some(
                (v) => variantIdMap[v.id]
              );
              const isDisabled = !row.getCanSelect() || isPreselected;
              const isChecked = row.getIsSelected() || isPreselected;
              const Component5 = /* @__PURE__ */ (0, import_jsx_runtime349.jsx)(
                import_ui234.Checkbox,
                {
                  checked: isChecked,
                  disabled: isDisabled,
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
              if (isPreselected) {
                return /* @__PURE__ */ (0, import_jsx_runtime349.jsx)(import_ui234.Tooltip, { content: "This product is already in the price list", children: Component5 });
              }
              if (isDisabled) {
                return /* @__PURE__ */ (0, import_jsx_runtime349.jsx)(import_ui234.Tooltip, { content: "This product has no variants", children: Component5 });
              }
              return Component5;
            }
          }),
          ...base
        ],
        [base]
      );
    };
  }
});

// src/routes/price-lists/price-list-prices-add/components/price-list-prices-add-form/schema.ts
var import_zod65, PriceListPricesAddSchema, PriceListPricesAddProductIdsSchema, PriceListPricesAddProductsIdsFields, PriceListPricesAddProductsSchema, PriceListPricesAddProductsFields;
var init_schema7 = __esm({
  "src/routes/price-lists/price-list-prices-add/components/price-list-prices-add-form/schema.ts"() {
    "use strict";
    import_zod65 = require("zod");
    init_schemas();
    PriceListPricesAddSchema = import_zod65.z.object({
      product_ids: import_zod65.z.array(import_zod65.z.object({ id: import_zod65.z.string() })).min(1),
      products: PriceListCreateProductsSchema
    });
    PriceListPricesAddProductIdsSchema = PriceListPricesAddSchema.pick(
      {
        product_ids: true
      }
    );
    PriceListPricesAddProductsIdsFields = Object.keys(
      PriceListPricesAddProductIdsSchema.shape
    );
    PriceListPricesAddProductsSchema = PriceListPricesAddSchema.pick({
      products: true
    });
    PriceListPricesAddProductsFields = Object.keys(
      PriceListPricesAddProductsSchema.shape
    );
  }
});

// src/routes/price-lists/price-list-prices-add/components/price-list-prices-add-form/price-list-prices-add-form.tsx
var import_zod66, import_ui235, import_react187, import_react_hook_form68, import_react_i18next253, import_jsx_runtime350, tabOrder2, initialTabState3, PriceListPricesAddForm, PrimaryButton4;
var init_price_list_prices_add_form = __esm({
  "src/routes/price-lists/price-list-prices-add/components/price-list-prices-add-form/price-list-prices-add-form.tsx"() {
    "use strict";
    import_zod66 = require("@hookform/resolvers/zod");
    import_ui235 = require("@medusajs/ui");
    import_react187 = require("react");
    import_react_hook_form68 = require("react-hook-form");
    import_react_i18next253 = require("react-i18next");
    init_modals();
    init_keybound_form2();
    init_price_lists();
    init_utils11();
    init_price_list_prices_add_prices_form();
    init_price_list_prices_add_product_ids_form();
    init_schema7();
    import_jsx_runtime350 = require("react/jsx-runtime");
    tabOrder2 = ["product" /* PRODUCT */, "price" /* PRICE */];
    initialTabState3 = {
      ["product" /* PRODUCT */]: "in-progress",
      ["price" /* PRICE */]: "not-started"
    };
    PriceListPricesAddForm = ({
      priceList,
      regions,
      currencies: currencies2,
      pricePreferences
    }) => {
      const [tab, setTab] = (0, import_react187.useState)("product" /* PRODUCT */);
      const [tabState, setTabState] = (0, import_react187.useState)(initialTabState3);
      const { t: t4 } = (0, import_react_i18next253.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form68.useForm)({
        defaultValues: {
          products: {},
          product_ids: []
        },
        resolver: (0, import_zod66.zodResolver)(PriceListPricesAddSchema)
      });
      const { mutateAsync, isPending } = useBatchPriceListPrices(priceList.id);
      const handleSubmit = form.handleSubmit(async (values) => {
        const { products } = values;
        const prices = exctractPricesFromProducts(products, regions);
        await mutateAsync(
          {
            create: prices
          },
          {
            onSuccess: () => {
              import_ui235.toast.success(t4("priceLists.products.add.successToast"));
              handleSuccess();
            },
            onError: (e) => import_ui235.toast.error(e.message)
          }
        );
      });
      const partialFormValidation2 = (fields, schema) => {
        form.clearErrors(fields);
        const values = fields.reduce((acc, key) => {
          acc[key] = form.getValues(key);
          return acc;
        }, {});
        const validationResult = schema.safeParse(values);
        if (!validationResult.success) {
          validationResult.error.errors.forEach(({ path, message, code }) => {
            form.setError(path.join("."), {
              type: code,
              message
            });
          });
          return false;
        }
        return true;
      };
      const isTabDirty = (tab2) => {
        switch (tab2) {
          case "product" /* PRODUCT */: {
            const fields = PriceListPricesAddProductsIdsFields;
            return fields.some((field) => {
              return form.getFieldState(field).isDirty;
            });
          }
          case "price" /* PRICE */: {
            const fields = PriceListPricesAddProductsFields;
            return fields.some((field) => {
              return form.getFieldState(field).isDirty;
            });
          }
        }
      };
      const handleChangeTab = (update) => {
        if (tab === update) {
          return;
        }
        if (tabOrder2.indexOf(update) < tabOrder2.indexOf(tab)) {
          const isCurrentTabDirty = isTabDirty(tab);
          setTabState((prev) => ({
            ...prev,
            [tab]: isCurrentTabDirty ? prev[tab] : "not-started",
            [update]: "in-progress"
          }));
          setTab(update);
          return;
        }
        const tabs = tabOrder2.slice(0, tabOrder2.indexOf(update));
        for (const tab2 of tabs) {
          if (tab2 === "product" /* PRODUCT */) {
            if (!partialFormValidation2(
              PriceListPricesAddProductsIdsFields,
              PriceListPricesAddProductIdsSchema
            )) {
              setTabState((prev) => ({
                ...prev,
                [tab2]: "in-progress"
              }));
              setTab(tab2);
              return;
            }
            setTabState((prev) => ({
              ...prev,
              [tab2]: "completed"
            }));
          }
        }
        setTabState((prev) => ({
          ...prev,
          [tab]: "completed",
          [update]: "in-progress"
        }));
        setTab(update);
      };
      const handleNextTab = (tab2) => {
        if (tabOrder2.indexOf(tab2) + 1 >= tabOrder2.length) {
          return;
        }
        const nextTab = tabOrder2[tabOrder2.indexOf(tab2) + 1];
        handleChangeTab(nextTab);
      };
      return /* @__PURE__ */ (0, import_jsx_runtime350.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime350.jsx)(
        import_ui235.ProgressTabs,
        {
          value: tab,
          onValueChange: (tab2) => handleChangeTab(tab2),
          className: "flex h-full flex-col overflow-hidden",
          children: /* @__PURE__ */ (0, import_jsx_runtime350.jsxs)(KeyboundForm, { onSubmit: handleSubmit, className: "flex h-full flex-col", children: [
            /* @__PURE__ */ (0, import_jsx_runtime350.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime350.jsx)("div", { className: "flex w-full items-center justify-between gap-x-4", children: /* @__PURE__ */ (0, import_jsx_runtime350.jsx)("div", { className: "-my-2 w-full max-w-[600px] border-l", children: /* @__PURE__ */ (0, import_jsx_runtime350.jsxs)(import_ui235.ProgressTabs.List, { className: "grid w-full grid-cols-3", children: [
              /* @__PURE__ */ (0, import_jsx_runtime350.jsx)(
                import_ui235.ProgressTabs.Trigger,
                {
                  status: tabState.product,
                  value: "product" /* PRODUCT */,
                  children: t4("priceLists.create.tabs.products")
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime350.jsx)(
                import_ui235.ProgressTabs.Trigger,
                {
                  status: tabState.price,
                  value: "price" /* PRICE */,
                  children: t4("priceLists.create.tabs.prices")
                }
              )
            ] }) }) }) }),
            /* @__PURE__ */ (0, import_jsx_runtime350.jsxs)(RouteFocusModal.Body, { className: "size-full overflow-hidden", children: [
              /* @__PURE__ */ (0, import_jsx_runtime350.jsx)(
                import_ui235.ProgressTabs.Content,
                {
                  className: "size-full overflow-y-auto",
                  value: "product" /* PRODUCT */,
                  children: /* @__PURE__ */ (0, import_jsx_runtime350.jsx)(
                    PriceListPricesAddProductIdsForm,
                    {
                      form,
                      priceList
                    }
                  )
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime350.jsx)(
                import_ui235.ProgressTabs.Content,
                {
                  className: "size-full overflow-hidden",
                  value: "price" /* PRICE */,
                  children: /* @__PURE__ */ (0, import_jsx_runtime350.jsx)(
                    PriceListPricesAddPricesForm,
                    {
                      form,
                      regions,
                      currencies: currencies2,
                      pricePreferences
                    }
                  )
                }
              )
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime350.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime350.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime350.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime350.jsx)(import_ui235.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime350.jsx)(
                PrimaryButton4,
                {
                  tab,
                  next: handleNextTab,
                  isLoading: isPending
                }
              )
            ] }) })
          ] })
        }
      ) });
    };
    PrimaryButton4 = ({ tab, next, isLoading }) => {
      const { t: t4 } = (0, import_react_i18next253.useTranslation)();
      if (tab === "price" /* PRICE */) {
        return /* @__PURE__ */ (0, import_jsx_runtime350.jsx)(
          import_ui235.Button,
          {
            type: "submit",
            variant: "primary",
            size: "small",
            isLoading,
            children: t4("actions.save")
          },
          "submit-button"
        );
      }
      return /* @__PURE__ */ (0, import_jsx_runtime350.jsx)(
        import_ui235.Button,
        {
          type: "button",
          variant: "primary",
          size: "small",
          onClick: () => next(tab),
          children: t4("actions.continue")
        },
        "next-button"
      );
    };
  }
});

// src/routes/price-lists/price-list-prices-add/components/price-list-prices-add-form/index.ts
var init_price_list_prices_add_form2 = __esm({
  "src/routes/price-lists/price-list-prices-add/components/price-list-prices-add-form/index.ts"() {
    "use strict";
    init_price_list_prices_add_form();
  }
});

// src/routes/price-lists/price-list-prices-add/price-list-prices-add.tsx
var import_react_router_dom107, import_jsx_runtime351, PriceListProductsAdd;
var init_price_list_prices_add = __esm({
  "src/routes/price-lists/price-list-prices-add/price-list-prices-add.tsx"() {
    "use strict";
    import_react_router_dom107 = require("react-router-dom");
    init_modals();
    init_price_lists();
    init_use_price_list_currency_data();
    init_price_list_prices_add_form2();
    import_jsx_runtime351 = require("react/jsx-runtime");
    PriceListProductsAdd = () => {
      const { id: id2 } = (0, import_react_router_dom107.useParams)();
      const { price_list, isPending, isError, error } = usePriceList(id2);
      const { currencies: currencies2, regions, pricePreferences, isReady } = usePriceListCurrencyData();
      const ready = isReady && !isPending && !!price_list;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime351.jsx)(RouteFocusModal, { children: ready && /* @__PURE__ */ (0, import_jsx_runtime351.jsx)(
        PriceListPricesAddForm,
        {
          priceList: price_list,
          currencies: currencies2,
          regions,
          pricePreferences
        }
      ) });
    };
  }
});

// src/routes/price-lists/price-list-prices-add/index.ts
var price_list_prices_add_exports = {};
__export(price_list_prices_add_exports, {
  Component: () => PriceListProductsAdd
});
var init_price_list_prices_add2 = __esm({
  "src/routes/price-lists/price-list-prices-add/index.ts"() {
    "use strict";
    init_price_list_prices_add();
  }
});

// src/routes/price-lists/price-list-prices-edit/components/price-list-prices-edit-form/price-list-prices-edit-form.tsx
function initRecord(priceList, products) {
  const record5 = {};
  const variantPrices = priceList.prices?.reduce((variants, price) => {
    const variantObject = variants[price.variant_id] || {};
    const isRegionPrice = !!price.rules?.region_id;
    if (isRegionPrice) {
      const regionId = price.rules.region_id;
      variantObject.region_prices = {
        ...variantObject.region_prices,
        [regionId]: {
          amount: price.amount.toString(),
          id: price.id
        }
      };
    } else {
      variantObject.currency_prices = {
        ...variantObject.currency_prices,
        [price.currency_code]: {
          amount: price.amount.toString(),
          id: price.id
        }
      };
    }
    variants[price.variant_id] = variantObject;
    return variants;
  }, {});
  for (const product of products) {
    record5[product.id] = {
      variants: product.variants?.reduce((variants, variant) => {
        const prices = variantPrices[variant.id] || {};
        variants[variant.id] = prices;
        return variants;
      }, {}) || {}
    };
  }
  return record5;
}
function convertToPriceArray(data, regions) {
  const prices = [];
  const regionCurrencyMap = regions.reduce((map, region) => {
    map[region.id] = region.currency_code;
    return map;
  }, {});
  for (const [_productId, product] of Object.entries(data || {})) {
    const { variants } = product || {};
    for (const [variantId, variant] of Object.entries(variants || {})) {
      const { currency_prices: currencyPrices, region_prices: regionPrices } = variant || {};
      for (const [currencyCode, currencyPrice] of Object.entries(
        currencyPrices || {}
      )) {
        if (currencyPrice?.amount !== "" && typeof currencyPrice?.amount !== "undefined") {
          prices.push({
            variantId,
            currencyCode,
            amount: castNumber(currencyPrice.amount),
            id: currencyPrice.id
          });
        }
      }
      for (const [regionId, regionPrice] of Object.entries(
        regionPrices || {}
      )) {
        if (regionPrice?.amount !== "" && typeof regionPrice?.amount !== "undefined") {
          prices.push({
            variantId,
            regionId,
            currencyCode: regionCurrencyMap[regionId],
            amount: castNumber(regionPrice.amount),
            id: regionPrice.id
          });
        }
      }
    }
  }
  return prices;
}
function createMapKey(obj) {
  return `${obj.variantId}-${obj.currencyCode}-${obj.regionId || "none"}-${obj.id || "none"}`;
}
function comparePrices(initialPrices, newPrices) {
  const pricesToUpdate = [];
  const pricesToCreate = [];
  const pricesToDelete = [];
  const initialPriceMap = initialPrices.reduce((map, price) => {
    map[createMapKey(price)] = price;
    return map;
  }, {});
  const newPriceMap = newPrices.reduce((map, price) => {
    map[createMapKey(price)] = price;
    return map;
  }, {});
  const keys = /* @__PURE__ */ new Set([
    ...Object.keys(initialPriceMap),
    ...Object.keys(newPriceMap)
  ]);
  for (const key of keys) {
    const initialPrice = initialPriceMap[key];
    const newPrice = newPriceMap[key];
    if (initialPrice && newPrice) {
      if (isNaN(newPrice.amount) && newPrice.id) {
        pricesToDelete.push(newPrice.id);
      }
      if (initialPrice.amount !== newPrice.amount && newPrice.id) {
        pricesToUpdate.push({
          id: newPrice.id,
          variant_id: newPrice.variantId,
          currency_code: newPrice.currencyCode,
          rules: newPrice.regionId ? { region_id: newPrice.regionId } : void 0,
          amount: newPrice.amount
        });
      }
    }
    if (!initialPrice && newPrice) {
      pricesToCreate.push({
        variant_id: newPrice.variantId,
        currency_code: newPrice.currencyCode,
        rules: newPrice.regionId ? { region_id: newPrice.regionId } : void 0,
        amount: newPrice.amount
      });
    }
    if (initialPrice && !newPrice && initialPrice.id) {
      pricesToDelete.push(initialPrice.id);
    }
  }
  return { pricesToDelete, pricesToCreate, pricesToUpdate };
}
function sortPrices(data, initialValue, regions) {
  const initialPrices = convertToPriceArray(initialValue, regions);
  const newPrices = convertToPriceArray(data, regions);
  return comparePrices(initialPrices, newPrices);
}
var import_zod67, import_ui236, import_react188, import_react_hook_form69, import_react_i18next254, import_zod68, import_jsx_runtime352, PricingProductPricesSchema, PriceListPricesEditForm;
var init_price_list_prices_edit_form = __esm({
  "src/routes/price-lists/price-list-prices-edit/components/price-list-prices-edit-form/price-list-prices-edit-form.tsx"() {
    "use strict";
    import_zod67 = require("@hookform/resolvers/zod");
    import_ui236 = require("@medusajs/ui");
    import_react188 = require("react");
    import_react_hook_form69 = require("react-hook-form");
    import_react_i18next254 = require("react-i18next");
    import_zod68 = require("zod");
    init_data_grid2();
    init_modals();
    init_keybound_form2();
    init_price_lists();
    init_cast_number();
    init_use_price_list_grid_columns();
    init_schemas();
    init_utils11();
    import_jsx_runtime352 = require("react/jsx-runtime");
    PricingProductPricesSchema = import_zod68.z.object({
      products: PriceListUpdateProductsSchema
    });
    PriceListPricesEditForm = ({
      priceList,
      products,
      regions,
      currencies: currencies2,
      pricePreferences
    }) => {
      const { t: t4 } = (0, import_react_i18next254.useTranslation)();
      const { handleSuccess, setCloseOnEscape } = useRouteModal();
      const initialValue = (0, import_react188.useRef)(initRecord(priceList, products));
      const form = (0, import_react_hook_form69.useForm)({
        defaultValues: {
          products: initialValue.current
        },
        resolver: (0, import_zod67.zodResolver)(PricingProductPricesSchema)
      });
      const { mutateAsync, isPending } = useBatchPriceListPrices(priceList.id);
      const handleSubmit = form.handleSubmit(async (values) => {
        const { products: products2 } = values;
        const { pricesToDelete, pricesToCreate, pricesToUpdate } = sortPrices(
          products2,
          initialValue.current,
          regions
        );
        mutateAsync(
          {
            delete: pricesToDelete,
            update: pricesToUpdate,
            create: pricesToCreate
          },
          {
            onSuccess: () => {
              import_ui236.toast.success(t4("priceLists.products.edit.successToast"));
              handleSuccess();
            },
            onError: (error) => {
              import_ui236.toast.error(error.message);
            }
          }
        );
      });
      const columns = usePriceListGridColumns({
        currencies: currencies2,
        regions,
        pricePreferences
      });
      return /* @__PURE__ */ (0, import_jsx_runtime352.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime352.jsxs)(KeyboundForm, { onSubmit: handleSubmit, className: "flex size-full flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime352.jsx)(RouteFocusModal.Header, {}),
        /* @__PURE__ */ (0, import_jsx_runtime352.jsx)(RouteFocusModal.Body, { className: "flex flex-col overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime352.jsx)(
          DataGrid,
          {
            columns,
            data: products,
            getSubRows: (row) => {
              if (isProductRow(row) && row.variants) {
                return row.variants;
              }
            },
            state: form,
            onEditingChange: (editing) => setCloseOnEscape(!editing)
          }
        ) }),
        /* @__PURE__ */ (0, import_jsx_runtime352.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime352.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime352.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime352.jsx)(import_ui236.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime352.jsx)(import_ui236.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
        ] }) })
      ] }) });
    };
  }
});

// src/routes/price-lists/price-list-prices-edit/components/price-list-prices-edit-form/index.ts
var init_price_list_prices_edit_form2 = __esm({
  "src/routes/price-lists/price-list-prices-edit/components/price-list-prices-edit-form/index.ts"() {
    "use strict";
    init_price_list_prices_edit_form();
  }
});

// src/routes/price-lists/price-list-prices-edit/price-list-prices-edit.tsx
var import_react_router_dom108, import_jsx_runtime353, PriceListPricesEdit;
var init_price_list_prices_edit = __esm({
  "src/routes/price-lists/price-list-prices-edit/price-list-prices-edit.tsx"() {
    "use strict";
    import_react_router_dom108 = require("react-router-dom");
    init_modals();
    init_price_lists();
    init_products();
    init_use_price_list_currency_data();
    init_price_list_prices_edit_form2();
    import_jsx_runtime353 = require("react/jsx-runtime");
    PriceListPricesEdit = () => {
      const { id: id2 } = (0, import_react_router_dom108.useParams)();
      const [searchParams] = (0, import_react_router_dom108.useSearchParams)();
      const ids = searchParams.get("ids[]");
      const { price_list, isLoading, isError, error } = usePriceList(id2);
      const productIds = ids?.split(",");
      const {
        products,
        isLoading: isProductsLoading,
        isError: isProductsError,
        error: productError
      } = useProducts({
        id: productIds,
        limit: productIds?.length || 9999,
        // Temporary until we support lazy loading in the DataGrid
        price_list_id: [id2],
        fields: "title,thumbnail,*variants"
      });
      const { isReady, regions, currencies: currencies2, pricePreferences } = usePriceListCurrencyData();
      const ready = !isLoading && !!price_list && !isProductsLoading && !!products && isReady;
      if (isError) {
        throw error;
      }
      if (isProductsError) {
        throw productError;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime353.jsxs)(RouteFocusModal, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime353.jsx)(RouteFocusModal.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime353.jsxs)("span", { className: "sr-only", children: [
          "Edit Prices for ",
          price_list?.title
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime353.jsx)(RouteFocusModal.Description, { className: "sr-only", children: "Update prices for products in the price list" }),
        ready && /* @__PURE__ */ (0, import_jsx_runtime353.jsx)(
          PriceListPricesEditForm,
          {
            priceList: price_list,
            products,
            regions,
            currencies: currencies2,
            pricePreferences
          }
        )
      ] });
    };
  }
});

// src/routes/price-lists/price-list-prices-edit/index.ts
var price_list_prices_edit_exports = {};
__export(price_list_prices_edit_exports, {
  Component: () => PriceListPricesEdit
});
var init_price_list_prices_edit2 = __esm({
  "src/routes/price-lists/price-list-prices-edit/index.ts"() {
    "use strict";
    init_price_list_prices_edit();
  }
});

// src/components/table/table-cells/common/email-cell/email-cell.tsx
var import_react_i18next255, import_jsx_runtime354, EmailCell, EmailHeader;
var init_email_cell = __esm({
  "src/components/table/table-cells/common/email-cell/email-cell.tsx"() {
    "use strict";
    import_react_i18next255 = require("react-i18next");
    init_placeholder_cell2();
    import_jsx_runtime354 = require("react/jsx-runtime");
    EmailCell = ({ email }) => {
      if (!email) {
        return /* @__PURE__ */ (0, import_jsx_runtime354.jsx)(PlaceholderCell, {});
      }
      return /* @__PURE__ */ (0, import_jsx_runtime354.jsx)("div", { className: "flex h-full w-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime354.jsx)("span", { className: "truncate", children: email }) });
    };
    EmailHeader = () => {
      const { t: t4 } = (0, import_react_i18next255.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime354.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime354.jsx)("span", { className: "truncate", children: t4("fields.email") }) });
    };
  }
});

// src/components/table/table-cells/common/email-cell/index.ts
var init_email_cell2 = __esm({
  "src/components/table/table-cells/common/email-cell/index.ts"() {
    "use strict";
    init_email_cell();
  }
});

// src/components/table/table-cells/common/name-cell/name-cell.tsx
var import_react_i18next256, import_jsx_runtime355, NameCell2, NameHeader2;
var init_name_cell3 = __esm({
  "src/components/table/table-cells/common/name-cell/name-cell.tsx"() {
    "use strict";
    import_react_i18next256 = require("react-i18next");
    init_placeholder_cell2();
    import_jsx_runtime355 = require("react/jsx-runtime");
    NameCell2 = ({ firstName, lastName }) => {
      if (!firstName && !lastName) {
        return /* @__PURE__ */ (0, import_jsx_runtime355.jsx)(PlaceholderCell, {});
      }
      const name = [firstName, lastName].filter(Boolean).join(" ");
      return /* @__PURE__ */ (0, import_jsx_runtime355.jsx)("div", { className: "flex h-full w-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime355.jsx)("span", { className: "truncate", children: name }) });
    };
    NameHeader2 = () => {
      const { t: t4 } = (0, import_react_i18next256.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime355.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime355.jsx)("span", { className: "truncate", children: t4("fields.name") }) });
    };
  }
});

// src/components/table/table-cells/common/name-cell/index.ts
var init_name_cell4 = __esm({
  "src/components/table/table-cells/common/name-cell/index.ts"() {
    "use strict";
    init_name_cell3();
  }
});

// src/components/table/table-cells/customer/account-cell/account-cell.tsx
var import_react_i18next257, import_jsx_runtime356, AccountCell, AccountHeader;
var init_account_cell = __esm({
  "src/components/table/table-cells/customer/account-cell/account-cell.tsx"() {
    "use strict";
    import_react_i18next257 = require("react-i18next");
    init_status_cell2();
    import_jsx_runtime356 = require("react/jsx-runtime");
    AccountCell = ({ hasAccount }) => {
      const { t: t4 } = (0, import_react_i18next257.useTranslation)();
      const color = hasAccount ? "green" : "orange";
      const text = hasAccount ? t4("customers.fields.registered") : t4("customers.fields.guest");
      return /* @__PURE__ */ (0, import_jsx_runtime356.jsx)(StatusCell, { color, children: text });
    };
    AccountHeader = () => {
      const { t: t4 } = (0, import_react_i18next257.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime356.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime356.jsx)("span", { className: "truncate", children: t4("fields.account") }) });
    };
  }
});

// src/components/table/table-cells/customer/first-seen-cell/first-seen-cell.tsx
var import_react_i18next258, import_jsx_runtime357, FirstSeenCell, FirstSeenHeader;
var init_first_seen_cell = __esm({
  "src/components/table/table-cells/customer/first-seen-cell/first-seen-cell.tsx"() {
    "use strict";
    import_react_i18next258 = require("react-i18next");
    init_date_cell2();
    init_placeholder_cell2();
    import_jsx_runtime357 = require("react/jsx-runtime");
    FirstSeenCell = ({ createdAt }) => {
      if (!createdAt) {
        return /* @__PURE__ */ (0, import_jsx_runtime357.jsx)(PlaceholderCell, {});
      }
      return /* @__PURE__ */ (0, import_jsx_runtime357.jsx)(DateCell, { date: createdAt });
    };
    FirstSeenHeader = () => {
      const { t: t4 } = (0, import_react_i18next258.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime357.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime357.jsx)("span", { className: "truncate", children: t4("fields.createdAt") }) });
    };
  }
});

// src/components/table/table-cells/customer/first-seen-cell/index.ts
var init_first_seen_cell2 = __esm({
  "src/components/table/table-cells/customer/first-seen-cell/index.ts"() {
    "use strict";
    init_first_seen_cell();
  }
});

// src/hooks/table/columns/use-customer-table-columns.tsx
var import_react_table39, import_react189, import_jsx_runtime358, columnHelper39, useCustomerTableColumns;
var init_use_customer_table_columns = __esm({
  "src/hooks/table/columns/use-customer-table-columns.tsx"() {
    "use strict";
    import_react_table39 = require("@tanstack/react-table");
    import_react189 = require("react");
    init_email_cell2();
    init_name_cell4();
    init_account_cell();
    init_first_seen_cell2();
    import_jsx_runtime358 = require("react/jsx-runtime");
    columnHelper39 = (0, import_react_table39.createColumnHelper)();
    useCustomerTableColumns = () => {
      return (0, import_react189.useMemo)(
        () => [
          columnHelper39.accessor("email", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime358.jsx)(EmailHeader, {}),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime358.jsx)(EmailCell, { email: getValue2() })
          }),
          columnHelper39.display({
            id: "name",
            header: () => /* @__PURE__ */ (0, import_jsx_runtime358.jsx)(NameHeader2, {}),
            cell: ({
              row: {
                original: { first_name, last_name }
              }
            }) => /* @__PURE__ */ (0, import_jsx_runtime358.jsx)(NameCell2, { firstName: first_name, lastName: last_name })
          }),
          columnHelper39.accessor("has_account", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime358.jsx)(AccountHeader, {}),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime358.jsx)(AccountCell, { hasAccount: getValue2() })
          }),
          columnHelper39.accessor("created_at", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime358.jsx)(FirstSeenHeader, {}),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime358.jsx)(FirstSeenCell, { createdAt: getValue2() })
          })
        ],
        []
      );
    };
  }
});

// src/routes/customers/customer-list/components/customer-list-table/customer-list-table.tsx
var import_icons107, import_ui237, import_react_query65, import_react_table40, import_react190, import_react_i18next259, import_react_router_dom109, import_jsx_runtime359, PAGE_SIZE28, CustomerListTable, CustomerActions, columnHelper40, useColumns19;
var init_customer_list_table = __esm({
  "src/routes/customers/customer-list/components/customer-list-table/customer-list-table.tsx"() {
    "use strict";
    import_icons107 = require("@medusajs/icons");
    import_ui237 = require("@medusajs/ui");
    import_react_query65 = require("@tanstack/react-query");
    import_react_table40 = require("@tanstack/react-table");
    import_react190 = require("react");
    import_react_i18next259 = require("react-i18next");
    import_react_router_dom109 = require("react-router-dom");
    init_action_menu2();
    init_data_table2();
    init_customers();
    init_use_customer_table_columns();
    init_use_customer_table_filters();
    init_use_customer_table_query();
    init_use_data_table();
    import_jsx_runtime359 = require("react/jsx-runtime");
    PAGE_SIZE28 = 20;
    CustomerListTable = () => {
      const { t: t4 } = (0, import_react_i18next259.useTranslation)();
      const { searchParams, raw } = useCustomerTableQuery({ pageSize: PAGE_SIZE28 });
      const { customers, count: count3, isLoading, isError, error } = useCustomers(
        {
          ...searchParams
        },
        {
          placeholderData: import_react_query65.keepPreviousData
        }
      );
      const filters = useCustomerTableFilters();
      const columns = useColumns19();
      const { table } = useDataTable({
        data: customers ?? [],
        columns,
        count: count3,
        enablePagination: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE28
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime359.jsxs)(import_ui237.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime359.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime359.jsx)(import_ui237.Heading, { children: t4("customers.domain") }),
          /* @__PURE__ */ (0, import_jsx_runtime359.jsx)(import_react_router_dom109.Link, { to: "/customers/create", children: /* @__PURE__ */ (0, import_jsx_runtime359.jsx)(import_ui237.Button, { size: "small", variant: "secondary", children: t4("actions.create") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime359.jsx)(
          DataTable,
          {
            table,
            columns,
            pageSize: PAGE_SIZE28,
            count: count3,
            filters,
            orderBy: [
              { key: "email", label: t4("fields.email") },
              { key: "first_name", label: t4("fields.firstName") },
              { key: "last_name", label: t4("fields.lastName") },
              { key: "has_account", label: t4("customers.hasAccount") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            isLoading,
            navigateTo: (row) => row.original.id,
            search: true,
            queryObject: raw,
            noRecords: {
              message: t4("customers.list.noRecordsMessage")
            }
          }
        )
      ] });
    };
    CustomerActions = ({
      customer
    }) => {
      const { t: t4 } = (0, import_react_i18next259.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime359.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime359.jsx)(import_icons107.PencilSquare, {}),
                  label: t4("actions.edit"),
                  to: `/customers/${customer.id}/edit`
                }
              ]
            }
          ]
        }
      );
    };
    columnHelper40 = (0, import_react_table40.createColumnHelper)();
    useColumns19 = () => {
      const columns = useCustomerTableColumns();
      return (0, import_react190.useMemo)(
        () => [
          ...columns,
          columnHelper40.display({
            id: "actions",
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime359.jsx)(CustomerActions, { customer: row.original })
          })
        ],
        [columns]
      );
    };
  }
});

// src/routes/customers/customer-list/components/customer-list-table/index.ts
var init_customer_list_table2 = __esm({
  "src/routes/customers/customer-list/components/customer-list-table/index.ts"() {
    "use strict";
    init_customer_list_table();
  }
});

// src/routes/customers/customer-list/customer-list.tsx
var import_jsx_runtime360, CustomersList;
var init_customer_list = __esm({
  "src/routes/customers/customer-list/customer-list.tsx"() {
    "use strict";
    init_pages();
    init_extensions();
    init_customer_list_table2();
    import_jsx_runtime360 = require("react/jsx-runtime");
    CustomersList = () => {
      const { getWidgets } = useDashboardExtension();
      return /* @__PURE__ */ (0, import_jsx_runtime360.jsx)(
        SingleColumnPage,
        {
          widgets: {
            after: getWidgets("customer.list.after"),
            before: getWidgets("customer.list.before")
          },
          children: /* @__PURE__ */ (0, import_jsx_runtime360.jsx)(CustomerListTable, {})
        }
      );
    };
  }
});

// src/routes/customers/customer-list/index.ts
var customer_list_exports = {};
__export(customer_list_exports, {
  Component: () => CustomersList
});
var init_customer_list2 = __esm({
  "src/routes/customers/customer-list/index.ts"() {
    "use strict";
    init_customer_list();
  }
});

// src/routes/customers/customer-create/components/create-customer-form/create-customer-form.tsx
var import_zod69, import_ui238, import_react_hook_form70, import_react_i18next260, zod18, import_jsx_runtime361, CreateCustomerSchema, CreateCustomerForm;
var init_create_customer_form = __esm({
  "src/routes/customers/customer-create/components/create-customer-form/create-customer-form.tsx"() {
    "use strict";
    import_zod69 = require("@hookform/resolvers/zod");
    import_ui238 = require("@medusajs/ui");
    import_react_hook_form70 = require("react-hook-form");
    import_react_i18next260 = require("react-i18next");
    zod18 = __toESM(require("zod"));
    init_form2();
    init_modals();
    init_keybound_form2();
    init_customers();
    import_jsx_runtime361 = require("react/jsx-runtime");
    CreateCustomerSchema = zod18.object({
      email: zod18.string().email(),
      first_name: zod18.string().optional(),
      last_name: zod18.string().optional(),
      company_name: zod18.string().optional(),
      phone: zod18.string().optional()
    });
    CreateCustomerForm = () => {
      const { t: t4 } = (0, import_react_i18next260.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const { mutateAsync, isPending } = useCreateCustomer();
      const form = (0, import_react_hook_form70.useForm)({
        defaultValues: {
          email: "",
          first_name: "",
          last_name: "",
          phone: "",
          company_name: ""
        },
        resolver: (0, import_zod69.zodResolver)(CreateCustomerSchema)
      });
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(
          {
            email: data.email,
            first_name: data.first_name || void 0,
            last_name: data.last_name || void 0,
            company_name: data.company_name || void 0,
            phone: data.phone || void 0
          },
          {
            onSuccess: ({ customer }) => {
              import_ui238.toast.success(
                t4("customers.create.successToast", {
                  email: customer.email
                })
              );
              handleSuccess(`/customers/${customer.id}`);
            },
            onError: (error) => {
              import_ui238.toast.error(error.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime361.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex flex-1 flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(RouteFocusModal.Header, {}),
            /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(RouteFocusModal.Body, { className: "flex flex-1 flex-col items-center overflow-y-auto py-16", children: /* @__PURE__ */ (0, import_jsx_runtime361.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8", children: [
              /* @__PURE__ */ (0, import_jsx_runtime361.jsxs)("div", { children: [
                /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(import_ui238.Heading, { children: t4("customers.create.header") }),
                /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(import_ui238.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("customers.create.hint") })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime361.jsxs)("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "first_name",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime361.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(Form.Label, { optional: true, children: t4("fields.firstName") }),
                        /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(import_ui238.Input, { autoComplete: "off", ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "last_name",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime361.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(Form.Label, { optional: true, children: t4("fields.lastName") }),
                        /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(import_ui238.Input, { autoComplete: "off", ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "email",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime361.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(Form.Label, { children: t4("fields.email") }),
                        /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(import_ui238.Input, { autoComplete: "off", ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "company_name",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime361.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(Form.Label, { optional: true, children: t4("fields.company") }),
                        /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(import_ui238.Input, { autoComplete: "off", ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "phone",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime361.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(Form.Label, { optional: true, children: t4("fields.phone") }),
                        /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(import_ui238.Input, { autoComplete: "off", ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                )
              ] })
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime361.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(import_ui238.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime361.jsx)(
                import_ui238.Button,
                {
                  size: "small",
                  variant: "primary",
                  type: "submit",
                  isLoading: isPending,
                  children: t4("actions.create")
                }
              )
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/customers/customer-create/components/create-customer-form/index.ts
var init_create_customer_form2 = __esm({
  "src/routes/customers/customer-create/components/create-customer-form/index.ts"() {
    "use strict";
    init_create_customer_form();
  }
});

// src/routes/customers/customer-create/customer-create.tsx
var import_jsx_runtime362, CustomerCreate;
var init_customer_create = __esm({
  "src/routes/customers/customer-create/customer-create.tsx"() {
    "use strict";
    init_modals();
    init_create_customer_form2();
    import_jsx_runtime362 = require("react/jsx-runtime");
    CustomerCreate = () => {
      return /* @__PURE__ */ (0, import_jsx_runtime362.jsx)(RouteFocusModal, { children: /* @__PURE__ */ (0, import_jsx_runtime362.jsx)(CreateCustomerForm, {}) });
    };
  }
});

// src/routes/customers/customer-create/index.ts
var customer_create_exports = {};
__export(customer_create_exports, {
  Component: () => CustomerCreate
});
var init_customer_create2 = __esm({
  "src/routes/customers/customer-create/index.ts"() {
    "use strict";
    init_customer_create();
  }
});

// src/routes/customers/customer-detail/components/customer-general-section/customer-general-section.tsx
var import_icons108, import_ui239, import_react_i18next261, import_react_router_dom110, import_jsx_runtime363, CustomerGeneralSection;
var init_customer_general_section = __esm({
  "src/routes/customers/customer-detail/components/customer-general-section/customer-general-section.tsx"() {
    "use strict";
    import_icons108 = require("@medusajs/icons");
    import_ui239 = require("@medusajs/ui");
    import_react_i18next261 = require("react-i18next");
    import_react_router_dom110 = require("react-router-dom");
    init_action_menu2();
    init_customers();
    import_jsx_runtime363 = require("react/jsx-runtime");
    CustomerGeneralSection = ({
      customer
    }) => {
      const { t: t4 } = (0, import_react_i18next261.useTranslation)();
      const prompt = (0, import_ui239.usePrompt)();
      const navigate = (0, import_react_router_dom110.useNavigate)();
      const { mutateAsync } = useDeleteCustomer(customer.id);
      const name = [customer.first_name, customer.last_name].filter(Boolean).join(" ");
      const statusColor2 = customer.has_account ? "green" : "orange";
      const statusText = customer.has_account ? t4("customers.fields.registered") : t4("customers.fields.guest");
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("customers.delete.title"),
          description: t4("customers.delete.description", {
            email: customer.email
          }),
          verificationInstruction: t4("general.typeToConfirm"),
          verificationText: customer.email,
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            import_ui239.toast.success(
              t4("customers.delete.successToast", {
                email: customer.email
              })
            );
            navigate("/customers", { replace: true });
          },
          onError: (error) => {
            import_ui239.toast.error(error.message);
          }
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime363.jsxs)(import_ui239.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime363.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime363.jsx)(import_ui239.Heading, { children: customer.email }),
          /* @__PURE__ */ (0, import_jsx_runtime363.jsxs)("div", { className: "flex items-center gap-x-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime363.jsx)(import_ui239.StatusBadge, { color: statusColor2, children: statusText }),
            /* @__PURE__ */ (0, import_jsx_runtime363.jsx)(
              ActionMenu,
              {
                groups: [
                  {
                    actions: [
                      {
                        label: t4("actions.edit"),
                        icon: /* @__PURE__ */ (0, import_jsx_runtime363.jsx)(import_icons108.PencilSquare, {}),
                        to: "edit"
                      }
                    ]
                  },
                  {
                    actions: [
                      {
                        label: t4("actions.delete"),
                        icon: /* @__PURE__ */ (0, import_jsx_runtime363.jsx)(import_icons108.Trash, {}),
                        onClick: handleDelete
                      }
                    ]
                  }
                ]
              }
            )
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime363.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime363.jsx)(import_ui239.Text, { size: "small", leading: "compact", weight: "plus", children: t4("fields.name") }),
          /* @__PURE__ */ (0, import_jsx_runtime363.jsx)(import_ui239.Text, { size: "small", leading: "compact", children: name || "-" })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime363.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime363.jsx)(import_ui239.Text, { size: "small", leading: "compact", weight: "plus", children: t4("fields.company") }),
          /* @__PURE__ */ (0, import_jsx_runtime363.jsx)(import_ui239.Text, { size: "small", leading: "compact", children: customer.company_name || "-" })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime363.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime363.jsx)(import_ui239.Text, { size: "small", leading: "compact", weight: "plus", children: t4("fields.phone") }),
          /* @__PURE__ */ (0, import_jsx_runtime363.jsx)(import_ui239.Text, { size: "small", leading: "compact", children: customer.phone || "-" })
        ] })
      ] });
    };
  }
});

// src/routes/customers/customer-detail/components/customer-general-section/index.ts
var init_customer_general_section2 = __esm({
  "src/routes/customers/customer-detail/components/customer-general-section/index.ts"() {
    "use strict";
    init_customer_general_section();
  }
});

// src/routes/customers/customer-detail/components/customer-group-section/customer-group-section.tsx
var import_ui240, import_react_table41, import_i18next6, import_react191, import_icons109, import_react_query66, import_react_i18next262, import_react_router_dom111, import_jsx_runtime364, PAGE_SIZE29, PREFIX13, CustomerGroupSection, CustomerGroupRowActions, columnHelper41, useColumns20;
var init_customer_group_section = __esm({
  "src/routes/customers/customer-detail/components/customer-group-section/customer-group-section.tsx"() {
    "use strict";
    import_ui240 = require("@medusajs/ui");
    import_react_table41 = require("@tanstack/react-table");
    import_i18next6 = require("i18next");
    import_react191 = require("react");
    import_icons109 = require("@medusajs/icons");
    import_react_query66 = require("@tanstack/react-query");
    import_react_i18next262 = require("react-i18next");
    import_react_router_dom111 = require("react-router-dom");
    init_action_menu2();
    init_data_table2();
    init_customer_groups();
    init_use_customer_group_table_columns();
    init_use_customer_group_table_filters();
    init_use_customer_group_table_query();
    init_use_data_table();
    init_api();
    import_jsx_runtime364 = require("react/jsx-runtime");
    PAGE_SIZE29 = 10;
    PREFIX13 = "cusgr";
    CustomerGroupSection = ({
      customer
    }) => {
      const prompt = (0, import_ui240.usePrompt)();
      const [rowSelection, setRowSelection] = (0, import_react191.useState)({});
      const { raw, searchParams } = useCustomerGroupTableQuery({
        pageSize: PAGE_SIZE29,
        prefix: PREFIX13
      });
      const { customer_groups, count: count3, isLoading, isError, error } = useCustomerGroups(
        {
          ...searchParams,
          fields: "+customers.id",
          customers: { id: customer.id }
        },
        {
          placeholderData: import_react_query66.keepPreviousData
        }
      );
      const { mutateAsync: batchCustomerCustomerGroups } = useBatchCustomerCustomerGroups(customer.id);
      const filters = useCustomerGroupTableFilters();
      const columns = useColumns20(customer.id);
      const { table } = useDataTable({
        data: customer_groups ?? [],
        columns,
        count: count3,
        getRowId: (row) => row.id,
        enablePagination: true,
        enableRowSelection: true,
        pageSize: PAGE_SIZE29,
        prefix: PREFIX13,
        rowSelection: {
          state: rowSelection,
          updater: setRowSelection
        }
      });
      const handleRemove = async () => {
        const customerGroupIds = Object.keys(rowSelection);
        const res = await prompt({
          title: (0, import_i18next6.t)("general.areYouSure"),
          description: (0, import_i18next6.t)("customers.groups.removeMany", {
            groups: customer_groups?.filter((g) => customerGroupIds.includes(g.id)).map((g) => g.name).join(",")
          }),
          confirmText: (0, import_i18next6.t)("actions.remove"),
          cancelText: (0, import_i18next6.t)("actions.cancel")
        });
        if (!res) {
          return;
        }
        try {
          await batchCustomerCustomerGroups({ remove: customerGroupIds });
          import_ui240.toast.success(
            (0, import_i18next6.t)("customers.groups.removed.success", {
              groups: customer_groups.filter((cg) => customerGroupIds.includes(cg.id)).map((cg) => cg?.name)
            })
          );
        } catch (e) {
          import_ui240.toast.error(e.message);
        }
      };
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime364.jsxs)(import_ui240.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime364.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime364.jsx)(import_ui240.Heading, { level: "h2", children: (0, import_i18next6.t)("customerGroups.domain") }),
          /* @__PURE__ */ (0, import_jsx_runtime364.jsx)(import_react_router_dom111.Link, { to: `/customers/${customer.id}/add-customer-groups`, children: /* @__PURE__ */ (0, import_jsx_runtime364.jsx)(import_ui240.Button, { variant: "secondary", size: "small", children: (0, import_i18next6.t)("general.add") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime364.jsx)(
          DataTable,
          {
            table,
            columns,
            pageSize: PAGE_SIZE29,
            isLoading,
            count: count3,
            prefix: PREFIX13,
            navigateTo: (row) => `/customer-groups/${row.id}`,
            filters,
            search: true,
            pagination: true,
            orderBy: [
              { key: "name", label: (0, import_i18next6.t)("fields.name") },
              { key: "created_at", label: (0, import_i18next6.t)("fields.createdAt") },
              { key: "updated_at", label: (0, import_i18next6.t)("fields.updatedAt") }
            ],
            commands: [
              {
                action: handleRemove,
                label: (0, import_i18next6.t)("actions.remove"),
                shortcut: "r"
              }
            ],
            queryObject: raw,
            noRecords: {
              message: (0, import_i18next6.t)("customers.groups.list.noRecordsMessage")
            }
          }
        )
      ] });
    };
    CustomerGroupRowActions = ({
      group,
      customerId
    }) => {
      const prompt = (0, import_ui240.usePrompt)();
      const { t: t4 } = (0, import_react_i18next262.useTranslation)();
      const { mutateAsync } = useRemoveCustomersFromGroup(group.id);
      const onRemove = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("customers.groups.remove", {
            name: group.name
          }),
          confirmText: t4("actions.remove"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync([customerId], {
          onError: (error) => {
            import_ui240.toast.error(error.message);
          }
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime364.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  label: t4("actions.edit"),
                  icon: /* @__PURE__ */ (0, import_jsx_runtime364.jsx)(import_icons109.PencilSquare, {}),
                  to: `/customer-groups/${group.id}/edit`
                },
                {
                  label: t4("actions.remove"),
                  onClick: onRemove,
                  icon: /* @__PURE__ */ (0, import_jsx_runtime364.jsx)(import_icons109.Trash, {})
                }
              ]
            }
          ]
        }
      );
    };
    columnHelper41 = (0, import_react_table41.createColumnHelper)();
    useColumns20 = (customerId) => {
      const columns = useCustomerGroupTableColumns();
      return (0, import_react191.useMemo)(
        () => [
          columnHelper41.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime364.jsx)(
                import_ui240.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime364.jsx)(
                import_ui240.Checkbox,
                {
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...columns,
          columnHelper41.display({
            id: "actions",
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime364.jsx)(
              CustomerGroupRowActions,
              {
                group: row.original,
                customerId
              }
            )
          })
        ],
        [columns]
      );
    };
  }
});

// src/routes/customers/customer-detail/components/customer-group-section/index.ts
var init_customer_group_section2 = __esm({
  "src/routes/customers/customer-detail/components/customer-group-section/index.ts"() {
    "use strict";
    init_customer_group_section();
  }
});

// src/routes/customers/customer-detail/components/customer-order-section/customer-order-section.tsx
var import_icons110, import_ui241, import_react_query67, import_react_table42, import_react192, import_react_i18next263, import_jsx_runtime365, PREFIX14, PAGE_SIZE30, DEFAULT_RELATIONS3, DEFAULT_FIELDS3, CustomerOrderSection, columnHelper42, useColumns21;
var init_customer_order_section = __esm({
  "src/routes/customers/customer-detail/components/customer-order-section/customer-order-section.tsx"() {
    "use strict";
    import_icons110 = require("@medusajs/icons");
    import_ui241 = require("@medusajs/ui");
    import_react_query67 = require("@tanstack/react-query");
    import_react_table42 = require("@tanstack/react-table");
    import_react192 = require("react");
    import_react_i18next263 = require("react-i18next");
    init_action_menu2();
    init_data_table2();
    init_orders();
    init_use_order_table_columns();
    init_use_order_table_filters();
    init_use_order_table_query();
    init_use_data_table();
    import_jsx_runtime365 = require("react/jsx-runtime");
    PREFIX14 = "cusord";
    PAGE_SIZE30 = 10;
    DEFAULT_RELATIONS3 = "*customer,*items,*sales_channel";
    DEFAULT_FIELDS3 = "id,status,display_id,created_at,email,fulfillment_status,payment_status,total,currency_code";
    CustomerOrderSection = ({
      customer
    }) => {
      const { t: t4 } = (0, import_react_i18next263.useTranslation)();
      const { searchParams, raw } = useOrderTableQuery({
        pageSize: PAGE_SIZE30,
        prefix: PREFIX14
      });
      const { orders, count: count3, isLoading, isError, error } = useOrders(
        {
          customer_id: customer.id,
          fields: DEFAULT_FIELDS3 + "," + DEFAULT_RELATIONS3,
          ...searchParams
        },
        {
          placeholderData: import_react_query67.keepPreviousData
        }
      );
      const columns = useColumns21();
      const filters = useOrderTableFilters();
      const { table } = useDataTable({
        data: orders ?? [],
        columns,
        enablePagination: true,
        count: count3,
        pageSize: PAGE_SIZE30,
        prefix: PREFIX14
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime365.jsxs)(import_ui241.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime365.jsx)("div", { className: "flex items-center justify-between px-6 py-4", children: /* @__PURE__ */ (0, import_jsx_runtime365.jsx)(import_ui241.Heading, { level: "h2", children: t4("orders.domain") }) }),
        /* @__PURE__ */ (0, import_jsx_runtime365.jsx)(
          DataTable,
          {
            columns,
            table,
            pagination: true,
            navigateTo: (row) => `/orders/${row.original.id}`,
            filters,
            count: count3,
            isLoading,
            pageSize: PAGE_SIZE30,
            orderBy: [
              { key: "display_id", label: t4("orders.fields.displayId") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            search: true,
            queryObject: raw,
            prefix: PREFIX14
          }
        )
      ] });
    };
    columnHelper42 = (0, import_react_table42.createColumnHelper)();
    useColumns21 = () => {
      const base = useOrderTableColumns({ exclude: ["customer"] });
      return (0, import_react192.useMemo)(
        () => [
          ...base
          // TODO: REENABLE WHEN TRANSFER OWNERSHIP IS IMPLEMENTED
          // columnHelper.display({
          //   id: "actions",
          //   cell: ({ row }) => <CustomerOrderActions order={row.original} />,
          // }),
        ],
        [base]
      );
    };
  }
});

// src/routes/customers/customer-detail/components/customer-order-section/index.ts
var init_customer_order_section2 = __esm({
  "src/routes/customers/customer-detail/components/customer-order-section/index.ts"() {
    "use strict";
    init_customer_order_section();
  }
});

// src/routes/customers/customer-detail/customer-detail.tsx
var import_react_router_dom112, import_jsx_runtime366, CustomerDetail;
var init_customer_detail = __esm({
  "src/routes/customers/customer-detail/customer-detail.tsx"() {
    "use strict";
    import_react_router_dom112 = require("react-router-dom");
    init_skeleton2();
    init_pages();
    init_extensions();
    init_customers();
    init_customer_general_section2();
    init_customer_group_section2();
    init_customer_order_section2();
    import_jsx_runtime366 = require("react/jsx-runtime");
    CustomerDetail = () => {
      const { id: id2 } = (0, import_react_router_dom112.useParams)();
      const initialData = (0, import_react_router_dom112.useLoaderData)();
      const { customer, isLoading, isError, error } = useCustomer(id2, void 0, {
        initialData
      });
      const { getWidgets } = useDashboardExtension();
      if (isLoading || !customer) {
        return /* @__PURE__ */ (0, import_jsx_runtime366.jsx)(SingleColumnPageSkeleton, { sections: 2, showJSON: true, showMetadata: true });
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime366.jsxs)(
        SingleColumnPage,
        {
          widgets: {
            before: getWidgets("customer.details.before"),
            after: getWidgets("customer.details.after")
          },
          data: customer,
          hasOutlet: true,
          showJSON: true,
          showMetadata: true,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime366.jsx)(CustomerGeneralSection, { customer }),
            /* @__PURE__ */ (0, import_jsx_runtime366.jsx)(CustomerOrderSection, { customer }),
            /* @__PURE__ */ (0, import_jsx_runtime366.jsx)(CustomerGroupSection, { customer })
          ]
        }
      );
    };
  }
});

// src/routes/customers/customer-detail/loader.ts
var customerDetailQuery, customerLoader;
var init_loader13 = __esm({
  "src/routes/customers/customer-detail/loader.ts"() {
    "use strict";
    init_products();
    init_client2();
    init_query_client();
    customerDetailQuery = (id2) => ({
      queryKey: productsQueryKeys.detail(id2),
      queryFn: async () => sdk.admin.customer.retrieve(id2)
    });
    customerLoader = async ({ params: params2 }) => {
      const id2 = params2.id;
      const query = customerDetailQuery(id2);
      return queryClient.getQueryData(
        query.queryKey
      ) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/routes/customers/customer-detail/index.ts
var customer_detail_exports = {};
__export(customer_detail_exports, {
  Component: () => CustomerDetail,
  loader: () => customerLoader
});
var init_customer_detail2 = __esm({
  "src/routes/customers/customer-detail/index.ts"() {
    "use strict";
    init_customer_detail();
    init_loader13();
  }
});

// src/routes/customers/customer-edit/components/edit-customer-form/edit-customer-form.tsx
var import_zod70, import_ui242, import_react_hook_form71, import_react_i18next264, zod19, import_jsx_runtime367, EditCustomerSchema, EditCustomerForm;
var init_edit_customer_form = __esm({
  "src/routes/customers/customer-edit/components/edit-customer-form/edit-customer-form.tsx"() {
    "use strict";
    import_zod70 = require("@hookform/resolvers/zod");
    import_ui242 = require("@medusajs/ui");
    import_react_hook_form71 = require("react-hook-form");
    import_react_i18next264 = require("react-i18next");
    zod19 = __toESM(require("zod"));
    init_conditional_tooltip2();
    init_form2();
    init_modals();
    init_keybound_form();
    init_customers();
    import_jsx_runtime367 = require("react/jsx-runtime");
    EditCustomerSchema = zod19.object({
      email: zod19.string().email(),
      first_name: zod19.string().optional(),
      last_name: zod19.string().optional(),
      company_name: zod19.string().optional(),
      phone: zod19.string().optional()
    });
    EditCustomerForm = ({ customer }) => {
      const { t: t4 } = (0, import_react_i18next264.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form71.useForm)({
        defaultValues: {
          email: customer.email || "",
          first_name: customer.first_name || "",
          last_name: customer.last_name || "",
          company_name: customer.company_name || "",
          phone: customer.phone || ""
        },
        resolver: (0, import_zod70.zodResolver)(EditCustomerSchema)
      });
      const { mutateAsync, isPending } = useUpdateCustomer(customer.id);
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(
          {
            email: customer.has_account ? void 0 : data.email,
            first_name: data.first_name || null,
            last_name: data.last_name || null,
            phone: data.phone || null,
            company_name: data.company_name || null
          },
          {
            onSuccess: ({ customer: customer2 }) => {
              import_ui242.toast.success(
                t4("customers.edit.successToast", {
                  email: customer2.email
                })
              );
              handleSuccess();
            },
            onError: (error) => {
              import_ui242.toast.error(error.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime367.jsxs)(KeyboundForm, { onSubmit: handleSubmit, className: "flex flex-1 flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(RouteDrawer.Body, { children: /* @__PURE__ */ (0, import_jsx_runtime367.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "email",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime367.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(Form.Label, { children: t4("fields.email") }),
                  /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(
                    ConditionalTooltip,
                    {
                      showTooltip: customer.has_account,
                      content: t4("customers.edit.emailDisabledTooltip"),
                      children: /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(import_ui242.Input, { ...field, disabled: customer.has_account })
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "first_name",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime367.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(Form.Label, { children: t4("fields.firstName") }),
                  /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(import_ui242.Input, { ...field }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "last_name",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime367.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(Form.Label, { children: t4("fields.lastName") }),
                  /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(import_ui242.Input, { ...field }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "company_name",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime367.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(Form.Label, { children: t4("fields.company") }),
                  /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(import_ui242.Input, { ...field }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "phone",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime367.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(Form.Label, { children: t4("fields.phone") }),
                  /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(import_ui242.Input, { ...field }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          )
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime367.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(import_ui242.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime367.jsx)(
            import_ui242.Button,
            {
              isLoading: isPending,
              type: "submit",
              variant: "primary",
              size: "small",
              children: t4("actions.save")
            }
          )
        ] }) })
      ] }) });
    };
  }
});

// src/routes/customers/customer-edit/components/edit-customer-form/index.ts
var init_edit_customer_form2 = __esm({
  "src/routes/customers/customer-edit/components/edit-customer-form/index.ts"() {
    "use strict";
    init_edit_customer_form();
  }
});

// src/routes/customers/customer-edit/customer-edit.tsx
var import_ui243, import_react_i18next265, import_react_router_dom113, import_jsx_runtime368, CustomerEdit;
var init_customer_edit = __esm({
  "src/routes/customers/customer-edit/customer-edit.tsx"() {
    "use strict";
    import_ui243 = require("@medusajs/ui");
    import_react_i18next265 = require("react-i18next");
    import_react_router_dom113 = require("react-router-dom");
    init_modals();
    init_customers();
    init_edit_customer_form2();
    import_jsx_runtime368 = require("react/jsx-runtime");
    CustomerEdit = () => {
      const { t: t4 } = (0, import_react_i18next265.useTranslation)();
      const { id: id2 } = (0, import_react_router_dom113.useParams)();
      const { customer, isLoading, isError, error } = useCustomer(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime368.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime368.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime368.jsx)(import_ui243.Heading, { children: t4("customers.edit.header") }) }),
        !isLoading && customer && /* @__PURE__ */ (0, import_jsx_runtime368.jsx)(EditCustomerForm, { customer })
      ] });
    };
  }
});

// src/routes/customers/customer-edit/index.ts
var customer_edit_exports = {};
__export(customer_edit_exports, {
  Component: () => CustomerEdit
});
var init_customer_edit2 = __esm({
  "src/routes/customers/customer-edit/index.ts"() {
    "use strict";
    init_customer_edit();
  }
});

// src/routes/customers/customers-add-customer-group/components/add-customers-form/add-customer-groups-form.tsx
var import_zod71, import_ui244, import_react_table43, import_react193, import_react_hook_form72, import_react_i18next266, zod20, import_jsx_runtime369, AddCustomerGroupsSchema, PAGE_SIZE31, AddCustomerGroupsForm, columnHelper43, useColumns22;
var init_add_customer_groups_form = __esm({
  "src/routes/customers/customers-add-customer-group/components/add-customers-form/add-customer-groups-form.tsx"() {
    "use strict";
    import_zod71 = require("@hookform/resolvers/zod");
    import_ui244 = require("@medusajs/ui");
    import_react_table43 = require("@tanstack/react-table");
    import_react193 = require("react");
    import_react_hook_form72 = require("react-hook-form");
    import_react_i18next266 = require("react-i18next");
    zod20 = __toESM(require("zod"));
    init_modals();
    init_data_table2();
    init_keybound_form2();
    init_customer_groups();
    init_use_customer_group_table_columns();
    init_use_customer_group_table_filters();
    init_use_customer_group_table_query();
    init_use_data_table();
    init_api();
    import_jsx_runtime369 = require("react/jsx-runtime");
    AddCustomerGroupsSchema = zod20.object({
      customer_group_ids: zod20.array(zod20.string()).min(1)
    });
    PAGE_SIZE31 = 10;
    AddCustomerGroupsForm = ({
      customerId
    }) => {
      const { t: t4 } = (0, import_react_i18next266.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const [isPending, setIsPending] = (0, import_react193.useState)(false);
      const { mutateAsync: batchCustomerCustomerGroups } = useBatchCustomerCustomerGroups(customerId);
      const form = (0, import_react_hook_form72.useForm)({
        defaultValues: {
          customer_group_ids: []
        },
        resolver: (0, import_zod71.zodResolver)(AddCustomerGroupsSchema)
      });
      const { setValue } = form;
      const [rowSelection, setRowSelection] = (0, import_react193.useState)({});
      (0, import_react193.useEffect)(() => {
        setValue(
          "customer_group_ids",
          Object.keys(rowSelection).filter((k) => rowSelection[k]),
          {
            shouldDirty: true,
            shouldTouch: true
          }
        );
      }, [rowSelection, setValue]);
      const { searchParams, raw } = useCustomerGroupTableQuery({
        pageSize: PAGE_SIZE31
      });
      const filters = useCustomerGroupTableFilters();
      const {
        customer_groups,
        count: count3,
        isPending: isLoading,
        isError,
        error
      } = useCustomerGroups({
        fields: "*customers",
        ...searchParams
      });
      const updater = (fn) => {
        const state = typeof fn === "function" ? fn(rowSelection) : fn;
        const ids = Object.keys(state);
        setValue("customer_group_ids", ids, {
          shouldDirty: true,
          shouldTouch: true
        });
        setRowSelection(state);
      };
      const columns = useColumns22();
      const { table } = useDataTable({
        data: customer_groups ?? [],
        columns,
        count: count3,
        enablePagination: true,
        enableRowSelection: (row) => {
          return !row.original.customers?.map((c) => c.id).includes(customerId);
        },
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE31,
        rowSelection: {
          state: rowSelection,
          updater
        }
      });
      const handleSubmit = form.handleSubmit(async (data) => {
        setIsPending(true);
        try {
          await batchCustomerCustomerGroups({ add: data.customer_group_ids });
          import_ui244.toast.success(
            t4("customers.groups.add.success", {
              groups: data.customer_group_ids.map((id2) => customer_groups?.find((g) => g.id === id2)).filter(Boolean).map((cg) => cg?.name)
            })
          );
          handleSuccess(`/customers/${customerId}`);
        } catch (e) {
          import_ui244.toast.error(e.message);
        } finally {
          setIsPending(false);
        }
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime369.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime369.jsxs)(
        KeyboundForm,
        {
          className: "flex h-full flex-col overflow-hidden",
          onSubmit: handleSubmit,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime369.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime369.jsx)("div", { className: "flex items-center justify-end gap-x-2", children: form.formState.errors.customer_group_ids && /* @__PURE__ */ (0, import_jsx_runtime369.jsx)(import_ui244.Hint, { variant: "error", children: form.formState.errors.customer_group_ids.message }) }) }),
            /* @__PURE__ */ (0, import_jsx_runtime369.jsx)(RouteFocusModal.Body, { className: "size-full overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime369.jsx)(
              DataTable,
              {
                table,
                columns,
                pageSize: PAGE_SIZE31,
                count: count3,
                filters,
                orderBy: [
                  { key: "name", label: t4("fields.name") },
                  { key: "created_at", label: t4("fields.createdAt") },
                  { key: "updated_at", label: t4("fields.updatedAt") }
                ],
                isLoading,
                layout: "fill",
                search: "autofocus",
                queryObject: raw,
                noRecords: {
                  message: t4("customers.groups.add.list.noRecordsMessage")
                }
              }
            ) }),
            /* @__PURE__ */ (0, import_jsx_runtime369.jsxs)(RouteFocusModal.Footer, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime369.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime369.jsx)(import_ui244.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime369.jsx)(
                import_ui244.Button,
                {
                  type: "submit",
                  variant: "primary",
                  size: "small",
                  isLoading: isPending,
                  children: t4("actions.save")
                }
              )
            ] })
          ]
        }
      ) });
    };
    columnHelper43 = (0, import_react_table43.createColumnHelper)();
    useColumns22 = () => {
      const { t: t4 } = (0, import_react_i18next266.useTranslation)();
      const base = useCustomerGroupTableColumns();
      const columns = (0, import_react193.useMemo)(
        () => [
          columnHelper43.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime369.jsx)(
                import_ui244.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              const isPreSelected = !row.getCanSelect();
              const isSelected2 = row.getIsSelected() || isPreSelected;
              const Component5 = /* @__PURE__ */ (0, import_jsx_runtime369.jsx)(
                import_ui244.Checkbox,
                {
                  checked: isSelected2,
                  disabled: isPreSelected,
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
              if (isPreSelected) {
                return /* @__PURE__ */ (0, import_jsx_runtime369.jsx)(
                  import_ui244.Tooltip,
                  {
                    content: t4("customers.groups.alreadyAddedTooltip"),
                    side: "right",
                    children: Component5
                  }
                );
              }
              return Component5;
            }
          }),
          ...base
        ],
        [t4, base]
      );
      return columns;
    };
  }
});

// src/routes/customers/customers-add-customer-group/components/add-customers-form/index.ts
var init_add_customers_form = __esm({
  "src/routes/customers/customers-add-customer-group/components/add-customers-form/index.ts"() {
    "use strict";
    init_add_customer_groups_form();
  }
});

// src/routes/customers/customers-add-customer-group/customer-add-customer-groups.tsx
var import_react_router_dom114, import_jsx_runtime370, CustomerAddCustomerGroups;
var init_customer_add_customer_groups = __esm({
  "src/routes/customers/customers-add-customer-group/customer-add-customer-groups.tsx"() {
    "use strict";
    import_react_router_dom114 = require("react-router-dom");
    init_modals();
    init_add_customers_form();
    import_jsx_runtime370 = require("react/jsx-runtime");
    CustomerAddCustomerGroups = () => {
      const { id: id2 } = (0, import_react_router_dom114.useParams)();
      return /* @__PURE__ */ (0, import_jsx_runtime370.jsx)(RouteFocusModal, { children: /* @__PURE__ */ (0, import_jsx_runtime370.jsx)(AddCustomerGroupsForm, { customerId: id2 }) });
    };
  }
});

// src/routes/customers/customers-add-customer-group/index.ts
var customers_add_customer_group_exports = {};
__export(customers_add_customer_group_exports, {
  Component: () => CustomerAddCustomerGroups
});
var init_customers_add_customer_group = __esm({
  "src/routes/customers/customers-add-customer-group/index.ts"() {
    "use strict";
    init_customer_add_customer_groups();
  }
});

// src/routes/customers/customer-metadata/customer-metadata.tsx
var import_react_router_dom115, import_jsx_runtime371, CustomerMetadata;
var init_customer_metadata = __esm({
  "src/routes/customers/customer-metadata/customer-metadata.tsx"() {
    "use strict";
    import_react_router_dom115 = require("react-router-dom");
    init_metadata_form2();
    init_customers();
    import_jsx_runtime371 = require("react/jsx-runtime");
    CustomerMetadata = () => {
      const { id: id2 } = (0, import_react_router_dom115.useParams)();
      const { customer, isPending, isError, error } = useCustomer(id2);
      const { mutateAsync, isPending: isMutating } = useUpdateCustomer(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime371.jsx)(
        MetadataForm,
        {
          metadata: customer?.metadata,
          hook: mutateAsync,
          isPending,
          isMutating
        }
      );
    };
  }
});

// src/routes/customers/customer-metadata/index.ts
var customer_metadata_exports = {};
__export(customer_metadata_exports, {
  Component: () => CustomerMetadata
});
var init_customer_metadata2 = __esm({
  "src/routes/customers/customer-metadata/index.ts"() {
    "use strict";
    init_customer_metadata();
  }
});

// src/routes/customer-groups/customer-group-list/components/customer-group-list-table/customer-group-list-table.tsx
var import_icons111, import_ui245, import_react_table44, import_react194, import_react_i18next267, import_react_router_dom116, import_jsx_runtime372, PAGE_SIZE32, CustomerGroupListTable, CustomerGroupRowActions2, columnHelper44, useColumns23;
var init_customer_group_list_table = __esm({
  "src/routes/customer-groups/customer-group-list/components/customer-group-list-table/customer-group-list-table.tsx"() {
    "use strict";
    import_icons111 = require("@medusajs/icons");
    import_ui245 = require("@medusajs/ui");
    import_react_table44 = require("@tanstack/react-table");
    import_react194 = require("react");
    import_react_i18next267 = require("react-i18next");
    import_react_router_dom116 = require("react-router-dom");
    init_action_menu2();
    init_data_table2();
    init_customer_groups();
    init_use_customer_group_table_columns();
    init_use_customer_group_table_filters();
    init_use_customer_group_table_query();
    init_use_data_table();
    import_jsx_runtime372 = require("react/jsx-runtime");
    PAGE_SIZE32 = 20;
    CustomerGroupListTable = () => {
      const { t: t4 } = (0, import_react_i18next267.useTranslation)();
      const { searchParams, raw } = useCustomerGroupTableQuery({
        pageSize: PAGE_SIZE32
      });
      const { customer_groups, count: count3, isLoading, isError, error } = useCustomerGroups({
        ...searchParams,
        fields: "id,name,customers.id"
      });
      const filters = useCustomerGroupTableFilters();
      const columns = useColumns23();
      const { table } = useDataTable({
        data: customer_groups ?? [],
        columns,
        enablePagination: true,
        count: count3,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE32
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime372.jsxs)(import_ui245.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime372.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime372.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime372.jsx)(import_ui245.Heading, { level: "h2", children: t4("customerGroups.domain") }),
            /* @__PURE__ */ (0, import_jsx_runtime372.jsx)(import_ui245.Text, { className: "text-ui-fg-subtle", size: "small", children: t4("customerGroups.subtitle") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime372.jsx)(import_react_router_dom116.Link, { to: "/customer-groups/create", children: /* @__PURE__ */ (0, import_jsx_runtime372.jsx)(import_ui245.Button, { size: "small", variant: "secondary", children: t4("actions.create") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime372.jsx)(
          DataTable,
          {
            table,
            columns,
            pageSize: PAGE_SIZE32,
            count: count3,
            filters,
            search: true,
            pagination: true,
            navigateTo: (row) => `/customer-groups/${row.original.id}`,
            orderBy: [
              { key: "name", label: t4("fields.name") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            queryObject: raw,
            isLoading
          }
        )
      ] });
    };
    CustomerGroupRowActions2 = ({
      group
    }) => {
      const { t: t4 } = (0, import_react_i18next267.useTranslation)();
      const prompt = (0, import_ui245.usePrompt)();
      const { mutateAsync } = useDeleteCustomerGroup(group.id);
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("customerGroups.delete.title"),
          description: t4("customerGroups.delete.description", {
            name: group.name
          }),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            import_ui245.toast.success(
              t4("customerGroups.delete.successToast", {
                name: group.name
              })
            );
          },
          onError: (error) => {
            import_ui245.toast.error(error.message);
          }
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime372.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  label: t4("actions.edit"),
                  to: `/customer-groups/${group.id}/edit`,
                  icon: /* @__PURE__ */ (0, import_jsx_runtime372.jsx)(import_icons111.PencilSquare, {})
                }
              ]
            },
            {
              actions: [
                {
                  label: t4("actions.delete"),
                  onClick: handleDelete,
                  icon: /* @__PURE__ */ (0, import_jsx_runtime372.jsx)(import_icons111.Trash, {})
                }
              ]
            }
          ]
        }
      );
    };
    columnHelper44 = (0, import_react_table44.createColumnHelper)();
    useColumns23 = () => {
      const columns = useCustomerGroupTableColumns();
      return (0, import_react194.useMemo)(
        () => [
          ...columns,
          columnHelper44.display({
            id: "actions",
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime372.jsx)(CustomerGroupRowActions2, { group: row.original })
          })
        ],
        [columns]
      );
    };
  }
});

// src/routes/customer-groups/customer-group-list/components/customer-group-list-table/index.ts
var init_customer_group_list_table2 = __esm({
  "src/routes/customer-groups/customer-group-list/components/customer-group-list-table/index.ts"() {
    "use strict";
    init_customer_group_list_table();
  }
});

// src/routes/customer-groups/customer-group-list/customer-group-list.tsx
var import_jsx_runtime373, CustomerGroupsList;
var init_customer_group_list = __esm({
  "src/routes/customer-groups/customer-group-list/customer-group-list.tsx"() {
    "use strict";
    init_pages();
    init_extensions();
    init_customer_group_list_table2();
    import_jsx_runtime373 = require("react/jsx-runtime");
    CustomerGroupsList = () => {
      const { getWidgets } = useDashboardExtension();
      return /* @__PURE__ */ (0, import_jsx_runtime373.jsx)(
        SingleColumnPage,
        {
          widgets: {
            after: getWidgets("customer_group.list.after"),
            before: getWidgets("customer_group.list.before")
          },
          children: /* @__PURE__ */ (0, import_jsx_runtime373.jsx)(CustomerGroupListTable, {})
        }
      );
    };
  }
});

// src/routes/customer-groups/customer-group-list/index.ts
var customer_group_list_exports = {};
__export(customer_group_list_exports, {
  Component: () => CustomerGroupsList
});
var init_customer_group_list2 = __esm({
  "src/routes/customer-groups/customer-group-list/index.ts"() {
    "use strict";
    init_customer_group_list();
  }
});

// src/routes/customer-groups/customer-group-create/components/create-customer-group-form/create-customer-group-form.tsx
var import_zod72, import_ui246, import_react_hook_form73, import_react_i18next268, zod21, import_jsx_runtime374, CreateCustomerGroupSchema, CreateCustomerGroupForm;
var init_create_customer_group_form = __esm({
  "src/routes/customer-groups/customer-group-create/components/create-customer-group-form/create-customer-group-form.tsx"() {
    "use strict";
    import_zod72 = require("@hookform/resolvers/zod");
    import_ui246 = require("@medusajs/ui");
    import_react_hook_form73 = require("react-hook-form");
    import_react_i18next268 = require("react-i18next");
    zod21 = __toESM(require("zod"));
    init_form2();
    init_modals();
    init_keybound_form2();
    init_customer_groups();
    import_jsx_runtime374 = require("react/jsx-runtime");
    CreateCustomerGroupSchema = zod21.object({
      name: zod21.string().min(1)
    });
    CreateCustomerGroupForm = () => {
      const { t: t4 } = (0, import_react_i18next268.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form73.useForm)({
        defaultValues: {
          name: ""
        },
        resolver: (0, import_zod72.zodResolver)(CreateCustomerGroupSchema)
      });
      const { mutateAsync, isPending } = useCreateCustomerGroup();
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(
          {
            name: data.name
          },
          {
            onSuccess: ({ customer_group }) => {
              import_ui246.toast.success(
                t4("customerGroups.create.successToast", {
                  name: customer_group.name
                })
              );
              handleSuccess(`/customer-groups/${customer_group.id}`);
            },
            onError: (error) => {
              import_ui246.toast.error(error.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime374.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime374.jsxs)(
        KeyboundForm,
        {
          className: "flex h-full flex-col overflow-hidden",
          onSubmit: handleSubmit,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime374.jsx)(RouteFocusModal.Header, {}),
            /* @__PURE__ */ (0, import_jsx_runtime374.jsx)(RouteFocusModal.Body, { className: "flex flex-col items-center pt-[72px]", children: /* @__PURE__ */ (0, import_jsx_runtime374.jsxs)("div", { className: "flex size-full max-w-[720px] flex-col gap-y-8", children: [
              /* @__PURE__ */ (0, import_jsx_runtime374.jsxs)("div", { children: [
                /* @__PURE__ */ (0, import_jsx_runtime374.jsx)(RouteFocusModal.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime374.jsx)(import_ui246.Heading, { children: t4("customerGroups.create.header") }) }),
                /* @__PURE__ */ (0, import_jsx_runtime374.jsx)(RouteFocusModal.Description, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime374.jsx)(import_ui246.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("customerGroups.create.hint") }) })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime374.jsx)("div", { className: "grid grid-cols-2 gap-4", children: /* @__PURE__ */ (0, import_jsx_runtime374.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "name",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime374.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime374.jsx)(Form.Label, { children: t4("fields.name") }),
                      /* @__PURE__ */ (0, import_jsx_runtime374.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime374.jsx)(import_ui246.Input, { ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime374.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ) })
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime374.jsxs)(RouteFocusModal.Footer, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime374.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime374.jsx)(import_ui246.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime374.jsx)(
                import_ui246.Button,
                {
                  type: "submit",
                  variant: "primary",
                  size: "small",
                  isLoading: isPending,
                  children: t4("actions.create")
                }
              )
            ] })
          ]
        }
      ) });
    };
  }
});

// src/routes/customer-groups/customer-group-create/components/create-customer-group-form/index.ts
var init_create_customer_group_form2 = __esm({
  "src/routes/customer-groups/customer-group-create/components/create-customer-group-form/index.ts"() {
    "use strict";
    init_create_customer_group_form();
  }
});

// src/routes/customer-groups/customer-group-create/customer-group-create.tsx
var import_jsx_runtime375, CustomerGroupCreate;
var init_customer_group_create = __esm({
  "src/routes/customer-groups/customer-group-create/customer-group-create.tsx"() {
    "use strict";
    init_modals();
    init_create_customer_group_form2();
    import_jsx_runtime375 = require("react/jsx-runtime");
    CustomerGroupCreate = () => {
      return /* @__PURE__ */ (0, import_jsx_runtime375.jsx)(RouteFocusModal, { children: /* @__PURE__ */ (0, import_jsx_runtime375.jsx)(CreateCustomerGroupForm, {}) });
    };
  }
});

// src/routes/customer-groups/customer-group-create/index.ts
var customer_group_create_exports = {};
__export(customer_group_create_exports, {
  Component: () => CustomerGroupCreate
});
var init_customer_group_create2 = __esm({
  "src/routes/customer-groups/customer-group-create/index.ts"() {
    "use strict";
    init_customer_group_create();
  }
});

// src/routes/customer-groups/customer-group-detail/components/customer-group-customer-section/customer-group-customer-section.tsx
var import_icons112, import_ui247, import_react_table45, import_react195, import_react_i18next269, import_react_router_dom117, import_jsx_runtime376, PAGE_SIZE33, CustomerGroupCustomerSection, CustomerActions2, columnHelper45, useColumns24;
var init_customer_group_customer_section = __esm({
  "src/routes/customer-groups/customer-group-detail/components/customer-group-customer-section/customer-group-customer-section.tsx"() {
    "use strict";
    import_icons112 = require("@medusajs/icons");
    import_ui247 = require("@medusajs/ui");
    import_react_table45 = require("@tanstack/react-table");
    import_react195 = require("react");
    import_react_i18next269 = require("react-i18next");
    import_react_router_dom117 = require("react-router-dom");
    init_action_menu2();
    init_data_table2();
    init_customer_groups();
    init_customers();
    init_use_customer_table_columns();
    init_use_customer_table_filters();
    init_use_customer_table_query();
    init_use_data_table();
    import_jsx_runtime376 = require("react/jsx-runtime");
    PAGE_SIZE33 = 10;
    CustomerGroupCustomerSection = ({
      group
    }) => {
      const [rowSelection, setRowSelection] = (0, import_react195.useState)({});
      const { t: t4 } = (0, import_react_i18next269.useTranslation)();
      const prompt = (0, import_ui247.usePrompt)();
      const { searchParams, raw } = useCustomerTableQuery({ pageSize: PAGE_SIZE33 });
      const { customers, count: count3, isLoading, isError, error } = useCustomers({
        ...searchParams,
        groups: group.id
      });
      const columns = useColumns24();
      const filters = useCustomerTableFilters(["groups"]);
      const { table } = useDataTable({
        data: customers ?? [],
        columns,
        count: count3,
        getRowId: (row) => row.id,
        enablePagination: true,
        enableRowSelection: true,
        pageSize: PAGE_SIZE33,
        rowSelection: {
          state: rowSelection,
          updater: setRowSelection
        },
        meta: {
          customerGroupId: group.id
        }
      });
      if (isError) {
        throw error;
      }
      const { mutateAsync } = useRemoveCustomersFromGroup(group.id);
      const handleRemove = async () => {
        const keys = Object.keys(rowSelection);
        const res = await prompt({
          title: t4("customerGroups.customers.remove.title", {
            count: keys.length
          }),
          description: t4("customerGroups.customers.remove.description", {
            count: keys.length
          }),
          confirmText: t4("actions.continue"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(keys, {
          onSuccess: () => {
            setRowSelection({});
          }
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime376.jsxs)(import_ui247.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime376.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime376.jsx)(import_ui247.Heading, { level: "h2", children: t4("customers.domain") }),
          /* @__PURE__ */ (0, import_jsx_runtime376.jsx)(import_react_router_dom117.Link, { to: `/customer-groups/${group.id}/add-customers`, children: /* @__PURE__ */ (0, import_jsx_runtime376.jsx)(import_ui247.Button, { variant: "secondary", size: "small", children: t4("general.add") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime376.jsx)(
          DataTable,
          {
            table,
            columns,
            pageSize: PAGE_SIZE33,
            isLoading,
            count: count3,
            navigateTo: (row) => `/customers/${row.id}`,
            filters,
            search: true,
            pagination: true,
            orderBy: [
              { key: "email", label: t4("fields.email") },
              { key: "first_name", label: t4("fields.firstName") },
              { key: "last_name", label: t4("fields.lastName") },
              { key: "has_account", label: t4("customers.hasAccount") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            queryObject: raw,
            commands: [
              {
                action: handleRemove,
                label: t4("actions.remove"),
                shortcut: "r"
              }
            ],
            noRecords: {
              message: t4("customerGroups.customers.list.noRecordsMessage")
            }
          }
        )
      ] });
    };
    CustomerActions2 = ({
      customer,
      customerGroupId
    }) => {
      const { t: t4 } = (0, import_react_i18next269.useTranslation)();
      const { mutateAsync } = useRemoveCustomersFromGroup(customerGroupId);
      const prompt = (0, import_ui247.usePrompt)();
      const handleRemove = async () => {
        const res = await prompt({
          title: t4("customerGroups.customers.remove.title", {
            count: 1
          }),
          description: t4("customerGroups.customers.remove.description", {
            count: 1
          }),
          confirmText: t4("actions.continue"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync([customer.id]);
      };
      return /* @__PURE__ */ (0, import_jsx_runtime376.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime376.jsx)(import_icons112.PencilSquare, {}),
                  label: t4("actions.edit"),
                  to: `/customers/${customer.id}/edit`
                }
              ]
            },
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime376.jsx)(import_icons112.Trash, {}),
                  label: t4("actions.remove"),
                  onClick: handleRemove
                }
              ]
            }
          ]
        }
      );
    };
    columnHelper45 = (0, import_react_table45.createColumnHelper)();
    useColumns24 = () => {
      const columns = useCustomerTableColumns();
      return (0, import_react195.useMemo)(
        () => [
          columnHelper45.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime376.jsx)(
                import_ui247.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime376.jsx)(
                import_ui247.Checkbox,
                {
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...columns,
          columnHelper45.display({
            id: "actions",
            cell: ({ row, table }) => {
              const { customerGroupId } = table.options.meta;
              return /* @__PURE__ */ (0, import_jsx_runtime376.jsx)(
                CustomerActions2,
                {
                  customer: row.original,
                  customerGroupId
                }
              );
            }
          })
        ],
        [columns]
      );
    };
  }
});

// src/routes/customer-groups/customer-group-detail/components/customer-group-customer-section/index.ts
var init_customer_group_customer_section2 = __esm({
  "src/routes/customer-groups/customer-group-detail/components/customer-group-customer-section/index.ts"() {
    "use strict";
    init_customer_group_customer_section();
  }
});

// src/routes/customer-groups/customer-group-detail/components/customer-group-general-section/customer-group-general-section.tsx
var import_icons113, import_ui248, import_react_i18next270, import_react_router_dom118, import_jsx_runtime377, CustomerGroupGeneralSection;
var init_customer_group_general_section = __esm({
  "src/routes/customer-groups/customer-group-detail/components/customer-group-general-section/customer-group-general-section.tsx"() {
    "use strict";
    import_icons113 = require("@medusajs/icons");
    import_ui248 = require("@medusajs/ui");
    import_react_i18next270 = require("react-i18next");
    import_react_router_dom118 = require("react-router-dom");
    init_action_menu2();
    init_customer_groups();
    import_jsx_runtime377 = require("react/jsx-runtime");
    CustomerGroupGeneralSection = ({
      group
    }) => {
      const { t: t4 } = (0, import_react_i18next270.useTranslation)();
      const prompt = (0, import_ui248.usePrompt)();
      const navigate = (0, import_react_router_dom118.useNavigate)();
      const { mutateAsync } = useDeleteCustomerGroup(group.id);
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("customerGroups.delete.title"),
          description: t4("customerGroups.delete.description", {
            name: group.name
          }),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            import_ui248.toast.success(
              t4("customerGroups.delete.successToast", {
                name: group.name
              })
            );
            navigate("/customer-groups", { replace: true });
          },
          onError: (error) => {
            import_ui248.toast.error(error.message);
          }
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime377.jsxs)(import_ui248.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime377.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime377.jsx)(import_ui248.Heading, { children: group.name }),
          /* @__PURE__ */ (0, import_jsx_runtime377.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      icon: /* @__PURE__ */ (0, import_jsx_runtime377.jsx)(import_icons113.PencilSquare, {}),
                      label: t4("actions.edit"),
                      to: `/customer-groups/${group.id}/edit`
                    }
                  ]
                },
                {
                  actions: [
                    {
                      icon: /* @__PURE__ */ (0, import_jsx_runtime377.jsx)(import_icons113.Trash, {}),
                      label: t4("actions.delete"),
                      onClick: handleDelete
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime377.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime377.jsx)(import_ui248.Text, { size: "small", leading: "compact", weight: "plus", children: t4("customers.domain") }),
          /* @__PURE__ */ (0, import_jsx_runtime377.jsx)(import_ui248.Text, { size: "small", leading: "compact", children: group.customers?.length || "-" })
        ] })
      ] });
    };
  }
});

// src/routes/customer-groups/customer-group-detail/components/customer-group-general-section/index.ts
var init_customer_group_general_section2 = __esm({
  "src/routes/customer-groups/customer-group-detail/components/customer-group-general-section/index.ts"() {
    "use strict";
    init_customer_group_general_section();
  }
});

// src/routes/customer-groups/customer-group-detail/customer-group-detail.tsx
var import_react_router_dom119, import_jsx_runtime378, CustomerGroupDetail;
var init_customer_group_detail = __esm({
  "src/routes/customer-groups/customer-group-detail/customer-group-detail.tsx"() {
    "use strict";
    import_react_router_dom119 = require("react-router-dom");
    init_pages();
    init_customer_groups();
    init_customer_group_customer_section2();
    init_customer_group_general_section2();
    init_skeleton2();
    init_extensions();
    import_jsx_runtime378 = require("react/jsx-runtime");
    CustomerGroupDetail = () => {
      const initialData = (0, import_react_router_dom119.useLoaderData)();
      const { id: id2 } = (0, import_react_router_dom119.useParams)();
      const { customer_group, isLoading, isError, error } = useCustomerGroup(
        id2,
        {
          fields: "+customers.id"
        },
        { initialData }
      );
      const { getWidgets } = useDashboardExtension();
      if (isLoading || !customer_group) {
        return /* @__PURE__ */ (0, import_jsx_runtime378.jsx)(SingleColumnPageSkeleton, { sections: 2, showJSON: true, showMetadata: true });
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime378.jsxs)(
        SingleColumnPage,
        {
          widgets: {
            before: getWidgets("customer_group.details.before"),
            after: getWidgets("customer_group.details.after")
          },
          showJSON: true,
          showMetadata: true,
          data: customer_group,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime378.jsx)(CustomerGroupGeneralSection, { group: customer_group }),
            /* @__PURE__ */ (0, import_jsx_runtime378.jsx)(CustomerGroupCustomerSection, { group: customer_group })
          ]
        }
      );
    };
  }
});

// src/routes/customer-groups/customer-group-detail/loader.ts
var customerGroupDetailQuery, customerGroupLoader;
var init_loader14 = __esm({
  "src/routes/customer-groups/customer-group-detail/loader.ts"() {
    "use strict";
    init_products();
    init_client2();
    init_query_client();
    customerGroupDetailQuery = (id2) => ({
      queryKey: productsQueryKeys.detail(id2),
      queryFn: async () => sdk.admin.customerGroup.retrieve(id2, {
        fields: "+customers.id"
      })
    });
    customerGroupLoader = async ({ params: params2 }) => {
      const id2 = params2.id;
      const query = customerGroupDetailQuery(id2);
      return queryClient.getQueryData(query.queryKey) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/routes/customer-groups/customer-group-detail/index.ts
var customer_group_detail_exports = {};
__export(customer_group_detail_exports, {
  Component: () => CustomerGroupDetail,
  loader: () => customerGroupLoader
});
var init_customer_group_detail2 = __esm({
  "src/routes/customer-groups/customer-group-detail/index.ts"() {
    "use strict";
    init_customer_group_detail();
    init_loader14();
  }
});

// src/routes/customer-groups/customer-group-edit/components/edit-customer-group-form/edit-customer-group-form.tsx
var import_zod73, import_ui249, import_react_hook_form74, import_react_i18next271, z29, import_jsx_runtime379, EditCustomerGroupSchema, EditCustomerGroupForm;
var init_edit_customer_group_form = __esm({
  "src/routes/customer-groups/customer-group-edit/components/edit-customer-group-form/edit-customer-group-form.tsx"() {
    "use strict";
    import_zod73 = require("@hookform/resolvers/zod");
    import_ui249 = require("@medusajs/ui");
    import_react_hook_form74 = require("react-hook-form");
    import_react_i18next271 = require("react-i18next");
    z29 = __toESM(require("zod"));
    init_form2();
    init_modals();
    init_keybound_form2();
    init_customer_groups();
    import_jsx_runtime379 = require("react/jsx-runtime");
    EditCustomerGroupSchema = z29.object({
      name: z29.string().min(1)
    });
    EditCustomerGroupForm = ({
      group
    }) => {
      const { t: t4 } = (0, import_react_i18next271.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form74.useForm)({
        defaultValues: {
          name: group.name || ""
        },
        resolver: (0, import_zod73.zodResolver)(EditCustomerGroupSchema)
      });
      const { mutateAsync, isPending } = useUpdateCustomerGroup(group.id);
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(data, {
          onSuccess: ({ customer_group }) => {
            import_ui249.toast.success(
              t4("customerGroups.edit.successToast", {
                name: customer_group.name
              })
            );
            handleSuccess();
          },
          onError: (error) => {
            import_ui249.toast.error(error.message);
          }
        });
      });
      return /* @__PURE__ */ (0, import_jsx_runtime379.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime379.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex flex-1 flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime379.jsx)(RouteDrawer.Body, { className: "flex max-w-full flex-1 flex-col gap-y-8 overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime379.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "name",
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime379.jsxs)(Form.Item, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime379.jsx)(Form.Label, { children: t4("fields.name") }),
                    /* @__PURE__ */ (0, import_jsx_runtime379.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime379.jsx)(import_ui249.Input, { ...field, size: "small" }) }),
                    /* @__PURE__ */ (0, import_jsx_runtime379.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              }
            ) }),
            /* @__PURE__ */ (0, import_jsx_runtime379.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime379.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime379.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime379.jsx)(import_ui249.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime379.jsx)(import_ui249.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/customer-groups/customer-group-edit/components/edit-customer-group-form/index.ts
var init_edit_customer_group_form2 = __esm({
  "src/routes/customer-groups/customer-group-edit/components/edit-customer-group-form/index.ts"() {
    "use strict";
    init_edit_customer_group_form();
  }
});

// src/routes/customer-groups/customer-group-edit/customer-group-edit.tsx
var import_ui250, import_react_i18next272, import_react_router_dom120, import_jsx_runtime380, CustomerGroupEdit;
var init_customer_group_edit = __esm({
  "src/routes/customer-groups/customer-group-edit/customer-group-edit.tsx"() {
    "use strict";
    import_ui250 = require("@medusajs/ui");
    import_react_i18next272 = require("react-i18next");
    import_react_router_dom120 = require("react-router-dom");
    init_modals();
    init_customer_groups();
    init_edit_customer_group_form2();
    import_jsx_runtime380 = require("react/jsx-runtime");
    CustomerGroupEdit = () => {
      const { id: id2 } = (0, import_react_router_dom120.useParams)();
      const { customer_group, isLoading, isError, error } = useCustomerGroup(id2);
      const { t: t4 } = (0, import_react_i18next272.useTranslation)();
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime380.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime380.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime380.jsx)(import_ui250.Heading, { children: t4("customerGroups.edit.header") }) }),
        !isLoading && customer_group && /* @__PURE__ */ (0, import_jsx_runtime380.jsx)(EditCustomerGroupForm, { group: customer_group })
      ] });
    };
  }
});

// src/routes/customer-groups/customer-group-edit/index.ts
var customer_group_edit_exports = {};
__export(customer_group_edit_exports, {
  Component: () => CustomerGroupEdit
});
var init_customer_group_edit2 = __esm({
  "src/routes/customer-groups/customer-group-edit/index.ts"() {
    "use strict";
    init_customer_group_edit();
  }
});

// src/routes/customer-groups/customer-group-add-customers/components/add-customers-form/add-customers-form.tsx
var import_zod74, import_ui251, import_react_table46, import_react196, import_react_hook_form75, import_react_i18next273, zod22, import_jsx_runtime381, AddCustomersSchema, PAGE_SIZE34, AddCustomersForm, columnHelper46, useColumns25;
var init_add_customers_form2 = __esm({
  "src/routes/customer-groups/customer-group-add-customers/components/add-customers-form/add-customers-form.tsx"() {
    "use strict";
    import_zod74 = require("@hookform/resolvers/zod");
    import_ui251 = require("@medusajs/ui");
    import_react_table46 = require("@tanstack/react-table");
    import_react196 = require("react");
    import_react_hook_form75 = require("react-hook-form");
    import_react_i18next273 = require("react-i18next");
    zod22 = __toESM(require("zod"));
    init_modals();
    init_data_table2();
    init_keybound_form2();
    init_customer_groups();
    init_customers();
    init_use_customer_table_columns();
    init_use_customer_table_filters();
    init_use_customer_table_query();
    init_use_data_table();
    import_jsx_runtime381 = require("react/jsx-runtime");
    AddCustomersSchema = zod22.object({
      customer_ids: zod22.array(zod22.string()).min(1)
    });
    PAGE_SIZE34 = 10;
    AddCustomersForm = ({
      customerGroupId
    }) => {
      const { t: t4 } = (0, import_react_i18next273.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form75.useForm)({
        defaultValues: {
          customer_ids: []
        },
        resolver: (0, import_zod74.zodResolver)(AddCustomersSchema)
      });
      const { setValue } = form;
      const [rowSelection, setRowSelection] = (0, import_react196.useState)({});
      (0, import_react196.useEffect)(() => {
        setValue(
          "customer_ids",
          Object.keys(rowSelection).filter((k) => rowSelection[k]),
          {
            shouldDirty: true,
            shouldTouch: true
          }
        );
      }, [rowSelection, setValue]);
      const { searchParams, raw } = useCustomerTableQuery({ pageSize: PAGE_SIZE34 });
      const filters = useCustomerTableFilters();
      const { customers, count: count3, isLoading, isError, error } = useCustomers({
        fields: "id,email,first_name,last_name,*groups",
        ...searchParams
      });
      const updater = (fn) => {
        const state = typeof fn === "function" ? fn(rowSelection) : fn;
        const ids = Object.keys(state);
        setValue("customer_ids", ids, {
          shouldDirty: true,
          shouldTouch: true
        });
        setRowSelection(state);
      };
      const columns = useColumns25();
      const { table } = useDataTable({
        data: customers ?? [],
        columns,
        count: count3,
        enablePagination: true,
        enableRowSelection: (row) => {
          return !row.original.groups?.map((gc) => gc.id).includes(customerGroupId);
        },
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE34,
        rowSelection: {
          state: rowSelection,
          updater
        }
      });
      const { mutateAsync, isPending } = useAddCustomersToGroup(customerGroupId);
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(data.customer_ids, {
          onSuccess: () => {
            import_ui251.toast.success(
              t4("customerGroups.customers.add.successToast", {
                count: data.customer_ids.length
              })
            );
            handleSuccess(`/customer-groups/${customerGroupId}`);
          },
          onError: (error2) => {
            import_ui251.toast.error(error2.message);
          }
        });
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime381.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime381.jsxs)(
        KeyboundForm,
        {
          className: "flex h-full flex-col overflow-hidden",
          onSubmit: handleSubmit,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime381.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime381.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              form.formState.errors.customer_ids && /* @__PURE__ */ (0, import_jsx_runtime381.jsx)(import_ui251.Hint, { variant: "error", children: form.formState.errors.customer_ids.message }),
              /* @__PURE__ */ (0, import_jsx_runtime381.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime381.jsx)(import_ui251.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime381.jsx)(
                import_ui251.Button,
                {
                  type: "submit",
                  variant: "primary",
                  size: "small",
                  isLoading: isPending,
                  children: t4("actions.save")
                }
              )
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime381.jsx)(RouteFocusModal.Body, { className: "size-full overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime381.jsx)(
              DataTable,
              {
                table,
                columns,
                pageSize: PAGE_SIZE34,
                count: count3,
                filters,
                orderBy: [
                  { key: "email", label: t4("fields.email") },
                  { key: "first_name", label: t4("fields.firstName") },
                  { key: "last_name", label: t4("fields.lastName") },
                  { key: "has_account", label: t4("customers.hasAccount") },
                  { key: "created_at", label: t4("fields.createdAt") },
                  { key: "updated_at", label: t4("fields.updatedAt") }
                ],
                isLoading,
                layout: "fill",
                search: "autofocus",
                queryObject: raw,
                noRecords: {
                  message: t4("customerGroups.customers.add.list.noRecordsMessage")
                }
              }
            ) })
          ]
        }
      ) });
    };
    columnHelper46 = (0, import_react_table46.createColumnHelper)();
    useColumns25 = () => {
      const { t: t4 } = (0, import_react_i18next273.useTranslation)();
      const base = useCustomerTableColumns();
      const columns = (0, import_react196.useMemo)(
        () => [
          columnHelper46.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime381.jsx)(
                import_ui251.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              const isPreSelected = !row.getCanSelect();
              const isSelected2 = row.getIsSelected() || isPreSelected;
              const Component5 = /* @__PURE__ */ (0, import_jsx_runtime381.jsx)(
                import_ui251.Checkbox,
                {
                  checked: isSelected2,
                  disabled: isPreSelected,
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
              if (isPreSelected) {
                return /* @__PURE__ */ (0, import_jsx_runtime381.jsx)(
                  import_ui251.Tooltip,
                  {
                    content: t4("customerGroups.customers.alreadyAddedTooltip"),
                    side: "right",
                    children: Component5
                  }
                );
              }
              return Component5;
            }
          }),
          ...base
        ],
        [t4, base]
      );
      return columns;
    };
  }
});

// src/routes/customer-groups/customer-group-add-customers/components/add-customers-form/index.ts
var init_add_customers_form3 = __esm({
  "src/routes/customer-groups/customer-group-add-customers/components/add-customers-form/index.ts"() {
    "use strict";
    init_add_customers_form2();
  }
});

// src/routes/customer-groups/customer-group-add-customers/customer-group-add-customers.tsx
var import_react_router_dom121, import_jsx_runtime382, CustomerGroupAddCustomers;
var init_customer_group_add_customers = __esm({
  "src/routes/customer-groups/customer-group-add-customers/customer-group-add-customers.tsx"() {
    "use strict";
    import_react_router_dom121 = require("react-router-dom");
    init_modals();
    init_add_customers_form3();
    import_jsx_runtime382 = require("react/jsx-runtime");
    CustomerGroupAddCustomers = () => {
      const { id: id2 } = (0, import_react_router_dom121.useParams)();
      return /* @__PURE__ */ (0, import_jsx_runtime382.jsx)(RouteFocusModal, { children: /* @__PURE__ */ (0, import_jsx_runtime382.jsx)(AddCustomersForm, { customerGroupId: id2 }) });
    };
  }
});

// src/routes/customer-groups/customer-group-add-customers/index.ts
var customer_group_add_customers_exports = {};
__export(customer_group_add_customers_exports, {
  Component: () => CustomerGroupAddCustomers
});
var init_customer_group_add_customers2 = __esm({
  "src/routes/customer-groups/customer-group-add-customers/index.ts"() {
    "use strict";
    init_customer_group_add_customers();
  }
});

// src/routes/customer-groups/customer-group-metadata/customer-metadata.tsx
var import_react_router_dom122, import_jsx_runtime383, CustomerGroupMetadata;
var init_customer_metadata3 = __esm({
  "src/routes/customer-groups/customer-group-metadata/customer-metadata.tsx"() {
    "use strict";
    import_react_router_dom122 = require("react-router-dom");
    init_metadata_form2();
    init_customer_groups();
    import_jsx_runtime383 = require("react/jsx-runtime");
    CustomerGroupMetadata = () => {
      const { id: id2 } = (0, import_react_router_dom122.useParams)();
      const { customer_group, isPending, isError, error } = useCustomerGroup(id2);
      const { mutateAsync, isPending: isMutating } = useUpdateCustomerGroup(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime383.jsx)(
        MetadataForm,
        {
          metadata: customer_group?.metadata,
          hook: mutateAsync,
          isPending,
          isMutating
        }
      );
    };
  }
});

// src/routes/customer-groups/customer-group-metadata/index.ts
var customer_group_metadata_exports = {};
__export(customer_group_metadata_exports, {
  Component: () => CustomerGroupMetadata
});
var init_customer_group_metadata = __esm({
  "src/routes/customer-groups/customer-group-metadata/index.ts"() {
    "use strict";
    init_customer_metadata3();
  }
});

// src/routes/reservations/reservation-list/components/reservation-list-table/reservation-actions.tsx
var import_icons114, import_ui252, import_react_i18next274, import_jsx_runtime384, ReservationActions;
var init_reservation_actions = __esm({
  "src/routes/reservations/reservation-list/components/reservation-list-table/reservation-actions.tsx"() {
    "use strict";
    import_icons114 = require("@medusajs/icons");
    init_action_menu2();
    init_reservations();
    import_ui252 = require("@medusajs/ui");
    import_react_i18next274 = require("react-i18next");
    import_jsx_runtime384 = require("react/jsx-runtime");
    ReservationActions = ({
      reservation
    }) => {
      const { t: t4 } = (0, import_react_i18next274.useTranslation)();
      const prompt = (0, import_ui252.usePrompt)();
      const { mutateAsync } = useDeleteReservationItem(reservation.id);
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("reservations.deleteWarning"),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync();
      };
      return /* @__PURE__ */ (0, import_jsx_runtime384.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  label: t4("actions.edit"),
                  to: `${reservation.id}/edit`,
                  icon: /* @__PURE__ */ (0, import_jsx_runtime384.jsx)(import_icons114.PencilSquare, {})
                }
              ]
            },
            {
              actions: [
                {
                  label: t4("actions.delete"),
                  onClick: handleDelete,
                  icon: /* @__PURE__ */ (0, import_jsx_runtime384.jsx)(import_icons114.Trash, {})
                }
              ]
            }
          ]
        }
      );
    };
  }
});

// src/routes/reservations/reservation-list/components/reservation-list-table/use-reservation-table-columns.tsx
var import_react_table47, import_react197, import_react_i18next275, import_jsx_runtime385, columnHelper47, useReservationTableColumns;
var init_use_reservation_table_columns = __esm({
  "src/routes/reservations/reservation-list/components/reservation-list-table/use-reservation-table-columns.tsx"() {
    "use strict";
    import_react_table47 = require("@tanstack/react-table");
    import_react197 = require("react");
    import_react_i18next275 = require("react-i18next");
    init_date_cell2();
    init_placeholder_cell2();
    init_reservation_actions();
    import_jsx_runtime385 = require("react/jsx-runtime");
    columnHelper47 = (0, import_react_table47.createColumnHelper)();
    useReservationTableColumns = () => {
      const { t: t4 } = (0, import_react_i18next275.useTranslation)();
      return (0, import_react197.useMemo)(
        () => [
          columnHelper47.accessor("inventory_item", {
            header: t4("fields.sku"),
            cell: ({ getValue: getValue2 }) => {
              const inventoryItem = getValue2();
              if (!inventoryItem || !inventoryItem.sku) {
                return /* @__PURE__ */ (0, import_jsx_runtime385.jsx)(PlaceholderCell, {});
              }
              return /* @__PURE__ */ (0, import_jsx_runtime385.jsx)("div", { className: "flex size-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime385.jsx)("span", { className: "truncate", children: inventoryItem.sku }) });
            }
          }),
          /**
           * TEMP: hide this column until a link is added
           */
          // columnHelper.accessor("line_item", {
          //   header: t("fields.order"),
          //   cell: ({ getValue }) => {
          //     const inventoryItem = getValue()
          //
          //     if (!inventoryItem || !inventoryItem.order?.display_id) {
          //       return <PlaceholderCell />
          //     }
          //
          //     return (
          //       <div className="flex size-full items-center overflow-hidden">
          //         <LinkButton to={`/orders/${inventoryItem.order.id}`}>
          //           <span className="truncate">
          //             #{inventoryItem.order.display_id}
          //           </span>
          //         </LinkButton>
          //       </div>
          //     )
          //   },
          // }),
          columnHelper47.accessor("description", {
            header: t4("fields.description"),
            cell: ({ getValue: getValue2 }) => {
              const description = getValue2();
              if (!description) {
                return /* @__PURE__ */ (0, import_jsx_runtime385.jsx)(PlaceholderCell, {});
              }
              return /* @__PURE__ */ (0, import_jsx_runtime385.jsx)("div", { className: "flex size-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime385.jsx)("span", { className: "truncate", children: description }) });
            }
          }),
          columnHelper47.accessor("created_at", {
            header: t4("fields.created"),
            cell: ({ getValue: getValue2 }) => {
              const created = getValue2();
              return /* @__PURE__ */ (0, import_jsx_runtime385.jsx)(DateCell, { date: created });
            }
          }),
          columnHelper47.accessor("quantity", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime385.jsx)("div", { className: "flex size-full items-center justify-end overflow-hidden text-right", children: /* @__PURE__ */ (0, import_jsx_runtime385.jsx)("span", { className: "truncate", children: t4("fields.quantity") }) }),
            cell: ({ getValue: getValue2 }) => {
              const quantity = getValue2();
              return /* @__PURE__ */ (0, import_jsx_runtime385.jsx)("div", { className: "flex size-full items-center justify-end overflow-hidden text-right", children: /* @__PURE__ */ (0, import_jsx_runtime385.jsx)("span", { className: "truncate", children: quantity }) });
            }
          }),
          columnHelper47.display({
            id: "actions",
            cell: ({ row }) => {
              const reservation = row.original;
              return /* @__PURE__ */ (0, import_jsx_runtime385.jsx)(ReservationActions, { reservation });
            }
          })
        ],
        [t4]
      );
    };
  }
});

// src/routes/reservations/reservation-list/components/reservation-list-table/use-reservation-table-filters.tsx
var import_react_i18next276, useReservationTableFilters;
var init_use_reservation_table_filters = __esm({
  "src/routes/reservations/reservation-list/components/reservation-list-table/use-reservation-table-filters.tsx"() {
    "use strict";
    init_stock_locations();
    import_react_i18next276 = require("react-i18next");
    useReservationTableFilters = () => {
      const { t: t4 } = (0, import_react_i18next276.useTranslation)();
      const { stock_locations } = useStockLocations({
        limit: 1e3
      });
      const filters = [];
      if (stock_locations) {
        const stockLocationFilter = {
          type: "select",
          options: stock_locations.map((s) => ({
            label: s.name,
            value: s.id
          })),
          key: "location_id",
          searchable: true,
          label: t4("fields.location")
        };
        filters.push(stockLocationFilter);
      }
      filters.push({
        type: "date",
        key: "created_at",
        label: t4("fields.createdAt")
      });
      return filters;
    };
  }
});

// src/routes/reservations/reservation-list/components/reservation-list-table/use-reservation-table-query.tsx
var useReservationTableQuery;
var init_use_reservation_table_query = __esm({
  "src/routes/reservations/reservation-list/components/reservation-list-table/use-reservation-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useReservationTableQuery = ({
      pageSize = 20,
      prefix
    }) => {
      const raw = useQueryParams(
        ["location_id", "offset", "created_at", "quantity", "updated_at", "order"],
        prefix
      );
      const { location_id, created_at, updated_at, quantity, offset: offset4, ...rest } = raw;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? parseInt(offset4) : void 0,
        location_id,
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0,
        ...rest
      };
      return {
        searchParams,
        raw
      };
    };
  }
});

// src/routes/reservations/reservation-list/components/reservation-list-table/reservation-list-table.tsx
var import_ui253, import_react_router_dom123, import_react_i18next277, import_jsx_runtime386, PAGE_SIZE35, ReservationListTable;
var init_reservation_list_table = __esm({
  "src/routes/reservations/reservation-list/components/reservation-list-table/reservation-list-table.tsx"() {
    "use strict";
    import_ui253 = require("@medusajs/ui");
    init_data_table2();
    import_react_router_dom123 = require("react-router-dom");
    init_use_data_table();
    init_reservations();
    init_use_reservation_table_columns();
    init_use_reservation_table_filters();
    init_use_reservation_table_query();
    import_react_i18next277 = require("react-i18next");
    import_jsx_runtime386 = require("react/jsx-runtime");
    PAGE_SIZE35 = 20;
    ReservationListTable = () => {
      const { t: t4 } = (0, import_react_i18next277.useTranslation)();
      const { searchParams } = useReservationTableQuery({
        pageSize: PAGE_SIZE35
      });
      const { reservations, count: count3, isPending, isError, error } = useReservationItems({
        ...searchParams
      });
      const filters = useReservationTableFilters();
      const columns = useReservationTableColumns();
      const { table } = useDataTable({
        data: reservations || [],
        columns,
        count: count3,
        enablePagination: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE35
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime386.jsxs)(import_ui253.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime386.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime386.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime386.jsx)(import_ui253.Heading, { children: t4("reservations.domain") }),
            /* @__PURE__ */ (0, import_jsx_runtime386.jsx)(import_ui253.Text, { className: "text-ui-fg-subtle", size: "small", children: t4("reservations.subtitle") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime386.jsx)(import_ui253.Button, { variant: "secondary", size: "small", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime386.jsx)(import_react_router_dom123.Link, { to: "create", children: t4("actions.create") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime386.jsx)(
          DataTable,
          {
            table,
            columns,
            pageSize: PAGE_SIZE35,
            count: count3,
            isLoading: isPending,
            filters,
            pagination: true,
            navigateTo: (row) => row.id,
            search: false
          }
        )
      ] });
    };
  }
});

// src/routes/reservations/reservation-list/components/reservation-list-table/index.ts
var init_reservation_list_table2 = __esm({
  "src/routes/reservations/reservation-list/components/reservation-list-table/index.ts"() {
    "use strict";
    init_reservation_list_table();
  }
});

// src/routes/reservations/reservation-list/reservation-list.tsx
var import_jsx_runtime387, ReservationList;
var init_reservation_list = __esm({
  "src/routes/reservations/reservation-list/reservation-list.tsx"() {
    "use strict";
    init_pages();
    init_extensions();
    init_reservation_list_table2();
    import_jsx_runtime387 = require("react/jsx-runtime");
    ReservationList = () => {
      const { getWidgets } = useDashboardExtension();
      return /* @__PURE__ */ (0, import_jsx_runtime387.jsx)(
        SingleColumnPage,
        {
          widgets: {
            before: getWidgets("reservation.list.before"),
            after: getWidgets("reservation.list.after")
          },
          children: /* @__PURE__ */ (0, import_jsx_runtime387.jsx)(ReservationListTable, {})
        }
      );
    };
  }
});

// src/routes/reservations/reservation-list/index.ts
var reservation_list_exports = {};
__export(reservation_list_exports, {
  Component: () => ReservationList
});
var init_reservation_list2 = __esm({
  "src/routes/reservations/reservation-list/index.ts"() {
    "use strict";
    init_reservation_list();
  }
});

// src/routes/reservations/reservation-create/components/reservation-create-from/reservation-create-from.tsx
var zod23, import_ui254, import_zod75, import_react198, import_react_hook_form76, import_react_i18next278, import_jsx_runtime388, CreateReservationSchema, AttributeGridRow, ReservationCreateForm;
var init_reservation_create_from = __esm({
  "src/routes/reservations/reservation-create/components/reservation-create-from/reservation-create-from.tsx"() {
    "use strict";
    zod23 = __toESM(require("zod"));
    import_ui254 = require("@medusajs/ui");
    init_modals();
    import_zod75 = require("@hookform/resolvers/zod");
    import_react198 = __toESM(require("react"));
    import_react_hook_form76 = require("react-hook-form");
    import_react_i18next278 = require("react-i18next");
    init_form2();
    init_combobox2();
    init_keybound_form2();
    init_inventory();
    init_reservations();
    init_stock_locations();
    import_jsx_runtime388 = require("react/jsx-runtime");
    CreateReservationSchema = zod23.object({
      inventory_item_id: zod23.string().min(1),
      location_id: zod23.string().min(1),
      quantity: zod23.number().min(1),
      description: zod23.string().optional()
    });
    AttributeGridRow = ({
      title,
      value
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime388.jsxs)("div", { className: "grid grid-cols-2 divide-x", children: [
        /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(import_ui254.Text, { className: "px-2 py-1.5", size: "small", leading: "compact", children: title }),
        /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(import_ui254.Text, { className: "px-2 py-1.5", size: "small", leading: "compact", children: value })
      ] });
    };
    ReservationCreateForm = (props) => {
      const { t: t4 } = (0, import_react_i18next278.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const [inventorySearch, setInventorySearch] = import_react198.default.useState(
        null
      );
      const form = (0, import_react_hook_form76.useForm)({
        defaultValues: {
          inventory_item_id: props.inventoryItemId || "",
          location_id: "",
          quantity: 0,
          description: ""
        },
        resolver: (0, import_zod75.zodResolver)(CreateReservationSchema)
      });
      const { inventory_items } = useInventoryItems({
        q: inventorySearch
      });
      const inventoryItemId = form.watch("inventory_item_id");
      const selectedInventoryItem = inventory_items?.find(
        (it) => it.id === inventoryItemId
      );
      const locationId = form.watch("location_id");
      const selectedLocationLevel = selectedInventoryItem?.location_levels?.find(
        (it) => it.location_id === locationId
      );
      const quantity = form.watch("quantity");
      const { stock_locations } = useStockLocations(
        {
          id: selectedInventoryItem?.location_levels?.map(
            (level) => level.location_id
          ) ?? []
        },
        {
          enabled: !!selectedInventoryItem
        }
      );
      const { mutateAsync, isPending } = useCreateReservationItem();
      const handleSubmit = form.handleSubmit(async (data) => {
        const min2 = 1;
        const max2 = selectedLocationLevel?.available_quantity ? selectedLocationLevel.available_quantity : 0;
        if (!selectedLocationLevel?.available_quantity) {
          form.setError("quantity", {
            type: "manual",
            message: t4("inventory.reservation.errors.noAvaliableQuantity")
          });
          return;
        }
        if (data.quantity < min2 || data.quantity > max2) {
          form.setError("quantity", {
            type: "manual",
            message: t4("inventory.reservation.errors.quantityOutOfRange", {
              max: max2
            })
          });
          return;
        }
        await mutateAsync(data, {
          onSuccess: ({ reservation }) => {
            import_ui254.toast.success(t4("inventory.reservation.successToast"));
            handleSuccess(
              props.inventoryItemId ? `/inventory/${props.inventoryItemId}` : `/reservations/${reservation.id}`
            );
          },
          onError: (e) => {
            import_ui254.toast.error(e.message);
          }
        });
      });
      return /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime388.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex size-full flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(RouteFocusModal.Header, {}),
            /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(RouteFocusModal.Body, { className: "flex flex-1 flex-col items-center overflow-auto py-16", children: /* @__PURE__ */ (0, import_jsx_runtime388.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8", children: [
              /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(import_ui254.Heading, { children: t4("inventory.reservation.create") }),
              /* @__PURE__ */ (0, import_jsx_runtime388.jsxs)("div", { className: "grid grid-cols-2 gap-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "inventory_item_id",
                    render: ({ field: { value, onChange, ...field } }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime388.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(Form.Label, { children: t4("inventory.reservation.itemToReserve") }),
                        /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(
                          Combobox,
                          {
                            onSearchValueChange: (value2) => setInventorySearch(value2),
                            value,
                            onChange: (v) => {
                              onChange(v);
                            },
                            ...field,
                            disabled: !!props.inventoryItemId,
                            options: (inventory_items ?? []).map(
                              (inventoryItem) => ({
                                label: inventoryItem.title ?? inventoryItem.sku,
                                value: inventoryItem.id
                              })
                            )
                          }
                        ) })
                      ] });
                    }
                  },
                  "inventory_item_id"
                ),
                /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "location_id",
                    render: ({ field: { value, onChange, ...field } }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime388.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(Form.Label, { children: t4("fields.location") }),
                        /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(
                          Combobox,
                          {
                            value,
                            onChange: (v) => {
                              onChange(v);
                            },
                            ...field,
                            disabled: !inventoryItemId,
                            options: (stock_locations ?? []).map(
                              (stockLocation) => ({
                                label: stockLocation.name,
                                value: stockLocation.id
                              })
                            )
                          }
                        ) })
                      ] });
                    }
                  },
                  "location_id"
                )
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime388.jsxs)("div", { className: "text-ui-fg-subtle shadow-elevation-card-rest grid grid-rows-4 divide-y rounded-lg", children: [
                /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(
                  AttributeGridRow,
                  {
                    title: t4("fields.title"),
                    value: selectedInventoryItem?.title ?? selectedInventoryItem?.sku ?? "-"
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(
                  AttributeGridRow,
                  {
                    title: t4("fields.sku"),
                    value: selectedInventoryItem?.sku ?? "-"
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(
                  AttributeGridRow,
                  {
                    title: t4("fields.inStock"),
                    value: selectedLocationLevel?.stocked_quantity ?? "-"
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(
                  AttributeGridRow,
                  {
                    title: t4("inventory.available"),
                    value: selectedLocationLevel?.available_quantity ? selectedLocationLevel.available_quantity - (quantity || 0) : "-"
                  }
                )
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime388.jsx)("div", { className: "w-full lg:w-1/2", children: /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "quantity",
                  render: ({ field: { onChange, value, ...field } }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime388.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(Form.Label, { children: t4("fields.quantity") }),
                      /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(
                        import_ui254.Input,
                        {
                          type: "number",
                          placeholder: t4(
                            "inventory.reservation.quantityPlaceholder"
                          ),
                          value: value || "",
                          onChange: (e) => {
                            const value2 = e.target.value;
                            if (value2 === "") {
                              onChange(null);
                            } else {
                              onChange(parseFloat(value2));
                            }
                          },
                          ...field,
                          disabled: !inventoryItemId || !locationId
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ) }),
              /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "description",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime388.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(Form.Label, { optional: true, children: t4("fields.description") }),
                      /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(
                        import_ui254.Textarea,
                        {
                          ...field,
                          disabled: !inventoryItemId || !locationId,
                          placeholder: t4(
                            "inventory.reservation.descriptionPlaceholder"
                          )
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              )
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime388.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(import_ui254.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime388.jsx)(
                import_ui254.Button,
                {
                  type: "submit",
                  variant: "primary",
                  size: "small",
                  isLoading: isPending,
                  children: t4("actions.create")
                }
              )
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/reservations/reservation-create/components/reservation-create-from/index.ts
var init_reservation_create_from2 = __esm({
  "src/routes/reservations/reservation-create/components/reservation-create-from/index.ts"() {
    "use strict";
    init_reservation_create_from();
  }
});

// src/routes/reservations/reservation-create/reservation-create.tsx
var import_react_router_dom124, import_jsx_runtime389, ReservationCreate;
var init_reservation_create = __esm({
  "src/routes/reservations/reservation-create/reservation-create.tsx"() {
    "use strict";
    import_react_router_dom124 = require("react-router-dom");
    init_modals();
    init_reservation_create_from2();
    import_jsx_runtime389 = require("react/jsx-runtime");
    ReservationCreate = () => {
      const [params2] = (0, import_react_router_dom124.useSearchParams)();
      const inventoryItemId = params2.get("item_id");
      return /* @__PURE__ */ (0, import_jsx_runtime389.jsx)(RouteFocusModal, { children: /* @__PURE__ */ (0, import_jsx_runtime389.jsx)(ReservationCreateForm, { inventoryItemId }) });
    };
  }
});

// src/routes/reservations/reservation-create/index.ts
var reservation_create_exports = {};
__export(reservation_create_exports, {
  Component: () => ReservationCreate
});
var init_reservation_create2 = __esm({
  "src/routes/reservations/reservation-create/index.ts"() {
    "use strict";
    init_reservation_create();
  }
});

// src/routes/reservations/reservation-detail/loader.ts
var reservationDetailQuery, reservationItemLoader;
var init_loader15 = __esm({
  "src/routes/reservations/reservation-detail/loader.ts"() {
    "use strict";
    init_reservations();
    init_client2();
    init_query_client();
    reservationDetailQuery = (id2) => ({
      queryKey: reservationItemsQueryKeys.detail(id2),
      queryFn: async () => sdk.admin.reservation.retrieve(id2)
    });
    reservationItemLoader = async ({ params: params2 }) => {
      const id2 = params2.id;
      const query = reservationDetailQuery(id2);
      return queryClient.getQueryData(
        query.queryKey
      ) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/routes/inventory/inventory-detail/components/inventory-item-general-section.tsx
var import_ui255, import_icons115, import_react_i18next279, import_jsx_runtime390, InventoryItemGeneralSection, getQuantityFormat;
var init_inventory_item_general_section = __esm({
  "src/routes/inventory/inventory-detail/components/inventory-item-general-section.tsx"() {
    "use strict";
    import_ui255 = require("@medusajs/ui");
    import_icons115 = require("@medusajs/icons");
    import_react_i18next279 = require("react-i18next");
    init_action_menu2();
    init_section();
    import_jsx_runtime390 = require("react/jsx-runtime");
    InventoryItemGeneralSection = ({
      inventoryItem
    }) => {
      const { t: t4 } = (0, import_react_i18next279.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime390.jsxs)(import_ui255.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime390.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime390.jsxs)(import_ui255.Heading, { children: [
            inventoryItem.title ?? inventoryItem.sku,
            " ",
            t4("fields.details")
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime390.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      icon: /* @__PURE__ */ (0, import_jsx_runtime390.jsx)(import_icons115.PencilSquare, {}),
                      label: t4("actions.edit"),
                      to: "edit"
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime390.jsx)(SectionRow, { title: t4("fields.sku"), value: inventoryItem.sku ?? "-" }),
        /* @__PURE__ */ (0, import_jsx_runtime390.jsx)(
          SectionRow,
          {
            title: t4("fields.inStock"),
            value: getQuantityFormat(
              inventoryItem.stocked_quantity,
              inventoryItem.location_levels?.length
            )
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime390.jsx)(
          SectionRow,
          {
            title: t4("inventory.reserved"),
            value: getQuantityFormat(
              inventoryItem.reserved_quantity,
              inventoryItem.location_levels?.length
            )
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime390.jsx)(
          SectionRow,
          {
            title: t4("inventory.available"),
            value: getQuantityFormat(
              inventoryItem.stocked_quantity - inventoryItem.reserved_quantity,
              inventoryItem.location_levels?.length
            )
          }
        )
      ] });
    };
    getQuantityFormat = (quantity, locations) => {
      if (quantity !== void 0 && !isNaN(quantity)) {
        return `${quantity} across ${locations ?? "-"} locations`;
      }
      return "-";
    };
  }
});

// src/routes/reservations/reservation-detail/components/reservation-general-section/reservation-general-section.tsx
var import_ui256, import_icons116, import_react_i18next280, import_jsx_runtime391, ReservationGeneralSection;
var init_reservation_general_section = __esm({
  "src/routes/reservations/reservation-detail/components/reservation-general-section/reservation-general-section.tsx"() {
    "use strict";
    import_ui256 = require("@medusajs/ui");
    init_action_menu2();
    import_icons116 = require("@medusajs/icons");
    init_section();
    init_inventory();
    init_stock_locations();
    import_react_i18next280 = require("react-i18next");
    import_jsx_runtime391 = require("react/jsx-runtime");
    ReservationGeneralSection = ({
      reservation
    }) => {
      const { t: t4 } = (0, import_react_i18next280.useTranslation)();
      const { inventory_item: inventoryItem, isPending: isLoadingInventoryItem } = useInventoryItem(reservation.inventory_item_id);
      const { stock_location: location, isPending: isLoadingLocation } = useStockLocation(reservation.location_id);
      if (isLoadingInventoryItem || !inventoryItem || isLoadingLocation || !location) {
        return /* @__PURE__ */ (0, import_jsx_runtime391.jsx)("div", { children: "Loading..." });
      }
      const locationLevel = inventoryItem.location_levels.find(
        (l) => l.location_id === reservation.location_id
      );
      return /* @__PURE__ */ (0, import_jsx_runtime391.jsxs)(import_ui256.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime391.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime391.jsx)(import_ui256.Heading, { children: t4("inventory.reservation.header", {
            itemName: inventoryItem.title ?? inventoryItem.sku
          }) }),
          /* @__PURE__ */ (0, import_jsx_runtime391.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      icon: /* @__PURE__ */ (0, import_jsx_runtime391.jsx)(import_icons116.PencilSquare, {}),
                      label: t4("actions.edit"),
                      to: `edit`
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime391.jsx)(
          SectionRow,
          {
            title: t4("inventory.reservation.lineItemId"),
            value: reservation.line_item_id
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime391.jsx)(
          SectionRow,
          {
            title: t4("inventory.reservation.description"),
            value: reservation.description
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime391.jsx)(
          SectionRow,
          {
            title: t4("inventory.reservation.location"),
            value: location?.name
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime391.jsx)(
          SectionRow,
          {
            title: t4("inventory.reservation.inStockAtLocation"),
            value: locationLevel?.stocked_quantity
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime391.jsx)(
          SectionRow,
          {
            title: t4("inventory.reservation.availableAtLocation"),
            value: locationLevel?.available_quantity
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime391.jsx)(
          SectionRow,
          {
            title: t4("inventory.reservation.reservedAtLocation"),
            value: locationLevel?.reserved_quantity
          }
        )
      ] });
    };
  }
});

// src/routes/reservations/reservation-detail/components/reservation-general-section/index.ts
var init_reservation_general_section2 = __esm({
  "src/routes/reservations/reservation-detail/components/reservation-general-section/index.ts"() {
    "use strict";
    init_reservation_general_section();
  }
});

// src/routes/reservations/reservation-detail/reservation-detail.tsx
var import_react_router_dom125, import_jsx_runtime392, ReservationDetail;
var init_reservation_detail = __esm({
  "src/routes/reservations/reservation-detail/reservation-detail.tsx"() {
    "use strict";
    import_react_router_dom125 = require("react-router-dom");
    init_skeleton2();
    init_pages();
    init_extensions();
    init_reservations();
    init_inventory_item_general_section();
    init_reservation_general_section2();
    init_api();
    import_jsx_runtime392 = require("react/jsx-runtime");
    ReservationDetail = () => {
      const { id: id2 } = (0, import_react_router_dom125.useParams)();
      const initialData = (0, import_react_router_dom125.useLoaderData)();
      const { reservation, isLoading, isError, error } = useReservationItem(
        id2,
        void 0,
        {
          initialData
        }
      );
      const { inventory_item } = useInventoryItem(
        reservation?.inventory_item?.id,
        void 0,
        { enabled: !!reservation?.inventory_item?.id }
      );
      const { getWidgets } = useDashboardExtension();
      if (isLoading || !reservation) {
        return /* @__PURE__ */ (0, import_jsx_runtime392.jsx)(
          TwoColumnPageSkeleton,
          {
            mainSections: 1,
            sidebarSections: 1,
            showJSON: true,
            showMetadata: true
          }
        );
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime392.jsxs)(
        TwoColumnPage,
        {
          widgets: {
            before: getWidgets("reservation.details.before"),
            after: getWidgets("reservation.details.after"),
            sideBefore: getWidgets("reservation.details.side.before"),
            sideAfter: getWidgets("reservation.details.side.after")
          },
          data: reservation,
          showJSON: true,
          showMetadata: true,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime392.jsx)(TwoColumnPage.Main, { children: /* @__PURE__ */ (0, import_jsx_runtime392.jsx)(ReservationGeneralSection, { reservation }) }),
            /* @__PURE__ */ (0, import_jsx_runtime392.jsx)(TwoColumnPage.Sidebar, { children: inventory_item && /* @__PURE__ */ (0, import_jsx_runtime392.jsx)(InventoryItemGeneralSection, { inventoryItem: inventory_item }) })
          ]
        }
      );
    };
  }
});

// src/routes/reservations/reservation-detail/index.ts
var reservation_detail_exports = {};
__export(reservation_detail_exports, {
  Component: () => ReservationDetail,
  loader: () => reservationItemLoader
});
var init_reservation_detail2 = __esm({
  "src/routes/reservations/reservation-detail/index.ts"() {
    "use strict";
    init_loader15();
    init_reservation_detail();
  }
});

// src/routes/reservations/reservation-detail/components/edit-reservation/components/edit-reservation-form.tsx
var import_ui257, import_zod76, import_react_hook_form77, import_react_i18next281, import_zod77, import_jsx_runtime393, EditReservationSchema, AttributeGridRow2, getDefaultValues3, EditReservationForm;
var init_edit_reservation_form = __esm({
  "src/routes/reservations/reservation-detail/components/edit-reservation/components/edit-reservation-form.tsx"() {
    "use strict";
    import_ui257 = require("@medusajs/ui");
    init_modals();
    import_zod76 = require("@hookform/resolvers/zod");
    import_react_hook_form77 = require("react-hook-form");
    import_react_i18next281 = require("react-i18next");
    import_zod77 = require("zod");
    init_form2();
    init_keybound_form2();
    init_reservations();
    import_jsx_runtime393 = require("react/jsx-runtime");
    EditReservationSchema = import_zod77.z.object({
      location_id: import_zod77.z.string(),
      description: import_zod77.z.string().optional(),
      quantity: import_zod77.z.number().min(1)
    });
    AttributeGridRow2 = ({
      title,
      value
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime393.jsxs)("div", { className: "grid grid-cols-2 divide-x", children: [
        /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(import_ui257.Text, { className: "px-2 py-1.5", size: "small", leading: "compact", children: title }),
        /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(import_ui257.Text, { className: "px-2 py-1.5", size: "small", leading: "compact", children: value })
      ] });
    };
    getDefaultValues3 = (reservation) => {
      return {
        quantity: reservation.quantity,
        location_id: reservation.location_id,
        description: reservation.description ?? void 0
      };
    };
    EditReservationForm = ({
      reservation,
      item,
      locations
    }) => {
      const { t: t4 } = (0, import_react_i18next281.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form77.useForm)({
        defaultValues: getDefaultValues3(reservation),
        resolver: (0, import_zod76.zodResolver)(EditReservationSchema)
      });
      const { mutateAsync } = useUpdateReservationItem(reservation.id);
      const handleSubmit = form.handleSubmit(async (values) => {
        mutateAsync(values, {
          onSuccess: () => {
            import_ui257.toast.success(t4("inventory.reservation.updateSuccessToast"));
            handleSuccess();
          },
          onError: (e) => {
            import_ui257.toast.error(e.message);
          }
        });
      });
      const reservedQuantity = form.watch("quantity");
      const locationId = form.watch("location_id");
      const level = item.location_levels.find(
        (level2) => level2.location_id === locationId
      );
      return /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime393.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex flex-1 flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime393.jsxs)(RouteDrawer.Body, { className: "flex flex-1 flex-col gap-y-8 overflow-auto", children: [
              /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "location_id",
                  render: ({ field: { onChange, value, ref, ...field } }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime393.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(Form.Label, { children: t4("inventory.reservation.location") }),
                      /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime393.jsxs)(
                        import_ui257.Select,
                        {
                          value,
                          onValueChange: (v) => {
                            onChange(v);
                          },
                          ...field,
                          children: [
                            /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(import_ui257.Select.Trigger, { ref, children: /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(import_ui257.Select.Value, {}) }),
                            /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(import_ui257.Select.Content, { children: (locations || []).map((r) => /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(import_ui257.Select.Item, { value: r.id, children: r.name }, r.id)) })
                          ]
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime393.jsxs)("div", { className: "text-ui-fg-subtle shadow-elevation-card-rest grid grid-rows-4 divide-y rounded-lg border", children: [
                /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(
                  AttributeGridRow2,
                  {
                    title: t4("fields.title"),
                    value: item.title ?? item.sku
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(AttributeGridRow2, { title: t4("fields.sku"), value: item.sku }),
                /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(
                  AttributeGridRow2,
                  {
                    title: t4("fields.inStock"),
                    value: level.stocked_quantity
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(
                  AttributeGridRow2,
                  {
                    title: t4("inventory.available"),
                    value: level.stocked_quantity - (level.reserved_quantity - reservation.quantity) - reservedQuantity
                  }
                )
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "quantity",
                  render: ({ field: { onChange, value, ...field } }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime393.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(Form.Label, { children: t4("inventory.reservation.reservedAmount") }),
                      /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(
                        import_ui257.Input,
                        {
                          type: "number",
                          min: 0,
                          max: (level.available_quantity || 0) + (reservation.quantity || 0),
                          value: value || "",
                          onChange: (e) => {
                            const value2 = e.target.value;
                            if (value2 === "") {
                              onChange(null);
                            } else {
                              onChange(parseFloat(value2));
                            }
                          },
                          ...field
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "description",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime393.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(Form.Label, { optional: true, children: t4("fields.description") }),
                      /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(import_ui257.Textarea, { ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              )
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime393.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(import_ui257.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime393.jsx)(import_ui257.Button, { type: "submit", size: "small", isLoading: false, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/reservations/reservation-detail/components/edit-reservation/edit-reservation-modal.tsx
var import_ui258, import_react_i18next282, import_react_router_dom126, import_jsx_runtime394, ReservationEdit;
var init_edit_reservation_modal = __esm({
  "src/routes/reservations/reservation-detail/components/edit-reservation/edit-reservation-modal.tsx"() {
    "use strict";
    import_ui258 = require("@medusajs/ui");
    import_react_i18next282 = require("react-i18next");
    import_react_router_dom126 = require("react-router-dom");
    init_modals();
    init_inventory();
    init_reservations();
    init_stock_locations();
    init_edit_reservation_form();
    import_jsx_runtime394 = require("react/jsx-runtime");
    ReservationEdit = () => {
      const { id: id2 } = (0, import_react_router_dom126.useParams)();
      const { t: t4 } = (0, import_react_i18next282.useTranslation)();
      const { reservation, isPending, isError, error } = useReservationItem(id2);
      const { inventory_item: inventoryItem } = useInventoryItem(
        reservation?.inventory_item_id,
        {
          enabled: !!reservation
        }
      );
      const { stock_locations } = useStockLocations(
        {
          id: inventoryItem?.location_levels?.map(
            (l) => l.location_id
          )
        },
        {
          enabled: !!inventoryItem?.location_levels
        }
      );
      const ready = !isPending && reservation && inventoryItem && stock_locations;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime394.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime394.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime394.jsx)(import_ui258.Heading, { children: t4("inventory.reservation.editItemDetails") }) }),
        ready && /* @__PURE__ */ (0, import_jsx_runtime394.jsx)(
          EditReservationForm,
          {
            locations: stock_locations,
            reservation,
            item: inventoryItem
          }
        )
      ] });
    };
  }
});

// src/routes/reservations/reservation-detail/components/edit-reservation/index.ts
var edit_reservation_exports = {};
__export(edit_reservation_exports, {
  Component: () => ReservationEdit
});
var init_edit_reservation = __esm({
  "src/routes/reservations/reservation-detail/components/edit-reservation/index.ts"() {
    "use strict";
    init_edit_reservation_modal();
  }
});

// src/routes/reservations/reservation-metadata/reservation-metadata.tsx
var import_react_router_dom127, import_jsx_runtime395, ReservationMetadata;
var init_reservation_metadata = __esm({
  "src/routes/reservations/reservation-metadata/reservation-metadata.tsx"() {
    "use strict";
    import_react_router_dom127 = require("react-router-dom");
    init_api();
    init_metadata_form2();
    init_modals();
    import_jsx_runtime395 = require("react/jsx-runtime");
    ReservationMetadata = () => {
      const { id: id2 } = (0, import_react_router_dom127.useParams)();
      const { reservation, isPending, isError, error } = useReservationItem(id2);
      const { mutateAsync, isPending: isMutating } = useUpdateReservationItem(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime395.jsx)(RouteDrawer, { children: /* @__PURE__ */ (0, import_jsx_runtime395.jsx)(
        MetadataForm,
        {
          isPending,
          isMutating,
          hook: mutateAsync,
          metadata: reservation?.metadata
        }
      ) });
    };
  }
});

// src/routes/reservations/reservation-metadata/index.ts
var reservation_metadata_exports = {};
__export(reservation_metadata_exports, {
  Component: () => ReservationMetadata
});
var init_reservation_metadata2 = __esm({
  "src/routes/reservations/reservation-metadata/index.ts"() {
    "use strict";
    init_reservation_metadata();
  }
});

// src/routes/inventory/inventory-list/components/inventory-actions.tsx
var import_icons117, import_ui259, import_react_i18next283, import_jsx_runtime396, InventoryActions2;
var init_inventory_actions2 = __esm({
  "src/routes/inventory/inventory-list/components/inventory-actions.tsx"() {
    "use strict";
    import_icons117 = require("@medusajs/icons");
    init_action_menu2();
    init_inventory();
    import_ui259 = require("@medusajs/ui");
    import_react_i18next283 = require("react-i18next");
    import_jsx_runtime396 = require("react/jsx-runtime");
    InventoryActions2 = ({ item }) => {
      const { t: t4 } = (0, import_react_i18next283.useTranslation)();
      const prompt = (0, import_ui259.usePrompt)();
      const { mutateAsync } = useDeleteInventoryItem(item.id);
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("inventory.deleteWarning"),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync();
      };
      return /* @__PURE__ */ (0, import_jsx_runtime396.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime396.jsx)(import_icons117.PencilSquare, {}),
                  label: t4("actions.edit"),
                  to: `${item.id}/edit`
                }
              ]
            },
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime396.jsx)(import_icons117.Trash, {}),
                  label: t4("actions.delete"),
                  onClick: handleDelete
                }
              ]
            }
          ]
        }
      );
    };
  }
});

// src/routes/inventory/inventory-list/components/use-inventory-table-columns.tsx
var import_react_table48, import_react199, import_react_i18next284, import_jsx_runtime397, columnHelper48, useInventoryTableColumns2;
var init_use_inventory_table_columns2 = __esm({
  "src/routes/inventory/inventory-list/components/use-inventory-table-columns.tsx"() {
    "use strict";
    init_inventory_actions2();
    init_placeholder_cell2();
    import_react_table48 = require("@tanstack/react-table");
    import_react199 = require("react");
    import_react_i18next284 = require("react-i18next");
    import_jsx_runtime397 = require("react/jsx-runtime");
    columnHelper48 = (0, import_react_table48.createColumnHelper)();
    useInventoryTableColumns2 = () => {
      const { t: t4 } = (0, import_react_i18next284.useTranslation)();
      return (0, import_react199.useMemo)(
        () => [
          columnHelper48.accessor("title", {
            header: t4("fields.title"),
            cell: ({ getValue: getValue2 }) => {
              const title = getValue2();
              if (!title) {
                return /* @__PURE__ */ (0, import_jsx_runtime397.jsx)(PlaceholderCell, {});
              }
              return /* @__PURE__ */ (0, import_jsx_runtime397.jsx)("div", { className: "flex size-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime397.jsx)("span", { className: "truncate", children: title }) });
            }
          }),
          columnHelper48.accessor("sku", {
            header: t4("fields.sku"),
            cell: ({ getValue: getValue2 }) => {
              const sku = getValue2();
              if (!sku) {
                return /* @__PURE__ */ (0, import_jsx_runtime397.jsx)(PlaceholderCell, {});
              }
              return /* @__PURE__ */ (0, import_jsx_runtime397.jsx)("div", { className: "flex size-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime397.jsx)("span", { className: "truncate", children: sku }) });
            }
          }),
          columnHelper48.accessor("reserved_quantity", {
            header: t4("inventory.reserved"),
            cell: ({ getValue: getValue2 }) => {
              const quantity = getValue2();
              if (Number.isNaN(quantity)) {
                return /* @__PURE__ */ (0, import_jsx_runtime397.jsx)(PlaceholderCell, {});
              }
              return /* @__PURE__ */ (0, import_jsx_runtime397.jsx)("div", { className: "flex size-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime397.jsx)("span", { className: "truncate", children: quantity }) });
            }
          }),
          columnHelper48.accessor("stocked_quantity", {
            header: t4("fields.inStock"),
            cell: ({ getValue: getValue2 }) => {
              const quantity = getValue2();
              if (Number.isNaN(quantity)) {
                return /* @__PURE__ */ (0, import_jsx_runtime397.jsx)(PlaceholderCell, {});
              }
              return /* @__PURE__ */ (0, import_jsx_runtime397.jsx)("div", { className: "flex size-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime397.jsx)("span", { className: "truncate", children: quantity }) });
            }
          }),
          columnHelper48.display({
            id: "actions",
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime397.jsx)(InventoryActions2, { item: row.original })
          })
        ],
        [t4]
      );
    };
  }
});

// src/routes/inventory/inventory-list/components/use-inventory-table-filters.tsx
var import_react_i18next285, useInventoryTableFilters;
var init_use_inventory_table_filters = __esm({
  "src/routes/inventory/inventory-list/components/use-inventory-table-filters.tsx"() {
    "use strict";
    init_stock_locations();
    import_react_i18next285 = require("react-i18next");
    useInventoryTableFilters = () => {
      const { t: t4 } = (0, import_react_i18next285.useTranslation)();
      const { stock_locations } = useStockLocations({
        limit: 1e3
      });
      const filters = [];
      if (stock_locations) {
        const stockLocationFilter = {
          type: "select",
          options: stock_locations.map((s) => ({
            label: s.name,
            value: s.id
          })),
          key: "location_id",
          searchable: true,
          label: t4("fields.location")
        };
        filters.push(stockLocationFilter);
      }
      filters.push({
        type: "string",
        key: "material",
        label: t4("fields.material")
      });
      filters.push({
        type: "string",
        key: "sku",
        label: t4("fields.sku")
      });
      filters.push({
        type: "string",
        key: "mid_code",
        label: t4("fields.midCode")
      });
      filters.push({
        type: "number",
        key: "height",
        label: t4("fields.height")
      });
      filters.push({
        type: "number",
        key: "width",
        label: t4("fields.width")
      });
      filters.push({
        type: "number",
        key: "length",
        label: t4("fields.length")
      });
      filters.push({
        type: "number",
        key: "weight",
        label: t4("fields.weight")
      });
      filters.push({
        type: "select",
        options: [
          { label: t4("fields.true"), value: "true" },
          { label: t4("fields.false"), value: "false" }
        ],
        key: "requires_shipping",
        multiple: false,
        label: t4("fields.requiresShipping")
      });
      return filters;
    };
  }
});

// src/routes/inventory/inventory-list/components/use-inventory-table-query.tsx
var useInventoryTableQuery;
var init_use_inventory_table_query = __esm({
  "src/routes/inventory/inventory-list/components/use-inventory-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useInventoryTableQuery = ({
      pageSize = 20,
      prefix
    }) => {
      const raw = useQueryParams(
        [
          "id",
          "location_id",
          "q",
          "order",
          "requires_shipping",
          "offset",
          "sku",
          "origin_country",
          "material",
          "mid_code",
          "hs_code",
          "order",
          "weight",
          "width",
          "length",
          "height"
        ],
        prefix
      );
      const {
        offset: offset4,
        weight,
        width,
        length,
        height,
        requires_shipping,
        ...params2
      } = raw;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? parseInt(offset4) : void 0,
        weight: weight ? JSON.parse(weight) : void 0,
        width: width ? JSON.parse(width) : void 0,
        length: length ? JSON.parse(length) : void 0,
        height: height ? JSON.parse(height) : void 0,
        requires_shipping: requires_shipping ? JSON.parse(requires_shipping) : void 0,
        q: params2.q,
        sku: params2.sku,
        order: params2.order,
        mid_code: params2.mid_code,
        hs_code: params2.hs_code,
        material: params2.material,
        location_levels: {
          location_id: params2.location_id || []
        },
        id: params2.id ? params2.id.split(",") : void 0
      };
      return {
        searchParams,
        raw
      };
    };
  }
});

// src/routes/inventory/inventory-list/components/inventory-list-table.tsx
var import_ui260, import_react_i18next286, import_react_router_dom128, import_jsx_runtime398, PAGE_SIZE36, InventoryListTable;
var init_inventory_list_table = __esm({
  "src/routes/inventory/inventory-list/components/inventory-list-table.tsx"() {
    "use strict";
    import_ui260 = require("@medusajs/ui");
    import_react_i18next286 = require("react-i18next");
    import_react_router_dom128 = require("react-router-dom");
    init_data_table2();
    init_inventory();
    init_use_data_table();
    init_use_inventory_table_columns2();
    init_use_inventory_table_filters();
    init_use_inventory_table_query();
    import_jsx_runtime398 = require("react/jsx-runtime");
    PAGE_SIZE36 = 20;
    InventoryListTable = () => {
      const { t: t4 } = (0, import_react_i18next286.useTranslation)();
      const { searchParams, raw } = useInventoryTableQuery({
        pageSize: PAGE_SIZE36
      });
      const {
        inventory_items,
        count: count3,
        isPending: isLoading,
        isError,
        error
      } = useInventoryItems({
        ...searchParams
      });
      const filters = useInventoryTableFilters();
      const columns = useInventoryTableColumns2();
      const { table } = useDataTable({
        data: inventory_items ?? [],
        columns,
        count: count3,
        enablePagination: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE36
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime398.jsxs)(import_ui260.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime398.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime398.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime398.jsx)(import_ui260.Heading, { children: t4("inventory.domain") }),
            /* @__PURE__ */ (0, import_jsx_runtime398.jsx)(import_ui260.Text, { className: "text-ui-fg-subtle", size: "small", children: t4("inventory.subtitle") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime398.jsx)(import_ui260.Button, { size: "small", variant: "secondary", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime398.jsx)(import_react_router_dom128.Link, { to: "create", children: t4("actions.create") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime398.jsx)(
          DataTable,
          {
            table,
            columns,
            pageSize: PAGE_SIZE36,
            count: count3,
            isLoading,
            pagination: true,
            search: true,
            filters,
            queryObject: raw,
            orderBy: [
              { key: "title", label: t4("fields.title") },
              { key: "sku", label: t4("fields.sku") },
              { key: "stocked_quantity", label: t4("fields.inStock") },
              { key: "reserved_quantity", label: t4("inventory.reserved") }
            ],
            navigateTo: (row) => `${row.id}`
          }
        )
      ] });
    };
  }
});

// src/routes/inventory/inventory-list/inventory-list.tsx
var import_react_router_dom129, import_jsx_runtime399, InventoryItemListTable;
var init_inventory_list = __esm({
  "src/routes/inventory/inventory-list/inventory-list.tsx"() {
    "use strict";
    init_inventory_list_table();
    import_react_router_dom129 = require("react-router-dom");
    import_jsx_runtime399 = require("react/jsx-runtime");
    InventoryItemListTable = () => {
      return /* @__PURE__ */ (0, import_jsx_runtime399.jsxs)("div", { className: "flex flex-col gap-y-2", children: [
        /* @__PURE__ */ (0, import_jsx_runtime399.jsx)(InventoryListTable, {}),
        /* @__PURE__ */ (0, import_jsx_runtime399.jsx)(import_react_router_dom129.Outlet, {})
      ] });
    };
  }
});

// src/routes/inventory/inventory-list/index.ts
var inventory_list_exports = {};
__export(inventory_list_exports, {
  Component: () => InventoryItemListTable
});
var init_inventory_list2 = __esm({
  "src/routes/inventory/inventory-list/index.ts"() {
    "use strict";
    init_inventory_list();
  }
});

// src/routes/inventory/inventory-create/components/inventory-create-form/inventory-availability-form.tsx
var import_react200, import_react_i18next287, import_jsx_runtime400, InventoryAvailabilityForm, columnHelper49, useColumns26;
var init_inventory_availability_form = __esm({
  "src/routes/inventory/inventory-create/components/inventory-create-form/inventory-availability-form.tsx"() {
    "use strict";
    import_react200 = require("react");
    import_react_i18next287 = require("react-i18next");
    init_data_grid2();
    init_modals();
    import_jsx_runtime400 = require("react/jsx-runtime");
    InventoryAvailabilityForm = ({
      form,
      locations
    }) => {
      const { setCloseOnEscape } = useRouteModal();
      const columns = useColumns26();
      return /* @__PURE__ */ (0, import_jsx_runtime400.jsx)("div", { className: "size-full", children: /* @__PURE__ */ (0, import_jsx_runtime400.jsx)(
        DataGrid,
        {
          columns,
          data: locations,
          state: form,
          onEditingChange: (editing) => setCloseOnEscape(!editing)
        }
      ) });
    };
    columnHelper49 = createDataGridHelper();
    useColumns26 = () => {
      const { t: t4 } = (0, import_react_i18next287.useTranslation)();
      return (0, import_react200.useMemo)(
        () => [
          columnHelper49.column({
            id: "location",
            header: () => /* @__PURE__ */ (0, import_jsx_runtime400.jsx)("div", { className: "flex size-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime400.jsx)("span", { className: "truncate", children: t4("locations.domain") }) }),
            cell: (context) => {
              return /* @__PURE__ */ (0, import_jsx_runtime400.jsx)(DataGrid.ReadonlyCell, { context, children: context.row.original.name });
            },
            disableHiding: true
          }),
          columnHelper49.column({
            id: "in-stock",
            name: t4("fields.inStock"),
            header: t4("fields.inStock"),
            field: (context) => `locations.${context.row.original.id}`,
            type: "number",
            cell: (context) => {
              return /* @__PURE__ */ (0, import_jsx_runtime400.jsx)(DataGrid.NumberCell, { placeholder: "0", context });
            },
            disableHiding: true
          })
        ],
        [t4]
      );
    };
  }
});

// src/routes/inventory/inventory-create/components/inventory-create-form/schema.ts
var import_zod78, CreateInventoryItemSchema;
var init_schema8 = __esm({
  "src/routes/inventory/inventory-create/components/inventory-create-form/schema.ts"() {
    "use strict";
    import_zod78 = require("zod");
    init_validation();
    CreateInventoryItemSchema = import_zod78.z.object({
      title: import_zod78.z.string().min(1),
      description: import_zod78.z.string().optional(),
      sku: import_zod78.z.string().optional(),
      hs_code: import_zod78.z.string().optional(),
      weight: optionalInt,
      length: optionalInt,
      height: optionalInt,
      width: optionalInt,
      origin_country: import_zod78.z.string().optional(),
      mid_code: import_zod78.z.string().optional(),
      material: import_zod78.z.string().optional(),
      requires_shipping: import_zod78.z.boolean().optional(),
      thumbnail: import_zod78.z.string().optional(),
      locations: import_zod78.z.record(import_zod78.z.string(), optionalInt).optional()
    });
  }
});

// src/routes/inventory/inventory-create/components/inventory-create-form/inventory-create-form.tsx
function InventoryCreateForm({ locations }) {
  const { t: t4 } = (0, import_react_i18next288.useTranslation)();
  const { handleSuccess } = useRouteModal();
  const [tab, setTab] = (0, import_react201.useState)("details" /* DETAILS */);
  const form = (0, import_react_hook_form78.useForm)({
    defaultValues: {
      title: "",
      sku: "",
      hs_code: "",
      weight: "",
      length: "",
      height: "",
      width: "",
      origin_country: "",
      mid_code: "",
      material: "",
      description: "",
      requires_shipping: true,
      thumbnail: "",
      locations: Object.fromEntries(
        locations.map((location) => [location.id, ""])
      )
    },
    resolver: (0, import_zod79.zodResolver)(CreateInventoryItemSchema)
  });
  const {
    trigger,
    formState: { isDirty }
  } = form;
  const { mutateAsync: createInventoryItem, isPending: isLoading } = useCreateInventoryItem();
  const handleSubmit = form.handleSubmit(async (data) => {
    const { locations: locations2, weight, length, height, width, ...payload } = data;
    const cleanData = transformNullableFormData(payload, false);
    const cleanNumbers = transformNullableFormNumbers(
      {
        weight,
        length,
        height,
        width
      },
      false
    );
    const { inventory_item } = await createInventoryItem(
      {
        ...cleanData,
        ...cleanNumbers
      },
      {
        onError: (e) => {
          import_ui261.toast.error(e.message);
          return;
        }
      }
    );
    await sdk.admin.inventoryItem.batchUpdateLevels(inventory_item.id, {
      create: Object.entries(locations2 ?? {}).filter(([_, quantiy]) => !!quantiy).map(([location_id, stocked_quantity]) => ({
        location_id,
        stocked_quantity: transformNullableFormNumber(
          stocked_quantity,
          false
        )
      }))
    }).then(async () => {
      await queryClient.invalidateQueries({
        queryKey: inventoryItemsQueryKeys.lists()
      });
    }).catch((e) => {
      import_ui261.toast.error(e.message);
    }).finally(() => {
      handleSuccess();
      import_ui261.toast.success(t4("inventory.create.successToast"));
    });
  });
  const [status, setStatus] = (0, import_react201.useState)({
    ["availability" /* AVAILABILITY */]: "not-started",
    ["details" /* DETAILS */]: "not-started"
  });
  const onTabChange = (0, import_react201.useCallback)(
    async (value) => {
      const result = await trigger();
      if (!result) {
        return;
      }
      setTab(value);
    },
    [trigger]
  );
  const onNext = (0, import_react201.useCallback)(async () => {
    const result = await trigger();
    if (!result) {
      return;
    }
    switch (tab) {
      case "details" /* DETAILS */: {
        setTab("availability" /* AVAILABILITY */);
        break;
      }
      case "availability" /* AVAILABILITY */:
        break;
    }
  }, [tab, trigger]);
  (0, import_react201.useEffect)(() => {
    if (isDirty) {
      setStatus((prev) => ({ ...prev, ["details" /* DETAILS */]: "in-progress" }));
    } else {
      setStatus((prev) => ({ ...prev, ["details" /* DETAILS */]: "not-started" }));
    }
  }, [isDirty]);
  (0, import_react201.useEffect)(() => {
    if (tab === "details" /* DETAILS */ && isDirty) {
      setStatus((prev) => ({ ...prev, ["details" /* DETAILS */]: "in-progress" }));
    }
    if (tab === "availability" /* AVAILABILITY */) {
      setStatus((prev) => ({
        ...prev,
        ["details" /* DETAILS */]: "completed",
        ["availability" /* AVAILABILITY */]: "in-progress"
      }));
    }
  }, [tab, isDirty]);
  return /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
    import_ui261.ProgressTabs,
    {
      value: tab,
      className: "h-full",
      onValueChange: (tab2) => onTabChange(tab2),
      children: /* @__PURE__ */ (0, import_jsx_runtime401.jsxs)(
        KeyboundForm,
        {
          className: "flex h-full flex-col overflow-hidden",
          onSubmit: handleSubmit,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime401.jsxs)(import_ui261.ProgressTabs.List, { className: "border-ui-border-base -my-2 ml-2 min-w-0 flex-1 border-l", children: [
              /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                import_ui261.ProgressTabs.Trigger,
                {
                  value: "details" /* DETAILS */,
                  status: status["details" /* DETAILS */],
                  className: "w-full max-w-[200px]",
                  children: /* @__PURE__ */ (0, import_jsx_runtime401.jsx)("span", { className: "w-full cursor-auto overflow-hidden text-ellipsis whitespace-nowrap", children: t4("inventory.create.details") })
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                import_ui261.ProgressTabs.Trigger,
                {
                  value: "availability" /* AVAILABILITY */,
                  className: "w-full max-w-[200px]",
                  status: status["availability" /* AVAILABILITY */],
                  children: /* @__PURE__ */ (0, import_jsx_runtime401.jsx)("span", { className: "w-full overflow-hidden text-ellipsis whitespace-nowrap", children: t4("inventory.create.availability") })
                }
              )
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime401.jsxs)(
              RouteFocusModal.Body,
              {
                className: (0, import_ui261.clx)(
                  "flex h-full w-full flex-col items-center divide-y overflow-hidden",
                  { "mx-auto": tab === "details" /* DETAILS */ }
                ),
                children: [
                  /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                    import_ui261.ProgressTabs.Content,
                    {
                      value: "details" /* DETAILS */,
                      className: "h-full w-full overflow-auto px-3",
                      children: /* @__PURE__ */ (0, import_jsx_runtime401.jsxs)("div", { className: "mx-auto flex w-full max-w-[720px] flex-col gap-y-8 px-px py-16", children: [
                        /* @__PURE__ */ (0, import_jsx_runtime401.jsxs)("div", { className: "flex flex-col gap-y-8", children: [
                          /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(import_ui261.Heading, { children: t4("inventory.create.title") }),
                          /* @__PURE__ */ (0, import_jsx_runtime401.jsxs)("div", { className: "flex flex-col gap-y-6", children: [
                            /* @__PURE__ */ (0, import_jsx_runtime401.jsxs)("div", { className: "grid grid-cols-1 gap-4 lg:grid-cols-2", children: [
                              /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                                Form.Field,
                                {
                                  control: form.control,
                                  name: "title",
                                  render: ({ field }) => {
                                    return /* @__PURE__ */ (0, import_jsx_runtime401.jsxs)(Form.Item, { children: [
                                      /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.Label, { children: t4("fields.title") }),
                                      /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                                        import_ui261.Input,
                                        {
                                          ...field,
                                          placeholder: t4("fields.title")
                                        }
                                      ) }),
                                      /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.ErrorMessage, {})
                                    ] });
                                  }
                                }
                              ),
                              /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                                Form.Field,
                                {
                                  control: form.control,
                                  name: "sku",
                                  render: ({ field }) => {
                                    return /* @__PURE__ */ (0, import_jsx_runtime401.jsxs)(Form.Item, { children: [
                                      /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.Label, { children: t4("fields.sku") }),
                                      /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(import_ui261.Input, { ...field, placeholder: "sku-123" }) }),
                                      /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.ErrorMessage, {})
                                    ] });
                                  }
                                }
                              )
                            ] }),
                            /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                              Form.Field,
                              {
                                control: form.control,
                                name: "description",
                                render: ({ field }) => {
                                  return /* @__PURE__ */ (0, import_jsx_runtime401.jsxs)(Form.Item, { children: [
                                    /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.Label, { optional: true, children: t4("products.fields.description.label") }),
                                    /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                                      import_ui261.Textarea,
                                      {
                                        ...field,
                                        placeholder: "The item description"
                                      }
                                    ) })
                                  ] });
                                }
                              }
                            )
                          ] }),
                          /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                            SwitchBox,
                            {
                              control: form.control,
                              name: "requires_shipping",
                              label: t4("inventory.create.requiresShipping"),
                              description: t4("inventory.create.requiresShippingHint")
                            }
                          )
                        ] }),
                        /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Divider, {}),
                        /* @__PURE__ */ (0, import_jsx_runtime401.jsxs)("div", { className: "flex flex-col gap-y-6", children: [
                          /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(import_ui261.Heading, { level: "h2", children: t4("inventory.create.attributes") }),
                          /* @__PURE__ */ (0, import_jsx_runtime401.jsxs)("div", { className: "grid grid-cols-1 gap-x-4 gap-y-4 lg:grid-cols-2 lg:gap-y-8", children: [
                            /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                              Form.Field,
                              {
                                control: form.control,
                                name: "width",
                                render: ({ field }) => {
                                  return /* @__PURE__ */ (0, import_jsx_runtime401.jsxs)(Form.Item, { children: [
                                    /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.Label, { optional: true, children: t4("products.fields.width.label") }),
                                    /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                                      import_ui261.Input,
                                      {
                                        ...field,
                                        type: "number",
                                        min: 0,
                                        placeholder: "100"
                                      }
                                    ) })
                                  ] });
                                }
                              }
                            ),
                            /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                              Form.Field,
                              {
                                control: form.control,
                                name: "length",
                                render: ({ field }) => {
                                  return /* @__PURE__ */ (0, import_jsx_runtime401.jsxs)(Form.Item, { children: [
                                    /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.Label, { optional: true, children: t4("products.fields.length.label") }),
                                    /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                                      import_ui261.Input,
                                      {
                                        ...field,
                                        type: "number",
                                        min: 0,
                                        placeholder: "100"
                                      }
                                    ) })
                                  ] });
                                }
                              }
                            ),
                            /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                              Form.Field,
                              {
                                control: form.control,
                                name: "height",
                                render: ({ field }) => {
                                  return /* @__PURE__ */ (0, import_jsx_runtime401.jsxs)(Form.Item, { children: [
                                    /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.Label, { optional: true, children: t4("products.fields.height.label") }),
                                    /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                                      import_ui261.Input,
                                      {
                                        ...field,
                                        type: "number",
                                        min: 0,
                                        placeholder: "100"
                                      }
                                    ) })
                                  ] });
                                }
                              }
                            ),
                            /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                              Form.Field,
                              {
                                control: form.control,
                                name: "weight",
                                render: ({ field }) => {
                                  return /* @__PURE__ */ (0, import_jsx_runtime401.jsxs)(Form.Item, { children: [
                                    /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.Label, { optional: true, children: t4("products.fields.weight.label") }),
                                    /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                                      import_ui261.Input,
                                      {
                                        ...field,
                                        type: "number",
                                        min: 0,
                                        placeholder: "100"
                                      }
                                    ) })
                                  ] });
                                }
                              }
                            ),
                            /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                              Form.Field,
                              {
                                control: form.control,
                                name: "mid_code",
                                render: ({ field }) => {
                                  return /* @__PURE__ */ (0, import_jsx_runtime401.jsxs)(Form.Item, { children: [
                                    /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.Label, { optional: true, children: t4("products.fields.mid_code.label") }),
                                    /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(import_ui261.Input, { ...field }) })
                                  ] });
                                }
                              }
                            ),
                            /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                              Form.Field,
                              {
                                control: form.control,
                                name: "hs_code",
                                render: ({ field }) => {
                                  return /* @__PURE__ */ (0, import_jsx_runtime401.jsxs)(Form.Item, { children: [
                                    /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.Label, { optional: true, children: t4("products.fields.hs_code.label") }),
                                    /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(import_ui261.Input, { ...field }) })
                                  ] });
                                }
                              }
                            ),
                            /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                              Form.Field,
                              {
                                control: form.control,
                                name: "origin_country",
                                render: ({ field }) => {
                                  return /* @__PURE__ */ (0, import_jsx_runtime401.jsxs)(Form.Item, { children: [
                                    /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.Label, { optional: true, children: t4("products.fields.countryOrigin.label") }),
                                    /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(CountrySelect, { ...field }) })
                                  ] });
                                }
                              }
                            ),
                            /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                              Form.Field,
                              {
                                control: form.control,
                                name: "material",
                                render: ({ field }) => {
                                  return /* @__PURE__ */ (0, import_jsx_runtime401.jsxs)(Form.Item, { children: [
                                    /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.Label, { optional: true, children: t4("products.fields.material.label") }),
                                    /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(import_ui261.Input, { ...field }) })
                                  ] });
                                }
                              }
                            )
                          ] })
                        ] })
                      ] })
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                    import_ui261.ProgressTabs.Content,
                    {
                      value: "availability" /* AVAILABILITY */,
                      className: "size-full",
                      children: /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(InventoryAvailabilityForm, { form, locations })
                    }
                  )
                ]
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime401.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(import_ui261.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime401.jsx)(
                import_ui261.Button,
                {
                  size: "small",
                  className: "whitespace-nowrap",
                  isLoading,
                  onClick: tab !== "availability" /* AVAILABILITY */ ? onNext : void 0,
                  type: tab === "availability" /* AVAILABILITY */ ? "submit" : "button",
                  children: tab === "availability" /* AVAILABILITY */ ? t4("actions.save") : t4("general.next")
                },
                tab === "availability" /* AVAILABILITY */ ? "details" : "pricing"
              )
            ] }) })
          ]
        }
      )
    }
  ) });
}
var import_zod79, import_ui261, import_react201, import_react_hook_form78, import_react_i18next288, import_jsx_runtime401;
var init_inventory_create_form = __esm({
  "src/routes/inventory/inventory-create/components/inventory-create-form/inventory-create-form.tsx"() {
    "use strict";
    import_zod79 = require("@hookform/resolvers/zod");
    import_ui261 = require("@medusajs/ui");
    import_react201 = require("react");
    import_react_hook_form78 = require("react-hook-form");
    import_react_i18next288 = require("react-i18next");
    init_divider2();
    init_form2();
    init_switch_box2();
    init_country_select2();
    init_modals();
    init_keybound_form2();
    init_inventory();
    init_client2();
    init_form_helpers();
    init_query_client();
    init_inventory_availability_form();
    init_schema8();
    import_jsx_runtime401 = require("react/jsx-runtime");
  }
});

// src/routes/inventory/inventory-create/components/inventory-create-form/index.ts
var init_inventory_create_form2 = __esm({
  "src/routes/inventory/inventory-create/components/inventory-create-form/index.ts"() {
    "use strict";
    init_inventory_create_form();
  }
});

// src/routes/inventory/inventory-create/inventory-create.tsx
function InventoryCreate() {
  const { isPending, stock_locations, isError, error } = useStockLocations({
    limit: 9999,
    fields: "id,name"
  });
  const ready = !isPending && !!stock_locations;
  if (isError) {
    throw error;
  }
  return /* @__PURE__ */ (0, import_jsx_runtime402.jsx)(RouteFocusModal, { children: ready && /* @__PURE__ */ (0, import_jsx_runtime402.jsx)(InventoryCreateForm, { locations: stock_locations }) });
}
var import_jsx_runtime402;
var init_inventory_create = __esm({
  "src/routes/inventory/inventory-create/inventory-create.tsx"() {
    "use strict";
    init_modals();
    init_api();
    init_inventory_create_form2();
    import_jsx_runtime402 = require("react/jsx-runtime");
  }
});

// src/routes/inventory/inventory-create/index.ts
var inventory_create_exports = {};
__export(inventory_create_exports, {
  Component: () => InventoryCreate
});
var init_inventory_create2 = __esm({
  "src/routes/inventory/inventory-create/index.ts"() {
    "use strict";
    init_inventory_create();
  }
});

// src/routes/inventory/inventory-detail/components/inventory-item-attributes/attributes-section.tsx
var import_ui262, import_icons118, import_react_i18next289, import_jsx_runtime403, InventoryItemAttributeSection;
var init_attributes_section = __esm({
  "src/routes/inventory/inventory-detail/components/inventory-item-attributes/attributes-section.tsx"() {
    "use strict";
    import_ui262 = require("@medusajs/ui");
    init_action_menu2();
    import_icons118 = require("@medusajs/icons");
    init_section();
    init_addresses();
    import_react_i18next289 = require("react-i18next");
    import_jsx_runtime403 = require("react/jsx-runtime");
    InventoryItemAttributeSection = ({
      inventoryItem
    }) => {
      const { t: t4 } = (0, import_react_i18next289.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime403.jsxs)(import_ui262.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime403.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime403.jsx)(import_ui262.Heading, { level: "h2", children: t4("products.attributes") }),
          /* @__PURE__ */ (0, import_jsx_runtime403.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      label: t4("actions.edit"),
                      to: "attributes",
                      icon: /* @__PURE__ */ (0, import_jsx_runtime403.jsx)(import_icons118.PencilSquare, {})
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime403.jsx)(SectionRow, { title: t4("fields.height"), value: inventoryItem.height }),
        /* @__PURE__ */ (0, import_jsx_runtime403.jsx)(SectionRow, { title: t4("fields.width"), value: inventoryItem.width }),
        /* @__PURE__ */ (0, import_jsx_runtime403.jsx)(SectionRow, { title: t4("fields.length"), value: inventoryItem.length }),
        /* @__PURE__ */ (0, import_jsx_runtime403.jsx)(SectionRow, { title: t4("fields.weight"), value: inventoryItem.weight }),
        /* @__PURE__ */ (0, import_jsx_runtime403.jsx)(SectionRow, { title: t4("fields.midCode"), value: inventoryItem.mid_code }),
        /* @__PURE__ */ (0, import_jsx_runtime403.jsx)(SectionRow, { title: t4("fields.hsCode"), value: inventoryItem.hs_code }),
        /* @__PURE__ */ (0, import_jsx_runtime403.jsx)(
          SectionRow,
          {
            title: t4("fields.countryOfOrigin"),
            value: getFormattedCountry(inventoryItem.origin_country)
          }
        )
      ] });
    };
  }
});

// src/routes/inventory/inventory-detail/components/location-levels-table/use-location-list-table-query.tsx
var useLocationLevelTableQuery;
var init_use_location_list_table_query = __esm({
  "src/routes/inventory/inventory-detail/components/location-levels-table/use-location-list-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useLocationLevelTableQuery = ({
      pageSize = 20,
      prefix
    }) => {
      const raw = useQueryParams(
        [
          "id",
          "location_id",
          "stocked_quantity",
          "reserved_quantity",
          "incoming_quantity",
          "available_quantity",
          "*stock_locations"
        ],
        prefix
      );
      const { reserved_quantity, stocked_quantity, available_quantity, ...params2 } = raw;
      const searchParams = {
        limit: pageSize,
        reserved_quantity: reserved_quantity ? JSON.parse(reserved_quantity) : void 0,
        stocked_quantity: stocked_quantity ? JSON.parse(stocked_quantity) : void 0,
        available_quantity: available_quantity ? JSON.parse(available_quantity) : void 0,
        ...params2
      };
      return {
        searchParams,
        raw
      };
    };
  }
});

// src/routes/inventory/inventory-detail/components/location-levels-table/location-actions.tsx
var import_icons119, import_ui263, import_react_i18next290, import_jsx_runtime404, LocationActions;
var init_location_actions = __esm({
  "src/routes/inventory/inventory-detail/components/location-levels-table/location-actions.tsx"() {
    "use strict";
    import_icons119 = require("@medusajs/icons");
    import_ui263 = require("@medusajs/ui");
    import_react_i18next290 = require("react-i18next");
    init_action_menu2();
    init_inventory();
    import_jsx_runtime404 = require("react/jsx-runtime");
    LocationActions = ({
      level
    }) => {
      const { t: t4 } = (0, import_react_i18next290.useTranslation)();
      const prompt = (0, import_ui263.usePrompt)();
      const { mutateAsync } = useDeleteInventoryItemLevel(
        level.inventory_item_id,
        level.location_id
      );
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("inventory.deleteWarning"),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync();
      };
      return /* @__PURE__ */ (0, import_jsx_runtime404.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime404.jsx)(import_icons119.PencilSquare, {}),
                  label: t4("actions.edit"),
                  to: `locations/${level.location_id}`
                }
              ]
            },
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime404.jsx)(import_icons119.Trash, {}),
                  label: t4("actions.delete"),
                  onClick: handleDelete,
                  disabled: level.reserved_quantity > 0 || level.stocked_quantity > 0
                }
              ]
            }
          ]
        }
      );
    };
  }
});

// src/routes/inventory/inventory-detail/components/location-levels-table/use-location-list-table-columns.tsx
var import_react_table49, import_react202, import_react_i18next291, import_jsx_runtime405, columnHelper50, useLocationListTableColumns;
var init_use_location_list_table_columns = __esm({
  "src/routes/inventory/inventory-detail/components/location-levels-table/use-location-list-table-columns.tsx"() {
    "use strict";
    init_location_actions();
    init_placeholder_cell2();
    import_react_table49 = require("@tanstack/react-table");
    import_react202 = require("react");
    import_react_i18next291 = require("react-i18next");
    import_jsx_runtime405 = require("react/jsx-runtime");
    columnHelper50 = (0, import_react_table49.createColumnHelper)();
    useLocationListTableColumns = () => {
      const { t: t4 } = (0, import_react_i18next291.useTranslation)();
      return (0, import_react202.useMemo)(
        () => [
          columnHelper50.accessor("stock_locations.0.name", {
            header: t4("fields.location"),
            cell: ({ getValue: getValue2 }) => {
              const locationName = getValue2();
              if (!locationName) {
                return /* @__PURE__ */ (0, import_jsx_runtime405.jsx)(PlaceholderCell, {});
              }
              return /* @__PURE__ */ (0, import_jsx_runtime405.jsx)("div", { className: "flex size-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime405.jsx)("span", { className: "truncate", children: locationName.toString() }) });
            }
          }),
          columnHelper50.accessor("reserved_quantity", {
            header: t4("inventory.reserved"),
            cell: ({ getValue: getValue2 }) => {
              const quantity = getValue2();
              if (Number.isNaN(quantity)) {
                return /* @__PURE__ */ (0, import_jsx_runtime405.jsx)(PlaceholderCell, {});
              }
              return /* @__PURE__ */ (0, import_jsx_runtime405.jsx)("div", { className: "flex size-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime405.jsx)("span", { className: "truncate", children: quantity }) });
            }
          }),
          columnHelper50.accessor("stocked_quantity", {
            header: t4("fields.inStock"),
            cell: ({ getValue: getValue2 }) => {
              const stockedQuantity = getValue2();
              if (Number.isNaN(stockedQuantity)) {
                return /* @__PURE__ */ (0, import_jsx_runtime405.jsx)(PlaceholderCell, {});
              }
              return /* @__PURE__ */ (0, import_jsx_runtime405.jsx)("div", { className: "flex size-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime405.jsx)("span", { className: "truncate", children: stockedQuantity }) });
            }
          }),
          columnHelper50.accessor("available_quantity", {
            header: t4("inventory.available"),
            cell: ({ getValue: getValue2 }) => {
              const availableQuantity = getValue2();
              if (Number.isNaN(availableQuantity)) {
                return /* @__PURE__ */ (0, import_jsx_runtime405.jsx)(PlaceholderCell, {});
              }
              return /* @__PURE__ */ (0, import_jsx_runtime405.jsx)("div", { className: "flex size-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime405.jsx)("span", { className: "truncate", children: availableQuantity }) });
            }
          }),
          columnHelper50.display({
            id: "actions",
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime405.jsx)(LocationActions, { level: row.original })
          })
        ],
        [t4]
      );
    };
  }
});

// src/routes/inventory/inventory-detail/components/location-levels-table/location-list-table.tsx
var import_jsx_runtime406, PAGE_SIZE37, ItemLocationListTable;
var init_location_list_table = __esm({
  "src/routes/inventory/inventory-detail/components/location-levels-table/location-list-table.tsx"() {
    "use strict";
    init_data_table2();
    init_use_data_table();
    init_inventory();
    init_use_location_list_table_query();
    init_use_location_list_table_columns();
    import_jsx_runtime406 = require("react/jsx-runtime");
    PAGE_SIZE37 = 20;
    ItemLocationListTable = ({
      inventory_item_id
    }) => {
      const { searchParams, raw } = useLocationLevelTableQuery({
        pageSize: PAGE_SIZE37
      });
      const {
        inventory_levels,
        count: count3,
        isPending: isLoading,
        isError,
        error
      } = useInventoryItemLevels(inventory_item_id, {
        ...searchParams,
        fields: "*stock_locations"
      });
      const columns = useLocationListTableColumns();
      const { table } = useDataTable({
        data: inventory_levels ?? [],
        columns,
        count: count3,
        enablePagination: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE37
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime406.jsx)(
        DataTable,
        {
          table,
          columns,
          pageSize: PAGE_SIZE37,
          count: count3,
          isLoading,
          pagination: true,
          queryObject: raw
        }
      );
    };
  }
});

// src/routes/inventory/inventory-detail/components/inventory-item-location-levels.tsx
var import_ui264, import_react_router_dom130, import_react_i18next292, import_jsx_runtime407, InventoryItemLocationLevelsSection;
var init_inventory_item_location_levels = __esm({
  "src/routes/inventory/inventory-detail/components/inventory-item-location-levels.tsx"() {
    "use strict";
    import_ui264 = require("@medusajs/ui");
    init_location_list_table();
    import_react_router_dom130 = require("react-router-dom");
    import_react_i18next292 = require("react-i18next");
    import_jsx_runtime407 = require("react/jsx-runtime");
    InventoryItemLocationLevelsSection = ({
      inventoryItem
    }) => {
      const { t: t4 } = (0, import_react_i18next292.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime407.jsxs)(import_ui264.Container, { className: "p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime407.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime407.jsx)(import_ui264.Heading, { children: t4("inventory.locationLevels") }),
          /* @__PURE__ */ (0, import_jsx_runtime407.jsx)(import_ui264.Button, { size: "small", variant: "secondary", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime407.jsx)(import_react_router_dom130.Link, { to: "locations", children: t4("inventory.manageLocations") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime407.jsx)(ItemLocationListTable, { inventory_item_id: inventoryItem.id })
      ] });
    };
  }
});

// src/components/table/table-cells/common/created-at-cell/created-at-cell.tsx
var import_ui265, import_format3, import_react_i18next293, import_jsx_runtime408, CreatedAtCell;
var init_created_at_cell = __esm({
  "src/components/table/table-cells/common/created-at-cell/created-at-cell.tsx"() {
    "use strict";
    import_ui265 = require("@medusajs/ui");
    import_format3 = __toESM(require("date-fns/format"));
    import_react_i18next293 = require("react-i18next");
    init_placeholder_cell2();
    import_jsx_runtime408 = require("react/jsx-runtime");
    CreatedAtCell = ({ date: date3 }) => {
      if (!date3) {
        return /* @__PURE__ */ (0, import_jsx_runtime408.jsx)(PlaceholderCell, {});
      }
      const value = new Date(date3);
      value.setMinutes(value.getMinutes() - value.getTimezoneOffset());
      const hour12 = Intl.DateTimeFormat().resolvedOptions().hour12;
      const timestampFormat = hour12 ? "dd MMM yyyy hh:MM a" : "dd MMM yyyy HH:MM";
      return /* @__PURE__ */ (0, import_jsx_runtime408.jsx)("div", { className: "flex h-full w-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime408.jsx)(
        import_ui265.Tooltip,
        {
          className: "z-10",
          content: /* @__PURE__ */ (0, import_jsx_runtime408.jsx)("span", { className: "text-pretty", children: `${(0, import_format3.default)(
            value,
            timestampFormat
          )}` }),
          children: /* @__PURE__ */ (0, import_jsx_runtime408.jsx)("span", { className: "truncate", children: (0, import_format3.default)(value, "dd MMM yyyy") })
        }
      ) });
    };
  }
});

// src/components/table/table-cells/common/created-at-cell/index.ts
var init_created_at_cell2 = __esm({
  "src/components/table/table-cells/common/created-at-cell/index.ts"() {
    "use strict";
    init_created_at_cell();
  }
});

// src/routes/inventory/inventory-detail/components/reservations-table/reservation-actions.tsx
var import_icons120, import_ui266, import_react_i18next294, import_jsx_runtime409, ReservationActions2;
var init_reservation_actions2 = __esm({
  "src/routes/inventory/inventory-detail/components/reservations-table/reservation-actions.tsx"() {
    "use strict";
    import_icons120 = require("@medusajs/icons");
    import_ui266 = require("@medusajs/ui");
    import_react_i18next294 = require("react-i18next");
    init_action_menu2();
    init_reservations();
    import_jsx_runtime409 = require("react/jsx-runtime");
    ReservationActions2 = ({
      reservation
    }) => {
      const { t: t4 } = (0, import_react_i18next294.useTranslation)();
      const prompt = (0, import_ui266.usePrompt)();
      const { mutateAsync } = useDeleteReservationItem(reservation.id);
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("inventory.deleteWarning"),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            import_ui266.toast.success(t4("inventory.reservation.deleteSuccessToast"));
          },
          onError: (e) => {
            import_ui266.toast.error(e.message);
          }
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime409.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime409.jsx)(import_icons120.PencilSquare, {}),
                  label: t4("actions.edit"),
                  to: `/reservations/${reservation.id}/edit`
                }
              ]
            },
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime409.jsx)(import_icons120.Trash, {}),
                  label: t4("actions.delete"),
                  onClick: handleDelete
                }
              ]
            }
          ]
        }
      );
    };
  }
});

// src/routes/inventory/inventory-detail/components/reservations-table/use-reservation-list-table-columns.tsx
var import_react_table50, import_react203, import_react_i18next295, import_jsx_runtime410, columnHelper51, useReservationTableColumn;
var init_use_reservation_list_table_columns = __esm({
  "src/routes/inventory/inventory-detail/components/reservations-table/use-reservation-list-table-columns.tsx"() {
    "use strict";
    import_react_table50 = require("@tanstack/react-table");
    import_react203 = require("react");
    import_react_i18next295 = require("react-i18next");
    init_created_at_cell2();
    init_placeholder_cell2();
    init_text_cell2();
    init_reservation_actions2();
    import_jsx_runtime410 = require("react/jsx-runtime");
    columnHelper51 = (0, import_react_table50.createColumnHelper)();
    useReservationTableColumn = ({ sku }) => {
      const { t: t4 } = (0, import_react_i18next295.useTranslation)();
      return (0, import_react203.useMemo)(
        () => [
          columnHelper51.display({
            id: "sku",
            header: () => /* @__PURE__ */ (0, import_jsx_runtime410.jsx)(TextHeader, { text: t4("fields.sku") }),
            cell: () => {
              return /* @__PURE__ */ (0, import_jsx_runtime410.jsx)(TextCell, { text: sku });
            }
          }),
          columnHelper51.accessor("line_item.order_id", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime410.jsx)(TextHeader, { text: t4("inventory.reservation.orderID") }),
            cell: ({ getValue: getValue2 }) => {
              const orderId = getValue2();
              if (!orderId) {
                return /* @__PURE__ */ (0, import_jsx_runtime410.jsx)(PlaceholderCell, {});
              }
              return /* @__PURE__ */ (0, import_jsx_runtime410.jsx)(TextCell, { text: orderId });
            }
          }),
          columnHelper51.accessor("description", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime410.jsx)(TextHeader, { text: t4("fields.description") }),
            cell: ({ getValue: getValue2 }) => {
              const description = getValue2();
              if (!description) {
                return /* @__PURE__ */ (0, import_jsx_runtime410.jsx)(PlaceholderCell, {});
              }
              return /* @__PURE__ */ (0, import_jsx_runtime410.jsx)(TextCell, { text: description });
            }
          }),
          columnHelper51.accessor("location.name", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime410.jsx)(TextHeader, { text: t4("inventory.reservation.location") }),
            cell: ({ getValue: getValue2 }) => {
              const location = getValue2();
              if (!location) {
                return /* @__PURE__ */ (0, import_jsx_runtime410.jsx)(PlaceholderCell, {});
              }
              return /* @__PURE__ */ (0, import_jsx_runtime410.jsx)(TextCell, { text: location });
            }
          }),
          columnHelper51.accessor("created_at", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime410.jsx)(TextHeader, { text: t4("fields.createdAt") }),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime410.jsx)(CreatedAtCell, { date: getValue2() })
          }),
          columnHelper51.accessor("quantity", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime410.jsx)(TextHeader, { text: t4("fields.quantity"), align: "right" }),
            cell: ({ getValue: getValue2 }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime410.jsx)(TextCell, { text: getValue2(), align: "right" });
            }
          }),
          columnHelper51.display({
            id: "actions",
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime410.jsx)(ReservationActions2, { reservation: row.original })
          })
        ],
        [t4]
      );
    };
  }
});

// src/routes/inventory/inventory-detail/components/reservations-table/use-reservation-list-table-query.tsx
var useReservationsTableQuery;
var init_use_reservation_list_table_query = __esm({
  "src/routes/inventory/inventory-detail/components/reservations-table/use-reservation-list-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useReservationsTableQuery = ({
      pageSize = 20,
      prefix
    }) => {
      const raw = useQueryParams(
        [
          "id",
          "location_id",
          "inventory_item_id",
          "quantity",
          "line_item_id",
          "description",
          "created_by"
        ],
        prefix
      );
      const { quantity, ...params2 } = raw;
      const searchParams = {
        limit: pageSize,
        quantity: quantity ? JSON.parse(quantity) : void 0,
        ...params2
      };
      return {
        searchParams,
        raw
      };
    };
  }
});

// src/routes/inventory/inventory-detail/components/reservations-table/reservation-list-table.tsx
var import_react204, import_jsx_runtime411, PAGE_SIZE38, ReservationItemTable;
var init_reservation_list_table3 = __esm({
  "src/routes/inventory/inventory-detail/components/reservations-table/reservation-list-table.tsx"() {
    "use strict";
    import_react204 = require("react");
    init_data_table2();
    init_use_data_table();
    init_reservations();
    init_use_reservation_list_table_columns();
    init_use_reservation_list_table_query();
    init_api();
    import_jsx_runtime411 = require("react/jsx-runtime");
    PAGE_SIZE38 = 20;
    ReservationItemTable = ({
      inventoryItem
    }) => {
      const { searchParams, raw } = useReservationsTableQuery({
        pageSize: PAGE_SIZE38
      });
      const { reservations, count: count3, isPending, isError, error } = useReservationItems({
        ...searchParams,
        inventory_item_id: [inventoryItem.id]
      });
      const { stock_locations } = useStockLocations({
        id: (reservations || []).map((r) => r.location_id)
      });
      const data = (0, import_react204.useMemo)(() => {
        const locationMap = new Map((stock_locations || []).map((l) => [l.id, l]));
        return (reservations || []).map((r) => ({
          ...r,
          location: locationMap.get(r.location_id)
        }));
      }, [reservations, stock_locations]);
      const columns = useReservationTableColumn({ sku: inventoryItem.sku });
      const { table } = useDataTable({
        data: data ?? [],
        columns,
        count: count3,
        enablePagination: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE38
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime411.jsx)(
        DataTable,
        {
          table,
          columns,
          pageSize: PAGE_SIZE38,
          count: count3,
          isLoading: isPending,
          pagination: true,
          queryObject: raw
        }
      );
    };
  }
});

// src/routes/inventory/inventory-detail/components/inventory-item-reservations.tsx
var import_ui267, import_react_router_dom131, import_react_i18next296, import_jsx_runtime412, InventoryItemReservationsSection;
var init_inventory_item_reservations = __esm({
  "src/routes/inventory/inventory-detail/components/inventory-item-reservations.tsx"() {
    "use strict";
    import_ui267 = require("@medusajs/ui");
    import_react_router_dom131 = require("react-router-dom");
    init_reservation_list_table3();
    import_react_i18next296 = require("react-i18next");
    import_jsx_runtime412 = require("react/jsx-runtime");
    InventoryItemReservationsSection = ({
      inventoryItem
    }) => {
      const { t: t4 } = (0, import_react_i18next296.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime412.jsxs)(import_ui267.Container, { className: "p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime412.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime412.jsx)(import_ui267.Heading, { children: t4("reservations.domain") }),
          /* @__PURE__ */ (0, import_jsx_runtime412.jsx)(import_ui267.Button, { size: "small", variant: "secondary", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime412.jsx)(import_react_router_dom131.Link, { to: `/reservations/create?item_id=${inventoryItem.id}`, children: t4("actions.create") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime412.jsx)(ReservationItemTable, { inventoryItem })
      ] });
    };
  }
});

// src/routes/inventory/inventory-detail/components/inventory-item-variants/variants-section.tsx
var import_icons121, import_ui268, import_react_i18next297, import_react_router_dom132, import_jsx_runtime413, InventoryItemVariantsSection;
var init_variants_section = __esm({
  "src/routes/inventory/inventory-detail/components/inventory-item-variants/variants-section.tsx"() {
    "use strict";
    import_icons121 = require("@medusajs/icons");
    import_ui268 = require("@medusajs/ui");
    import_react_i18next297 = require("react-i18next");
    import_react_router_dom132 = require("react-router-dom");
    init_thumbnail2();
    import_jsx_runtime413 = require("react/jsx-runtime");
    InventoryItemVariantsSection = ({
      variants
    }) => {
      const { t: t4 } = (0, import_react_i18next297.useTranslation)();
      if (!variants?.length) {
        return null;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime413.jsxs)(import_ui268.Container, { className: "p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime413.jsx)("div", { className: "flex items-center justify-between px-6 py-4", children: /* @__PURE__ */ (0, import_jsx_runtime413.jsx)(import_ui268.Heading, { level: "h2", children: t4("inventory.associatedVariants") }) }),
        /* @__PURE__ */ (0, import_jsx_runtime413.jsx)("div", { className: "txt-small flex flex-col gap-2 px-2 pb-2", children: variants.map((variant) => {
          const link = variant.product ? `/products/${variant.product.id}/variants/${variant.id}` : null;
          const Inner5 = /* @__PURE__ */ (0, import_jsx_runtime413.jsx)("div", { className: "shadow-elevation-card-rest bg-ui-bg-component rounded-md px-4 py-2 transition-colors", children: /* @__PURE__ */ (0, import_jsx_runtime413.jsxs)("div", { className: "flex items-center gap-3", children: [
            /* @__PURE__ */ (0, import_jsx_runtime413.jsx)("div", { className: "shadow-elevation-card-rest rounded-md", children: /* @__PURE__ */ (0, import_jsx_runtime413.jsx)(Thumbnail, { src: variant.product?.thumbnail }) }),
            /* @__PURE__ */ (0, import_jsx_runtime413.jsxs)("div", { className: "flex flex-1 flex-col", children: [
              /* @__PURE__ */ (0, import_jsx_runtime413.jsx)("span", { className: "text-ui-fg-base font-medium", children: variant.title }),
              /* @__PURE__ */ (0, import_jsx_runtime413.jsx)("span", { className: "text-ui-fg-subtle", children: variant.options.map((o) => o.value).join(" \u22C5 ") })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime413.jsx)("div", { className: "size-7 flex items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime413.jsx)(import_icons121.TriangleRightMini, { className: "text-ui-fg-muted" }) })
          ] }) });
          if (!link) {
            return /* @__PURE__ */ (0, import_jsx_runtime413.jsx)("div", { children: Inner5 }, variant.id);
          }
          return /* @__PURE__ */ (0, import_jsx_runtime413.jsx)(
            import_react_router_dom132.Link,
            {
              to: link,
              className: "outline-none focus-within:shadow-borders-interactive-with-focus rounded-md [&:hover>div]:bg-ui-bg-component-hover",
              children: Inner5
            },
            variant.id
          );
        }) })
      ] });
    };
  }
});

// src/routes/inventory/inventory-detail/inventory-detail.tsx
var import_react_router_dom133, import_jsx_runtime414, InventoryDetail;
var init_inventory_detail = __esm({
  "src/routes/inventory/inventory-detail/inventory-detail.tsx"() {
    "use strict";
    import_react_router_dom133 = require("react-router-dom");
    init_skeleton2();
    init_pages();
    init_inventory();
    init_attributes_section();
    init_inventory_item_general_section();
    init_inventory_item_location_levels();
    init_inventory_item_reservations();
    init_variants_section();
    init_extensions();
    import_jsx_runtime414 = require("react/jsx-runtime");
    InventoryDetail = () => {
      const { id: id2 } = (0, import_react_router_dom133.useParams)();
      const initialData = (0, import_react_router_dom133.useLoaderData)();
      const {
        inventory_item,
        isPending: isLoading,
        isError,
        error
      } = useInventoryItem(
        id2,
        {
          fields: "*variants,*variants.product,*variants.options"
        },
        {
          initialData
        }
      );
      const { getWidgets } = useDashboardExtension();
      if (isLoading || !inventory_item) {
        return /* @__PURE__ */ (0, import_jsx_runtime414.jsx)(
          TwoColumnPageSkeleton,
          {
            showJSON: true,
            mainSections: 3,
            sidebarSections: 2,
            showMetadata: true
          }
        );
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime414.jsxs)(
        TwoColumnPage,
        {
          widgets: {
            after: getWidgets("inventory_item.details.after"),
            before: getWidgets("inventory_item.details.before"),
            sideAfter: getWidgets("inventory_item.details.side.after"),
            sideBefore: getWidgets("inventory_item.details.side.before")
          },
          data: inventory_item,
          showJSON: true,
          showMetadata: true,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime414.jsxs)(TwoColumnPage.Main, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime414.jsx)(InventoryItemGeneralSection, { inventoryItem: inventory_item }),
              /* @__PURE__ */ (0, import_jsx_runtime414.jsx)(InventoryItemLocationLevelsSection, { inventoryItem: inventory_item }),
              /* @__PURE__ */ (0, import_jsx_runtime414.jsx)(InventoryItemReservationsSection, { inventoryItem: inventory_item })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime414.jsxs)(TwoColumnPage.Sidebar, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime414.jsx)(
                InventoryItemVariantsSection,
                {
                  variants: inventory_item.variants
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime414.jsx)(InventoryItemAttributeSection, { inventoryItem: inventory_item })
            ] })
          ]
        }
      );
    };
  }
});

// src/routes/inventory/inventory-detail/loader.ts
var inventoryDetailQuery, inventoryItemLoader;
var init_loader16 = __esm({
  "src/routes/inventory/inventory-detail/loader.ts"() {
    "use strict";
    init_inventory();
    init_client2();
    init_query_client();
    inventoryDetailQuery = (id2) => ({
      queryKey: inventoryItemsQueryKeys.detail(id2),
      queryFn: async () => sdk.admin.inventoryItem.retrieve(id2, {
        fields: "*variants,*variants.product,*variants.options"
      })
    });
    inventoryItemLoader = async ({ params: params2 }) => {
      const id2 = params2.id;
      const query = inventoryDetailQuery(id2);
      return queryClient.getQueryData(
        query.queryKey
      ) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/routes/inventory/inventory-detail/index.ts
var inventory_detail_exports = {};
__export(inventory_detail_exports, {
  Component: () => InventoryDetail,
  loader: () => inventoryItemLoader
});
var init_inventory_detail2 = __esm({
  "src/routes/inventory/inventory-detail/index.ts"() {
    "use strict";
    init_inventory_detail();
    init_loader16();
  }
});

// src/routes/inventory/inventory-detail/components/edit-inventory-item/components/edit-item-form.tsx
var import_ui269, import_zod80, import_react_hook_form79, import_react_i18next298, import_zod81, import_jsx_runtime415, EditInventoryItemSchema, getDefaultValues4, EditInventoryItemForm;
var init_edit_item_form = __esm({
  "src/routes/inventory/inventory-detail/components/edit-inventory-item/components/edit-item-form.tsx"() {
    "use strict";
    import_ui269 = require("@medusajs/ui");
    init_modals();
    import_zod80 = require("@hookform/resolvers/zod");
    import_react_hook_form79 = require("react-hook-form");
    import_react_i18next298 = require("react-i18next");
    import_zod81 = require("zod");
    init_form2();
    init_keybound_form2();
    init_inventory();
    import_jsx_runtime415 = require("react/jsx-runtime");
    EditInventoryItemSchema = import_zod81.z.object({
      title: import_zod81.z.string().optional(),
      sku: import_zod81.z.string().min(1)
    });
    getDefaultValues4 = (item) => {
      return {
        title: item.title ?? void 0,
        sku: item.sku ?? void 0
      };
    };
    EditInventoryItemForm = ({ item }) => {
      const { t: t4 } = (0, import_react_i18next298.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form79.useForm)({
        defaultValues: getDefaultValues4(item),
        resolver: (0, import_zod80.zodResolver)(EditInventoryItemSchema)
      });
      const { mutateAsync, isPending: isLoading } = useUpdateInventoryItem(item.id);
      const handleSubmit = form.handleSubmit(async (values) => {
        mutateAsync(values, {
          onSuccess: () => {
            import_ui269.toast.success(t4("inventory.toast.updateItem"));
            handleSuccess();
          },
          onError: (e) => import_ui269.toast.error(e.message)
        });
      });
      return /* @__PURE__ */ (0, import_jsx_runtime415.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime415.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex flex-1 flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime415.jsxs)(RouteDrawer.Body, { className: "flex flex-1 flex-col gap-y-8 overflow-auto", children: [
              /* @__PURE__ */ (0, import_jsx_runtime415.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "title",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime415.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime415.jsx)(Form.Label, { children: t4("fields.title") }),
                      /* @__PURE__ */ (0, import_jsx_runtime415.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime415.jsx)(import_ui269.Input, { ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime415.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime415.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "sku",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime415.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime415.jsx)(Form.Label, { children: t4("fields.sku") }),
                      /* @__PURE__ */ (0, import_jsx_runtime415.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime415.jsx)(import_ui269.Input, { ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime415.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              )
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime415.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime415.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime415.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime415.jsx)(import_ui269.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime415.jsx)(import_ui269.Button, { type: "submit", size: "small", isLoading, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/inventory/inventory-detail/components/edit-inventory-item/edit-item-drawer.tsx
var import_ui270, import_react_i18next299, import_react_router_dom134, import_jsx_runtime416, InventoryItemEdit;
var init_edit_item_drawer = __esm({
  "src/routes/inventory/inventory-detail/components/edit-inventory-item/edit-item-drawer.tsx"() {
    "use strict";
    import_ui270 = require("@medusajs/ui");
    import_react_i18next299 = require("react-i18next");
    import_react_router_dom134 = require("react-router-dom");
    init_modals();
    init_inventory();
    init_edit_item_form();
    import_jsx_runtime416 = require("react/jsx-runtime");
    InventoryItemEdit = () => {
      const { id: id2 } = (0, import_react_router_dom134.useParams)();
      const { t: t4 } = (0, import_react_i18next299.useTranslation)();
      const {
        inventory_item: inventoryItem,
        isPending: isLoading,
        isError,
        error
      } = useInventoryItem(id2);
      const ready = !isLoading && inventoryItem;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime416.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime416.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime416.jsx)(import_ui270.Heading, { children: t4("inventory.editItemDetails") }) }),
        ready && /* @__PURE__ */ (0, import_jsx_runtime416.jsx)(EditInventoryItemForm, { item: inventoryItem })
      ] });
    };
  }
});

// src/routes/inventory/inventory-detail/components/edit-inventory-item/index.ts
var edit_inventory_item_exports = {};
__export(edit_inventory_item_exports, {
  Component: () => InventoryItemEdit
});
var init_edit_inventory_item = __esm({
  "src/routes/inventory/inventory-detail/components/edit-inventory-item/index.ts"() {
    "use strict";
    init_edit_item_drawer();
  }
});

// src/routes/inventory/inventory-detail/components/edit-inventory-item-attributes/components/edit-item-attributes-form.tsx
var import_ui271, import_zod82, import_react_hook_form80, import_react_i18next300, import_zod83, import_jsx_runtime417, EditInventoryItemAttributesSchema, getDefaultValues5, EditInventoryItemAttributesForm;
var init_edit_item_attributes_form = __esm({
  "src/routes/inventory/inventory-detail/components/edit-inventory-item-attributes/components/edit-item-attributes-form.tsx"() {
    "use strict";
    import_ui271 = require("@medusajs/ui");
    init_modals();
    import_zod82 = require("@hookform/resolvers/zod");
    import_react_hook_form80 = require("react-hook-form");
    import_react_i18next300 = require("react-i18next");
    import_zod83 = require("zod");
    init_form2();
    init_country_select2();
    init_keybound_form2();
    init_inventory();
    import_jsx_runtime417 = require("react/jsx-runtime");
    EditInventoryItemAttributesSchema = import_zod83.z.object({
      height: import_zod83.z.number().positive().optional(),
      width: import_zod83.z.number().positive().optional(),
      length: import_zod83.z.number().positive().optional(),
      weight: import_zod83.z.number().positive().optional(),
      mid_code: import_zod83.z.string().optional(),
      hs_code: import_zod83.z.string().optional(),
      origin_country: import_zod83.z.string().optional()
    });
    getDefaultValues5 = (item) => {
      return {
        height: item.height ?? void 0,
        width: item.width ?? void 0,
        length: item.length ?? void 0,
        weight: item.weight ?? void 0,
        mid_code: item.mid_code ?? void 0,
        hs_code: item.hs_code ?? void 0,
        origin_country: item.origin_country ?? void 0
      };
    };
    EditInventoryItemAttributesForm = ({
      item
    }) => {
      const { t: t4 } = (0, import_react_i18next300.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form80.useForm)({
        defaultValues: getDefaultValues5(item),
        resolver: (0, import_zod82.zodResolver)(EditInventoryItemAttributesSchema)
      });
      const { mutateAsync, isPending: isLoading } = useUpdateInventoryItem(item.id);
      const handleSubmit = form.handleSubmit(async (values) => {
        await mutateAsync(values, {
          onSuccess: () => {
            import_ui271.toast.success(t4("inventory.toast.updateItem"));
            handleSuccess();
          },
          onError: (error) => import_ui271.toast.error(error.message)
        });
      });
      return /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime417.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex flex-1 flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime417.jsxs)(RouteDrawer.Body, { className: "flex flex-1 flex-col gap-y-4 overflow-auto", children: [
              /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "height",
                  render: ({ field: { onChange, value, ...field } }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime417.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(Form.Label, { optional: true, children: t4("fields.height") }),
                      /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(
                        import_ui271.Input,
                        {
                          type: "number",
                          min: 0,
                          value: value || "",
                          onChange: (e) => {
                            const value2 = e.target.value;
                            if (value2 === "") {
                              onChange(null);
                            } else {
                              onChange(parseFloat(value2));
                            }
                          },
                          ...field
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "width",
                  render: ({ field: { onChange, value, ...field } }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime417.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(Form.Label, { optional: true, children: t4("fields.width") }),
                      /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(
                        import_ui271.Input,
                        {
                          type: "number",
                          min: 0,
                          value: value || "",
                          onChange: (e) => {
                            const value2 = e.target.value;
                            if (value2 === "") {
                              onChange(null);
                            } else {
                              onChange(parseFloat(value2));
                            }
                          },
                          ...field
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "length",
                  render: ({ field: { onChange, value, ...field } }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime417.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(Form.Label, { optional: true, children: t4("fields.length") }),
                      /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(
                        import_ui271.Input,
                        {
                          type: "number",
                          min: 0,
                          value: value || "",
                          onChange: (e) => {
                            const value2 = e.target.value;
                            if (value2 === "") {
                              onChange(null);
                            } else {
                              onChange(parseFloat(value2));
                            }
                          },
                          ...field
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "weight",
                  render: ({ field: { onChange, value, ...field } }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime417.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(Form.Label, { optional: true, children: t4("fields.weight") }),
                      /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(
                        import_ui271.Input,
                        {
                          type: "number",
                          min: 0,
                          value: value || "",
                          onChange: (e) => {
                            const value2 = e.target.value;
                            if (value2 === "") {
                              onChange(null);
                            } else {
                              onChange(parseFloat(value2));
                            }
                          },
                          ...field
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "mid_code",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime417.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(Form.Label, { optional: true, children: t4("fields.midCode") }),
                      /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(import_ui271.Input, { ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "hs_code",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime417.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(Form.Label, { optional: true, children: t4("fields.hsCode") }),
                      /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(import_ui271.Input, { ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "origin_country",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime417.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(Form.Label, { optional: true, children: t4("fields.countryOfOrigin") }),
                      /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(CountrySelect, { ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              )
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime417.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(import_ui271.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime417.jsx)(import_ui271.Button, { type: "submit", size: "small", isLoading, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/inventory/inventory-detail/components/edit-inventory-item-attributes/edit-item-attributes-drawer.tsx
var import_ui272, import_react_i18next301, import_react_router_dom135, import_jsx_runtime418, InventoryItemAttributesEdit;
var init_edit_item_attributes_drawer = __esm({
  "src/routes/inventory/inventory-detail/components/edit-inventory-item-attributes/edit-item-attributes-drawer.tsx"() {
    "use strict";
    import_ui272 = require("@medusajs/ui");
    import_react_i18next301 = require("react-i18next");
    import_react_router_dom135 = require("react-router-dom");
    init_modals();
    init_inventory();
    init_edit_item_attributes_form();
    import_jsx_runtime418 = require("react/jsx-runtime");
    InventoryItemAttributesEdit = () => {
      const { id: id2 } = (0, import_react_router_dom135.useParams)();
      const { t: t4 } = (0, import_react_i18next301.useTranslation)();
      const {
        inventory_item: inventoryItem,
        isPending: isLoading,
        isError,
        error
      } = useInventoryItem(id2);
      const ready = !isLoading && inventoryItem;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime418.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime418.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime418.jsx)(import_ui272.Heading, { children: t4("products.editAttributes") }) }),
        ready && /* @__PURE__ */ (0, import_jsx_runtime418.jsx)(EditInventoryItemAttributesForm, { item: inventoryItem })
      ] });
    };
  }
});

// src/routes/inventory/inventory-detail/components/edit-inventory-item-attributes/index.ts
var edit_inventory_item_attributes_exports = {};
__export(edit_inventory_item_attributes_exports, {
  Component: () => InventoryItemAttributesEdit
});
var init_edit_inventory_item_attributes = __esm({
  "src/routes/inventory/inventory-detail/components/edit-inventory-item-attributes/index.ts"() {
    "use strict";
    init_edit_item_attributes_drawer();
  }
});

// src/routes/inventory/inventory-metadata/inventory-metadata.tsx
var import_react_router_dom136, import_jsx_runtime419, InventoryItemMetadata;
var init_inventory_metadata = __esm({
  "src/routes/inventory/inventory-metadata/inventory-metadata.tsx"() {
    "use strict";
    import_react_router_dom136 = require("react-router-dom");
    init_api();
    init_metadata_form2();
    init_modals();
    import_jsx_runtime419 = require("react/jsx-runtime");
    InventoryItemMetadata = () => {
      const { id: id2 } = (0, import_react_router_dom136.useParams)();
      const { inventory_item, isPending, isError, error } = useInventoryItem(id2);
      const { mutateAsync, isPending: isMutating } = useUpdateInventoryItem(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime419.jsx)(RouteDrawer, { children: /* @__PURE__ */ (0, import_jsx_runtime419.jsx)(
        MetadataForm,
        {
          isPending,
          isMutating,
          hook: mutateAsync,
          metadata: inventory_item?.metadata
        }
      ) });
    };
  }
});

// src/routes/inventory/inventory-metadata/index.ts
var inventory_metadata_exports = {};
__export(inventory_metadata_exports, {
  Component: () => InventoryItemMetadata
});
var init_inventory_metadata2 = __esm({
  "src/routes/inventory/inventory-metadata/index.ts"() {
    "use strict";
    init_inventory_metadata();
  }
});

// src/routes/inventory/inventory-detail/components/manage-locations/components/location-item.tsx
var import_ui273, import_jsx_runtime420, LocationItem;
var init_location_item = __esm({
  "src/routes/inventory/inventory-detail/components/manage-locations/components/location-item.tsx"() {
    "use strict";
    import_ui273 = require("@medusajs/ui");
    import_jsx_runtime420 = require("react/jsx-runtime");
    LocationItem = ({
      selected,
      onSelect,
      location
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime420.jsxs)(
        "div",
        {
          className: (0, import_ui273.clx)(
            "flex w-full cursor-pointer gap-x-2 rounded-lg border px-2 py-2",
            {
              "border-ui-border-interactive ": selected
            }
          ),
          onClick: () => onSelect(!selected),
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime420.jsx)("div", { className: "h-5 w-5", children: /* @__PURE__ */ (0, import_jsx_runtime420.jsx)(
              import_ui273.Checkbox,
              {
                onClick: (e) => {
                  e.stopPropagation();
                  onSelect(!selected);
                },
                checked: selected
              }
            ) }),
            /* @__PURE__ */ (0, import_jsx_runtime420.jsxs)("div", { className: "flex w-full flex-col", children: [
              /* @__PURE__ */ (0, import_jsx_runtime420.jsx)(import_ui273.Text, { size: "small", leading: "compact", weight: "plus", children: location.name }),
              /* @__PURE__ */ (0, import_jsx_runtime420.jsx)(import_ui273.Text, { size: "small", leading: "compact", className: "text-ui-fg-subtle", children: [
                location.address?.address_1,
                location.address?.city,
                location.address?.country_code
              ].filter((el) => !!el).join(", ") })
            ] })
          ]
        }
      );
    };
  }
});

// src/routes/inventory/inventory-detail/components/manage-locations/components/manage-locations-form.tsx
var import_zod84, import_ui274, import_react_hook_form81, import_react_i18next302, import_zod85, import_react205, import_jsx_runtime421, EditInventoryItemAttributesSchema2, getDefaultValues6, ManageLocationsForm;
var init_manage_locations_form = __esm({
  "src/routes/inventory/inventory-detail/components/manage-locations/components/manage-locations-form.tsx"() {
    "use strict";
    import_zod84 = require("@hookform/resolvers/zod");
    import_ui274 = require("@medusajs/ui");
    import_react_hook_form81 = require("react-hook-form");
    import_react_i18next302 = require("react-i18next");
    import_zod85 = require("zod");
    init_modals();
    init_inventory();
    import_react205 = require("react");
    init_keybound_form2();
    init_location_item();
    import_jsx_runtime421 = require("react/jsx-runtime");
    EditInventoryItemAttributesSchema2 = import_zod85.z.object({
      locations: import_zod85.z.array(
        import_zod85.z.object({
          id: import_zod85.z.string(),
          location_id: import_zod85.z.string(),
          selected: import_zod85.z.boolean()
        })
      )
    });
    getDefaultValues6 = (allLocations, existingLevels) => {
      return {
        locations: allLocations.map((location) => ({
          ...location,
          location_id: location.id,
          selected: existingLevels.has(location.id)
        }))
      };
    };
    ManageLocationsForm = ({
      item,
      locations
    }) => {
      const existingLocationLevels = (0, import_react205.useMemo)(
        () => new Set(item.location_levels?.map((l) => l.location_id) ?? []),
        item.location_levels
      );
      const { t: t4 } = (0, import_react_i18next302.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form81.useForm)({
        defaultValues: getDefaultValues6(locations, existingLocationLevels),
        resolver: (0, import_zod84.zodResolver)(EditInventoryItemAttributesSchema2)
      });
      const { fields: locationFields, update: updateField } = (0, import_react_hook_form81.useFieldArray)({
        control: form.control,
        name: "locations"
      });
      (0, import_react205.useEffect)(() => {
        form.setValue(
          "locations",
          getDefaultValues6(locations, existingLocationLevels).locations
        );
      }, [existingLocationLevels, locations]);
      const { mutateAsync } = useBatchUpdateInventoryLevels(item.id);
      const handleSubmit = form.handleSubmit(async ({ locations: locations2 }) => {
        const [selectedLocations, unselectedLocations] = locations2.reduce(
          (acc, location) => {
            if (!location.selected && !existingLocationLevels.has(location.location_id) || location.selected && existingLocationLevels.has(location.location_id)) {
              return acc;
            }
            if (location.selected) {
              acc[0].push(location.location_id);
            } else {
              acc[1].push(location.location_id);
            }
            return acc;
          },
          [[], []]
        );
        if (selectedLocations.length === 0 && unselectedLocations.length === 0) {
          return handleSuccess();
        }
        await mutateAsync(
          {
            create: selectedLocations.map((location_id) => ({
              location_id
            })),
            delete: unselectedLocations
          },
          {
            onSuccess: () => {
              import_ui274.toast.success(t4("inventory.toast.updateLocations"));
              handleSuccess();
            },
            onError: (e) => {
              import_ui274.toast.error(e.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime421.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime421.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex flex-1 flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime421.jsxs)(RouteDrawer.Body, { className: "flex flex-1 flex-col gap-y-4 overflow-auto", children: [
              /* @__PURE__ */ (0, import_jsx_runtime421.jsxs)("div", { className: "text-ui-fg-subtle shadow-elevation-card-rest grid grid-rows-2 divide-y rounded-lg border", children: [
                /* @__PURE__ */ (0, import_jsx_runtime421.jsxs)("div", { className: "grid grid-cols-2 divide-x", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime421.jsx)(import_ui274.Text, { className: "px-2 py-1.5", size: "small", leading: "compact", children: t4("fields.title") }),
                  /* @__PURE__ */ (0, import_jsx_runtime421.jsx)(import_ui274.Text, { className: "px-2 py-1.5", size: "small", leading: "compact", children: item.title ?? "-" })
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime421.jsxs)("div", { className: "grid grid-cols-2 divide-x", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime421.jsx)(import_ui274.Text, { className: "px-2 py-1.5", size: "small", leading: "compact", children: t4("fields.sku") }),
                  /* @__PURE__ */ (0, import_jsx_runtime421.jsx)(import_ui274.Text, { className: "px-2 py-1.5", size: "small", leading: "compact", children: item.sku })
                ] })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime421.jsxs)("div", { className: "flex flex-col", children: [
                /* @__PURE__ */ (0, import_jsx_runtime421.jsx)(import_ui274.Text, { size: "small", weight: "plus", leading: "compact", children: t4("locations.domain") }),
                /* @__PURE__ */ (0, import_jsx_runtime421.jsxs)("div", { className: "text-ui-fg-subtle flex w-full justify-between", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime421.jsx)(import_ui274.Text, { size: "small", leading: "compact", children: t4("locations.selectLocations") }),
                  /* @__PURE__ */ (0, import_jsx_runtime421.jsxs)(import_ui274.Text, { size: "small", leading: "compact", children: [
                    "(",
                    t4("general.countOfTotalSelected", {
                      count: locationFields.filter((l) => l.selected).length,
                      total: locations.length
                    }),
                    ")"
                  ] })
                ] })
              ] }),
              locationFields.map((location, idx) => {
                return /* @__PURE__ */ (0, import_jsx_runtime421.jsx)(
                  LocationItem,
                  {
                    selected: location.selected,
                    location,
                    onSelect: () => updateField(idx, {
                      ...location,
                      selected: !location.selected
                    })
                  },
                  location.id
                );
              })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime421.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime421.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime421.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime421.jsx)(import_ui274.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime421.jsx)(import_ui274.Button, { type: "submit", size: "small", isLoading: false, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/inventory/inventory-detail/components/manage-locations/manage-locations-drawer.tsx
var import_ui275, import_react_i18next303, import_react_router_dom137, import_jsx_runtime422, ManageLocationsDrawer;
var init_manage_locations_drawer = __esm({
  "src/routes/inventory/inventory-detail/components/manage-locations/manage-locations-drawer.tsx"() {
    "use strict";
    import_ui275 = require("@medusajs/ui");
    import_react_i18next303 = require("react-i18next");
    import_react_router_dom137 = require("react-router-dom");
    init_modals();
    init_inventory();
    init_stock_locations();
    init_manage_locations_form();
    import_jsx_runtime422 = require("react/jsx-runtime");
    ManageLocationsDrawer = () => {
      const { id: id2 } = (0, import_react_router_dom137.useParams)();
      const { t: t4 } = (0, import_react_i18next303.useTranslation)();
      const {
        inventory_item: inventoryItem,
        isPending: isLoading,
        isError,
        error
      } = useInventoryItem(id2);
      const { stock_locations, isLoading: loadingLocations } = useStockLocations();
      const ready = !isLoading && !loadingLocations && inventoryItem && stock_locations;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime422.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime422.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime422.jsx)(import_ui275.Heading, { children: t4("inventory.manageLocations") }) }),
        ready && /* @__PURE__ */ (0, import_jsx_runtime422.jsx)(ManageLocationsForm, { item: inventoryItem, locations: stock_locations })
      ] });
    };
  }
});

// src/routes/inventory/inventory-detail/components/manage-locations/index.ts
var manage_locations_exports = {};
__export(manage_locations_exports, {
  Component: () => ManageLocationsDrawer
});
var init_manage_locations = __esm({
  "src/routes/inventory/inventory-detail/components/manage-locations/index.ts"() {
    "use strict";
    init_manage_locations_drawer();
  }
});

// src/routes/inventory/inventory-detail/components/adjust-inventory/components/adjust-inventory-form.tsx
var import_zod86, zod24, import_ui276, import_react_hook_form82, import_react_i18next304, import_jsx_runtime423, AttributeGridRow3, AdjustInventoryForm;
var init_adjust_inventory_form = __esm({
  "src/routes/inventory/inventory-detail/components/adjust-inventory/components/adjust-inventory-form.tsx"() {
    "use strict";
    import_zod86 = require("@hookform/resolvers/zod");
    zod24 = __toESM(require("zod"));
    import_ui276 = require("@medusajs/ui");
    init_modals();
    import_react_hook_form82 = require("react-hook-form");
    import_react_i18next304 = require("react-i18next");
    init_form2();
    init_keybound_form2();
    init_inventory();
    import_jsx_runtime423 = require("react/jsx-runtime");
    AttributeGridRow3 = ({
      title,
      value
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime423.jsxs)("div", { className: "grid grid-cols-2 divide-x", children: [
        /* @__PURE__ */ (0, import_jsx_runtime423.jsx)(import_ui276.Text, { className: "px-2 py-1.5", size: "small", leading: "compact", children: title }),
        /* @__PURE__ */ (0, import_jsx_runtime423.jsx)(import_ui276.Text, { className: "px-2 py-1.5", size: "small", leading: "compact", children: value })
      ] });
    };
    AdjustInventoryForm = ({
      item,
      level,
      location
    }) => {
      const { t: t4 } = (0, import_react_i18next304.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const AdjustInventorySchema = zod24.object({
        stocked_quantity: zod24.number().min(level.reserved_quantity)
      });
      const form = (0, import_react_hook_form82.useForm)({
        defaultValues: {
          stocked_quantity: level.stocked_quantity
        },
        resolver: (0, import_zod86.zodResolver)(AdjustInventorySchema)
      });
      const stockedQuantityUpdate = form.watch("stocked_quantity");
      const { mutateAsync, isPending: isLoading } = useUpdateInventoryLevel(
        item.id,
        level.location_id
      );
      const handleSubmit = form.handleSubmit(async (value) => {
        if (value.stocked_quantity === level.stocked_quantity) {
          return handleSuccess();
        }
        await mutateAsync(
          {
            stocked_quantity: value.stocked_quantity
          },
          {
            onSuccess: () => {
              import_ui276.toast.success(t4("inventory.toast.updateLevel"));
              handleSuccess();
            },
            onError: (e) => {
              import_ui276.toast.error(e.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime423.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime423.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex flex-1 flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime423.jsxs)(RouteDrawer.Body, { className: "flex flex-1 flex-col gap-y-8 overflow-auto", children: [
              /* @__PURE__ */ (0, import_jsx_runtime423.jsxs)("div", { className: "text-ui-fg-subtle shadow-elevation-card-rest grid grid-rows-4 divide-y rounded-lg border", children: [
                /* @__PURE__ */ (0, import_jsx_runtime423.jsx)(
                  AttributeGridRow3,
                  {
                    title: t4("fields.title"),
                    value: item.title ?? "-"
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime423.jsx)(AttributeGridRow3, { title: t4("fields.sku"), value: item.sku }),
                /* @__PURE__ */ (0, import_jsx_runtime423.jsx)(
                  AttributeGridRow3,
                  {
                    title: t4("locations.domain"),
                    value: location.name
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime423.jsx)(
                  AttributeGridRow3,
                  {
                    title: t4("inventory.reserved"),
                    value: level.reserved_quantity
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime423.jsx)(
                  AttributeGridRow3,
                  {
                    title: t4("inventory.available"),
                    value: stockedQuantityUpdate - level.reserved_quantity
                  }
                )
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime423.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "stocked_quantity",
                  render: ({ field: { onChange, value, ...field } }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime423.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime423.jsx)(Form.Label, { children: t4("fields.inStock") }),
                      /* @__PURE__ */ (0, import_jsx_runtime423.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime423.jsx)(
                        import_ui276.Input,
                        {
                          type: "number",
                          min: level.reserved_quantity,
                          value: value || "",
                          onChange: (e) => {
                            const value2 = e.target.value;
                            if (value2 === "") {
                              onChange(null);
                            } else {
                              onChange(parseFloat(value2));
                            }
                          },
                          ...field
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime423.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              )
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime423.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime423.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime423.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime423.jsx)(import_ui276.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime423.jsx)(import_ui276.Button, { type: "submit", size: "small", isLoading, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/inventory/inventory-detail/components/adjust-inventory/adjust-inventory-drawer.tsx
var import_ui277, import_react_i18next305, import_react_router_dom138, import_jsx_runtime424, AdjustInventoryDrawer;
var init_adjust_inventory_drawer = __esm({
  "src/routes/inventory/inventory-detail/components/adjust-inventory/adjust-inventory-drawer.tsx"() {
    "use strict";
    import_ui277 = require("@medusajs/ui");
    import_react_i18next305 = require("react-i18next");
    import_react_router_dom138 = require("react-router-dom");
    init_modals();
    init_inventory();
    init_stock_locations();
    init_adjust_inventory_form();
    import_jsx_runtime424 = require("react/jsx-runtime");
    AdjustInventoryDrawer = () => {
      const { id: id2, location_id } = (0, import_react_router_dom138.useParams)();
      const { t: t4 } = (0, import_react_i18next305.useTranslation)();
      const {
        inventory_item: inventoryItem,
        isPending: isLoading,
        isError,
        error
      } = useInventoryItem(id2);
      const inventoryLevel = inventoryItem?.location_levels.find(
        (level) => level.location_id === location_id
      );
      const { stock_location, isLoading: isLoadingLocation } = useStockLocation(
        location_id
      );
      const ready = !isLoading && inventoryItem && inventoryLevel && !isLoadingLocation && stock_location;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime424.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime424.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime424.jsx)(import_ui277.Heading, { children: t4("inventory.manageLocations") }) }),
        ready && /* @__PURE__ */ (0, import_jsx_runtime424.jsx)(
          AdjustInventoryForm,
          {
            item: inventoryItem,
            level: inventoryLevel,
            location: stock_location
          }
        )
      ] });
    };
  }
});

// src/routes/inventory/inventory-detail/components/adjust-inventory/index.ts
var adjust_inventory_exports = {};
__export(adjust_inventory_exports, {
  Component: () => AdjustInventoryDrawer
});
var init_adjust_inventory = __esm({
  "src/routes/inventory/inventory-detail/components/adjust-inventory/index.ts"() {
    "use strict";
    init_adjust_inventory_drawer();
  }
});

// src/routes/settings/settings.tsx
var import_react206, import_react_router_dom139, import_jsx_runtime425, Settings;
var init_settings = __esm({
  "src/routes/settings/settings.tsx"() {
    "use strict";
    import_react206 = require("react");
    import_react_router_dom139 = require("react-router-dom");
    import_jsx_runtime425 = require("react/jsx-runtime");
    Settings = () => {
      const navigate = (0, import_react_router_dom139.useNavigate)();
      const location = (0, import_react_router_dom139.useLocation)();
      (0, import_react206.useEffect)(() => {
        if (location.pathname === "/settings") {
          navigate("/settings/store", { replace: true });
        }
      }, [location.pathname, navigate]);
      return /* @__PURE__ */ (0, import_jsx_runtime425.jsx)(import_react_router_dom139.Outlet, {});
    };
  }
});

// src/routes/settings/index.ts
var settings_exports = {};
__export(settings_exports, {
  Component: () => Settings
});
var init_settings2 = __esm({
  "src/routes/settings/index.ts"() {
    "use strict";
    init_settings();
  }
});

// src/routes/profile/profile-detail/components/profile-general-section/profile-general-section.tsx
var import_icons122, import_ui278, import_react_i18next306, import_jsx_runtime426, ProfileGeneralSection;
var init_profile_general_section = __esm({
  "src/routes/profile/profile-detail/components/profile-general-section/profile-general-section.tsx"() {
    "use strict";
    import_icons122 = require("@medusajs/icons");
    import_ui278 = require("@medusajs/ui");
    import_react_i18next306 = require("react-i18next");
    init_action_menu2();
    init_languages();
    import_jsx_runtime426 = require("react/jsx-runtime");
    ProfileGeneralSection = ({ user }) => {
      const { i18n: i18n4, t: t4 } = (0, import_react_i18next306.useTranslation)();
      const name = [user.first_name, user.last_name].filter(Boolean).join(" ");
      return /* @__PURE__ */ (0, import_jsx_runtime426.jsxs)(import_ui278.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime426.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime426.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime426.jsx)(import_ui278.Heading, { children: t4("profile.domain") }),
            /* @__PURE__ */ (0, import_jsx_runtime426.jsx)(import_ui278.Text, { className: "text-ui-fg-subtle", size: "small", children: t4("profile.manageYourProfileDetails") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime426.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      label: t4("actions.edit"),
                      to: "edit",
                      icon: /* @__PURE__ */ (0, import_jsx_runtime426.jsx)(import_icons122.PencilSquare, {})
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime426.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime426.jsx)(import_ui278.Text, { size: "small", leading: "compact", weight: "plus", children: t4("fields.name") }),
          /* @__PURE__ */ (0, import_jsx_runtime426.jsx)(import_ui278.Text, { size: "small", leading: "compact", children: name || "-" })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime426.jsxs)("div", { className: "grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime426.jsx)(import_ui278.Text, { size: "small", leading: "compact", weight: "plus", children: t4("fields.email") }),
          /* @__PURE__ */ (0, import_jsx_runtime426.jsx)(import_ui278.Text, { size: "small", leading: "compact", children: user.email })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime426.jsxs)("div", { className: "grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime426.jsx)(import_ui278.Text, { size: "small", leading: "compact", weight: "plus", children: t4("profile.fields.languageLabel") }),
          /* @__PURE__ */ (0, import_jsx_runtime426.jsx)(import_ui278.Text, { size: "small", leading: "compact", children: languages.find((lang) => lang.code === i18n4.language)?.display_name || "-" })
        ] })
      ] });
    };
  }
});

// src/routes/profile/profile-detail/components/profile-general-section/index.ts
var init_profile_general_section2 = __esm({
  "src/routes/profile/profile-detail/components/profile-general-section/index.ts"() {
    "use strict";
    init_profile_general_section();
  }
});

// src/routes/profile/profile-detail/profile-detail.tsx
var import_jsx_runtime427, ProfileDetail;
var init_profile_detail = __esm({
  "src/routes/profile/profile-detail/profile-detail.tsx"() {
    "use strict";
    init_users();
    init_profile_general_section2();
    init_skeleton2();
    init_pages();
    init_extensions();
    import_jsx_runtime427 = require("react/jsx-runtime");
    ProfileDetail = () => {
      const { user, isPending: isLoading, isError, error } = useMe();
      const { getWidgets } = useDashboardExtension();
      if (isLoading || !user) {
        return /* @__PURE__ */ (0, import_jsx_runtime427.jsx)(SingleColumnPageSkeleton, { sections: 1 });
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime427.jsx)(
        SingleColumnPage,
        {
          widgets: {
            after: getWidgets("profile.details.after"),
            before: getWidgets("profile.details.before")
          },
          children: /* @__PURE__ */ (0, import_jsx_runtime427.jsx)(ProfileGeneralSection, { user })
        }
      );
    };
  }
});

// src/routes/profile/profile-detail/index.ts
var profile_detail_exports = {};
__export(profile_detail_exports, {
  Component: () => ProfileDetail
});
var init_profile_detail2 = __esm({
  "src/routes/profile/profile-detail/index.ts"() {
    "use strict";
    init_profile_detail();
  }
});

// src/routes/profile/profile-edit/components/edit-profile-form/edit-profile-form.tsx
var import_zod87, import_ui279, import_react_hook_form83, import_react_i18next307, zod25, import_jsx_runtime428, EditProfileSchema, EditProfileForm;
var init_edit_profile_form = __esm({
  "src/routes/profile/profile-edit/components/edit-profile-form/edit-profile-form.tsx"() {
    "use strict";
    import_zod87 = require("@hookform/resolvers/zod");
    import_ui279 = require("@medusajs/ui");
    import_react_hook_form83 = require("react-hook-form");
    import_react_i18next307 = require("react-i18next");
    zod25 = __toESM(require("zod"));
    init_form2();
    init_modals();
    init_keybound_form2();
    init_users();
    init_languages();
    import_jsx_runtime428 = require("react/jsx-runtime");
    EditProfileSchema = zod25.object({
      first_name: zod25.string().optional(),
      last_name: zod25.string().optional(),
      language: zod25.string()
      // usage_insights: zod.boolean(),
    });
    EditProfileForm = ({ user }) => {
      const { t: t4, i18n: i18n4 } = (0, import_react_i18next307.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form83.useForm)({
        defaultValues: {
          first_name: user.first_name ?? "",
          last_name: user.last_name ?? "",
          language: i18n4.language
          // usage_insights: usageInsights,
        },
        resolver: (0, import_zod87.zodResolver)(EditProfileSchema)
      });
      const changeLanguage = async (code) => {
        await i18n4.changeLanguage(code);
      };
      const sortedLanguages = languages.sort(
        (a, b) => a.display_name.localeCompare(b.display_name)
      );
      const { mutateAsync, isPending } = useUpdateUser(user.id);
      const handleSubmit = form.handleSubmit(async (values) => {
        await mutateAsync(
          {
            first_name: values.first_name,
            last_name: values.last_name
          },
          {
            onError: (error) => {
              import_ui279.toast.error(error.message);
              return;
            }
          }
        );
        await changeLanguage(values.language);
        import_ui279.toast.success(t4("profile.toast.edit"));
        handleSuccess();
      });
      return /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime428.jsxs)(KeyboundForm, { onSubmit: handleSubmit, className: "flex flex-1 flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(RouteDrawer.Body, { children: /* @__PURE__ */ (0, import_jsx_runtime428.jsxs)("div", { className: "flex flex-col gap-y-8", children: [
          /* @__PURE__ */ (0, import_jsx_runtime428.jsxs)("div", { className: "grid grid-cols-2 gap-4", children: [
            /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "first_name",
                render: ({ field }) => /* @__PURE__ */ (0, import_jsx_runtime428.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(Form.Label, { children: t4("fields.firstName") }),
                  /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(import_ui279.Input, { ...field }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(Form.ErrorMessage, {})
                ] })
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "last_name",
                render: ({ field }) => /* @__PURE__ */ (0, import_jsx_runtime428.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(Form.Label, { children: t4("fields.lastName") }),
                  /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(import_ui279.Input, { ...field }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(Form.ErrorMessage, {})
                ] })
              }
            )
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "language",
              render: ({ field: { ref, ...field } }) => /* @__PURE__ */ (0, import_jsx_runtime428.jsxs)(Form.Item, { className: "gap-y-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime428.jsxs)("div", { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(Form.Label, { children: t4("profile.fields.languageLabel") }),
                  /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(Form.Hint, { children: t4("profile.edit.languageHint") })
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime428.jsxs)("div", { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime428.jsxs)(import_ui279.Select, { ...field, onValueChange: field.onChange, children: [
                    /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(import_ui279.Select.Trigger, { ref, className: "py-1 text-[13px]", children: /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(
                      import_ui279.Select.Value,
                      {
                        placeholder: t4("profile.edit.languagePlaceholder"),
                        children: sortedLanguages.find(
                          (language) => language.code === field.value
                        )?.display_name
                      }
                    ) }),
                    /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(import_ui279.Select.Content, { children: languages.map((language) => /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(
                      import_ui279.Select.Item,
                      {
                        value: language.code,
                        children: language.display_name
                      },
                      language.code
                    )) })
                  ] }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(Form.ErrorMessage, {})
                ] })
              ] })
            }
          )
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime428.jsxs)("div", { className: "flex items-center gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(import_ui279.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime428.jsx)(import_ui279.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
        ] }) })
      ] }) });
    };
  }
});

// src/routes/profile/profile-edit/profile-edit.tsx
var import_ui280, import_react_i18next308, import_jsx_runtime429, ProfileEdit;
var init_profile_edit = __esm({
  "src/routes/profile/profile-edit/profile-edit.tsx"() {
    "use strict";
    import_ui280 = require("@medusajs/ui");
    import_react_i18next308 = require("react-i18next");
    init_modals();
    init_users();
    init_edit_profile_form();
    import_jsx_runtime429 = require("react/jsx-runtime");
    ProfileEdit = () => {
      const { user, isPending: isLoading, isError, error } = useMe();
      const { t: t4 } = (0, import_react_i18next308.useTranslation)();
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime429.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime429.jsx)(RouteDrawer.Header, { className: "capitalize", children: /* @__PURE__ */ (0, import_jsx_runtime429.jsx)(import_ui280.Heading, { children: t4("profile.edit.header") }) }),
        !isLoading && user && /* @__PURE__ */ (0, import_jsx_runtime429.jsx)(EditProfileForm, { user, usageInsights: false })
      ] });
    };
  }
});

// src/routes/profile/profile-edit/index.ts
var profile_edit_exports = {};
__export(profile_edit_exports, {
  Component: () => ProfileEdit
});
var init_profile_edit2 = __esm({
  "src/routes/profile/profile-edit/index.ts"() {
    "use strict";
    init_profile_edit();
  }
});

// src/components/table/table-cells/region/countries-cell/countries-cell.tsx
var import_react_i18next309, import_jsx_runtime430, CountriesCell, CountriesHeader;
var init_countries_cell = __esm({
  "src/components/table/table-cells/region/countries-cell/countries-cell.tsx"() {
    "use strict";
    import_react_i18next309 = require("react-i18next");
    init_countries();
    init_list_summary2();
    init_placeholder_cell2();
    import_jsx_runtime430 = require("react/jsx-runtime");
    CountriesCell = ({ countries: countries2 }) => {
      const { t: t4 } = (0, import_react_i18next309.useTranslation)();
      if (!countries2 || countries2.length === 0) {
        return /* @__PURE__ */ (0, import_jsx_runtime430.jsx)(PlaceholderCell, {});
      }
      return /* @__PURE__ */ (0, import_jsx_runtime430.jsx)("div", { className: "flex size-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime430.jsx)(
        ListSummary,
        {
          list: countries2.map(
            (country) => countries.find((c) => c.iso_2 === country.iso_2).display_name
          )
        }
      ) });
    };
    CountriesHeader = () => {
      const { t: t4 } = (0, import_react_i18next309.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime430.jsx)("div", { className: "flex size-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime430.jsx)("span", { children: t4("fields.countries") }) });
    };
  }
});

// src/components/table/table-cells/region/countries-cell/index.ts
var init_countries_cell2 = __esm({
  "src/components/table/table-cells/region/countries-cell/index.ts"() {
    "use strict";
    init_countries_cell();
  }
});

// src/components/table/table-cells/region/payment-providers-cell/payment-providers-cell.tsx
var import_react_i18next310, import_jsx_runtime431, PaymentProvidersCell, PaymentProvidersHeader;
var init_payment_providers_cell = __esm({
  "src/components/table/table-cells/region/payment-providers-cell/payment-providers-cell.tsx"() {
    "use strict";
    import_react_i18next310 = require("react-i18next");
    init_format_provider();
    init_placeholder_cell2();
    init_list_summary2();
    import_jsx_runtime431 = require("react/jsx-runtime");
    PaymentProvidersCell = ({
      paymentProviders
    }) => {
      if (!paymentProviders || paymentProviders.length === 0) {
        return /* @__PURE__ */ (0, import_jsx_runtime431.jsx)(PlaceholderCell, {});
      }
      const displayValues = paymentProviders.map((p) => formatProvider(p.id));
      return /* @__PURE__ */ (0, import_jsx_runtime431.jsx)("div", { className: "flex size-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime431.jsx)(ListSummary, { list: displayValues }) });
    };
    PaymentProvidersHeader = () => {
      const { t: t4 } = (0, import_react_i18next310.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime431.jsx)("div", { className: "flex size-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime431.jsx)("span", { className: "truncate", children: t4("fields.paymentProviders") }) });
    };
  }
});

// src/components/table/table-cells/region/payment-providers-cell/index.ts
var init_payment_providers_cell2 = __esm({
  "src/components/table/table-cells/region/payment-providers-cell/index.ts"() {
    "use strict";
    init_payment_providers_cell();
  }
});

// src/components/table/table-cells/region/region-cell/region-cell.tsx
var import_react_i18next311, import_jsx_runtime432, RegionCell, RegionHeader;
var init_region_cell = __esm({
  "src/components/table/table-cells/region/region-cell/region-cell.tsx"() {
    "use strict";
    import_react_i18next311 = require("react-i18next");
    import_jsx_runtime432 = require("react/jsx-runtime");
    RegionCell = ({ name }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime432.jsx)("div", { className: "flex h-full w-full items-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime432.jsx)("span", { className: "truncate", children: name }) });
    };
    RegionHeader = () => {
      const { t: t4 } = (0, import_react_i18next311.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime432.jsx)("div", { className: "flex h-full w-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime432.jsx)("span", { className: "truncate", children: t4("fields.name") }) });
    };
  }
});

// src/components/table/table-cells/region/region-cell/index.ts
var init_region_cell2 = __esm({
  "src/components/table/table-cells/region/region-cell/index.ts"() {
    "use strict";
    init_region_cell();
  }
});

// src/hooks/table/columns/use-region-table-columns.tsx
var import_react_table51, import_react207, import_jsx_runtime433, columnHelper52, useRegionTableColumns;
var init_use_region_table_columns = __esm({
  "src/hooks/table/columns/use-region-table-columns.tsx"() {
    "use strict";
    import_react_table51 = require("@tanstack/react-table");
    import_react207 = require("react");
    init_countries_cell2();
    init_payment_providers_cell2();
    init_region_cell2();
    import_jsx_runtime433 = require("react/jsx-runtime");
    columnHelper52 = (0, import_react_table51.createColumnHelper)();
    useRegionTableColumns = () => {
      return (0, import_react207.useMemo)(
        () => [
          columnHelper52.accessor("name", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime433.jsx)(RegionHeader, {}),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime433.jsx)(RegionCell, { name: getValue2() })
          }),
          columnHelper52.accessor("countries", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime433.jsx)(CountriesHeader, {}),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime433.jsx)(CountriesCell, { countries: getValue2() })
          }),
          columnHelper52.accessor("payment_providers", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime433.jsx)(PaymentProvidersHeader, {}),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime433.jsx)(PaymentProvidersCell, { paymentProviders: getValue2() })
          })
        ],
        []
      );
    };
  }
});

// src/routes/regions/region-list/components/region-list-table/region-list-table.tsx
var import_icons123, import_ui281, import_react_query68, import_react_table52, import_react208, import_react_i18next312, import_react_router_dom140, import_jsx_runtime434, PAGE_SIZE39, RegionListTable, RegionActions, columnHelper53, useColumns27;
var init_region_list_table = __esm({
  "src/routes/regions/region-list/components/region-list-table/region-list-table.tsx"() {
    "use strict";
    import_icons123 = require("@medusajs/icons");
    import_ui281 = require("@medusajs/ui");
    import_react_query68 = require("@tanstack/react-query");
    import_react_table52 = require("@tanstack/react-table");
    import_react208 = require("react");
    import_react_i18next312 = require("react-i18next");
    import_react_router_dom140 = require("react-router-dom");
    init_action_menu2();
    init_data_table2();
    init_regions();
    init_use_region_table_columns();
    init_use_region_table_filters();
    init_use_region_table_query();
    init_use_data_table();
    import_jsx_runtime434 = require("react/jsx-runtime");
    PAGE_SIZE39 = 20;
    RegionListTable = () => {
      const { t: t4 } = (0, import_react_i18next312.useTranslation)();
      const { searchParams, raw } = useRegionTableQuery({ pageSize: PAGE_SIZE39 });
      const {
        regions,
        count: count3,
        isPending: isLoading,
        isError,
        error
      } = useRegions(
        {
          ...searchParams,
          fields: "*payment_providers"
        },
        {
          placeholderData: import_react_query68.keepPreviousData
        }
      );
      const filters = useRegionTableFilters();
      const columns = useColumns27();
      const { table } = useDataTable({
        data: regions ?? [],
        columns,
        count: count3,
        enablePagination: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE39
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime434.jsxs)(import_ui281.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime434.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime434.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime434.jsx)(import_ui281.Heading, { children: t4("regions.domain") }),
            /* @__PURE__ */ (0, import_jsx_runtime434.jsx)(import_ui281.Text, { className: "text-ui-fg-subtle", size: "small", children: t4("regions.subtitle") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime434.jsx)(import_react_router_dom140.Link, { to: "/settings/regions/create", children: /* @__PURE__ */ (0, import_jsx_runtime434.jsx)(import_ui281.Button, { size: "small", variant: "secondary", children: t4("actions.create") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime434.jsx)(
          DataTable,
          {
            table,
            columns,
            count: count3,
            pageSize: PAGE_SIZE39,
            isLoading,
            filters,
            orderBy: [
              { key: "name", label: t4("fields.name") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            navigateTo: (row) => `${row.original.id}`,
            pagination: true,
            search: true,
            queryObject: raw,
            noRecords: {
              message: t4("regions.list.noRecordsMessage")
            }
          }
        )
      ] });
    };
    RegionActions = ({ region }) => {
      const { t: t4 } = (0, import_react_i18next312.useTranslation)();
      const prompt = (0, import_ui281.usePrompt)();
      const { mutateAsync } = useDeleteRegion(region.id);
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("regions.deleteRegionWarning", {
            name: region.name
          }),
          verificationText: region.name,
          verificationInstruction: t4("general.typeToConfirm"),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            import_ui281.toast.success(t4("regions.toast.delete"));
          },
          onError: (e) => {
            import_ui281.toast.error(e.message);
          }
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime434.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  label: t4("actions.edit"),
                  to: `/settings/regions/${region.id}/edit`,
                  icon: /* @__PURE__ */ (0, import_jsx_runtime434.jsx)(import_icons123.PencilSquare, {})
                }
              ]
            },
            {
              actions: [
                {
                  label: t4("actions.delete"),
                  onClick: handleDelete,
                  icon: /* @__PURE__ */ (0, import_jsx_runtime434.jsx)(import_icons123.Trash, {})
                }
              ]
            }
          ]
        }
      );
    };
    columnHelper53 = (0, import_react_table52.createColumnHelper)();
    useColumns27 = () => {
      const base = useRegionTableColumns();
      return (0, import_react208.useMemo)(
        () => [
          ...base,
          columnHelper53.display({
            id: "actions",
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime434.jsx)(RegionActions, { region: row.original });
            }
          })
        ],
        [base]
      );
    };
  }
});

// src/routes/regions/region-list/components/region-list-table/index.ts
var init_region_list_table2 = __esm({
  "src/routes/regions/region-list/components/region-list-table/index.ts"() {
    "use strict";
    init_region_list_table();
  }
});

// src/routes/regions/region-list/region-list.tsx
var import_jsx_runtime435, RegionList;
var init_region_list = __esm({
  "src/routes/regions/region-list/region-list.tsx"() {
    "use strict";
    init_pages();
    init_extensions();
    init_region_list_table2();
    import_jsx_runtime435 = require("react/jsx-runtime");
    RegionList = () => {
      const { getWidgets } = useDashboardExtension();
      return /* @__PURE__ */ (0, import_jsx_runtime435.jsx)(
        SingleColumnPage,
        {
          widgets: {
            before: getWidgets("region.list.before"),
            after: getWidgets("region.list.after")
          },
          children: /* @__PURE__ */ (0, import_jsx_runtime435.jsx)(RegionListTable, {})
        }
      );
    };
  }
});

// src/routes/regions/region-list/index.ts
var region_list_exports = {};
__export(region_list_exports, {
  Component: () => RegionList
});
var init_region_list2 = __esm({
  "src/routes/regions/region-list/index.ts"() {
    "use strict";
    init_region_list();
  }
});

// src/routes/regions/common/hooks/use-countries.tsx
var import_react_router_dom141, acceptedOrderKeys, useCountries;
var init_use_countries = __esm({
  "src/routes/regions/common/hooks/use-countries.tsx"() {
    "use strict";
    import_react_router_dom141 = require("react-router-dom");
    acceptedOrderKeys = ["name", "code"];
    useCountries = ({
      countries: countries2,
      q,
      order = "name",
      limit,
      offset: offset4 = 0
    }) => {
      const data = countries2.slice(offset4, offset4 + limit);
      if (order) {
        const direction = order.startsWith("-") ? -1 : 1;
        const key = order.replace("-", "");
        if (!acceptedOrderKeys.includes(key)) {
          console.log("The key ${key} is not a valid order key");
          throw (0, import_react_router_dom141.json)(`The key ${key} is not a valid order key`, 500);
        }
        const sortKey = key === "code" ? "iso_2" : "name";
        data.sort((a, b) => {
          if (a[sortKey] === null && b[sortKey] === null) {
            return 0;
          }
          if (a[sortKey] === null) {
            return direction;
          }
          if (b[sortKey] === null) {
            return -direction;
          }
          return a[sortKey] > b[sortKey] ? direction : -direction;
        });
      }
      if (q) {
        const query = q.toLowerCase();
        const results = countries2.filter(
          (c) => c.name.toLowerCase().includes(query) || c.iso_2.toLowerCase().includes(query)
        );
        return {
          countries: results,
          count: results.length
        };
      }
      return {
        countries: data,
        count: countries2.length
      };
    };
  }
});

// src/routes/regions/common/hooks/use-country-table-columns.tsx
var import_react_table53, import_react209, import_react_i18next313, import_jsx_runtime436, columnHelper54, useCountryTableColumns;
var init_use_country_table_columns = __esm({
  "src/routes/regions/common/hooks/use-country-table-columns.tsx"() {
    "use strict";
    import_react_table53 = require("@tanstack/react-table");
    import_react209 = require("react");
    import_react_i18next313 = require("react-i18next");
    import_jsx_runtime436 = require("react/jsx-runtime");
    columnHelper54 = (0, import_react_table53.createColumnHelper)();
    useCountryTableColumns = () => {
      const { t: t4 } = (0, import_react_i18next313.useTranslation)();
      return (0, import_react209.useMemo)(
        () => [
          columnHelper54.accessor("display_name", {
            header: t4("fields.name"),
            cell: ({ getValue: getValue2 }) => getValue2()
          }),
          columnHelper54.accessor("iso_2", {
            header: t4("fields.code"),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime436.jsx)("span", { className: "uppercase", children: getValue2() })
          })
        ],
        [t4]
      );
    };
  }
});

// src/routes/regions/common/hooks/use-country-table-query.tsx
var useCountryTableQuery;
var init_use_country_table_query = __esm({
  "src/routes/regions/common/hooks/use-country-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useCountryTableQuery = ({
      pageSize,
      prefix
    }) => {
      const raw = useQueryParams(["order", "q", "offset"], prefix);
      const { offset: offset4, order, q } = raw;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? parseInt(offset4, 10) : 0,
        order,
        q
      };
      return {
        searchParams,
        raw
      };
    };
  }
});

// src/routes/regions/region-create/components/create-region-form/create-region-form.tsx
var import_zod88, import_icons124, import_ui282, import_react_table54, import_react210, import_react_hook_form84, import_react_i18next314, zod26, import_jsx_runtime437, CreateRegionSchema, PREFIX15, PAGE_SIZE40, STACKED_MODAL_ID2, CreateRegionForm, columnHelper55, useColumns28, CountryTag;
var init_create_region_form = __esm({
  "src/routes/regions/region-create/components/create-region-form/create-region-form.tsx"() {
    "use strict";
    import_zod88 = require("@hookform/resolvers/zod");
    import_icons124 = require("@medusajs/icons");
    import_ui282 = require("@medusajs/ui");
    import_react_table54 = require("@tanstack/react-table");
    import_react210 = require("react");
    import_react_hook_form84 = require("react-hook-form");
    import_react_i18next314 = require("react-i18next");
    zod26 = __toESM(require("zod"));
    init_form2();
    init_combobox2();
    init_modals();
    init_data_table2();
    init_keybound_form2();
    init_regions();
    init_use_data_table();
    init_countries();
    init_format_provider();
    init_use_countries();
    init_use_country_table_columns();
    init_use_country_table_query();
    import_jsx_runtime437 = require("react/jsx-runtime");
    CreateRegionSchema = zod26.object({
      name: zod26.string().min(1),
      currency_code: zod26.string().min(2, "Select a currency"),
      automatic_taxes: zod26.boolean(),
      is_tax_inclusive: zod26.boolean(),
      countries: zod26.array(zod26.object({ code: zod26.string(), name: zod26.string() })),
      payment_providers: zod26.array(zod26.string()).min(1)
    });
    PREFIX15 = "cr";
    PAGE_SIZE40 = 50;
    STACKED_MODAL_ID2 = "countries-modal";
    CreateRegionForm = ({
      currencies: currencies2,
      paymentProviders
    }) => {
      const { setIsOpen } = useStackedModal();
      const [rowSelection, setRowSelection] = (0, import_react210.useState)({});
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form84.useForm)({
        defaultValues: {
          name: "",
          currency_code: "",
          automatic_taxes: true,
          is_tax_inclusive: false,
          countries: [],
          payment_providers: []
        },
        resolver: (0, import_zod88.zodResolver)(CreateRegionSchema)
      });
      const selectedCountries = (0, import_react_hook_form84.useWatch)({
        control: form.control,
        name: "countries",
        defaultValue: []
      });
      const { t: t4 } = (0, import_react_i18next314.useTranslation)();
      const { mutateAsync: createRegion, isPending: isPendingRegion } = useCreateRegion();
      const handleSubmit = form.handleSubmit(async (values) => {
        await createRegion(
          {
            name: values.name,
            countries: values.countries.map((c) => c.code),
            currency_code: values.currency_code,
            payment_providers: values.payment_providers,
            automatic_taxes: values.automatic_taxes,
            is_tax_inclusive: values.is_tax_inclusive
          },
          {
            onSuccess: ({ region }) => {
              import_ui282.toast.success(t4("regions.toast.create"));
              handleSuccess(`../${region.id}`);
            },
            onError: (e) => {
              import_ui282.toast.error(e.message);
            }
          }
        );
      });
      const { searchParams, raw } = useCountryTableQuery({
        pageSize: PAGE_SIZE40,
        prefix: PREFIX15
      });
      const { countries: countries2, count: count3 } = useCountries({
        countries: countries.map((c, i) => ({
          display_name: c.display_name,
          name: c.name,
          id: i,
          iso_2: c.iso_2,
          iso_3: c.iso_3,
          num_code: c.num_code,
          region_id: null,
          region: {}
        })),
        ...searchParams
      });
      const columns = useColumns28();
      const { table } = useDataTable({
        data: countries2 || [],
        columns,
        count: count3,
        enablePagination: true,
        enableRowSelection: true,
        rowSelection: {
          state: rowSelection,
          updater: setRowSelection
        },
        getRowId: (row) => row.iso_2,
        pageSize: PAGE_SIZE40,
        prefix: PREFIX15
      });
      const saveCountries = () => {
        const selected = Object.keys(rowSelection).filter(
          (key) => rowSelection[key]
        );
        form.setValue(
          "countries",
          selected.map((key) => ({
            code: key,
            name: countries.find((c) => c.iso_2 === key).display_name
          })),
          { shouldDirty: true, shouldTouch: true }
        );
        setIsOpen(STACKED_MODAL_ID2, false);
      };
      const removeCountry = (code) => {
        const update = selectedCountries.filter((c) => c.code !== code);
        const ids = update.map((c) => c.code).reduce((acc, c) => {
          acc[c] = true;
          return acc;
        }, {});
        form.setValue("countries", update, { shouldDirty: true, shouldTouch: true });
        setRowSelection(ids);
      };
      const clearCountries = () => {
        form.setValue("countries", [], { shouldDirty: true, shouldTouch: true });
        setRowSelection({});
      };
      return /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime437.jsxs)(
        KeyboundForm,
        {
          className: "flex h-full flex-col overflow-hidden",
          onSubmit: handleSubmit,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime437.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(import_ui282.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(import_ui282.Button, { size: "small", type: "submit", isLoading: isPendingRegion, children: t4("actions.save") })
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(RouteFocusModal.Body, { className: "flex overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(
              "div",
              {
                className: (0, import_ui282.clx)(
                  "flex h-full w-full flex-col items-center overflow-y-auto p-16"
                ),
                id: "form-section",
                children: /* @__PURE__ */ (0, import_jsx_runtime437.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime437.jsxs)("div", { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(import_ui282.Heading, { children: t4("regions.createRegion") }),
                    /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(import_ui282.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("regions.createRegionHint") })
                  ] }),
                  /* @__PURE__ */ (0, import_jsx_runtime437.jsx)("div", { className: "flex flex-col gap-y-4", children: /* @__PURE__ */ (0, import_jsx_runtime437.jsxs)("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2", children: [
                    /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(
                      Form.Field,
                      {
                        control: form.control,
                        name: "name",
                        render: ({ field }) => {
                          return /* @__PURE__ */ (0, import_jsx_runtime437.jsxs)(Form.Item, { children: [
                            /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(Form.Label, { children: t4("fields.name") }),
                            /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(import_ui282.Input, { ...field }) }),
                            /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(Form.ErrorMessage, {})
                          ] });
                        }
                      }
                    ),
                    /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(
                      Form.Field,
                      {
                        control: form.control,
                        name: "currency_code",
                        render: ({ field: { onChange, ref, ...field } }) => {
                          return /* @__PURE__ */ (0, import_jsx_runtime437.jsxs)(Form.Item, { children: [
                            /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(Form.Label, { children: t4("fields.currency") }),
                            /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime437.jsxs)(import_ui282.Select, { ...field, onValueChange: onChange, children: [
                              /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(import_ui282.Select.Trigger, { ref, children: /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(import_ui282.Select.Value, {}) }),
                              /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(import_ui282.Select.Content, { children: currencies2.map((currency) => /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(
                                import_ui282.Select.Item,
                                {
                                  value: currency.code,
                                  children: currency.name
                                },
                                currency.code
                              )) })
                            ] }) }),
                            /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(Form.ErrorMessage, {})
                          ] });
                        }
                      }
                    )
                  ] }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(
                    Form.Field,
                    {
                      control: form.control,
                      name: "automatic_taxes",
                      render: ({ field: { value, onChange, ...field } }) => {
                        return /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime437.jsxs)("div", { children: [
                          /* @__PURE__ */ (0, import_jsx_runtime437.jsxs)("div", { className: "flex items-start justify-between", children: [
                            /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(Form.Label, { children: t4("fields.automaticTaxes") }),
                            /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(
                              import_ui282.Switch,
                              {
                                ...field,
                                checked: value,
                                onCheckedChange: onChange
                              }
                            ) })
                          ] }),
                          /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(Form.Hint, { children: t4("regions.automaticTaxesHint") }),
                          /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(Form.ErrorMessage, {})
                        ] }) });
                      }
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(
                    Form.Field,
                    {
                      control: form.control,
                      name: "is_tax_inclusive",
                      render: ({ field: { value, onChange, ...field } }) => {
                        return /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime437.jsxs)("div", { children: [
                          /* @__PURE__ */ (0, import_jsx_runtime437.jsxs)("div", { className: "flex items-start justify-between", children: [
                            /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(Form.Label, { children: t4("fields.taxInclusivePricing") }),
                            /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(
                              import_ui282.Switch,
                              {
                                ...field,
                                checked: value,
                                onCheckedChange: onChange
                              }
                            ) })
                          ] }),
                          /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(Form.Hint, { children: t4("regions.taxInclusiveHint") }),
                          /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(Form.ErrorMessage, {})
                        ] }) });
                      }
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime437.jsx)("div", { className: "bg-ui-border-base h-px w-full" }),
                  /* @__PURE__ */ (0, import_jsx_runtime437.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
                    /* @__PURE__ */ (0, import_jsx_runtime437.jsxs)("div", { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(import_ui282.Text, { size: "small", leading: "compact", weight: "plus", children: t4("fields.countries") }),
                      /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(import_ui282.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("regions.countriesHint") })
                    ] }),
                    selectedCountries.length > 0 && /* @__PURE__ */ (0, import_jsx_runtime437.jsxs)("div", { className: "flex flex-wrap gap-2", children: [
                      selectedCountries.map((country) => /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(
                        CountryTag,
                        {
                          country,
                          onRemove: removeCountry
                        },
                        country.code
                      )),
                      /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(
                        import_ui282.Button,
                        {
                          variant: "transparent",
                          size: "small",
                          className: "text-ui-fg-muted hover:text-ui-fg-subtle",
                          onClick: clearCountries,
                          children: t4("actions.clearAll")
                        }
                      )
                    ] }),
                    /* @__PURE__ */ (0, import_jsx_runtime437.jsxs)(StackedFocusModal, { id: STACKED_MODAL_ID2, children: [
                      /* @__PURE__ */ (0, import_jsx_runtime437.jsx)("div", { className: "flex items-center justify-end", children: /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(StackedFocusModal.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(import_ui282.Button, { variant: "secondary", size: "small", children: t4("regions.addCountries") }) }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(StackedFocusModal.Content, { children: /* @__PURE__ */ (0, import_jsx_runtime437.jsxs)("div", { className: "flex size-full flex-col overflow-hidden", children: [
                        /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(StackedFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(StackedFocusModal.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime437.jsx)("span", { className: "sr-only", children: t4("regions.addCountries") }) }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(StackedFocusModal.Body, { className: "overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(
                          DataTable,
                          {
                            table,
                            columns,
                            count: count3,
                            pageSize: PAGE_SIZE40,
                            orderBy: [
                              { key: "display_name", label: t4("fields.name") },
                              { key: "iso_2", label: t4("fields.code") }
                            ],
                            pagination: true,
                            search: "autofocus",
                            layout: "fill",
                            queryObject: raw,
                            prefix: PREFIX15
                          }
                        ) }),
                        /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(StackedFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime437.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
                          /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(StackedFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(import_ui282.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
                          /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(
                            import_ui282.Button,
                            {
                              size: "small",
                              type: "button",
                              onClick: saveCountries,
                              children: t4("actions.save")
                            }
                          )
                        ] }) })
                      ] }) })
                    ] })
                  ] }),
                  /* @__PURE__ */ (0, import_jsx_runtime437.jsx)("div", { className: "bg-ui-border-base h-px w-full" }),
                  /* @__PURE__ */ (0, import_jsx_runtime437.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
                    /* @__PURE__ */ (0, import_jsx_runtime437.jsxs)("div", { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(import_ui282.Text, { size: "small", leading: "compact", weight: "plus", children: t4("fields.providers") }),
                      /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(import_ui282.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("regions.providersHint") })
                    ] }),
                    /* @__PURE__ */ (0, import_jsx_runtime437.jsx)("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2", children: /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(
                      Form.Field,
                      {
                        control: form.control,
                        name: "payment_providers",
                        render: ({ field }) => {
                          return /* @__PURE__ */ (0, import_jsx_runtime437.jsxs)(Form.Item, { children: [
                            /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(Form.Label, { children: t4("fields.paymentProviders") }),
                            /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(
                              Combobox,
                              {
                                options: paymentProviders.map((pp) => ({
                                  label: formatProvider(pp.id),
                                  value: pp.id
                                })),
                                ...field
                              }
                            ) }),
                            /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(Form.ErrorMessage, {})
                          ] });
                        }
                      }
                    ) })
                  ] })
                ] })
              }
            ) })
          ]
        }
      ) });
    };
    columnHelper55 = (0, import_react_table54.createColumnHelper)();
    useColumns28 = () => {
      const base = useCountryTableColumns();
      return (0, import_react210.useMemo)(
        () => [
          columnHelper55.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(
                import_ui282.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              const isPreselected = !row.getCanSelect();
              return /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(
                import_ui282.Checkbox,
                {
                  checked: row.getIsSelected() || isPreselected,
                  disabled: isPreselected,
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...base
        ],
        [base]
      );
    };
    CountryTag = ({
      country,
      onRemove
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime437.jsxs)("div", { className: "bg-ui-bg-field shadow-borders-base transition-fg hover:bg-ui-bg-field-hover flex h-7 items-center overflow-hidden rounded-md", children: [
        /* @__PURE__ */ (0, import_jsx_runtime437.jsx)("div", { className: "txt-compact-small-plus flex h-full select-none items-center justify-center px-2 py-0.5", children: country.name }),
        /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(
          "button",
          {
            type: "button",
            onClick: () => onRemove(country.code),
            className: "focus-visible:bg-ui-bg-field-hover transition-fg hover:bg-ui-bg-field-hover flex h-full w-7 items-center justify-center border-l outline-none",
            children: /* @__PURE__ */ (0, import_jsx_runtime437.jsx)(import_icons124.XMarkMini, { className: "text-ui-fg-muted" })
          }
        )
      ] });
    };
  }
});

// src/routes/regions/region-create/components/create-region-form/index.ts
var init_create_region_form2 = __esm({
  "src/routes/regions/region-create/components/create-region-form/index.ts"() {
    "use strict";
    init_create_region_form();
  }
});

// src/routes/regions/region-create/region-create.tsx
var import_jsx_runtime438, RegionCreate;
var init_region_create = __esm({
  "src/routes/regions/region-create/region-create.tsx"() {
    "use strict";
    init_route_focus_modal2();
    init_payments();
    init_store();
    init_currencies2();
    init_create_region_form2();
    import_jsx_runtime438 = require("react/jsx-runtime");
    RegionCreate = () => {
      const { store, isPending: isLoading, isError, error } = useStore();
      const storeCurrencies = (store?.supported_currencies ?? []).map(
        (c) => currencies[c.currency_code.toUpperCase()]
      );
      const { payment_providers: paymentProviders = [] } = usePaymentProviders({
        is_enabled: true
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime438.jsx)(RouteFocusModal, { children: !isLoading && store && /* @__PURE__ */ (0, import_jsx_runtime438.jsx)(
        CreateRegionForm,
        {
          currencies: storeCurrencies,
          paymentProviders
        }
      ) });
    };
  }
});

// src/routes/regions/region-create/index.ts
var region_create_exports = {};
__export(region_create_exports, {
  Component: () => RegionCreate
});
var init_region_create2 = __esm({
  "src/routes/regions/region-create/index.ts"() {
    "use strict";
    init_region_create();
  }
});

// src/routes/regions/region-detail/loader.ts
var regionQuery, regionLoader;
var init_loader17 = __esm({
  "src/routes/regions/region-detail/loader.ts"() {
    "use strict";
    init_regions();
    init_client2();
    init_query_client();
    regionQuery = (id2) => ({
      queryKey: regionsQueryKeys.detail(id2),
      queryFn: async () => sdk.admin.region.retrieve(id2, {
        fields: "*payment_providers,*countries,+automatic_taxes"
      })
    });
    regionLoader = async ({ params: params2 }) => {
      const id2 = params2.id;
      const query = regionQuery(id2);
      return queryClient.getQueryData(
        query.queryKey
      ) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/routes/regions/region-detail/components/region-country-section/region-country-section.tsx
var import_icons125, import_ui283, import_react_table55, import_react211, import_react_i18next315, import_jsx_runtime439, PREFIX16, PAGE_SIZE41, RegionCountrySection, CountryActions, columnHelper56, useColumns29;
var init_region_country_section = __esm({
  "src/routes/regions/region-detail/components/region-country-section/region-country-section.tsx"() {
    "use strict";
    import_icons125 = require("@medusajs/icons");
    import_ui283 = require("@medusajs/ui");
    import_react_table55 = require("@tanstack/react-table");
    import_react211 = require("react");
    import_react_i18next315 = require("react-i18next");
    init_action_menu2();
    init_data_table2();
    init_regions();
    init_use_data_table();
    init_use_countries();
    init_use_country_table_columns();
    init_use_country_table_query();
    import_jsx_runtime439 = require("react/jsx-runtime");
    PREFIX16 = "c";
    PAGE_SIZE41 = 10;
    RegionCountrySection = ({ region }) => {
      const { t: t4 } = (0, import_react_i18next315.useTranslation)();
      const prompt = (0, import_ui283.usePrompt)();
      const [rowSelection, setRowSelection] = (0, import_react211.useState)({});
      const { searchParams, raw } = useCountryTableQuery({
        pageSize: PAGE_SIZE41,
        prefix: PREFIX16
      });
      const { countries: countries2, count: count3 } = useCountries({
        countries: region.countries || [],
        ...searchParams
      });
      const columns = useColumns29();
      const { table } = useDataTable({
        data: countries2 || [],
        columns,
        count: count3,
        enablePagination: true,
        enableRowSelection: true,
        getRowId: (row) => row.iso_2,
        pageSize: PAGE_SIZE41,
        rowSelection: {
          state: rowSelection,
          updater: setRowSelection
        },
        prefix: PREFIX16,
        meta: {
          region
        }
      });
      const { mutateAsync } = useUpdateRegion(region.id);
      const handleRemoveCountries = async () => {
        const ids = Object.keys(rowSelection).filter((k) => rowSelection[k]);
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("regions.removeCountriesWarning", {
            count: ids.length
          }),
          verificationText: t4("actions.remove"),
          verificationInstruction: t4("general.typeToConfirm"),
          cancelText: t4("actions.cancel"),
          confirmText: t4("actions.remove")
        });
        if (!res) {
          return;
        }
        const payload = region.countries?.filter((c) => !ids.includes(c.iso_2)).map((c) => c.iso_2);
        await mutateAsync(
          {
            countries: payload
          },
          {
            onSuccess: () => {
              import_ui283.toast.success(t4("regions.toast.countries"));
            },
            onError: (e) => {
              import_ui283.toast.error(e.message);
            }
          }
        );
      };
      return /* @__PURE__ */ (0, import_jsx_runtime439.jsxs)(import_ui283.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime439.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime439.jsx)(import_ui283.Heading, { level: "h2", children: t4("fields.countries") }),
          /* @__PURE__ */ (0, import_jsx_runtime439.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      label: t4("regions.addCountries"),
                      icon: /* @__PURE__ */ (0, import_jsx_runtime439.jsx)(import_icons125.PlusMini, {}),
                      to: "countries/add"
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime439.jsx)(
          DataTable,
          {
            table,
            columns,
            pageSize: PAGE_SIZE41,
            count: count3,
            orderBy: [
              { key: "display_name", label: t4("fields.name") },
              { key: "iso_2", label: t4("fields.code") }
            ],
            search: true,
            pagination: true,
            queryObject: raw,
            prefix: PREFIX16,
            commands: [
              {
                action: handleRemoveCountries,
                label: t4("actions.remove"),
                shortcut: "r"
              }
            ]
          }
        )
      ] });
    };
    CountryActions = ({
      country,
      region
    }) => {
      const { t: t4 } = (0, import_react_i18next315.useTranslation)();
      const prompt = (0, import_ui283.usePrompt)();
      const { mutateAsync } = useUpdateRegion(region.id);
      const payload = region.countries?.filter((c) => c.iso_2 !== country.iso_2).map((c) => c.iso_2);
      const handleRemove = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("regions.removeCountryWarning", {
            name: country.display_name
          }),
          verificationText: country.display_name,
          verificationInstruction: t4("general.typeToConfirm"),
          cancelText: t4("actions.cancel"),
          confirmText: t4("actions.remove")
        });
        if (!res) {
          return;
        }
        await mutateAsync(
          {
            countries: payload
          },
          {
            onSuccess: () => {
              import_ui283.toast.success(t4("regions.toast.countries"));
            },
            onError: (e) => {
              import_ui283.toast.error(e.message);
            }
          }
        );
      };
      return /* @__PURE__ */ (0, import_jsx_runtime439.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  label: t4("actions.remove"),
                  onClick: handleRemove,
                  icon: /* @__PURE__ */ (0, import_jsx_runtime439.jsx)(import_icons125.Trash, {})
                }
              ]
            }
          ]
        }
      );
    };
    columnHelper56 = (0, import_react_table55.createColumnHelper)();
    useColumns29 = () => {
      const base = useCountryTableColumns();
      return (0, import_react211.useMemo)(
        () => [
          columnHelper56.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime439.jsx)(
                import_ui283.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime439.jsx)(
                import_ui283.Checkbox,
                {
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...base,
          columnHelper56.display({
            id: "actions",
            cell: ({ row, table }) => {
              const { region } = table.options.meta;
              return /* @__PURE__ */ (0, import_jsx_runtime439.jsx)(CountryActions, { country: row.original, region });
            }
          })
        ],
        [base]
      );
    };
  }
});

// src/routes/regions/region-detail/components/region-country-section/index.ts
var init_region_country_section2 = __esm({
  "src/routes/regions/region-detail/components/region-country-section/index.ts"() {
    "use strict";
    init_region_country_section();
  }
});

// src/routes/regions/region-detail/components/region-general-section/region-general-section.tsx
var import_icons126, import_ui284, import_react_i18next316, import_react_router_dom142, import_jsx_runtime440, RegionGeneralSection, RegionActions2;
var init_region_general_section = __esm({
  "src/routes/regions/region-detail/components/region-general-section/region-general-section.tsx"() {
    "use strict";
    import_icons126 = require("@medusajs/icons");
    import_ui284 = require("@medusajs/ui");
    import_react_i18next316 = require("react-i18next");
    import_react_router_dom142 = require("react-router-dom");
    init_action_menu2();
    init_list_summary2();
    init_regions();
    init_currencies2();
    init_format_provider();
    init_section_row();
    import_jsx_runtime440 = require("react/jsx-runtime");
    RegionGeneralSection = ({
      region,
      pricePreferences
    }) => {
      const { t: t4 } = (0, import_react_i18next316.useTranslation)();
      const pricePreferenceForRegion = pricePreferences?.find(
        (preference) => preference.attribute === "region_id" && preference.value === region.id
      );
      return /* @__PURE__ */ (0, import_jsx_runtime440.jsxs)(import_ui284.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime440.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime440.jsx)(import_ui284.Heading, { children: region.name }),
          /* @__PURE__ */ (0, import_jsx_runtime440.jsx)(RegionActions2, { region })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime440.jsx)(
          SectionRow,
          {
            title: t4("fields.currency"),
            value: /* @__PURE__ */ (0, import_jsx_runtime440.jsxs)("div", { className: "flex items-center gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime440.jsx)(import_ui284.Badge, { size: "2xsmall", className: "uppercase", children: region.currency_code }),
              /* @__PURE__ */ (0, import_jsx_runtime440.jsx)(import_ui284.Text, { size: "small", leading: "compact", children: currencies[region.currency_code.toUpperCase()].name })
            ] })
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime440.jsx)(
          SectionRow,
          {
            title: t4("fields.automaticTaxes"),
            value: region.automatic_taxes ? t4("fields.true") : t4("fields.false")
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime440.jsx)(
          SectionRow,
          {
            title: t4("fields.taxInclusivePricing"),
            value: pricePreferenceForRegion?.is_tax_inclusive ? t4("fields.true") : t4("fields.false")
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime440.jsx)(
          SectionRow,
          {
            title: t4("fields.paymentProviders"),
            value: /* @__PURE__ */ (0, import_jsx_runtime440.jsx)("div", { className: "inline-flex", children: region.payment_providers?.length ? /* @__PURE__ */ (0, import_jsx_runtime440.jsx)(
              ListSummary,
              {
                list: region.payment_providers.map((p) => formatProvider(p.id))
              }
            ) : "-" })
          }
        )
      ] });
    };
    RegionActions2 = ({ region }) => {
      const navigate = (0, import_react_router_dom142.useNavigate)();
      const { t: t4 } = (0, import_react_i18next316.useTranslation)();
      const { mutateAsync } = useDeleteRegion(region.id);
      const prompt = (0, import_ui284.usePrompt)();
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("regions.deleteRegionWarning", {
            name: region.name
          }),
          verificationText: region.name,
          verificationInstruction: t4("general.typeToConfirm"),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            import_ui284.toast.success(t4("regions.toast.delete"));
            navigate("/settings/regions", { replace: true });
          },
          onError: (e) => {
            import_ui284.toast.error(e.message);
          }
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime440.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime440.jsx)(import_icons126.PencilSquare, {}),
                  label: t4("actions.edit"),
                  to: `/settings/regions/${region.id}/edit`
                }
              ]
            },
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime440.jsx)(import_icons126.Trash, {}),
                  label: t4("actions.delete"),
                  onClick: handleDelete
                }
              ]
            }
          ]
        }
      );
    };
  }
});

// src/routes/regions/region-detail/components/region-general-section/index.ts
var init_region_general_section2 = __esm({
  "src/routes/regions/region-detail/components/region-general-section/index.ts"() {
    "use strict";
    init_region_general_section();
  }
});

// src/routes/regions/region-detail/region-detail.tsx
var import_react_router_dom143, import_jsx_runtime441, RegionDetail;
var init_region_detail = __esm({
  "src/routes/regions/region-detail/region-detail.tsx"() {
    "use strict";
    import_react_router_dom143 = require("react-router-dom");
    init_regions();
    init_region_country_section2();
    init_region_general_section2();
    init_skeleton2();
    init_pages();
    init_extensions();
    init_price_preferences();
    import_jsx_runtime441 = require("react/jsx-runtime");
    RegionDetail = () => {
      const initialData = (0, import_react_router_dom143.useLoaderData)();
      const { id: id2 } = (0, import_react_router_dom143.useParams)();
      const {
        region,
        isPending: isLoading,
        isError: isRegionError,
        error: regionError
      } = useRegion(
        id2,
        { fields: "*payment_providers,*countries,+automatic_taxes" },
        {
          initialData
        }
      );
      const {
        price_preferences: pricePreferences,
        isPending: isLoadingPreferences,
        isError: isPreferencesError,
        error: preferencesError
      } = usePricePreferences(
        {
          attribute: "region_id",
          value: id2
        },
        { enabled: !!region }
      );
      const { getWidgets } = useDashboardExtension();
      if (isLoading || isLoadingPreferences || !region) {
        return /* @__PURE__ */ (0, import_jsx_runtime441.jsx)(SingleColumnPageSkeleton, { sections: 2, showJSON: true, showMetadata: true });
      }
      if (isRegionError) {
        throw regionError;
      }
      if (isPreferencesError) {
        throw preferencesError;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime441.jsxs)(
        SingleColumnPage,
        {
          widgets: {
            before: getWidgets("region.details.before"),
            after: getWidgets("region.details.after")
          },
          data: region,
          showMetadata: true,
          showJSON: true,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime441.jsx)(
              RegionGeneralSection,
              {
                region,
                pricePreferences: pricePreferences ?? []
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime441.jsx)(RegionCountrySection, { region })
          ]
        }
      );
    };
  }
});

// src/routes/regions/region-detail/index.ts
var region_detail_exports = {};
__export(region_detail_exports, {
  Component: () => RegionDetail,
  loader: () => regionLoader
});
var init_region_detail2 = __esm({
  "src/routes/regions/region-detail/index.ts"() {
    "use strict";
    init_loader17();
    init_region_detail();
  }
});

// src/routes/regions/region-edit/components/edit-region-form/edit-region-form.tsx
var import_ui285, import_react_hook_form85, import_react_i18next317, zod27, import_jsx_runtime442, EditRegionSchema, EditRegionForm;
var init_edit_region_form = __esm({
  "src/routes/regions/region-edit/components/edit-region-form/edit-region-form.tsx"() {
    "use strict";
    import_ui285 = require("@medusajs/ui");
    import_react_hook_form85 = require("react-hook-form");
    import_react_i18next317 = require("react-i18next");
    zod27 = __toESM(require("zod"));
    init_form2();
    init_combobox2();
    init_modals();
    init_keybound_form();
    init_regions();
    init_format_provider();
    import_jsx_runtime442 = require("react/jsx-runtime");
    EditRegionSchema = zod27.object({
      name: zod27.string().min(1),
      currency_code: zod27.string(),
      payment_providers: zod27.array(zod27.string()),
      automatic_taxes: zod27.boolean(),
      is_tax_inclusive: zod27.boolean()
    });
    EditRegionForm = ({
      region,
      currencies: currencies2,
      paymentProviders,
      pricePreferences
    }) => {
      const { t: t4 } = (0, import_react_i18next317.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const pricePreferenceForRegion = pricePreferences?.find(
        (preference) => preference.attribute === "region_id" && preference.value === region.id
      );
      const form = (0, import_react_hook_form85.useForm)({
        defaultValues: {
          name: region.name,
          currency_code: region.currency_code.toUpperCase(),
          payment_providers: region.payment_providers?.map((pp) => pp.id) || [],
          automatic_taxes: region.automatic_taxes,
          is_tax_inclusive: pricePreferenceForRegion?.is_tax_inclusive || false
        }
      });
      const { mutateAsync: updateRegion, isPending: isPendingRegion } = useUpdateRegion(region.id);
      const handleSubmit = form.handleSubmit(async (values) => {
        await updateRegion(
          {
            name: values.name,
            automatic_taxes: values.automatic_taxes,
            currency_code: values.currency_code.toLowerCase(),
            payment_providers: values.payment_providers,
            is_tax_inclusive: values.is_tax_inclusive
          },
          {
            onSuccess: () => {
              import_ui285.toast.success(t4("regions.toast.edit"));
              handleSuccess();
            },
            onError: (e) => {
              import_ui285.toast.error(e.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime442.jsxs)(KeyboundForm, { onSubmit: handleSubmit, className: "flex flex-1 flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(RouteDrawer.Body, { children: /* @__PURE__ */ (0, import_jsx_runtime442.jsxs)("div", { className: "flex flex-col gap-y-8", children: [
          /* @__PURE__ */ (0, import_jsx_runtime442.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
            /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "name",
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime442.jsxs)(Form.Item, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(Form.Label, { children: t4("fields.name") }),
                    /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(import_ui285.Input, { ...field }) }),
                    /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "currency_code",
                render: ({ field: { onChange, ref, ...field } }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime442.jsxs)(Form.Item, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(Form.Label, { children: t4("fields.currency") }),
                    /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime442.jsxs)(import_ui285.Select, { onValueChange: onChange, ...field, children: [
                      /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(import_ui285.Select.Trigger, { ref, children: /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(import_ui285.Select.Value, {}) }),
                      /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(import_ui285.Select.Content, { children: currencies2.map((c) => /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(import_ui285.Select.Item, { value: c.code, children: c.code.toUpperCase() }, c.code)) })
                    ] }) }),
                    /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              }
            )
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime442.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
            /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "automatic_taxes",
                render: ({ field: { value, onChange, ...field } }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime442.jsxs)("div", { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime442.jsxs)("div", { className: "flex items-start justify-between", children: [
                      /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(Form.Label, { children: t4("fields.automaticTaxes") }),
                      /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(
                        import_ui285.Switch,
                        {
                          ...field,
                          checked: value,
                          onCheckedChange: onChange
                        }
                      ) })
                    ] }),
                    /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(Form.Hint, { children: t4("regions.automaticTaxesHint") }),
                    /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(Form.ErrorMessage, {})
                  ] }) });
                }
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "is_tax_inclusive",
                render: ({ field: { value, onChange, ...field } }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime442.jsxs)("div", { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime442.jsxs)("div", { className: "flex items-start justify-between", children: [
                      /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(Form.Label, { children: t4("fields.taxInclusivePricing") }),
                      /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(
                        import_ui285.Switch,
                        {
                          ...field,
                          checked: value,
                          onCheckedChange: onChange
                        }
                      ) })
                    ] }),
                    /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(Form.Hint, { children: t4("regions.taxInclusiveHint") }),
                    /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(Form.ErrorMessage, {})
                  ] }) });
                }
              }
            )
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime442.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
            /* @__PURE__ */ (0, import_jsx_runtime442.jsxs)("div", { children: [
              /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(import_ui285.Text, { size: "small", leading: "compact", weight: "plus", children: "Providers" }),
              /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(import_ui285.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("regions.providersHint") })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "payment_providers",
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime442.jsxs)(Form.Item, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(Form.Label, { children: t4("fields.paymentProviders") }),
                    /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(
                      Combobox,
                      {
                        options: paymentProviders.map((pp) => ({
                          label: formatProvider(pp.id),
                          value: pp.id
                        })),
                        ...field
                      }
                    ) }),
                    /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              }
            )
          ] })
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime442.jsxs)("div", { className: "flex items-center gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(import_ui285.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime442.jsx)(import_ui285.Button, { size: "small", type: "submit", isLoading: isPendingRegion, children: t4("actions.save") })
        ] }) })
      ] }) });
    };
  }
});

// src/routes/regions/region-edit/components/edit-region-form/index.ts
var init_edit_region_form2 = __esm({
  "src/routes/regions/region-edit/components/edit-region-form/index.ts"() {
    "use strict";
    init_edit_region_form();
  }
});

// src/routes/regions/region-edit/region-edit.tsx
var import_ui286, import_react_i18next318, import_react_router_dom144, import_jsx_runtime443, RegionEdit;
var init_region_edit = __esm({
  "src/routes/regions/region-edit/region-edit.tsx"() {
    "use strict";
    import_ui286 = require("@medusajs/ui");
    import_react_i18next318 = require("react-i18next");
    import_react_router_dom144 = require("react-router-dom");
    init_modals();
    init_payments();
    init_regions();
    init_store();
    init_currencies2();
    init_edit_region_form2();
    init_price_preferences();
    import_jsx_runtime443 = require("react/jsx-runtime");
    RegionEdit = () => {
      const { t: t4 } = (0, import_react_i18next318.useTranslation)();
      const { id: id2 } = (0, import_react_router_dom144.useParams)();
      const {
        region,
        isPending: isRegionLoading,
        isError: isRegionError,
        error: regionError
      } = useRegion(id2, {
        fields: "*payment_providers,*countries,+automatic_taxes"
      });
      const {
        store,
        isPending: isStoreLoading,
        isError: isStoreError,
        error: storeError
      } = useStore();
      const {
        price_preferences: pricePreferences = [],
        isPending: isPreferenceLoading,
        isError: isPreferenceError,
        error: preferenceError
      } = usePricePreferences(
        {
          attribute: "region_id",
          value: id2
        },
        { enabled: !!region }
      );
      const isLoading = isRegionLoading || isStoreLoading || isPreferenceLoading;
      const storeCurrencies = (store?.supported_currencies ?? []).map(
        (c) => currencies[c.currency_code.toUpperCase()]
      );
      const { payment_providers: paymentProviders = [] } = usePaymentProviders({
        limit: 999,
        is_enabled: true
      });
      if (isRegionError) {
        throw regionError;
      }
      if (isStoreError) {
        throw storeError;
      }
      if (isPreferenceError) {
        throw preferenceError;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime443.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime443.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime443.jsx)(import_ui286.Heading, { children: t4("regions.editRegion") }) }),
        !isLoading && region && /* @__PURE__ */ (0, import_jsx_runtime443.jsx)(
          EditRegionForm,
          {
            region,
            currencies: storeCurrencies,
            paymentProviders,
            pricePreferences
          }
        )
      ] });
    };
  }
});

// src/routes/regions/region-edit/index.ts
var region_edit_exports = {};
__export(region_edit_exports, {
  Component: () => RegionEdit
});
var init_region_edit2 = __esm({
  "src/routes/regions/region-edit/index.ts"() {
    "use strict";
    init_region_edit();
  }
});

// src/routes/regions/region-add-countries/components/add-countries-form/add-countries-form.tsx
var import_zod89, import_react_table56, import_react212, import_react_hook_form86, import_react_i18next319, zod28, import_ui287, import_jsx_runtime444, AddCountriesSchema, PAGE_SIZE42, PREFIX17, AddCountriesForm, columnHelper57, useColumns30;
var init_add_countries_form = __esm({
  "src/routes/regions/region-add-countries/components/add-countries-form/add-countries-form.tsx"() {
    "use strict";
    import_zod89 = require("@hookform/resolvers/zod");
    import_react_table56 = require("@tanstack/react-table");
    import_react212 = require("react");
    import_react_hook_form86 = require("react-hook-form");
    import_react_i18next319 = require("react-i18next");
    zod28 = __toESM(require("zod"));
    import_ui287 = require("@medusajs/ui");
    init_modals();
    init_data_table2();
    init_keybound_form2();
    init_regions();
    init_use_data_table();
    init_countries();
    init_use_countries();
    init_use_country_table_columns();
    init_use_country_table_query();
    import_jsx_runtime444 = require("react/jsx-runtime");
    AddCountriesSchema = zod28.object({
      countries: zod28.array(zod28.string()).min(1)
    });
    PAGE_SIZE42 = 50;
    PREFIX17 = "ac";
    AddCountriesForm = ({ region }) => {
      const { t: t4 } = (0, import_react_i18next319.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const [rowSelection, setRowSelection] = (0, import_react212.useState)({});
      const form = (0, import_react_hook_form86.useForm)({
        defaultValues: {
          countries: []
        },
        resolver: (0, import_zod89.zodResolver)(AddCountriesSchema)
      });
      const { setValue } = form;
      (0, import_react212.useEffect)(() => {
        const ids = Object.keys(rowSelection).filter((k) => rowSelection[k]);
        setValue("countries", ids, {
          shouldDirty: true,
          shouldTouch: true
        });
      }, [rowSelection, setValue]);
      const { searchParams, raw } = useCountryTableQuery({
        pageSize: PAGE_SIZE42,
        prefix: PREFIX17
      });
      const { countries: countries2, count: count3 } = useCountries({
        countries: countries.map((c, i) => ({
          display_name: c.display_name,
          name: c.name,
          id: i,
          iso_2: c.iso_2,
          iso_3: c.iso_3,
          num_code: c.num_code,
          region_id: null,
          region: {}
        })),
        ...searchParams
      });
      const columns = useColumns30();
      const { table } = useDataTable({
        data: countries2 || [],
        columns,
        count: count3,
        enablePagination: true,
        enableRowSelection: (row) => {
          return region.countries?.findIndex((c) => c.iso_2 === row.original.iso_2) === -1;
        },
        getRowId: (row) => row.iso_2,
        pageSize: PAGE_SIZE42,
        rowSelection: {
          state: rowSelection,
          updater: setRowSelection
        },
        prefix: PREFIX17
      });
      const { mutateAsync, isPending: isLoading } = useUpdateRegion(region.id);
      const handleSubmit = form.handleSubmit(async (values) => {
        const payload = [
          ...region.countries?.map((c) => c.iso_2) ?? [],
          ...values.countries
        ];
        await mutateAsync(
          {
            countries: payload
          },
          {
            onSuccess: () => {
              import_ui287.toast.success(t4("regions.toast.countries"));
              handleSuccess();
            },
            onError: (error) => {
              import_ui287.toast.error(error.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime444.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime444.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex h-full flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime444.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime444.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime444.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime444.jsx)(import_ui287.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime444.jsx)(import_ui287.Button, { size: "small", isLoading, type: "submit", children: t4("actions.add") })
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime444.jsx)(RouteFocusModal.Body, { className: "overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime444.jsx)(
              DataTable,
              {
                table,
                columns,
                pageSize: PAGE_SIZE42,
                count: count3,
                search: "autofocus",
                pagination: true,
                layout: "fill",
                orderBy: [
                  { key: "display_name", label: t4("fields.name") },
                  { key: "iso_2", label: t4("fields.code") }
                ],
                queryObject: raw,
                prefix: PREFIX17
              }
            ) })
          ]
        }
      ) });
    };
    columnHelper57 = (0, import_react_table56.createColumnHelper)();
    useColumns30 = () => {
      const base = useCountryTableColumns();
      return (0, import_react212.useMemo)(
        () => [
          columnHelper57.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime444.jsx)(
                import_ui287.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              const isPreselected = !row.getCanSelect();
              return /* @__PURE__ */ (0, import_jsx_runtime444.jsx)(
                import_ui287.Checkbox,
                {
                  checked: row.getIsSelected() || isPreselected,
                  disabled: isPreselected,
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...base
        ],
        [base]
      );
    };
  }
});

// src/routes/regions/region-add-countries/components/add-countries-form/index.ts
var init_add_countries_form2 = __esm({
  "src/routes/regions/region-add-countries/components/add-countries-form/index.ts"() {
    "use strict";
    init_add_countries_form();
  }
});

// src/routes/regions/region-add-countries/region-add-countries.tsx
var import_react_router_dom145, import_jsx_runtime445, RegionAddCountries;
var init_region_add_countries = __esm({
  "src/routes/regions/region-add-countries/region-add-countries.tsx"() {
    "use strict";
    import_react_router_dom145 = require("react-router-dom");
    init_modals();
    init_regions();
    init_add_countries_form2();
    import_jsx_runtime445 = require("react/jsx-runtime");
    RegionAddCountries = () => {
      const { id: id2 } = (0, import_react_router_dom145.useParams)();
      const {
        region,
        isPending: isLoading,
        isError,
        error
      } = useRegion(id2, {
        fields: "*payment_providers"
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime445.jsx)(RouteFocusModal, { children: !isLoading && region && /* @__PURE__ */ (0, import_jsx_runtime445.jsx)(AddCountriesForm, { region }) });
    };
  }
});

// src/routes/regions/region-add-countries/index.ts
var region_add_countries_exports = {};
__export(region_add_countries_exports, {
  Component: () => RegionAddCountries
});
var init_region_add_countries2 = __esm({
  "src/routes/regions/region-add-countries/index.ts"() {
    "use strict";
    init_region_add_countries();
  }
});

// src/routes/store/store-detail/loader.ts
var storeDetailQuery, storeLoader;
var init_loader18 = __esm({
  "src/routes/store/store-detail/loader.ts"() {
    "use strict";
    init_store();
    init_query_client();
    storeDetailQuery = () => ({
      queryKey: storeQueryKeys.details(),
      queryFn: async () => retrieveActiveStore()
    });
    storeLoader = async () => {
      const query = storeDetailQuery();
      return queryClient.getQueryData(query.queryKey) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/routes/store/common/hooks/use-currencies-table-columns.tsx
var import_react_table57, import_react213, import_react_i18next320, import_jsx_runtime446, columnHelper58, useCurrenciesTableColumns;
var init_use_currencies_table_columns = __esm({
  "src/routes/store/common/hooks/use-currencies-table-columns.tsx"() {
    "use strict";
    import_react_table57 = require("@tanstack/react-table");
    import_react213 = require("react");
    import_react_i18next320 = require("react-i18next");
    init_text_cell2();
    import_jsx_runtime446 = require("react/jsx-runtime");
    columnHelper58 = (0, import_react_table57.createColumnHelper)();
    useCurrenciesTableColumns = () => {
      const { t: t4 } = (0, import_react_i18next320.useTranslation)();
      return (0, import_react213.useMemo)(
        () => [
          columnHelper58.accessor("code", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime446.jsx)(TextHeader, { text: t4("fields.code") }),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime446.jsx)(TextCell, { text: getValue2().toUpperCase() })
          }),
          columnHelper58.accessor("name", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime446.jsx)(TextHeader, { text: t4("fields.name") }),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime446.jsx)(TextCell, { text: getValue2() })
          })
        ],
        [t4]
      );
    };
  }
});

// src/routes/store/common/hooks/use-currencies-table-query.tsx
var useCurrenciesTableQuery;
var init_use_currencies_table_query = __esm({
  "src/routes/store/common/hooks/use-currencies-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useCurrenciesTableQuery = ({
      pageSize = 10,
      prefix
    }) => {
      const raw = useQueryParams(["order", "q", "offset"], prefix);
      const { offset: offset4, ...rest } = raw;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? parseInt(offset4) : 0,
        ...rest
      };
      return { searchParams, raw };
    };
  }
});

// src/routes/store/store-detail/components/store-currency-section/store-currencies-section.tsx/store-currency-section.tsx
var import_icons127, import_ui288, import_react_query69, import_react_table58, import_react214, import_react_i18next321, import_jsx_runtime447, PAGE_SIZE43, StoreCurrencySection, CurrencyActions, columnHelper59, useColumns31;
var init_store_currency_section = __esm({
  "src/routes/store/store-detail/components/store-currency-section/store-currencies-section.tsx/store-currency-section.tsx"() {
    "use strict";
    import_icons127 = require("@medusajs/icons");
    import_ui288 = require("@medusajs/ui");
    import_react_query69 = require("@tanstack/react-query");
    import_react_table58 = require("@tanstack/react-table");
    import_react214 = require("react");
    import_react_i18next321 = require("react-i18next");
    init_action_menu2();
    init_data_table2();
    init_status_cell2();
    init_currencies();
    init_price_preferences();
    init_store();
    init_use_data_table();
    init_use_currencies_table_columns();
    init_use_currencies_table_query();
    import_jsx_runtime447 = require("react/jsx-runtime");
    PAGE_SIZE43 = 10;
    StoreCurrencySection = ({ store }) => {
      const [rowSelection, setRowSelection] = (0, import_react214.useState)({});
      const { searchParams, raw } = useCurrenciesTableQuery({ pageSize: PAGE_SIZE43 });
      const {
        currencies: currencies2,
        count: count3,
        isPending: isCurrenciesPending,
        isError: isCurrenciesError,
        error: currenciesError
      } = useCurrencies(
        {
          code: store.supported_currencies?.map((c) => c.currency_code),
          ...searchParams
        },
        {
          placeholderData: import_react_query69.keepPreviousData,
          enabled: !!store.supported_currencies?.length
        }
      );
      const {
        price_preferences: pricePreferences,
        isPending: isPricePreferencesPending,
        isError: isPricePreferencesError,
        error: pricePreferencesError
      } = usePricePreferences(
        {
          attribute: "currency_code",
          value: store.supported_currencies?.map((c) => c.currency_code)
        },
        {
          enabled: !!store.supported_currencies?.length
        }
      );
      const columns = useColumns31();
      const prefMap = (0, import_react214.useMemo)(() => {
        return new Map(pricePreferences?.map((pref) => [pref.value, pref]));
      }, [pricePreferences]);
      const withTaxInclusivity = currencies2?.map((c) => ({
        ...c,
        is_tax_inclusive: prefMap.get(c.code)?.is_tax_inclusive
      }));
      const { table } = useDataTable({
        data: withTaxInclusivity ?? [],
        columns,
        count: count3,
        getRowId: (row) => row.code,
        rowSelection: {
          state: rowSelection,
          updater: setRowSelection
        },
        enablePagination: true,
        enableRowSelection: true,
        pageSize: PAGE_SIZE43,
        meta: {
          storeId: store.id,
          supportedCurrencies: store.supported_currencies,
          defaultCurrencyCode: store.supported_currencies?.find((c) => c.is_default)?.currency_code,
          preferencesMap: prefMap
        }
      });
      const { mutateAsync } = useUpdateStore(store.id);
      const { t: t4 } = (0, import_react_i18next321.useTranslation)();
      const prompt = (0, import_ui288.usePrompt)();
      const handleDeleteCurrencies = async () => {
        const ids = Object.keys(rowSelection);
        const result = await prompt({
          title: t4("general.areYouSure"),
          description: t4("store.removeCurrencyWarning", {
            count: ids.length
          }),
          confirmText: t4("actions.remove"),
          cancelText: t4("actions.cancel")
        });
        if (!result) {
          return;
        }
        await mutateAsync(
          {
            supported_currencies: store.supported_currencies?.filter(
              (c) => !ids.includes(c.currency_code)
            ) ?? []
          },
          {
            onSuccess: () => {
              setRowSelection({});
              import_ui288.toast.success(t4("store.toast.currenciesRemoved"));
            },
            onError: (e) => {
              import_ui288.toast.error(e.message);
            }
          }
        );
      };
      if (isCurrenciesError) {
        throw currenciesError;
      }
      if (isPricePreferencesError) {
        throw pricePreferencesError;
      }
      const isLoading = isCurrenciesPending || isPricePreferencesPending;
      return /* @__PURE__ */ (0, import_jsx_runtime447.jsxs)(import_ui288.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime447.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime447.jsx)(import_ui288.Heading, { level: "h2", children: t4("store.currencies") }),
          /* @__PURE__ */ (0, import_jsx_runtime447.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      icon: /* @__PURE__ */ (0, import_jsx_runtime447.jsx)(import_icons127.Plus, {}),
                      label: t4("actions.add"),
                      to: "currencies"
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime447.jsx)(
          DataTable,
          {
            orderBy: [
              { key: "name", label: t4("fields.name") },
              { key: "code", label: t4("fields.code") }
            ],
            search: true,
            pagination: true,
            table,
            pageSize: PAGE_SIZE43,
            columns,
            count: !store.supported_currencies?.length ? 0 : count3,
            isLoading: !store.supported_currencies?.length ? false : isLoading,
            queryObject: raw
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime447.jsx)(import_ui288.CommandBar, { open: !!Object.keys(rowSelection).length, children: /* @__PURE__ */ (0, import_jsx_runtime447.jsxs)(import_ui288.CommandBar.Bar, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime447.jsx)(import_ui288.CommandBar.Value, { children: t4("general.countSelected", {
            count: Object.keys(rowSelection).length
          }) }),
          /* @__PURE__ */ (0, import_jsx_runtime447.jsx)(import_ui288.CommandBar.Seperator, {}),
          /* @__PURE__ */ (0, import_jsx_runtime447.jsx)(
            import_ui288.CommandBar.Command,
            {
              action: handleDeleteCurrencies,
              shortcut: "r",
              label: t4("actions.remove")
            }
          )
        ] }) })
      ] });
    };
    CurrencyActions = ({
      storeId,
      currency,
      supportedCurrencies,
      defaultCurrencyCode,
      preferencesMap
    }) => {
      const { mutateAsync } = useUpdateStore(storeId);
      const { t: t4 } = (0, import_react_i18next321.useTranslation)();
      const prompt = (0, import_ui288.usePrompt)();
      const handleRemove = async () => {
        const result = await prompt({
          title: t4("general.areYouSure"),
          description: t4("store.removeCurrencyWarning", {
            count: 1
          }),
          verificationInstruction: t4("general.typeToConfirm"),
          verificationText: currency.name,
          confirmText: t4("actions.remove"),
          cancelText: t4("actions.cancel")
        });
        if (!result) {
          return;
        }
        await mutateAsync(
          {
            supported_currencies: supportedCurrencies.filter(
              (c) => c.currency_code !== currency.code
            )
          },
          {
            onSuccess: () => {
              import_ui288.toast.success(t4("store.toast.currenciesRemoved"));
            },
            onError: (e) => {
              import_ui288.toast.error(e.message);
            }
          }
        );
      };
      const handleToggleTaxInclusivity = async () => {
        await mutateAsync(
          {
            supported_currencies: supportedCurrencies.map((c) => {
              const pref = preferencesMap.get(c.currency_code);
              return {
                ...c,
                is_tax_inclusive: c.currency_code === currency.code ? !pref?.is_tax_inclusive : void 0
              };
            })
          },
          {
            onSuccess: () => {
              import_ui288.toast.success(t4("store.toast.updatedTaxInclusivitySuccessfully"));
            },
            onError: (e) => {
              import_ui288.toast.error(e.message);
            }
          }
        );
      };
      return /* @__PURE__ */ (0, import_jsx_runtime447.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: preferencesMap.get(currency.code)?.is_tax_inclusive ? /* @__PURE__ */ (0, import_jsx_runtime447.jsx)(import_icons127.XCircle, {}) : /* @__PURE__ */ (0, import_jsx_runtime447.jsx)(import_icons127.CheckCircle, {}),
                  label: preferencesMap.get(currency.code)?.is_tax_inclusive ? t4("store.disableTaxInclusivePricing") : t4("store.enableTaxInclusivePricing"),
                  onClick: handleToggleTaxInclusivity
                }
              ]
            },
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime447.jsx)(import_icons127.Trash, {}),
                  label: t4("actions.remove"),
                  onClick: handleRemove,
                  disabled: currency.code === defaultCurrencyCode
                }
              ]
            }
          ]
        }
      );
    };
    columnHelper59 = (0, import_react_table58.createColumnHelper)();
    useColumns31 = () => {
      const base = useCurrenciesTableColumns();
      const { t: t4 } = (0, import_react_i18next321.useTranslation)();
      return (0, import_react214.useMemo)(
        () => [
          columnHelper59.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime447.jsx)(
                import_ui288.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime447.jsx)(
                import_ui288.Checkbox,
                {
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...base,
          columnHelper59.accessor("is_tax_inclusive", {
            header: t4("fields.taxInclusivePricing"),
            cell: ({ getValue: getValue2 }) => {
              const isTaxInclusive = getValue2();
              return /* @__PURE__ */ (0, import_jsx_runtime447.jsx)(StatusCell, { color: isTaxInclusive ? "green" : "grey", children: isTaxInclusive ? t4("fields.true") : t4("fields.false") });
            }
          }),
          columnHelper59.display({
            id: "actions",
            cell: ({ row, table }) => {
              const {
                supportedCurrencies,
                storeId,
                defaultCurrencyCode,
                preferencesMap
              } = table.options.meta;
              return /* @__PURE__ */ (0, import_jsx_runtime447.jsx)(
                CurrencyActions,
                {
                  storeId,
                  currency: row.original,
                  supportedCurrencies,
                  defaultCurrencyCode,
                  preferencesMap
                }
              );
            }
          })
        ],
        [base, t4]
      );
    };
  }
});

// src/routes/store/store-detail/components/store-currency-section/store-currencies-section.tsx/index.ts
var init_store_currencies_section = __esm({
  "src/routes/store/store-detail/components/store-currency-section/store-currencies-section.tsx/index.ts"() {
    "use strict";
    init_store_currency_section();
  }
});

// src/routes/store/store-detail/components/store-general-section/store-general-section.tsx
var import_icons128, import_ui289, import_react_i18next322, import_jsx_runtime448, StoreGeneralSection;
var init_store_general_section = __esm({
  "src/routes/store/store-detail/components/store-general-section/store-general-section.tsx"() {
    "use strict";
    import_icons128 = require("@medusajs/icons");
    import_ui289 = require("@medusajs/ui");
    import_react_i18next322 = require("react-i18next");
    init_action_menu2();
    init_regions();
    import_jsx_runtime448 = require("react/jsx-runtime");
    StoreGeneralSection = ({ store }) => {
      const { t: t4 } = (0, import_react_i18next322.useTranslation)();
      const { region } = useRegion(store.default_region_id, void 0, {
        enabled: !!store.default_region_id
      });
      const defaultCurrency = store.supported_currencies?.find((c) => c.is_default);
      return /* @__PURE__ */ (0, import_jsx_runtime448.jsxs)(import_ui289.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime448.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime448.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime448.jsx)(import_ui289.Heading, { children: t4("store.domain") }),
            /* @__PURE__ */ (0, import_jsx_runtime448.jsx)(import_ui289.Text, { className: "text-ui-fg-subtle", size: "small", children: t4("store.manageYourStoresDetails") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime448.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      icon: /* @__PURE__ */ (0, import_jsx_runtime448.jsx)(import_icons128.PencilSquare, {}),
                      label: t4("actions.edit"),
                      to: "edit"
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime448.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime448.jsx)(import_ui289.Text, { size: "small", leading: "compact", weight: "plus", children: t4("fields.name") }),
          /* @__PURE__ */ (0, import_jsx_runtime448.jsx)(import_ui289.Text, { size: "small", leading: "compact", children: store.name })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime448.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime448.jsx)(import_ui289.Text, { size: "small", leading: "compact", weight: "plus", children: t4("store.defaultCurrency") }),
          defaultCurrency ? /* @__PURE__ */ (0, import_jsx_runtime448.jsxs)("div", { className: "flex items-center gap-x-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime448.jsx)(import_ui289.Badge, { size: "2xsmall", children: defaultCurrency.currency_code?.toUpperCase() }),
            /* @__PURE__ */ (0, import_jsx_runtime448.jsx)(import_ui289.Text, { size: "small", leading: "compact", children: defaultCurrency.currency?.name })
          ] }) : /* @__PURE__ */ (0, import_jsx_runtime448.jsx)(import_ui289.Text, { size: "small", leading: "compact", children: "-" })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime448.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime448.jsx)(import_ui289.Text, { size: "small", leading: "compact", weight: "plus", children: t4("store.defaultRegion") }),
          /* @__PURE__ */ (0, import_jsx_runtime448.jsx)("div", { className: "flex items-center gap-x-2", children: /* @__PURE__ */ (0, import_jsx_runtime448.jsx)(import_ui289.Text, { size: "small", leading: "compact", children: region?.name || "-" }) })
        ] })
      ] });
    };
  }
});

// src/routes/store/store-detail/components/store-general-section/index.ts
var init_store_general_section2 = __esm({
  "src/routes/store/store-detail/components/store-general-section/index.ts"() {
    "use strict";
    init_store_general_section();
  }
});

// src/routes/store/store-detail/store-detail.tsx
var import_react_router_dom146, import_jsx_runtime449, StoreDetail;
var init_store_detail = __esm({
  "src/routes/store/store-detail/store-detail.tsx"() {
    "use strict";
    import_react_router_dom146 = require("react-router-dom");
    init_store();
    init_store_currencies_section();
    init_store_general_section2();
    init_skeleton();
    init_pages();
    init_extensions();
    import_jsx_runtime449 = require("react/jsx-runtime");
    StoreDetail = () => {
      const initialData = (0, import_react_router_dom146.useLoaderData)();
      const { store, isPending, isError, error } = useStore(void 0, {
        initialData
      });
      const { getWidgets } = useDashboardExtension();
      if (isPending || !store) {
        return /* @__PURE__ */ (0, import_jsx_runtime449.jsx)(SingleColumnPageSkeleton, { sections: 2, showJSON: true, showMetadata: true });
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime449.jsxs)(
        SingleColumnPage,
        {
          widgets: {
            before: getWidgets("store.details.before"),
            after: getWidgets("store.details.after")
          },
          data: store,
          hasOutlet: true,
          showMetadata: true,
          showJSON: true,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime449.jsx)(StoreGeneralSection, { store }),
            /* @__PURE__ */ (0, import_jsx_runtime449.jsx)(StoreCurrencySection, { store })
          ]
        }
      );
    };
  }
});

// src/routes/store/store-detail/index.ts
var store_detail_exports = {};
__export(store_detail_exports, {
  Component: () => StoreDetail,
  loader: () => storeLoader
});
var init_store_detail2 = __esm({
  "src/routes/store/store-detail/index.ts"() {
    "use strict";
    init_loader18();
    init_store_detail();
  }
});

// src/routes/store/store-edit/components/edit-store-form/edit-store-form.tsx
var import_zod90, import_ui290, import_react_hook_form87, import_react_i18next323, import_zod91, import_jsx_runtime450, EditStoreSchema, EditStoreForm;
var init_edit_store_form = __esm({
  "src/routes/store/store-edit/components/edit-store-form/edit-store-form.tsx"() {
    "use strict";
    import_zod90 = require("@hookform/resolvers/zod");
    import_ui290 = require("@medusajs/ui");
    import_react_hook_form87 = require("react-hook-form");
    import_react_i18next323 = require("react-i18next");
    import_zod91 = require("zod");
    init_form2();
    init_modals();
    init_keybound_form2();
    init_regions();
    init_store();
    import_jsx_runtime450 = require("react/jsx-runtime");
    EditStoreSchema = import_zod91.z.object({
      name: import_zod91.z.string().min(1),
      default_currency_code: import_zod91.z.string().optional(),
      default_region_id: import_zod91.z.string().optional()
      // default_location_id: z.string().optional(),
    });
    EditStoreForm = ({ store }) => {
      const { t: t4 } = (0, import_react_i18next323.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form87.useForm)({
        defaultValues: {
          name: store.name,
          default_region_id: store.default_region_id || void 0,
          default_currency_code: store.supported_currencies?.find((c) => c.is_default)?.currency_code || void 0
        },
        resolver: (0, import_zod90.zodResolver)(EditStoreSchema)
      });
      const { mutateAsync, isPending } = useUpdateStore(store.id);
      const { regions, isPending: isRegionsLoading } = useRegions({ limit: 999 });
      const handleSubmit = form.handleSubmit(async (values) => {
        const normalizedMutation = {
          ...values,
          default_currency_code: void 0,
          supported_currencies: store.supported_currencies?.map((c) => ({
            ...c,
            is_default: c.currency_code === values.default_currency_code
          }))
        };
        await mutateAsync(normalizedMutation, {
          onSuccess: () => {
            import_ui290.toast.success(t4("store.toast.update"));
            handleSuccess();
          },
          onError: (error) => {
            import_ui290.toast.error(error.message);
          }
        });
      });
      return /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime450.jsxs)(KeyboundForm, { onSubmit: handleSubmit, className: "flex h-full flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(RouteDrawer.Body, { children: /* @__PURE__ */ (0, import_jsx_runtime450.jsxs)("div", { className: "flex flex-col gap-y-8", children: [
          /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "name",
              render: ({ field }) => /* @__PURE__ */ (0, import_jsx_runtime450.jsxs)(Form.Item, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(Form.Label, { children: t4("fields.name") }),
                /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(import_ui290.Input, { placeholder: "ACME", ...field }) }),
                /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(Form.ErrorMessage, {})
              ] })
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "default_currency_code",
              render: ({ field: { onChange, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime450.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(Form.Label, { children: t4("store.defaultCurrency") }),
                  /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime450.jsxs)(import_ui290.Select, { ...field, onValueChange: onChange, children: [
                    /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(import_ui290.Select.Trigger, { ref: field.ref, children: /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(import_ui290.Select.Value, {}) }),
                    /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(import_ui290.Select.Content, { children: store.supported_currencies?.map((currency) => /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(
                      import_ui290.Select.Item,
                      {
                        value: currency.currency_code,
                        children: currency.currency_code.toUpperCase()
                      },
                      currency.currency_code
                    )) })
                  ] }) })
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "default_region_id",
              render: ({ field: { onChange, ...field } }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime450.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(Form.Label, { children: t4("store.defaultRegion") }),
                  /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime450.jsxs)(
                    import_ui290.Select,
                    {
                      ...field,
                      onValueChange: onChange,
                      disabled: isRegionsLoading,
                      children: [
                        /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(import_ui290.Select.Trigger, { ref: field.ref, children: /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(import_ui290.Select.Value, {}) }),
                        /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(import_ui290.Select.Content, { children: (regions || []).map((region) => /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(import_ui290.Select.Item, { value: region.id, children: region.name }, region.id)) })
                      ]
                    }
                  ) })
                ] });
              }
            }
          )
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime450.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(import_ui290.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime450.jsx)(import_ui290.Button, { size: "small", isLoading: isPending, type: "submit", children: t4("actions.save") })
        ] }) })
      ] }) });
    };
  }
});

// src/routes/store/store-edit/store-edit.tsx
var import_ui291, import_react_i18next324, import_jsx_runtime451, StoreEdit;
var init_store_edit = __esm({
  "src/routes/store/store-edit/store-edit.tsx"() {
    "use strict";
    import_ui291 = require("@medusajs/ui");
    import_react_i18next324 = require("react-i18next");
    init_modals();
    init_store();
    init_edit_store_form();
    import_jsx_runtime451 = require("react/jsx-runtime");
    StoreEdit = () => {
      const { t: t4 } = (0, import_react_i18next324.useTranslation)();
      const { store, isPending: isLoading, isError, error } = useStore();
      if (isError) {
        throw error;
      }
      const ready = !!store && !isLoading;
      return /* @__PURE__ */ (0, import_jsx_runtime451.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime451.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime451.jsx)(import_ui291.Heading, { children: t4("store.edit.header") }) }),
        ready && /* @__PURE__ */ (0, import_jsx_runtime451.jsx)(EditStoreForm, { store })
      ] });
    };
  }
});

// src/routes/store/store-edit/index.ts
var store_edit_exports = {};
__export(store_edit_exports, {
  Component: () => StoreEdit
});
var init_store_edit2 = __esm({
  "src/routes/store/store-edit/index.ts"() {
    "use strict";
    init_store_edit();
  }
});

// src/routes/store/store-add-currencies/components/add-currencies-form/add-currencies-form.tsx
var import_ui292, import_react_table59, import_react215, import_react_i18next325, zod29, import_zod92, import_react_query70, import_react_hook_form88, import_jsx_runtime452, AddCurrenciesSchema, PAGE_SIZE44, PREFIX18, AddCurrenciesForm, columnHelper60, useColumns32;
var init_add_currencies_form = __esm({
  "src/routes/store/store-add-currencies/components/add-currencies-form/add-currencies-form.tsx"() {
    "use strict";
    import_ui292 = require("@medusajs/ui");
    import_react_table59 = require("@tanstack/react-table");
    import_react215 = require("react");
    import_react_i18next325 = require("react-i18next");
    zod29 = __toESM(require("zod"));
    import_zod92 = require("@hookform/resolvers/zod");
    import_react_query70 = require("@tanstack/react-query");
    import_react_hook_form88 = require("react-hook-form");
    init_modals();
    init_data_table2();
    init_keybound_form2();
    init_currencies();
    init_price_preferences();
    init_store();
    init_use_data_table();
    init_query_client();
    init_use_currencies_table_columns();
    init_use_currencies_table_query();
    import_jsx_runtime452 = require("react/jsx-runtime");
    AddCurrenciesSchema = zod29.object({
      currencies: zod29.array(zod29.string()).min(1),
      pricePreferences: zod29.record(zod29.boolean())
    });
    PAGE_SIZE44 = 50;
    PREFIX18 = "ac";
    AddCurrenciesForm = ({
      store,
      pricePreferences
    }) => {
      const { t: t4 } = (0, import_react_i18next325.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const { raw, searchParams } = useCurrenciesTableQuery({
        pageSize: 50,
        prefix: PREFIX18
      });
      const {
        currencies: currencies2,
        count: count3,
        isPending: isLoading,
        isError,
        error
      } = useCurrencies(searchParams, {
        placeholderData: import_react_query70.keepPreviousData
      });
      const form = (0, import_react_hook_form88.useForm)({
        defaultValues: {
          currencies: [],
          pricePreferences: pricePreferences?.reduce(
            (acc, curr) => {
              if (curr.value) {
                acc[curr.value] = curr.is_tax_inclusive;
              }
              return acc;
            },
            {}
          )
        },
        resolver: (0, import_zod92.zodResolver)(AddCurrenciesSchema)
      });
      const [rowSelection, setRowSelection] = (0, import_react215.useState)({});
      const { setValue, watch } = form;
      const pricePreferenceValues = watch("pricePreferences");
      const updater = (fn) => {
        const updated = typeof fn === "function" ? fn(rowSelection) : fn;
        const ids = Object.keys(updated);
        setValue("currencies", ids, {
          shouldDirty: true,
          shouldTouch: true
        });
        setRowSelection(updated);
      };
      const preSelectedRows = store.supported_currencies?.map((c) => c.currency_code) ?? [];
      const setPricePreferences = (0, import_react215.useCallback)(
        (values) => {
          setValue("pricePreferences", values);
        },
        [setValue]
      );
      const columns = useColumns32(pricePreferenceValues, setPricePreferences);
      const { table } = useDataTable({
        data: currencies2 ?? [],
        columns,
        count: count3,
        getRowId: (row) => row.code,
        enableRowSelection: (row) => !preSelectedRows.includes(row.original.code),
        enablePagination: true,
        pageSize: PAGE_SIZE44,
        prefix: PREFIX18,
        rowSelection: {
          state: rowSelection,
          updater
        }
      });
      const { mutateAsync, isPending } = useUpdateStore(store.id);
      const handleSubmit = form.handleSubmit(async (data) => {
        const currencies3 = Array.from(
          /* @__PURE__ */ new Set([...data.currencies, ...preSelectedRows])
        );
        let defaultCurrency = store.supported_currencies?.find(
          (c) => c.is_default
        )?.currency_code;
        if (!currencies3.includes(defaultCurrency ?? "")) {
          defaultCurrency = currencies3?.[0];
        }
        await mutateAsync(
          {
            supported_currencies: currencies3.map((c) => ({
              currency_code: c,
              is_default: c === defaultCurrency,
              is_tax_inclusive: data.pricePreferences[c]
            }))
          },
          {
            onSuccess: () => {
              import_ui292.toast.success(t4("store.toast.currenciesUpdated"));
              queryClient.invalidateQueries({
                queryKey: pricePreferencesQueryKeys.all
              });
              handleSuccess();
            },
            onError: (error2) => {
              import_ui292.toast.error(error2.message);
            }
          }
        );
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime452.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime452.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex h-full flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime452.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime452.jsx)("div", { className: "flex flex-1 items-center justify-between", children: /* @__PURE__ */ (0, import_jsx_runtime452.jsx)("div", { className: "flex items-center", children: form.formState.errors.currencies && /* @__PURE__ */ (0, import_jsx_runtime452.jsx)(import_ui292.Hint, { variant: "error", children: form.formState.errors.currencies.message }) }) }) }),
            /* @__PURE__ */ (0, import_jsx_runtime452.jsx)(RouteFocusModal.Body, { className: "flex flex-1 flex-col overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime452.jsx)(
              DataTable,
              {
                table,
                pageSize: PAGE_SIZE44,
                count: count3,
                columns,
                layout: "fill",
                pagination: true,
                search: "autofocus",
                prefix: PREFIX18,
                orderBy: [
                  { key: "name", label: t4("fields.name") },
                  { key: "code", label: t4("fields.code") }
                ],
                isLoading,
                queryObject: raw
              }
            ) }),
            /* @__PURE__ */ (0, import_jsx_runtime452.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime452.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime452.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime452.jsx)(import_ui292.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime452.jsx)(import_ui292.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
    columnHelper60 = (0, import_react_table59.createColumnHelper)();
    useColumns32 = (pricePreferences, setPricePreferences) => {
      const { t: t4 } = (0, import_react_i18next325.useTranslation)();
      const base = useCurrenciesTableColumns();
      return (0, import_react215.useMemo)(
        () => [
          columnHelper60.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime452.jsx)(
                import_ui292.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              const isPreSelected = !row.getCanSelect();
              const isSelected2 = row.getIsSelected() || isPreSelected;
              const Component5 = /* @__PURE__ */ (0, import_jsx_runtime452.jsx)(
                import_ui292.Checkbox,
                {
                  checked: isSelected2,
                  disabled: isPreSelected,
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
              if (isPreSelected) {
                return /* @__PURE__ */ (0, import_jsx_runtime452.jsx)(import_ui292.Tooltip, { content: t4("store.currencyAlreadyAdded"), side: "right", children: Component5 });
              }
              return Component5;
            }
          }),
          ...base,
          columnHelper60.display({
            id: "select",
            header: () => /* @__PURE__ */ (0, import_jsx_runtime452.jsx)("div", { className: "whitespace-nowrap", children: t4("fields.taxInclusivePricing") }),
            cell: ({ row }) => {
              const isPreSelected = !row.getCanSelect();
              const isTaxInclusive = pricePreferences[row.original.code];
              return /* @__PURE__ */ (0, import_jsx_runtime452.jsx)("div", { className: "flex items-center justify-end", children: /* @__PURE__ */ (0, import_jsx_runtime452.jsx)(
                import_ui292.Switch,
                {
                  disabled: isPreSelected,
                  checked: isTaxInclusive ?? false,
                  onCheckedChange: (val) => {
                    setPricePreferences({
                      ...pricePreferences,
                      [row.original.code]: val
                    });
                  }
                }
              ) });
            }
          })
        ],
        [t4, base, pricePreferences, setPricePreferences]
      );
    };
  }
});

// src/routes/store/store-add-currencies/store-add-currencies.tsx
var import_jsx_runtime453, StoreAddCurrencies;
var init_store_add_currencies = __esm({
  "src/routes/store/store-add-currencies/store-add-currencies.tsx"() {
    "use strict";
    init_modals();
    init_price_preferences();
    init_store();
    init_add_currencies_form();
    import_jsx_runtime453 = require("react/jsx-runtime");
    StoreAddCurrencies = () => {
      const { store, isPending, isError, error } = useStore();
      const {
        price_preferences: pricePreferences,
        isPending: isPricePreferencesPending,
        isError: isPricePreferencesError,
        error: pricePreferencesError
      } = usePricePreferences(
        {
          attribute: "currency_code",
          value: store?.supported_currencies?.map((c) => c.currency_code)
        },
        {
          enabled: !!store
        }
      );
      const ready = !!store && !isPending && !!pricePreferences && !isPricePreferencesPending;
      if (isError) {
        throw error;
      }
      if (isPricePreferencesError) {
        throw pricePreferencesError;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime453.jsx)(RouteFocusModal, { children: ready && /* @__PURE__ */ (0, import_jsx_runtime453.jsx)(AddCurrenciesForm, { store, pricePreferences }) });
    };
  }
});

// src/routes/store/store-add-currencies/index.ts
var store_add_currencies_exports = {};
__export(store_add_currencies_exports, {
  Component: () => StoreAddCurrencies
});
var init_store_add_currencies2 = __esm({
  "src/routes/store/store-add-currencies/index.ts"() {
    "use strict";
    init_store_add_currencies();
  }
});

// src/routes/store/store-metadata/store-metadata.tsx
var import_jsx_runtime454, StoreMetadata;
var init_store_metadata = __esm({
  "src/routes/store/store-metadata/store-metadata.tsx"() {
    "use strict";
    init_metadata_form2();
    init_modals();
    init_api();
    import_jsx_runtime454 = require("react/jsx-runtime");
    StoreMetadata = () => {
      const { store, isPending, isError, error } = useStore();
      const { mutateAsync, isPending: isMutating } = useUpdateStore(store?.id);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime454.jsx)(RouteDrawer, { children: /* @__PURE__ */ (0, import_jsx_runtime454.jsx)(
        MetadataForm,
        {
          isPending,
          isMutating,
          hook: mutateAsync,
          metadata: store?.metadata
        }
      ) });
    };
  }
});

// src/routes/store/store-metadata/index.ts
var store_metadata_exports = {};
__export(store_metadata_exports, {
  Component: () => StoreMetadata
});
var init_store_metadata2 = __esm({
  "src/routes/store/store-metadata/index.ts"() {
    "use strict";
    init_store_metadata();
  }
});

// src/routes/users/user-list/components/user-list-table/user-row-actions.tsx
var import_icons129, import_react_i18next326, import_jsx_runtime455, UserRowActions;
var init_user_row_actions = __esm({
  "src/routes/users/user-list/components/user-list-table/user-row-actions.tsx"() {
    "use strict";
    import_icons129 = require("@medusajs/icons");
    import_react_i18next326 = require("react-i18next");
    init_action_menu2();
    import_jsx_runtime455 = require("react/jsx-runtime");
    UserRowActions = ({ user }) => {
      const { t: t4 } = (0, import_react_i18next326.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime455.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime455.jsx)(import_icons129.PencilSquare, {}),
                  label: t4("actions.edit"),
                  to: `${user.id}/edit`
                }
              ]
            }
          ]
        }
      );
    };
  }
});

// src/routes/users/user-list/components/user-list-table/use-user-table-columns.tsx
var import_react_table60, import_react216, import_react_i18next327, import_jsx_runtime456, columnHelper61, useUserTableColumns;
var init_use_user_table_columns = __esm({
  "src/routes/users/user-list/components/user-list-table/use-user-table-columns.tsx"() {
    "use strict";
    import_react_table60 = require("@tanstack/react-table");
    import_react216 = require("react");
    import_react_i18next327 = require("react-i18next");
    init_user_row_actions();
    import_jsx_runtime456 = require("react/jsx-runtime");
    columnHelper61 = (0, import_react_table60.createColumnHelper)();
    useUserTableColumns = () => {
      const { t: t4 } = (0, import_react_i18next327.useTranslation)();
      return (0, import_react216.useMemo)(
        () => [
          columnHelper61.accessor("email", {
            header: t4("fields.email"),
            cell: ({ row }) => {
              return row.original.email;
            }
          }),
          columnHelper61.display({
            id: "name",
            header: t4("fields.name"),
            cell: ({ row }) => {
              const name = [row.original.first_name, row.original.last_name].filter(Boolean).join(" ");
              if (!name) {
                return /* @__PURE__ */ (0, import_jsx_runtime456.jsx)("span", { className: "text-ui-fg-muted", children: "-" });
              }
              return name;
            }
          }),
          columnHelper61.display({
            id: "actions",
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime456.jsx)(UserRowActions, { user: row.original })
          })
        ],
        [t4]
      );
    };
  }
});

// src/routes/users/user-list/components/user-list-table/use-user-table-query.tsx
var useUserTableQuery;
var init_use_user_table_query = __esm({
  "src/routes/users/user-list/components/user-list-table/use-user-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useUserTableQuery = ({
      pageSize = 20,
      prefix
    }) => {
      const raw = useQueryParams(["q", "order", "offset"], prefix);
      const { offset: offset4, ...params2 } = raw;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? parseInt(offset4) : 0,
        ...params2
      };
      return {
        searchParams,
        raw
      };
    };
  }
});

// src/routes/users/user-list/components/user-list-table/user-list-table.tsx
var import_ui293, import_react_query71, import_react_i18next328, import_react_router_dom147, import_jsx_runtime457, PAGE_SIZE45, UserListTable;
var init_user_list_table = __esm({
  "src/routes/users/user-list/components/user-list-table/user-list-table.tsx"() {
    "use strict";
    import_ui293 = require("@medusajs/ui");
    import_react_query71 = require("@tanstack/react-query");
    import_react_i18next328 = require("react-i18next");
    import_react_router_dom147 = require("react-router-dom");
    init_data_table2();
    init_users();
    init_use_data_table();
    init_use_user_table_columns();
    init_use_user_table_query();
    import_jsx_runtime457 = require("react/jsx-runtime");
    PAGE_SIZE45 = 20;
    UserListTable = () => {
      const { raw, searchParams } = useUserTableQuery({
        pageSize: PAGE_SIZE45
      });
      const {
        users,
        count: count3,
        isPending: isLoading,
        isError,
        error
      } = useUsers(searchParams, {
        placeholderData: import_react_query71.keepPreviousData
      });
      const columns = useUserTableColumns();
      const { table } = useDataTable({
        data: users ?? [],
        columns,
        count: count3,
        enablePagination: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE45
      });
      const { t: t4 } = (0, import_react_i18next328.useTranslation)();
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime457.jsxs)(import_ui293.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime457.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime457.jsx)(import_ui293.Heading, { children: t4("users.domain") }),
          /* @__PURE__ */ (0, import_jsx_runtime457.jsx)(import_ui293.Button, { size: "small", variant: "secondary", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime457.jsx)(import_react_router_dom147.Link, { to: "invite", children: t4("users.invite") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime457.jsx)(
          DataTable,
          {
            table,
            columns,
            count: count3,
            pageSize: PAGE_SIZE45,
            isLoading,
            orderBy: [
              { key: "email", label: t4("fields.email") },
              { key: "first_name", label: t4("fields.firstName") },
              { key: "last_name", label: t4("fields.lastName") }
            ],
            navigateTo: (row) => `${row.id}`,
            search: true,
            pagination: true,
            queryObject: raw
          }
        )
      ] });
    };
  }
});

// src/routes/users/user-list/components/user-list-table/index.ts
var init_user_list_table2 = __esm({
  "src/routes/users/user-list/components/user-list-table/index.ts"() {
    "use strict";
    init_user_list_table();
  }
});

// src/routes/users/user-list/user-list.tsx
var import_jsx_runtime458, UserList;
var init_user_list = __esm({
  "src/routes/users/user-list/user-list.tsx"() {
    "use strict";
    init_pages();
    init_extensions();
    init_user_list_table2();
    import_jsx_runtime458 = require("react/jsx-runtime");
    UserList = () => {
      const { getWidgets } = useDashboardExtension();
      return /* @__PURE__ */ (0, import_jsx_runtime458.jsx)(
        SingleColumnPage,
        {
          widgets: {
            after: getWidgets("user.list.after"),
            before: getWidgets("user.list.before")
          },
          children: /* @__PURE__ */ (0, import_jsx_runtime458.jsx)(UserListTable, {})
        }
      );
    };
  }
});

// src/routes/users/user-list/index.ts
var user_list_exports = {};
__export(user_list_exports, {
  Component: () => UserList
});
var init_user_list2 = __esm({
  "src/routes/users/user-list/index.ts"() {
    "use strict";
    init_user_list();
  }
});

// src/routes/users/user-invite/components/invite-user-form/invite-user-form.tsx
var import_zod93, import_icons130, import_ui294, import_react_table61, import_copy_to_clipboard3, import_date_fns7, import_react217, import_react_hook_form89, import_react_i18next329, zod30, import_jsx_runtime459, InviteUserSchema, PAGE_SIZE46, PREFIX19, INVITE_URL, InviteUserForm, InviteActions, columnHelper62, useColumns33;
var init_invite_user_form = __esm({
  "src/routes/users/user-invite/components/invite-user-form/invite-user-form.tsx"() {
    "use strict";
    import_zod93 = require("@hookform/resolvers/zod");
    import_icons130 = require("@medusajs/icons");
    import_ui294 = require("@medusajs/ui");
    import_react_table61 = require("@tanstack/react-table");
    import_copy_to_clipboard3 = __toESM(require_copy_to_clipboard());
    import_date_fns7 = require("date-fns");
    import_react217 = require("react");
    import_react_hook_form89 = require("react-hook-form");
    import_react_i18next329 = require("react-i18next");
    zod30 = __toESM(require("zod"));
    init_action_menu2();
    init_form2();
    init_modals();
    init_data_table2();
    init_keybound_form();
    init_invites();
    init_use_user_invite_table_query();
    init_use_data_table();
    init_is_fetch_error();
    import_jsx_runtime459 = require("react/jsx-runtime");
    InviteUserSchema = zod30.object({
      email: zod30.string().email()
    });
    PAGE_SIZE46 = 10;
    PREFIX19 = "usr_invite";
    INVITE_URL = `${window.location.origin}${__BASE__ === "/" ? "" : __BASE__}/invite?token=`;
    InviteUserForm = () => {
      const { t: t4 } = (0, import_react_i18next329.useTranslation)();
      const form = (0, import_react_hook_form89.useForm)({
        defaultValues: {
          email: ""
        },
        resolver: (0, import_zod93.zodResolver)(InviteUserSchema)
      });
      const { raw, searchParams } = useUserInviteTableQuery({
        prefix: PREFIX19,
        pageSize: PAGE_SIZE46
      });
      const {
        invites,
        count: count3,
        isPending: isLoading,
        isError,
        error
      } = useInvites(searchParams);
      const columns = useColumns33();
      const { table } = useDataTable({
        data: invites ?? [],
        columns,
        count: count3,
        enablePagination: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE46,
        prefix: PREFIX19
      });
      const { mutateAsync, isPending } = useCreateInvite();
      const handleSubmit = form.handleSubmit(async (values) => {
        try {
          await mutateAsync({ email: values.email });
          form.reset();
        } catch (error2) {
          if (isFetchError(error2) && error2.status === 400) {
            form.setError("root", {
              type: "manual",
              message: error2.message
            });
            return;
          }
        }
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime459.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex h-full flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(RouteFocusModal.Header, {}),
            /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(RouteFocusModal.Body, { className: "flex flex-1 flex-col overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime459.jsx)("div", { className: "flex flex-1 flex-col items-center overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime459.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8 px-2 py-16", children: [
              /* @__PURE__ */ (0, import_jsx_runtime459.jsxs)("div", { children: [
                /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(import_ui294.Heading, { children: t4("users.inviteUser") }),
                /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(import_ui294.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("users.inviteUserHint") })
              ] }),
              form.formState.errors.root && /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(
                import_ui294.Alert,
                {
                  variant: "error",
                  dismissible: false,
                  className: "text-balance",
                  children: form.formState.errors.root.message
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime459.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime459.jsx)("div", { className: "grid grid-cols-2 gap-4", children: /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "email",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime459.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(Form.Label, { children: t4("fields.email") }),
                        /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(import_ui294.Input, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ) }),
                /* @__PURE__ */ (0, import_jsx_runtime459.jsx)("div", { className: "flex items-center justify-end", children: /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(
                  import_ui294.Button,
                  {
                    size: "small",
                    variant: "secondary",
                    type: "submit",
                    isLoading: isPending,
                    children: t4("users.sendInvite")
                  }
                ) })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime459.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(import_ui294.Heading, { level: "h2", children: t4("users.pendingInvites") }),
                /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(import_ui294.Container, { className: "overflow-hidden p-0", children: /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(
                  DataTable,
                  {
                    table,
                    columns,
                    count: count3,
                    pageSize: PAGE_SIZE46,
                    pagination: true,
                    search: "autofocus",
                    isLoading,
                    queryObject: raw,
                    orderBy: [
                      { key: "email", label: t4("fields.email") },
                      { key: "created_at", label: t4("fields.createdAt") },
                      { key: "updated_at", label: t4("fields.updatedAt") }
                    ]
                  }
                ) })
              ] })
            ] }) }) })
          ]
        }
      ) });
    };
    InviteActions = ({ invite }) => {
      const { mutateAsync: revokeAsync } = useDeleteInvite(invite.id);
      const { mutateAsync: resendAsync } = useResendInvite(invite.id);
      const prompt = (0, import_ui294.usePrompt)();
      const { t: t4 } = (0, import_react_i18next329.useTranslation)();
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("users.deleteInviteWarning", {
            email: invite.email
          }),
          cancelText: t4("actions.cancel"),
          confirmText: t4("actions.delete")
        });
        if (!res) {
          return;
        }
        await revokeAsync();
      };
      const handleResend = async () => {
        await resendAsync();
      };
      const handleCopyInviteLink = () => {
        const inviteUrl = `${INVITE_URL}${invite.token}`;
        (0, import_copy_to_clipboard3.default)(inviteUrl);
      };
      return /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(import_icons130.ArrowPath, {}),
                  label: t4("users.resendInvite"),
                  onClick: handleResend
                }
              ]
            },
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(import_icons130.Link, {}),
                  label: t4("users.copyInviteLink"),
                  onClick: handleCopyInviteLink
                }
              ]
            },
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(import_icons130.Trash, {}),
                  label: t4("actions.delete"),
                  onClick: handleDelete
                }
              ]
            }
          ]
        }
      );
    };
    columnHelper62 = (0, import_react_table61.createColumnHelper)();
    useColumns33 = () => {
      const { t: t4 } = (0, import_react_i18next329.useTranslation)();
      return (0, import_react217.useMemo)(
        () => [
          columnHelper62.accessor("email", {
            header: t4("fields.email"),
            cell: ({ getValue: getValue2 }) => {
              return getValue2();
            }
          }),
          columnHelper62.accessor("accepted", {
            header: t4("fields.status"),
            cell: ({ getValue: getValue2, row }) => {
              const accepted = getValue2();
              const expired = new Date(row.original.expires_at) < /* @__PURE__ */ new Date();
              if (accepted) {
                return /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(
                  import_ui294.Tooltip,
                  {
                    content: t4("users.acceptedOnDate", {
                      date: (0, import_date_fns7.format)(
                        new Date(row.original.updated_at),
                        "dd MMM, yyyy"
                      )
                    }),
                    children: /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(import_ui294.StatusBadge, { color: "green", children: t4("users.inviteStatus.accepted") })
                  }
                );
              }
              if (expired) {
                return /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(
                  import_ui294.Tooltip,
                  {
                    content: t4("users.expiredOnDate", {
                      date: (0, import_date_fns7.format)(
                        new Date(row.original.expires_at),
                        "dd MMM, yyyy"
                      )
                    }),
                    children: /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(import_ui294.StatusBadge, { color: "red", children: t4("users.inviteStatus.expired") })
                  }
                );
              }
              return /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(
                import_ui294.Tooltip,
                {
                  content: /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(
                    import_react_i18next329.Trans,
                    {
                      i18nKey: "users.validFromUntil",
                      components: [
                        /* @__PURE__ */ (0, import_jsx_runtime459.jsx)("span", { className: "font-medium" }, "from"),
                        /* @__PURE__ */ (0, import_jsx_runtime459.jsx)("span", { className: "font-medium" }, "untill")
                      ],
                      values: {
                        from: (0, import_date_fns7.format)(
                          new Date(row.original.created_at),
                          "dd MMM, yyyy"
                        ),
                        until: (0, import_date_fns7.format)(
                          new Date(row.original.expires_at),
                          "dd MMM, yyyy"
                        )
                      }
                    }
                  ),
                  children: /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(import_ui294.StatusBadge, { color: "orange", children: t4("users.inviteStatus.pending") })
                }
              );
            }
          }),
          columnHelper62.display({
            id: "actions",
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime459.jsx)(InviteActions, { invite: row.original })
          })
        ],
        [t4]
      );
    };
  }
});

// src/routes/users/user-invite/user-invite.tsx
var import_jsx_runtime460, UserInvite;
var init_user_invite = __esm({
  "src/routes/users/user-invite/user-invite.tsx"() {
    "use strict";
    init_modals();
    init_invite_user_form();
    import_jsx_runtime460 = require("react/jsx-runtime");
    UserInvite = () => {
      return /* @__PURE__ */ (0, import_jsx_runtime460.jsx)(RouteFocusModal, { children: /* @__PURE__ */ (0, import_jsx_runtime460.jsx)(InviteUserForm, {}) });
    };
  }
});

// src/routes/users/user-invite/index.ts
var user_invite_exports = {};
__export(user_invite_exports, {
  Component: () => UserInvite
});
var init_user_invite2 = __esm({
  "src/routes/users/user-invite/index.ts"() {
    "use strict";
    init_user_invite();
  }
});

// src/routes/users/user-detail/loader.ts
var userDetailQuery, userLoader;
var init_loader19 = __esm({
  "src/routes/users/user-detail/loader.ts"() {
    "use strict";
    init_products();
    init_client2();
    init_query_client();
    userDetailQuery = (id2) => ({
      queryKey: productsQueryKeys.detail(id2),
      queryFn: async () => sdk.admin.user.retrieve(id2)
    });
    userLoader = async ({ params: params2 }) => {
      const id2 = params2.id;
      const query = userDetailQuery(id2);
      return queryClient.getQueryData(query.queryKey) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/routes/users/user-detail/components/user-general-section/user-general-section.tsx
var import_icons131, import_ui295, import_react_i18next330, import_react_router_dom148, import_jsx_runtime461, UserGeneralSection;
var init_user_general_section = __esm({
  "src/routes/users/user-detail/components/user-general-section/user-general-section.tsx"() {
    "use strict";
    import_icons131 = require("@medusajs/icons");
    import_ui295 = require("@medusajs/ui");
    import_react_i18next330 = require("react-i18next");
    import_react_router_dom148 = require("react-router-dom");
    init_action_menu2();
    init_users();
    import_jsx_runtime461 = require("react/jsx-runtime");
    UserGeneralSection = ({ user }) => {
      const { t: t4 } = (0, import_react_i18next330.useTranslation)();
      const navigate = (0, import_react_router_dom148.useNavigate)();
      const prompt = (0, import_ui295.usePrompt)();
      const { mutateAsync } = useDeleteUser(user.id);
      const name = [user.first_name, user.last_name].filter(Boolean).join(" ");
      const handleDeleteUser = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("users.deleteUserWarning", {
            name: name ?? user.email
          }),
          verificationText: name ?? user.email,
          verificationInstruction: t4("general.typeToConfirm"),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            navigate("..");
          }
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime461.jsxs)(import_ui295.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime461.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime461.jsx)(import_ui295.Heading, { children: user.email }),
          /* @__PURE__ */ (0, import_jsx_runtime461.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      label: t4("actions.edit"),
                      to: "edit",
                      icon: /* @__PURE__ */ (0, import_jsx_runtime461.jsx)(import_icons131.PencilSquare, {})
                    }
                  ]
                },
                {
                  actions: [
                    {
                      label: t4("actions.delete"),
                      onClick: handleDeleteUser,
                      icon: /* @__PURE__ */ (0, import_jsx_runtime461.jsx)(import_icons131.Trash, {})
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime461.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime461.jsx)(import_ui295.Text, { size: "small", leading: "compact", weight: "plus", children: t4("fields.name") }),
          /* @__PURE__ */ (0, import_jsx_runtime461.jsx)(import_ui295.Text, { size: "small", leading: "compact", children: name ?? "-" })
        ] })
      ] });
    };
  }
});

// src/routes/users/user-detail/components/user-general-section/index.ts
var init_user_general_section2 = __esm({
  "src/routes/users/user-detail/components/user-general-section/index.ts"() {
    "use strict";
    init_user_general_section();
  }
});

// src/routes/users/user-detail/user-detail.tsx
var import_react_router_dom149, import_jsx_runtime462, UserDetail;
var init_user_detail = __esm({
  "src/routes/users/user-detail/user-detail.tsx"() {
    "use strict";
    import_react_router_dom149 = require("react-router-dom");
    init_users();
    init_user_general_section2();
    init_skeleton2();
    init_pages();
    init_extensions();
    import_jsx_runtime462 = require("react/jsx-runtime");
    UserDetail = () => {
      const initialData = (0, import_react_router_dom149.useLoaderData)();
      const { id: id2 } = (0, import_react_router_dom149.useParams)();
      const {
        user,
        isPending: isLoading,
        isError,
        error
      } = useUser(id2, void 0, {
        initialData
      });
      const { getWidgets } = useDashboardExtension();
      if (isLoading || !user) {
        return /* @__PURE__ */ (0, import_jsx_runtime462.jsx)(SingleColumnPageSkeleton, { sections: 1, showJSON: true, showMetadata: true });
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime462.jsx)(
        SingleColumnPage,
        {
          data: user,
          showJSON: true,
          showMetadata: true,
          widgets: {
            after: getWidgets("user.details.after"),
            before: getWidgets("user.details.before")
          },
          children: /* @__PURE__ */ (0, import_jsx_runtime462.jsx)(UserGeneralSection, { user })
        }
      );
    };
  }
});

// src/routes/users/user-detail/index.ts
var user_detail_exports = {};
__export(user_detail_exports, {
  Component: () => UserDetail,
  loader: () => userLoader
});
var init_user_detail2 = __esm({
  "src/routes/users/user-detail/index.ts"() {
    "use strict";
    init_loader19();
    init_user_detail();
  }
});

// src/routes/users/user-edit/components/edit-user-form/edit-user-form.tsx
var import_zod94, import_ui296, import_react_hook_form90, import_react_i18next331, zod31, import_jsx_runtime463, EditUserFormSchema, EditUserForm;
var init_edit_user_form = __esm({
  "src/routes/users/user-edit/components/edit-user-form/edit-user-form.tsx"() {
    "use strict";
    import_zod94 = require("@hookform/resolvers/zod");
    import_ui296 = require("@medusajs/ui");
    import_react_hook_form90 = require("react-hook-form");
    import_react_i18next331 = require("react-i18next");
    zod31 = __toESM(require("zod"));
    init_form2();
    init_modals();
    init_keybound_form2();
    init_users();
    import_jsx_runtime463 = require("react/jsx-runtime");
    EditUserFormSchema = zod31.object({
      first_name: zod31.string().optional(),
      last_name: zod31.string().optional()
    });
    EditUserForm = ({ user }) => {
      const { t: t4 } = (0, import_react_i18next331.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form90.useForm)({
        defaultValues: {
          first_name: user.first_name || "",
          last_name: user.last_name || ""
        },
        resolver: (0, import_zod94.zodResolver)(EditUserFormSchema)
      });
      const { mutateAsync, isPending } = useUpdateUser(user.id);
      const handleSubmit = form.handleSubmit(async (values) => {
        await mutateAsync(values, {
          onSuccess: () => {
            handleSuccess();
          }
        });
      });
      return /* @__PURE__ */ (0, import_jsx_runtime463.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime463.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex flex-1 flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime463.jsxs)(RouteDrawer.Body, { className: "flex max-w-full flex-1 flex-col gap-y-8 overflow-y-auto", children: [
              /* @__PURE__ */ (0, import_jsx_runtime463.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "first_name",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime463.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime463.jsx)(Form.Label, { children: t4("fields.firstName") }),
                      /* @__PURE__ */ (0, import_jsx_runtime463.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime463.jsx)(import_ui296.Input, { ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime463.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime463.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "last_name",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime463.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime463.jsx)(Form.Label, { children: t4("fields.lastName") }),
                      /* @__PURE__ */ (0, import_jsx_runtime463.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime463.jsx)(import_ui296.Input, { ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime463.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              )
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime463.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime463.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime463.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime463.jsx)(import_ui296.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime463.jsx)(import_ui296.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/users/user-edit/components/edit-user-form/index.ts
var init_edit_user_form2 = __esm({
  "src/routes/users/user-edit/components/edit-user-form/index.ts"() {
    "use strict";
    init_edit_user_form();
  }
});

// src/routes/users/user-edit/user-edit.tsx
var import_ui297, import_react_i18next332, import_react_router_dom150, import_jsx_runtime464, UserEdit;
var init_user_edit = __esm({
  "src/routes/users/user-edit/user-edit.tsx"() {
    "use strict";
    import_ui297 = require("@medusajs/ui");
    import_react_i18next332 = require("react-i18next");
    import_react_router_dom150 = require("react-router-dom");
    init_modals();
    init_users();
    init_edit_user_form2();
    import_jsx_runtime464 = require("react/jsx-runtime");
    UserEdit = () => {
      const { t: t4 } = (0, import_react_i18next332.useTranslation)();
      const { id: id2 } = (0, import_react_router_dom150.useParams)();
      const { user, isPending: isLoading, isError, error } = useUser(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime464.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime464.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime464.jsx)(import_ui297.Heading, { children: t4("users.editUser") }) }),
        !isLoading && user && /* @__PURE__ */ (0, import_jsx_runtime464.jsx)(EditUserForm, { user })
      ] });
    };
  }
});

// src/routes/users/user-edit/index.ts
var user_edit_exports = {};
__export(user_edit_exports, {
  Component: () => UserEdit
});
var init_user_edit2 = __esm({
  "src/routes/users/user-edit/index.ts"() {
    "use strict";
    init_user_edit();
  }
});

// src/routes/users/user-metadata/user-metadata.tsx
var import_react_router_dom151, import_jsx_runtime465, UserMetadata;
var init_user_metadata = __esm({
  "src/routes/users/user-metadata/user-metadata.tsx"() {
    "use strict";
    import_react_router_dom151 = require("react-router-dom");
    init_metadata_form2();
    init_modals();
    init_api();
    import_jsx_runtime465 = require("react/jsx-runtime");
    UserMetadata = () => {
      const { id: id2 } = (0, import_react_router_dom151.useParams)();
      const { user, isPending, isError, error } = useUser(id2);
      const { mutateAsync, isPending: isMutating } = useUpdateUser(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime465.jsx)(RouteDrawer, { children: /* @__PURE__ */ (0, import_jsx_runtime465.jsx)(
        MetadataForm,
        {
          isPending,
          isMutating,
          hook: mutateAsync,
          metadata: user?.metadata
        }
      ) });
    };
  }
});

// src/routes/users/user-metadata/index.ts
var user_metadata_exports = {};
__export(user_metadata_exports, {
  Component: () => UserMetadata
});
var init_user_metadata2 = __esm({
  "src/routes/users/user-metadata/index.ts"() {
    "use strict";
    init_user_metadata();
  }
});

// src/routes/sales-channels/sales-channel-list/components/sales-channel-list-table.tsx
var import_icons132, import_ui298, import_react_query72, import_react_table62, import_react218, import_react_i18next333, import_react_router_dom152, import_jsx_runtime466, PAGE_SIZE47, SalesChannelListTable, SalesChannelActions, columnHelper63, useColumns34;
var init_sales_channel_list_table = __esm({
  "src/routes/sales-channels/sales-channel-list/components/sales-channel-list-table.tsx"() {
    "use strict";
    import_icons132 = require("@medusajs/icons");
    import_ui298 = require("@medusajs/ui");
    import_react_query72 = require("@tanstack/react-query");
    import_react_table62 = require("@tanstack/react-table");
    import_react218 = require("react");
    import_react_i18next333 = require("react-i18next");
    import_react_router_dom152 = require("react-router-dom");
    init_action_menu2();
    init_data_table2();
    init_sales_channels();
    init_use_sales_channel_table_columns();
    init_filters();
    init_use_sales_channel_table_query();
    init_use_data_table();
    import_jsx_runtime466 = require("react/jsx-runtime");
    PAGE_SIZE47 = 20;
    SalesChannelListTable = () => {
      const { t: t4 } = (0, import_react_i18next333.useTranslation)();
      const { raw, searchParams } = useSalesChannelTableQuery({
        pageSize: PAGE_SIZE47
      });
      const {
        sales_channels,
        count: count3,
        isPending: isLoading,
        isError,
        error
      } = useSalesChannels(searchParams, {
        placeholderData: import_react_query72.keepPreviousData
      });
      const columns = useColumns34();
      const filters = useSalesChannelTableFilters();
      const { table } = useDataTable({
        data: sales_channels ?? [],
        columns,
        count: count3,
        enablePagination: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE47
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime466.jsxs)(import_ui298.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime466.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime466.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime466.jsx)(import_ui298.Heading, { children: t4("salesChannels.domain") }),
            /* @__PURE__ */ (0, import_jsx_runtime466.jsx)(import_ui298.Text, { className: "text-ui-fg-subtle", size: "small", children: t4("salesChannels.subtitle") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime466.jsx)(import_react_router_dom152.Link, { to: "/settings/sales-channels/create", children: /* @__PURE__ */ (0, import_jsx_runtime466.jsx)(import_ui298.Button, { size: "small", variant: "secondary", children: t4("actions.create") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime466.jsx)(
          DataTable,
          {
            table,
            columns,
            count: count3,
            pageSize: PAGE_SIZE47,
            filters,
            pagination: true,
            search: true,
            navigateTo: (row) => row.id,
            isLoading,
            queryObject: raw,
            orderBy: [
              { key: "name", label: t4("fields.name") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ]
          }
        )
      ] });
    };
    SalesChannelActions = ({
      salesChannel
    }) => {
      const { t: t4 } = (0, import_react_i18next333.useTranslation)();
      const prompt = (0, import_ui298.usePrompt)();
      const { mutateAsync } = useDeleteSalesChannel(salesChannel.id);
      const handleDelete = async () => {
        const confirm = await prompt({
          title: t4("general.areYouSure"),
          description: t4("salesChannels.deleteSalesChannelWarning", {
            name: salesChannel.name
          }),
          verificationInstruction: t4("general.typeToConfirm"),
          verificationText: salesChannel.name,
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!confirm) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            import_ui298.toast.success(t4("salesChannels.toast.delete"));
          },
          onError: (e) => {
            import_ui298.toast.error(e.message);
          }
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime466.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime466.jsx)(import_icons132.PencilSquare, {}),
                  label: t4("actions.edit"),
                  to: `/settings/sales-channels/${salesChannel.id}/edit`
                }
              ]
            },
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime466.jsx)(import_icons132.Trash, {}),
                  label: t4("actions.delete"),
                  onClick: handleDelete
                }
              ]
            }
          ]
        }
      );
    };
    columnHelper63 = (0, import_react_table62.createColumnHelper)();
    useColumns34 = () => {
      const base = useSalesChannelTableColumns();
      return (0, import_react218.useMemo)(
        () => [
          ...base,
          columnHelper63.display({
            id: "actions",
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime466.jsx)(SalesChannelActions, { salesChannel: row.original });
            }
          })
        ],
        [base]
      );
    };
  }
});

// src/routes/sales-channels/sales-channel-list/sales-channel-list.tsx
var import_jsx_runtime467, SalesChannelList;
var init_sales_channel_list = __esm({
  "src/routes/sales-channels/sales-channel-list/sales-channel-list.tsx"() {
    "use strict";
    init_sales_channel_list_table();
    init_pages();
    init_extensions();
    import_jsx_runtime467 = require("react/jsx-runtime");
    SalesChannelList = () => {
      const { getWidgets } = useDashboardExtension();
      return /* @__PURE__ */ (0, import_jsx_runtime467.jsx)(
        SingleColumnPage,
        {
          widgets: {
            before: getWidgets("sales_channel.list.before"),
            after: getWidgets("sales_channel.list.after")
          },
          hasOutlet: true,
          children: /* @__PURE__ */ (0, import_jsx_runtime467.jsx)(SalesChannelListTable, {})
        }
      );
    };
  }
});

// src/routes/sales-channels/sales-channel-list/index.ts
var sales_channel_list_exports = {};
__export(sales_channel_list_exports, {
  Component: () => SalesChannelList
});
var init_sales_channel_list2 = __esm({
  "src/routes/sales-channels/sales-channel-list/index.ts"() {
    "use strict";
    init_sales_channel_list();
  }
});

// src/routes/sales-channels/sales-channel-create/components/create-sales-channel-form/create-sales-channel-form.tsx
var import_zod95, import_ui299, import_react_hook_form91, import_react_i18next334, zod32, import_jsx_runtime468, CreateSalesChannelSchema, CreateSalesChannelForm;
var init_create_sales_channel_form = __esm({
  "src/routes/sales-channels/sales-channel-create/components/create-sales-channel-form/create-sales-channel-form.tsx"() {
    "use strict";
    import_zod95 = require("@hookform/resolvers/zod");
    import_ui299 = require("@medusajs/ui");
    import_react_hook_form91 = require("react-hook-form");
    import_react_i18next334 = require("react-i18next");
    zod32 = __toESM(require("zod"));
    init_form2();
    init_modals();
    init_keybound_form2();
    init_sales_channels();
    import_jsx_runtime468 = require("react/jsx-runtime");
    CreateSalesChannelSchema = zod32.object({
      name: zod32.string().min(1),
      description: zod32.string().min(1),
      enabled: zod32.boolean()
    });
    CreateSalesChannelForm = () => {
      const { t: t4 } = (0, import_react_i18next334.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form91.useForm)({
        defaultValues: {
          name: "",
          description: "",
          enabled: true
        },
        resolver: (0, import_zod95.zodResolver)(CreateSalesChannelSchema)
      });
      const { mutateAsync, isPending } = useCreateSalesChannel();
      const handleSubmit = form.handleSubmit(async (values) => {
        await mutateAsync(
          {
            name: values.name,
            description: values.description,
            is_disabled: !values.enabled
          },
          {
            onSuccess: ({ sales_channel }) => {
              import_ui299.toast.success(t4("salesChannels.toast.create"));
              handleSuccess(`../${sales_channel.id}`);
            },
            onError: (error) => import_ui299.toast.success(error.message)
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime468.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex h-full flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(RouteFocusModal.Header, {}),
            /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(RouteFocusModal.Body, { className: "flex flex-1 flex-col overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime468.jsx)("div", { className: "flex flex-1 flex-col items-center overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime468.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8 px-2 py-16", children: [
              /* @__PURE__ */ (0, import_jsx_runtime468.jsxs)("div", { children: [
                /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(import_ui299.Heading, { className: "capitalize", children: t4("salesChannels.createSalesChannel") }),
                /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(import_ui299.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("salesChannels.createSalesChannelHint") })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime468.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime468.jsx)("div", { className: "grid grid-cols-2", children: /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "name",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime468.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(Form.Label, { children: t4("fields.name") }),
                        /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(import_ui299.Input, { size: "small", ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ) }),
                /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "description",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime468.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(Form.Label, { children: t4("fields.description") }),
                        /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(import_ui299.Textarea, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                )
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "enabled",
                  render: ({ field: { value, onChange, ...field } }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime468.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime468.jsxs)("div", { className: "flex items-center justify-between", children: [
                        /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(Form.Label, { children: t4("general.enabled") }),
                        /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(
                          import_ui299.Switch,
                          {
                            ...field,
                            checked: value,
                            onCheckedChange: onChange
                          }
                        ) })
                      ] }),
                      /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(Form.Hint, { children: t4("salesChannels.enabledHint") }),
                      /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              )
            ] }) }) }),
            /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime468.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(import_ui299.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime468.jsx)(import_ui299.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/sales-channels/sales-channel-create/components/create-sales-channel-form/index.ts
var init_create_sales_channel_form2 = __esm({
  "src/routes/sales-channels/sales-channel-create/components/create-sales-channel-form/index.ts"() {
    "use strict";
    init_create_sales_channel_form();
  }
});

// src/routes/sales-channels/sales-channel-create/sales-channel-create.tsx
var import_jsx_runtime469, SalesChannelCreate;
var init_sales_channel_create = __esm({
  "src/routes/sales-channels/sales-channel-create/sales-channel-create.tsx"() {
    "use strict";
    init_modals();
    init_create_sales_channel_form2();
    import_jsx_runtime469 = require("react/jsx-runtime");
    SalesChannelCreate = () => {
      return /* @__PURE__ */ (0, import_jsx_runtime469.jsx)(RouteFocusModal, { children: /* @__PURE__ */ (0, import_jsx_runtime469.jsx)(CreateSalesChannelForm, {}) });
    };
  }
});

// src/routes/sales-channels/sales-channel-create/index.ts
var sales_channel_create_exports = {};
__export(sales_channel_create_exports, {
  Component: () => SalesChannelCreate
});
var init_sales_channel_create2 = __esm({
  "src/routes/sales-channels/sales-channel-create/index.ts"() {
    "use strict";
    init_sales_channel_create();
  }
});

// src/routes/sales-channels/sales-channel-detail/loader.ts
var salesChannelDetailQuery, salesChannelLoader;
var init_loader20 = __esm({
  "src/routes/sales-channels/sales-channel-detail/loader.ts"() {
    "use strict";
    init_products();
    init_client2();
    init_query_client();
    salesChannelDetailQuery = (id2) => ({
      queryKey: productsQueryKeys.detail(id2),
      queryFn: async () => sdk.admin.salesChannel.retrieve(id2)
    });
    salesChannelLoader = async ({ params: params2 }) => {
      const id2 = params2.id;
      const query = salesChannelDetailQuery(id2);
      return queryClient.getQueryData(query.queryKey) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/routes/sales-channels/sales-channel-detail/components/sales-channel-general-section/sales-channel-general-section.tsx
var import_icons133, import_ui300, import_react_i18next335, import_react_router_dom153, import_jsx_runtime470, SalesChannelGeneralSection;
var init_sales_channel_general_section = __esm({
  "src/routes/sales-channels/sales-channel-detail/components/sales-channel-general-section/sales-channel-general-section.tsx"() {
    "use strict";
    import_icons133 = require("@medusajs/icons");
    import_ui300 = require("@medusajs/ui");
    import_react_i18next335 = require("react-i18next");
    import_react_router_dom153 = require("react-router-dom");
    init_action_menu2();
    init_sales_channels();
    import_jsx_runtime470 = require("react/jsx-runtime");
    SalesChannelGeneralSection = ({
      salesChannel
    }) => {
      const { t: t4 } = (0, import_react_i18next335.useTranslation)();
      const prompt = (0, import_ui300.usePrompt)();
      const navigate = (0, import_react_router_dom153.useNavigate)();
      const { mutateAsync } = useDeleteSalesChannel(salesChannel.id);
      const handleDelete = async () => {
        const confirm = await prompt({
          title: t4("general.areYouSure"),
          description: t4("salesChannels.deleteSalesChannelWarning", {
            name: salesChannel.name
          }),
          verificationInstruction: t4("general.typeToConfirm"),
          verificationText: salesChannel.name,
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!confirm) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            import_ui300.toast.success(t4("salesChannels.toast.delete"));
            navigate("/settings/sales-channels", { replace: true });
          },
          onError: (e) => {
            import_ui300.toast.error(e.message);
          }
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime470.jsxs)(import_ui300.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime470.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime470.jsx)(import_ui300.Heading, { children: salesChannel.name }),
          /* @__PURE__ */ (0, import_jsx_runtime470.jsxs)("div", { className: "flex items-center gap-x-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime470.jsx)(import_ui300.StatusBadge, { color: salesChannel.is_disabled ? "red" : "green", children: t4(`general.${salesChannel.is_disabled ? "disabled" : "enabled"}`) }),
            /* @__PURE__ */ (0, import_jsx_runtime470.jsx)(
              ActionMenu,
              {
                groups: [
                  {
                    actions: [
                      {
                        icon: /* @__PURE__ */ (0, import_jsx_runtime470.jsx)(import_icons133.PencilSquare, {}),
                        label: t4("actions.edit"),
                        to: `/settings/sales-channels/${salesChannel.id}/edit`
                      }
                    ]
                  },
                  {
                    actions: [
                      {
                        icon: /* @__PURE__ */ (0, import_jsx_runtime470.jsx)(import_icons133.Trash, {}),
                        label: t4("actions.delete"),
                        onClick: handleDelete
                      }
                    ]
                  }
                ]
              }
            )
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime470.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-start px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime470.jsx)(import_ui300.Text, { size: "small", leading: "compact", weight: "plus", children: t4("fields.description") }),
          /* @__PURE__ */ (0, import_jsx_runtime470.jsx)(import_ui300.Text, { size: "small", leading: "compact", children: salesChannel.description || "-" })
        ] })
      ] });
    };
  }
});

// src/routes/sales-channels/sales-channel-detail/components/sales-channel-general-section/index.ts
var init_sales_channel_general_section2 = __esm({
  "src/routes/sales-channels/sales-channel-detail/components/sales-channel-general-section/index.ts"() {
    "use strict";
    init_sales_channel_general_section();
  }
});

// src/routes/sales-channels/sales-channel-detail/components/sales-channel-product-section/sales-channel-product-section.tsx
var import_icons134, import_ui301, import_react_table63, import_react219, import_react_i18next336, import_react_router_dom154, import_react_query73, import_jsx_runtime471, PAGE_SIZE48, SalesChannelProductSection, columnHelper64, useColumns35, ProductListCellActions;
var init_sales_channel_product_section = __esm({
  "src/routes/sales-channels/sales-channel-detail/components/sales-channel-product-section/sales-channel-product-section.tsx"() {
    "use strict";
    import_icons134 = require("@medusajs/icons");
    import_ui301 = require("@medusajs/ui");
    import_react_table63 = require("@tanstack/react-table");
    import_react219 = require("react");
    import_react_i18next336 = require("react-i18next");
    import_react_router_dom154 = require("react-router-dom");
    import_react_query73 = require("@tanstack/react-query");
    init_action_menu2();
    init_data_table2();
    init_products();
    init_sales_channels();
    init_use_product_table_columns();
    init_use_product_table_filters();
    init_use_product_table_query();
    init_use_data_table();
    import_jsx_runtime471 = require("react/jsx-runtime");
    PAGE_SIZE48 = 10;
    SalesChannelProductSection = ({
      salesChannel
    }) => {
      const [rowSelection, setRowSelection] = (0, import_react219.useState)({});
      const { searchParams, raw } = useProductTableQuery({ pageSize: PAGE_SIZE48 });
      const {
        products,
        count: count3,
        isPending: isLoading,
        isError,
        error
      } = useProducts(
        {
          ...searchParams,
          sales_channel_id: [salesChannel.id]
        },
        {
          placeholderData: import_react_query73.keepPreviousData
        }
      );
      const columns = useColumns35();
      const filters = useProductTableFilters(["sales_channel_id"]);
      const { table } = useDataTable({
        data: products ?? [],
        columns,
        count: count3,
        enablePagination: true,
        enableRowSelection: true,
        pageSize: PAGE_SIZE48,
        getRowId: (row) => row.id,
        rowSelection: {
          state: rowSelection,
          updater: setRowSelection
        },
        meta: {
          salesChannelId: salesChannel.id
        }
      });
      const { mutateAsync } = useSalesChannelRemoveProducts(salesChannel.id);
      const prompt = (0, import_ui301.usePrompt)();
      const { t: t4 } = (0, import_react_i18next336.useTranslation)();
      const handleRemove = async () => {
        const ids = Object.keys(rowSelection);
        const result = await prompt({
          title: t4("general.areYouSure"),
          description: t4("salesChannels.removeProductsWarning", {
            count: ids.length,
            sales_channel: salesChannel.name
          }),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!result) {
          return;
        }
        await mutateAsync(ids, {
          onSuccess: () => {
            import_ui301.toast.success(t4("salesChannels.toast.update"));
            setRowSelection({});
          },
          onError: (error2) => {
            import_ui301.toast.error(error2.message);
          }
        });
      };
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime471.jsxs)(import_ui301.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime471.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime471.jsx)(import_ui301.Heading, { level: "h2", children: t4("products.domain") }),
          /* @__PURE__ */ (0, import_jsx_runtime471.jsx)(import_react_router_dom154.Link, { to: `/settings/sales-channels/${salesChannel.id}/add-products`, children: /* @__PURE__ */ (0, import_jsx_runtime471.jsx)(import_ui301.Button, { size: "small", variant: "secondary", children: t4("general.add") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime471.jsx)(
          DataTable,
          {
            table,
            columns,
            pageSize: PAGE_SIZE48,
            commands: [
              {
                action: handleRemove,
                label: t4("actions.remove"),
                shortcut: "r"
              }
            ],
            count: count3,
            pagination: true,
            search: true,
            filters,
            navigateTo: (row) => `/products/${row.id}`,
            isLoading,
            orderBy: [
              { key: "title", label: t4("fields.title") },
              { key: "status", label: t4("fields.status") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            queryObject: raw,
            noRecords: {
              message: t4("salesChannels.products.list.noRecordsMessage")
            }
          }
        )
      ] });
    };
    columnHelper64 = (0, import_react_table63.createColumnHelper)();
    useColumns35 = () => {
      const base = useProductTableColumns();
      return (0, import_react219.useMemo)(
        () => [
          columnHelper64.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime471.jsx)(
                import_ui301.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime471.jsx)(
                import_ui301.Checkbox,
                {
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...base,
          columnHelper64.display({
            id: "actions",
            cell: ({ row, table }) => {
              const { salesChannelId } = table.options.meta;
              return /* @__PURE__ */ (0, import_jsx_runtime471.jsx)(
                ProductListCellActions,
                {
                  productId: row.original.id,
                  salesChannelId
                }
              );
            }
          })
        ],
        [base]
      );
    };
    ProductListCellActions = ({
      salesChannelId,
      productId
    }) => {
      const { t: t4 } = (0, import_react_i18next336.useTranslation)();
      const { mutateAsync } = useSalesChannelRemoveProducts(salesChannelId);
      const onRemove = async () => {
        await mutateAsync([productId], {
          onSuccess: () => {
            import_ui301.toast.success(t4("salesChannels.toast.update"));
          },
          onError: (e) => {
            import_ui301.toast.error(e.message);
          }
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime471.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime471.jsx)(import_icons134.PencilSquare, {}),
                  label: t4("actions.edit"),
                  to: `/products/${productId}`
                }
              ]
            },
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime471.jsx)(import_icons134.Trash, {}),
                  label: t4("actions.remove"),
                  onClick: onRemove
                }
              ]
            }
          ]
        }
      );
    };
  }
});

// src/routes/sales-channels/sales-channel-detail/components/sales-channel-product-section/index.ts
var init_sales_channel_product_section2 = __esm({
  "src/routes/sales-channels/sales-channel-detail/components/sales-channel-product-section/index.ts"() {
    "use strict";
    init_sales_channel_product_section();
  }
});

// src/routes/sales-channels/sales-channel-detail/sales-channel-detail.tsx
var import_react_router_dom155, import_jsx_runtime472, SalesChannelDetail;
var init_sales_channel_detail = __esm({
  "src/routes/sales-channels/sales-channel-detail/sales-channel-detail.tsx"() {
    "use strict";
    import_react_router_dom155 = require("react-router-dom");
    init_skeleton2();
    init_pages();
    init_extensions();
    init_sales_channels();
    init_sales_channel_general_section2();
    init_sales_channel_product_section2();
    import_jsx_runtime472 = require("react/jsx-runtime");
    SalesChannelDetail = () => {
      const initialData = (0, import_react_router_dom155.useLoaderData)();
      const { id: id2 } = (0, import_react_router_dom155.useParams)();
      const { sales_channel, isPending: isLoading } = useSalesChannel(id2, {
        initialData
      });
      const { getWidgets } = useDashboardExtension();
      if (isLoading || !sales_channel) {
        return /* @__PURE__ */ (0, import_jsx_runtime472.jsx)(SingleColumnPageSkeleton, { sections: 2, showJSON: true, showMetadata: true });
      }
      return /* @__PURE__ */ (0, import_jsx_runtime472.jsxs)(
        SingleColumnPage,
        {
          widgets: {
            before: getWidgets("sales_channel.details.before"),
            after: getWidgets("sales_channel.details.after")
          },
          showJSON: true,
          showMetadata: true,
          data: sales_channel,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime472.jsx)(SalesChannelGeneralSection, { salesChannel: sales_channel }),
            /* @__PURE__ */ (0, import_jsx_runtime472.jsx)(SalesChannelProductSection, { salesChannel: sales_channel })
          ]
        }
      );
    };
  }
});

// src/routes/sales-channels/sales-channel-detail/index.ts
var sales_channel_detail_exports = {};
__export(sales_channel_detail_exports, {
  Component: () => SalesChannelDetail,
  loader: () => salesChannelLoader
});
var init_sales_channel_detail2 = __esm({
  "src/routes/sales-channels/sales-channel-detail/index.ts"() {
    "use strict";
    init_loader20();
    init_sales_channel_detail();
  }
});

// src/routes/sales-channels/sales-channel-edit/components/edit-sales-channel-form/edit-sales-channel-form.tsx
var import_zod96, import_ui302, import_react_hook_form92, import_react_i18next337, zod33, import_jsx_runtime473, EditSalesChannelSchema, EditSalesChannelForm;
var init_edit_sales_channel_form = __esm({
  "src/routes/sales-channels/sales-channel-edit/components/edit-sales-channel-form/edit-sales-channel-form.tsx"() {
    "use strict";
    import_zod96 = require("@hookform/resolvers/zod");
    import_ui302 = require("@medusajs/ui");
    import_react_hook_form92 = require("react-hook-form");
    import_react_i18next337 = require("react-i18next");
    zod33 = __toESM(require("zod"));
    init_form2();
    init_modals();
    init_keybound_form2();
    init_sales_channels();
    import_jsx_runtime473 = require("react/jsx-runtime");
    EditSalesChannelSchema = zod33.object({
      name: zod33.string().min(1),
      description: zod33.string().optional(),
      is_active: zod33.boolean()
    });
    EditSalesChannelForm = ({
      salesChannel
    }) => {
      const { t: t4 } = (0, import_react_i18next337.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form92.useForm)({
        defaultValues: {
          name: salesChannel.name,
          description: salesChannel.description ?? "",
          is_active: !salesChannel.is_disabled
        },
        resolver: (0, import_zod96.zodResolver)(EditSalesChannelSchema)
      });
      const { mutateAsync, isPending } = useUpdateSalesChannel(salesChannel.id);
      const handleSubmit = form.handleSubmit(async (values) => {
        await mutateAsync(
          {
            name: values.name,
            description: values.description ?? void 0,
            is_disabled: !values.is_active
          },
          {
            onSuccess: () => {
              import_ui302.toast.success(t4("salesChannels.toast.update"));
              handleSuccess();
            },
            onError: (error) => {
              import_ui302.toast.error(error.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime473.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime473.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex flex-1 flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime473.jsxs)(RouteDrawer.Body, { className: "flex max-w-full flex-1 flex-col gap-y-8 overflow-y-auto", children: [
              /* @__PURE__ */ (0, import_jsx_runtime473.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "name",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime473.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime473.jsx)(Form.Label, { children: t4("fields.name") }),
                      /* @__PURE__ */ (0, import_jsx_runtime473.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime473.jsx)(import_ui302.Input, { ...field, size: "small" }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime473.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime473.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "description",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime473.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime473.jsx)(Form.Label, { optional: true, children: t4("fields.description") }),
                      /* @__PURE__ */ (0, import_jsx_runtime473.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime473.jsx)(import_ui302.Textarea, { ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime473.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime473.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "is_active",
                  render: ({ field: { onChange, value, ...field } }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime473.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime473.jsxs)("div", { className: "flex items-center justify-between", children: [
                        /* @__PURE__ */ (0, import_jsx_runtime473.jsx)(Form.Label, { children: t4("general.enabled") }),
                        /* @__PURE__ */ (0, import_jsx_runtime473.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime473.jsx)(
                          import_ui302.Switch,
                          {
                            onCheckedChange: onChange,
                            checked: value,
                            ...field
                          }
                        ) })
                      ] }),
                      /* @__PURE__ */ (0, import_jsx_runtime473.jsx)(Form.Hint, { children: t4("salesChannels.enabledHint") }),
                      /* @__PURE__ */ (0, import_jsx_runtime473.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              )
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime473.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime473.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime473.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime473.jsx)(import_ui302.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime473.jsx)(import_ui302.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/sales-channels/sales-channel-edit/components/edit-sales-channel-form/index.ts
var init_edit_sales_channel_form2 = __esm({
  "src/routes/sales-channels/sales-channel-edit/components/edit-sales-channel-form/index.ts"() {
    "use strict";
    init_edit_sales_channel_form();
  }
});

// src/routes/sales-channels/sales-channel-edit/sales-channel-edit.tsx
var import_ui303, import_react_i18next338, import_react_router_dom156, import_jsx_runtime474, SalesChannelEdit;
var init_sales_channel_edit = __esm({
  "src/routes/sales-channels/sales-channel-edit/sales-channel-edit.tsx"() {
    "use strict";
    import_ui303 = require("@medusajs/ui");
    import_react_i18next338 = require("react-i18next");
    import_react_router_dom156 = require("react-router-dom");
    init_modals();
    init_sales_channels();
    init_edit_sales_channel_form2();
    import_jsx_runtime474 = require("react/jsx-runtime");
    SalesChannelEdit = () => {
      const { id: id2 } = (0, import_react_router_dom156.useParams)();
      const { t: t4 } = (0, import_react_i18next338.useTranslation)();
      const {
        sales_channel,
        isPending: isLoading,
        isError,
        error
      } = useSalesChannel(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime474.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime474.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime474.jsx)(import_ui303.Heading, { className: "capitalize", children: t4("salesChannels.editSalesChannel") }) }),
        !isLoading && !!sales_channel && /* @__PURE__ */ (0, import_jsx_runtime474.jsx)(EditSalesChannelForm, { salesChannel: sales_channel })
      ] });
    };
  }
});

// src/routes/sales-channels/sales-channel-edit/index.ts
var sales_channel_edit_exports = {};
__export(sales_channel_edit_exports, {
  Component: () => SalesChannelEdit
});
var init_sales_channel_edit2 = __esm({
  "src/routes/sales-channels/sales-channel-edit/index.ts"() {
    "use strict";
    init_sales_channel_edit();
  }
});

// src/routes/sales-channels/sales-channel-add-products/components/add-products-to-sales-channel-form.tsx
var import_zod97, import_ui304, import_react_query74, import_react_table64, import_react220, import_react_hook_form93, import_react_i18next339, zod34, import_jsx_runtime475, AddProductsToSalesChannelSchema, PAGE_SIZE49, AddProductsToSalesChannelForm, columnHelper65, useColumns36;
var init_add_products_to_sales_channel_form = __esm({
  "src/routes/sales-channels/sales-channel-add-products/components/add-products-to-sales-channel-form.tsx"() {
    "use strict";
    import_zod97 = require("@hookform/resolvers/zod");
    import_ui304 = require("@medusajs/ui");
    import_react_query74 = require("@tanstack/react-query");
    import_react_table64 = require("@tanstack/react-table");
    import_react220 = require("react");
    import_react_hook_form93 = require("react-hook-form");
    import_react_i18next339 = require("react-i18next");
    zod34 = __toESM(require("zod"));
    init_modals();
    init_data_table2();
    init_keybound_form2();
    init_products();
    init_sales_channels();
    init_use_product_table_columns();
    init_use_product_table_filters();
    init_use_product_table_query();
    init_use_data_table();
    import_jsx_runtime475 = require("react/jsx-runtime");
    AddProductsToSalesChannelSchema = zod34.object({
      product_ids: zod34.array(zod34.string()).min(1)
    });
    PAGE_SIZE49 = 50;
    AddProductsToSalesChannelForm = ({
      salesChannel
    }) => {
      const { t: t4 } = (0, import_react_i18next339.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form93.useForm)({
        defaultValues: {
          product_ids: []
        },
        resolver: (0, import_zod97.zodResolver)(AddProductsToSalesChannelSchema)
      });
      const { setValue } = form;
      const { mutateAsync, isPending } = useSalesChannelAddProducts(salesChannel.id);
      const [rowSelection, setRowSelection] = (0, import_react220.useState)({});
      const updater = (fn) => {
        const state = typeof fn === "function" ? fn(rowSelection) : fn;
        const ids = Object.keys(state);
        setValue("product_ids", ids, {
          shouldDirty: true,
          shouldTouch: true
        });
        setRowSelection(state);
      };
      const { searchParams, raw } = useProductTableQuery({ pageSize: PAGE_SIZE49 });
      const {
        products,
        count: count3,
        isPending: isLoading,
        isError,
        error
      } = useProducts(
        {
          fields: "*variants,*sales_channels",
          ...searchParams
        },
        {
          placeholderData: import_react_query74.keepPreviousData
        }
      );
      const columns = useColumns36();
      const filters = useProductTableFilters(["sales_channel_id"]);
      const { table } = useDataTable({
        data: products ?? [],
        columns,
        enableRowSelection: (row) => {
          return !row.original.sales_channels?.map((sc) => sc.id).includes(salesChannel.id);
        },
        enablePagination: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE49,
        count: count3,
        rowSelection: {
          state: rowSelection,
          updater
        },
        meta: {
          salesChannelId: salesChannel.id
        }
      });
      const handleSubmit = form.handleSubmit(async (values) => {
        await mutateAsync(values.product_ids, {
          onSuccess: () => {
            import_ui304.toast.success(t4("salesChannels.toast.update"));
            handleSuccess();
          },
          onError: (error2) => import_ui304.toast.error(error2.message)
        });
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime475.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime475.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex h-full flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime475.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime475.jsx)("div", { className: "flex items-center justify-end gap-x-2", children: form.formState.errors.product_ids && /* @__PURE__ */ (0, import_jsx_runtime475.jsx)(import_ui304.Hint, { variant: "error", children: form.formState.errors.product_ids.message }) }) }),
            /* @__PURE__ */ (0, import_jsx_runtime475.jsx)(RouteFocusModal.Body, { className: "flex size-full flex-col overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime475.jsx)(
              DataTable,
              {
                table,
                count: count3,
                columns,
                pageSize: PAGE_SIZE49,
                isLoading,
                filters,
                orderBy: [
                  { key: "title", label: t4("fields.title") },
                  { key: "status", label: t4("fields.status") },
                  { key: "created_at", label: t4("fields.createdAt") },
                  { key: "updated_at", label: t4("fields.updatedAt") }
                ],
                queryObject: raw,
                layout: "fill",
                pagination: true,
                search: "autofocus",
                noRecords: {
                  message: t4("salesChannels.products.add.list.noRecordsMessage")
                }
              }
            ) }),
            /* @__PURE__ */ (0, import_jsx_runtime475.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime475.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime475.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime475.jsx)(import_ui304.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime475.jsx)(import_ui304.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
    columnHelper65 = (0, import_react_table64.createColumnHelper)();
    useColumns36 = () => {
      const base = useProductTableColumns();
      const { t: t4 } = (0, import_react_i18next339.useTranslation)();
      return (0, import_react220.useMemo)(
        () => [
          columnHelper65.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime475.jsx)(
                import_ui304.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row, table }) => {
              const { salesChannelId } = table.options.meta;
              const isAdded = row.original.sales_channels?.map((sc) => sc.id).includes(salesChannelId);
              const isSelected2 = row.getIsSelected() || isAdded;
              const Component5 = /* @__PURE__ */ (0, import_jsx_runtime475.jsx)(
                import_ui304.Checkbox,
                {
                  checked: isSelected2,
                  disabled: isAdded,
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
              if (isAdded) {
                return /* @__PURE__ */ (0, import_jsx_runtime475.jsx)(
                  import_ui304.Tooltip,
                  {
                    content: t4("salesChannels.productAlreadyAdded"),
                    side: "right",
                    children: Component5
                  }
                );
              }
              return Component5;
            }
          }),
          ...base
        ],
        [t4, base]
      );
    };
  }
});

// src/routes/sales-channels/sales-channel-add-products/components/index.ts
var init_components3 = __esm({
  "src/routes/sales-channels/sales-channel-add-products/components/index.ts"() {
    "use strict";
    init_add_products_to_sales_channel_form();
  }
});

// src/routes/sales-channels/sales-channel-add-products/sales-channel-add-products.tsx
var import_react_router_dom157, import_jsx_runtime476, SalesChannelAddProducts;
var init_sales_channel_add_products = __esm({
  "src/routes/sales-channels/sales-channel-add-products/sales-channel-add-products.tsx"() {
    "use strict";
    import_react_router_dom157 = require("react-router-dom");
    init_modals();
    init_sales_channels();
    init_components3();
    import_jsx_runtime476 = require("react/jsx-runtime");
    SalesChannelAddProducts = () => {
      const { id: id2 } = (0, import_react_router_dom157.useParams)();
      const {
        sales_channel,
        isPending: isLoading,
        isError,
        error
      } = useSalesChannel(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime476.jsx)(RouteFocusModal, { children: !isLoading && sales_channel && /* @__PURE__ */ (0, import_jsx_runtime476.jsx)(AddProductsToSalesChannelForm, { salesChannel: sales_channel }) });
    };
  }
});

// src/routes/sales-channels/sales-channel-add-products/index.ts
var sales_channel_add_products_exports = {};
__export(sales_channel_add_products_exports, {
  Component: () => SalesChannelAddProducts
});
var init_sales_channel_add_products2 = __esm({
  "src/routes/sales-channels/sales-channel-add-products/index.ts"() {
    "use strict";
    init_sales_channel_add_products();
  }
});

// src/routes/sales-channels/sales-channel-metadata/sales-channel-metadata.tsx
var import_react_router_dom158, import_jsx_runtime477, SalesChannelMetadata;
var init_sales_channel_metadata = __esm({
  "src/routes/sales-channels/sales-channel-metadata/sales-channel-metadata.tsx"() {
    "use strict";
    import_react_router_dom158 = require("react-router-dom");
    init_modals();
    init_metadata_form2();
    init_api();
    import_jsx_runtime477 = require("react/jsx-runtime");
    SalesChannelMetadata = () => {
      const { id: id2 } = (0, import_react_router_dom158.useParams)();
      const {
        sales_channel: salesChannel,
        isPending,
        isError,
        error
      } = useSalesChannel(id2);
      const { mutateAsync, isPending: isMutating } = useUpdateSalesChannel(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime477.jsx)(RouteDrawer, { children: /* @__PURE__ */ (0, import_jsx_runtime477.jsx)(
        MetadataForm,
        {
          isPending,
          isMutating,
          hook: mutateAsync,
          metadata: salesChannel?.metadata
        }
      ) });
    };
  }
});

// src/routes/sales-channels/sales-channel-metadata/index.ts
var sales_channel_metadata_exports = {};
__export(sales_channel_metadata_exports, {
  Component: () => SalesChannelMetadata
});
var init_sales_channel_metadata2 = __esm({
  "src/routes/sales-channels/sales-channel-metadata/index.ts"() {
    "use strict";
    init_sales_channel_metadata();
  }
});

// src/routes/locations/location-list/constants.ts
var LOCATION_LIST_FIELDS;
var init_constants16 = __esm({
  "src/routes/locations/location-list/constants.ts"() {
    "use strict";
    LOCATION_LIST_FIELDS = "name,*sales_channels,*address,*fulfillment_sets,*fulfillment_sets.service_zones,*fulfillment_sets.service_zones.shipping_options,*fulfillment_sets.service_zones.shipping_options.shipping_profile";
  }
});

// src/routes/locations/location-list/loader.ts
var import_react_router_dom159, shippingListQuery, shippingListLoader;
var init_loader21 = __esm({
  "src/routes/locations/location-list/loader.ts"() {
    "use strict";
    import_react_router_dom159 = require("react-router-dom");
    init_stock_locations();
    init_client2();
    init_query_client();
    init_constants16();
    shippingListQuery = () => ({
      queryKey: stockLocationsQueryKeys.lists(),
      queryFn: async () => {
        return await sdk.admin.stockLocation.list({
          // TODO: change this when RQ is fixed
          fields: LOCATION_LIST_FIELDS
        }).catch((error) => {
          if (error.status === 401) {
            throw (0, import_react_router_dom159.redirect)("/login");
          }
          throw error;
        });
      }
    });
    shippingListLoader = async (_) => {
      const query = shippingListQuery();
      return queryClient.getQueryData(
        query.queryKey
      ) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/routes/locations/common/constants.ts
var ShippingOptionPriceType, GEO_ZONE_STACKED_MODAL_ID;
var init_constants17 = __esm({
  "src/routes/locations/common/constants.ts"() {
    "use strict";
    ShippingOptionPriceType = /* @__PURE__ */ ((ShippingOptionPriceType2) => {
      ShippingOptionPriceType2["FlatRate"] = "flat";
      ShippingOptionPriceType2["Calculated"] = "calculated";
      return ShippingOptionPriceType2;
    })(ShippingOptionPriceType || {});
    GEO_ZONE_STACKED_MODAL_ID = "geo-zone";
  }
});

// src/routes/locations/location-list/components/location-list-item/location-list-item.tsx
function SalesChannels(props) {
  const { t: t4 } = (0, import_react_i18next340.useTranslation)();
  const { salesChannels } = props;
  return /* @__PURE__ */ (0, import_jsx_runtime478.jsx)("div", { className: "flex flex-col px-6 py-4", children: /* @__PURE__ */ (0, import_jsx_runtime478.jsxs)("div", { className: "flex items-center justify-between", children: [
    /* @__PURE__ */ (0, import_jsx_runtime478.jsx)(
      import_ui305.Text,
      {
        size: "small",
        weight: "plus",
        className: "text-ui-fg-subtle flex-1",
        as: "div",
        children: t4(`stockLocations.salesChannels.label`)
      }
    ),
    /* @__PURE__ */ (0, import_jsx_runtime478.jsx)("div", { className: "flex-1 text-left", children: salesChannels?.length ? /* @__PURE__ */ (0, import_jsx_runtime478.jsx)(
      BadgeListSummary,
      {
        rounded: true,
        inline: true,
        n: 3,
        list: salesChannels.map((s) => s.name)
      }
    ) : "-" })
  ] }) });
}
function FulfillmentSet(props) {
  const { t: t4 } = (0, import_react_i18next340.useTranslation)();
  const { fulfillmentSet, type } = props;
  const fulfillmentSetExists = !!fulfillmentSet;
  return /* @__PURE__ */ (0, import_jsx_runtime478.jsx)("div", { className: "flex flex-col px-6 py-4", children: /* @__PURE__ */ (0, import_jsx_runtime478.jsxs)("div", { className: "flex items-center justify-between", children: [
    /* @__PURE__ */ (0, import_jsx_runtime478.jsx)(
      import_ui305.Text,
      {
        size: "small",
        weight: "plus",
        className: "text-ui-fg-subtle flex-1",
        as: "div",
        children: t4(`stockLocations.fulfillmentSets.${type}.header`)
      }
    ),
    /* @__PURE__ */ (0, import_jsx_runtime478.jsx)("div", { className: "flex-1 text-left", children: /* @__PURE__ */ (0, import_jsx_runtime478.jsx)(import_ui305.StatusBadge, { color: fulfillmentSetExists ? "green" : "grey", children: t4(fulfillmentSetExists ? "statuses.enabled" : "statuses.disabled") }) })
  ] }) });
}
function LocationListItem(props) {
  const { location } = props;
  const { t: t4 } = (0, import_react_i18next340.useTranslation)();
  const prompt = (0, import_ui305.usePrompt)();
  const { mutateAsync: deleteLocation } = useDeleteStockLocation(location.id);
  const handleDelete = async () => {
    const result = await prompt({
      title: t4("general.areYouSure"),
      description: t4("stockLocations.delete.confirmation", {
        name: location.name
      }),
      confirmText: t4("actions.remove"),
      cancelText: t4("actions.cancel")
    });
    if (!result) {
      return;
    }
    await deleteLocation(void 0, {
      onSuccess: () => {
        import_ui305.toast.success(
          t4("shippingProfile.delete.successToast", {
            name: location.name
          })
        );
      },
      onError: (e) => {
        import_ui305.toast.error(e.message);
      }
    });
  };
  return /* @__PURE__ */ (0, import_jsx_runtime478.jsxs)(import_ui305.Container, { className: "flex flex-col divide-y p-0", children: [
    /* @__PURE__ */ (0, import_jsx_runtime478.jsx)("div", { className: "px-6 py-4", children: /* @__PURE__ */ (0, import_jsx_runtime478.jsxs)("div", { className: "flex flex-row items-center justify-between gap-x-4", children: [
      /* @__PURE__ */ (0, import_jsx_runtime478.jsx)("div", { className: "shadow-borders-base flex size-7 items-center justify-center rounded-md", children: /* @__PURE__ */ (0, import_jsx_runtime478.jsx)("div", { className: "bg-ui-bg-field flex size-6 items-center justify-center rounded-[4px]", children: /* @__PURE__ */ (0, import_jsx_runtime478.jsx)(import_icons135.Buildings, { className: "text-ui-fg-subtle" }) }) }),
      /* @__PURE__ */ (0, import_jsx_runtime478.jsxs)("div", { className: "grow-1 flex flex-1 flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime478.jsx)(import_ui305.Text, { weight: "plus", children: location.name }),
        /* @__PURE__ */ (0, import_jsx_runtime478.jsx)(import_ui305.Text, { className: "text-ui-fg-subtle txt-small", children: getFormattedAddress({ address: location.address }).join(", ") })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime478.jsxs)("div", { className: "flex grow-0 items-center gap-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime478.jsx)(
          ActionMenu,
          {
            groups: [
              {
                actions: [
                  {
                    label: t4("actions.edit"),
                    icon: /* @__PURE__ */ (0, import_jsx_runtime478.jsx)(import_icons135.PencilSquare, {}),
                    to: `/settings/locations/${location.id}/edit`
                  }
                ]
              },
              {
                actions: [
                  {
                    label: t4("actions.delete"),
                    icon: /* @__PURE__ */ (0, import_jsx_runtime478.jsx)(import_icons135.Trash, {}),
                    onClick: handleDelete
                  }
                ]
              }
            ]
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime478.jsx)("div", { className: "bg-ui-border-strong h-[12px] w-[1px]" }),
        /* @__PURE__ */ (0, import_jsx_runtime478.jsx)(LinkButton, { to: `/settings/locations/${location.id}`, children: t4("actions.viewDetails") })
      ] })
    ] }) }),
    /* @__PURE__ */ (0, import_jsx_runtime478.jsx)(SalesChannels, { salesChannels: location.sales_channels }),
    /* @__PURE__ */ (0, import_jsx_runtime478.jsx)(
      FulfillmentSet,
      {
        type: "pickup" /* Pickup */,
        fulfillmentSet: location.fulfillment_sets?.find(
          (f) => f.type === "pickup" /* Pickup */
        )
      }
    ),
    /* @__PURE__ */ (0, import_jsx_runtime478.jsx)(
      FulfillmentSet,
      {
        type: "shipping" /* Shipping */,
        fulfillmentSet: location.fulfillment_sets?.find(
          (f) => f.type === "shipping" /* Shipping */
        )
      }
    )
  ] });
}
var import_icons135, import_ui305, import_react_i18next340, import_jsx_runtime478, location_list_item_default;
var init_location_list_item = __esm({
  "src/routes/locations/location-list/components/location-list-item/location-list-item.tsx"() {
    "use strict";
    import_icons135 = require("@medusajs/icons");
    import_ui305 = require("@medusajs/ui");
    import_react_i18next340 = require("react-i18next");
    init_action_menu2();
    init_badge_list_summary2();
    init_link_button2();
    init_stock_locations();
    init_addresses();
    init_constants17();
    import_jsx_runtime478 = require("react/jsx-runtime");
    location_list_item_default = LocationListItem;
  }
});

// src/components/common/icon-avatar/icon-avatar.tsx
var import_ui306, import_jsx_runtime479, IconAvatar;
var init_icon_avatar = __esm({
  "src/components/common/icon-avatar/icon-avatar.tsx"() {
    "use strict";
    import_ui306 = require("@medusajs/ui");
    import_jsx_runtime479 = require("react/jsx-runtime");
    IconAvatar = ({
      size: size4 = "small",
      children,
      className
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime479.jsx)(
        "div",
        {
          className: (0, import_ui306.clx)(
            "shadow-borders-base flex size-7 items-center justify-center",
            "[&>div]:bg-ui-bg-field [&>div]:text-ui-fg-subtle [&>div]:flex [&>div]:size-6 [&>div]:items-center [&>div]:justify-center",
            {
              "size-7 rounded-md [&>div]:size-6 [&>div]:rounded-[4px]": size4 === "small",
              "size-10 rounded-lg [&>div]:size-9 [&>div]:rounded-[6px]": size4 === "large",
              "size-12 rounded-xl [&>div]:size-11 [&>div]:rounded-[10px]": size4 === "xlarge"
            },
            className
          ),
          children: /* @__PURE__ */ (0, import_jsx_runtime479.jsx)("div", { children })
        }
      );
    };
  }
});

// src/components/common/icon-avatar/index.ts
var init_icon_avatar2 = __esm({
  "src/components/common/icon-avatar/index.ts"() {
    "use strict";
    init_icon_avatar();
  }
});

// src/routes/locations/location-list/components/location-list-header/location-list-header.tsx
var import_ui307, import_react_i18next341, import_react_router_dom160, import_jsx_runtime480, LocationListHeader;
var init_location_list_header = __esm({
  "src/routes/locations/location-list/components/location-list-header/location-list-header.tsx"() {
    "use strict";
    import_ui307 = require("@medusajs/ui");
    import_react_i18next341 = require("react-i18next");
    import_react_router_dom160 = require("react-router-dom");
    import_jsx_runtime480 = require("react/jsx-runtime");
    LocationListHeader = () => {
      const { t: t4 } = (0, import_react_i18next341.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime480.jsxs)(import_ui307.Container, { className: "flex h-fit items-center justify-between gap-x-4 px-6 py-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime480.jsxs)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_runtime480.jsx)(import_ui307.Heading, { children: t4("stockLocations.domain") }),
          /* @__PURE__ */ (0, import_jsx_runtime480.jsx)(import_ui307.Text, { className: "text-ui-fg-subtle txt-small", children: t4("stockLocations.list.description") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime480.jsx)(import_ui307.Button, { size: "small", className: "shrink-0", variant: "secondary", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime480.jsx)(import_react_router_dom160.Link, { to: "create", children: t4("actions.create") }) })
      ] });
    };
  }
});

// src/routes/locations/location-list/components/location-list-header/index.ts
var init_location_list_header2 = __esm({
  "src/routes/locations/location-list/components/location-list-header/index.ts"() {
    "use strict";
    init_location_list_header();
  }
});

// src/routes/locations/location-list/location-list.tsx
function LocationList() {
  const initialData = (0, import_react_router_dom161.useLoaderData)();
  const {
    stock_locations: stockLocations = [],
    isError,
    error
  } = useStockLocations(
    {
      fields: LOCATION_LIST_FIELDS
    },
    { initialData }
  );
  const { getWidgets } = useDashboardExtension();
  if (isError) {
    throw error;
  }
  return /* @__PURE__ */ (0, import_jsx_runtime481.jsxs)(
    TwoColumnPage,
    {
      widgets: {
        after: getWidgets("location.details.after"),
        before: getWidgets("location.details.before"),
        sideAfter: getWidgets("location.details.side.after"),
        sideBefore: getWidgets("location.details.side.before")
      },
      showJSON: true,
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime481.jsxs)(TwoColumnPage.Main, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime481.jsx)(LocationListHeader, {}),
          /* @__PURE__ */ (0, import_jsx_runtime481.jsx)("div", { className: "flex flex-col gap-3 lg:col-span-2", children: stockLocations.map((location) => /* @__PURE__ */ (0, import_jsx_runtime481.jsx)(location_list_item_default, { location }, location.id)) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime481.jsx)(TwoColumnPage.Sidebar, { children: /* @__PURE__ */ (0, import_jsx_runtime481.jsx)(LinksSection, {}) })
      ]
    }
  );
}
var import_icons136, import_ui308, import_react_i18next342, import_react_router_dom161, import_jsx_runtime481, SidebarLink, LinksSection;
var init_location_list = __esm({
  "src/routes/locations/location-list/location-list.tsx"() {
    "use strict";
    import_icons136 = require("@medusajs/icons");
    import_ui308 = require("@medusajs/ui");
    import_react_i18next342 = require("react-i18next");
    import_react_router_dom161 = require("react-router-dom");
    init_stock_locations();
    init_location_list_item();
    init_constants16();
    init_icon_avatar2();
    init_pages();
    init_extensions();
    init_location_list_header2();
    import_jsx_runtime481 = require("react/jsx-runtime");
    SidebarLink = ({
      to,
      labelKey,
      descriptionKey,
      icon
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime481.jsx)(import_react_router_dom161.Link, { to, className: "group outline-none", children: /* @__PURE__ */ (0, import_jsx_runtime481.jsx)("div", { className: "flex flex-col gap-2 px-2 pb-2", children: /* @__PURE__ */ (0, import_jsx_runtime481.jsx)("div", { className: "shadow-elevation-card-rest bg-ui-bg-component transition-fg hover:bg-ui-bg-component-hover active:bg-ui-bg-component-pressed group-focus-visible:shadow-borders-interactive-with-active rounded-md px-4 py-2", children: /* @__PURE__ */ (0, import_jsx_runtime481.jsxs)("div", { className: "flex items-center gap-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime481.jsx)(IconAvatar, { children: icon }),
        /* @__PURE__ */ (0, import_jsx_runtime481.jsxs)("div", { className: "flex flex-1 flex-col", children: [
          /* @__PURE__ */ (0, import_jsx_runtime481.jsx)(import_ui308.Text, { size: "small", leading: "compact", weight: "plus", children: labelKey }),
          /* @__PURE__ */ (0, import_jsx_runtime481.jsx)(
            import_ui308.Text,
            {
              size: "small",
              leading: "compact",
              className: "text-ui-fg-subtle",
              children: descriptionKey
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime481.jsx)("div", { className: "flex size-7 items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime481.jsx)(import_icons136.TriangleRightMini, { className: "text-ui-fg-muted" }) })
      ] }) }) }) });
    };
    LinksSection = () => {
      const { t: t4 } = (0, import_react_i18next342.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime481.jsxs)(import_ui308.Container, { className: "p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime481.jsx)("div", { className: "flex items-center justify-between px-6 py-4", children: /* @__PURE__ */ (0, import_jsx_runtime481.jsx)(import_ui308.Heading, { level: "h2", children: t4("stockLocations.sidebar.header") }) }),
        /* @__PURE__ */ (0, import_jsx_runtime481.jsx)(
          SidebarLink,
          {
            to: "/settings/locations/shipping-profiles",
            labelKey: t4("stockLocations.sidebar.shippingProfiles.label"),
            descriptionKey: t4(
              "stockLocations.sidebar.shippingProfiles.description"
            ),
            icon: /* @__PURE__ */ (0, import_jsx_runtime481.jsx)(import_icons136.ShoppingBag, {})
          }
        )
      ] });
    };
  }
});

// src/routes/locations/location-list/index.ts
var location_list_exports = {};
__export(location_list_exports, {
  Component: () => LocationList,
  loader: () => shippingListLoader
});
var init_location_list2 = __esm({
  "src/routes/locations/location-list/index.ts"() {
    "use strict";
    init_loader21();
    init_location_list();
  }
});

// src/routes/locations/location-create/components/create-location-form/create-location-form.tsx
var import_zod98, import_ui309, import_react_hook_form94, import_react_i18next343, zod35, import_jsx_runtime482, CreateLocationSchema, CreateLocationForm;
var init_create_location_form = __esm({
  "src/routes/locations/location-create/components/create-location-form/create-location-form.tsx"() {
    "use strict";
    import_zod98 = require("@hookform/resolvers/zod");
    import_ui309 = require("@medusajs/ui");
    import_react_hook_form94 = require("react-hook-form");
    import_react_i18next343 = require("react-i18next");
    zod35 = __toESM(require("zod"));
    init_form2();
    init_country_select2();
    init_modals();
    init_keybound_form2();
    init_stock_locations();
    import_jsx_runtime482 = require("react/jsx-runtime");
    CreateLocationSchema = zod35.object({
      name: zod35.string().min(1),
      address: zod35.object({
        address_1: zod35.string().min(1),
        address_2: zod35.string().optional(),
        country_code: zod35.string().min(2).max(2),
        city: zod35.string().optional(),
        postal_code: zod35.string().optional(),
        province: zod35.string().optional(),
        company: zod35.string().optional(),
        phone: zod35.string().optional()
      })
    });
    CreateLocationForm = () => {
      const { t: t4 } = (0, import_react_i18next343.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form94.useForm)({
        defaultValues: {
          name: "",
          address: {
            address_1: "",
            address_2: "",
            city: "",
            company: "",
            country_code: "",
            phone: "",
            postal_code: "",
            province: ""
          }
        },
        resolver: (0, import_zod98.zodResolver)(CreateLocationSchema)
      });
      const { mutateAsync, isPending } = useCreateStockLocation();
      const handleSubmit = form.handleSubmit(async (values) => {
        await mutateAsync(
          {
            name: values.name,
            address: values.address
          },
          {
            onSuccess: ({ stock_location }) => {
              import_ui309.toast.success(t4("locations.toast.create"));
              handleSuccess(`/settings/locations/${stock_location.id}`);
            },
            onError: (e) => {
              import_ui309.toast.error(e.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime482.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex h-full flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(RouteFocusModal.Header, {}),
            /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(RouteFocusModal.Body, { className: "flex flex-1 flex-col overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime482.jsx)("div", { className: "flex flex-1 flex-col items-center overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime482.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8 px-2 py-16", children: [
              /* @__PURE__ */ (0, import_jsx_runtime482.jsxs)("div", { children: [
                /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(import_ui309.Heading, { className: "capitalize", children: t4("stockLocations.create.header") }),
                /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(import_ui309.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("stockLocations.create.hint") })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime482.jsx)("div", { className: "grid grid-cols-2 gap-4", children: /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "name",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime482.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.Label, { children: t4("fields.name") }),
                      /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(import_ui309.Input, { size: "small", ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ) }),
              /* @__PURE__ */ (0, import_jsx_runtime482.jsxs)("div", { className: "grid grid-cols-2 gap-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "address.address_1",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime482.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.Label, { children: t4("fields.address") }),
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(import_ui309.Input, { size: "small", ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "address.address_2",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime482.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.Label, { optional: true, children: t4("fields.address2") }),
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(import_ui309.Input, { size: "small", ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "address.postal_code",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime482.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.Label, { optional: true, children: t4("fields.postalCode") }),
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(import_ui309.Input, { size: "small", ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "address.city",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime482.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.Label, { optional: true, children: t4("fields.city") }),
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(import_ui309.Input, { size: "small", ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "address.country_code",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime482.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.Label, { children: t4("fields.country") }),
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(CountrySelect, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "address.province",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime482.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.Label, { optional: true, children: t4("fields.state") }),
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(import_ui309.Input, { size: "small", ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "address.company",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime482.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.Label, { optional: true, children: t4("fields.company") }),
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(import_ui309.Input, { size: "small", ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "address.phone",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime482.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.Label, { optional: true, children: t4("fields.phone") }),
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(import_ui309.Input, { size: "small", ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                )
              ] })
            ] }) }) }),
            /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime482.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(import_ui309.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime482.jsx)(import_ui309.Button, { type: "submit", size: "small", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/locations/location-create/components/create-location-form/index.ts
var init_create_location_form2 = __esm({
  "src/routes/locations/location-create/components/create-location-form/index.ts"() {
    "use strict";
    init_create_location_form();
  }
});

// src/routes/locations/location-create/location-create.tsx
var import_jsx_runtime483, LocationCreate;
var init_location_create = __esm({
  "src/routes/locations/location-create/location-create.tsx"() {
    "use strict";
    init_modals();
    init_create_location_form2();
    import_jsx_runtime483 = require("react/jsx-runtime");
    LocationCreate = () => {
      return /* @__PURE__ */ (0, import_jsx_runtime483.jsx)(RouteFocusModal, { children: /* @__PURE__ */ (0, import_jsx_runtime483.jsx)(CreateLocationForm, {}) });
    };
  }
});

// src/routes/locations/location-create/index.ts
var location_create_exports = {};
__export(location_create_exports, {
  Component: () => LocationCreate
});
var init_location_create2 = __esm({
  "src/routes/locations/location-create/index.ts"() {
    "use strict";
    init_location_create();
  }
});

// src/routes/shipping-profiles/shipping-profiles-list/components/shipping-profile-list-table/shipping-options-row-actions.tsx
var import_icons137, import_ui310, import_react_i18next344, import_jsx_runtime484, ShippingOptionsRowActions;
var init_shipping_options_row_actions = __esm({
  "src/routes/shipping-profiles/shipping-profiles-list/components/shipping-profile-list-table/shipping-options-row-actions.tsx"() {
    "use strict";
    import_icons137 = require("@medusajs/icons");
    import_ui310 = require("@medusajs/ui");
    import_react_i18next344 = require("react-i18next");
    init_action_menu2();
    init_shipping_profiles();
    import_jsx_runtime484 = require("react/jsx-runtime");
    ShippingOptionsRowActions = ({
      profile
    }) => {
      const { t: t4 } = (0, import_react_i18next344.useTranslation)();
      const prompt = (0, import_ui310.usePrompt)();
      const { mutateAsync } = useDeleteShippingProfile(profile.id);
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("shippingProfile.delete.title"),
          description: t4("shippingProfile.delete.description", {
            name: profile.name
          }),
          verificationText: profile.name,
          verificationInstruction: t4("general.typeToConfirm"),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            import_ui310.toast.success(
              t4("shippingProfile.delete.successToast", {
                name: profile.name
              })
            );
          },
          onError: (error) => {
            import_ui310.toast.error(error.message);
          }
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime484.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime484.jsx)(import_icons137.Trash, {}),
                  label: t4("actions.delete"),
                  onClick: handleDelete
                }
              ]
            }
          ]
        }
      );
    };
  }
});

// src/routes/shipping-profiles/shipping-profiles-list/components/shipping-profile-list-table/use-shipping-profile-table-columns.tsx
var import_react_table65, import_react221, import_react_i18next345, import_jsx_runtime485, columnHelper66, useShippingProfileTableColumns;
var init_use_shipping_profile_table_columns = __esm({
  "src/routes/shipping-profiles/shipping-profiles-list/components/shipping-profile-list-table/use-shipping-profile-table-columns.tsx"() {
    "use strict";
    import_react_table65 = require("@tanstack/react-table");
    import_react221 = require("react");
    import_react_i18next345 = require("react-i18next");
    init_shipping_options_row_actions();
    import_jsx_runtime485 = require("react/jsx-runtime");
    columnHelper66 = (0, import_react_table65.createColumnHelper)();
    useShippingProfileTableColumns = () => {
      const { t: t4 } = (0, import_react_i18next345.useTranslation)();
      return (0, import_react221.useMemo)(
        () => [
          columnHelper66.accessor("name", {
            header: t4("fields.name"),
            cell: (cell) => cell.getValue()
          }),
          columnHelper66.accessor("type", {
            header: t4("fields.type"),
            cell: (cell) => cell.getValue()
          }),
          columnHelper66.display({
            id: "actions",
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime485.jsx)(ShippingOptionsRowActions, { profile: row.original })
          })
        ],
        [t4]
      );
    };
  }
});

// src/routes/shipping-profiles/shipping-profiles-list/components/shipping-profile-list-table/use-shipping-profile-table-filters.tsx
var import_react_i18next346, useShippingProfileTableFilters;
var init_use_shipping_profile_table_filters = __esm({
  "src/routes/shipping-profiles/shipping-profiles-list/components/shipping-profile-list-table/use-shipping-profile-table-filters.tsx"() {
    "use strict";
    import_react_i18next346 = require("react-i18next");
    useShippingProfileTableFilters = () => {
      const { t: t4 } = (0, import_react_i18next346.useTranslation)();
      let filters = [];
      filters.push({
        key: "name",
        label: t4("fields.name"),
        type: "string"
      });
      filters.push({
        key: "type",
        label: t4("fields.type"),
        type: "string"
      });
      const dateFilters = [
        { label: t4("fields.createdAt"), key: "created_at" },
        { label: t4("fields.updatedAt"), key: "updated_at" }
      ].map((f) => ({
        key: f.key,
        label: f.label,
        type: "date"
      }));
      filters = [...filters, ...dateFilters];
      return filters;
    };
  }
});

// src/routes/shipping-profiles/shipping-profiles-list/components/shipping-profile-list-table/use-shipping-profile-table-query.tsx
var useShippingProfileTableQuery;
var init_use_shipping_profile_table_query = __esm({
  "src/routes/shipping-profiles/shipping-profiles-list/components/shipping-profile-list-table/use-shipping-profile-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useShippingProfileTableQuery = ({
      pageSize = 20,
      prefix
    }) => {
      const raw = useQueryParams(
        ["offset", "q", "order", "created_at", "updated_at", "name", "type"],
        prefix
      );
      const searchParams = {
        limit: pageSize,
        offset: raw.offset ? parseInt(raw.offset) : 0,
        q: raw.q,
        order: raw.order,
        created_at: raw.created_at ? JSON.parse(raw.created_at) : void 0,
        updated_at: raw.updated_at ? JSON.parse(raw.updated_at) : void 0,
        name: raw.name,
        type: raw.type
      };
      return {
        searchParams,
        raw
      };
    };
  }
});

// src/routes/shipping-profiles/shipping-profiles-list/components/shipping-profile-list-table/shipping-profile-list-table.tsx
var import_ui311, import_react_router_dom162, import_react_query75, import_react_i18next347, import_jsx_runtime486, PAGE_SIZE50, ShippingProfileListTable;
var init_shipping_profile_list_table = __esm({
  "src/routes/shipping-profiles/shipping-profiles-list/components/shipping-profile-list-table/shipping-profile-list-table.tsx"() {
    "use strict";
    import_ui311 = require("@medusajs/ui");
    import_react_router_dom162 = require("react-router-dom");
    import_react_query75 = require("@tanstack/react-query");
    import_react_i18next347 = require("react-i18next");
    init_data_table2();
    init_shipping_profiles();
    init_use_data_table();
    init_use_shipping_profile_table_columns();
    init_use_shipping_profile_table_filters();
    init_use_shipping_profile_table_query();
    import_jsx_runtime486 = require("react/jsx-runtime");
    PAGE_SIZE50 = 20;
    ShippingProfileListTable = () => {
      const { t: t4 } = (0, import_react_i18next347.useTranslation)();
      const { raw, searchParams } = useShippingProfileTableQuery({
        pageSize: PAGE_SIZE50
      });
      const { shipping_profiles, count: count3, isLoading, isError, error } = useShippingProfiles(searchParams, {
        placeholderData: import_react_query75.keepPreviousData
      });
      const columns = useShippingProfileTableColumns();
      const filters = useShippingProfileTableFilters();
      const { table } = useDataTable({
        data: shipping_profiles,
        columns,
        count: count3,
        enablePagination: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE50
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime486.jsxs)(import_ui311.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime486.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime486.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime486.jsx)(import_ui311.Heading, { children: t4("shippingProfile.domain") }),
            /* @__PURE__ */ (0, import_jsx_runtime486.jsx)(import_ui311.Text, { className: "text-ui-fg-subtle", size: "small", children: t4("shippingProfile.subtitle") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime486.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime486.jsx)(import_ui311.Button, { size: "small", variant: "secondary", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime486.jsx)(import_react_router_dom162.Link, { to: "create", children: t4("actions.create") }) }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime486.jsx)(
          DataTable,
          {
            table,
            pageSize: PAGE_SIZE50,
            count: count3,
            columns,
            filters,
            orderBy: [
              { key: "name", label: t4("fields.name") },
              { key: "type", label: t4("fields.type") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            isLoading,
            navigateTo: (row) => row.id,
            queryObject: raw,
            search: true,
            pagination: true
          }
        )
      ] });
    };
  }
});

// src/routes/shipping-profiles/shipping-profiles-list/components/shipping-profile-list-table/index.ts
var init_shipping_profile_list_table2 = __esm({
  "src/routes/shipping-profiles/shipping-profiles-list/components/shipping-profile-list-table/index.ts"() {
    "use strict";
    init_shipping_profile_list_table();
  }
});

// src/routes/shipping-profiles/shipping-profiles-list/shipping-profile-list.tsx
var import_jsx_runtime487, ShippingProfileList;
var init_shipping_profile_list = __esm({
  "src/routes/shipping-profiles/shipping-profiles-list/shipping-profile-list.tsx"() {
    "use strict";
    init_pages();
    init_extensions();
    init_shipping_profile_list_table2();
    import_jsx_runtime487 = require("react/jsx-runtime");
    ShippingProfileList = () => {
      const { getWidgets } = useDashboardExtension();
      return /* @__PURE__ */ (0, import_jsx_runtime487.jsx)(
        SingleColumnPage,
        {
          widgets: {
            before: getWidgets("shipping_profile.list.before"),
            after: getWidgets("shipping_profile.list.after")
          },
          children: /* @__PURE__ */ (0, import_jsx_runtime487.jsx)(ShippingProfileListTable, {})
        }
      );
    };
  }
});

// src/routes/shipping-profiles/shipping-profiles-list/index.ts
var shipping_profiles_list_exports = {};
__export(shipping_profiles_list_exports, {
  Component: () => ShippingProfileList
});
var init_shipping_profiles_list = __esm({
  "src/routes/shipping-profiles/shipping-profiles-list/index.ts"() {
    "use strict";
    init_shipping_profile_list();
  }
});

// src/routes/shipping-profiles/shipping-profile-create/components/create-shipping-profile-form/create-shipping-profile-form.tsx
function CreateShippingProfileForm() {
  const { t: t4 } = (0, import_react_i18next348.useTranslation)();
  const { handleSuccess } = useRouteModal();
  const form = (0, import_react_hook_form95.useForm)({
    defaultValues: {
      name: "",
      type: ""
    },
    resolver: (0, import_zod99.zodResolver)(CreateShippingOptionsSchema)
  });
  const { mutateAsync, isPending } = useCreateShippingProfile();
  const handleSubmit = form.handleSubmit(async (values) => {
    await mutateAsync(
      {
        name: values.name,
        type: values.type
      },
      {
        onSuccess: ({ shipping_profile }) => {
          import_ui312.toast.success(
            t4("shippingProfile.create.successToast", {
              name: shipping_profile.name
            })
          );
          handleSuccess(
            `/settings/locations/shipping-profiles/${shipping_profile.id}`
          );
        },
        onError: (error) => {
          import_ui312.toast.error(error.message);
        }
      }
    );
  });
  return /* @__PURE__ */ (0, import_jsx_runtime488.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime488.jsxs)(
    KeyboundForm,
    {
      onSubmit: handleSubmit,
      className: "flex h-full flex-col overflow-hidden",
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime488.jsx)(RouteFocusModal.Header, {}),
        /* @__PURE__ */ (0, import_jsx_runtime488.jsx)(RouteFocusModal.Body, { className: "flex flex-1 flex-col overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime488.jsx)("div", { className: "flex flex-1 flex-col items-center overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime488.jsxs)("div", { className: "mx-auto flex w-full max-w-[720px] flex-col gap-y-8 px-2 py-16", children: [
          /* @__PURE__ */ (0, import_jsx_runtime488.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime488.jsx)(import_ui312.Heading, { className: "capitalize", children: t4("shippingProfile.create.header") }),
            /* @__PURE__ */ (0, import_jsx_runtime488.jsx)(import_ui312.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("shippingProfile.create.hint") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime488.jsxs)("div", { className: "grid grid-cols-2 gap-4", children: [
            /* @__PURE__ */ (0, import_jsx_runtime488.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "name",
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime488.jsxs)(Form.Item, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime488.jsx)(Form.Label, { children: t4("fields.name") }),
                    /* @__PURE__ */ (0, import_jsx_runtime488.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime488.jsx)(import_ui312.Input, { ...field }) }),
                    /* @__PURE__ */ (0, import_jsx_runtime488.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime488.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "type",
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime488.jsxs)(Form.Item, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime488.jsx)(Form.Label, { tooltip: t4("shippingProfile.tooltip.type"), children: t4("fields.type") }),
                    /* @__PURE__ */ (0, import_jsx_runtime488.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime488.jsx)(import_ui312.Input, { ...field }) }),
                    /* @__PURE__ */ (0, import_jsx_runtime488.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              }
            )
          ] })
        ] }) }) }),
        /* @__PURE__ */ (0, import_jsx_runtime488.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime488.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime488.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime488.jsx)(import_ui312.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime488.jsx)(import_ui312.Button, { type: "submit", size: "small", isLoading: isPending, children: t4("actions.save") })
        ] }) })
      ]
    }
  ) });
}
var import_zod99, import_ui312, import_react_hook_form95, import_react_i18next348, zod36, import_jsx_runtime488, CreateShippingOptionsSchema;
var init_create_shipping_profile_form = __esm({
  "src/routes/shipping-profiles/shipping-profile-create/components/create-shipping-profile-form/create-shipping-profile-form.tsx"() {
    "use strict";
    import_zod99 = require("@hookform/resolvers/zod");
    import_ui312 = require("@medusajs/ui");
    import_react_hook_form95 = require("react-hook-form");
    import_react_i18next348 = require("react-i18next");
    zod36 = __toESM(require("zod"));
    init_form2();
    init_modals();
    init_keybound_form2();
    init_shipping_profiles();
    import_jsx_runtime488 = require("react/jsx-runtime");
    CreateShippingOptionsSchema = zod36.object({
      name: zod36.string().min(1),
      type: zod36.string().min(1)
    });
  }
});

// src/routes/shipping-profiles/shipping-profile-create/components/create-shipping-profile-form/index.ts
var init_create_shipping_profile_form2 = __esm({
  "src/routes/shipping-profiles/shipping-profile-create/components/create-shipping-profile-form/index.ts"() {
    "use strict";
    init_create_shipping_profile_form();
  }
});

// src/routes/shipping-profiles/shipping-profile-create/shipping-profile-create.tsx
function ShippingProfileCreate() {
  return /* @__PURE__ */ (0, import_jsx_runtime489.jsx)(RouteFocusModal, { children: /* @__PURE__ */ (0, import_jsx_runtime489.jsx)(CreateShippingProfileForm, {}) });
}
var import_jsx_runtime489;
var init_shipping_profile_create = __esm({
  "src/routes/shipping-profiles/shipping-profile-create/shipping-profile-create.tsx"() {
    "use strict";
    init_modals();
    init_create_shipping_profile_form2();
    import_jsx_runtime489 = require("react/jsx-runtime");
  }
});

// src/routes/shipping-profiles/shipping-profile-create/index.ts
var shipping_profile_create_exports = {};
__export(shipping_profile_create_exports, {
  Component: () => ShippingProfileCreate
});
var init_shipping_profile_create2 = __esm({
  "src/routes/shipping-profiles/shipping-profile-create/index.ts"() {
    "use strict";
    init_shipping_profile_create();
  }
});

// src/routes/shipping-profiles/shipping-profile-detail/loader.ts
var shippingProfileQuery, shippingProfileLoader;
var init_loader22 = __esm({
  "src/routes/shipping-profiles/shipping-profile-detail/loader.ts"() {
    "use strict";
    init_client2();
    init_query_client();
    init_shipping_profiles();
    shippingProfileQuery = (id2) => ({
      queryKey: shippingProfileQueryKeys.detail(id2),
      queryFn: async () => sdk.admin.shippingProfile.retrieve(id2)
    });
    shippingProfileLoader = async ({ params: params2 }) => {
      const id2 = params2.id;
      const query = shippingProfileQuery(id2);
      return queryClient.getQueryData(query.queryKey) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/routes/shipping-profiles/shipping-profile-detail/components/shipping-profile-general-section/shipping-profile-general-section.tsx
var import_icons138, import_ui313, import_react_i18next349, import_react_router_dom163, import_jsx_runtime490, ShippingProfileGeneralSection;
var init_shipping_profile_general_section = __esm({
  "src/routes/shipping-profiles/shipping-profile-detail/components/shipping-profile-general-section/shipping-profile-general-section.tsx"() {
    "use strict";
    import_icons138 = require("@medusajs/icons");
    import_ui313 = require("@medusajs/ui");
    import_react_i18next349 = require("react-i18next");
    import_react_router_dom163 = require("react-router-dom");
    init_action_menu2();
    init_section();
    init_shipping_profiles();
    import_jsx_runtime490 = require("react/jsx-runtime");
    ShippingProfileGeneralSection = ({
      profile
    }) => {
      const { t: t4 } = (0, import_react_i18next349.useTranslation)();
      const prompt = (0, import_ui313.usePrompt)();
      const navigate = (0, import_react_router_dom163.useNavigate)();
      const { mutateAsync } = useDeleteShippingProfile(profile.id);
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("shippingProfile.delete.title"),
          description: t4("shippingProfile.delete.description", {
            name: profile.name
          }),
          verificationText: profile.name,
          verificationInstruction: t4("general.typeToConfirm"),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            import_ui313.toast.success(
              t4("shippingProfile.delete.successToast", {
                name: profile.name
              })
            );
            navigate("/settings/locations/shipping-profiles", { replace: true });
          },
          onError: (error) => {
            import_ui313.toast.error(error.message);
          }
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime490.jsxs)(import_ui313.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime490.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime490.jsx)(import_ui313.Heading, { children: profile.name }),
          /* @__PURE__ */ (0, import_jsx_runtime490.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      icon: /* @__PURE__ */ (0, import_jsx_runtime490.jsx)(import_icons138.Trash, {}),
                      label: t4("actions.delete"),
                      onClick: handleDelete
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime490.jsx)(SectionRow, { title: t4("fields.type"), value: profile.type })
      ] });
    };
  }
});

// src/routes/shipping-profiles/shipping-profile-detail/components/shipping-profile-general-section/index.ts
var init_shipping_profile_general_section2 = __esm({
  "src/routes/shipping-profiles/shipping-profile-detail/components/shipping-profile-general-section/index.ts"() {
    "use strict";
    init_shipping_profile_general_section();
  }
});

// src/routes/shipping-profiles/shipping-profile-detail/shipping-profile-detail.tsx
var import_react_router_dom164, import_jsx_runtime491, ShippingProfileDetail;
var init_shipping_profile_detail = __esm({
  "src/routes/shipping-profiles/shipping-profile-detail/shipping-profile-detail.tsx"() {
    "use strict";
    import_react_router_dom164 = require("react-router-dom");
    init_skeleton2();
    init_shipping_profiles();
    init_shipping_profile_general_section2();
    init_pages();
    init_extensions();
    import_jsx_runtime491 = require("react/jsx-runtime");
    ShippingProfileDetail = () => {
      const { id: id2 } = (0, import_react_router_dom164.useParams)();
      const { shipping_profile, isLoading, isError, error } = useShippingProfile(
        id2
      );
      const { getWidgets } = useDashboardExtension();
      if (isLoading || !shipping_profile) {
        return /* @__PURE__ */ (0, import_jsx_runtime491.jsx)(SingleColumnPageSkeleton, { sections: 1, showJSON: true, showMetadata: true });
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime491.jsx)(
        SingleColumnPage,
        {
          widgets: {
            before: getWidgets("shipping_profile.details.before"),
            after: getWidgets("shipping_profile.details.after")
          },
          showMetadata: true,
          showJSON: true,
          data: shipping_profile,
          children: /* @__PURE__ */ (0, import_jsx_runtime491.jsx)(ShippingProfileGeneralSection, { profile: shipping_profile })
        }
      );
    };
  }
});

// src/routes/shipping-profiles/shipping-profile-detail/index.ts
var shipping_profile_detail_exports = {};
__export(shipping_profile_detail_exports, {
  Component: () => ShippingProfileDetail,
  loader: () => shippingProfileLoader
});
var init_shipping_profile_detail2 = __esm({
  "src/routes/shipping-profiles/shipping-profile-detail/index.ts"() {
    "use strict";
    init_loader22();
    init_shipping_profile_detail();
  }
});

// src/routes/locations/location-detail/const.ts
var detailsFields;
var init_const2 = __esm({
  "src/routes/locations/location-detail/const.ts"() {
    "use strict";
    detailsFields = "name,*sales_channels,*address,fulfillment_sets.type,fulfillment_sets.name,*fulfillment_sets.service_zones.geo_zones,*fulfillment_sets.service_zones,*fulfillment_sets.service_zones.shipping_options,*fulfillment_sets.service_zones.shipping_options.rules,*fulfillment_sets.service_zones.shipping_options.shipping_profile,*fulfillment_providers";
  }
});

// src/routes/locations/location-detail/loader.ts
var import_react_router_dom165, locationQuery, locationLoader;
var init_loader23 = __esm({
  "src/routes/locations/location-detail/loader.ts"() {
    "use strict";
    import_react_router_dom165 = require("react-router-dom");
    init_stock_locations();
    init_client2();
    init_query_client();
    init_const2();
    locationQuery = (id2) => ({
      queryKey: stockLocationsQueryKeys.detail(id2, {
        fields: detailsFields
      }),
      queryFn: async () => {
        return await sdk.admin.stockLocation.retrieve(id2, {
          fields: detailsFields
        }).catch((error) => {
          if (error.status === 401) {
            throw (0, import_react_router_dom165.redirect)("/login");
          }
          throw error;
        });
      }
    });
    locationLoader = async ({ params: params2 }) => {
      const id2 = params2.location_id;
      const query = locationQuery(id2);
      return queryClient.getQueryData(
        query.queryKey
      ) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/lib/shipping-options.ts
function isReturnOption(shippingOption) {
  return !!shippingOption.rules?.find(
    (r) => r.attribute === "is_return" && r.value === "true" && r.operator === "eq"
  );
}
function isOptionEnabledInStore(shippingOption) {
  return !!shippingOption.rules?.find(
    (r) => r.attribute === "enabled_in_store" && r.value === "true" && r.operator === "eq"
  );
}
var init_shipping_options2 = __esm({
  "src/lib/shipping-options.ts"() {
    "use strict";
  }
});

// src/routes/locations/location-detail/components/location-general-section/location-general-section.tsx
function ShippingOption({
  option,
  fulfillmentSetId,
  locationId
}) {
  const prompt = (0, import_ui314.usePrompt)();
  const { t: t4 } = (0, import_react_i18next350.useTranslation)();
  const isStoreOption = isOptionEnabledInStore(option);
  const { mutateAsync } = useDeleteShippingOption(option.id);
  const handleDelete = async () => {
    const res = await prompt({
      title: t4("general.areYouSure"),
      description: t4("stockLocations.shippingOptions.delete.confirmation", {
        name: option.name
      }),
      verificationInstruction: t4("general.typeToConfirm"),
      verificationText: option.name,
      confirmText: t4("actions.delete"),
      cancelText: t4("actions.cancel")
    });
    if (!res) {
      return;
    }
    await mutateAsync(void 0, {
      onSuccess: () => {
        import_ui314.toast.success(
          t4("stockLocations.shippingOptions.delete.successToast", {
            name: option.name
          })
        );
      },
      onError: (e) => {
        import_ui314.toast.error(e.message);
      }
    });
  };
  return /* @__PURE__ */ (0, import_jsx_runtime492.jsxs)("div", { className: "flex items-center justify-between px-3 py-2", children: [
    /* @__PURE__ */ (0, import_jsx_runtime492.jsx)("div", { className: "flex-1", children: /* @__PURE__ */ (0, import_jsx_runtime492.jsxs)(import_ui314.Text, { size: "small", weight: "plus", children: [
      option.name,
      " - ",
      option.shipping_profile.name,
      " (",
      formatProvider(option.provider_id),
      ")"
    ] }) }),
    /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(
      import_ui314.Badge,
      {
        className: "mr-4",
        color: isStoreOption ? "grey" : "purple",
        size: "2xsmall",
        rounded: "full",
        children: isStoreOption ? t4("general.store") : t4("general.admin")
      }
    ),
    /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(
      ActionMenu,
      {
        groups: [
          {
            actions: [
              {
                icon: /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(import_icons139.PencilSquare, {}),
                label: t4("stockLocations.shippingOptions.edit.action"),
                to: `/settings/locations/${locationId}/fulfillment-set/${fulfillmentSetId}/service-zone/${option.service_zone_id}/shipping-option/${option.id}/edit`
              },
              {
                label: t4("stockLocations.shippingOptions.pricing.action"),
                icon: /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(import_icons139.CurrencyDollar, {}),
                to: `/settings/locations/${locationId}/fulfillment-set/${fulfillmentSetId}/service-zone/${option.service_zone_id}/shipping-option/${option.id}/pricing`
              }
            ]
          },
          {
            actions: [
              {
                label: t4("actions.delete"),
                icon: /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(import_icons139.Trash, {}),
                onClick: handleDelete
              }
            ]
          }
        ]
      }
    )
  ] });
}
function ServiceZoneOptions({
  zone,
  locationId,
  fulfillmentSetId
}) {
  const { t: t4 } = (0, import_react_i18next350.useTranslation)();
  const shippingOptions = zone.shipping_options.filter(
    (o) => !isReturnOption(o)
  );
  const returnOptions = zone.shipping_options.filter((o) => isReturnOption(o));
  return /* @__PURE__ */ (0, import_jsx_runtime492.jsxs)("div", { children: [
    /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(Divider, { variant: "dashed" }),
    /* @__PURE__ */ (0, import_jsx_runtime492.jsxs)("div", { className: "flex flex-col gap-y-4 px-6 py-4", children: [
      /* @__PURE__ */ (0, import_jsx_runtime492.jsxs)("div", { className: "item-center flex justify-between", children: [
        /* @__PURE__ */ (0, import_jsx_runtime492.jsx)("span", { className: "text-ui-fg-subtle txt-small self-center font-medium", children: t4("stockLocations.shippingOptions.create.shipping.label") }),
        /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(
          LinkButton,
          {
            to: `/settings/locations/${locationId}/fulfillment-set/${fulfillmentSetId}/service-zone/${zone.id}/shipping-option/create`,
            children: t4("stockLocations.shippingOptions.create.action")
          }
        )
      ] }),
      !!shippingOptions.length && /* @__PURE__ */ (0, import_jsx_runtime492.jsx)("div", { className: "shadow-elevation-card-rest bg-ui-bg-subtle grid divide-y rounded-md", children: shippingOptions.map((o) => /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(
        ShippingOption,
        {
          option: o,
          locationId,
          fulfillmentSetId
        },
        o.id
      )) })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(Divider, { variant: "dashed" }),
    /* @__PURE__ */ (0, import_jsx_runtime492.jsxs)("div", { className: "flex flex-col gap-y-4 px-6 py-4", children: [
      /* @__PURE__ */ (0, import_jsx_runtime492.jsxs)("div", { className: "item-center flex justify-between", children: [
        /* @__PURE__ */ (0, import_jsx_runtime492.jsx)("span", { className: "text-ui-fg-subtle txt-small self-center font-medium", children: t4("stockLocations.shippingOptions.create.returns.label") }),
        /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(
          LinkButton,
          {
            to: `/settings/locations/${locationId}/fulfillment-set/${fulfillmentSetId}/service-zone/${zone.id}/shipping-option/create?is_return`,
            children: t4("stockLocations.shippingOptions.create.action")
          }
        )
      ] }),
      !!returnOptions.length && /* @__PURE__ */ (0, import_jsx_runtime492.jsx)("div", { className: "shadow-elevation-card-rest bg-ui-bg-subtle grid divide-y rounded-md", children: returnOptions.map((o) => /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(
        ShippingOption,
        {
          option: o,
          locationId,
          fulfillmentSetId
        },
        o.id
      )) })
    ] })
  ] });
}
function ServiceZone({ zone, locationId, fulfillmentSetId }) {
  const { t: t4 } = (0, import_react_i18next350.useTranslation)();
  const prompt = (0, import_ui314.usePrompt)();
  const [open, setOpen] = (0, import_react222.useState)(true);
  const { mutateAsync: deleteZone } = useDeleteFulfillmentServiceZone(
    fulfillmentSetId,
    zone.id
  );
  const handleDelete = async () => {
    const res = await prompt({
      title: t4("general.areYouSure"),
      description: t4("stockLocations.serviceZones.delete.confirmation", {
        name: zone.name
      }),
      confirmText: t4("actions.delete"),
      cancelText: t4("actions.cancel")
    });
    if (!res) {
      return;
    }
    await deleteZone(void 0, {
      onError: (e) => {
        import_ui314.toast.error(e.message);
      },
      onSuccess: () => {
        import_ui314.toast.success(
          t4("stockLocations.serviceZones.delete.successToast", {
            name: zone.name
          })
        );
      }
    });
  };
  const countries2 = (0, import_react222.useMemo)(() => {
    const countryGeoZones = zone.geo_zones.filter((g) => g.type === "country");
    const countries3 = countryGeoZones.map(
      ({ country_code }) => countries.find((c) => c.iso_2 === country_code)
    ).filter((c) => !!c);
    if (process.env.NODE_ENV === "development" && countryGeoZones.length !== countries3.length) {
      console.warn(
        "Some countries are missing in the static countries list",
        countryGeoZones.filter((g) => !countries3.find((c) => c.iso_2 === g.country_code)).map((g) => g.country_code)
      );
    }
    return countries3.sort((c1, c2) => c1.name.localeCompare(c2.name));
  }, [zone.geo_zones]);
  const [shippingOptionsCount, returnOptionsCount] = (0, import_react222.useMemo)(() => {
    const options = zone.shipping_options;
    const optionsCount = options.filter((o) => !isReturnOption(o)).length;
    const returnOptionsCount2 = options.filter(isReturnOption).length;
    return [optionsCount, returnOptionsCount2];
  }, [zone.shipping_options]);
  return /* @__PURE__ */ (0, import_jsx_runtime492.jsxs)("div", { className: "flex flex-col", children: [
    /* @__PURE__ */ (0, import_jsx_runtime492.jsxs)("div", { className: "flex flex-row items-center justify-between gap-x-4 px-6 py-4", children: [
      /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(IconAvatar, { children: /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(import_icons139.Map, {}) }),
      /* @__PURE__ */ (0, import_jsx_runtime492.jsxs)("div", { className: "grow-1 flex flex-1 flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(import_ui314.Text, { size: "small", leading: "compact", weight: "plus", children: zone.name }),
        /* @__PURE__ */ (0, import_jsx_runtime492.jsxs)("div", { className: "flex items-center gap-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(
            ListSummary,
            {
              variant: "base",
              list: countries2.map((c) => c.display_name),
              inline: true,
              n: 1
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime492.jsx)("span", { children: "\xB7" }),
          /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(import_ui314.Text, { className: "text-ui-fg-subtle txt-small", children: t4("stockLocations.shippingOptions.fields.count.shipping", {
            count: shippingOptionsCount
          }) }),
          /* @__PURE__ */ (0, import_jsx_runtime492.jsx)("span", { children: "\xB7" }),
          /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(import_ui314.Text, { className: "text-ui-fg-subtle txt-small", children: t4("stockLocations.shippingOptions.fields.count.returns", {
            count: returnOptionsCount
          }) })
        ] })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime492.jsxs)("div", { className: "flex grow-0 items-center gap-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(
          import_ui314.IconButton,
          {
            size: "small",
            onClick: () => setOpen((s) => !s),
            variant: "transparent",
            children: /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(
              import_icons139.TriangleDownMini,
              {
                style: {
                  transform: `rotate(${!open ? 0 : 180}deg)`,
                  transition: ".2s transform ease-in-out"
                }
              }
            )
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(
          ActionMenu,
          {
            groups: [
              {
                actions: [
                  {
                    label: t4("actions.edit"),
                    icon: /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(import_icons139.PencilSquare, {}),
                    to: `/settings/locations/${locationId}/fulfillment-set/${fulfillmentSetId}/service-zone/${zone.id}/edit`
                  },
                  {
                    label: t4("stockLocations.serviceZones.manageAreas.action"),
                    icon: /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(import_icons139.Map, {}),
                    to: `/settings/locations/${locationId}/fulfillment-set/${fulfillmentSetId}/service-zone/${zone.id}/areas`
                  }
                ]
              },
              {
                actions: [
                  {
                    label: t4("actions.delete"),
                    icon: /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(import_icons139.Trash, {}),
                    onClick: handleDelete
                  }
                ]
              }
            ]
          }
        )
      ] })
    ] }),
    open && /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(
      ServiceZoneOptions,
      {
        fulfillmentSetId,
        locationId,
        zone
      }
    )
  ] });
}
function FulfillmentSet2(props) {
  const { t: t4 } = (0, import_react_i18next350.useTranslation)();
  const prompt = (0, import_ui314.usePrompt)();
  const { fulfillmentSet, locationName, locationId, type } = props;
  const fulfillmentSetExists = !!fulfillmentSet;
  const hasServiceZones = !!fulfillmentSet?.service_zones.length;
  const { mutateAsync: createFulfillmentSet } = useCreateStockLocationFulfillmentSet(locationId);
  const { mutateAsync: deleteFulfillmentSet } = useDeleteFulfillmentSet(
    fulfillmentSet?.id
  );
  const handleCreate = async () => {
    await createFulfillmentSet(
      {
        name: `${locationName} ${type === "pickup" /* Pickup */ ? "pick up" : type}`,
        type
      },
      {
        onSuccess: () => {
          import_ui314.toast.success(t4(`stockLocations.fulfillmentSets.enable.${type}`));
        },
        onError: (e) => {
          import_ui314.toast.error(e.message);
        }
      }
    );
  };
  const handleDelete = async () => {
    const res = await prompt({
      title: t4("general.areYouSure"),
      description: t4(`stockLocations.fulfillmentSets.disable.confirmation`, {
        name: fulfillmentSet?.name
      }),
      confirmText: t4("actions.disable"),
      cancelText: t4("actions.cancel")
    });
    if (!res) {
      return;
    }
    await deleteFulfillmentSet(void 0, {
      onSuccess: () => {
        import_ui314.toast.success(t4(`stockLocations.fulfillmentSets.disable.${type}`));
      },
      onError: (e) => {
        import_ui314.toast.error(e.message);
      }
    });
  };
  const groups = fulfillmentSet ? [
    {
      actions: [
        {
          icon: /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(import_icons139.Plus, {}),
          label: t4("stockLocations.serviceZones.create.action"),
          to: `/settings/locations/${locationId}/fulfillment-set/${fulfillmentSet.id}/service-zones/create`
        }
      ]
    },
    {
      actions: [
        {
          icon: /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(import_icons139.Trash, {}),
          label: t4("actions.disable"),
          onClick: handleDelete
        }
      ]
    }
  ] : [
    {
      actions: [
        {
          icon: /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(import_icons139.Plus, {}),
          label: t4("actions.enable"),
          onClick: handleCreate
        }
      ]
    }
  ];
  return /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(import_ui314.Container, { className: "p-0", children: /* @__PURE__ */ (0, import_jsx_runtime492.jsxs)("div", { className: "flex flex-col divide-y", children: [
    /* @__PURE__ */ (0, import_jsx_runtime492.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
      /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(import_ui314.Heading, { level: "h2", children: t4(`stockLocations.fulfillmentSets.${type}.header`) }),
      /* @__PURE__ */ (0, import_jsx_runtime492.jsxs)("div", { className: "flex items-center gap-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(import_ui314.StatusBadge, { color: fulfillmentSetExists ? "green" : "grey", children: t4(
          fulfillmentSetExists ? "statuses.enabled" : "statuses.disabled"
        ) }),
        /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(ActionMenu, { groups })
      ] })
    ] }),
    fulfillmentSetExists && !hasServiceZones && /* @__PURE__ */ (0, import_jsx_runtime492.jsx)("div", { className: "flex items-center justify-center py-8 pt-6", children: /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(
      NoRecords,
      {
        message: t4("stockLocations.serviceZones.fields.noRecords"),
        className: "h-fit",
        action: {
          to: `/settings/locations/${locationId}/fulfillment-set/${fulfillmentSet.id}/service-zones/create`,
          label: t4("stockLocations.serviceZones.create.action")
        }
      }
    ) }),
    hasServiceZones && /* @__PURE__ */ (0, import_jsx_runtime492.jsx)("div", { className: "flex flex-col divide-y", children: fulfillmentSet?.service_zones.map((zone) => /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(
      ServiceZone,
      {
        zone,
        locationId,
        fulfillmentSetId: fulfillmentSet.id
      },
      zone.id
    )) })
  ] }) });
}
var import_icons139, import_ui314, import_react222, import_react_i18next350, import_react_router_dom166, import_jsx_runtime492, LocationGeneralSection, Actions;
var init_location_general_section = __esm({
  "src/routes/locations/location-detail/components/location-general-section/location-general-section.tsx"() {
    "use strict";
    import_icons139 = require("@medusajs/icons");
    import_ui314 = require("@medusajs/ui");
    import_react222 = require("react");
    import_react_i18next350 = require("react-i18next");
    import_react_router_dom166 = require("react-router-dom");
    init_action_menu2();
    init_divider2();
    init_empty_table_content2();
    init_icon_avatar2();
    init_link_button2();
    init_list_summary2();
    init_fulfillment_sets();
    init_shipping_options();
    init_stock_locations();
    init_addresses();
    init_countries();
    init_format_provider();
    init_shipping_options2();
    init_constants17();
    import_jsx_runtime492 = require("react/jsx-runtime");
    LocationGeneralSection = ({
      location
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime492.jsxs)(import_jsx_runtime492.Fragment, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(import_ui314.Container, { className: "p-0", children: /* @__PURE__ */ (0, import_jsx_runtime492.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime492.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(import_ui314.Heading, { children: location.name }),
            /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(import_ui314.Text, { className: "text-ui-fg-subtle txt-small", children: getFormattedAddress({ address: location.address }).join(", ") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(Actions, { location })
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(
          FulfillmentSet2,
          {
            locationId: location.id,
            locationName: location.name,
            type: "pickup" /* Pickup */,
            fulfillmentSet: location.fulfillment_sets?.find(
              (f) => f.type === "pickup" /* Pickup */
            )
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(
          FulfillmentSet2,
          {
            locationId: location.id,
            locationName: location.name,
            type: "shipping" /* Shipping */,
            fulfillmentSet: location.fulfillment_sets?.find(
              (f) => f.type === "shipping" /* Shipping */
            )
          }
        )
      ] });
    };
    Actions = ({ location }) => {
      const navigate = (0, import_react_router_dom166.useNavigate)();
      const { t: t4 } = (0, import_react_i18next350.useTranslation)();
      const { mutateAsync } = useDeleteStockLocation(location.id);
      const prompt = (0, import_ui314.usePrompt)();
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("stockLocations.delete.confirmation", {
            name: location.name
          }),
          verificationText: location.name,
          verificationInstruction: t4("general.typeToConfirm"),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            import_ui314.toast.success(
              t4("stockLocations.create.successToast", {
                name: location.name
              })
            );
            navigate("/settings/locations", { replace: true });
          },
          onError: (e) => {
            import_ui314.toast.error(e.message);
          }
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(import_icons139.PencilSquare, {}),
                  label: t4("actions.edit"),
                  to: `edit`
                },
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(import_icons139.ArchiveBox, {}),
                  label: t4("stockLocations.edit.viewInventory"),
                  to: `/inventory?location_id=${location.id}`
                }
              ]
            },
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime492.jsx)(import_icons139.Trash, {}),
                  label: t4("actions.delete"),
                  onClick: handleDelete
                }
              ]
            }
          ]
        }
      );
    };
  }
});

// src/routes/locations/location-detail/components/location-general-section/index.ts
var init_location_general_section2 = __esm({
  "src/routes/locations/location-detail/components/location-general-section/index.ts"() {
    "use strict";
    init_location_general_section();
  }
});

// src/routes/locations/location-detail/components/location-sales-channels-section/locations-sales-channels-section.tsx
function LocationsSalesChannelsSection({
  location
}) {
  const { t: t4 } = (0, import_react_i18next351.useTranslation)();
  const { count: count3 } = useSalesChannels({ limit: 1, fields: "id" });
  const hasConnectedChannels = !!location.sales_channels?.length;
  return /* @__PURE__ */ (0, import_jsx_runtime493.jsxs)(import_ui315.Container, { className: "flex flex-col px-6 py-4", children: [
    /* @__PURE__ */ (0, import_jsx_runtime493.jsxs)("div", { className: "flex items-center justify-between", children: [
      /* @__PURE__ */ (0, import_jsx_runtime493.jsx)(import_ui315.Heading, { level: "h2", children: t4("stockLocations.salesChannels.header") }),
      /* @__PURE__ */ (0, import_jsx_runtime493.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  label: t4("actions.edit"),
                  to: "sales-channels",
                  icon: /* @__PURE__ */ (0, import_jsx_runtime493.jsx)(import_icons140.PencilSquare, {})
                }
              ]
            }
          ]
        }
      )
    ] }),
    hasConnectedChannels ? /* @__PURE__ */ (0, import_jsx_runtime493.jsxs)("div", { className: "flex flex-col gap-y-4 pt-4", children: [
      /* @__PURE__ */ (0, import_jsx_runtime493.jsxs)("div", { className: "grid grid-cols-[28px_1fr] items-center gap-x-3", children: [
        /* @__PURE__ */ (0, import_jsx_runtime493.jsx)(IconAvatar, { children: /* @__PURE__ */ (0, import_jsx_runtime493.jsx)(import_icons140.Channels, { className: "text-ui-fg-subtle" }) }),
        /* @__PURE__ */ (0, import_jsx_runtime493.jsx)(
          ListSummary,
          {
            n: 3,
            className: "text-ui-fg-base",
            inline: true,
            list: location.sales_channels?.map((sc) => sc.name) ?? []
          }
        )
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime493.jsx)(import_ui315.Text, { className: "text-ui-fg-subtle", size: "small", leading: "compact", children: t4("stockLocations.salesChannels.connectedTo", {
        count: location.sales_channels?.length,
        total: count3
      }) })
    ] }) : /* @__PURE__ */ (0, import_jsx_runtime493.jsx)(
      NoRecords,
      {
        className: "h-fit pb-2 pt-6",
        action: {
          label: t4("stockLocations.salesChannels.action"),
          to: "sales-channels"
        },
        message: t4("stockLocations.salesChannels.noChannels")
      }
    )
  ] });
}
var import_icons140, import_ui315, import_react_i18next351, import_jsx_runtime493, locations_sales_channels_section_default;
var init_locations_sales_channels_section = __esm({
  "src/routes/locations/location-detail/components/location-sales-channels-section/locations-sales-channels-section.tsx"() {
    "use strict";
    import_icons140 = require("@medusajs/icons");
    import_ui315 = require("@medusajs/ui");
    import_react_i18next351 = require("react-i18next");
    init_action_menu2();
    init_empty_table_content2();
    init_icon_avatar2();
    init_list_summary2();
    init_sales_channels();
    import_jsx_runtime493 = require("react/jsx-runtime");
    locations_sales_channels_section_default = LocationsSalesChannelsSection;
  }
});

// src/routes/locations/location-detail/components/location-fulfillment-providers-section/location-fulfillment-providers-section.tsx
function LocationsFulfillmentProvidersSection({
  location
}) {
  const { t: t4 } = (0, import_react_i18next352.useTranslation)();
  const { fulfillment_providers } = useFulfillmentProviders({
    stock_location_id: location.id,
    fields: "id",
    is_enabled: true
  });
  return /* @__PURE__ */ (0, import_jsx_runtime494.jsxs)(import_ui316.Container, { className: "flex flex-col px-6 py-4", children: [
    /* @__PURE__ */ (0, import_jsx_runtime494.jsxs)("div", { className: "flex items-center justify-between", children: [
      /* @__PURE__ */ (0, import_jsx_runtime494.jsx)(import_ui316.Heading, { level: "h2", children: t4("stockLocations.fulfillmentProviders.header") }),
      /* @__PURE__ */ (0, import_jsx_runtime494.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  label: t4("actions.edit"),
                  to: "fulfillment-providers",
                  icon: /* @__PURE__ */ (0, import_jsx_runtime494.jsx)(import_icons141.PencilSquare, {})
                }
              ]
            }
          ]
        }
      )
    ] }),
    fulfillment_providers?.length ? /* @__PURE__ */ (0, import_jsx_runtime494.jsx)("div", { className: "flex flex-col gap-y-4 pt-4", children: /* @__PURE__ */ (0, import_jsx_runtime494.jsx)("div", { className: "grid grid-cols-[28px_1fr] items-center gap-x-3 gap-y-3", children: fulfillment_providers?.map((fulfillmentProvider) => {
      return /* @__PURE__ */ (0, import_jsx_runtime494.jsxs)(import_jsx_runtime494.Fragment, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime494.jsx)(IconAvatar, { children: /* @__PURE__ */ (0, import_jsx_runtime494.jsx)(import_icons141.HandTruck, { className: "text-ui-fg-subtle" }) }),
        /* @__PURE__ */ (0, import_jsx_runtime494.jsx)("div", { className: "txt-compact-small", children: formatProvider(fulfillmentProvider.id) })
      ] });
    }) }) }) : /* @__PURE__ */ (0, import_jsx_runtime494.jsx)(
      NoRecords,
      {
        className: "h-fit pb-2 pt-6 text-center",
        action: {
          label: t4("stockLocations.fulfillmentProviders.action"),
          to: "fulfillment-providers"
        },
        message: t4("stockLocations.fulfillmentProviders.noProviders")
      }
    )
  ] });
}
var import_icons141, import_ui316, import_react_i18next352, import_jsx_runtime494, location_fulfillment_providers_section_default;
var init_location_fulfillment_providers_section = __esm({
  "src/routes/locations/location-detail/components/location-fulfillment-providers-section/location-fulfillment-providers-section.tsx"() {
    "use strict";
    import_icons141 = require("@medusajs/icons");
    import_ui316 = require("@medusajs/ui");
    import_react_i18next352 = require("react-i18next");
    init_action_menu2();
    init_empty_table_content2();
    init_icon_avatar2();
    init_api();
    init_format_provider();
    import_jsx_runtime494 = require("react/jsx-runtime");
    location_fulfillment_providers_section_default = LocationsFulfillmentProvidersSection;
  }
});

// src/routes/locations/location-detail/location-detail.tsx
var import_react_router_dom167, import_jsx_runtime495, LocationDetail;
var init_location_detail = __esm({
  "src/routes/locations/location-detail/location-detail.tsx"() {
    "use strict";
    import_react_router_dom167 = require("react-router-dom");
    init_stock_locations();
    init_location_general_section2();
    init_locations_sales_channels_section();
    init_skeleton2();
    init_pages();
    init_extensions();
    init_location_fulfillment_providers_section();
    init_const2();
    import_jsx_runtime495 = require("react/jsx-runtime");
    LocationDetail = () => {
      const initialData = (0, import_react_router_dom167.useLoaderData)();
      const { location_id } = (0, import_react_router_dom167.useParams)();
      const {
        stock_location: location,
        isPending: isLoading,
        isError,
        error
      } = useStockLocation(location_id, { fields: detailsFields }, { initialData });
      const { getWidgets } = useDashboardExtension();
      if (isLoading || !location) {
        return /* @__PURE__ */ (0, import_jsx_runtime495.jsx)(TwoColumnPageSkeleton, { mainSections: 3, sidebarSections: 2, showJSON: true });
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime495.jsxs)(
        TwoColumnPage,
        {
          widgets: {
            after: getWidgets("location.details.after"),
            before: getWidgets("location.details.before"),
            sideAfter: getWidgets("location.details.side.after"),
            sideBefore: getWidgets("location.details.side.before")
          },
          data: location,
          showJSON: true,
          hasOutlet: true,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime495.jsx)(TwoColumnPage.Main, { children: /* @__PURE__ */ (0, import_jsx_runtime495.jsx)(LocationGeneralSection, { location }) }),
            /* @__PURE__ */ (0, import_jsx_runtime495.jsxs)(TwoColumnPage.Sidebar, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime495.jsx)(locations_sales_channels_section_default, { location }),
              /* @__PURE__ */ (0, import_jsx_runtime495.jsx)(location_fulfillment_providers_section_default, { location })
            ] })
          ]
        }
      );
    };
  }
});

// src/routes/locations/location-detail/index.ts
var location_detail_exports = {};
__export(location_detail_exports, {
  Component: () => LocationDetail,
  loader: () => locationLoader
});
var init_location_detail2 = __esm({
  "src/routes/locations/location-detail/index.ts"() {
    "use strict";
    init_loader23();
    init_location_detail();
  }
});

// src/routes/locations/location-edit/components/edit-location-form/edit-location-form.tsx
var import_zod100, import_ui317, import_react_hook_form96, import_react_i18next353, zod37, import_jsx_runtime496, EditLocationSchema, EditLocationForm;
var init_edit_location_form = __esm({
  "src/routes/locations/location-edit/components/edit-location-form/edit-location-form.tsx"() {
    "use strict";
    import_zod100 = require("@hookform/resolvers/zod");
    import_ui317 = require("@medusajs/ui");
    import_react_hook_form96 = require("react-hook-form");
    import_react_i18next353 = require("react-i18next");
    zod37 = __toESM(require("zod"));
    init_form2();
    init_country_select2();
    init_modals();
    init_keybound_form2();
    init_stock_locations();
    import_jsx_runtime496 = require("react/jsx-runtime");
    EditLocationSchema = zod37.object({
      name: zod37.string().min(1),
      address: zod37.object({
        address_1: zod37.string().min(1),
        address_2: zod37.string().optional(),
        country_code: zod37.string().min(2).max(2),
        city: zod37.string().optional(),
        postal_code: zod37.string().optional(),
        province: zod37.string().optional(),
        company: zod37.string().optional(),
        phone: zod37.string().optional()
        // TODO: Add validation
      })
    });
    EditLocationForm = ({ location }) => {
      const { t: t4 } = (0, import_react_i18next353.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form96.useForm)({
        defaultValues: {
          name: location.name,
          address: {
            address_1: location.address?.address_1 || "",
            address_2: location.address?.address_2 || "",
            city: location.address?.city || "",
            company: location.address?.company || "",
            country_code: location.address?.country_code || "",
            phone: location.address?.phone || "",
            postal_code: location.address?.postal_code || "",
            province: location.address?.province || ""
          }
        },
        resolver: (0, import_zod100.zodResolver)(EditLocationSchema)
      });
      const { mutateAsync, isPending } = useUpdateStockLocation(location.id);
      const handleSubmit = form.handleSubmit(async (values) => {
        const { name, address } = values;
        await mutateAsync(
          {
            name,
            address
          },
          {
            onSuccess: () => {
              import_ui317.toast.success(t4("stockLocations.edit.successToast"));
              handleSuccess();
            },
            onError: (e) => {
              import_ui317.toast.error(e.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime496.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex flex-1 flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(RouteDrawer.Body, { className: "flex flex-col gap-y-8 overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime496.jsxs)("div", { className: "grid grid-cols-1 gap-4", children: [
              /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "name",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime496.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.Label, { children: t4("fields.name") }),
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(import_ui317.Input, { size: "small", ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "address.address_1",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime496.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.Label, { children: t4("fields.address") }),
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(import_ui317.Input, { size: "small", ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "address.address_2",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime496.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.Label, { optional: true, children: t4("fields.address2") }),
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(import_ui317.Input, { size: "small", ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "address.postal_code",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime496.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.Label, { optional: true, children: t4("fields.postalCode") }),
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(import_ui317.Input, { size: "small", ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "address.city",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime496.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.Label, { optional: true, children: t4("fields.city") }),
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(import_ui317.Input, { size: "small", ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "address.country_code",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime496.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.Label, { children: t4("fields.country") }),
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(CountrySelect, { ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "address.province",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime496.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.Label, { optional: true, children: t4("fields.state") }),
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(import_ui317.Input, { size: "small", ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "address.company",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime496.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.Label, { optional: true, children: t4("fields.company") }),
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(import_ui317.Input, { size: "small", ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "address.phone",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime496.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.Label, { optional: true, children: t4("fields.phone") }),
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(import_ui317.Input, { size: "small", ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              )
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime496.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(import_ui317.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime496.jsx)(import_ui317.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/locations/location-edit/components/edit-location-form/index.ts
var init_edit_location_form2 = __esm({
  "src/routes/locations/location-edit/components/edit-location-form/index.ts"() {
    "use strict";
    init_edit_location_form();
  }
});

// src/routes/locations/location-edit/location-edit.tsx
var import_ui318, import_react_i18next354, import_react_router_dom168, import_jsx_runtime497, LocationEdit;
var init_location_edit = __esm({
  "src/routes/locations/location-edit/location-edit.tsx"() {
    "use strict";
    import_ui318 = require("@medusajs/ui");
    import_react_i18next354 = require("react-i18next");
    import_react_router_dom168 = require("react-router-dom");
    init_modals();
    init_stock_locations();
    init_edit_location_form2();
    import_jsx_runtime497 = require("react/jsx-runtime");
    LocationEdit = () => {
      const { t: t4 } = (0, import_react_i18next354.useTranslation)();
      const { location_id } = (0, import_react_router_dom168.useParams)();
      const { stock_location, isPending, isError, error } = useStockLocation(
        location_id,
        {
          fields: "*address"
        }
      );
      const ready = !isPending && !!stock_location;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime497.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime497.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime497.jsx)(import_ui318.Heading, { className: "capitalize", children: t4("locations.editLocation") }) }),
        ready && /* @__PURE__ */ (0, import_jsx_runtime497.jsx)(EditLocationForm, { location: stock_location })
      ] });
    };
  }
});

// src/routes/locations/location-edit/index.ts
var location_edit_exports = {};
__export(location_edit_exports, {
  Component: () => LocationEdit
});
var init_location_edit2 = __esm({
  "src/routes/locations/location-edit/index.ts"() {
    "use strict";
    init_location_edit();
  }
});

// src/routes/locations/location-sales-channels/components/edit-sales-channels-form/edit-sales-channels-form.tsx
var import_ui319, import_react_query76, import_react_table66, import_react223, import_react_i18next355, zod38, import_zod101, import_react_hook_form97, import_jsx_runtime498, EditSalesChannelsSchema2, PAGE_SIZE51, LocationEditSalesChannelsForm, columnHelper67, useColumns37;
var init_edit_sales_channels_form3 = __esm({
  "src/routes/locations/location-sales-channels/components/edit-sales-channels-form/edit-sales-channels-form.tsx"() {
    "use strict";
    import_ui319 = require("@medusajs/ui");
    import_react_query76 = require("@tanstack/react-query");
    import_react_table66 = require("@tanstack/react-table");
    import_react223 = require("react");
    import_react_i18next355 = require("react-i18next");
    zod38 = __toESM(require("zod"));
    import_zod101 = require("@hookform/resolvers/zod");
    import_react_hook_form97 = require("react-hook-form");
    init_modals();
    init_data_table2();
    init_sales_channels();
    init_stock_locations();
    init_use_sales_channel_table_columns();
    init_use_sales_channel_table_filters();
    init_use_sales_channel_table_query();
    init_use_data_table();
    import_jsx_runtime498 = require("react/jsx-runtime");
    EditSalesChannelsSchema2 = zod38.object({
      sales_channels: zod38.array(zod38.string()).optional()
    });
    PAGE_SIZE51 = 50;
    LocationEditSalesChannelsForm = ({
      location
    }) => {
      const { t: t4 } = (0, import_react_i18next355.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form97.useForm)({
        defaultValues: {
          sales_channels: location.sales_channels?.map((sc) => sc.id) ?? []
        },
        resolver: (0, import_zod101.zodResolver)(EditSalesChannelsSchema2)
      });
      const { setValue } = form;
      const initialState = location.sales_channels?.reduce((acc, curr) => {
        acc[curr.id] = true;
        return acc;
      }, {}) ?? {};
      const [rowSelection, setRowSelection] = (0, import_react223.useState)(initialState);
      (0, import_react223.useEffect)(() => {
        const ids = Object.keys(rowSelection);
        setValue("sales_channels", ids, {
          shouldDirty: true,
          shouldTouch: true
        });
      }, [rowSelection, setValue]);
      const { searchParams, raw } = useSalesChannelTableQuery({
        pageSize: PAGE_SIZE51
      });
      const { sales_channels, count: count3, isLoading, isError, error } = useSalesChannels(
        {
          ...searchParams
        },
        {
          placeholderData: import_react_query76.keepPreviousData
        }
      );
      const filters = useSalesChannelTableFilters();
      const columns = useColumns37();
      const { table } = useDataTable({
        data: sales_channels ?? [],
        columns,
        count: count3,
        enablePagination: true,
        enableRowSelection: true,
        rowSelection: {
          state: rowSelection,
          updater: setRowSelection
        },
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE51
      });
      const { mutateAsync, isPending: isMutating } = useUpdateStockLocationSalesChannels(location.id);
      const handleSubmit = form.handleSubmit(async (data) => {
        const originalIds = location.sales_channels?.map((sc) => sc.id);
        const arr = data.sales_channels ?? [];
        await mutateAsync(
          {
            add: arr.filter((i) => !originalIds?.includes(i)),
            remove: originalIds?.filter((i) => !arr.includes(i))
          },
          {
            onSuccess: () => {
              import_ui319.toast.success(t4("stockLocations.salesChannels.successToast"));
              handleSuccess(`/settings/locations/${location.id}`);
            },
            onError: (e) => {
              import_ui319.toast.error(e.message);
            }
          }
        );
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime498.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime498.jsxs)("div", { className: "flex h-full flex-col overflow-hidden", children: [
        /* @__PURE__ */ (0, import_jsx_runtime498.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime498.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime498.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime498.jsx)(import_ui319.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime498.jsx)(import_ui319.Button, { size: "small", isLoading: isMutating, onClick: handleSubmit, children: t4("actions.save") })
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime498.jsx)(RouteFocusModal.Body, { children: /* @__PURE__ */ (0, import_jsx_runtime498.jsx)(
          DataTable,
          {
            table,
            columns,
            pageSize: PAGE_SIZE51,
            isLoading,
            count: count3,
            filters,
            search: "autofocus",
            pagination: true,
            orderBy: [
              { key: "name", label: t4("fields.name") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            queryObject: raw,
            layout: "fill"
          }
        ) })
      ] }) });
    };
    columnHelper67 = (0, import_react_table66.createColumnHelper)();
    useColumns37 = () => {
      const columns = useSalesChannelTableColumns();
      return (0, import_react223.useMemo)(
        () => [
          columnHelper67.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime498.jsx)(
                import_ui319.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime498.jsx)(
                import_ui319.Checkbox,
                {
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...columns
        ],
        [columns]
      );
    };
  }
});

// src/routes/locations/location-sales-channels/components/edit-sales-channels-form/index.ts
var init_edit_sales_channels_form4 = __esm({
  "src/routes/locations/location-sales-channels/components/edit-sales-channels-form/index.ts"() {
    "use strict";
    init_edit_sales_channels_form3();
  }
});

// src/routes/locations/location-sales-channels/location-sales-channels.tsx
var import_react_router_dom169, import_jsx_runtime499, LocationSalesChannels;
var init_location_sales_channels = __esm({
  "src/routes/locations/location-sales-channels/location-sales-channels.tsx"() {
    "use strict";
    import_react_router_dom169 = require("react-router-dom");
    init_modals();
    init_stock_locations();
    init_edit_sales_channels_form4();
    import_jsx_runtime499 = require("react/jsx-runtime");
    LocationSalesChannels = () => {
      const { location_id } = (0, import_react_router_dom169.useParams)();
      const { stock_location, isPending, isError, error } = useStockLocation(
        location_id,
        {
          fields: "id,*sales_channels"
        }
      );
      const ready = !isPending && !!stock_location;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime499.jsx)(RouteFocusModal, { children: ready && /* @__PURE__ */ (0, import_jsx_runtime499.jsx)(LocationEditSalesChannelsForm, { location: stock_location }) });
    };
  }
});

// src/routes/locations/location-sales-channels/index.ts
var location_sales_channels_exports = {};
__export(location_sales_channels_exports, {
  Component: () => LocationSalesChannels
});
var init_location_sales_channels2 = __esm({
  "src/routes/locations/location-sales-channels/index.ts"() {
    "use strict";
    init_location_sales_channels();
  }
});

// src/hooks/table/columns/use-fulfillment-provider-table-columns.tsx
var import_react_table67, import_react224, import_react_i18next356, import_jsx_runtime500, columnHelper68, useFulfillmentProviderTableColumns;
var init_use_fulfillment_provider_table_columns = __esm({
  "src/hooks/table/columns/use-fulfillment-provider-table-columns.tsx"() {
    "use strict";
    import_react_table67 = require("@tanstack/react-table");
    import_react224 = require("react");
    import_react_i18next356 = require("react-i18next");
    init_text_cell2();
    init_format_provider();
    import_jsx_runtime500 = require("react/jsx-runtime");
    columnHelper68 = (0, import_react_table67.createColumnHelper)();
    useFulfillmentProviderTableColumns = () => {
      const { t: t4 } = (0, import_react_i18next356.useTranslation)();
      return (0, import_react224.useMemo)(
        () => [
          columnHelper68.accessor("id", {
            header: () => /* @__PURE__ */ (0, import_jsx_runtime500.jsx)(TextHeader, { text: "Provider" }),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime500.jsx)(TextCell, { text: formatProvider(getValue2()) })
          })
        ],
        [t4]
      );
    };
  }
});

// src/hooks/table/query/use-fulfillment-providers-table-query.tsx
var useFulfillmentProvidersTableQuery;
var init_use_fulfillment_providers_table_query = __esm({
  "src/hooks/table/query/use-fulfillment-providers-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useFulfillmentProvidersTableQuery = ({
      prefix,
      pageSize = 20
    }) => {
      const queryObject = useQueryParams(
        ["offset", "q", "stock_location_id"],
        prefix
      );
      const { offset: offset4, q, stock_location_id } = queryObject;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        stock_location_id,
        q
      };
      return {
        searchParams,
        raw: queryObject
      };
    };
  }
});

// src/routes/locations/location-fulfillment-providers/components/edit-fulfillment-providers-form/edit-fulfillment-providers-form.tsx
var import_ui320, import_react_query77, import_react_table68, import_react225, import_react_i18next357, zod39, import_zod102, import_react_hook_form98, import_jsx_runtime501, EditFulfillmentProvidersFormSchema, PAGE_SIZE52, LocationEditFulfillmentProvidersForm, columnHelper69, useColumns38;
var init_edit_fulfillment_providers_form = __esm({
  "src/routes/locations/location-fulfillment-providers/components/edit-fulfillment-providers-form/edit-fulfillment-providers-form.tsx"() {
    "use strict";
    import_ui320 = require("@medusajs/ui");
    import_react_query77 = require("@tanstack/react-query");
    import_react_table68 = require("@tanstack/react-table");
    import_react225 = require("react");
    import_react_i18next357 = require("react-i18next");
    zod39 = __toESM(require("zod"));
    import_zod102 = require("@hookform/resolvers/zod");
    import_react_hook_form98 = require("react-hook-form");
    init_modals();
    init_data_table2();
    init_fulfillment_providers();
    init_stock_locations();
    init_use_fulfillment_provider_table_columns();
    init_filters();
    init_use_fulfillment_providers_table_query();
    init_use_data_table();
    import_jsx_runtime501 = require("react/jsx-runtime");
    EditFulfillmentProvidersFormSchema = zod39.object({
      fulfillment_providers: zod39.array(zod39.string()).optional()
    });
    PAGE_SIZE52 = 50;
    LocationEditFulfillmentProvidersForm = ({
      location
    }) => {
      const { t: t4 } = (0, import_react_i18next357.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form98.useForm)({
        defaultValues: {
          fulfillment_providers: location.fulfillment_providers?.map((fp) => fp.id) ?? []
        },
        resolver: (0, import_zod102.zodResolver)(EditFulfillmentProvidersFormSchema)
      });
      const { setValue } = form;
      const initialState = location.fulfillment_providers?.reduce((acc, curr) => {
        acc[curr.id] = true;
        return acc;
      }, {}) ?? {};
      const [rowSelection, setRowSelection] = (0, import_react225.useState)(initialState);
      (0, import_react225.useEffect)(() => {
        const ids = Object.keys(rowSelection);
        setValue("fulfillment_providers", ids, {
          shouldDirty: true,
          shouldTouch: true
        });
      }, [rowSelection, setValue]);
      const { searchParams, raw } = useFulfillmentProvidersTableQuery({
        pageSize: PAGE_SIZE52
      });
      const { fulfillment_providers, count: count3, isLoading, isError, error } = useFulfillmentProviders(
        { ...searchParams, is_enabled: true },
        { placeholderData: import_react_query77.keepPreviousData }
      );
      const filters = useDateTableFilters();
      const columns = useColumns38();
      const { table } = useDataTable({
        data: fulfillment_providers ?? [],
        columns,
        count: count3,
        enablePagination: true,
        enableRowSelection: true,
        rowSelection: {
          state: rowSelection,
          updater: setRowSelection
        },
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE52
      });
      const { mutateAsync, isPending: isMutating } = useUpdateStockLocationFulfillmentProviders(location.id);
      const handleSubmit = form.handleSubmit(async (data) => {
        const originalIds = location.fulfillment_providers?.map((sc) => sc.id);
        const arr = data.fulfillment_providers ?? [];
        await mutateAsync(
          {
            add: arr.filter((i) => !originalIds?.includes(i)),
            remove: originalIds?.filter((i) => !arr.includes(i))
          },
          {
            onSuccess: () => {
              import_ui320.toast.success(t4("stockLocations.fulfillmentProviders.successToast"));
              handleSuccess(`/settings/locations/${location.id}`);
            },
            onError: (e) => {
              import_ui320.toast.error(e.message);
            }
          }
        );
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime501.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime501.jsxs)("div", { className: "flex h-full flex-col overflow-hidden", children: [
        /* @__PURE__ */ (0, import_jsx_runtime501.jsx)(RouteFocusModal.Body, { children: /* @__PURE__ */ (0, import_jsx_runtime501.jsx)(
          DataTable,
          {
            table,
            columns,
            pageSize: PAGE_SIZE52,
            isLoading,
            count: count3,
            filters,
            search: "autofocus",
            pagination: true,
            orderBy: [{ key: "id", label: t4("fields.id") }],
            queryObject: raw,
            layout: "fill"
          }
        ) }),
        /* @__PURE__ */ (0, import_jsx_runtime501.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime501.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime501.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime501.jsx)(import_ui320.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime501.jsx)(import_ui320.Button, { size: "small", isLoading: isMutating, onClick: handleSubmit, children: t4("actions.save") })
        ] }) })
      ] }) });
    };
    columnHelper69 = (0, import_react_table68.createColumnHelper)();
    useColumns38 = () => {
      const columns = useFulfillmentProviderTableColumns();
      return (0, import_react225.useMemo)(
        () => [
          columnHelper69.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime501.jsx)(
                import_ui320.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime501.jsx)(
                import_ui320.Checkbox,
                {
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...columns
        ],
        [columns]
      );
    };
  }
});

// src/routes/locations/location-fulfillment-providers/components/edit-fulfillment-providers-form/index.ts
var init_edit_fulfillment_providers_form2 = __esm({
  "src/routes/locations/location-fulfillment-providers/components/edit-fulfillment-providers-form/index.ts"() {
    "use strict";
    init_edit_fulfillment_providers_form();
  }
});

// src/routes/locations/location-fulfillment-providers/location-fulfillment-providers.tsx
var import_react_router_dom170, import_jsx_runtime502, LocationFulfillmentProviders;
var init_location_fulfillment_providers = __esm({
  "src/routes/locations/location-fulfillment-providers/location-fulfillment-providers.tsx"() {
    "use strict";
    import_react_router_dom170 = require("react-router-dom");
    init_modals();
    init_stock_locations();
    init_edit_fulfillment_providers_form2();
    import_jsx_runtime502 = require("react/jsx-runtime");
    LocationFulfillmentProviders = () => {
      const { location_id } = (0, import_react_router_dom170.useParams)();
      const { stock_location, isPending, isFetching, isError, error } = useStockLocation(location_id, { fields: "id,*fulfillment_providers" });
      const ready = !isPending && !isFetching && !!stock_location;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime502.jsx)(RouteFocusModal, { children: ready && /* @__PURE__ */ (0, import_jsx_runtime502.jsx)(LocationEditFulfillmentProvidersForm, { location: stock_location }) });
    };
  }
});

// src/routes/locations/location-fulfillment-providers/index.ts
var location_fulfillment_providers_exports = {};
__export(location_fulfillment_providers_exports, {
  Component: () => LocationFulfillmentProviders
});
var init_location_fulfillment_providers2 = __esm({
  "src/routes/locations/location-fulfillment-providers/index.ts"() {
    "use strict";
    init_location_fulfillment_providers();
  }
});

// src/routes/locations/common/components/geo-zone-form/geo-zone-form.tsx
function validateForm(form) {
  if (form.getValues("countries") === void 0) {
    throw new Error(
      "The form does not have a field named 'countries'. This field is required to use the GeoZoneForm component."
    );
  }
}
var import_ui321, import_react_table69, import_react226, import_react_hook_form99, import_react_i18next358, import_zod103, import_jsx_runtime503, GeoZoneSchema, GeoZoneFormImpl, PREFIX20, PAGE_SIZE53, AreaStackedModal, columnHelper70, useColumns39, GeoZoneForm;
var init_geo_zone_form = __esm({
  "src/routes/locations/common/components/geo-zone-form/geo-zone-form.tsx"() {
    "use strict";
    import_ui321 = require("@medusajs/ui");
    import_react_table69 = require("@tanstack/react-table");
    import_react226 = require("react");
    import_react_hook_form99 = require("react-hook-form");
    import_react_i18next358 = require("react-i18next");
    import_zod103 = require("zod");
    init_chip_group2();
    init_form2();
    init_modals();
    init_data_table2();
    init_use_data_table();
    init_countries();
    init_use_countries();
    init_use_country_table_columns();
    init_use_country_table_query();
    init_constants17();
    import_jsx_runtime503 = require("react/jsx-runtime");
    GeoZoneSchema = import_zod103.z.object({
      countries: import_zod103.z.array(
        import_zod103.z.object({ iso_2: import_zod103.z.string().min(2), display_name: import_zod103.z.string() })
      )
    });
    GeoZoneFormImpl = ({
      form
    }) => {
      const castForm = form;
      const { t: t4 } = (0, import_react_i18next358.useTranslation)();
      const { fields, remove, replace } = (0, import_react_hook_form99.useFieldArray)({
        control: castForm.control,
        name: "countries",
        keyName: "iso_2"
      });
      const handleClearAll = () => {
        replace([]);
      };
      validateForm(form);
      return /* @__PURE__ */ (0, import_jsx_runtime503.jsx)(
        Form.Field,
        {
          control: form.control,
          name: "countries",
          render: () => {
            return /* @__PURE__ */ (0, import_jsx_runtime503.jsxs)(Form.Item, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime503.jsxs)("div", { className: "flex items-center justify-between gap-x-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime503.jsxs)("div", { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime503.jsx)(Form.Label, { children: t4("stockLocations.serviceZones.manageAreas.label") }),
                  /* @__PURE__ */ (0, import_jsx_runtime503.jsx)(Form.Hint, { children: t4("stockLocations.serviceZones.manageAreas.hint") })
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime503.jsx)(StackedFocusModal.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime503.jsx)(import_ui321.Button, { size: "small", variant: "secondary", type: "button", children: t4("stockLocations.serviceZones.manageAreas.action") }) })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime503.jsx)(Form.ErrorMessage, {}),
              /* @__PURE__ */ (0, import_jsx_runtime503.jsx)(Form.Control, { className: "mt-0", children: fields.length > 0 && /* @__PURE__ */ (0, import_jsx_runtime503.jsx)(
                ChipGroup,
                {
                  onClearAll: handleClearAll,
                  onRemove: remove,
                  className: "py-4",
                  children: fields.map((field, index2) => /* @__PURE__ */ (0, import_jsx_runtime503.jsx)(ChipGroup.Chip, { index: index2, children: field.display_name }, field.iso_2))
                }
              ) })
            ] });
          }
        }
      );
    };
    PREFIX20 = "ac";
    PAGE_SIZE53 = 50;
    AreaStackedModal = ({
      form
    }) => {
      const castForm = form;
      const { t: t4 } = (0, import_react_i18next358.useTranslation)();
      const { getValues: getValues2, setValue } = castForm;
      const { setIsOpen, getIsOpen: getIsOpen2 } = useStackedModal();
      const open = getIsOpen2(GEO_ZONE_STACKED_MODAL_ID);
      const [selection, setSelection] = (0, import_react226.useState)({});
      const [state, setState] = (0, import_react226.useState)(
        []
      );
      const { searchParams, raw } = useCountryTableQuery({
        pageSize: PAGE_SIZE53,
        prefix: PREFIX20
      });
      const { countries: countries2, count: count3 } = useCountries({
        countries: countries.map((c) => ({
          display_name: c.display_name,
          name: c.name,
          iso_2: c.iso_2,
          iso_3: c.iso_3,
          num_code: c.num_code
        })),
        ...searchParams
      });
      (0, import_react226.useEffect)(() => {
        if (!open) {
          return;
        }
        const countries3 = getValues2("countries");
        if (countries3) {
          setState(
            countries3.map((country) => ({
              iso_2: country.iso_2,
              display_name: country.display_name
            }))
          );
          setSelection(
            countries3.reduce(
              (acc, country) => ({
                ...acc,
                [country.iso_2]: true
              }),
              {}
            )
          );
        }
      }, [open, getValues2]);
      const updater = (fn) => {
        const value = typeof fn === "function" ? fn(selection) : fn;
        const ids = Object.keys(value);
        const addedIdsSet = new Set(ids.filter((id2) => value[id2] && !selection[id2]));
        const addedCountries = [];
        if (addedIdsSet.size > 0) {
          const countriesToAdd = countries2?.filter((country) => addedIdsSet.has(country.iso_2)) ?? [];
          for (const country of countriesToAdd) {
            addedCountries.push({
              iso_2: country.iso_2,
              display_name: country.display_name
            });
          }
        }
        setState((prev) => {
          const filteredPrev = prev.filter((country) => value[country.iso_2]);
          return Array.from(/* @__PURE__ */ new Set([...filteredPrev, ...addedCountries]));
        });
        setSelection(value);
      };
      const handleAdd = () => {
        setValue("countries", state, {
          shouldDirty: true,
          shouldTouch: true
        });
        setIsOpen(GEO_ZONE_STACKED_MODAL_ID, false);
      };
      const columns = useColumns39();
      const { table } = useDataTable({
        data: countries2 || [],
        columns,
        count: count3,
        enablePagination: true,
        enableRowSelection: true,
        getRowId: (row) => row.iso_2,
        pageSize: PAGE_SIZE53,
        rowSelection: {
          state: selection,
          updater
        },
        prefix: PREFIX20
      });
      validateForm(form);
      return /* @__PURE__ */ (0, import_jsx_runtime503.jsxs)(StackedFocusModal.Content, { className: "flex flex-col overflow-hidden", children: [
        /* @__PURE__ */ (0, import_jsx_runtime503.jsxs)(StackedFocusModal.Header, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime503.jsx)(StackedFocusModal.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime503.jsx)("span", { className: "sr-only", children: t4("stockLocations.serviceZones.manageAreas.label") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime503.jsx)(StackedFocusModal.Description, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime503.jsx)("span", { className: "sr-only", children: t4("stockLocations.serviceZones.manageAreas.hint") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime503.jsx)(StackedFocusModal.Body, { className: "flex-1 overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime503.jsx)(
          DataTable,
          {
            table,
            columns,
            pageSize: PAGE_SIZE53,
            count: count3,
            search: true,
            pagination: true,
            layout: "fill",
            orderBy: [
              { key: "display_name", label: t4("fields.name") },
              { key: "iso_2", label: t4("fields.code") }
            ],
            queryObject: raw,
            prefix: PREFIX20
          }
        ) }),
        /* @__PURE__ */ (0, import_jsx_runtime503.jsx)(StackedFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime503.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime503.jsx)(StackedFocusModal.Close, { type: "button", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime503.jsx)(import_ui321.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime503.jsx)(import_ui321.Button, { size: "small", type: "button", onClick: handleAdd, children: t4("actions.save") })
        ] }) })
      ] });
    };
    columnHelper70 = (0, import_react_table69.createColumnHelper)();
    useColumns39 = () => {
      const base = useCountryTableColumns();
      return (0, import_react226.useMemo)(
        () => [
          columnHelper70.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime503.jsx)(
                import_ui321.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              const isPreselected = !row.getCanSelect();
              return /* @__PURE__ */ (0, import_jsx_runtime503.jsx)(
                import_ui321.Checkbox,
                {
                  checked: row.getIsSelected() || isPreselected,
                  disabled: isPreselected,
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...base
        ],
        [base]
      );
    };
    GeoZoneForm = Object.assign(GeoZoneFormImpl, {
      AreaDrawer: AreaStackedModal
    });
  }
});

// src/routes/locations/common/components/geo-zone-form/index.ts
var init_geo_zone_form2 = __esm({
  "src/routes/locations/common/components/geo-zone-form/index.ts"() {
    "use strict";
    init_geo_zone_form();
  }
});

// src/routes/locations/location-service-zone-create/components/create-service-zone-form/create-service-zone-form.tsx
function CreateServiceZoneForm({
  fulfillmentSet,
  type,
  location
}) {
  const { t: t4 } = (0, import_react_i18next359.useTranslation)();
  const { handleSuccess } = useRouteModal();
  const [open, setOpen] = (0, import_react227.useState)(false);
  const form = (0, import_react_hook_form100.useForm)({
    defaultValues: {
      name: "",
      countries: []
    },
    resolver: (0, import_zod104.zodResolver)(CreateServiceZoneSchema)
  });
  const { mutateAsync, isPending } = useCreateFulfillmentSetServiceZone(
    fulfillmentSet.id
  );
  const handleSubmit = form.handleSubmit(async (data) => {
    await mutateAsync(
      {
        name: data.name,
        geo_zones: data.countries.map(({ iso_2 }) => ({
          country_code: iso_2,
          type: "country"
        }))
      },
      {
        onSuccess: () => {
          import_ui322.toast.success(
            t4("stockLocations.serviceZones.create.successToast", {
              name: data.name
            })
          );
          handleSuccess(`/settings/locations/${location.id}`);
        },
        onError: (e) => {
          import_ui322.toast.error(e.message);
        }
      }
    );
  });
  return /* @__PURE__ */ (0, import_jsx_runtime504.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime504.jsxs)(
    KeyboundForm,
    {
      className: "flex h-full flex-col overflow-hidden",
      onSubmit: handleSubmit,
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime504.jsx)(RouteFocusModal.Header, {}),
        /* @__PURE__ */ (0, import_jsx_runtime504.jsx)(RouteFocusModal.Body, { className: "flex flex-1 flex-col items-center overflow-auto", children: /* @__PURE__ */ (0, import_jsx_runtime504.jsxs)(StackedFocusModal, { id: GEO_ZONE_STACKED_MODAL_ID, children: [
          /* @__PURE__ */ (0, import_jsx_runtime504.jsx)("div", { className: "flex flex-1 flex-col items-center", children: /* @__PURE__ */ (0, import_jsx_runtime504.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8 px-2 py-16", children: [
            /* @__PURE__ */ (0, import_jsx_runtime504.jsx)(import_ui322.Heading, { children: type === "pickup" /* Pickup */ ? t4("stockLocations.serviceZones.create.headerPickup", {
              location: location.name
            }) : t4("stockLocations.serviceZones.create.headerShipping", {
              location: location.name
            }) }),
            /* @__PURE__ */ (0, import_jsx_runtime504.jsx)("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2", children: /* @__PURE__ */ (0, import_jsx_runtime504.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "name",
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime504.jsxs)(Form.Item, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime504.jsx)(Form.Label, { children: t4("fields.name") }),
                    /* @__PURE__ */ (0, import_jsx_runtime504.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime504.jsx)(import_ui322.Input, { ...field }) }),
                    /* @__PURE__ */ (0, import_jsx_runtime504.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              }
            ) }),
            /* @__PURE__ */ (0, import_jsx_runtime504.jsx)(InlineTip, { children: t4("stockLocations.serviceZones.fields.tip") }),
            /* @__PURE__ */ (0, import_jsx_runtime504.jsx)(GeoZoneForm, { form })
          ] }) }),
          /* @__PURE__ */ (0, import_jsx_runtime504.jsx)(GeoZoneForm.AreaDrawer, { form })
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime504.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime504.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime504.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime504.jsx)(import_ui322.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime504.jsx)(import_ui322.Button, { type: "submit", size: "small", isLoading: isPending, children: t4("actions.save") })
        ] }) })
      ]
    }
  ) });
}
var import_zod104, import_ui322, import_react227, import_react_hook_form100, import_react_i18next359, import_zod105, import_jsx_runtime504, CreateServiceZoneSchema;
var init_create_service_zone_form = __esm({
  "src/routes/locations/location-service-zone-create/components/create-service-zone-form/create-service-zone-form.tsx"() {
    "use strict";
    import_zod104 = require("@hookform/resolvers/zod");
    import_ui322 = require("@medusajs/ui");
    import_react227 = require("react");
    import_react_hook_form100 = require("react-hook-form");
    import_react_i18next359 = require("react-i18next");
    import_zod105 = require("zod");
    init_form2();
    init_inline_tip2();
    init_modals();
    init_keybound_form2();
    init_fulfillment_sets();
    init_geo_zone_form2();
    init_constants17();
    import_jsx_runtime504 = require("react/jsx-runtime");
    CreateServiceZoneSchema = import_zod105.z.object({
      name: import_zod105.z.string().min(1),
      countries: import_zod105.z.array(import_zod105.z.object({ iso_2: import_zod105.z.string().min(2), display_name: import_zod105.z.string() })).min(1)
    });
  }
});

// src/routes/locations/location-service-zone-create/components/create-service-zone-form/index.ts
var init_create_service_zone_form2 = __esm({
  "src/routes/locations/location-service-zone-create/components/create-service-zone-form/index.ts"() {
    "use strict";
    init_create_service_zone_form();
  }
});

// src/routes/locations/location-service-zone-create/location-service-zone-create.tsx
function LocationCreateServiceZone() {
  const { fset_id, location_id } = (0, import_react_router_dom171.useParams)();
  const { stock_location, isPending, isFetching, isError, error } = useStockLocation(location_id, {
    fields: "*fulfillment_sets"
  });
  const fulfillmentSet = stock_location?.fulfillment_sets?.find(
    (f) => f.id === fset_id
  );
  const type = fulfillmentSet?.type === "pickup" /* Pickup */ ? "pickup" /* Pickup */ : "shipping" /* Shipping */;
  if (!isPending && !isFetching && !fulfillmentSet) {
    throw (0, import_react_router_dom171.json)(
      { message: `Fulfillment set with ID: ${fset_id} was not found.` },
      404
    );
  }
  if (isError) {
    throw error;
  }
  return /* @__PURE__ */ (0, import_jsx_runtime505.jsx)(RouteFocusModal, { prev: `/settings/locations/${location_id}`, children: fulfillmentSet && /* @__PURE__ */ (0, import_jsx_runtime505.jsx)(
    CreateServiceZoneForm,
    {
      fulfillmentSet,
      location: stock_location,
      type
    }
  ) });
}
var import_react_router_dom171, import_jsx_runtime505;
var init_location_service_zone_create = __esm({
  "src/routes/locations/location-service-zone-create/location-service-zone-create.tsx"() {
    "use strict";
    import_react_router_dom171 = require("react-router-dom");
    init_modals();
    init_stock_locations();
    init_create_service_zone_form2();
    init_constants17();
    import_jsx_runtime505 = require("react/jsx-runtime");
  }
});

// src/routes/locations/location-service-zone-create/index.ts
var location_service_zone_create_exports = {};
__export(location_service_zone_create_exports, {
  Component: () => LocationCreateServiceZone
});
var init_location_service_zone_create2 = __esm({
  "src/routes/locations/location-service-zone-create/index.ts"() {
    "use strict";
    init_location_service_zone_create();
  }
});

// src/routes/locations/location-service-zone-edit/components/edit-region-form/edit-service-zone-form.tsx
var import_ui323, import_react_hook_form101, import_react_i18next360, zod40, import_jsx_runtime506, EditServiceZoneSchema, EditServiceZoneForm;
var init_edit_service_zone_form = __esm({
  "src/routes/locations/location-service-zone-edit/components/edit-region-form/edit-service-zone-form.tsx"() {
    "use strict";
    import_ui323 = require("@medusajs/ui");
    import_react_hook_form101 = require("react-hook-form");
    import_react_i18next360 = require("react-i18next");
    zod40 = __toESM(require("zod"));
    init_form2();
    init_inline_tip2();
    init_modals();
    init_keybound_form2();
    init_fulfillment_sets();
    import_jsx_runtime506 = require("react/jsx-runtime");
    EditServiceZoneSchema = zod40.object({
      name: zod40.string().min(1)
    });
    EditServiceZoneForm = ({
      zone,
      fulfillmentSetId,
      locationId
    }) => {
      const { t: t4 } = (0, import_react_i18next360.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form101.useForm)({
        defaultValues: {
          name: zone.name
        }
      });
      const { mutateAsync, isPending: isLoading } = useUpdateFulfillmentSetServiceZone(fulfillmentSetId, zone.id);
      const handleSubmit = form.handleSubmit(async (values) => {
        await mutateAsync(
          {
            name: values.name
          },
          {
            onSuccess: () => {
              import_ui323.toast.success(
                t4("stockLocations.serviceZones.edit.successToast", {
                  name: values.name
                })
              );
              handleSuccess(`/settings/locations/${locationId}`);
            },
            onError: (e) => {
              import_ui323.toast.error(e.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime506.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime506.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex size-full flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime506.jsx)(RouteDrawer.Body, { className: "flex-1 overflow-auto", children: /* @__PURE__ */ (0, import_jsx_runtime506.jsxs)("div", { className: "flex flex-col gap-y-8", children: [
              /* @__PURE__ */ (0, import_jsx_runtime506.jsx)("div", { className: "flex flex-col gap-y-4", children: /* @__PURE__ */ (0, import_jsx_runtime506.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "name",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime506.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime506.jsx)(Form.Label, { children: t4("fields.name") }),
                      /* @__PURE__ */ (0, import_jsx_runtime506.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime506.jsx)(import_ui323.Input, { ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime506.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ) }),
              /* @__PURE__ */ (0, import_jsx_runtime506.jsx)(InlineTip, { children: t4("stockLocations.serviceZones.fields.tip") })
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime506.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime506.jsxs)("div", { className: "flex items-center gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime506.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime506.jsx)(import_ui323.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime506.jsx)(import_ui323.Button, { size: "small", type: "submit", isLoading, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/locations/location-service-zone-edit/components/edit-region-form/index.ts
var init_edit_region_form3 = __esm({
  "src/routes/locations/location-service-zone-edit/components/edit-region-form/index.ts"() {
    "use strict";
    init_edit_service_zone_form();
  }
});

// src/routes/locations/location-service-zone-edit/location-service-zone-edit.tsx
var import_ui324, import_react_i18next361, import_react_router_dom172, import_jsx_runtime507, LocationServiceZoneEdit;
var init_location_service_zone_edit = __esm({
  "src/routes/locations/location-service-zone-edit/location-service-zone-edit.tsx"() {
    "use strict";
    import_ui324 = require("@medusajs/ui");
    import_react_i18next361 = require("react-i18next");
    import_react_router_dom172 = require("react-router-dom");
    init_modals();
    init_stock_locations();
    init_edit_region_form3();
    import_jsx_runtime507 = require("react/jsx-runtime");
    LocationServiceZoneEdit = () => {
      const { t: t4 } = (0, import_react_i18next361.useTranslation)();
      const { location_id, fset_id, zone_id } = (0, import_react_router_dom172.useParams)();
      const { stock_location, isPending, isFetching, isError, error } = useStockLocation(location_id, {
        fields: "*fulfillment_sets.service_zones"
      });
      const serviceZone = stock_location?.fulfillment_sets?.find((f) => f.id === fset_id)?.service_zones.find((z56) => z56.id === zone_id);
      if (!isPending && !isFetching && !serviceZone) {
        throw (0, import_react_router_dom172.json)(
          { message: `Service zone with ID ${zone_id} was not found` },
          404
        );
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime507.jsxs)(RouteDrawer, { prev: `/settings/locations/${location_id}`, children: [
        /* @__PURE__ */ (0, import_jsx_runtime507.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime507.jsx)(import_ui324.Heading, { children: t4("stockLocations.serviceZones.edit.header") }) }),
        serviceZone && /* @__PURE__ */ (0, import_jsx_runtime507.jsx)(
          EditServiceZoneForm,
          {
            zone: serviceZone,
            fulfillmentSetId: fset_id,
            locationId: location_id
          }
        )
      ] });
    };
  }
});

// src/routes/locations/location-service-zone-edit/index.ts
var location_service_zone_edit_exports = {};
__export(location_service_zone_edit_exports, {
  Component: () => LocationServiceZoneEdit
});
var init_location_service_zone_edit2 = __esm({
  "src/routes/locations/location-service-zone-edit/index.ts"() {
    "use strict";
    init_location_service_zone_edit();
  }
});

// src/routes/locations/location-service-zone-manage-areas/components/edit-region-areas-form/edit-service-zone-areas-form.tsx
function EditServiceZoneAreasForm({
  fulfillmentSetId,
  locationId,
  zone
}) {
  const { t: t4 } = (0, import_react_i18next362.useTranslation)();
  const { handleSuccess } = useRouteModal();
  const form = (0, import_react_hook_form102.useForm)({
    defaultValues: {
      countries: zone.geo_zones.map((z56) => {
        const country = countries.find((c) => c.iso_2 === z56.country_code);
        return {
          iso_2: z56.country_code,
          display_name: country?.display_name || z56.country_code.toUpperCase()
        };
      })
    },
    resolver: (0, import_zod106.zodResolver)(EditeServiceZoneSchema)
  });
  const { mutateAsync: editServiceZone, isPending: isLoading } = useUpdateFulfillmentSetServiceZone(fulfillmentSetId, zone.id);
  const handleSubmit = form.handleSubmit(async (data) => {
    await editServiceZone(
      {
        geo_zones: data.countries.map(({ iso_2 }) => ({
          country_code: iso_2,
          type: "country"
        }))
      },
      {
        onSuccess: () => {
          import_ui325.toast.success(
            t4("stockLocations.serviceZones.manageAreas.successToast", {
              name: zone.name
            })
          );
          handleSuccess(`/settings/locations/${locationId}`);
        },
        onError: (e) => {
          import_ui325.toast.error(e.message);
        }
      }
    );
  });
  return /* @__PURE__ */ (0, import_jsx_runtime508.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime508.jsxs)(
    KeyboundForm,
    {
      className: "flex h-full flex-col overflow-hidden",
      onSubmit: handleSubmit,
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime508.jsx)(RouteFocusModal.Header, {}),
        /* @__PURE__ */ (0, import_jsx_runtime508.jsx)(RouteFocusModal.Body, { className: "flex flex-1 flex-col overflow-auto", children: /* @__PURE__ */ (0, import_jsx_runtime508.jsxs)(StackedFocusModal, { id: GEO_ZONE_STACKED_MODAL_ID, children: [
          /* @__PURE__ */ (0, import_jsx_runtime508.jsx)("div", { className: "flex flex-col items-center p-16", children: /* @__PURE__ */ (0, import_jsx_runtime508.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8", children: [
            /* @__PURE__ */ (0, import_jsx_runtime508.jsx)(import_ui325.Heading, { children: t4("stockLocations.serviceZones.manageAreas.header", {
              name: zone.name
            }) }),
            /* @__PURE__ */ (0, import_jsx_runtime508.jsx)(GeoZoneForm, { form })
          ] }) }),
          /* @__PURE__ */ (0, import_jsx_runtime508.jsx)(GeoZoneForm.AreaDrawer, { form })
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime508.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime508.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime508.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime508.jsx)(import_ui325.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime508.jsx)(import_ui325.Button, { type: "submit", size: "small", isLoading, children: t4("actions.save") })
        ] }) })
      ]
    }
  ) });
}
var import_zod106, import_ui325, import_react_hook_form102, import_react_i18next362, import_zod107, import_jsx_runtime508, EditeServiceZoneSchema;
var init_edit_service_zone_areas_form = __esm({
  "src/routes/locations/location-service-zone-manage-areas/components/edit-region-areas-form/edit-service-zone-areas-form.tsx"() {
    "use strict";
    import_zod106 = require("@hookform/resolvers/zod");
    import_ui325 = require("@medusajs/ui");
    import_react_hook_form102 = require("react-hook-form");
    import_react_i18next362 = require("react-i18next");
    import_zod107 = require("zod");
    init_modals();
    init_keybound_form2();
    init_fulfillment_sets();
    init_countries();
    init_geo_zone_form2();
    init_constants17();
    import_jsx_runtime508 = require("react/jsx-runtime");
    EditeServiceZoneSchema = import_zod107.z.object({
      countries: import_zod107.z.array(import_zod107.z.object({ iso_2: import_zod107.z.string().min(2), display_name: import_zod107.z.string() })).min(1)
    });
  }
});

// src/routes/locations/location-service-zone-manage-areas/components/edit-region-areas-form/index.ts
var init_edit_region_areas_form = __esm({
  "src/routes/locations/location-service-zone-manage-areas/components/edit-region-areas-form/index.ts"() {
    "use strict";
    init_edit_service_zone_areas_form();
  }
});

// src/routes/locations/location-service-zone-manage-areas/location-service-zone-manage-areas.tsx
var import_react_router_dom173, import_jsx_runtime509, LocationServiceZoneManageAreas;
var init_location_service_zone_manage_areas = __esm({
  "src/routes/locations/location-service-zone-manage-areas/location-service-zone-manage-areas.tsx"() {
    "use strict";
    import_react_router_dom173 = require("react-router-dom");
    init_modals();
    init_stock_locations();
    init_edit_region_areas_form();
    import_jsx_runtime509 = require("react/jsx-runtime");
    LocationServiceZoneManageAreas = () => {
      const { location_id, fset_id, zone_id } = (0, import_react_router_dom173.useParams)();
      const { stock_location, isPending, isFetching, isError, error } = useStockLocation(location_id, {
        fields: "*fulfillment_sets.service_zones.geo_zones,fulfillment_sets.service_zones.name"
      });
      const zone = stock_location?.fulfillment_sets?.find((f) => f.id === fset_id)?.service_zones.find((z56) => z56.id === zone_id);
      if (!isPending && !isFetching && !zone) {
        throw (0, import_react_router_dom173.json)(
          { message: `Service zone with ID ${zone_id} was not found` },
          404
        );
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime509.jsx)(RouteFocusModal, { prev: `/settings/locations/${location_id}`, children: zone && /* @__PURE__ */ (0, import_jsx_runtime509.jsx)(
        EditServiceZoneAreasForm,
        {
          zone,
          fulfillmentSetId: fset_id,
          locationId: location_id
        }
      ) });
    };
  }
});

// src/routes/locations/location-service-zone-manage-areas/index.ts
var location_service_zone_manage_areas_exports = {};
__export(location_service_zone_manage_areas_exports, {
  Component: () => LocationServiceZoneManageAreas
});
var init_location_service_zone_manage_areas2 = __esm({
  "src/routes/locations/location-service-zone-manage-areas/index.ts"() {
    "use strict";
    init_location_service_zone_manage_areas();
  }
});

// src/routes/locations/location-service-zone-shipping-option-create/components/create-shipping-options-form/create-shipping-option-details-form.tsx
var import_ui326, import_react_i18next363, import_jsx_runtime510, CreateShippingOptionDetailsForm;
var init_create_shipping_option_details_form = __esm({
  "src/routes/locations/location-service-zone-shipping-option-create/components/create-shipping-options-form/create-shipping-option-details-form.tsx"() {
    "use strict";
    import_ui326 = require("@medusajs/ui");
    import_react_i18next363 = require("react-i18next");
    init_divider2();
    init_form2();
    init_switch_box2();
    init_combobox2();
    init_use_combobox_data();
    init_client2();
    init_format_provider();
    init_constants17();
    import_jsx_runtime510 = require("react/jsx-runtime");
    CreateShippingOptionDetailsForm = ({
      form,
      isReturn = false,
      zone,
      locationId
    }) => {
      const { t: t4 } = (0, import_react_i18next363.useTranslation)();
      const shippingProfiles = useComboboxData({
        queryFn: (params2) => sdk.admin.shippingProfile.list(params2),
        queryKey: ["shipping_profiles"],
        getOptions: (data) => data.shipping_profiles.map((profile) => ({
          label: profile.name,
          value: profile.id
        }))
      });
      const fulfillmentProviders = useComboboxData({
        queryFn: (params2) => sdk.admin.fulfillmentProvider.list({
          ...params2,
          stock_location_id: locationId
        }),
        queryKey: ["fulfillment_providers"],
        getOptions: (data) => data.fulfillment_providers.map((provider) => ({
          label: formatProvider(provider.id),
          value: provider.id
        }))
      });
      return /* @__PURE__ */ (0, import_jsx_runtime510.jsx)("div", { className: "flex flex-1 flex-col items-center overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime510.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8 px-2 py-16", children: [
        /* @__PURE__ */ (0, import_jsx_runtime510.jsxs)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(import_ui326.Heading, { children: t4(
            `stockLocations.shippingOptions.create.${isReturn ? "returns" : "shipping"}.header`,
            {
              zone: zone.name
            }
          ) }),
          /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(import_ui326.Text, { size: "small", className: "text-ui-fg-subtle", children: t4(
            `stockLocations.shippingOptions.create.${isReturn ? "returns" : "shipping"}.hint`
          ) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(
          Form.Field,
          {
            control: form.control,
            name: "price_type",
            render: ({ field }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime510.jsxs)(Form.Item, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(Form.Label, { children: t4("stockLocations.shippingOptions.fields.priceType.label") }),
                /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime510.jsxs)(
                  import_ui326.RadioGroup,
                  {
                    className: "grid grid-cols-1 gap-4 md:grid-cols-2",
                    ...field,
                    onValueChange: field.onChange,
                    children: [
                      /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(
                        import_ui326.RadioGroup.ChoiceBox,
                        {
                          className: "flex-1",
                          value: "flat" /* FlatRate */,
                          label: t4(
                            "stockLocations.shippingOptions.fields.priceType.options.fixed.label"
                          ),
                          description: t4(
                            "stockLocations.shippingOptions.fields.priceType.options.fixed.hint"
                          )
                        }
                      ),
                      /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(
                        import_ui326.RadioGroup.ChoiceBox,
                        {
                          className: "flex-1",
                          value: "calculated" /* Calculated */,
                          label: t4(
                            "stockLocations.shippingOptions.fields.priceType.options.calculated.label"
                          ),
                          description: t4(
                            "stockLocations.shippingOptions.fields.priceType.options.calculated.hint"
                          )
                        }
                      )
                    ]
                  }
                ) }),
                /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(Form.ErrorMessage, {})
              ] });
            }
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime510.jsx)("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2", children: /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(
          Form.Field,
          {
            control: form.control,
            name: "name",
            render: ({ field }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime510.jsxs)(Form.Item, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(Form.Label, { children: t4("fields.name") }),
                /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(import_ui326.Input, { ...field }) }),
                /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(Form.ErrorMessage, {})
              ] });
            }
          }
        ) }),
        /* @__PURE__ */ (0, import_jsx_runtime510.jsxs)("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "shipping_profile_id",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime510.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(Form.Label, { children: t4("stockLocations.shippingOptions.fields.profile") }),
                  /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(
                    Combobox,
                    {
                      ...field,
                      options: shippingProfiles.options,
                      searchValue: shippingProfiles.searchValue,
                      onSearchValueChange: shippingProfiles.onSearchValueChange,
                      disabled: shippingProfiles.disabled
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "provider_id",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime510.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(
                    Form.Label,
                    {
                      tooltip: t4(
                        "stockLocations.fulfillmentProviders.shippingOptionsTooltip"
                      ),
                      children: t4("stockLocations.shippingOptions.fields.provider")
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(
                    Combobox,
                    {
                      ...field,
                      options: fulfillmentProviders.options,
                      searchValue: fulfillmentProviders.searchValue,
                      onSearchValueChange: fulfillmentProviders.onSearchValueChange,
                      disabled: fulfillmentProviders.disabled
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(Divider, {}),
        /* @__PURE__ */ (0, import_jsx_runtime510.jsx)(
          SwitchBox,
          {
            control: form.control,
            name: "enabled_in_store",
            label: t4("stockLocations.shippingOptions.fields.enableInStore.label"),
            description: t4(
              "stockLocations.shippingOptions.fields.enableInStore.hint"
            )
          }
        )
      ] }) });
    };
  }
});

// src/routes/locations/common/hooks/use-shipping-option-price-columns.tsx
var import_react228, import_react_i18next364, import_jsx_runtime511, columnHelper71, useShippingOptionPriceColumns;
var init_use_shipping_option_price_columns = __esm({
  "src/routes/locations/common/hooks/use-shipping-option-price-columns.tsx"() {
    "use strict";
    import_react228 = require("react");
    import_react_i18next364 = require("react-i18next");
    init_data_grid2();
    init_create_data_grid_price_columns();
    import_jsx_runtime511 = require("react/jsx-runtime");
    columnHelper71 = createDataGridHelper();
    useShippingOptionPriceColumns = ({
      name,
      currencies: currencies2 = [],
      regions = [],
      pricePreferences = []
    }) => {
      const { t: t4 } = (0, import_react_i18next364.useTranslation)();
      return (0, import_react228.useMemo)(() => {
        return [
          columnHelper71.column({
            id: "name",
            header: t4("fields.name"),
            cell: (context) => {
              return /* @__PURE__ */ (0, import_jsx_runtime511.jsx)(DataGrid.ReadonlyCell, { context, children: name });
            }
          }),
          ...createDataGridPriceColumns({
            currencies: currencies2,
            regions,
            pricePreferences,
            getFieldName: (context, value) => {
              if (context.column.id?.startsWith("currency_prices")) {
                return `currency_prices.${value}`;
              }
              return `region_prices.${value}`;
            },
            t: t4
          })
        ];
      }, [t4, currencies2, regions, pricePreferences, name]);
    };
  }
});

// src/routes/locations/location-service-zone-shipping-option-create/components/create-shipping-options-form/create-shipping-options-prices-form.tsx
var import_react229, import_jsx_runtime512, CreateShippingOptionsPricesForm;
var init_create_shipping_options_prices_form = __esm({
  "src/routes/locations/location-service-zone-shipping-option-create/components/create-shipping-options-form/create-shipping-options-prices-form.tsx"() {
    "use strict";
    import_react229 = require("react");
    init_data_grid2();
    init_modals();
    init_price_preferences();
    init_regions();
    init_store();
    init_use_shipping_option_price_columns();
    import_jsx_runtime512 = require("react/jsx-runtime");
    CreateShippingOptionsPricesForm = ({
      form
    }) => {
      const {
        store,
        isLoading: isStoreLoading,
        isError: isStoreError,
        error: storeError
      } = useStore();
      const currencies2 = (0, import_react229.useMemo)(
        () => store?.supported_currencies?.map((c) => c.currency_code) || [],
        [store]
      );
      const {
        regions,
        isLoading: isRegionsLoading,
        isError: isRegionsError,
        error: regionsError
      } = useRegions({
        fields: "id,name,currency_code",
        limit: 999
      });
      const { price_preferences: pricePreferences } = usePricePreferences({});
      const { setCloseOnEscape } = useRouteModal();
      const columns = useShippingOptionPriceColumns({
        currencies: currencies2,
        regions,
        pricePreferences
      });
      const isLoading = isStoreLoading || !store || isRegionsLoading || !regions;
      const data = (0, import_react229.useMemo)(
        () => [[...currencies2 || [], ...regions || []]],
        [currencies2, regions]
      );
      if (isStoreError) {
        throw storeError;
      }
      if (isRegionsError) {
        throw regionsError;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime512.jsx)("div", { className: "flex size-full flex-col divide-y overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime512.jsx)(
        DataGrid,
        {
          isLoading,
          data,
          columns,
          state: form,
          onEditingChange: (editing) => setCloseOnEscape(!editing)
        }
      ) });
    };
  }
});

// src/routes/locations/location-service-zone-shipping-option-create/components/create-shipping-options-form/schema.ts
var import_zod108, CreateShippingOptionDetailsSchema, CreateShippingOptionSchema;
var init_schema9 = __esm({
  "src/routes/locations/location-service-zone-shipping-option-create/components/create-shipping-options-form/schema.ts"() {
    "use strict";
    import_zod108 = require("zod");
    init_constants17();
    CreateShippingOptionDetailsSchema = import_zod108.z.object({
      name: import_zod108.z.string().min(1),
      price_type: import_zod108.z.nativeEnum(ShippingOptionPriceType),
      enabled_in_store: import_zod108.z.boolean(),
      shipping_profile_id: import_zod108.z.string().min(1),
      provider_id: import_zod108.z.string().min(1)
    });
    CreateShippingOptionSchema = import_zod108.z.object({
      region_prices: import_zod108.z.record(import_zod108.z.string(), import_zod108.z.string().optional()),
      currency_prices: import_zod108.z.record(import_zod108.z.string(), import_zod108.z.string().optional())
    }).merge(CreateShippingOptionDetailsSchema);
  }
});

// src/routes/locations/location-service-zone-shipping-option-create/components/create-shipping-options-form/create-shipping-options-form.tsx
function CreateShippingOptionsForm({
  zone,
  isReturn,
  locationId
}) {
  const [activeTab, setActiveTab] = (0, import_react230.useState)("details" /* DETAILS */);
  const [validDetails, setValidDetails] = (0, import_react230.useState)(false);
  const { t: t4 } = (0, import_react_i18next365.useTranslation)();
  const { handleSuccess } = useRouteModal();
  const form = (0, import_react_hook_form103.useForm)({
    defaultValues: {
      name: "",
      price_type: "flat" /* FlatRate */,
      enabled_in_store: true,
      shipping_profile_id: "",
      provider_id: "",
      region_prices: {},
      currency_prices: {}
    },
    resolver: (0, import_zod109.zodResolver)(CreateShippingOptionSchema)
  });
  const isCalculatedPriceType = form.watch("price_type") === "calculated" /* Calculated */;
  const { mutateAsync, isPending: isLoading } = useCreateShippingOptions();
  const handleSubmit = form.handleSubmit(async (data) => {
    const currencyPrices = Object.entries(data.currency_prices).map(([code, value]) => {
      if (value === "" || value === void 0) {
        return void 0;
      }
      return {
        currency_code: code,
        amount: castNumber(value)
      };
    }).filter((o) => !!o);
    const regionPrices = Object.entries(data.region_prices).map(([region_id, value]) => {
      if (value === "" || value === void 0) {
        return void 0;
      }
      return {
        region_id,
        amount: castNumber(value)
      };
    }).filter((o) => !!o);
    await mutateAsync(
      {
        name: data.name,
        price_type: data.price_type,
        service_zone_id: zone.id,
        shipping_profile_id: data.shipping_profile_id,
        provider_id: data.provider_id,
        prices: [...currencyPrices, ...regionPrices],
        rules: [
          {
            // eslint-disable-next-line
            value: isReturn ? '"true"' : '"false"',
            // we want JSONB saved as string
            attribute: "is_return",
            operator: "eq"
          },
          {
            // eslint-disable-next-line
            value: data.enabled_in_store ? '"true"' : '"false"',
            // we want JSONB saved as string
            attribute: "enabled_in_store",
            operator: "eq"
          }
        ],
        type: {
          // TODO: FETCH TYPES
          label: "Type label",
          description: "Type description",
          code: "type-code"
        }
      },
      {
        onSuccess: ({ shipping_option }) => {
          import_ui327.toast.success(
            t4(
              `stockLocations.shippingOptions.create.${isReturn ? "returns" : "shipping"}.successToast`,
              {
                name: shipping_option.name
              }
            )
          );
          handleSuccess(`/settings/locations/${locationId}`);
        },
        onError: (e) => {
          import_ui327.toast.error(e.message);
        }
      }
    );
  });
  const onTabChange = (tab) => {
    if (tab === "pricing" /* PRICING */) {
      form.clearErrors();
      const result = CreateShippingOptionDetailsSchema.safeParse({
        ...form.getValues()
      });
      if (!result.success) {
        const [firstError, ...rest] = result.error.errors;
        for (const error of rest) {
          const _path = error.path.join(".");
          form.setError(_path, {
            message: error.message,
            type: error.code
          });
        }
        form.setError(
          firstError.path.join("."),
          {
            message: firstError.message,
            type: firstError.code
          },
          {
            shouldFocus: true
          }
        );
        setValidDetails(false);
        return;
      }
      setValidDetails(true);
    }
    setActiveTab(tab);
  };
  const pricesStatus = form.getFieldState("currency_prices")?.isDirty || form.getFieldState("region_prices")?.isDirty || activeTab === "pricing" /* PRICING */ ? "in-progress" : "not-started";
  const detailsStatus = validDetails ? "completed" : "in-progress";
  return /* @__PURE__ */ (0, import_jsx_runtime513.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime513.jsx)(
    import_ui327.ProgressTabs,
    {
      value: activeTab,
      className: "flex h-full flex-col overflow-hidden",
      onValueChange: (tab) => onTabChange(tab),
      children: /* @__PURE__ */ (0, import_jsx_runtime513.jsxs)(KeyboundForm, { className: "flex h-full flex-col", onSubmit: handleSubmit, children: [
        /* @__PURE__ */ (0, import_jsx_runtime513.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime513.jsxs)(import_ui327.ProgressTabs.List, { className: "border-ui-border-base -my-2 ml-2 min-w-0 flex-1 border-l", children: [
          /* @__PURE__ */ (0, import_jsx_runtime513.jsx)(
            import_ui327.ProgressTabs.Trigger,
            {
              value: "details" /* DETAILS */,
              status: detailsStatus,
              className: "w-full max-w-[200px]",
              children: /* @__PURE__ */ (0, import_jsx_runtime513.jsx)("span", { className: "w-full cursor-auto overflow-hidden text-ellipsis whitespace-nowrap", children: t4("stockLocations.shippingOptions.create.tabs.details") })
            }
          ),
          !isCalculatedPriceType && /* @__PURE__ */ (0, import_jsx_runtime513.jsx)(
            import_ui327.ProgressTabs.Trigger,
            {
              value: "pricing" /* PRICING */,
              status: pricesStatus,
              className: "w-full max-w-[200px]",
              children: /* @__PURE__ */ (0, import_jsx_runtime513.jsx)("span", { className: "w-full overflow-hidden text-ellipsis whitespace-nowrap", children: t4("stockLocations.shippingOptions.create.tabs.prices") })
            }
          )
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime513.jsxs)(RouteFocusModal.Body, { className: "size-full overflow-hidden", children: [
          /* @__PURE__ */ (0, import_jsx_runtime513.jsx)(
            import_ui327.ProgressTabs.Content,
            {
              value: "details" /* DETAILS */,
              className: "size-full overflow-y-auto",
              children: /* @__PURE__ */ (0, import_jsx_runtime513.jsx)(
                CreateShippingOptionDetailsForm,
                {
                  form,
                  zone,
                  isReturn,
                  locationId
                }
              )
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime513.jsx)(import_ui327.ProgressTabs.Content, { value: "pricing" /* PRICING */, className: "size-full", children: /* @__PURE__ */ (0, import_jsx_runtime513.jsx)(CreateShippingOptionsPricesForm, { form }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime513.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime513.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime513.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime513.jsx)(import_ui327.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
          activeTab === "pricing" /* PRICING */ || isCalculatedPriceType ? /* @__PURE__ */ (0, import_jsx_runtime513.jsx)(
            import_ui327.Button,
            {
              size: "small",
              className: "whitespace-nowrap",
              isLoading,
              type: "submit",
              children: t4("actions.save")
            },
            "submit-btn"
          ) : /* @__PURE__ */ (0, import_jsx_runtime513.jsx)(
            import_ui327.Button,
            {
              size: "small",
              className: "whitespace-nowrap",
              isLoading,
              onClick: () => onTabChange("pricing" /* PRICING */),
              type: "button",
              children: t4("actions.continue")
            },
            "continue-btn"
          )
        ] }) })
      ] })
    }
  ) });
}
var import_zod109, import_ui327, import_react_hook_form103, import_react_i18next365, import_react230, import_jsx_runtime513;
var init_create_shipping_options_form = __esm({
  "src/routes/locations/location-service-zone-shipping-option-create/components/create-shipping-options-form/create-shipping-options-form.tsx"() {
    "use strict";
    import_zod109 = require("@hookform/resolvers/zod");
    import_ui327 = require("@medusajs/ui");
    import_react_hook_form103 = require("react-hook-form");
    import_react_i18next365 = require("react-i18next");
    import_react230 = require("react");
    init_modals();
    init_keybound_form2();
    init_shipping_options();
    init_cast_number();
    init_constants17();
    init_create_shipping_option_details_form();
    init_create_shipping_options_prices_form();
    init_schema9();
    import_jsx_runtime513 = require("react/jsx-runtime");
  }
});

// src/routes/locations/location-service-zone-shipping-option-create/components/create-shipping-options-form/index.ts
var init_create_shipping_options_form2 = __esm({
  "src/routes/locations/location-service-zone-shipping-option-create/components/create-shipping-options-form/index.ts"() {
    "use strict";
    init_create_shipping_options_form();
  }
});

// src/routes/locations/location-service-zone-shipping-option-create/constants.ts
var LOC_CREATE_SHIPPING_OPTION_FIELDS;
var init_constants18 = __esm({
  "src/routes/locations/location-service-zone-shipping-option-create/constants.ts"() {
    "use strict";
    LOC_CREATE_SHIPPING_OPTION_FIELDS = "*fulfillment_sets,*fulfillment_sets.service_zones,*fulfillment_sets.service_zones.shipping_options";
  }
});

// src/routes/locations/location-service-zone-shipping-option-create/location-service-zone-shipping-option-create.tsx
function LocationServiceZoneShippingOptionCreate() {
  const { location_id, fset_id, zone_id } = (0, import_react_router_dom174.useParams)();
  const [searchParams] = (0, import_react_router_dom174.useSearchParams)();
  const isReturn = searchParams.has("is_return");
  const { stock_location, isPending, isFetching, isError, error } = useStockLocation(location_id, {
    fields: LOC_CREATE_SHIPPING_OPTION_FIELDS
  });
  const zone = stock_location?.fulfillment_sets?.find((f) => f.id === fset_id)?.service_zones?.find((z56) => z56.id === zone_id);
  if (!isPending && !isFetching && !zone) {
    throw (0, import_react_router_dom174.json)(
      { message: `Service zone with ID ${zone_id} was not found` },
      404
    );
  }
  if (isError) {
    throw error;
  }
  return /* @__PURE__ */ (0, import_jsx_runtime514.jsx)(RouteFocusModal, { prev: `/settings/locations/${location_id}`, children: zone && /* @__PURE__ */ (0, import_jsx_runtime514.jsx)(
    CreateShippingOptionsForm,
    {
      zone,
      isReturn,
      locationId: location_id
    }
  ) });
}
var import_react_router_dom174, import_jsx_runtime514;
var init_location_service_zone_shipping_option_create = __esm({
  "src/routes/locations/location-service-zone-shipping-option-create/location-service-zone-shipping-option-create.tsx"() {
    "use strict";
    import_react_router_dom174 = require("react-router-dom");
    init_modals();
    init_stock_locations();
    init_create_shipping_options_form2();
    init_constants18();
    import_jsx_runtime514 = require("react/jsx-runtime");
  }
});

// src/routes/locations/location-service-zone-shipping-option-create/index.ts
var location_service_zone_shipping_option_create_exports = {};
__export(location_service_zone_shipping_option_create_exports, {
  Component: () => LocationServiceZoneShippingOptionCreate
});
var init_location_service_zone_shipping_option_create2 = __esm({
  "src/routes/locations/location-service-zone-shipping-option-create/index.ts"() {
    "use strict";
    init_location_service_zone_shipping_option_create();
  }
});

// src/lib/common.ts
function pick(obj, keys) {
  const ret = {};
  keys.forEach((k) => {
    if (k in obj) {
      ret[k] = obj[k];
    }
  });
  return ret;
}
var init_common = __esm({
  "src/lib/common.ts"() {
    "use strict";
  }
});

// src/routes/locations/location-service-zone-shipping-option-edit/components/edit-region-form/edit-shipping-option-form.tsx
var import_ui328, import_react_hook_form104, import_react_i18next366, zod41, import_jsx_runtime515, EditShippingOptionSchema, EditShippingOptionForm;
var init_edit_shipping_option_form = __esm({
  "src/routes/locations/location-service-zone-shipping-option-edit/components/edit-region-form/edit-shipping-option-form.tsx"() {
    "use strict";
    import_ui328 = require("@medusajs/ui");
    import_react_hook_form104 = require("react-hook-form");
    import_react_i18next366 = require("react-i18next");
    zod41 = __toESM(require("zod"));
    init_divider2();
    init_form2();
    init_switch_box2();
    init_combobox2();
    init_modals();
    init_keybound_form2();
    init_shipping_options();
    init_use_combobox_data();
    init_client2();
    init_common();
    init_format_provider();
    init_shipping_options2();
    init_constants17();
    import_jsx_runtime515 = require("react/jsx-runtime");
    EditShippingOptionSchema = zod41.object({
      name: zod41.string().min(1),
      price_type: zod41.nativeEnum(ShippingOptionPriceType),
      enabled_in_store: zod41.boolean().optional(),
      shipping_profile_id: zod41.string(),
      provider_id: zod41.string()
    });
    EditShippingOptionForm = ({
      locationId,
      shippingOption
    }) => {
      const { t: t4 } = (0, import_react_i18next366.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const shippingProfiles = useComboboxData({
        queryFn: (params2) => sdk.admin.shippingProfile.list(params2),
        queryKey: ["shipping_profiles"],
        getOptions: (data) => data.shipping_profiles.map((profile) => ({
          label: profile.name,
          value: profile.id
        })),
        defaultValue: shippingOption.shipping_profile_id
      });
      const fulfillmentProviders = useComboboxData({
        queryFn: (params2) => sdk.admin.fulfillmentProvider.list({
          ...params2,
          stock_location_id: locationId
        }),
        queryKey: ["fulfillment_providers"],
        getOptions: (data) => data.fulfillment_providers.map((provider) => ({
          label: formatProvider(provider.id),
          value: provider.id
        })),
        defaultValue: shippingOption.provider_id
      });
      const form = (0, import_react_hook_form104.useForm)({
        defaultValues: {
          name: shippingOption.name,
          price_type: shippingOption.price_type,
          enabled_in_store: isOptionEnabledInStore(shippingOption),
          shipping_profile_id: shippingOption.shipping_profile_id,
          provider_id: shippingOption.provider_id
        }
      });
      const { mutateAsync, isPending: isLoading } = useUpdateShippingOptions(
        shippingOption.id
      );
      const handleSubmit = form.handleSubmit(async (values) => {
        const rules = shippingOption.rules.map((r) => ({
          ...pick(r, ["id", "attribute", "operator", "value"])
        }));
        const storeRule = rules.find((r) => r.attribute === "enabled_in_store");
        if (!storeRule) {
          rules.push({
            value: values.enabled_in_store ? "true" : "false",
            attribute: "enabled_in_store",
            operator: "eq"
          });
        } else {
          storeRule.value = values.enabled_in_store ? "true" : "false";
        }
        await mutateAsync(
          {
            name: values.name,
            price_type: values.price_type,
            shipping_profile_id: values.shipping_profile_id,
            provider_id: values.provider_id,
            rules
          },
          {
            onSuccess: ({ shipping_option }) => {
              import_ui328.toast.success(
                t4("stockLocations.shippingOptions.edit.successToast", {
                  name: shipping_option.name
                })
              );
              handleSuccess(`/settings/locations/${locationId}`);
            },
            onError: (e) => {
              import_ui328.toast.error(e.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime515.jsxs)(KeyboundForm, { onSubmit: handleSubmit, className: "flex flex-1 flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(RouteDrawer.Body, { children: /* @__PURE__ */ (0, import_jsx_runtime515.jsx)("div", { className: "flex flex-col gap-y-8", children: /* @__PURE__ */ (0, import_jsx_runtime515.jsxs)("div", { className: "flex flex-col gap-y-8", children: [
          /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(
            Form.Field,
            {
              control: form.control,
              name: "price_type",
              render: ({ field }) => {
                return /* @__PURE__ */ (0, import_jsx_runtime515.jsxs)(Form.Item, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(Form.Label, { children: t4(
                    "stockLocations.shippingOptions.fields.priceType.label"
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime515.jsxs)(import_ui328.RadioGroup, { ...field, onValueChange: field.onChange, children: [
                    /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(
                      import_ui328.RadioGroup.ChoiceBox,
                      {
                        className: "flex-1",
                        value: "flat" /* FlatRate */,
                        label: t4(
                          "stockLocations.shippingOptions.fields.priceType.options.fixed.label"
                        ),
                        description: t4(
                          "stockLocations.shippingOptions.fields.priceType.options.fixed.hint"
                        )
                      }
                    ),
                    /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(
                      import_ui328.RadioGroup.ChoiceBox,
                      {
                        className: "flex-1",
                        value: "calculated" /* Calculated */,
                        label: t4(
                          "stockLocations.shippingOptions.fields.priceType.options.calculated.label"
                        ),
                        description: t4(
                          "stockLocations.shippingOptions.fields.priceType.options.calculated.hint"
                        )
                      }
                    )
                  ] }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(Form.ErrorMessage, {})
                ] });
              }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime515.jsxs)("div", { className: "grid gap-y-4", children: [
            /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "name",
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime515.jsxs)(Form.Item, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(Form.Label, { children: t4("fields.name") }),
                    /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(import_ui328.Input, { ...field }) }),
                    /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "shipping_profile_id",
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime515.jsxs)(Form.Item, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(Form.Label, { children: t4("stockLocations.shippingOptions.fields.profile") }),
                    /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(
                      Combobox,
                      {
                        ...field,
                        options: shippingProfiles.options,
                        searchValue: shippingProfiles.searchValue,
                        onSearchValueChange: shippingProfiles.onSearchValueChange,
                        disabled: shippingProfiles.disabled
                      }
                    ) }),
                    /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "provider_id",
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime515.jsxs)(Form.Item, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(
                      Form.Label,
                      {
                        tooltip: t4(
                          "stockLocations.fulfillmentProviders.shippingOptionsTooltip"
                        ),
                        children: t4("stockLocations.shippingOptions.fields.provider")
                      }
                    ),
                    /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(
                      Combobox,
                      {
                        ...field,
                        options: fulfillmentProviders.options,
                        searchValue: fulfillmentProviders.searchValue,
                        onSearchValueChange: fulfillmentProviders.onSearchValueChange,
                        disabled: fulfillmentProviders.disabled
                      }
                    ) }),
                    /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              }
            )
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(Divider, {}),
          /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(
            SwitchBox,
            {
              control: form.control,
              name: "enabled_in_store",
              label: t4(
                "stockLocations.shippingOptions.fields.enableInStore.label"
              ),
              description: t4(
                "stockLocations.shippingOptions.fields.enableInStore.hint"
              )
            }
          )
        ] }) }) }),
        /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime515.jsxs)("div", { className: "flex items-center gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(import_ui328.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime515.jsx)(import_ui328.Button, { size: "small", type: "submit", isLoading, children: t4("actions.save") })
        ] }) })
      ] }) });
    };
  }
});

// src/routes/locations/location-service-zone-shipping-option-edit/components/edit-region-form/index.ts
var init_edit_region_form4 = __esm({
  "src/routes/locations/location-service-zone-shipping-option-edit/components/edit-region-form/index.ts"() {
    "use strict";
    init_edit_shipping_option_form();
  }
});

// src/routes/locations/location-service-zone-shipping-option-edit/location-service-zone-shipping-option-edit.tsx
var import_ui329, import_react_i18next367, import_react_router_dom175, import_jsx_runtime516, LocationServiceZoneShippingOptionEdit;
var init_location_service_zone_shipping_option_edit = __esm({
  "src/routes/locations/location-service-zone-shipping-option-edit/location-service-zone-shipping-option-edit.tsx"() {
    "use strict";
    import_ui329 = require("@medusajs/ui");
    import_react_i18next367 = require("react-i18next");
    import_react_router_dom175 = require("react-router-dom");
    init_modals();
    init_shipping_options();
    init_edit_region_form4();
    import_jsx_runtime516 = require("react/jsx-runtime");
    LocationServiceZoneShippingOptionEdit = () => {
      const { t: t4 } = (0, import_react_i18next367.useTranslation)();
      const { location_id, so_id } = (0, import_react_router_dom175.useParams)();
      const { shipping_options, isPending, isFetching, isError, error } = useShippingOptions({
        id: so_id
      });
      const shippingOption = shipping_options?.find((so) => so.id === so_id);
      if (!isPending && !isFetching && !shippingOption) {
        throw (0, import_react_router_dom175.json)(
          { message: `Shipping option with ID ${so_id} was not found` },
          404
        );
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime516.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime516.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime516.jsx)(import_ui329.Heading, { children: t4("stockLocations.shippingOptions.edit.header") }) }),
        shippingOption && /* @__PURE__ */ (0, import_jsx_runtime516.jsx)(
          EditShippingOptionForm,
          {
            shippingOption,
            locationId: location_id
          }
        )
      ] });
    };
  }
});

// src/routes/locations/location-service-zone-shipping-option-edit/index.ts
var location_service_zone_shipping_option_edit_exports = {};
__export(location_service_zone_shipping_option_edit_exports, {
  Component: () => LocationServiceZoneShippingOptionEdit
});
var init_location_service_zone_shipping_option_edit2 = __esm({
  "src/routes/locations/location-service-zone-shipping-option-edit/index.ts"() {
    "use strict";
    init_location_service_zone_shipping_option_edit();
  }
});

// src/routes/locations/location-service-zone-shipping-option-pricing/components/create-shipping-options-form/edit-shipping-options-pricing-form.tsx
function EditShippingOptionsPricingForm({
  shippingOption
}) {
  const { t: t4 } = (0, import_react_i18next368.useTranslation)();
  const { handleSuccess } = useRouteModal();
  const form = (0, import_react_hook_form105.useForm)({
    defaultValues: {
      region_prices: getInitialRegionPrices(shippingOption.prices),
      currency_prices: getInitialCurrencyPrices(shippingOption.prices)
    },
    resolver: (0, import_zod110.zodResolver)(EditShippingOptionPricingSchema)
  });
  const { mutateAsync, isPending } = useUpdateShippingOptions(shippingOption.id);
  const {
    store,
    isLoading: isStoreLoading,
    isError: isStoreError,
    error: storeError
  } = useStore();
  const currencies2 = (0, import_react231.useMemo)(
    () => store?.supported_currencies?.map((c) => c.currency_code) || [],
    [store]
  );
  const {
    regions,
    isLoading: isRegionsLoading,
    isError: isRegionsError,
    error: regionsError
  } = useRegions({
    fields: "id,name,currency_code",
    limit: 999
  });
  const { price_preferences: pricePreferences } = usePricePreferences({});
  const { setCloseOnEscape } = useRouteModal();
  const columns = useShippingOptionPriceColumns({
    name: shippingOption.name,
    currencies: currencies2,
    regions,
    pricePreferences
  });
  const data = (0, import_react231.useMemo)(
    () => [[...currencies2 || [], ...regions || []]],
    [currencies2, regions]
  );
  const handleSubmit = form.handleSubmit(async (data2) => {
    const currencyPrices = Object.entries(data2.currency_prices).map(([code, value]) => {
      if (value === "" || value === void 0) {
        return void 0;
      }
      const currencyExists = currencies2.some(
        (currencyCode) => currencyCode.toLowerCase() == code.toLowerCase()
      );
      if (!currencyExists) {
        return void 0;
      }
      const amount = castNumber(value);
      const priceRecord = {
        currency_code: code,
        amount
      };
      const price = shippingOption.prices.find(
        (p) => p.currency_code === code && !p.price_rules.length
      );
      if (price) {
        priceRecord["id"] = price.id;
      }
      return priceRecord;
    }).filter((p) => !!p);
    const regionPrices = Object.entries(data2.region_prices).map(([region_id, value]) => {
      if (value === "" || value === void 0) {
        return void 0;
      }
      const regionExists = regions?.some((region) => region.id === region_id);
      if (!regionExists) {
        return void 0;
      }
      const amount = castNumber(value);
      const priceRecord = {
        region_id,
        amount
      };
      return priceRecord;
    }).filter((p) => !!p);
    await mutateAsync(
      {
        prices: [...currencyPrices, ...regionPrices]
      },
      {
        onSuccess: () => {
          import_ui330.toast.success(t4("general.success"));
          handleSuccess();
        },
        onError: (e) => {
          import_ui330.toast.error(e.message);
        }
      }
    );
  });
  const isLoading = isStoreLoading || isRegionsLoading || !currencies2 || !regions;
  if (isStoreError) {
    throw storeError;
  }
  if (isRegionsError) {
    throw regionsError;
  }
  return /* @__PURE__ */ (0, import_jsx_runtime517.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime517.jsxs)(
    KeyboundForm,
    {
      className: "flex h-full flex-col overflow-hidden",
      onSubmit: handleSubmit,
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime517.jsx)(RouteFocusModal.Header, {}),
        /* @__PURE__ */ (0, import_jsx_runtime517.jsx)(RouteFocusModal.Body, { children: /* @__PURE__ */ (0, import_jsx_runtime517.jsx)("div", { className: "flex size-full flex-col divide-y overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime517.jsx)(
          DataGrid,
          {
            isLoading,
            data,
            columns,
            state: form,
            onEditingChange: (editing) => setCloseOnEscape(!editing)
          }
        ) }) }),
        /* @__PURE__ */ (0, import_jsx_runtime517.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime517.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime517.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime517.jsx)(import_ui330.Button, { variant: "secondary", size: "small", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime517.jsx)(
            import_ui330.Button,
            {
              size: "small",
              className: "whitespace-nowrap",
              isLoading: isPending,
              onClick: handleSubmit,
              type: "button",
              children: t4("actions.save")
            }
          )
        ] }) })
      ]
    }
  ) });
}
var import_zod110, import_react231, import_react_hook_form105, zod42, import_ui330, import_react_i18next368, import_jsx_runtime517, getInitialCurrencyPrices, getInitialRegionPrices, EditShippingOptionPricingSchema;
var init_edit_shipping_options_pricing_form = __esm({
  "src/routes/locations/location-service-zone-shipping-option-pricing/components/create-shipping-options-form/edit-shipping-options-pricing-form.tsx"() {
    "use strict";
    import_zod110 = require("@hookform/resolvers/zod");
    import_react231 = require("react");
    import_react_hook_form105 = require("react-hook-form");
    zod42 = __toESM(require("zod"));
    import_ui330 = require("@medusajs/ui");
    import_react_i18next368 = require("react-i18next");
    init_data_grid2();
    init_modals();
    init_keybound_form2();
    init_price_preferences();
    init_regions();
    init_shipping_options();
    init_store();
    init_cast_number();
    init_use_shipping_option_price_columns();
    import_jsx_runtime517 = require("react/jsx-runtime");
    getInitialCurrencyPrices = (prices) => {
      const ret = {};
      prices.forEach((p) => {
        if (p.price_rules.length) {
          return;
        }
        ret[p.currency_code] = p.amount;
      });
      return ret;
    };
    getInitialRegionPrices = (prices) => {
      const ret = {};
      prices.forEach((p) => {
        if (p.price_rules.length) {
          const regionId = p.price_rules[0].value;
          ret[regionId] = p.amount;
        }
      });
      return ret;
    };
    EditShippingOptionPricingSchema = zod42.object({
      region_prices: zod42.record(
        zod42.string(),
        zod42.string().or(zod42.number()).optional()
      ),
      currency_prices: zod42.record(
        zod42.string(),
        zod42.string().or(zod42.number()).optional()
      )
    });
  }
});

// src/routes/locations/location-service-zone-shipping-option-pricing/components/create-shipping-options-form/index.ts
var init_create_shipping_options_form3 = __esm({
  "src/routes/locations/location-service-zone-shipping-option-pricing/components/create-shipping-options-form/index.ts"() {
    "use strict";
    init_edit_shipping_options_pricing_form();
  }
});

// src/routes/locations/location-service-zone-shipping-option-pricing/location-service-zone-shipping-option-pricing.tsx
function LocationServiceZoneShippingOptionPricing() {
  const { so_id, location_id } = (0, import_react_router_dom176.useParams)();
  if (!so_id) {
    throw (0, import_react_router_dom176.json)({
      message: "Shipping Option ID paramater is missing",
      status: 404
    });
  }
  const { shipping_option: shippingOption, isError, error } = useShippingOption(so_id, {
    fields: "*prices,*prices.price_rules"
  });
  if (isError) {
    throw error;
  }
  return /* @__PURE__ */ (0, import_jsx_runtime518.jsx)(RouteFocusModal, { prev: `/settings/locations/${location_id}`, children: shippingOption && /* @__PURE__ */ (0, import_jsx_runtime518.jsx)(EditShippingOptionsPricingForm, { shippingOption }) });
}
var import_react_router_dom176, import_jsx_runtime518;
var init_location_service_zone_shipping_option_pricing = __esm({
  "src/routes/locations/location-service-zone-shipping-option-pricing/location-service-zone-shipping-option-pricing.tsx"() {
    "use strict";
    import_react_router_dom176 = require("react-router-dom");
    init_modals();
    init_shipping_options();
    init_create_shipping_options_form3();
    import_jsx_runtime518 = require("react/jsx-runtime");
  }
});

// src/routes/locations/location-service-zone-shipping-option-pricing/index.ts
var location_service_zone_shipping_option_pricing_exports = {};
__export(location_service_zone_shipping_option_pricing_exports, {
  Component: () => LocationServiceZoneShippingOptionPricing
});
var init_location_service_zone_shipping_option_pricing2 = __esm({
  "src/routes/locations/location-service-zone-shipping-option-pricing/index.ts"() {
    "use strict";
    init_location_service_zone_shipping_option_pricing();
  }
});

// src/routes/product-tags/product-tag-list/loader.ts
var productTagListQuery, productTagListLoader;
var init_loader24 = __esm({
  "src/routes/product-tags/product-tag-list/loader.ts"() {
    "use strict";
    init_api();
    init_client2();
    init_query_client();
    productTagListQuery = (query) => ({
      queryKey: productTagsQueryKeys.list(query),
      queryFn: async () => sdk.admin.productTag.list(query)
    });
    productTagListLoader = async ({ request }) => {
      const searchParams = new URL(request.url).searchParams;
      const queryObject = {};
      searchParams.forEach((value, key) => {
        try {
          queryObject[key] = JSON.parse(value);
        } catch (_e) {
          queryObject[key] = value;
        }
      });
      const query = productTagListQuery(
        queryObject
      );
      return queryClient.getQueryData(query.queryKey) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/hooks/table/columns/use-product-tag-table-columns.tsx
var import_react_table70, import_react232, import_react_i18next369, import_jsx_runtime519, columnHelper72, useProductTagTableColumns;
var init_use_product_tag_table_columns = __esm({
  "src/hooks/table/columns/use-product-tag-table-columns.tsx"() {
    "use strict";
    import_react_table70 = require("@tanstack/react-table");
    import_react232 = require("react");
    import_react_i18next369 = require("react-i18next");
    init_date_cell2();
    init_text_cell2();
    import_jsx_runtime519 = require("react/jsx-runtime");
    columnHelper72 = (0, import_react_table70.createColumnHelper)();
    useProductTagTableColumns = () => {
      const { t: t4 } = (0, import_react_i18next369.useTranslation)();
      return (0, import_react232.useMemo)(
        () => [
          columnHelper72.accessor("value", {
            header: () => t4("fields.value"),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime519.jsx)(TextCell, { text: getValue2() })
          }),
          columnHelper72.accessor("created_at", {
            header: () => t4("fields.createdAt"),
            cell: ({ getValue: getValue2 }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime519.jsx)(DateCell, { date: getValue2() });
            }
          }),
          columnHelper72.accessor("updated_at", {
            header: () => t4("fields.updatedAt"),
            cell: ({ getValue: getValue2 }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime519.jsx)(DateCell, { date: getValue2() });
            }
          })
        ],
        [t4]
      );
    };
  }
});

// src/hooks/table/columns/use-product-type-table-columns.tsx
var import_react_table71, import_react233, import_react_i18next370, import_jsx_runtime520, columnHelper73, useProductTypeTableColumns;
var init_use_product_type_table_columns = __esm({
  "src/hooks/table/columns/use-product-type-table-columns.tsx"() {
    "use strict";
    import_react_table71 = require("@tanstack/react-table");
    import_react233 = require("react");
    import_react_i18next370 = require("react-i18next");
    init_date_cell2();
    init_text_cell2();
    import_jsx_runtime520 = require("react/jsx-runtime");
    columnHelper73 = (0, import_react_table71.createColumnHelper)();
    useProductTypeTableColumns = () => {
      const { t: t4 } = (0, import_react_i18next370.useTranslation)();
      return (0, import_react233.useMemo)(
        () => [
          columnHelper73.accessor("value", {
            header: () => t4("fields.value"),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime520.jsx)(TextCell, { text: getValue2() })
          }),
          columnHelper73.accessor("created_at", {
            header: () => t4("fields.createdAt"),
            cell: ({ getValue: getValue2 }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime520.jsx)(DateCell, { date: getValue2() });
            }
          }),
          columnHelper73.accessor("updated_at", {
            header: () => t4("fields.updatedAt"),
            cell: ({ getValue: getValue2 }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime520.jsx)(DateCell, { date: getValue2() });
            }
          })
        ],
        [t4]
      );
    };
  }
});

// src/hooks/table/columns/use-return-reason-table-columns.tsx
var import_ui331, import_react_table72, import_react234, import_jsx_runtime521, columnHelper74, useReturnReasonTableColumns;
var init_use_return_reason_table_columns = __esm({
  "src/hooks/table/columns/use-return-reason-table-columns.tsx"() {
    "use strict";
    import_ui331 = require("@medusajs/ui");
    import_react_table72 = require("@tanstack/react-table");
    import_react234 = require("react");
    import_jsx_runtime521 = require("react/jsx-runtime");
    columnHelper74 = (0, import_react_table72.createColumnHelper)();
    useReturnReasonTableColumns = () => {
      return (0, import_react234.useMemo)(
        () => [
          columnHelper74.accessor("value", {
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime521.jsx)(import_ui331.Badge, { size: "2xsmall", children: getValue2() })
          }),
          columnHelper74.accessor("label", {
            cell: ({ row }) => {
              const { label, description } = row.original;
              return /* @__PURE__ */ (0, import_jsx_runtime521.jsx)("div", { className: " py-4", children: /* @__PURE__ */ (0, import_jsx_runtime521.jsxs)("div", { className: "flex h-full w-full flex-col justify-center", children: [
                /* @__PURE__ */ (0, import_jsx_runtime521.jsx)("span", { className: "truncate font-medium", children: label }),
                /* @__PURE__ */ (0, import_jsx_runtime521.jsx)("span", { className: "truncate", children: description ? description : "-" })
              ] }) });
            }
          })
        ],
        []
      );
    };
  }
});

// src/components/table/table-cells/taxes/type-cell/type-cell.tsx
var import_ui332, import_jsx_runtime522;
var init_type_cell = __esm({
  "src/components/table/table-cells/taxes/type-cell/type-cell.tsx"() {
    "use strict";
    import_ui332 = require("@medusajs/ui");
    import_jsx_runtime522 = require("react/jsx-runtime");
  }
});

// src/components/table/table-cells/taxes/type-cell/index.ts
var init_type_cell2 = __esm({
  "src/components/table/table-cells/taxes/type-cell/index.ts"() {
    "use strict";
    init_type_cell();
  }
});

// src/hooks/table/columns/use-tax-rates-table-columns.tsx
var import_react_table73, import_react235, import_react_i18next371, import_jsx_runtime523, columnHelper75;
var init_use_tax_rates_table_columns = __esm({
  "src/hooks/table/columns/use-tax-rates-table-columns.tsx"() {
    "use strict";
    import_react_table73 = require("@tanstack/react-table");
    import_react235 = require("react");
    import_react_i18next371 = require("react-i18next");
    init_text_cell2();
    init_type_cell2();
    import_jsx_runtime523 = require("react/jsx-runtime");
    columnHelper75 = (0, import_react_table73.createColumnHelper)();
  }
});

// src/hooks/table/columns/index.ts
var init_columns = __esm({
  "src/hooks/table/columns/index.ts"() {
    "use strict";
    init_use_campaign_table_columns();
    init_use_collection_table_columns();
    init_use_customer_group_table_columns();
    init_use_customer_table_columns();
    init_use_order_table_columns();
    init_use_product_table_columns();
    init_use_product_tag_table_columns();
    init_use_product_type_table_columns();
    init_use_region_table_columns();
    init_use_return_reason_table_columns();
    init_use_sales_channel_table_columns();
    init_use_tax_rates_table_columns();
  }
});

// src/routes/product-tags/common/hooks/use-delete-product-tag-action.tsx
var import_ui333, import_react_i18next372, import_react_router_dom177, useDeleteProductTagAction;
var init_use_delete_product_tag_action = __esm({
  "src/routes/product-tags/common/hooks/use-delete-product-tag-action.tsx"() {
    "use strict";
    import_ui333 = require("@medusajs/ui");
    import_react_i18next372 = require("react-i18next");
    import_react_router_dom177 = require("react-router-dom");
    init_api();
    useDeleteProductTagAction = ({
      productTag
    }) => {
      const { t: t4 } = (0, import_react_i18next372.useTranslation)();
      const prompt = (0, import_ui333.usePrompt)();
      const navigate = (0, import_react_router_dom177.useNavigate)();
      const { mutateAsync } = useDeleteProductTag(productTag.id);
      const handleDelete = async () => {
        const confirmed = await prompt({
          title: t4("general.areYouSure"),
          description: t4("productTags.delete.confirmation", {
            value: productTag.value
          }),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!confirmed) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            import_ui333.toast.success(
              t4("productTags.delete.successToast", {
                value: productTag.value
              })
            );
            navigate("/settings/product-tags", {
              replace: true
            });
          },
          onError: (error) => {
            import_ui333.toast.error(error.message);
          }
        });
      };
      return handleDelete;
    };
  }
});

// src/routes/product-tags/product-tag-list/components/product-tag-list-table/product-tag-list-table.tsx
var import_icons142, import_ui334, import_react_query78, import_react_table74, import_react236, import_react_i18next373, import_react_router_dom178, import_jsx_runtime524, PAGE_SIZE54, ProductTagListTable, ProductTagRowActions, columnHelper76, useColumns40;
var init_product_tag_list_table = __esm({
  "src/routes/product-tags/product-tag-list/components/product-tag-list-table/product-tag-list-table.tsx"() {
    "use strict";
    import_icons142 = require("@medusajs/icons");
    import_ui334 = require("@medusajs/ui");
    import_react_query78 = require("@tanstack/react-query");
    import_react_table74 = require("@tanstack/react-table");
    import_react236 = require("react");
    import_react_i18next373 = require("react-i18next");
    import_react_router_dom178 = require("react-router-dom");
    init_action_menu2();
    init_data_table2();
    init_api();
    init_columns();
    init_filters();
    init_query();
    init_use_data_table();
    init_use_delete_product_tag_action();
    import_jsx_runtime524 = require("react/jsx-runtime");
    PAGE_SIZE54 = 20;
    ProductTagListTable = () => {
      const { t: t4 } = (0, import_react_i18next373.useTranslation)();
      const { searchParams, raw } = useProductTagTableQuery({
        pageSize: PAGE_SIZE54
      });
      const initialData = (0, import_react_router_dom178.useLoaderData)();
      const { product_tags, count: count3, isPending, isError, error } = useProductTags(
        searchParams,
        {
          initialData,
          placeholderData: import_react_query78.keepPreviousData
        }
      );
      const columns = useColumns40();
      const filters = useProductTagTableFilters();
      const { table } = useDataTable({
        data: product_tags,
        count: count3,
        columns,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE54
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime524.jsxs)(import_ui334.Container, { className: "divide-y px-0 py-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime524.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime524.jsx)(import_ui334.Heading, { children: t4("productTags.domain") }),
          /* @__PURE__ */ (0, import_jsx_runtime524.jsx)(import_ui334.Button, { variant: "secondary", size: "small", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime524.jsx)(import_react_router_dom178.Link, { to: "create", children: t4("actions.create") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime524.jsx)(
          DataTable,
          {
            table,
            filters,
            queryObject: raw,
            isLoading: isPending,
            columns,
            pageSize: PAGE_SIZE54,
            count: count3,
            navigateTo: (row) => row.original.id,
            search: true,
            pagination: true,
            orderBy: [
              { key: "value", label: t4("fields.value") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ]
          }
        )
      ] });
    };
    ProductTagRowActions = ({
      productTag
    }) => {
      const { t: t4 } = (0, import_react_i18next373.useTranslation)();
      const handleDelete = useDeleteProductTagAction({ productTag });
      return /* @__PURE__ */ (0, import_jsx_runtime524.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime524.jsx)(import_icons142.PencilSquare, {}),
                  label: t4("actions.edit"),
                  to: `${productTag.id}/edit`
                }
              ]
            },
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime524.jsx)(import_icons142.Trash, {}),
                  label: t4("actions.delete"),
                  onClick: handleDelete
                }
              ]
            }
          ]
        }
      );
    };
    columnHelper76 = (0, import_react_table74.createColumnHelper)();
    useColumns40 = () => {
      const base = useProductTagTableColumns();
      return (0, import_react236.useMemo)(
        () => [
          ...base,
          columnHelper76.display({
            id: "actions",
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime524.jsx)(ProductTagRowActions, { productTag: row.original })
          })
        ],
        [base]
      );
    };
  }
});

// src/routes/product-tags/product-tag-list/components/product-tag-list-table/index.ts
var init_product_tag_list_table2 = __esm({
  "src/routes/product-tags/product-tag-list/components/product-tag-list-table/index.ts"() {
    "use strict";
    init_product_tag_list_table();
  }
});

// src/routes/product-tags/product-tag-list/product-tag-list.tsx
var import_jsx_runtime525, ProductTagList;
var init_product_tag_list = __esm({
  "src/routes/product-tags/product-tag-list/product-tag-list.tsx"() {
    "use strict";
    init_pages();
    init_extensions();
    init_product_tag_list_table2();
    import_jsx_runtime525 = require("react/jsx-runtime");
    ProductTagList = () => {
      const { getWidgets } = useDashboardExtension();
      return /* @__PURE__ */ (0, import_jsx_runtime525.jsx)(
        SingleColumnPage,
        {
          showMetadata: false,
          showJSON: false,
          hasOutlet: true,
          widgets: {
            after: getWidgets("product_tag.list.after"),
            before: getWidgets("product_tag.list.before")
          },
          children: /* @__PURE__ */ (0, import_jsx_runtime525.jsx)(ProductTagListTable, {})
        }
      );
    };
  }
});

// src/routes/product-tags/product-tag-list/index.ts
var product_tag_list_exports = {};
__export(product_tag_list_exports, {
  Component: () => ProductTagList,
  loader: () => productTagListLoader
});
var init_product_tag_list2 = __esm({
  "src/routes/product-tags/product-tag-list/index.ts"() {
    "use strict";
    init_loader24();
    init_product_tag_list();
  }
});

// src/routes/product-tags/product-tag-create/components/product-tag-create-form/product-tag-create-form.tsx
var import_zod111, import_ui335, import_react_hook_form106, import_react_i18next374, import_zod112, import_jsx_runtime526, ProductTagCreateSchema, ProductTagCreateForm;
var init_product_tag_create_form = __esm({
  "src/routes/product-tags/product-tag-create/components/product-tag-create-form/product-tag-create-form.tsx"() {
    "use strict";
    import_zod111 = require("@hookform/resolvers/zod");
    import_ui335 = require("@medusajs/ui");
    import_react_hook_form106 = require("react-hook-form");
    import_react_i18next374 = require("react-i18next");
    import_zod112 = require("zod");
    init_form2();
    init_modals();
    init_keybound_form2();
    init_api();
    import_jsx_runtime526 = require("react/jsx-runtime");
    ProductTagCreateSchema = import_zod112.z.object({
      value: import_zod112.z.string().min(1)
    });
    ProductTagCreateForm = () => {
      const { t: t4 } = (0, import_react_i18next374.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form106.useForm)({
        defaultValues: {
          value: ""
        },
        resolver: (0, import_zod111.zodResolver)(ProductTagCreateSchema)
      });
      const { mutateAsync, isPending } = useCreateProductTag();
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(data, {
          onSuccess: ({ product_tag }) => {
            import_ui335.toast.success(
              t4("productTags.create.successToast", {
                value: product_tag.value
              })
            );
            handleSuccess(`../${product_tag.id}`);
          },
          onError: (error) => {
            import_ui335.toast.error(error.message);
          }
        });
      });
      return /* @__PURE__ */ (0, import_jsx_runtime526.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime526.jsxs)(
        KeyboundForm,
        {
          className: "flex size-full flex-col overflow-hidden",
          onSubmit: handleSubmit,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime526.jsx)(RouteFocusModal.Header, {}),
            /* @__PURE__ */ (0, import_jsx_runtime526.jsx)(RouteFocusModal.Body, { className: "flex flex-1 justify-center overflow-auto px-6 py-16", children: /* @__PURE__ */ (0, import_jsx_runtime526.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8", children: [
              /* @__PURE__ */ (0, import_jsx_runtime526.jsxs)("div", { className: "flex flex-col gap-y-1", children: [
                /* @__PURE__ */ (0, import_jsx_runtime526.jsx)(RouteFocusModal.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime526.jsx)(import_ui335.Heading, { children: t4("productTags.create.header") }) }),
                /* @__PURE__ */ (0, import_jsx_runtime526.jsx)(RouteFocusModal.Description, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime526.jsx)(import_ui335.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("productTags.create.subtitle") }) })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime526.jsx)("div", { className: "grid gap-4 md:grid-cols-2", children: /* @__PURE__ */ (0, import_jsx_runtime526.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "value",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime526.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime526.jsx)(Form.Label, { children: t4("productTags.fields.value") }),
                      /* @__PURE__ */ (0, import_jsx_runtime526.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime526.jsx)(import_ui335.Input, { ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime526.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ) })
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime526.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime526.jsxs)("div", { className: "flex items-center justify-end gap-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime526.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime526.jsx)(import_ui335.Button, { size: "small", variant: "secondary", type: "button", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime526.jsx)(import_ui335.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/product-tags/product-tag-create/components/product-tag-create-form/index.ts
var init_product_tag_create_form2 = __esm({
  "src/routes/product-tags/product-tag-create/components/product-tag-create-form/index.ts"() {
    "use strict";
    init_product_tag_create_form();
  }
});

// src/routes/product-tags/product-tag-create/product-tag-create.tsx
var import_jsx_runtime527, ProductTagCreate;
var init_product_tag_create = __esm({
  "src/routes/product-tags/product-tag-create/product-tag-create.tsx"() {
    "use strict";
    init_modals();
    init_product_tag_create_form2();
    import_jsx_runtime527 = require("react/jsx-runtime");
    ProductTagCreate = () => {
      return /* @__PURE__ */ (0, import_jsx_runtime527.jsx)(RouteFocusModal, { children: /* @__PURE__ */ (0, import_jsx_runtime527.jsx)(ProductTagCreateForm, {}) });
    };
  }
});

// src/routes/product-tags/product-tag-create/index.ts
var product_tag_create_exports = {};
__export(product_tag_create_exports, {
  Component: () => ProductTagCreate
});
var init_product_tag_create2 = __esm({
  "src/routes/product-tags/product-tag-create/index.ts"() {
    "use strict";
    init_product_tag_create();
  }
});

// src/routes/product-tags/product-tag-detail/loader.ts
var productTagDetailQuery, productTagLoader;
var init_loader25 = __esm({
  "src/routes/product-tags/product-tag-detail/loader.ts"() {
    "use strict";
    init_api();
    init_client2();
    init_query_client();
    productTagDetailQuery = (id2) => ({
      queryKey: productTagsQueryKeys.detail(id2),
      queryFn: async () => sdk.admin.productTag.retrieve(id2)
    });
    productTagLoader = async ({ params: params2 }) => {
      const id2 = params2.id;
      const query = productTagDetailQuery(id2);
      return queryClient.getQueryData(query.queryKey) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/routes/product-tags/product-tag-detail/components/product-tag-general-section/product-tag-general-section.tsx
var import_icons143, import_ui336, import_react_i18next375, import_jsx_runtime528, ProductTagGeneralSection;
var init_product_tag_general_section = __esm({
  "src/routes/product-tags/product-tag-detail/components/product-tag-general-section/product-tag-general-section.tsx"() {
    "use strict";
    import_icons143 = require("@medusajs/icons");
    import_ui336 = require("@medusajs/ui");
    import_react_i18next375 = require("react-i18next");
    init_action_menu2();
    init_use_delete_product_tag_action();
    import_jsx_runtime528 = require("react/jsx-runtime");
    ProductTagGeneralSection = ({
      productTag
    }) => {
      const { t: t4 } = (0, import_react_i18next375.useTranslation)();
      const handleDelete = useDeleteProductTagAction({ productTag });
      return /* @__PURE__ */ (0, import_jsx_runtime528.jsxs)(import_ui336.Container, { className: "flex items-center justify-between", children: [
        /* @__PURE__ */ (0, import_jsx_runtime528.jsxs)("div", { className: "flex items-center gap-x-1.5", children: [
          /* @__PURE__ */ (0, import_jsx_runtime528.jsx)("span", { className: "text-ui-fg-muted h1-core", children: "#" }),
          /* @__PURE__ */ (0, import_jsx_runtime528.jsx)(import_ui336.Heading, { children: productTag.value })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime528.jsx)(
          ActionMenu,
          {
            groups: [
              {
                actions: [
                  {
                    icon: /* @__PURE__ */ (0, import_jsx_runtime528.jsx)(import_icons143.PencilSquare, {}),
                    label: t4("actions.edit"),
                    to: "edit"
                  }
                ]
              },
              {
                actions: [
                  {
                    icon: /* @__PURE__ */ (0, import_jsx_runtime528.jsx)(import_icons143.Trash, {}),
                    label: t4("actions.delete"),
                    onClick: handleDelete
                  }
                ]
              }
            ]
          }
        )
      ] });
    };
  }
});

// src/routes/product-tags/product-tag-detail/components/product-tag-general-section/index.ts
var init_product_tag_general_section2 = __esm({
  "src/routes/product-tags/product-tag-detail/components/product-tag-general-section/index.ts"() {
    "use strict";
    init_product_tag_general_section();
  }
});

// src/routes/product-tags/product-tag-detail/components/product-tag-product-section/product-tag-product-section.tsx
var import_ui337, import_react_i18next376, import_jsx_runtime529, PAGE_SIZE55, PREFIX21, ProductTagProductSection;
var init_product_tag_product_section = __esm({
  "src/routes/product-tags/product-tag-detail/components/product-tag-product-section/product-tag-product-section.tsx"() {
    "use strict";
    import_ui337 = require("@medusajs/ui");
    import_react_i18next376 = require("react-i18next");
    init_data_table2();
    init_api();
    init_columns();
    init_filters();
    init_query();
    init_use_data_table();
    import_jsx_runtime529 = require("react/jsx-runtime");
    PAGE_SIZE55 = 10;
    PREFIX21 = "pt";
    ProductTagProductSection = ({
      productTag
    }) => {
      const { t: t4 } = (0, import_react_i18next376.useTranslation)();
      const { searchParams, raw } = useProductTableQuery({
        pageSize: PAGE_SIZE55,
        prefix: PREFIX21
      });
      const { products, count: count3, isPending, isError, error } = useProducts({
        ...searchParams,
        tag_id: productTag.id
      });
      const filters = useProductTableFilters(["product_tags"]);
      const columns = useProductTableColumns();
      const { table } = useDataTable({
        data: products,
        count: count3,
        columns,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE55,
        prefix: PREFIX21
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime529.jsxs)(import_ui337.Container, { className: "divide-y px-0 py-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime529.jsx)("div", { className: "px-6 py-4", children: /* @__PURE__ */ (0, import_jsx_runtime529.jsx)(import_ui337.Heading, { level: "h2", children: t4("products.domain") }) }),
        /* @__PURE__ */ (0, import_jsx_runtime529.jsx)(
          DataTable,
          {
            table,
            filters,
            queryObject: raw,
            isLoading: isPending,
            columns,
            pageSize: PAGE_SIZE55,
            count: count3,
            navigateTo: (row) => row.original.id,
            search: true,
            pagination: true,
            orderBy: [
              { key: "title", label: t4("fields.title") },
              { key: "status", label: t4("fields.status") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ]
          }
        )
      ] });
    };
  }
});

// src/routes/product-tags/product-tag-detail/components/product-tag-product-section/index.ts
var init_product_tag_product_section2 = __esm({
  "src/routes/product-tags/product-tag-detail/components/product-tag-product-section/index.ts"() {
    "use strict";
    init_product_tag_product_section();
  }
});

// src/routes/product-tags/product-tag-detail/product-tag-detail.tsx
var import_react_router_dom179, import_jsx_runtime530, ProductTagDetail;
var init_product_tag_detail = __esm({
  "src/routes/product-tags/product-tag-detail/product-tag-detail.tsx"() {
    "use strict";
    import_react_router_dom179 = require("react-router-dom");
    init_skeleton2();
    init_pages();
    init_extensions();
    init_api();
    init_product_tag_general_section2();
    init_product_tag_product_section2();
    import_jsx_runtime530 = require("react/jsx-runtime");
    ProductTagDetail = () => {
      const { id: id2 } = (0, import_react_router_dom179.useParams)();
      const initialData = (0, import_react_router_dom179.useLoaderData)();
      const { getWidgets } = useDashboardExtension();
      const { product_tag, isPending, isError, error } = useProductTag(
        id2,
        void 0,
        {
          initialData
        }
      );
      if (isPending || !product_tag) {
        return /* @__PURE__ */ (0, import_jsx_runtime530.jsx)(SingleColumnPageSkeleton, { showJSON: true, sections: 2 });
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime530.jsxs)(
        SingleColumnPage,
        {
          widgets: {
            after: getWidgets("product_tag.details.after"),
            before: getWidgets("product_tag.details.before")
          },
          showJSON: true,
          data: product_tag,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime530.jsx)(ProductTagGeneralSection, { productTag: product_tag }),
            /* @__PURE__ */ (0, import_jsx_runtime530.jsx)(ProductTagProductSection, { productTag: product_tag })
          ]
        }
      );
    };
  }
});

// src/routes/product-tags/product-tag-detail/index.ts
var product_tag_detail_exports = {};
__export(product_tag_detail_exports, {
  Component: () => ProductTagDetail,
  loader: () => productTagLoader
});
var init_product_tag_detail2 = __esm({
  "src/routes/product-tags/product-tag-detail/index.ts"() {
    "use strict";
    init_loader25();
    init_product_tag_detail();
  }
});

// src/routes/product-tags/product-tag-edit/components/product-tag-edit-form/product-tag-edit-form.tsx
var import_zod113, import_ui338, import_react_hook_form107, import_react_i18next377, import_zod114, import_jsx_runtime531, ProductTagEditSchema, ProductTagEditForm;
var init_product_tag_edit_form = __esm({
  "src/routes/product-tags/product-tag-edit/components/product-tag-edit-form/product-tag-edit-form.tsx"() {
    "use strict";
    import_zod113 = require("@hookform/resolvers/zod");
    import_ui338 = require("@medusajs/ui");
    import_react_hook_form107 = require("react-hook-form");
    import_react_i18next377 = require("react-i18next");
    import_zod114 = require("zod");
    init_form2();
    init_modals();
    init_keybound_form2();
    init_api();
    import_jsx_runtime531 = require("react/jsx-runtime");
    ProductTagEditSchema = import_zod114.z.object({
      value: import_zod114.z.string().min(1)
    });
    ProductTagEditForm = ({ productTag }) => {
      const { t: t4 } = (0, import_react_i18next377.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form107.useForm)({
        defaultValues: {
          value: productTag.value
        },
        resolver: (0, import_zod113.zodResolver)(ProductTagEditSchema)
      });
      const { mutateAsync, isPending } = useUpdateProductTag(productTag.id);
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(data, {
          onSuccess: ({ product_tag }) => {
            import_ui338.toast.success(
              t4("productTags.edit.successToast", {
                value: product_tag.value
              })
            );
            handleSuccess();
          },
          onError: (error) => {
            import_ui338.toast.error(error.message);
          }
        });
      });
      return /* @__PURE__ */ (0, import_jsx_runtime531.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime531.jsxs)(
        KeyboundForm,
        {
          className: "flex size-full flex-col overflow-hidden",
          onSubmit: handleSubmit,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime531.jsx)(RouteDrawer.Body, { className: "flex flex-1 flex-col overflow-auto", children: /* @__PURE__ */ (0, import_jsx_runtime531.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "value",
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime531.jsxs)(Form.Item, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime531.jsx)(Form.Label, { children: t4("productTags.fields.value") }),
                    /* @__PURE__ */ (0, import_jsx_runtime531.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime531.jsx)(import_ui338.Input, { ...field }) }),
                    /* @__PURE__ */ (0, import_jsx_runtime531.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              }
            ) }),
            /* @__PURE__ */ (0, import_jsx_runtime531.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime531.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime531.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime531.jsx)(import_ui338.Button, { variant: "secondary", size: "small", type: "button", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime531.jsx)(import_ui338.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/product-tags/product-tag-edit/components/product-tag-edit-form/index.ts
var init_product_tag_edit_form2 = __esm({
  "src/routes/product-tags/product-tag-edit/components/product-tag-edit-form/index.ts"() {
    "use strict";
    init_product_tag_edit_form();
  }
});

// src/routes/product-tags/product-tag-edit/product-tag-edit.tsx
var import_ui339, import_react_i18next378, import_react_router_dom180, import_jsx_runtime532, ProductTagEdit;
var init_product_tag_edit = __esm({
  "src/routes/product-tags/product-tag-edit/product-tag-edit.tsx"() {
    "use strict";
    import_ui339 = require("@medusajs/ui");
    import_react_i18next378 = require("react-i18next");
    import_react_router_dom180 = require("react-router-dom");
    init_modals();
    init_api();
    init_product_tag_edit_form2();
    import_jsx_runtime532 = require("react/jsx-runtime");
    ProductTagEdit = () => {
      const { id: id2 } = (0, import_react_router_dom180.useParams)();
      const { t: t4 } = (0, import_react_i18next378.useTranslation)();
      const { product_tag, isPending, isError, error } = useProductTag(id2);
      const ready = !isPending && !!product_tag;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime532.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime532.jsxs)(RouteDrawer.Header, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime532.jsx)(RouteDrawer.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime532.jsx)(import_ui339.Heading, { children: t4("productTags.edit.header") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime532.jsx)(RouteDrawer.Description, { className: "sr-only", children: t4("productTags.edit.subtitle") })
        ] }),
        ready && /* @__PURE__ */ (0, import_jsx_runtime532.jsx)(ProductTagEditForm, { productTag: product_tag })
      ] });
    };
  }
});

// src/routes/product-tags/product-tag-edit/index.ts
var product_tag_edit_exports = {};
__export(product_tag_edit_exports, {
  Component: () => ProductTagEdit
});
var init_product_tag_edit2 = __esm({
  "src/routes/product-tags/product-tag-edit/index.ts"() {
    "use strict";
    init_product_tag_edit();
  }
});

// src/routes/workflow-executions/types.ts
var init_types = __esm({
  "src/routes/workflow-executions/types.ts"() {
    "use strict";
  }
});

// src/routes/workflow-executions/constants.ts
var STEP_IN_PROGRESS_STATES, STEP_SKIPPED_STATES, STEP_OK_STATES, STEP_ERROR_STATES, STEP_INACTIVE_STATES, TRANSACTION_OK_STATES, TRANSACTION_ERROR_STATES, TRANSACTION_IN_PROGRESS_STATES;
var init_constants19 = __esm({
  "src/routes/workflow-executions/constants.ts"() {
    "use strict";
    init_types();
    STEP_IN_PROGRESS_STATES = [
      "compensating" /* COMPENSATING */,
      "invoking" /* INVOKING */
    ];
    STEP_SKIPPED_STATES = [
      "skipped" /* SKIPPED */,
      "skipped_failure" /* SKIPPED_FAILURE */
    ];
    STEP_OK_STATES = [
      "done" /* DONE */
    ];
    STEP_ERROR_STATES = [
      "failed" /* FAILED */,
      "reverted" /* REVERTED */,
      "timeout" /* TIMEOUT */,
      "dormant" /* DORMANT */
    ];
    STEP_INACTIVE_STATES = [
      "not_started" /* NOT_STARTED */
    ];
    TRANSACTION_OK_STATES = [
      "done" /* DONE */
    ];
    TRANSACTION_ERROR_STATES = [
      "failed" /* FAILED */,
      "reverted" /* REVERTED */
    ];
    TRANSACTION_IN_PROGRESS_STATES = [
      "invoking" /* INVOKING */,
      "waiting_to_compensate" /* WAITING_TO_COMPENSATE */,
      "compensating" /* COMPENSATING */
    ];
  }
});

// src/routes/workflow-executions/utils.ts
var getTransactionStateColor, getTransactionState;
var init_utils12 = __esm({
  "src/routes/workflow-executions/utils.ts"() {
    "use strict";
    init_constants19();
    init_types();
    getTransactionStateColor = (state) => {
      let statusColor2 = "green";
      if (TRANSACTION_ERROR_STATES.includes(state)) {
        statusColor2 = "red";
      }
      if (TRANSACTION_IN_PROGRESS_STATES.includes(state)) {
        statusColor2 = "orange";
      }
      return statusColor2;
    };
    getTransactionState = (t4, state) => {
      switch (state) {
        case "done" /* DONE */:
          return t4("workflowExecutions.state.done");
        case "failed" /* FAILED */:
          return t4("workflowExecutions.state.failed");
        case "reverted" /* REVERTED */:
          return t4("workflowExecutions.state.reverted");
        case "invoking" /* INVOKING */:
          return t4("workflowExecutions.state.invoking");
        case "waiting_to_compensate" /* WAITING_TO_COMPENSATE */:
          return t4("workflowExecutions.transaction.state.waitingToCompensate");
        case "compensating" /* COMPENSATING */:
          return t4("workflowExecutions.state.compensating");
        case "not_started" /* NOT_STARTED */:
          return t4("workflowExecutions.state.notStarted");
      }
    };
  }
});

// src/routes/workflow-executions/workflow-execution-list/components/workflow-execution-list-table/use-workflow-execution-table-columns.tsx
var import_ui340, import_react_table75, import_react237, import_react_i18next379, import_jsx_runtime533, columnHelper77, useWorkflowExecutionTableColumns, ROOT_PREFIX;
var init_use_workflow_execution_table_columns = __esm({
  "src/routes/workflow-executions/workflow-execution-list/components/workflow-execution-list-table/use-workflow-execution-table-columns.tsx"() {
    "use strict";
    import_ui340 = require("@medusajs/ui");
    import_react_table75 = require("@tanstack/react-table");
    import_react237 = require("react");
    import_react_i18next379 = require("react-i18next");
    init_status_cell2();
    init_types();
    init_utils12();
    import_jsx_runtime533 = require("react/jsx-runtime");
    columnHelper77 = (0, import_react_table75.createColumnHelper)();
    useWorkflowExecutionTableColumns = () => {
      const { t: t4 } = (0, import_react_i18next379.useTranslation)();
      return (0, import_react237.useMemo)(
        () => [
          columnHelper77.accessor("transaction_id", {
            header: t4("workflowExecutions.transactionIdLabel"),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime533.jsx)(import_ui340.Badge, { size: "2xsmall", children: getValue2() })
          }),
          columnHelper77.accessor("state", {
            header: t4("fields.state"),
            cell: ({ getValue: getValue2 }) => {
              const state = getValue2();
              const color = getTransactionStateColor(state);
              const translatedState = getTransactionState(t4, state);
              return /* @__PURE__ */ (0, import_jsx_runtime533.jsx)(StatusCell, { color, children: /* @__PURE__ */ (0, import_jsx_runtime533.jsx)("span", { className: "capitalize", children: translatedState }) });
            }
          }),
          columnHelper77.accessor("execution", {
            header: t4("workflowExecutions.progressLabel"),
            cell: ({ getValue: getValue2 }) => {
              const steps = getValue2()?.steps;
              if (!steps) {
                return "0 of 0 steps";
              }
              const actionableSteps = Object.values(steps).filter(
                (step) => step.id !== ROOT_PREFIX
              );
              const completedSteps = actionableSteps.filter(
                (step) => step.invoke.state === "done" /* DONE */
              );
              return t4("workflowExecutions.stepsCompletedLabel", {
                completed: completedSteps.length,
                count: actionableSteps.length
              });
            }
          })
        ],
        [t4]
      );
    };
    ROOT_PREFIX = "_root";
  }
});

// src/routes/workflow-executions/workflow-execution-list/components/workflow-execution-list-table/use-workflow-execution-table-query.tsx
var useWorkflowExecutionTableQuery;
var init_use_workflow_execution_table_query = __esm({
  "src/routes/workflow-executions/workflow-execution-list/components/workflow-execution-list-table/use-workflow-execution-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useWorkflowExecutionTableQuery = ({
      pageSize = 20,
      prefix
    }) => {
      const raw = useQueryParams(["q", "offset"], prefix);
      const { offset: offset4, ...rest } = raw;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? parseInt(offset4) : 0,
        ...rest
      };
      return {
        searchParams,
        raw
      };
    };
  }
});

// src/routes/workflow-executions/workflow-execution-list/components/workflow-execution-list-table/workflow-execution-list-table.tsx
var import_ui341, import_react_query79, import_react_i18next380, import_jsx_runtime534, PAGE_SIZE56, WorkflowExecutionListTable;
var init_workflow_execution_list_table = __esm({
  "src/routes/workflow-executions/workflow-execution-list/components/workflow-execution-list-table/workflow-execution-list-table.tsx"() {
    "use strict";
    import_ui341 = require("@medusajs/ui");
    import_react_query79 = require("@tanstack/react-query");
    import_react_i18next380 = require("react-i18next");
    init_data_table2();
    init_workflow_executions();
    init_use_data_table();
    init_use_workflow_execution_table_columns();
    init_use_workflow_execution_table_query();
    import_jsx_runtime534 = require("react/jsx-runtime");
    PAGE_SIZE56 = 20;
    WorkflowExecutionListTable = () => {
      const { t: t4 } = (0, import_react_i18next380.useTranslation)();
      const { searchParams, raw } = useWorkflowExecutionTableQuery({
        pageSize: PAGE_SIZE56
      });
      const { workflow_executions, count: count3, isLoading, isError, error } = useWorkflowExecutions(
        {
          ...searchParams
        },
        {
          placeholderData: import_react_query79.keepPreviousData
        }
      );
      const columns = useWorkflowExecutionTableColumns();
      const { table } = useDataTable({
        data: workflow_executions || [],
        columns,
        count: count3,
        pageSize: PAGE_SIZE56,
        enablePagination: true,
        getRowId: (row) => row.id
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime534.jsxs)(import_ui341.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime534.jsx)("div", { className: "flex items-center justify-between px-6 py-4", children: /* @__PURE__ */ (0, import_jsx_runtime534.jsxs)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_runtime534.jsx)(import_ui341.Heading, { children: t4("workflowExecutions.domain") }),
          /* @__PURE__ */ (0, import_jsx_runtime534.jsx)(import_ui341.Text, { className: "text-ui-fg-subtle", size: "small", children: t4(`workflowExecutions.subtitle`) })
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime534.jsx)(
          DataTable,
          {
            table,
            columns,
            count: count3,
            isLoading,
            pageSize: PAGE_SIZE56,
            navigateTo: (row) => `${row.id}`,
            search: true,
            pagination: true,
            queryObject: raw,
            noRecords: {
              message: t4("workflowExecutions.list.noRecordsMessage")
            }
          }
        )
      ] });
    };
  }
});

// src/routes/workflow-executions/workflow-execution-list/components/workflow-execution-list-table/index.ts
var init_workflow_execution_list_table2 = __esm({
  "src/routes/workflow-executions/workflow-execution-list/components/workflow-execution-list-table/index.ts"() {
    "use strict";
    init_workflow_execution_list_table();
  }
});

// src/routes/workflow-executions/workflow-execution-list/workflow-execution-list.tsx
var import_jsx_runtime535, WorkflowExcecutionList;
var init_workflow_execution_list = __esm({
  "src/routes/workflow-executions/workflow-execution-list/workflow-execution-list.tsx"() {
    "use strict";
    init_workflow_execution_list_table2();
    init_pages();
    init_extensions();
    import_jsx_runtime535 = require("react/jsx-runtime");
    WorkflowExcecutionList = () => {
      const { getWidgets } = useDashboardExtension();
      return /* @__PURE__ */ (0, import_jsx_runtime535.jsx)(
        SingleColumnPage,
        {
          widgets: {
            after: getWidgets("workflow.list.after"),
            before: getWidgets("workflow.list.before")
          },
          hasOutlet: false,
          children: /* @__PURE__ */ (0, import_jsx_runtime535.jsx)(WorkflowExecutionListTable, {})
        }
      );
    };
  }
});

// src/routes/workflow-executions/workflow-execution-list/index.ts
var workflow_execution_list_exports = {};
__export(workflow_execution_list_exports, {
  Component: () => WorkflowExcecutionList
});
var init_workflow_execution_list2 = __esm({
  "src/routes/workflow-executions/workflow-execution-list/index.ts"() {
    "use strict";
    init_workflow_execution_list();
  }
});

// src/routes/workflow-executions/workflow-execution-detail/components/workflow-execution-general-section/workflow-execution-general-section.tsx
var import_ui342, import_react_i18next381, import_jsx_runtime536, WorkflowExecutionGeneralSection, ROOT_PREFIX2, Progress;
var init_workflow_execution_general_section = __esm({
  "src/routes/workflow-executions/workflow-execution-detail/components/workflow-execution-general-section/workflow-execution-general-section.tsx"() {
    "use strict";
    import_ui342 = require("@medusajs/ui");
    import_react_i18next381 = require("react-i18next");
    init_utils12();
    init_types();
    import_jsx_runtime536 = require("react/jsx-runtime");
    WorkflowExecutionGeneralSection = ({
      execution
    }) => {
      const { t: t4 } = (0, import_react_i18next381.useTranslation)();
      const cleanId = execution.id.replace("wf_exec_", "");
      const translatedState = getTransactionState(
        t4,
        execution.state
      );
      const stateColor = getTransactionStateColor(
        execution.state
      );
      return /* @__PURE__ */ (0, import_jsx_runtime536.jsxs)(import_ui342.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime536.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime536.jsxs)("div", { className: "flex items-center gap-x-0.5", children: [
            /* @__PURE__ */ (0, import_jsx_runtime536.jsx)(import_ui342.Heading, { children: cleanId }),
            /* @__PURE__ */ (0, import_jsx_runtime536.jsx)(import_ui342.Copy, { content: cleanId, className: "text-ui-fg-muted" })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime536.jsx)(import_ui342.StatusBadge, { color: stateColor, children: translatedState })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime536.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime536.jsx)(import_ui342.Text, { size: "small", leading: "compact", weight: "plus", children: t4("workflowExecutions.workflowIdLabel") }),
          /* @__PURE__ */ (0, import_jsx_runtime536.jsx)(import_ui342.Badge, { size: "2xsmall", className: "w-fit", children: execution.workflow_id })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime536.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime536.jsx)(import_ui342.Text, { size: "small", leading: "compact", weight: "plus", children: t4("workflowExecutions.transactionIdLabel") }),
          /* @__PURE__ */ (0, import_jsx_runtime536.jsx)(import_ui342.Badge, { size: "2xsmall", className: "w-fit", children: execution.transaction_id })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime536.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime536.jsx)(import_ui342.Text, { size: "small", leading: "compact", weight: "plus", children: t4("workflowExecutions.progressLabel") }),
          /* @__PURE__ */ (0, import_jsx_runtime536.jsx)(Progress, { steps: execution.execution?.steps })
        ] })
      ] });
    };
    ROOT_PREFIX2 = "_root";
    Progress = ({
      steps
    }) => {
      const { t: t4 } = (0, import_react_i18next381.useTranslation)();
      if (!steps) {
        return /* @__PURE__ */ (0, import_jsx_runtime536.jsx)(import_ui342.Text, { size: "small", leading: "compact", className: "text-ui-fg-subtle", children: t4("workflowExecutions.stepsCompletedLabel", {
          completed: 0,
          total: 0
        }) });
      }
      const actionableSteps = Object.values(steps).filter(
        (step) => step.id !== ROOT_PREFIX2
      );
      const completedSteps = actionableSteps.filter(
        (step) => step.invoke.state === "done" /* DONE */
      );
      return /* @__PURE__ */ (0, import_jsx_runtime536.jsxs)("div", { className: "flex w-fit items-center gap-x-2", children: [
        /* @__PURE__ */ (0, import_jsx_runtime536.jsx)("div", { className: "flex items-center gap-x-[3px]", children: actionableSteps.map((step) => /* @__PURE__ */ (0, import_jsx_runtime536.jsx)(
          "div",
          {
            className: (0, import_ui342.clx)(
              "bg-ui-bg-switch-off shadow-details-switch-background h-3 w-1.5 rounded-full",
              {
                "bg-ui-fg-muted": step.invoke.state === "done" /* DONE */
              }
            )
          },
          step.id
        )) }),
        /* @__PURE__ */ (0, import_jsx_runtime536.jsx)(import_ui342.Text, { size: "small", leading: "compact", className: "text-ui-fg-subtle", children: t4("workflowExecutions.stepsCompletedLabel", {
          completed: completedSteps.length,
          count: actionableSteps.length
        }) })
      ] });
    };
  }
});

// src/routes/workflow-executions/workflow-execution-detail/components/workflow-execution-general-section/index.ts
var init_workflow_execution_general_section2 = __esm({
  "src/routes/workflow-executions/workflow-execution-detail/components/workflow-execution-general-section/index.ts"() {
    "use strict";
    init_workflow_execution_general_section();
  }
});

// src/routes/workflow-executions/workflow-execution-detail/components/workflow-execution-history-section/workflow-execution-history-section.tsx
var import_icons144, import_ui343, Collapsible5, import_date_fns8, import_react238, import_react_i18next382, import_react_router_dom181, import_jsx_runtime537, WorkflowExecutionHistorySection, Event2, StepState;
var init_workflow_execution_history_section = __esm({
  "src/routes/workflow-executions/workflow-execution-detail/components/workflow-execution-history-section/workflow-execution-history-section.tsx"() {
    "use strict";
    import_icons144 = require("@medusajs/icons");
    import_ui343 = require("@medusajs/ui");
    Collapsible5 = __toESM(require("@radix-ui/react-collapsible"));
    import_date_fns8 = require("date-fns");
    import_react238 = require("react");
    import_react_i18next382 = require("react-i18next");
    import_react_router_dom181 = require("react-router-dom");
    init_constants19();
    init_types();
    import_jsx_runtime537 = require("react/jsx-runtime");
    WorkflowExecutionHistorySection = ({
      execution
    }) => {
      const { t: t4 } = (0, import_react_i18next382.useTranslation)();
      const map = Object.values(execution.execution?.steps || {});
      const steps = map.filter((step) => step.id !== "_root");
      const unreachableStepId = steps.find(
        (step) => step.invoke.status === "permanent_failure" /* PERMANENT_FAILURE */
      )?.id;
      const unreachableSteps = unreachableStepId ? steps.filter(
        (step) => step.id !== unreachableStepId && step.id.includes(unreachableStepId)
      ).map((step) => step.id) : [];
      return /* @__PURE__ */ (0, import_jsx_runtime537.jsxs)(import_ui343.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime537.jsx)("div", { className: "flex items-center justify-between px-6 py-4", children: /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(import_ui343.Heading, { level: "h2", children: t4("workflowExecutions.history.sectionTitle") }) }),
        /* @__PURE__ */ (0, import_jsx_runtime537.jsx)("div", { className: "flex flex-col gap-y-0.5 px-6 py-4", children: steps.map((step, index2) => {
          const stepId = step.id.split(".").pop();
          if (!stepId) {
            return null;
          }
          const context = execution.context?.data.invoke[stepId];
          const error = execution.context?.errors.find(
            (e) => e.action === stepId
          );
          return /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(
            Event2,
            {
              step,
              stepInvokeContext: context,
              stepError: error,
              isLast: index2 === steps.length - 1,
              isUnreachable: unreachableSteps.includes(step.id)
            },
            step.id
          );
        }) })
      ] });
    };
    Event2 = ({
      step,
      stepInvokeContext,
      stepError,
      isLast,
      isUnreachable
    }) => {
      const [open, setOpen] = (0, import_react238.useState)(false);
      const ref = (0, import_react238.useRef)(null);
      const { hash } = (0, import_react_router_dom181.useLocation)();
      const { t: t4 } = (0, import_react_i18next382.useTranslation)();
      const stepId = step.id.split(".").pop();
      (0, import_react238.useEffect)(() => {
        if (hash === `#${stepId}`) {
          setOpen(true);
        }
      }, [hash, stepId]);
      const identifier = step.id.split(".").pop();
      return /* @__PURE__ */ (0, import_jsx_runtime537.jsxs)(
        "div",
        {
          className: "grid grid-cols-[20px_1fr] items-start gap-x-2 px-2",
          id: stepId,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime537.jsxs)("div", { className: "grid h-full grid-rows-[20px_1fr] items-center justify-center gap-y-0.5", children: [
              /* @__PURE__ */ (0, import_jsx_runtime537.jsx)("div", { className: "flex size-5 items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime537.jsx)("div", { className: "bg-ui-bg-base shadow-borders-base flex size-2.5 items-center justify-center rounded-full", children: /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(
                "div",
                {
                  className: (0, import_ui343.clx)("size-1.5 rounded-full", {
                    "bg-ui-tag-neutral-bg": STEP_SKIPPED_STATES.includes(
                      step.invoke.state
                    ),
                    "bg-ui-tag-green-icon": STEP_OK_STATES.includes(
                      step.invoke.state
                    ),
                    "bg-ui-tag-orange-icon": STEP_IN_PROGRESS_STATES.includes(
                      step.invoke.state
                    ),
                    "bg-ui-tag-red-icon": STEP_ERROR_STATES.includes(
                      step.invoke.state
                    ),
                    "bg-ui-tag-neutral-icon": STEP_INACTIVE_STATES.includes(
                      step.invoke.state
                    )
                  })
                }
              ) }) }),
              /* @__PURE__ */ (0, import_jsx_runtime537.jsx)("div", { className: "flex h-full flex-col items-center", children: /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(
                "div",
                {
                  "aria-hidden": true,
                  role: "presentation",
                  className: (0, import_ui343.clx)({
                    "bg-ui-border-base h-full min-h-[14px] w-px": !isLast
                  })
                }
              ) })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime537.jsxs)(Collapsible5.Root, { open, onOpenChange: setOpen, children: [
              /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(Collapsible5.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime537.jsxs)("div", { className: "group flex cursor-pointer items-start justify-between outline-none", children: [
                /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(import_ui343.Text, { size: "small", leading: "compact", weight: "plus", children: identifier }),
                /* @__PURE__ */ (0, import_jsx_runtime537.jsxs)("div", { className: "flex items-center gap-x-2", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(
                    StepState,
                    {
                      state: step.invoke.state,
                      startedAt: step.startedAt,
                      isUnreachable
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(import_ui343.IconButton, { size: "2xsmall", variant: "transparent", children: /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(import_icons144.TriangleDownMini, { className: "text-ui-fg-muted transition-transform group-data-[state=open]:rotate-180" }) })
                ] })
              ] }) }),
              /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(Collapsible5.Content, { ref, children: /* @__PURE__ */ (0, import_jsx_runtime537.jsxs)("div", { className: "flex flex-col gap-y-2 pb-4 pt-2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime537.jsxs)("div", { className: "text-ui-fg-subtle flex flex-col gap-y-2", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(import_ui343.Text, { size: "small", leading: "compact", children: t4("workflowExecutions.history.definitionLabel") }),
                  /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(
                    import_ui343.CodeBlock,
                    {
                      snippets: [
                        {
                          code: JSON.stringify(step.definition, null, 2),
                          label: t4("workflowExecutions.history.definitionLabel"),
                          language: "json",
                          hideLineNumbers: true
                        }
                      ],
                      children: /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(import_ui343.CodeBlock.Body, {})
                    }
                  )
                ] }),
                stepInvokeContext && /* @__PURE__ */ (0, import_jsx_runtime537.jsxs)("div", { className: "text-ui-fg-subtle flex flex-col gap-y-2", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(import_ui343.Text, { size: "small", leading: "compact", children: t4("workflowExecutions.history.outputLabel") }),
                  /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(
                    import_ui343.CodeBlock,
                    {
                      snippets: [
                        {
                          code: JSON.stringify(
                            // TODO: Apply resolve value: packages/core/workflows-sdk/src/utils/composer/helpers/resolve-value.ts
                            stepInvokeContext?.output?.output ?? {},
                            null,
                            2
                          ),
                          label: t4("workflowExecutions.history.outputLabel"),
                          language: "json",
                          hideLineNumbers: true
                        }
                      ],
                      children: /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(import_ui343.CodeBlock.Body, {})
                    }
                  )
                ] }),
                !!stepInvokeContext?.output?.compensateInput && step.compensate.state === "reverted" /* REVERTED */ && /* @__PURE__ */ (0, import_jsx_runtime537.jsxs)("div", { className: "text-ui-fg-subtle flex flex-col gap-y-2", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(import_ui343.Text, { size: "small", leading: "compact", children: t4("workflowExecutions.history.compensateInputLabel") }),
                  /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(
                    import_ui343.CodeBlock,
                    {
                      snippets: [
                        {
                          // TODO: Apply resolve value: packages/core/workflows-sdk/src/utils/composer/helpers/resolve-value.ts
                          code: JSON.stringify(
                            stepInvokeContext?.output?.compensateInput ?? {},
                            null,
                            2
                          ),
                          label: t4(
                            "workflowExecutions.history.compensateInputLabel"
                          ),
                          language: "json",
                          hideLineNumbers: true
                        }
                      ],
                      children: /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(import_ui343.CodeBlock.Body, {})
                    }
                  )
                ] }),
                stepError && /* @__PURE__ */ (0, import_jsx_runtime537.jsxs)("div", { className: "text-ui-fg-subtle flex flex-col gap-y-2", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(import_ui343.Text, { size: "small", leading: "compact", children: t4("workflowExecutions.history.errorLabel") }),
                  /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(
                    import_ui343.CodeBlock,
                    {
                      snippets: [
                        {
                          code: JSON.stringify(
                            {
                              error: stepError.error,
                              handlerType: stepError.handlerType
                            },
                            null,
                            2
                          ),
                          label: t4("workflowExecutions.history.errorLabel"),
                          language: "json",
                          hideLineNumbers: true
                        }
                      ],
                      children: /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(import_ui343.CodeBlock.Body, {})
                    }
                  )
                ] })
              ] }) })
            ] })
          ]
        }
      );
    };
    StepState = ({
      state,
      startedAt,
      isUnreachable
    }) => {
      const { t: t4 } = (0, import_react_i18next382.useTranslation)();
      const isFailed = state === "failed" /* FAILED */;
      const isRunning = state === "invoking" /* INVOKING */;
      const isSkipped = state === "skipped" /* SKIPPED */;
      const isSkippedFailure = state === "skipped_failure" /* SKIPPED_FAILURE */;
      if (isUnreachable) {
        return null;
      }
      if (isRunning) {
        return /* @__PURE__ */ (0, import_jsx_runtime537.jsxs)("div", { className: "flex items-center gap-x-1", children: [
          /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(import_ui343.Text, { size: "small", leading: "compact", className: "text-ui-fg-subtle", children: t4("workflowExecutions.history.runningState") }),
          /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(import_icons144.Spinner, { className: "text-ui-fg-interactive animate-spin" })
        ] });
      }
      let stateText;
      if (isSkipped) {
        stateText = t4("workflowExecutions.history.skippedState");
      } else if (isSkippedFailure) {
        stateText = t4("workflowExecutions.history.skippedFailureState");
      } else if (isFailed) {
        stateText = t4("workflowExecutions.history.failedState");
      }
      if (stateText !== null) {
        return /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(import_ui343.Text, { size: "small", leading: "compact", className: "text-ui-fg-subtle", children: stateText });
      }
      if (startedAt) {
        return /* @__PURE__ */ (0, import_jsx_runtime537.jsx)(import_ui343.Text, { size: "small", leading: "compact", className: "text-ui-fg-muted", children: (0, import_date_fns8.format)(startedAt, "dd MMM yyyy HH:mm:ss") });
      }
    };
  }
});

// src/routes/workflow-executions/workflow-execution-detail/components/workflow-execution-history-section/index.ts
var init_workflow_execution_history_section2 = __esm({
  "src/routes/workflow-executions/workflow-execution-detail/components/workflow-execution-history-section/index.ts"() {
    "use strict";
    init_workflow_execution_history_section();
  }
});

// src/routes/workflow-executions/workflow-execution-detail/components/workflow-execution-payload-section/workflow-execution-payload-section.tsx
var import_jsx_runtime538, WorkflowExecutionPayloadSection;
var init_workflow_execution_payload_section = __esm({
  "src/routes/workflow-executions/workflow-execution-detail/components/workflow-execution-payload-section/workflow-execution-payload-section.tsx"() {
    "use strict";
    init_json_view_section2();
    import_jsx_runtime538 = require("react/jsx-runtime");
    WorkflowExecutionPayloadSection = ({
      execution
    }) => {
      let payload = execution.context?.data?.payload;
      if (!payload) {
        return null;
      }
      if (typeof payload !== "object") {
        payload = { input: payload };
      }
      return /* @__PURE__ */ (0, import_jsx_runtime538.jsx)(JsonViewSection, { data: payload });
    };
  }
});

// src/routes/workflow-executions/workflow-execution-detail/components/workflow-execution-payload-section/index.ts
var init_workflow_execution_payload_section2 = __esm({
  "src/routes/workflow-executions/workflow-execution-detail/components/workflow-execution-payload-section/index.ts"() {
    "use strict";
    init_workflow_execution_payload_section();
  }
});

// src/routes/workflow-executions/workflow-execution-detail/components/workflow-execution-timeline-section/workflow-execution-timeline-section.tsx
var import_icons145, import_ui344, import_framer_motion3, import_react239, import_react_i18next383, import_react_router_dom182, import_jsx_runtime539, WorkflowExecutionTimelineSection, createNodeClusters, getNextCluster, defaultState, MAX_ZOOM, MIN_ZOOM, ZOOM_STEP, Canvas2, HorizontalArrow, MiddleArrow, EndArrow, Arrow3, Line, Node2;
var init_workflow_execution_timeline_section = __esm({
  "src/routes/workflow-executions/workflow-execution-detail/components/workflow-execution-timeline-section/workflow-execution-timeline-section.tsx"() {
    "use strict";
    import_icons145 = require("@medusajs/icons");
    import_ui344 = require("@medusajs/ui");
    import_framer_motion3 = require("framer-motion");
    import_react239 = require("react");
    import_react_i18next383 = require("react-i18next");
    import_react_router_dom182 = require("react-router-dom");
    init_constants19();
    import_jsx_runtime539 = require("react/jsx-runtime");
    WorkflowExecutionTimelineSection = ({
      execution
    }) => {
      const { t: t4 } = (0, import_react_i18next383.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime539.jsxs)(import_ui344.Container, { className: "overflow-hidden px-0 pb-8 pt-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime539.jsx)("div", { className: "flex items-center justify-between px-6 py-4", children: /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(import_ui344.Heading, { level: "h2", children: t4("general.timeline") }) }),
        /* @__PURE__ */ (0, import_jsx_runtime539.jsx)("div", { className: "w-full overflow-hidden border-y", children: /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(Canvas2, { execution }) })
      ] });
    };
    createNodeClusters = (steps) => {
      const actionableSteps = Object.values(steps).filter(
        (step) => step.id !== "_root"
      );
      const clusters = {};
      actionableSteps.forEach((step) => {
        if (!clusters[step.depth]) {
          clusters[step.depth] = [];
        }
        clusters[step.depth].push(step);
      });
      return clusters;
    };
    getNextCluster = (clusters, depth) => {
      const nextDepth = depth + 1;
      return clusters[nextDepth];
    };
    defaultState = {
      x: -860,
      y: -1020,
      scale: 1
    };
    MAX_ZOOM = 1.5;
    MIN_ZOOM = 0.5;
    ZOOM_STEP = 0.25;
    Canvas2 = ({
      execution
    }) => {
      const [zoom, setZoom] = (0, import_react239.useState)(1);
      const [isDragging, setIsDragging] = (0, import_react239.useState)(false);
      const scale = (0, import_framer_motion3.useMotionValue)(defaultState.scale);
      const x = (0, import_framer_motion3.useMotionValue)(defaultState.x);
      const y = (0, import_framer_motion3.useMotionValue)(defaultState.y);
      const controls = (0, import_framer_motion3.useAnimationControls)();
      const dragControls = (0, import_framer_motion3.useDragControls)();
      const dragConstraints = (0, import_react239.useRef)(null);
      const canZoomIn = zoom < MAX_ZOOM;
      const canZoomOut = zoom > MIN_ZOOM;
      (0, import_react239.useEffect)(() => {
        const unsubscribe = scale.on("change", (latest) => {
          setZoom(latest);
        });
        return () => {
          unsubscribe();
        };
      }, [scale]);
      const clusters = createNodeClusters(execution.execution?.steps || {});
      function scaleXandY(prevScale, newScale, x2, y2) {
        const scaleRatio = newScale / prevScale;
        return {
          x: x2 * scaleRatio,
          y: y2 * scaleRatio
        };
      }
      const changeZoom = (newScale) => {
        const { x: newX, y: newY } = scaleXandY(zoom, newScale, x.get(), y.get());
        setZoom(newScale);
        controls.set({ scale: newScale, x: newX, y: newY });
      };
      const zoomIn = () => {
        const curr = scale.get();
        if (curr < 1.5) {
          const newScale = curr + ZOOM_STEP;
          changeZoom(newScale);
        }
      };
      const zoomOut = () => {
        const curr = scale.get();
        if (curr > 0.5) {
          const newScale = curr - ZOOM_STEP;
          changeZoom(newScale);
        }
      };
      const resetCanvas = () => {
        controls.start(defaultState);
      };
      return /* @__PURE__ */ (0, import_jsx_runtime539.jsx)("div", { className: "h-[400px] w-full", children: /* @__PURE__ */ (0, import_jsx_runtime539.jsxs)("div", { ref: dragConstraints, className: "relative size-full", children: [
        /* @__PURE__ */ (0, import_jsx_runtime539.jsx)("div", { className: "relative size-full overflow-hidden object-contain", children: /* @__PURE__ */ (0, import_jsx_runtime539.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(
          import_framer_motion3.motion.div,
          {
            onMouseDown: () => setIsDragging(true),
            onMouseUp: () => setIsDragging(false),
            drag: true,
            dragConstraints,
            dragElastic: 0,
            dragMomentum: false,
            dragControls,
            initial: false,
            animate: controls,
            transition: { duration: 0.25 },
            style: {
              x,
              y,
              scale
            },
            className: (0, import_ui344.clx)(
              "bg-ui-bg-subtle relative size-[500rem] origin-top-left items-start justify-start overflow-hidden",
              "bg-[radial-gradient(var(--border-base)_1.5px,transparent_0)] bg-[length:20px_20px] bg-repeat",
              {
                "cursor-grab": !isDragging,
                "cursor-grabbing": isDragging
              }
            ),
            children: /* @__PURE__ */ (0, import_jsx_runtime539.jsx)("main", { className: "size-full", children: /* @__PURE__ */ (0, import_jsx_runtime539.jsx)("div", { className: "absolute left-[1100px] top-[1100px] flex select-none items-start", children: Object.entries(clusters).map(([depth, cluster]) => {
              const next = getNextCluster(clusters, Number(depth));
              return /* @__PURE__ */ (0, import_jsx_runtime539.jsxs)("div", { className: "flex items-start", children: [
                /* @__PURE__ */ (0, import_jsx_runtime539.jsx)("div", { className: "flex flex-col justify-center gap-y-2", children: cluster.map((step) => /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(Node2, { step }, step.id)) }),
                /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(Line, { next })
              ] }, depth);
            }) }) })
          }
        ) }) }),
        /* @__PURE__ */ (0, import_jsx_runtime539.jsxs)("div", { className: "bg-ui-bg-base shadow-borders-base text-ui-fg-subtle absolute bottom-4 left-6 flex h-7 items-center overflow-hidden rounded-md", children: [
          /* @__PURE__ */ (0, import_jsx_runtime539.jsxs)("div", { className: "flex items-center", children: [
            /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(
              "button",
              {
                onClick: zoomIn,
                type: "button",
                disabled: !canZoomIn,
                "aria-label": "Zoom in",
                className: "disabled:text-ui-fg-disabled transition-fg hover:bg-ui-bg-base-hover active:bg-ui-bg-base-pressed focus-visible:bg-ui-bg-base-pressed border-r p-1 outline-none",
                children: /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(import_icons145.PlusMini, {})
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime539.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime539.jsxs)(import_ui344.DropdownMenu, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(import_ui344.DropdownMenu.Trigger, { className: "disabled:text-ui-fg-disabled transition-fg hover:bg-ui-bg-base-hover active:bg-ui-bg-base-pressed focus-visible:bg-ui-bg-base-pressed flex w-[50px] items-center justify-center border-r p-1 outline-none", children: /* @__PURE__ */ (0, import_jsx_runtime539.jsxs)(
                import_ui344.Text,
                {
                  as: "span",
                  size: "xsmall",
                  leading: "compact",
                  className: "select-none tabular-nums",
                  children: [
                    Math.round(zoom * 100),
                    "%"
                  ]
                }
              ) }),
              /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(import_ui344.DropdownMenu.Content, { children: [50, 75, 100, 125, 150].map((value) => /* @__PURE__ */ (0, import_jsx_runtime539.jsxs)(
                import_ui344.DropdownMenu.Item,
                {
                  onClick: () => changeZoom(value / 100),
                  children: [
                    value,
                    "%"
                  ]
                },
                value
              )) })
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(
              "button",
              {
                onClick: zoomOut,
                type: "button",
                disabled: !canZoomOut,
                "aria-label": "Zoom out",
                className: "disabled:text-ui-fg-disabled transition-fg hover:bg-ui-bg-base-hover active:bg-ui-bg-base-pressed focus-visible:bg-ui-bg-base-pressed border-r p-1 outline-none",
                children: /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(import_icons145.MinusMini, {})
              }
            )
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(
            "button",
            {
              onClick: resetCanvas,
              type: "button",
              "aria-label": "Reset canvas",
              className: "disabled:text-ui-fg-disabled transition-fg hover:bg-ui-bg-base-hover active:bg-ui-bg-base-pressed focus-visible:bg-ui-bg-base-pressed p-1 outline-none",
              children: /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(import_icons145.ArrowPathMini, {})
            }
          )
        ] })
      ] }) });
    };
    HorizontalArrow = () => {
      return /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(
        "svg",
        {
          width: "42",
          height: "12",
          viewBox: "0 0 42 12",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
          children: /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(
            "path",
            {
              d: "M41.5303 6.53033C41.8232 6.23744 41.8232 5.76256 41.5303 5.46967L36.7574 0.696699C36.4645 0.403806 35.9896 0.403806 35.6967 0.696699C35.4038 0.989593 35.4038 1.46447 35.6967 1.75736L39.9393 6L35.6967 10.2426C35.4038 10.5355 35.4038 11.0104 35.6967 11.3033C35.9896 11.5962 36.4645 11.5962 36.7574 11.3033L41.5303 6.53033ZM0.999996 5.25C0.585785 5.25 0.249996 5.58579 0.249996 6C0.249996 6.41421 0.585785 6.75 0.999996 6.75V5.25ZM41 5.25L0.999996 5.25V6.75L41 6.75V5.25Z",
              fill: "var(--border-strong)"
            }
          )
        }
      );
    };
    MiddleArrow = () => {
      return /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(
        "svg",
        {
          width: "22",
          height: "38",
          viewBox: "0 0 22 38",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
          className: "-mt-[6px]",
          children: /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(
            "path",
            {
              d: "M0.999878 32H0.249878V32.75H0.999878V32ZM21.5284 32.5303C21.8213 32.2374 21.8213 31.7626 21.5284 31.4697L16.7554 26.6967C16.4625 26.4038 15.9876 26.4038 15.6947 26.6967C15.4019 26.9896 15.4019 27.4645 15.6947 27.7574L19.9374 32L15.6947 36.2426C15.4019 36.5355 15.4019 37.0104 15.6947 37.3033C15.9876 37.5962 16.4625 37.5962 16.7554 37.3033L21.5284 32.5303ZM0.249878 0L0.249878 32H1.74988L1.74988 0H0.249878ZM0.999878 32.75L20.998 32.75V31.25L0.999878 31.25V32.75Z",
              fill: "var(--border-strong)"
            }
          )
        }
      );
    };
    EndArrow = () => {
      return /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(
        "svg",
        {
          width: "22",
          height: "38",
          viewBox: "0 0 22 38",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
          className: "-mt-[6px]",
          children: /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(
            "path",
            {
              d: "M21.5284 32.5303C21.8213 32.2374 21.8213 31.7626 21.5284 31.4697L16.7554 26.6967C16.4625 26.4038 15.9876 26.4038 15.6947 26.6967C15.4019 26.9896 15.4019 27.4645 15.6947 27.7574L19.9374 32L15.6947 36.2426C15.4019 36.5355 15.4019 37.0104 15.6947 37.3033C15.9876 37.5962 16.4625 37.5962 16.7554 37.3033L21.5284 32.5303ZM0.249878 0L0.249878 28H1.74988L1.74988 0H0.249878ZM4.99988 32.75L20.998 32.75V31.25L4.99988 31.25V32.75ZM0.249878 28C0.249878 30.6234 2.37653 32.75 4.99988 32.75V31.25C3.20495 31.25 1.74988 29.7949 1.74988 28H0.249878Z",
              fill: "var(--border-strong)"
            }
          )
        }
      );
    };
    Arrow3 = ({ depth }) => {
      if (depth === 1) {
        return /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(HorizontalArrow, {});
      }
      if (depth === 2) {
        return /* @__PURE__ */ (0, import_jsx_runtime539.jsxs)("div", { className: "flex flex-col items-end", children: [
          /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(HorizontalArrow, {}),
          /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(EndArrow, {})
        ] });
      }
      const inbetween = Array.from({ length: depth - 2 }).map((_, index2) => /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(MiddleArrow, {}, index2));
      return /* @__PURE__ */ (0, import_jsx_runtime539.jsxs)("div", { className: "flex flex-col items-end", children: [
        /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(HorizontalArrow, {}),
        inbetween,
        /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(EndArrow, {})
      ] });
    };
    Line = ({ next }) => {
      if (!next) {
        return null;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime539.jsx)("div", { className: "-ml-[5px] -mr-[7px] w-[60px] pr-[7px]", children: /* @__PURE__ */ (0, import_jsx_runtime539.jsxs)("div", { className: "flex min-h-[24px] w-full items-start", children: [
        /* @__PURE__ */ (0, import_jsx_runtime539.jsx)("div", { className: "flex h-6 w-2.5 items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime539.jsx)("div", { className: "bg-ui-button-neutral shadow-borders-base size-2.5 shrink-0 rounded-full" }) }),
        /* @__PURE__ */ (0, import_jsx_runtime539.jsx)("div", { className: "pt-1.5", children: /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(Arrow3, { depth: next.length }) })
      ] }) });
    };
    Node2 = ({ step }) => {
      if (step.id === "_root") {
        return null;
      }
      const stepId = step.id.split(".").pop();
      const handleScrollTo = () => {
        if (!stepId) {
          return;
        }
        const historyItem = document.getElementById(stepId);
        if (!historyItem) {
          return;
        }
        setTimeout(() => {
          historyItem.scrollIntoView({
            behavior: "smooth",
            block: "end"
          });
        }, 100);
      };
      return /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(
        import_react_router_dom182.Link,
        {
          to: `#${stepId}`,
          onClick: handleScrollTo,
          className: "focus-visible:shadow-borders-focus transition-fg rounded-md outline-none",
          children: /* @__PURE__ */ (0, import_jsx_runtime539.jsxs)(
            "div",
            {
              className: "bg-ui-bg-base shadow-borders-base flex min-w-[120px] items-center gap-x-0.5 rounded-md p-0.5",
              "data-step-id": step.id,
              children: [
                /* @__PURE__ */ (0, import_jsx_runtime539.jsx)("div", { className: "flex size-5 items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(
                  "div",
                  {
                    className: (0, import_ui344.clx)(
                      "size-2 rounded-sm shadow-[inset_0_0_0_1px_rgba(0,0,0,0.12)]",
                      {
                        "bg-ui-tag-neutral-bg": STEP_SKIPPED_STATES.includes(
                          step.invoke.state
                        ),
                        "bg-ui-tag-green-icon": STEP_OK_STATES.includes(
                          step.invoke.state
                        ),
                        "bg-ui-tag-orange-icon": STEP_IN_PROGRESS_STATES.includes(
                          step.invoke.state
                        ),
                        "bg-ui-tag-red-icon": STEP_ERROR_STATES.includes(
                          step.invoke.state
                        ),
                        "bg-ui-tag-neutral-icon": STEP_INACTIVE_STATES.includes(
                          step.invoke.state
                        )
                      }
                    )
                  }
                ) }),
                /* @__PURE__ */ (0, import_jsx_runtime539.jsx)(
                  import_ui344.Text,
                  {
                    size: "xsmall",
                    leading: "compact",
                    weight: "plus",
                    className: "select-none",
                    children: stepId
                  }
                )
              ]
            }
          )
        }
      );
    };
  }
});

// src/routes/workflow-executions/workflow-execution-detail/components/workflow-execution-timeline-section/index.ts
var init_workflow_execution_timeline_section2 = __esm({
  "src/routes/workflow-executions/workflow-execution-detail/components/workflow-execution-timeline-section/index.ts"() {
    "use strict";
    init_workflow_execution_timeline_section();
  }
});

// src/routes/workflow-executions/workflow-execution-detail/workflow-detail.tsx
var import_react_router_dom183, import_jsx_runtime540, ExecutionDetail;
var init_workflow_detail = __esm({
  "src/routes/workflow-executions/workflow-execution-detail/workflow-detail.tsx"() {
    "use strict";
    import_react_router_dom183 = require("react-router-dom");
    init_skeleton2();
    init_pages();
    init_extensions();
    init_workflow_executions();
    init_workflow_execution_general_section2();
    init_workflow_execution_history_section2();
    init_workflow_execution_payload_section2();
    init_workflow_execution_timeline_section2();
    import_jsx_runtime540 = require("react/jsx-runtime");
    ExecutionDetail = () => {
      const { id: id2 } = (0, import_react_router_dom183.useParams)();
      const { workflow_execution, isLoading, isError, error } = useWorkflowExecution(id2);
      const { getWidgets } = useDashboardExtension();
      if (isLoading || !workflow_execution) {
        return /* @__PURE__ */ (0, import_jsx_runtime540.jsx)(SingleColumnPageSkeleton, { sections: 4, showJSON: true });
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime540.jsxs)(
        SingleColumnPage,
        {
          widgets: {
            after: getWidgets("workflow.details.after"),
            before: getWidgets("workflow.details.before")
          },
          data: workflow_execution,
          showJSON: true,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime540.jsx)(WorkflowExecutionGeneralSection, { execution: workflow_execution }),
            /* @__PURE__ */ (0, import_jsx_runtime540.jsx)(WorkflowExecutionTimelineSection, { execution: workflow_execution }),
            /* @__PURE__ */ (0, import_jsx_runtime540.jsx)(WorkflowExecutionPayloadSection, { execution: workflow_execution }),
            /* @__PURE__ */ (0, import_jsx_runtime540.jsx)(WorkflowExecutionHistorySection, { execution: workflow_execution })
          ]
        }
      );
    };
  }
});

// src/routes/workflow-executions/workflow-execution-detail/index.ts
var workflow_execution_detail_exports = {};
__export(workflow_execution_detail_exports, {
  Component: () => ExecutionDetail
});
var init_workflow_execution_detail = __esm({
  "src/routes/workflow-executions/workflow-execution-detail/index.ts"() {
    "use strict";
    init_workflow_detail();
  }
});

// src/routes/product-types/common/hooks/use-delete-product-type-action.tsx
var import_ui345, import_react_i18next384, useDeleteProductTypeAction;
var init_use_delete_product_type_action = __esm({
  "src/routes/product-types/common/hooks/use-delete-product-type-action.tsx"() {
    "use strict";
    import_ui345 = require("@medusajs/ui");
    import_react_i18next384 = require("react-i18next");
    init_product_types();
    useDeleteProductTypeAction = (id2) => {
      const { t: t4 } = (0, import_react_i18next384.useTranslation)();
      const prompt = (0, import_ui345.usePrompt)();
      const { mutateAsync } = useDeleteProductType(id2);
      const handleDelete = async () => {
        const result = await prompt({
          title: t4("general.areYouSure"),
          description: t4("productTypes.delete.confirmation"),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!result) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            import_ui345.toast.success(t4("productTypes.delete.successToast"));
          },
          onError: (e) => {
            import_ui345.toast.error(e.message);
          }
        });
      };
      return handleDelete;
    };
  }
});

// src/routes/product-types/product-type-list/components/product-type-list-table/product-table-row-actions.tsx
var import_icons146, import_react_i18next385, import_jsx_runtime541, ProductTypeRowActions;
var init_product_table_row_actions = __esm({
  "src/routes/product-types/product-type-list/components/product-type-list-table/product-table-row-actions.tsx"() {
    "use strict";
    import_icons146 = require("@medusajs/icons");
    import_react_i18next385 = require("react-i18next");
    init_action_menu2();
    init_use_delete_product_type_action();
    import_jsx_runtime541 = require("react/jsx-runtime");
    ProductTypeRowActions = ({
      productType
    }) => {
      const { t: t4 } = (0, import_react_i18next385.useTranslation)();
      const handleDelete = useDeleteProductTypeAction(productType.id);
      return /* @__PURE__ */ (0, import_jsx_runtime541.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  label: t4("actions.edit"),
                  icon: /* @__PURE__ */ (0, import_jsx_runtime541.jsx)(import_icons146.PencilSquare, {}),
                  to: `/settings/product-types/${productType.id}/edit`
                }
              ]
            },
            {
              actions: [
                {
                  label: t4("actions.delete"),
                  icon: /* @__PURE__ */ (0, import_jsx_runtime541.jsx)(import_icons146.Trash, {}),
                  onClick: handleDelete
                }
              ]
            }
          ]
        }
      );
    };
  }
});

// src/routes/product-types/product-type-list/components/product-type-list-table/product-type-list-table.tsx
var import_ui346, import_react_query80, import_react_table76, import_react240, import_react_i18next386, import_react_router_dom184, import_jsx_runtime542, PAGE_SIZE57, ProductTypeListTable, columnHelper78, useColumns41;
var init_product_type_list_table = __esm({
  "src/routes/product-types/product-type-list/components/product-type-list-table/product-type-list-table.tsx"() {
    "use strict";
    import_ui346 = require("@medusajs/ui");
    import_react_query80 = require("@tanstack/react-query");
    import_react_table76 = require("@tanstack/react-table");
    import_react240 = require("react");
    import_react_i18next386 = require("react-i18next");
    import_react_router_dom184 = require("react-router-dom");
    init_data_table2();
    init_product_types();
    init_use_product_type_table_columns();
    init_use_product_type_table_filters();
    init_use_product_type_table_query();
    init_use_data_table();
    init_product_table_row_actions();
    import_jsx_runtime542 = require("react/jsx-runtime");
    PAGE_SIZE57 = 20;
    ProductTypeListTable = () => {
      const { t: t4 } = (0, import_react_i18next386.useTranslation)();
      const { searchParams, raw } = useProductTypeTableQuery({
        pageSize: PAGE_SIZE57
      });
      const { product_types, count: count3, isLoading, isError, error } = useProductTypes(
        searchParams,
        {
          placeholderData: import_react_query80.keepPreviousData
        }
      );
      const filters = useProductTypeTableFilters();
      const columns = useColumns41();
      const { table } = useDataTable({
        columns,
        data: product_types,
        count: count3,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE57
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime542.jsxs)(import_ui346.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime542.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime542.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime542.jsx)(import_ui346.Heading, { children: t4("productTypes.domain") }),
            /* @__PURE__ */ (0, import_jsx_runtime542.jsx)(import_ui346.Text, { className: "text-ui-fg-subtle", size: "small", children: t4("productTypes.subtitle") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime542.jsx)(import_ui346.Button, { size: "small", variant: "secondary", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime542.jsx)(import_react_router_dom184.Link, { to: "create", children: t4("actions.create") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime542.jsx)(
          DataTable,
          {
            table,
            filters,
            isLoading,
            columns,
            pageSize: PAGE_SIZE57,
            count: count3,
            orderBy: [
              { key: "value", label: t4("fields.value") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            navigateTo: ({ original }) => original.id,
            queryObject: raw,
            pagination: true,
            search: true
          }
        )
      ] });
    };
    columnHelper78 = (0, import_react_table76.createColumnHelper)();
    useColumns41 = () => {
      const base = useProductTypeTableColumns();
      return (0, import_react240.useMemo)(
        () => [
          ...base,
          columnHelper78.display({
            id: "actions",
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime542.jsx)(ProductTypeRowActions, { productType: row.original });
            }
          })
        ],
        [base]
      );
    };
  }
});

// src/routes/product-types/product-type-list/components/product-type-list-table/index.ts
var init_product_type_list_table2 = __esm({
  "src/routes/product-types/product-type-list/components/product-type-list-table/index.ts"() {
    "use strict";
    init_product_type_list_table();
  }
});

// src/routes/product-types/product-type-list/product-type-list.tsx
var import_jsx_runtime543, ProductTypeList;
var init_product_type_list = __esm({
  "src/routes/product-types/product-type-list/product-type-list.tsx"() {
    "use strict";
    init_pages();
    init_extensions();
    init_product_type_list_table2();
    import_jsx_runtime543 = require("react/jsx-runtime");
    ProductTypeList = () => {
      const { getWidgets } = useDashboardExtension();
      return /* @__PURE__ */ (0, import_jsx_runtime543.jsx)(
        SingleColumnPage,
        {
          widgets: {
            after: getWidgets("product_type.list.after"),
            before: getWidgets("product_type.list.before")
          },
          children: /* @__PURE__ */ (0, import_jsx_runtime543.jsx)(ProductTypeListTable, {})
        }
      );
    };
  }
});

// src/routes/product-types/product-type-list/index.ts
var product_type_list_exports = {};
__export(product_type_list_exports, {
  Component: () => ProductTypeList
});
var init_product_type_list2 = __esm({
  "src/routes/product-types/product-type-list/index.ts"() {
    "use strict";
    init_product_type_list();
  }
});

// src/routes/product-types/product-type-create/components/create-product-type-form/create-product-type-form.tsx
var import_zod115, import_ui347, import_react_hook_form108, import_react_i18next387, import_zod116, import_jsx_runtime544, CreateProductTypeSchema, CreateProductTypeForm;
var init_create_product_type_form = __esm({
  "src/routes/product-types/product-type-create/components/create-product-type-form/create-product-type-form.tsx"() {
    "use strict";
    import_zod115 = require("@hookform/resolvers/zod");
    import_ui347 = require("@medusajs/ui");
    import_react_hook_form108 = require("react-hook-form");
    import_react_i18next387 = require("react-i18next");
    import_zod116 = require("zod");
    init_form2();
    init_modals();
    init_keybound_form2();
    init_product_types();
    import_jsx_runtime544 = require("react/jsx-runtime");
    CreateProductTypeSchema = import_zod116.z.object({
      value: import_zod116.z.string().min(1)
    });
    CreateProductTypeForm = () => {
      const { t: t4 } = (0, import_react_i18next387.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form108.useForm)({
        defaultValues: {
          value: ""
        },
        resolver: (0, import_zod115.zodResolver)(CreateProductTypeSchema)
      });
      const { mutateAsync, isPending } = useCreateProductType();
      const handleSubmit = form.handleSubmit(
        async (values) => {
          await mutateAsync(values, {
            onSuccess: ({ product_type }) => {
              import_ui347.toast.success(
                t4("productTypes.create.successToast", {
                  value: product_type.value
                })
              );
              handleSuccess(`/settings/product-types/${product_type.id}`);
            },
            onError: (e) => {
              import_ui347.toast.error(e.message);
            }
          });
        }
      );
      return /* @__PURE__ */ (0, import_jsx_runtime544.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime544.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime544.jsx)(RouteFocusModal.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime544.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime544.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime544.jsx)(import_ui347.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime544.jsx)(
                import_ui347.Button,
                {
                  size: "small",
                  variant: "primary",
                  type: "submit",
                  isLoading: isPending,
                  children: t4("actions.create")
                }
              )
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime544.jsx)(RouteFocusModal.Body, { className: "flex flex-col items-center overflow-y-auto p-16", children: /* @__PURE__ */ (0, import_jsx_runtime544.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8", children: [
              /* @__PURE__ */ (0, import_jsx_runtime544.jsxs)("div", { children: [
                /* @__PURE__ */ (0, import_jsx_runtime544.jsx)(import_ui347.Heading, { children: t4("productTypes.create.header") }),
                /* @__PURE__ */ (0, import_jsx_runtime544.jsx)(import_ui347.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("productTypes.create.hint") })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime544.jsx)("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2", children: /* @__PURE__ */ (0, import_jsx_runtime544.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "value",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime544.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime544.jsx)(Form.Label, { children: t4("productTypes.fields.value") }),
                      /* @__PURE__ */ (0, import_jsx_runtime544.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime544.jsx)(import_ui347.Input, { ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime544.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ) })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/product-types/product-type-create/components/create-product-type-form/index.ts
var init_create_product_type_form2 = __esm({
  "src/routes/product-types/product-type-create/components/create-product-type-form/index.ts"() {
    "use strict";
    init_create_product_type_form();
  }
});

// src/routes/product-types/product-type-create/product-type-create.tsx
var import_jsx_runtime545, ProductTypeCreate;
var init_product_type_create = __esm({
  "src/routes/product-types/product-type-create/product-type-create.tsx"() {
    "use strict";
    init_modals();
    init_create_product_type_form2();
    import_jsx_runtime545 = require("react/jsx-runtime");
    ProductTypeCreate = () => {
      return /* @__PURE__ */ (0, import_jsx_runtime545.jsx)(RouteFocusModal, { children: /* @__PURE__ */ (0, import_jsx_runtime545.jsx)(CreateProductTypeForm, {}) });
    };
  }
});

// src/routes/product-types/product-type-create/index.ts
var product_type_create_exports = {};
__export(product_type_create_exports, {
  Component: () => ProductTypeCreate
});
var init_product_type_create2 = __esm({
  "src/routes/product-types/product-type-create/index.ts"() {
    "use strict";
    init_product_type_create();
  }
});

// src/routes/product-types/product-type-detail/loader.ts
var productTypeDetailQuery, productTypeLoader;
var init_loader26 = __esm({
  "src/routes/product-types/product-type-detail/loader.ts"() {
    "use strict";
    init_product_types();
    init_client2();
    init_query_client();
    productTypeDetailQuery = (id2) => ({
      queryKey: productTypesQueryKeys.detail(id2),
      queryFn: async () => sdk.admin.productType.retrieve(id2)
    });
    productTypeLoader = async ({ params: params2 }) => {
      const id2 = params2.id;
      const query = productTypeDetailQuery(id2);
      return queryClient.getQueryData(
        query.queryKey
      ) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/routes/product-types/product-type-detail/components/product-type-general-section/product-type-general-section.tsx
var import_icons147, import_ui348, import_react_i18next388, import_jsx_runtime546, ProductTypeGeneralSection;
var init_product_type_general_section = __esm({
  "src/routes/product-types/product-type-detail/components/product-type-general-section/product-type-general-section.tsx"() {
    "use strict";
    import_icons147 = require("@medusajs/icons");
    import_ui348 = require("@medusajs/ui");
    import_react_i18next388 = require("react-i18next");
    init_action_menu2();
    init_use_delete_product_type_action();
    import_jsx_runtime546 = require("react/jsx-runtime");
    ProductTypeGeneralSection = ({
      productType
    }) => {
      const { t: t4 } = (0, import_react_i18next388.useTranslation)();
      const handleDelete = useDeleteProductTypeAction(productType.id);
      return /* @__PURE__ */ (0, import_jsx_runtime546.jsxs)(import_ui348.Container, { className: "flex items-center justify-between", children: [
        /* @__PURE__ */ (0, import_jsx_runtime546.jsx)(import_ui348.Heading, { children: productType.value }),
        /* @__PURE__ */ (0, import_jsx_runtime546.jsx)(
          ActionMenu,
          {
            groups: [
              {
                actions: [
                  {
                    label: t4("actions.edit"),
                    icon: /* @__PURE__ */ (0, import_jsx_runtime546.jsx)(import_icons147.PencilSquare, {}),
                    to: "edit"
                  }
                ]
              },
              {
                actions: [
                  {
                    label: t4("actions.delete"),
                    icon: /* @__PURE__ */ (0, import_jsx_runtime546.jsx)(import_icons147.Trash, {}),
                    onClick: handleDelete
                  }
                ]
              }
            ]
          }
        )
      ] });
    };
  }
});

// src/routes/product-types/product-type-detail/components/product-type-general-section/index.ts
var init_product_type_general_section2 = __esm({
  "src/routes/product-types/product-type-detail/components/product-type-general-section/index.ts"() {
    "use strict";
    init_product_type_general_section();
  }
});

// src/routes/product-types/product-type-detail/components/product-type-product-section/product-type-product-section.tsx
var import_ui349, import_react_i18next389, import_jsx_runtime547, PAGE_SIZE58, ProductTypeProductSection;
var init_product_type_product_section = __esm({
  "src/routes/product-types/product-type-detail/components/product-type-product-section/product-type-product-section.tsx"() {
    "use strict";
    import_ui349 = require("@medusajs/ui");
    import_react_i18next389 = require("react-i18next");
    init_data_table2();
    init_products();
    init_use_product_table_columns();
    init_use_product_table_filters();
    init_use_product_table_query();
    init_use_data_table();
    import_jsx_runtime547 = require("react/jsx-runtime");
    PAGE_SIZE58 = 10;
    ProductTypeProductSection = ({
      productType
    }) => {
      const { t: t4 } = (0, import_react_i18next389.useTranslation)();
      const { searchParams, raw } = useProductTableQuery({
        pageSize: PAGE_SIZE58
      });
      const { products, count: count3, isPending, isError, error } = useProducts({
        ...searchParams,
        type_id: [productType.id]
      });
      const filters = useProductTableFilters(["product_types"]);
      const columns = useProductTableColumns();
      const { table } = useDataTable({
        columns,
        data: products,
        count: products?.length || 0,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE58
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime547.jsxs)(import_ui349.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime547.jsx)("div", { className: "px-6 py-4", children: /* @__PURE__ */ (0, import_jsx_runtime547.jsx)(import_ui349.Heading, { level: "h2", children: t4("products.domain") }) }),
        /* @__PURE__ */ (0, import_jsx_runtime547.jsx)(
          DataTable,
          {
            table,
            filters,
            isLoading: isPending,
            columns,
            count: count3,
            pageSize: PAGE_SIZE58,
            navigateTo: ({ original }) => `/products/${original.id}`,
            orderBy: [
              { key: "title", label: t4("fields.title") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            queryObject: raw,
            search: true,
            pagination: true
          }
        )
      ] });
    };
  }
});

// src/routes/product-types/product-type-detail/components/product-type-product-section/index.ts
var init_product_type_product_section2 = __esm({
  "src/routes/product-types/product-type-detail/components/product-type-product-section/index.ts"() {
    "use strict";
    init_product_type_product_section();
  }
});

// src/routes/product-types/product-type-detail/product-type-detail.tsx
var import_react_router_dom185, import_jsx_runtime548, ProductTypeDetail;
var init_product_type_detail = __esm({
  "src/routes/product-types/product-type-detail/product-type-detail.tsx"() {
    "use strict";
    import_react_router_dom185 = require("react-router-dom");
    init_skeleton2();
    init_pages();
    init_extensions();
    init_product_types();
    init_product_type_general_section2();
    init_product_type_product_section2();
    import_jsx_runtime548 = require("react/jsx-runtime");
    ProductTypeDetail = () => {
      const { id: id2 } = (0, import_react_router_dom185.useParams)();
      const initialData = (0, import_react_router_dom185.useLoaderData)();
      const { product_type, isPending, isError, error } = useProductType(
        id2,
        void 0,
        {
          initialData
        }
      );
      const { getWidgets } = useDashboardExtension();
      if (isPending || !product_type) {
        return /* @__PURE__ */ (0, import_jsx_runtime548.jsx)(SingleColumnPageSkeleton, { sections: 2, showJSON: true, showMetadata: true });
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime548.jsxs)(
        SingleColumnPage,
        {
          widgets: {
            after: getWidgets("product_type.details.after"),
            before: getWidgets("product_type.details.before")
          },
          showJSON: true,
          showMetadata: true,
          data: product_type,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime548.jsx)(ProductTypeGeneralSection, { productType: product_type }),
            /* @__PURE__ */ (0, import_jsx_runtime548.jsx)(ProductTypeProductSection, { productType: product_type })
          ]
        }
      );
    };
  }
});

// src/routes/product-types/product-type-detail/index.ts
var product_type_detail_exports = {};
__export(product_type_detail_exports, {
  Component: () => ProductTypeDetail,
  loader: () => productTypeLoader
});
var init_product_type_detail2 = __esm({
  "src/routes/product-types/product-type-detail/index.ts"() {
    "use strict";
    init_loader26();
    init_product_type_detail();
  }
});

// src/routes/product-types/product-type-edit/components/edit-product-type-form/edit-product-type-form.tsx
var import_zod117, import_ui350, import_react_hook_form109, import_react_i18next390, import_zod118, import_jsx_runtime549, EditProductTypeSchema, EditProductTypeForm;
var init_edit_product_type_form = __esm({
  "src/routes/product-types/product-type-edit/components/edit-product-type-form/edit-product-type-form.tsx"() {
    "use strict";
    import_zod117 = require("@hookform/resolvers/zod");
    import_ui350 = require("@medusajs/ui");
    import_react_hook_form109 = require("react-hook-form");
    import_react_i18next390 = require("react-i18next");
    import_zod118 = require("zod");
    init_form2();
    init_modals();
    init_keybound_form2();
    init_product_types();
    import_jsx_runtime549 = require("react/jsx-runtime");
    EditProductTypeSchema = import_zod118.z.object({
      value: import_zod118.z.string().min(1)
    });
    EditProductTypeForm = ({
      productType
    }) => {
      const { t: t4 } = (0, import_react_i18next390.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form109.useForm)({
        defaultValues: {
          value: productType.value
        },
        resolver: (0, import_zod117.zodResolver)(EditProductTypeSchema)
      });
      const { mutateAsync, isPending } = useUpdateProductType(productType.id);
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(
          {
            value: data.value
          },
          {
            onSuccess: ({ product_type }) => {
              import_ui350.toast.success(
                t4("productTypes.edit.successToast", {
                  value: product_type.value
                })
              );
              handleSuccess();
            },
            onError: (error) => {
              import_ui350.toast.error(error.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime549.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime549.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex flex-1 flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime549.jsx)(RouteDrawer.Body, { className: "flex flex-1 flex-col gap-y-8 overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime549.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "value",
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime549.jsxs)(Form.Item, { children: [
                    /* @__PURE__ */ (0, import_jsx_runtime549.jsx)(Form.Label, { children: t4("productTypes.fields.value") }),
                    /* @__PURE__ */ (0, import_jsx_runtime549.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime549.jsx)(import_ui350.Input, { ...field }) }),
                    /* @__PURE__ */ (0, import_jsx_runtime549.jsx)(Form.ErrorMessage, {})
                  ] });
                }
              }
            ) }),
            /* @__PURE__ */ (0, import_jsx_runtime549.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime549.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime549.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime549.jsx)(import_ui350.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime549.jsx)(import_ui350.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/product-types/product-type-edit/components/edit-product-type-form/index.ts
var init_edit_product_type_form2 = __esm({
  "src/routes/product-types/product-type-edit/components/edit-product-type-form/index.ts"() {
    "use strict";
    init_edit_product_type_form();
  }
});

// src/routes/product-types/product-type-edit/product-type-edit.tsx
var import_ui351, import_react_i18next391, import_react_router_dom186, import_jsx_runtime550, ProductTypeEdit;
var init_product_type_edit = __esm({
  "src/routes/product-types/product-type-edit/product-type-edit.tsx"() {
    "use strict";
    import_ui351 = require("@medusajs/ui");
    import_react_i18next391 = require("react-i18next");
    import_react_router_dom186 = require("react-router-dom");
    init_modals();
    init_product_types();
    init_edit_product_type_form2();
    import_jsx_runtime550 = require("react/jsx-runtime");
    ProductTypeEdit = () => {
      const { id: id2 } = (0, import_react_router_dom186.useParams)();
      const { t: t4 } = (0, import_react_i18next391.useTranslation)();
      const { product_type, isPending, isError, error } = useProductType(id2);
      const ready = !isPending && !!product_type;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime550.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime550.jsx)(RouteDrawer.Header, { children: /* @__PURE__ */ (0, import_jsx_runtime550.jsx)(import_ui351.Heading, { children: t4("productTypes.edit.header") }) }),
        ready && /* @__PURE__ */ (0, import_jsx_runtime550.jsx)(EditProductTypeForm, { productType: product_type })
      ] });
    };
  }
});

// src/routes/product-types/product-type-edit/index.ts
var product_type_edit_exports = {};
__export(product_type_edit_exports, {
  Component: () => ProductTypeEdit
});
var init_product_type_edit2 = __esm({
  "src/routes/product-types/product-type-edit/index.ts"() {
    "use strict";
    init_product_type_edit();
  }
});

// src/routes/api-key-management/common/constants.ts
var init_constants20 = __esm({
  "src/routes/api-key-management/common/constants.ts"() {
    "use strict";
  }
});

// src/routes/api-key-management/common/utils.ts
function getApiKeyTypeFromPathname(pathname) {
  const isSecretKey = pathname.startsWith("/settings/secret-api-keys");
  switch (isSecretKey) {
    case true:
      return "secret" /* SECRET */;
    case false:
      return "publishable" /* PUBLISHABLE */;
  }
}
function getApiKeyStatusProps(revokedAt, t4) {
  if (!revokedAt) {
    return {
      color: "green",
      label: t4("apiKeyManagement.status.active")
    };
  }
  return {
    color: "red",
    label: t4("apiKeyManagement.status.revoked")
  };
}
function getApiKeyTypeProps(type, t4) {
  if (type === "publishable" /* PUBLISHABLE */) {
    return {
      color: "green",
      label: t4("apiKeyManagement.type.publishable")
    };
  }
  return {
    color: "blue",
    label: t4("apiKeyManagement.type.secret")
  };
}
var prettifyRedactedToken;
var init_utils13 = __esm({
  "src/routes/api-key-management/common/utils.ts"() {
    "use strict";
    init_constants20();
    prettifyRedactedToken = (token) => {
      return token.replace("***", `\u2022\u2022\u2022`);
    };
  }
});

// src/routes/api-key-management/api-key-management-list/components/api-key-management-list-table/api-key-row-actions.tsx
var import_icons148, import_ui352, import_react_i18next392, import_jsx_runtime551, ApiKeyRowActions;
var init_api_key_row_actions = __esm({
  "src/routes/api-key-management/api-key-management-list/components/api-key-management-list-table/api-key-row-actions.tsx"() {
    "use strict";
    import_icons148 = require("@medusajs/icons");
    import_ui352 = require("@medusajs/ui");
    import_react_i18next392 = require("react-i18next");
    init_action_menu2();
    init_api_keys();
    import_jsx_runtime551 = require("react/jsx-runtime");
    ApiKeyRowActions = ({
      apiKey
    }) => {
      const { mutateAsync: revokeAsync } = useRevokeApiKey(apiKey.id);
      const { mutateAsync: deleteAsync } = useDeleteApiKey(apiKey.id);
      const { t: t4 } = (0, import_react_i18next392.useTranslation)();
      const prompt = (0, import_ui352.usePrompt)();
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("apiKeyManagement.delete.warning", {
            title: apiKey.title
          }),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await deleteAsync(void 0, {
          onSuccess: () => {
            import_ui352.toast.success(
              t4("apiKeyManagement.delete.successToast", {
                title: apiKey.title
              })
            );
          },
          onError: (err) => {
            import_ui352.toast.error(err.message);
          }
        });
      };
      const handleRevoke = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("apiKeyManagement.revoke.warning", {
            title: apiKey.title
          }),
          confirmText: t4("apiKeyManagement.actions.revoke"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await revokeAsync(void 0, {
          onSuccess: () => {
            import_ui352.toast.success(
              t4("apiKeyManagement.revoke.successToast", {
                title: apiKey.title
              })
            );
          },
          onError: (err) => {
            import_ui352.toast.error(err.message);
          }
        });
      };
      const handleCopyToken = () => {
        navigator.clipboard.writeText(apiKey.token);
        import_ui352.toast.success(t4("apiKeyManagement.actions.copySuccessToast"));
      };
      return /* @__PURE__ */ (0, import_jsx_runtime551.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime551.jsx)(import_icons148.PencilSquare, {}),
                  label: t4("actions.edit"),
                  to: `${apiKey.id}/edit`
                },
                ...apiKey.type !== "secret" ? [
                  {
                    label: t4("apiKeyManagement.actions.copy"),
                    onClick: handleCopyToken,
                    icon: /* @__PURE__ */ (0, import_jsx_runtime551.jsx)(import_icons148.SquareTwoStack, {})
                  }
                ] : []
              ]
            },
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime551.jsx)(import_icons148.XCircle, {}),
                  label: t4("apiKeyManagement.actions.revoke"),
                  onClick: handleRevoke,
                  disabled: !!apiKey.revoked_at
                },
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime551.jsx)(import_icons148.Trash, {}),
                  label: t4("actions.delete"),
                  onClick: handleDelete,
                  disabled: !apiKey.revoked_at
                }
              ]
            }
          ]
        }
      );
    };
  }
});

// src/routes/api-key-management/api-key-management-list/components/api-key-management-list-table/use-api-key-management-table-columns.tsx
var import_ui353, import_react_table77, import_react241, import_react_i18next393, import_jsx_runtime552, columnHelper79, useApiKeyManagementTableColumns;
var init_use_api_key_management_table_columns = __esm({
  "src/routes/api-key-management/api-key-management-list/components/api-key-management-list-table/use-api-key-management-table-columns.tsx"() {
    "use strict";
    import_ui353 = require("@medusajs/ui");
    import_react_table77 = require("@tanstack/react-table");
    import_react241 = require("react");
    import_react_i18next393 = require("react-i18next");
    init_date_cell2();
    init_status_cell2();
    init_text_cell2();
    init_utils13();
    init_api_key_row_actions();
    import_jsx_runtime552 = require("react/jsx-runtime");
    columnHelper79 = (0, import_react_table77.createColumnHelper)();
    useApiKeyManagementTableColumns = () => {
      const { t: t4 } = (0, import_react_i18next393.useTranslation)();
      return (0, import_react241.useMemo)(
        () => [
          columnHelper79.accessor("title", {
            header: t4("fields.title"),
            cell: ({ getValue: getValue2 }) => /* @__PURE__ */ (0, import_jsx_runtime552.jsx)("div", { className: "flex size-full items-center", children: /* @__PURE__ */ (0, import_jsx_runtime552.jsx)("span", { className: "truncate", children: getValue2() }) })
          }),
          columnHelper79.accessor("redacted", {
            header: "Token",
            cell: ({ getValue: getValue2 }) => {
              const token = getValue2();
              return /* @__PURE__ */ (0, import_jsx_runtime552.jsx)(import_ui353.Badge, { size: "2xsmall", children: prettifyRedactedToken(token) });
            }
          }),
          columnHelper79.accessor("type", {
            header: t4("fields.type"),
            cell: ({ getValue: getValue2 }) => {
              const { label } = getApiKeyTypeProps(getValue2(), t4);
              return /* @__PURE__ */ (0, import_jsx_runtime552.jsx)(TextCell, { text: label });
            }
          }),
          columnHelper79.accessor("revoked_at", {
            header: t4("fields.status"),
            cell: ({ getValue: getValue2 }) => {
              const { color, label } = getApiKeyStatusProps(getValue2(), t4);
              return /* @__PURE__ */ (0, import_jsx_runtime552.jsx)(StatusCell, { color, children: label });
            }
          }),
          columnHelper79.accessor("last_used_at", {
            header: t4("apiKeyManagement.table.lastUsedAtHeader"),
            cell: ({ getValue: getValue2 }) => {
              const date3 = getValue2();
              return /* @__PURE__ */ (0, import_jsx_runtime552.jsx)(DateCell, { date: date3 });
            }
          }),
          columnHelper79.accessor("created_at", {
            header: t4("fields.created"),
            cell: ({ getValue: getValue2 }) => {
              const date3 = getValue2();
              return /* @__PURE__ */ (0, import_jsx_runtime552.jsx)(DateCell, { date: date3 });
            }
          }),
          columnHelper79.display({
            id: "actions",
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime552.jsx)(ApiKeyRowActions, { apiKey: row.original });
            }
          })
        ],
        [t4]
      );
    };
  }
});

// src/routes/api-key-management/api-key-management-list/components/api-key-management-list-table/use-api-key-management-table-filters.tsx
var import_react_i18next394, useApiKeyManagementTableFilters;
var init_use_api_key_management_table_filters = __esm({
  "src/routes/api-key-management/api-key-management-list/components/api-key-management-list-table/use-api-key-management-table-filters.tsx"() {
    "use strict";
    import_react_i18next394 = require("react-i18next");
    useApiKeyManagementTableFilters = () => {
      const { t: t4 } = (0, import_react_i18next394.useTranslation)();
      let filters = [];
      const dateFilters = [
        { label: t4("fields.createdAt"), key: "created_at", type: "date" },
        { label: t4("fields.updatedAt"), key: "updated_at", type: "date" },
        { label: t4("fields.revokedAt"), key: "revoked_at", type: "date" }
      ];
      filters = [...filters, ...dateFilters];
      return filters;
    };
  }
});

// src/routes/api-key-management/api-key-management-list/components/api-key-management-list-table/use-api-key-management-table-query.tsx
var useApiKeyManagementTableQuery;
var init_use_api_key_management_table_query = __esm({
  "src/routes/api-key-management/api-key-management-list/components/api-key-management-list-table/use-api-key-management-table-query.tsx"() {
    "use strict";
    init_use_query_params();
    useApiKeyManagementTableQuery = ({
      prefix,
      pageSize = 20
    }) => {
      const queryObject = useQueryParams(
        ["offset", "q", "created_at", "updated_at", "revoked_at", "order"],
        prefix
      );
      const { offset: offset4, created_at, updated_at, revoked_at, q, order } = queryObject;
      const searchParams = {
        limit: pageSize,
        offset: offset4 ? Number(offset4) : 0,
        created_at: created_at ? JSON.parse(created_at) : void 0,
        updated_at: updated_at ? JSON.parse(updated_at) : void 0,
        revoked_at: revoked_at ? JSON.parse(revoked_at) : void 0,
        order,
        q
      };
      return {
        searchParams,
        raw: queryObject
      };
    };
  }
});

// src/routes/api-key-management/api-key-management-list/components/api-key-management-list-table/api-key-management-list-table.tsx
var import_ui354, import_react_query81, import_react_i18next395, import_react_router_dom187, import_jsx_runtime553, PAGE_SIZE59, ApiKeyManagementListTable;
var init_api_key_management_list_table = __esm({
  "src/routes/api-key-management/api-key-management-list/components/api-key-management-list-table/api-key-management-list-table.tsx"() {
    "use strict";
    import_ui354 = require("@medusajs/ui");
    import_react_query81 = require("@tanstack/react-query");
    import_react_i18next395 = require("react-i18next");
    import_react_router_dom187 = require("react-router-dom");
    init_data_table2();
    init_api_keys();
    init_use_data_table();
    init_use_api_key_management_table_columns();
    init_use_api_key_management_table_filters();
    init_use_api_key_management_table_query();
    import_jsx_runtime553 = require("react/jsx-runtime");
    PAGE_SIZE59 = 20;
    ApiKeyManagementListTable = ({
      keyType
    }) => {
      const { t: t4 } = (0, import_react_i18next395.useTranslation)();
      const { searchParams, raw } = useApiKeyManagementTableQuery({
        pageSize: PAGE_SIZE59
      });
      const query = {
        ...searchParams,
        type: keyType,
        fields: "id,title,redacted,token,type,created_at,updated_at,revoked_at,last_used_at,created_by,revoked_by"
      };
      const { api_keys, count: count3, isLoading, isError, error } = useApiKeys(query, {
        placeholderData: import_react_query81.keepPreviousData
      });
      const filters = useApiKeyManagementTableFilters();
      const columns = useApiKeyManagementTableColumns();
      const { table } = useDataTable({
        data: api_keys || [],
        columns,
        count: count3,
        enablePagination: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE59
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime553.jsxs)(import_ui354.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime553.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime553.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime553.jsx)(import_ui354.Heading, { level: "h2", children: keyType === "publishable" ? t4(`apiKeyManagement.domain.publishable`) : t4("apiKeyManagement.domain.secret") }),
            /* @__PURE__ */ (0, import_jsx_runtime553.jsx)(import_ui354.Text, { className: "text-ui-fg-subtle", size: "small", children: keyType === "publishable" ? t4(`apiKeyManagement.subtitle.publishable`) : t4("apiKeyManagement.subtitle.secret") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime553.jsx)(import_react_router_dom187.Link, { to: "create", children: /* @__PURE__ */ (0, import_jsx_runtime553.jsx)(import_ui354.Button, { variant: "secondary", size: "small", children: t4("actions.create") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime553.jsx)(
          DataTable,
          {
            table,
            filters,
            columns,
            count: count3,
            pageSize: PAGE_SIZE59,
            orderBy: [
              { key: "title", label: t4("fields.title") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") },
              { key: "revoked_at", label: t4("fields.revokedAt") }
            ],
            navigateTo: (row) => row.id,
            pagination: true,
            search: true,
            queryObject: raw,
            isLoading
          }
        )
      ] });
    };
  }
});

// src/routes/api-key-management/api-key-management-list/components/api-key-management-list-table/index.ts
var init_api_key_management_list_table2 = __esm({
  "src/routes/api-key-management/api-key-management-list/components/api-key-management-list-table/index.ts"() {
    "use strict";
    init_api_key_management_list_table();
  }
});

// src/routes/api-key-management/api-key-management-list/api-key-management-list.tsx
var import_react_router_dom188, import_jsx_runtime554, ApiKeyManagementList;
var init_api_key_management_list = __esm({
  "src/routes/api-key-management/api-key-management-list/api-key-management-list.tsx"() {
    "use strict";
    import_react_router_dom188 = require("react-router-dom");
    init_utils13();
    init_api_key_management_list_table2();
    init_pages();
    init_extensions();
    import_jsx_runtime554 = require("react/jsx-runtime");
    ApiKeyManagementList = () => {
      const { pathname } = (0, import_react_router_dom188.useLocation)();
      const { getWidgets } = useDashboardExtension();
      const keyType = getApiKeyTypeFromPathname(pathname);
      return /* @__PURE__ */ (0, import_jsx_runtime554.jsx)(
        SingleColumnPage,
        {
          hasOutlet: true,
          widgets: {
            before: getWidgets("api_key.list.before"),
            after: getWidgets("api_key.list.after")
          },
          children: /* @__PURE__ */ (0, import_jsx_runtime554.jsx)(ApiKeyManagementListTable, { keyType })
        }
      );
    };
  }
});

// src/routes/api-key-management/api-key-management-list/index.ts
var api_key_management_list_exports = {};
__export(api_key_management_list_exports, {
  Component: () => ApiKeyManagementList
});
var init_api_key_management_list2 = __esm({
  "src/routes/api-key-management/api-key-management-list/index.ts"() {
    "use strict";
    init_api_key_management_list();
  }
});

// src/routes/api-key-management/api-key-management-create/components/api-key-create-form/api-key-create-form.tsx
function getRedactedKey(key) {
  if (!key) {
    return "";
  }
  const firstThree = key.slice(0, 4);
  const lastTwo = key.slice(-2);
  return `${firstThree}${"\u2022".repeat(key.length - 6)}${lastTwo}`;
}
var import_zod119, import_ui355, import_react_hook_form110, import_react_i18next396, zod43, import_icons149, import_react242, import_jsx_runtime555, ApiKeyCreateSchema, ApiKeyCreateForm;
var init_api_key_create_form = __esm({
  "src/routes/api-key-management/api-key-management-create/components/api-key-create-form/api-key-create-form.tsx"() {
    "use strict";
    import_zod119 = require("@hookform/resolvers/zod");
    import_ui355 = require("@medusajs/ui");
    import_react_hook_form110 = require("react-hook-form");
    import_react_i18next396 = require("react-i18next");
    zod43 = __toESM(require("zod"));
    import_icons149 = require("@medusajs/icons");
    import_react242 = require("react");
    init_form2();
    init_modals();
    init_keybound_form2();
    init_api_keys();
    init_constants20();
    import_jsx_runtime555 = require("react/jsx-runtime");
    ApiKeyCreateSchema = zod43.object({
      title: zod43.string().min(1)
    });
    ApiKeyCreateForm = ({ keyType }) => {
      const [createdKey, setCreatedKey] = (0, import_react242.useState)(null);
      const [showRedactedKey, setShowRedactedKey] = (0, import_react242.useState)(true);
      const { t: t4 } = (0, import_react_i18next396.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form110.useForm)({
        defaultValues: {
          title: ""
        },
        resolver: (0, import_zod119.zodResolver)(ApiKeyCreateSchema)
      });
      const { mutateAsync, isPending } = useCreateApiKey();
      const handleSubmit = form.handleSubmit(async (values) => {
        await mutateAsync(
          // @ts-ignore
          { title: values.title, type: keyType },
          {
            onSuccess: ({ api_key }) => {
              import_ui355.toast.success(t4("apiKeyManagement.create.successToast"));
              switch (keyType) {
                case "publishable" /* PUBLISHABLE */:
                  handleSuccess(`/settings/publishable-api-keys/${api_key.id}`);
                  break;
                case "secret" /* SECRET */:
                  setCreatedKey(api_key);
                  break;
              }
            },
            onError: (err) => {
              import_ui355.toast.error(err.message);
            }
          }
        );
      });
      const handleCopyToken = () => {
        if (!createdKey) {
          import_ui355.toast.error(t4("apiKeyManagement.create.copySecretTokenFailure"));
        }
        navigator.clipboard.writeText(createdKey?.token ?? "");
        import_ui355.toast.success(t4("apiKeyManagement.create.copySecretTokenSuccess"));
      };
      const handleGoToSecretKey = () => {
        if (!createdKey) {
          return;
        }
        handleSuccess(`/settings/secret-api-keys/${createdKey.id}`);
      };
      return /* @__PURE__ */ (0, import_jsx_runtime555.jsxs)(import_react242.Fragment, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime555.jsxs)(
          KeyboundForm,
          {
            className: "flex h-full flex-col overflow-hidden",
            onSubmit: handleSubmit,
            children: [
              /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(RouteFocusModal.Header, {}),
              /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(RouteFocusModal.Body, { className: "flex flex-1 flex-col overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime555.jsx)("div", { className: "flex flex-1 flex-col items-center overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime555.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8 px-2 py-16", children: [
                /* @__PURE__ */ (0, import_jsx_runtime555.jsxs)("div", { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(RouteFocusModal.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(import_ui355.Heading, { children: keyType === "publishable" /* PUBLISHABLE */ ? t4("apiKeyManagement.create.createPublishableHeader") : t4("apiKeyManagement.create.createSecretHeader") }) }),
                  /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(RouteFocusModal.Description, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(import_ui355.Text, { size: "small", className: "text-ui-fg-subtle", children: keyType === "publishable" /* PUBLISHABLE */ ? t4("apiKeyManagement.create.createPublishableHint") : t4("apiKeyManagement.create.createSecretHint") }) })
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime555.jsx)("div", { className: "grid grid-cols-2 gap-4", children: /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "title",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime555.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(Form.Label, { children: t4("fields.title") }),
                        /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(import_ui355.Input, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ) })
              ] }) }) }),
              /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime555.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(import_ui355.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
                /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(import_ui355.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
              ] }) })
            ]
          }
        ) }),
        /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(import_ui355.Prompt, { variant: "confirmation", open: !!createdKey, children: /* @__PURE__ */ (0, import_jsx_runtime555.jsxs)(import_ui355.Prompt.Content, { className: "w-fit max-w-[42.5%]", children: [
          /* @__PURE__ */ (0, import_jsx_runtime555.jsxs)(import_ui355.Prompt.Header, { children: [
            /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(import_ui355.Prompt.Title, { children: t4("apiKeyManagement.create.secretKeyCreatedHeader") }),
            /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(import_ui355.Prompt.Description, { children: t4("apiKeyManagement.create.secretKeyCreatedHint") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime555.jsxs)("div", { className: "flex flex-col gap-y-3 px-6 py-4", children: [
            /* @__PURE__ */ (0, import_jsx_runtime555.jsxs)("div", { className: "shadow-borders-base bg-ui-bg-component grid h-8 grid-cols-[1fr_32px] items-center overflow-hidden rounded-md", children: [
              /* @__PURE__ */ (0, import_jsx_runtime555.jsx)("div", { className: "flex items-center px-2", children: /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(import_ui355.Text, { family: "mono", size: "small", children: showRedactedKey ? getRedactedKey(createdKey?.token) : createdKey?.token }) }),
              /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(
                "button",
                {
                  className: "transition-fg hover:bg-ui-bg-base-hover active:bg-ui-bg-base-pressed text-ui-fg-muted active:text-ui-fg-subtle flex size-8 appearance-none items-center justify-center border-l",
                  type: "button",
                  onClick: () => setShowRedactedKey(!showRedactedKey),
                  children: showRedactedKey ? /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(import_icons149.EyeSlash, {}) : /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(import_icons149.Eye, {})
                }
              )
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(
              import_ui355.Button,
              {
                size: "small",
                variant: "secondary",
                type: "button",
                className: "w-full",
                onClick: handleCopyToken,
                children: t4("apiKeyManagement.actions.copy")
              }
            )
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(import_ui355.Prompt.Footer, { className: "border-t py-4", children: /* @__PURE__ */ (0, import_jsx_runtime555.jsx)(import_ui355.Prompt.Action, { onClick: handleGoToSecretKey, children: t4("actions.continue") }) })
        ] }) })
      ] });
    };
  }
});

// src/routes/api-key-management/api-key-management-create/components/api-key-create-form/index.ts
var init_api_key_create_form2 = __esm({
  "src/routes/api-key-management/api-key-management-create/components/api-key-create-form/index.ts"() {
    "use strict";
    init_api_key_create_form();
  }
});

// src/routes/api-key-management/api-key-management-create/api-key-management-create.tsx
var import_react_router_dom189, import_jsx_runtime556, ApiKeyManagementCreate;
var init_api_key_management_create = __esm({
  "src/routes/api-key-management/api-key-management-create/api-key-management-create.tsx"() {
    "use strict";
    import_react_router_dom189 = require("react-router-dom");
    init_modals();
    init_utils13();
    init_api_key_create_form2();
    import_jsx_runtime556 = require("react/jsx-runtime");
    ApiKeyManagementCreate = () => {
      const { pathname } = (0, import_react_router_dom189.useLocation)();
      const keyType = getApiKeyTypeFromPathname(pathname);
      return /* @__PURE__ */ (0, import_jsx_runtime556.jsx)(RouteFocusModal, { children: /* @__PURE__ */ (0, import_jsx_runtime556.jsx)(ApiKeyCreateForm, { keyType }) });
    };
  }
});

// src/routes/api-key-management/api-key-management-create/index.ts
var api_key_management_create_exports = {};
__export(api_key_management_create_exports, {
  Component: () => ApiKeyManagementCreate
});
var init_api_key_management_create2 = __esm({
  "src/routes/api-key-management/api-key-management-create/index.ts"() {
    "use strict";
    init_api_key_management_create();
  }
});

// src/components/common/user-link/user-link.tsx
var import_ui356, import_react_router_dom190, import_jsx_runtime557, UserLink;
var init_user_link = __esm({
  "src/components/common/user-link/user-link.tsx"() {
    "use strict";
    import_ui356 = require("@medusajs/ui");
    import_react_router_dom190 = require("react-router-dom");
    import_jsx_runtime557 = require("react/jsx-runtime");
    UserLink = ({
      id: id2,
      first_name,
      last_name,
      email,
      type = "user"
    }) => {
      const name = [first_name, last_name].filter(Boolean).join(" ");
      const fallback = name ? name.slice(0, 1) : email.slice(0, 1);
      const link = type === "user" ? `/settings/users/${id2}` : `/customers/${id2}`;
      return /* @__PURE__ */ (0, import_jsx_runtime557.jsxs)(
        import_react_router_dom190.Link,
        {
          to: link,
          className: "flex items-center gap-x-2 w-fit transition-fg hover:text-ui-fg-subtle outline-none focus-visible:shadow-borders-focus rounded-md",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime557.jsx)(import_ui356.Avatar, { size: "2xsmall", fallback: fallback.toUpperCase() }),
            /* @__PURE__ */ (0, import_jsx_runtime557.jsx)(import_ui356.Text, { size: "small", leading: "compact", weight: "regular", children: name || email })
          ]
        }
      );
    };
  }
});

// src/components/common/user-link/index.ts
var init_user_link2 = __esm({
  "src/components/common/user-link/index.ts"() {
    "use strict";
    init_user_link();
  }
});

// src/routes/api-key-management/api-key-management-detail/components/api-key-general-section/api-key-general-section.tsx
var import_icons150, import_ui357, import_react_i18next397, import_react_router_dom191, import_jsx_runtime558, ApiKeyGeneralSection, ActionBy;
var init_api_key_general_section = __esm({
  "src/routes/api-key-management/api-key-management-detail/components/api-key-general-section/api-key-general-section.tsx"() {
    "use strict";
    import_icons150 = require("@medusajs/icons");
    import_ui357 = require("@medusajs/ui");
    import_react_i18next397 = require("react-i18next");
    import_react_router_dom191 = require("react-router-dom");
    init_action_menu2();
    init_skeleton2();
    init_user_link2();
    init_api_keys();
    init_users();
    init_use_date();
    init_utils13();
    import_jsx_runtime558 = require("react/jsx-runtime");
    ApiKeyGeneralSection = ({ apiKey }) => {
      const { t: t4 } = (0, import_react_i18next397.useTranslation)();
      const navigate = (0, import_react_router_dom191.useNavigate)();
      const prompt = (0, import_ui357.usePrompt)();
      const { getFullDate } = useDate();
      const { mutateAsync: revokeAsync } = useRevokeApiKey(apiKey.id);
      const { mutateAsync: deleteAsync } = useDeleteApiKey(apiKey.id);
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("apiKeyManagement.delete.warning", {
            title: apiKey.title
          }),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await deleteAsync(void 0, {
          onSuccess: () => {
            import_ui357.toast.success(
              t4("apiKeyManagement.delete.successToast", {
                title: apiKey.title
              })
            );
            navigate("..", { replace: true });
          },
          onError: (err) => {
            import_ui357.toast.error(err.message);
          }
        });
      };
      const handleRevoke = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("apiKeyManagement.revoke.warning", {
            title: apiKey.title
          }),
          confirmText: t4("apiKeyManagement.actions.revoke"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await revokeAsync(void 0, {
          onSuccess: () => {
            import_ui357.toast.success(
              t4("apiKeyManagement.revoke.successToast", {
                title: apiKey.title
              })
            );
          },
          onError: (err) => {
            import_ui357.toast.error(err.message);
          }
        });
      };
      const dangerousActions = [
        {
          icon: /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(import_icons150.Trash, {}),
          label: t4("actions.delete"),
          onClick: handleDelete,
          disabled: !apiKey.revoked_at
        }
      ];
      if (!apiKey.revoked_at) {
        dangerousActions.unshift({
          icon: /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(import_icons150.XCircle, {}),
          label: t4("apiKeyManagement.actions.revoke"),
          onClick: handleRevoke,
          disabled: !!apiKey.revoked_at
        });
      }
      const apiKeyStatus = getApiKeyStatusProps(apiKey.revoked_at, t4);
      const apiKeyType = getApiKeyTypeProps(apiKey.type, t4);
      return /* @__PURE__ */ (0, import_jsx_runtime558.jsxs)(import_ui357.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime558.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(import_ui357.Heading, { children: apiKey.title }),
          /* @__PURE__ */ (0, import_jsx_runtime558.jsxs)("div", { className: "flex items-center gap-x-4", children: [
            /* @__PURE__ */ (0, import_jsx_runtime558.jsx)("div", { className: "flex items-center gap-x-2", children: /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(import_ui357.StatusBadge, { color: apiKeyStatus.color, children: apiKeyStatus.label }) }),
            /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(
              ActionMenu,
              {
                groups: [
                  {
                    actions: [
                      {
                        label: t4("actions.edit"),
                        icon: /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(import_icons150.PencilSquare, {}),
                        to: "edit"
                      }
                    ]
                  },
                  {
                    actions: dangerousActions
                  }
                ]
              }
            )
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime558.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(import_ui357.Text, { size: "small", leading: "compact", weight: "plus", children: t4("fields.key") }),
          apiKey.type === "secret" ? /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(import_ui357.Badge, { size: "2xsmall", children: prettifyRedactedToken(apiKey.redacted) }) : /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(import_ui357.Copy, { asChild: true, content: apiKey.token, className: "cursor-pointer", children: /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(import_ui357.Badge, { size: "2xsmall", className: "text-ui-tag-neutral-text", children: prettifyRedactedToken(apiKey.redacted) }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime558.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(import_ui357.Text, { size: "small", leading: "compact", weight: "plus", children: t4("fields.type") }),
          /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(import_ui357.Text, { size: "small", leading: "compact", children: apiKeyType.label })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime558.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(import_ui357.Text, { size: "small", leading: "compact", weight: "plus", children: t4("apiKeyManagement.fields.lastUsedAtLabel") }),
          /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(import_ui357.Text, { size: "small", leading: "compact", children: apiKey.last_used_at ? getFullDate({ date: apiKey.last_used_at, includeTime: true }) : "-" })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime558.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(import_ui357.Text, { size: "small", leading: "compact", weight: "plus", children: t4("apiKeyManagement.fields.createdByLabel") }),
          /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(ActionBy, { userId: apiKey.created_by })
        ] }),
        apiKey.revoked_at && /* @__PURE__ */ (0, import_jsx_runtime558.jsxs)(import_jsx_runtime558.Fragment, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime558.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
            /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(import_ui357.Text, { size: "small", leading: "compact", weight: "plus", children: t4("apiKeyManagement.fields.revokedAtLabel") }),
            /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(import_ui357.Text, { size: "small", leading: "compact", children: getFullDate({ date: apiKey.revoked_at, includeTime: true }) })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime558.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
            /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(import_ui357.Text, { size: "small", leading: "compact", weight: "plus", children: t4("apiKeyManagement.fields.revokedByLabel") }),
            /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(ActionBy, { userId: apiKey.revoked_by })
          ] })
        ] })
      ] });
    };
    ActionBy = ({ userId }) => {
      const { user, isLoading, isError, error } = useUser(userId, void 0, {
        enabled: !!userId
      });
      if (!userId) {
        return /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(import_ui357.Text, { size: "small", className: "text-ui-fg-subtle", children: "-" });
      }
      if (isError) {
        throw error;
      }
      if (isLoading) {
        return /* @__PURE__ */ (0, import_jsx_runtime558.jsxs)("div", { className: "grid grid-cols-[20px_1fr]", children: [
          /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(Skeleton, { className: "h-5 w-5 rounded-full" }),
          /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(Skeleton, { className: "w-full max-w-[220px]" })
        ] });
      }
      if (!user) {
        return /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(import_ui357.Text, { size: "small", className: "text-ui-fg-subtle", children: "-" });
      }
      return /* @__PURE__ */ (0, import_jsx_runtime558.jsx)(UserLink, { ...user });
    };
  }
});

// src/routes/api-key-management/api-key-management-detail/components/api-key-general-section/index.ts
var init_api_key_general_section2 = __esm({
  "src/routes/api-key-management/api-key-management-detail/components/api-key-general-section/index.ts"() {
    "use strict";
    init_api_key_general_section();
  }
});

// src/routes/api-key-management/api-key-management-detail/components/api-key-sales-channel-section/api-key-sales-channel-section.tsx
var import_icons151, import_ui358, import_react_query82, import_react_table78, import_react243, import_react_i18next398, import_jsx_runtime559, PAGE_SIZE60, ApiKeySalesChannelSection, SalesChannelActions2, columnHelper80, useColumns42;
var init_api_key_sales_channel_section = __esm({
  "src/routes/api-key-management/api-key-management-detail/components/api-key-sales-channel-section/api-key-sales-channel-section.tsx"() {
    "use strict";
    import_icons151 = require("@medusajs/icons");
    import_ui358 = require("@medusajs/ui");
    import_react_query82 = require("@tanstack/react-query");
    import_react_table78 = require("@tanstack/react-table");
    import_react243 = require("react");
    import_react_i18next398 = require("react-i18next");
    init_action_menu2();
    init_data_table2();
    init_api_keys();
    init_sales_channels();
    init_use_sales_channel_table_columns();
    init_use_sales_channel_table_filters();
    init_use_sales_channel_table_query();
    init_use_data_table();
    import_jsx_runtime559 = require("react/jsx-runtime");
    PAGE_SIZE60 = 10;
    ApiKeySalesChannelSection = ({
      apiKey
    }) => {
      const [rowSelection, setRowSelection] = (0, import_react243.useState)({});
      const { t: t4 } = (0, import_react_i18next398.useTranslation)();
      const prompt = (0, import_ui358.usePrompt)();
      const { raw, searchParams } = useSalesChannelTableQuery({
        pageSize: PAGE_SIZE60
      });
      const { sales_channels, count: count3, isLoading } = useSalesChannels(
        { ...searchParams, publishable_key_id: apiKey.id },
        {
          placeholderData: import_react_query82.keepPreviousData
        }
      );
      const columns = useColumns42();
      const filters = useSalesChannelTableFilters();
      const { table } = useDataTable({
        data: sales_channels ?? [],
        columns,
        count: count3,
        enablePagination: true,
        enableRowSelection: true,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE60,
        rowSelection: {
          state: rowSelection,
          updater: setRowSelection
        },
        meta: {
          apiKey: apiKey.id
        }
      });
      const { mutateAsync } = useBatchRemoveSalesChannelsFromApiKey(apiKey.id);
      const handleRemove = async () => {
        const keys = Object.keys(rowSelection);
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("apiKeyManagement.removeSalesChannel.warningBatch", {
            count: keys.length
          }),
          confirmText: t4("actions.continue"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(keys, {
          onSuccess: () => {
            import_ui358.toast.success(
              t4("apiKeyManagement.removeSalesChannel.successToastBatch", {
                count: keys.length
              })
            );
            setRowSelection({});
          },
          onError: (err) => {
            import_ui358.toast.error(err.message);
          }
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime559.jsxs)(import_ui358.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime559.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime559.jsx)(import_ui358.Heading, { level: "h2", children: t4("salesChannels.domain") }),
          /* @__PURE__ */ (0, import_jsx_runtime559.jsx)(
            ActionMenu,
            {
              groups: [
                {
                  actions: [
                    {
                      icon: /* @__PURE__ */ (0, import_jsx_runtime559.jsx)(import_icons151.Plus, {}),
                      label: t4("actions.add"),
                      to: "sales-channels"
                    }
                  ]
                }
              ]
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime559.jsx)(
          DataTable,
          {
            table,
            columns,
            filters,
            count: count3,
            isLoading,
            queryObject: raw,
            navigateTo: (row) => `/settings/sales-channels/${row.id}`,
            orderBy: [
              {
                key: "name",
                label: t4("fields.name")
              },
              {
                key: "created_at",
                label: t4("fields.createdAt")
              },
              {
                key: "updated_at",
                label: t4("fields.updatedAt")
              }
            ],
            commands: [
              {
                action: handleRemove,
                label: t4("actions.remove"),
                shortcut: "r"
              }
            ],
            pageSize: PAGE_SIZE60,
            pagination: true,
            search: true,
            noRecords: {
              message: t4("apiKeyManagement.salesChannels.list.noRecordsMessage")
            }
          }
        )
      ] });
    };
    SalesChannelActions2 = ({
      salesChannel,
      apiKey
    }) => {
      const { t: t4 } = (0, import_react_i18next398.useTranslation)();
      const prompt = (0, import_ui358.usePrompt)();
      const { mutateAsync } = useBatchRemoveSalesChannelsFromApiKey(apiKey);
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("apiKeyManagement.removeSalesChannel.warning", {
            name: salesChannel.name
          }),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync([salesChannel.id], {
          onSuccess: () => {
            import_ui358.toast.success(
              t4("apiKeyManagement.removeSalesChannel.successToast", {
                count: 1
              })
            );
          },
          onError: (err) => {
            import_ui358.toast.error(err.message);
          }
        });
      };
      return /* @__PURE__ */ (0, import_jsx_runtime559.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime559.jsx)(import_icons151.PencilSquare, {}),
                  label: t4("actions.edit"),
                  to: `/settings/sales-channels/${salesChannel.id}/edit`
                }
              ]
            },
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime559.jsx)(import_icons151.Trash, {}),
                  label: t4("actions.delete"),
                  onClick: handleDelete
                }
              ]
            }
          ]
        }
      );
    };
    columnHelper80 = (0, import_react_table78.createColumnHelper)();
    useColumns42 = () => {
      const base = useSalesChannelTableColumns();
      return (0, import_react243.useMemo)(
        () => [
          columnHelper80.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime559.jsx)(
                import_ui358.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime559.jsx)(
                import_ui358.Checkbox,
                {
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...base,
          columnHelper80.display({
            id: "actions",
            cell: ({ row, table }) => {
              const { apiKey } = table.options.meta;
              return /* @__PURE__ */ (0, import_jsx_runtime559.jsx)(SalesChannelActions2, { salesChannel: row.original, apiKey });
            }
          })
        ],
        [base]
      );
    };
  }
});

// src/routes/api-key-management/api-key-management-detail/components/api-key-sales-channel-section/index.ts
var init_api_key_sales_channel_section2 = __esm({
  "src/routes/api-key-management/api-key-management-detail/components/api-key-sales-channel-section/index.ts"() {
    "use strict";
    init_api_key_sales_channel_section();
  }
});

// src/routes/api-key-management/api-key-management-detail/api-key-management-detail.tsx
var import_react_router_dom192, import_jsx_runtime560, ApiKeyManagementDetail;
var init_api_key_management_detail = __esm({
  "src/routes/api-key-management/api-key-management-detail/api-key-management-detail.tsx"() {
    "use strict";
    import_react_router_dom192 = require("react-router-dom");
    init_skeleton2();
    init_pages();
    init_extensions();
    init_api_keys();
    init_constants20();
    init_api_key_general_section2();
    init_api_key_sales_channel_section2();
    import_jsx_runtime560 = require("react/jsx-runtime");
    ApiKeyManagementDetail = () => {
      const initialData = (0, import_react_router_dom192.useLoaderData)();
      const { id: id2 } = (0, import_react_router_dom192.useParams)();
      const { getWidgets } = useDashboardExtension();
      const { api_key, isLoading, isError, error } = useApiKey(id2, {
        initialData
      });
      if (isLoading || !api_key) {
        return /* @__PURE__ */ (0, import_jsx_runtime560.jsx)(SingleColumnPageSkeleton, { showJSON: true, sections: 1 });
      }
      const isPublishable = api_key?.type === "publishable" /* PUBLISHABLE */;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime560.jsxs)(
        SingleColumnPage,
        {
          hasOutlet: true,
          showJSON: true,
          widgets: {
            before: getWidgets("api_key.details.before"),
            after: getWidgets("api_key.details.after")
          },
          data: api_key,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime560.jsx)(ApiKeyGeneralSection, { apiKey: api_key }),
            isPublishable && /* @__PURE__ */ (0, import_jsx_runtime560.jsx)(ApiKeySalesChannelSection, { apiKey: api_key })
          ]
        }
      );
    };
  }
});

// src/routes/api-key-management/api-key-management-detail/loader.ts
var apiKeyDetailQuery, apiKeyLoader;
var init_loader27 = __esm({
  "src/routes/api-key-management/api-key-management-detail/loader.ts"() {
    "use strict";
    init_api_keys();
    init_client2();
    init_query_client();
    apiKeyDetailQuery = (id2) => ({
      queryKey: apiKeysQueryKeys.detail(id2),
      queryFn: async () => sdk.admin.apiKey.retrieve(id2)
    });
    apiKeyLoader = async ({ params: params2 }) => {
      const id2 = params2.id;
      const query = apiKeyDetailQuery(id2);
      return queryClient.getQueryData(query.queryKey) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/routes/api-key-management/api-key-management-detail/index.ts
var api_key_management_detail_exports = {};
__export(api_key_management_detail_exports, {
  Component: () => ApiKeyManagementDetail,
  loader: () => apiKeyLoader
});
var init_api_key_management_detail2 = __esm({
  "src/routes/api-key-management/api-key-management-detail/index.ts"() {
    "use strict";
    init_api_key_management_detail();
    init_loader27();
  }
});

// src/routes/api-key-management/api-key-management-edit/components/edit-api-key-form/edit-api-key-form.tsx
var import_zod120, import_ui359, import_react_hook_form111, import_react_i18next399, zod44, import_jsx_runtime561, EditApiKeySchema, EditApiKeyForm;
var init_edit_api_key_form = __esm({
  "src/routes/api-key-management/api-key-management-edit/components/edit-api-key-form/edit-api-key-form.tsx"() {
    "use strict";
    import_zod120 = require("@hookform/resolvers/zod");
    import_ui359 = require("@medusajs/ui");
    import_react_hook_form111 = require("react-hook-form");
    import_react_i18next399 = require("react-i18next");
    zod44 = __toESM(require("zod"));
    init_form2();
    init_modals();
    init_keybound_form2();
    init_api_keys();
    import_jsx_runtime561 = require("react/jsx-runtime");
    EditApiKeySchema = zod44.object({
      title: zod44.string().min(1)
    });
    EditApiKeyForm = ({ apiKey }) => {
      const { t: t4 } = (0, import_react_i18next399.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form111.useForm)({
        defaultValues: {
          title: apiKey.title
        },
        resolver: (0, import_zod120.zodResolver)(EditApiKeySchema)
      });
      const { mutateAsync, isPending } = useUpdateApiKey(apiKey.id);
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(data, {
          onSuccess: ({ api_key }) => {
            import_ui359.toast.success(
              t4("apiKeyManagement.edit.successToast", {
                title: api_key.title
              })
            );
            handleSuccess();
          },
          onError: (err) => {
            import_ui359.toast.error(err.message);
          }
        });
      });
      return /* @__PURE__ */ (0, import_jsx_runtime561.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime561.jsxs)(KeyboundForm, { onSubmit: handleSubmit, className: "flex flex-1 flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime561.jsx)(RouteDrawer.Body, { children: /* @__PURE__ */ (0, import_jsx_runtime561.jsx)("div", { className: "flex flex-col gap-y-4", children: /* @__PURE__ */ (0, import_jsx_runtime561.jsx)(
          Form.Field,
          {
            control: form.control,
            name: "title",
            render: ({ field }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime561.jsxs)(Form.Item, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime561.jsx)(Form.Label, { children: t4("fields.title") }),
                /* @__PURE__ */ (0, import_jsx_runtime561.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime561.jsx)(import_ui359.Input, { ...field }) }),
                /* @__PURE__ */ (0, import_jsx_runtime561.jsx)(Form.ErrorMessage, {})
              ] });
            }
          }
        ) }) }),
        /* @__PURE__ */ (0, import_jsx_runtime561.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime561.jsxs)("div", { className: "flex items-center gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime561.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime561.jsx)(import_ui359.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime561.jsx)(import_ui359.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
        ] }) })
      ] }) });
    };
  }
});

// src/routes/api-key-management/api-key-management-edit/components/edit-api-key-form/index.ts
var init_edit_api_key_form2 = __esm({
  "src/routes/api-key-management/api-key-management-edit/components/edit-api-key-form/index.ts"() {
    "use strict";
    init_edit_api_key_form();
  }
});

// src/routes/api-key-management/api-key-management-edit/api-key-management-edit.tsx
var import_ui360, import_react_i18next400, import_react_router_dom193, import_jsx_runtime562, ApiKeyManagementEdit;
var init_api_key_management_edit = __esm({
  "src/routes/api-key-management/api-key-management-edit/api-key-management-edit.tsx"() {
    "use strict";
    import_ui360 = require("@medusajs/ui");
    import_react_i18next400 = require("react-i18next");
    import_react_router_dom193 = require("react-router-dom");
    init_modals();
    init_visually_hidden2();
    init_api_keys();
    init_edit_api_key_form2();
    import_jsx_runtime562 = require("react/jsx-runtime");
    ApiKeyManagementEdit = () => {
      const { id: id2 } = (0, import_react_router_dom193.useParams)();
      const { t: t4 } = (0, import_react_i18next400.useTranslation)();
      const { api_key, isLoading, isError, error } = useApiKey(id2);
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime562.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime562.jsxs)(RouteDrawer.Header, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime562.jsx)(RouteDrawer.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime562.jsx)(import_ui360.Heading, { children: t4("apiKeyManagement.edit.header") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime562.jsx)(RouteDrawer.Description, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime562.jsx)(VisuallyHidden, { children: t4("apiKeyManagement.edit.description") }) })
        ] }),
        !isLoading && !!api_key && /* @__PURE__ */ (0, import_jsx_runtime562.jsx)(EditApiKeyForm, { apiKey: api_key })
      ] });
    };
  }
});

// src/routes/api-key-management/api-key-management-edit/index.ts
var api_key_management_edit_exports = {};
__export(api_key_management_edit_exports, {
  Component: () => ApiKeyManagementEdit
});
var init_api_key_management_edit2 = __esm({
  "src/routes/api-key-management/api-key-management-edit/index.ts"() {
    "use strict";
    init_api_key_management_edit();
  }
});

// src/routes/api-key-management/api-key-management-sales-channels/components/api-key-sales-channels-form/api-key-sales-channels-form.tsx
var import_zod121, import_ui361, import_react_query83, import_react_table79, import_react244, import_react_hook_form112, import_react_i18next401, zod45, import_jsx_runtime563, AddSalesChannelsToApiKeySchema, PAGE_SIZE61, ApiKeySalesChannelsForm, columnHelper81, useColumns43;
var init_api_key_sales_channels_form = __esm({
  "src/routes/api-key-management/api-key-management-sales-channels/components/api-key-sales-channels-form/api-key-sales-channels-form.tsx"() {
    "use strict";
    import_zod121 = require("@hookform/resolvers/zod");
    import_ui361 = require("@medusajs/ui");
    import_react_query83 = require("@tanstack/react-query");
    import_react_table79 = require("@tanstack/react-table");
    import_react244 = require("react");
    import_react_hook_form112 = require("react-hook-form");
    import_react_i18next401 = require("react-i18next");
    zod45 = __toESM(require("zod"));
    init_modals();
    init_data_table2();
    init_keybound_form2();
    init_visually_hidden2();
    init_api_keys();
    init_sales_channels();
    init_use_sales_channel_table_columns();
    init_filters();
    init_use_sales_channel_table_query();
    init_use_data_table();
    import_jsx_runtime563 = require("react/jsx-runtime");
    AddSalesChannelsToApiKeySchema = zod45.object({
      sales_channel_ids: zod45.array(zod45.string())
    });
    PAGE_SIZE61 = 50;
    ApiKeySalesChannelsForm = ({
      apiKey,
      preSelected = []
    }) => {
      const { t: t4 } = (0, import_react_i18next401.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form112.useForm)({
        defaultValues: {
          sales_channel_ids: []
        },
        resolver: (0, import_zod121.zodResolver)(AddSalesChannelsToApiKeySchema)
      });
      const { setValue } = form;
      const [rowSelection, setRowSelection] = (0, import_react244.useState)({});
      const { mutateAsync, isPending } = useBatchAddSalesChannelsToApiKey(apiKey);
      const { raw, searchParams } = useSalesChannelTableQuery({
        pageSize: PAGE_SIZE61
      });
      const columns = useColumns43();
      const filters = useSalesChannelTableFilters();
      const { sales_channels, count: count3, isLoading } = useSalesChannels(
        { ...searchParams },
        {
          placeholderData: import_react_query83.keepPreviousData
        }
      );
      const updater = (fn) => {
        const state = typeof fn === "function" ? fn(rowSelection) : fn;
        const ids = Object.keys(state);
        setValue("sales_channel_ids", ids, {
          shouldDirty: true,
          shouldTouch: true
        });
        setRowSelection(state);
      };
      const { table } = useDataTable({
        data: sales_channels ?? [],
        columns,
        count: count3,
        enablePagination: true,
        enableRowSelection: (row) => {
          return !preSelected.includes(row.original.id);
        },
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE61,
        rowSelection: {
          state: rowSelection,
          updater
        }
      });
      const handleSubmit = form.handleSubmit(async (values) => {
        await mutateAsync(values.sales_channel_ids, {
          onSuccess: () => {
            import_ui361.toast.success(
              t4("apiKeyManagement.salesChannels.successToast", {
                count: values.sales_channel_ids.length
              })
            );
            handleSuccess();
          },
          onError: (err) => {
            import_ui361.toast.error(err.message);
          }
        });
      });
      return /* @__PURE__ */ (0, import_jsx_runtime563.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime563.jsxs)(KeyboundForm, { onSubmit: handleSubmit, className: "flex h-full flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime563.jsxs)(RouteFocusModal.Header, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime563.jsx)(RouteFocusModal.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime563.jsx)(VisuallyHidden, { children: t4("apiKeyManagement.salesChannels.title") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime563.jsx)(RouteFocusModal.Description, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime563.jsx)(VisuallyHidden, { children: t4("apiKeyManagement.salesChannels.description") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime563.jsx)("div", { className: "flex items-center justify-end gap-x-2", children: form.formState.errors.sales_channel_ids && /* @__PURE__ */ (0, import_jsx_runtime563.jsx)(import_ui361.Hint, { variant: "error", children: form.formState.errors.sales_channel_ids.message }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime563.jsx)(RouteFocusModal.Body, { className: "flex flex-1 flex-col overflow-auto", children: /* @__PURE__ */ (0, import_jsx_runtime563.jsx)(
          DataTable,
          {
            table,
            columns,
            count: count3,
            pageSize: PAGE_SIZE61,
            filters,
            pagination: true,
            search: "autofocus",
            isLoading,
            queryObject: raw,
            orderBy: [
              { key: "name", label: t4("fields.name") },
              { key: "created_at", label: t4("fields.createdAt") },
              { key: "updated_at", label: t4("fields.updatedAt") }
            ],
            layout: "fill",
            noRecords: {
              message: t4(
                "apiKeyManagement.addSalesChannels.list.noRecordsMessage"
              )
            }
          }
        ) }),
        /* @__PURE__ */ (0, import_jsx_runtime563.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime563.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime563.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime563.jsx)(import_ui361.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime563.jsx)(import_ui361.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
        ] }) })
      ] }) });
    };
    columnHelper81 = (0, import_react_table79.createColumnHelper)();
    useColumns43 = () => {
      const { t: t4 } = (0, import_react_i18next401.useTranslation)();
      const base = useSalesChannelTableColumns();
      return (0, import_react244.useMemo)(
        () => [
          columnHelper81.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime563.jsx)(
                import_ui361.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              const isPreSelected = !row.getCanSelect();
              const isSelected2 = row.getIsSelected() || isPreSelected;
              const Component5 = /* @__PURE__ */ (0, import_jsx_runtime563.jsx)(
                import_ui361.Checkbox,
                {
                  checked: isSelected2,
                  disabled: isPreSelected,
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
              if (isPreSelected) {
                return /* @__PURE__ */ (0, import_jsx_runtime563.jsx)(
                  import_ui361.Tooltip,
                  {
                    content: t4(
                      "apiKeyManagement.salesChannels.alreadyAddedTooltip"
                    ),
                    side: "right",
                    children: Component5
                  }
                );
              }
              return Component5;
            }
          }),
          ...base
        ],
        [t4, base]
      );
    };
  }
});

// src/routes/api-key-management/api-key-management-sales-channels/components/api-key-sales-channels-form/index.ts
var init_api_key_sales_channels_form2 = __esm({
  "src/routes/api-key-management/api-key-management-sales-channels/components/api-key-sales-channels-form/index.ts"() {
    "use strict";
    init_api_key_sales_channels_form();
  }
});

// src/routes/api-key-management/api-key-management-sales-channels/api-key-management-sales-channels.tsx
var import_react_router_dom194, import_jsx_runtime564, ApiKeyManagementAddSalesChannels;
var init_api_key_management_sales_channels = __esm({
  "src/routes/api-key-management/api-key-management-sales-channels/api-key-management-sales-channels.tsx"() {
    "use strict";
    import_react_router_dom194 = require("react-router-dom");
    init_modals();
    init_api_keys();
    init_api_key_sales_channels_form2();
    import_jsx_runtime564 = require("react/jsx-runtime");
    ApiKeyManagementAddSalesChannels = () => {
      const { id: id2 } = (0, import_react_router_dom194.useParams)();
      const { api_key, isLoading, isError, error } = useApiKey(id2);
      const preSelected = api_key?.sales_channels?.map((sc) => sc.id);
      const ready = !isLoading && api_key;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime564.jsx)(RouteFocusModal, { children: ready && /* @__PURE__ */ (0, import_jsx_runtime564.jsx)(ApiKeySalesChannelsForm, { apiKey: id2, preSelected }) });
    };
  }
});

// src/routes/api-key-management/api-key-management-sales-channels/index.ts
var api_key_management_sales_channels_exports = {};
__export(api_key_management_sales_channels_exports, {
  Component: () => ApiKeyManagementAddSalesChannels
});
var init_api_key_management_sales_channels2 = __esm({
  "src/routes/api-key-management/api-key-management-sales-channels/index.ts"() {
    "use strict";
    init_api_key_management_sales_channels();
  }
});

// src/components/localization/localized-table-pagination/localized-table-pagination.tsx
var import_ui362, import_react245, import_react_i18next402, import_jsx_runtime565, LocalizedTablePagination;
var init_localized_table_pagination = __esm({
  "src/components/localization/localized-table-pagination/localized-table-pagination.tsx"() {
    "use strict";
    import_ui362 = require("@medusajs/ui");
    import_react245 = require("react");
    import_react_i18next402 = require("react-i18next");
    import_jsx_runtime565 = require("react/jsx-runtime");
    LocalizedTablePagination = (0, import_react245.forwardRef)((props, ref) => {
      const { t: t4 } = (0, import_react_i18next402.useTranslation)();
      const translations = {
        of: t4("general.of"),
        results: t4("general.results"),
        pages: t4("general.pages"),
        prev: t4("general.prev"),
        next: t4("general.next")
      };
      return /* @__PURE__ */ (0, import_jsx_runtime565.jsx)(import_ui362.Table.Pagination, { ...props, translations, ref });
    });
    LocalizedTablePagination.displayName = "LocalizedTablePagination";
  }
});

// src/components/localization/localized-table-pagination/index.ts
var init_localized_table_pagination2 = __esm({
  "src/components/localization/localized-table-pagination/index.ts"() {
    "use strict";
    init_localized_table_pagination();
  }
});

// src/routes/tax-regions/common/hooks.ts
var import_ui363, import_react_i18next403, import_react_router_dom195, useDeleteTaxRegionAction, useDeleteTaxRateAction;
var init_hooks4 = __esm({
  "src/routes/tax-regions/common/hooks.ts"() {
    "use strict";
    import_ui363 = require("@medusajs/ui");
    import_react_i18next403 = require("react-i18next");
    import_react_router_dom195 = require("react-router-dom");
    init_tax_rates();
    init_tax_regions();
    useDeleteTaxRegionAction = ({
      taxRegion,
      to = "/settings/tax-regions"
    }) => {
      const { t: t4 } = (0, import_react_i18next403.useTranslation)();
      const navigate = (0, import_react_router_dom195.useNavigate)();
      const prompt = (0, import_ui363.usePrompt)();
      const { mutateAsync } = useDeleteTaxRegion(taxRegion.id);
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("taxRegions.delete.confirmation"),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            import_ui363.toast.success(t4("general.success"), {
              description: t4("taxRegions.delete.successToast"),
              dismissable: true,
              dismissLabel: t4("actions.close")
            });
            navigate(to, { replace: true });
          },
          onError: (e) => {
            import_ui363.toast.error(t4("general.error"), {
              description: e.message,
              dismissable: true,
              dismissLabel: t4("actions.close")
            });
          }
        });
      };
      return handleDelete;
    };
    useDeleteTaxRateAction = (taxRate) => {
      const { t: t4 } = (0, import_react_i18next403.useTranslation)();
      const prompt = (0, import_ui363.usePrompt)();
      const { mutateAsync } = useDeleteTaxRate(taxRate.id);
      const handleDelete = async () => {
        const res = await prompt({
          title: t4("general.areYouSure"),
          description: t4("taxRegions.taxRates.delete.confirmation", {
            name: taxRate.name
          }),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!res) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            import_ui363.toast.success(t4("taxRegions.taxRates.delete.successToast"));
          },
          onError: (e) => {
            import_ui363.toast.error(e.message);
          }
        });
      };
      return handleDelete;
    };
  }
});

// src/routes/tax-regions/common/components/tax-region-card/tax-region-card.tsx
var import_ui364, import_react_country_flag2, import_icons152, import_react_i18next404, import_react_router_dom196, import_jsx_runtime566, TaxRegionCard, TaxRegionCardActions;
var init_tax_region_card = __esm({
  "src/routes/tax-regions/common/components/tax-region-card/tax-region-card.tsx"() {
    "use strict";
    import_ui364 = require("@medusajs/ui");
    import_react_country_flag2 = __toESM(require("react-country-flag"));
    import_icons152 = require("@medusajs/icons");
    import_react_i18next404 = require("react-i18next");
    import_react_router_dom196 = require("react-router-dom");
    init_action_menu2();
    init_icon_avatar2();
    init_countries();
    init_country_states();
    init_hooks4();
    import_jsx_runtime566 = require("react/jsx-runtime");
    TaxRegionCard = ({
      taxRegion,
      type = "list",
      variant = "country",
      asLink = true,
      badge
    }) => {
      const { t: t4 } = (0, import_react_i18next404.useTranslation)();
      const { id: id2, country_code, province_code } = taxRegion;
      const country = getCountryByIso2(country_code);
      const province = getProvinceByIso2(province_code);
      let name = "N/A";
      let misconfiguredSublevelTooltip = null;
      if (province || province_code) {
        name = province ? province : province_code.toUpperCase();
      } else if (country || country_code) {
        name = country ? country.display_name : country_code.toUpperCase();
      }
      if (country_code && province_code && !isProvinceInCountry(country_code, province_code)) {
        name = province_code.toUpperCase();
        misconfiguredSublevelTooltip = t4(
          "taxRegions.fields.sublevels.tooltips.notPartOfCountry",
          {
            country: country?.display_name,
            province: province_code.toUpperCase()
          }
        );
      }
      const showCreateDefaultTaxRate = !taxRegion.tax_rates.filter((tr) => tr.is_default).length && type === "header";
      const Component5 = /* @__PURE__ */ (0, import_jsx_runtime566.jsxs)(
        "div",
        {
          className: (0, import_ui364.clx)(
            "group-data-[link=true]:hover:bg-ui-bg-base-hover transition-fg flex flex-col justify-between gap-y-4 px-6 md:flex-row md:items-center md:gap-y-0",
            {
              "py-4": type === "header",
              "py-3": type === "list"
            }
          ),
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime566.jsxs)("div", { className: "flex items-center justify-between", children: [
              /* @__PURE__ */ (0, import_jsx_runtime566.jsxs)("div", { className: "flex items-center gap-x-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime566.jsx)(IconAvatar, { size: type === "list" ? "small" : "large", children: country_code && !province_code ? /* @__PURE__ */ (0, import_jsx_runtime566.jsx)(
                  "div",
                  {
                    className: (0, import_ui364.clx)(
                      "flex size-fit items-center justify-center overflow-hidden rounded-[1px]",
                      {
                        "rounded-sm": type === "header"
                      }
                    ),
                    children: /* @__PURE__ */ (0, import_jsx_runtime566.jsx)(
                      import_react_country_flag2.default,
                      {
                        countryCode: country_code,
                        svg: true,
                        style: type === "list" ? { width: "12px", height: "9px" } : { width: "16px", height: "12px" },
                        "aria-label": country?.display_name
                      }
                    )
                  }
                ) : /* @__PURE__ */ (0, import_jsx_runtime566.jsx)(import_icons152.MapPin, { className: "text-ui-fg-subtle" }) }),
                /* @__PURE__ */ (0, import_jsx_runtime566.jsx)("div", { children: type === "list" ? /* @__PURE__ */ (0, import_jsx_runtime566.jsx)(import_ui364.Text, { size: "small", weight: "plus", leading: "compact", children: name }) : /* @__PURE__ */ (0, import_jsx_runtime566.jsx)(import_ui364.Heading, { children: name }) })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime566.jsxs)("div", { className: "flex size-fit items-center gap-x-2 md:hidden", children: [
                misconfiguredSublevelTooltip && /* @__PURE__ */ (0, import_jsx_runtime566.jsx)(import_ui364.Tooltip, { content: misconfiguredSublevelTooltip, children: /* @__PURE__ */ (0, import_jsx_runtime566.jsx)(import_icons152.ExclamationCircle, { className: "text-ui-tag-orange-icon" }) }),
                badge,
                /* @__PURE__ */ (0, import_jsx_runtime566.jsx)(
                  TaxRegionCardActions,
                  {
                    taxRegion,
                    showCreateDefaultTaxRate
                  }
                )
              ] })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime566.jsxs)("div", { className: "hidden size-fit items-center gap-x-2 md:flex", children: [
              misconfiguredSublevelTooltip && /* @__PURE__ */ (0, import_jsx_runtime566.jsx)(import_ui364.Tooltip, { content: misconfiguredSublevelTooltip, children: /* @__PURE__ */ (0, import_jsx_runtime566.jsx)(import_icons152.ExclamationCircle, { className: "text-ui-tag-orange-icon" }) }),
              badge,
              /* @__PURE__ */ (0, import_jsx_runtime566.jsx)(
                TaxRegionCardActions,
                {
                  taxRegion,
                  showCreateDefaultTaxRate
                }
              )
            ] })
          ]
        }
      );
      if (asLink) {
        return /* @__PURE__ */ (0, import_jsx_runtime566.jsx)(
          import_react_router_dom196.Link,
          {
            to: variant === "country" ? `${id2}` : `provinces/${id2}`,
            "data-link": "true",
            className: "group block",
            children: Component5
          }
        );
      }
      return Component5;
    };
    TaxRegionCardActions = ({
      taxRegion,
      showCreateDefaultTaxRate
    }) => {
      const { t: t4 } = (0, import_react_i18next404.useTranslation)();
      const to = taxRegion.parent_id ? `/settings/tax-regions/${taxRegion.parent_id}` : void 0;
      const handleDelete = useDeleteTaxRegionAction({ taxRegion, to });
      return /* @__PURE__ */ (0, import_jsx_runtime566.jsx)(
        ActionMenu,
        {
          groups: [
            ...showCreateDefaultTaxRate ? [
              {
                actions: [
                  {
                    icon: /* @__PURE__ */ (0, import_jsx_runtime566.jsx)(import_icons152.Plus, {}),
                    label: t4("taxRegions.fields.defaultTaxRate.action"),
                    to: `tax-rates/create`
                  }
                ]
              }
            ] : [],
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime566.jsx)(import_icons152.Trash, {}),
                  label: t4("actions.delete"),
                  onClick: handleDelete
                }
              ]
            }
          ]
        }
      );
    };
  }
});

// src/routes/tax-regions/common/components/tax-region-card/index.ts
var init_tax_region_card2 = __esm({
  "src/routes/tax-regions/common/components/tax-region-card/index.ts"() {
    "use strict";
    init_tax_region_card();
  }
});

// src/routes/tax-regions/common/components/tax-region-table/tax-region-table.tsx
var import_ui365, import_react_router_dom197, import_jsx_runtime567, TaxRegionTable;
var init_tax_region_table = __esm({
  "src/routes/tax-regions/common/components/tax-region-table/tax-region-table.tsx"() {
    "use strict";
    import_ui365 = require("@medusajs/ui");
    import_react_router_dom197 = require("react-router-dom");
    init_empty_table_content2();
    init_skeleton2();
    init_localized_table_pagination2();
    init_data_table_order_by2();
    init_tax_region_card2();
    import_jsx_runtime567 = require("react/jsx-runtime");
    TaxRegionTable = ({
      variant = "country",
      isPending,
      action,
      count: count3 = 0,
      table,
      queryObject,
      prefix,
      children
    }) => {
      if (isPending) {
        return /* @__PURE__ */ (0, import_jsx_runtime567.jsxs)("div", { className: "flex flex-col divide-y", children: [
          Array.from({ length: 3 }).map((_, index2) => {
            return /* @__PURE__ */ (0, import_jsx_runtime567.jsx)(
              "div",
              {
                className: "bg-ui-bg-field-component h-[52px] w-full animate-pulse"
              },
              index2
            );
          }),
          /* @__PURE__ */ (0, import_jsx_runtime567.jsx)(TableFooterSkeleton, { layout: "fit" })
        ] });
      }
      const noQuery = Object.values(queryObject).filter((v) => Boolean(v)).length === 0;
      const noResults = !isPending && count3 === 0 && !noQuery;
      const noRecords = !isPending && count3 === 0 && noQuery;
      const { pageIndex, pageSize } = table.getState().pagination;
      return /* @__PURE__ */ (0, import_jsx_runtime567.jsxs)("div", { className: "flex flex-col divide-y", children: [
        /* @__PURE__ */ (0, import_jsx_runtime567.jsxs)("div", { className: "flex flex-col justify-between gap-x-4 gap-y-3 px-6 py-4 md:flex-row md:items-center", children: [
          /* @__PURE__ */ (0, import_jsx_runtime567.jsx)("div", { children }),
          /* @__PURE__ */ (0, import_jsx_runtime567.jsxs)("div", { className: "flex items-center gap-x-2", children: [
            !noRecords && /* @__PURE__ */ (0, import_jsx_runtime567.jsx)("div", { className: "flex w-full items-center gap-x-2 md:w-fit", children: /* @__PURE__ */ (0, import_jsx_runtime567.jsx)(
              DataTableOrderBy,
              {
                keys: ["updated_at", "created_at"],
                prefix
              }
            ) }),
            /* @__PURE__ */ (0, import_jsx_runtime567.jsx)(import_react_router_dom197.Link, { to: action.to, children: /* @__PURE__ */ (0, import_jsx_runtime567.jsx)(import_ui365.Button, { size: "small", variant: "secondary", children: action.label }) })
          ] })
        ] }),
        noResults && /* @__PURE__ */ (0, import_jsx_runtime567.jsx)(NoResults, {}),
        noRecords && /* @__PURE__ */ (0, import_jsx_runtime567.jsx)(NoRecords, {}),
        !noRecords && !noResults ? !isPending ? table.getRowModel().rows.map((row) => {
          return /* @__PURE__ */ (0, import_jsx_runtime567.jsx)(
            TaxRegionCard,
            {
              variant,
              taxRegion: row.original,
              role: "row",
              "aria-rowindex": row.index
            },
            row.id
          );
        }) : Array.from({ length: 3 }).map((_, index2) => {
          return /* @__PURE__ */ (0, import_jsx_runtime567.jsx)(
            "div",
            {
              className: "bg-ui-bg-field-component h-[60px] w-full animate-pulse"
            },
            index2
          );
        }) : null,
        !noRecords && /* @__PURE__ */ (0, import_jsx_runtime567.jsx)(
          LocalizedTablePagination,
          {
            prefix,
            canNextPage: table.getCanNextPage(),
            canPreviousPage: table.getCanPreviousPage(),
            count: count3,
            nextPage: table.nextPage,
            previousPage: table.previousPage,
            pageCount: table.getPageCount(),
            pageIndex,
            pageSize
          }
        )
      ] });
    };
  }
});

// src/routes/tax-regions/common/components/tax-region-table/index.ts
var init_tax_region_table2 = __esm({
  "src/routes/tax-regions/common/components/tax-region-table/index.ts"() {
    "use strict";
    init_tax_region_table();
  }
});

// src/routes/tax-regions/common/hooks/use-tax-region-table.tsx
var import_react_table80, import_react246, import_react_router_dom198, useTaxRegionTable;
var init_use_tax_region_table = __esm({
  "src/routes/tax-regions/common/hooks/use-tax-region-table.tsx"() {
    "use strict";
    import_react_table80 = require("@tanstack/react-table");
    import_react246 = require("react");
    import_react_router_dom198 = require("react-router-dom");
    useTaxRegionTable = ({
      data = [],
      count: count3 = 0,
      pageSize: _pageSize = 10,
      prefix
    }) => {
      const [searchParams, setSearchParams] = (0, import_react_router_dom198.useSearchParams)();
      const offsetKey = `${prefix ? `${prefix}_` : ""}offset`;
      const offset4 = searchParams.get(offsetKey);
      const [{ pageIndex, pageSize }, setPagination] = (0, import_react246.useState)({
        pageIndex: offset4 ? Math.ceil(Number(offset4) / _pageSize) : 0,
        pageSize: _pageSize
      });
      const pagination = (0, import_react246.useMemo)(
        () => ({
          pageIndex,
          pageSize
        }),
        [pageIndex, pageSize]
      );
      (0, import_react246.useEffect)(() => {
        const index2 = offset4 ? Math.ceil(Number(offset4) / _pageSize) : 0;
        if (index2 === pageIndex) {
          return;
        }
        setPagination((prev) => ({
          ...prev,
          pageIndex: index2
        }));
      }, [offset4, _pageSize, pageIndex]);
      const onPaginationChange = (updater) => {
        const state = updater(pagination);
        const { pageIndex: pageIndex2, pageSize: pageSize2 } = state;
        setSearchParams((prev) => {
          if (!pageIndex2) {
            prev.delete(offsetKey);
            return prev;
          }
          const newSearch = new URLSearchParams(prev);
          newSearch.set(offsetKey, String(pageIndex2 * pageSize2));
          return newSearch;
        });
        setPagination(state);
        return state;
      };
      const table = (0, import_react_table80.useReactTable)({
        data,
        columns: [],
        // We don't actually want to render any columns
        pageCount: Math.ceil(count3 / pageSize),
        state: {
          pagination
        },
        getCoreRowModel: (0, import_react_table80.getCoreRowModel)(),
        onPaginationChange,
        getPaginationRowModel: (0, import_react_table80.getPaginationRowModel)(),
        manualPagination: true
      });
      return {
        table
      };
    };
  }
});

// src/routes/tax-regions/tax-region-list/components/tax-region-list-view/tax-region-list-view.tsx
var import_ui366, import_react_query84, import_react_i18next405, import_jsx_runtime568, PAGE_SIZE62, TaxRegionListView;
var init_tax_region_list_view = __esm({
  "src/routes/tax-regions/tax-region-list/components/tax-region-list-view/tax-region-list-view.tsx"() {
    "use strict";
    import_ui366 = require("@medusajs/ui");
    import_react_query84 = require("@tanstack/react-query");
    import_react_i18next405 = require("react-i18next");
    init_tax_regions();
    init_use_tax_region_table_query();
    init_tax_region_table2();
    init_use_tax_region_table();
    import_jsx_runtime568 = require("react/jsx-runtime");
    PAGE_SIZE62 = 20;
    TaxRegionListView = () => {
      const { t: t4 } = (0, import_react_i18next405.useTranslation)();
      const { searchParams, raw } = useTaxRegionTableQuery({
        pageSize: PAGE_SIZE62
      });
      const { tax_regions, count: count3, isPending, isError, error } = useTaxRegions(
        {
          ...searchParams,
          order: "country_code",
          parent_id: "null"
        },
        {
          placeholderData: import_react_query84.keepPreviousData
        }
      );
      const { table } = useTaxRegionTable({
        count: count3,
        data: tax_regions,
        pageSize: PAGE_SIZE62
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime568.jsx)(import_ui366.Container, { className: "divide-y p-0", children: /* @__PURE__ */ (0, import_jsx_runtime568.jsxs)(
        TaxRegionTable,
        {
          action: {
            to: "create",
            label: t4("actions.create")
          },
          isPending,
          queryObject: raw,
          table,
          count: count3,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime568.jsx)(import_ui366.Heading, { children: t4("taxes.domain") }),
            /* @__PURE__ */ (0, import_jsx_runtime568.jsx)(import_ui366.Text, { size: "small", className: "text-ui-fg-subtle text-pretty", children: t4("taxRegions.list.hint") })
          ]
        }
      ) });
    };
  }
});

// src/routes/tax-regions/tax-region-list/components/tax-region-list-view/index.ts
var init_tax_region_list_view2 = __esm({
  "src/routes/tax-regions/tax-region-list/components/tax-region-list-view/index.ts"() {
    "use strict";
    init_tax_region_list_view();
  }
});

// src/routes/tax-regions/tax-region-list/tax-region-list.tsx
var import_jsx_runtime569, TaxRegionsList;
var init_tax_region_list = __esm({
  "src/routes/tax-regions/tax-region-list/tax-region-list.tsx"() {
    "use strict";
    init_pages();
    init_extensions();
    init_tax_region_list_view2();
    import_jsx_runtime569 = require("react/jsx-runtime");
    TaxRegionsList = () => {
      const { getWidgets } = useDashboardExtension();
      return /* @__PURE__ */ (0, import_jsx_runtime569.jsx)(
        SingleColumnPage,
        {
          widgets: {
            before: getWidgets("tax.list.before"),
            after: getWidgets("tax.list.after")
          },
          hasOutlet: true,
          children: /* @__PURE__ */ (0, import_jsx_runtime569.jsx)(TaxRegionListView, {})
        }
      );
    };
  }
});

// src/routes/tax-regions/tax-region-list/index.ts
var tax_region_list_exports = {};
__export(tax_region_list_exports, {
  Component: () => TaxRegionsList
});
var init_tax_region_list2 = __esm({
  "src/routes/tax-regions/tax-region-list/index.ts"() {
    "use strict";
    init_tax_region_list();
  }
});

// src/routes/tax-regions/tax-region-create/components/tax-region-create-form/tax-region-create-form.tsx
var import_zod122, import_react_hook_form113, import_zod123, import_icons153, import_ui367, import_react_i18next406, import_jsx_runtime570, TaxRegionCreateSchema, TaxRegionCreateForm;
var init_tax_region_create_form = __esm({
  "src/routes/tax-regions/tax-region-create/components/tax-region-create-form/tax-region-create-form.tsx"() {
    "use strict";
    import_zod122 = require("@hookform/resolvers/zod");
    import_react_hook_form113 = require("react-hook-form");
    import_zod123 = require("zod");
    import_icons153 = require("@medusajs/icons");
    import_ui367 = require("@medusajs/ui");
    import_react_i18next406 = require("react-i18next");
    init_form2();
    init_country_select2();
    init_percentage_input2();
    init_modals();
    init_keybound_form2();
    init_api();
    import_jsx_runtime570 = require("react/jsx-runtime");
    TaxRegionCreateSchema = import_zod123.z.object({
      name: import_zod123.z.string().optional(),
      code: import_zod123.z.string().optional(),
      rate: import_zod123.z.object({
        float: import_zod123.z.number().optional(),
        value: import_zod123.z.string().optional()
      }),
      country_code: import_zod123.z.string().min(1)
    });
    TaxRegionCreateForm = ({ parentId }) => {
      const { t: t4 } = (0, import_react_i18next406.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form113.useForm)({
        defaultValues: {
          name: "",
          rate: {
            value: ""
          },
          code: "",
          country_code: ""
        },
        resolver: (0, import_zod122.zodResolver)(TaxRegionCreateSchema)
      });
      const { mutateAsync, isPending } = useCreateTaxRegion();
      const handleSubmit = form.handleSubmit(async (values) => {
        const defaultRate = values.name ? {
          name: values.name,
          rate: values.rate?.value === "" ? void 0 : parseFloat(values.rate.value),
          code: values.code
        } : void 0;
        await mutateAsync(
          {
            country_code: values.country_code,
            parent_id: parentId,
            default_tax_rate: defaultRate
          },
          {
            onSuccess: ({ tax_region }) => {
              import_ui367.toast.success(t4("taxRegions.create.successToast"));
              handleSuccess(`../${tax_region.id}`);
            },
            onError: (error) => {
              import_ui367.toast.error(error.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime570.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex h-full flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(RouteFocusModal.Header, {}),
            /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(RouteFocusModal.Body, { className: "flex flex-1 flex-col overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime570.jsx)("div", { className: "flex flex-1 flex-col items-center overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime570.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8 px-2 py-16", children: [
              /* @__PURE__ */ (0, import_jsx_runtime570.jsxs)("div", { children: [
                /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(import_ui367.Heading, { className: "capitalize", children: t4("taxRegions.create.header") }),
                /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(import_ui367.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("taxRegions.create.hint") })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime570.jsx)("div", { className: "flex flex-col gap-y-4", children: /* @__PURE__ */ (0, import_jsx_runtime570.jsx)("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2", children: /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "country_code",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime570.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(Form.Label, { children: t4("fields.country") }),
                      /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(CountrySelect, { ...field }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ) }) }),
              /* @__PURE__ */ (0, import_jsx_runtime570.jsxs)("div", { className: "flex flex-col gap-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime570.jsxs)("div", { className: "flex items-center gap-x-1", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(import_ui367.Heading, { level: "h2", className: "!txt-compact-small-plus", children: t4("taxRegions.fields.defaultTaxRate.label") }),
                  /* @__PURE__ */ (0, import_jsx_runtime570.jsxs)(
                    import_ui367.Text,
                    {
                      size: "small",
                      leading: "compact",
                      className: "text-ui-fg-muted",
                      children: [
                        "(",
                        t4("fields.optional"),
                        ")"
                      ]
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(
                    import_ui367.Tooltip,
                    {
                      content: t4("taxRegions.fields.defaultTaxRate.tooltip"),
                      children: /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(import_icons153.InformationCircleSolid, { className: "text-ui-fg-muted" })
                    }
                  )
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime570.jsx)("div", { className: "flex flex-col gap-y-4", children: /* @__PURE__ */ (0, import_jsx_runtime570.jsxs)("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(
                    Form.Field,
                    {
                      control: form.control,
                      name: "name",
                      render: ({ field }) => {
                        return /* @__PURE__ */ (0, import_jsx_runtime570.jsxs)(Form.Item, { children: [
                          /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(Form.Label, { children: t4("fields.name") }),
                          /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(import_ui367.Input, { ...field }) }),
                          /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(Form.ErrorMessage, {})
                        ] });
                      }
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(
                    Form.Field,
                    {
                      control: form.control,
                      name: "rate",
                      render: ({ field: { value, onChange, ...field } }) => {
                        return /* @__PURE__ */ (0, import_jsx_runtime570.jsxs)(Form.Item, { children: [
                          /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(Form.Label, { children: t4("taxRegions.fields.taxRate") }),
                          /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(
                            PercentageInput,
                            {
                              ...field,
                              value: value?.value,
                              onValueChange: (value2, _name, values) => onChange({
                                value: value2,
                                float: values?.float
                              })
                            }
                          ) }),
                          /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(Form.ErrorMessage, {})
                        ] });
                      }
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(
                    Form.Field,
                    {
                      control: form.control,
                      name: "code",
                      render: ({ field }) => {
                        return /* @__PURE__ */ (0, import_jsx_runtime570.jsxs)(Form.Item, { children: [
                          /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(Form.Label, { children: t4("taxRegions.fields.taxCode") }),
                          /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(import_ui367.Input, { ...field }) }),
                          /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(Form.ErrorMessage, {})
                        ] });
                      }
                    }
                  )
                ] }) })
              ] })
            ] }) }) }),
            /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime570.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(import_ui367.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime570.jsx)(import_ui367.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/tax-regions/tax-region-create/components/tax-region-create-form/index.ts
var init_tax_region_create_form2 = __esm({
  "src/routes/tax-regions/tax-region-create/components/tax-region-create-form/index.ts"() {
    "use strict";
    init_tax_region_create_form();
  }
});

// src/routes/tax-regions/tax-region-create/tax-region-create.tsx
var import_jsx_runtime571, TaxRegionCreate;
var init_tax_region_create = __esm({
  "src/routes/tax-regions/tax-region-create/tax-region-create.tsx"() {
    "use strict";
    init_modals();
    init_tax_region_create_form2();
    import_jsx_runtime571 = require("react/jsx-runtime");
    TaxRegionCreate = () => {
      return /* @__PURE__ */ (0, import_jsx_runtime571.jsx)(RouteFocusModal, { children: /* @__PURE__ */ (0, import_jsx_runtime571.jsx)(TaxRegionCreateForm, {}) });
    };
  }
});

// src/routes/tax-regions/tax-region-create/index.ts
var tax_region_create_exports = {};
__export(tax_region_create_exports, {
  Component: () => TaxRegionCreate,
  TaxRegionCreate: () => TaxRegionCreate
});
var init_tax_region_create2 = __esm({
  "src/routes/tax-regions/tax-region-create/index.ts"() {
    "use strict";
    init_tax_region_create();
    init_tax_region_create();
  }
});

// src/routes/tax-regions/common/components/tax-rate-line/tax-rate-line.tsx
var import_icons154, import_ui368, import_react_i18next407, import_jsx_runtime572, TaxRateLine, TaxRateActions;
var init_tax_rate_line = __esm({
  "src/routes/tax-regions/common/components/tax-rate-line/tax-rate-line.tsx"() {
    "use strict";
    import_icons154 = require("@medusajs/icons");
    import_ui368 = require("@medusajs/ui");
    import_react_i18next407 = require("react-i18next");
    init_action_menu2();
    init_percentage_helpers();
    init_hooks4();
    import_jsx_runtime572 = require("react/jsx-runtime");
    TaxRateLine = ({
      taxRate,
      isSublevelTaxRate
    }) => {
      const { t: t4 } = (0, import_react_i18next407.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime572.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-[1fr_1fr_auto] items-center gap-4 px-6 py-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime572.jsxs)("div", { className: "flex items-center gap-x-1.5", children: [
          /* @__PURE__ */ (0, import_jsx_runtime572.jsx)(import_ui368.Text, { size: "small", weight: "plus", leading: "compact", children: taxRate.name }),
          taxRate.code && /* @__PURE__ */ (0, import_jsx_runtime572.jsxs)("div", { className: "flex items-center gap-x-1.5", children: [
            /* @__PURE__ */ (0, import_jsx_runtime572.jsx)(import_ui368.Text, { size: "small", leading: "compact", children: "\xB7" }),
            /* @__PURE__ */ (0, import_jsx_runtime572.jsx)(import_ui368.Text, { size: "small", leading: "compact", children: taxRate.code })
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime572.jsx)(import_ui368.Text, { size: "small", leading: "compact", children: formatPercentage(taxRate.rate) }),
        /* @__PURE__ */ (0, import_jsx_runtime572.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
          isSublevelTaxRate && /* @__PURE__ */ (0, import_jsx_runtime572.jsx)(import_ui368.StatusBadge, { color: taxRate.is_combinable ? "green" : "grey", children: taxRate.is_combinable ? t4("taxRegions.fields.isCombinable.true") : t4("taxRegions.fields.isCombinable.false") }),
          /* @__PURE__ */ (0, import_jsx_runtime572.jsx)(TaxRateActions, { taxRate })
        ] })
      ] });
    };
    TaxRateActions = ({ taxRate }) => {
      const { t: t4 } = (0, import_react_i18next407.useTranslation)();
      const handleDelete = useDeleteTaxRateAction(taxRate);
      return /* @__PURE__ */ (0, import_jsx_runtime572.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  label: t4("actions.edit"),
                  icon: /* @__PURE__ */ (0, import_jsx_runtime572.jsx)(import_icons154.PencilSquare, {}),
                  to: `tax-rates/${taxRate.id}/edit`
                }
              ]
            },
            {
              actions: [
                {
                  label: t4("actions.delete"),
                  icon: /* @__PURE__ */ (0, import_jsx_runtime572.jsx)(import_icons154.Trash, {}),
                  onClick: handleDelete
                }
              ]
            }
          ]
        }
      );
    };
  }
});

// src/routes/tax-regions/common/components/tax-rate-line/index.ts
var init_tax_rate_line2 = __esm({
  "src/routes/tax-regions/common/components/tax-rate-line/index.ts"() {
    "use strict";
    init_tax_rate_line();
  }
});

// src/routes/tax-regions/tax-region-detail/components/tax-region-detail-section/tax-region-detail-section.tsx
var import_ui369, import_react_i18next408, import_jsx_runtime573, TaxRegionDetailSection;
var init_tax_region_detail_section = __esm({
  "src/routes/tax-regions/tax-region-detail/components/tax-region-detail-section/tax-region-detail-section.tsx"() {
    "use strict";
    import_ui369 = require("@medusajs/ui");
    import_react_i18next408 = require("react-i18next");
    init_tax_rate_line2();
    init_tax_region_card2();
    import_jsx_runtime573 = require("react/jsx-runtime");
    TaxRegionDetailSection = ({
      taxRegion
    }) => {
      const { t: t4 } = (0, import_react_i18next408.useTranslation)();
      const defaultRates = taxRegion.tax_rates.filter((r) => r.is_default === true);
      const showBage = defaultRates.length === 0;
      return /* @__PURE__ */ (0, import_jsx_runtime573.jsxs)(import_ui369.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime573.jsx)(
          TaxRegionCard,
          {
            taxRegion,
            type: "header",
            asLink: false,
            badge: showBage && /* @__PURE__ */ (0, import_jsx_runtime573.jsx)(import_ui369.Tooltip, { content: t4("taxRegions.fields.noDefaultRate.tooltip"), children: /* @__PURE__ */ (0, import_jsx_runtime573.jsx)(import_ui369.Badge, { color: "orange", size: "2xsmall", className: "cursor-default", children: t4("taxRegions.fields.noDefaultRate.label") }) })
          }
        ),
        defaultRates.map((rate) => {
          return /* @__PURE__ */ (0, import_jsx_runtime573.jsx)(TaxRateLine, { taxRate: rate }, rate.id);
        })
      ] });
    };
  }
});

// src/routes/tax-regions/tax-region-detail/components/tax-region-detail-section/index.ts
var init_tax_region_detail_section2 = __esm({
  "src/routes/tax-regions/tax-region-detail/components/tax-region-detail-section/index.ts"() {
    "use strict";
    init_tax_region_detail_section();
  }
});

// src/routes/tax-regions/tax-region-detail/components/tax-region-province-section/tax-region-province-section.tsx
var import_ui370, import_react_query85, import_react_i18next409, import_jsx_runtime574, PAGE_SIZE63, PREFIX22, TaxRegionProvinceSection;
var init_tax_region_province_section = __esm({
  "src/routes/tax-regions/tax-region-detail/components/tax-region-province-section/tax-region-province-section.tsx"() {
    "use strict";
    import_ui370 = require("@medusajs/ui");
    import_react_query85 = require("@tanstack/react-query");
    import_react_i18next409 = require("react-i18next");
    init_tax_regions();
    init_use_tax_region_table_query();
    init_country_states();
    init_tax_region_table2();
    init_use_tax_region_table();
    import_jsx_runtime574 = require("react/jsx-runtime");
    PAGE_SIZE63 = 10;
    PREFIX22 = "p";
    TaxRegionProvinceSection = ({
      taxRegion,
      showSublevelRegions
    }) => {
      const { t: t4 } = (0, import_react_i18next409.useTranslation)();
      const { searchParams, raw } = useTaxRegionTableQuery({
        pageSize: PAGE_SIZE63,
        prefix: PREFIX22
      });
      const { tax_regions, count: count3, isPending, isError, error } = useTaxRegions(
        {
          ...searchParams,
          parent_id: taxRegion.id
        },
        {
          placeholderData: import_react_query85.keepPreviousData
        }
      );
      const { table } = useTaxRegionTable({
        count: count3,
        data: tax_regions,
        pageSize: PAGE_SIZE63,
        prefix: PREFIX22
      });
      const provinceObject = getCountryProvinceObjectByIso2(taxRegion.country_code);
      if (!provinceObject && !showSublevelRegions && !taxRegion.children.length) {
        return null;
      }
      const type = provinceObject?.type || "sublevel";
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime574.jsx)(import_ui370.Container, { className: "divide-y p-0", children: /* @__PURE__ */ (0, import_jsx_runtime574.jsx)(
        TaxRegionTable,
        {
          variant: "province",
          action: { to: `provinces/create`, label: t4("actions.create") },
          table,
          isPending,
          queryObject: raw,
          count: count3,
          children: /* @__PURE__ */ (0, import_jsx_runtime574.jsx)(import_ui370.Heading, { level: "h2", children: t4(`taxRegions.${type}.header`) })
        }
      ) });
    };
  }
});

// src/routes/tax-regions/tax-region-detail/components/tax-region-province-section/index.ts
var init_tax_region_province_section2 = __esm({
  "src/routes/tax-regions/tax-region-detail/components/tax-region-province-section/index.ts"() {
    "use strict";
    init_tax_region_province_section();
  }
});

// src/routes/tax-regions/common/constants.ts
var TaxRateRuleReferenceType;
var init_constants21 = __esm({
  "src/routes/tax-regions/common/constants.ts"() {
    "use strict";
    TaxRateRuleReferenceType = /* @__PURE__ */ ((TaxRateRuleReferenceType2) => {
      TaxRateRuleReferenceType2["PRODUCT"] = "product";
      TaxRateRuleReferenceType2["PRODUCT_TYPE"] = "product_type";
      return TaxRateRuleReferenceType2;
    })(TaxRateRuleReferenceType || {});
  }
});

// src/routes/tax-regions/common/components/tax-override-card/tax-override-card.tsx
var import_icons155, import_ui371, Collapsible6, import_react_i18next410, import_jsx_runtime575, TaxOverrideCard, Reference, ReferenceBadge, ReferenceValues, useReferenceValues;
var init_tax_override_card = __esm({
  "src/routes/tax-regions/common/components/tax-override-card/tax-override-card.tsx"() {
    "use strict";
    import_icons155 = require("@medusajs/icons");
    import_ui371 = require("@medusajs/ui");
    Collapsible6 = __toESM(require("@radix-ui/react-collapsible"));
    import_react_i18next410 = require("react-i18next");
    init_action_menu2();
    init_divider2();
    init_collections();
    init_customer_groups();
    init_product_types();
    init_products();
    init_tags();
    init_percentage_helpers();
    init_constants21();
    init_hooks4();
    import_jsx_runtime575 = require("react/jsx-runtime");
    TaxOverrideCard = ({ taxRate }) => {
      const { t: t4 } = (0, import_react_i18next410.useTranslation)();
      const handleDelete = useDeleteTaxRateAction(taxRate);
      if (taxRate.is_default) {
        return null;
      }
      const groupedRules = taxRate.rules.reduce((acc, rule) => {
        if (!acc[rule.reference]) {
          acc[rule.reference] = [];
        }
        acc[rule.reference].push(rule.reference_id);
        return acc;
      }, {});
      const validKeys = Object.values(TaxRateRuleReferenceType);
      const numberOfTargets = Object.keys(groupedRules).map(
        (key) => validKeys.includes(key)
      ).length;
      return /* @__PURE__ */ (0, import_jsx_runtime575.jsxs)(Collapsible6.Root, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime575.jsxs)("div", { className: "flex items-center justify-between px-6 py-3", children: [
          /* @__PURE__ */ (0, import_jsx_runtime575.jsxs)("div", { className: "flex items-center gap-x-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(Collapsible6.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(import_ui371.IconButton, { size: "2xsmall", variant: "transparent", className: "group", children: /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(import_icons155.TriangleRightMini, { className: "text-ui-fg-muted transition-transform group-data-[state='open']:rotate-90" }) }) }),
            /* @__PURE__ */ (0, import_jsx_runtime575.jsxs)("div", { className: "flex items-center gap-x-1.5", children: [
              /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(import_ui371.Text, { size: "small", weight: "plus", leading: "compact", children: taxRate.name }),
              taxRate.code && /* @__PURE__ */ (0, import_jsx_runtime575.jsxs)("div", { className: "text-ui-fg-subtle flex items-center gap-x-1.5", children: [
                /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(import_ui371.Text, { size: "small", leading: "compact", children: "\xB7" }),
                /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(import_ui371.Text, { size: "small", leading: "compact", children: taxRate.code })
              ] })
            ] })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime575.jsxs)("div", { className: "flex items-center gap-x-3", children: [
            /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(import_ui371.Text, { size: "small", leading: "compact", className: "text-ui-fg-subtle", children: t4("taxRegions.fields.targets.numberOfTargets", {
              count: numberOfTargets
            }) }),
            /* @__PURE__ */ (0, import_jsx_runtime575.jsx)("div", { className: "bg-ui-border-base h-3 w-px" }),
            /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(import_ui371.StatusBadge, { color: taxRate.is_combinable ? "green" : "grey", children: taxRate.is_combinable ? t4("taxRegions.fields.isCombinable.true") : t4("taxRegions.fields.isCombinable.false") }),
            /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(
              ActionMenu,
              {
                groups: [
                  {
                    actions: [
                      {
                        label: t4("actions.edit"),
                        icon: /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(import_icons155.PencilSquare, {}),
                        to: `overrides/${taxRate.id}/edit`
                      }
                    ]
                  },
                  {
                    actions: [
                      {
                        label: t4("actions.delete"),
                        icon: /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(import_icons155.Trash, {}),
                        onClick: handleDelete
                      }
                    ]
                  }
                ]
              }
            )
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(Collapsible6.Content, { children: /* @__PURE__ */ (0, import_jsx_runtime575.jsxs)("div", { className: "bg-ui-bg-subtle", children: [
          /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(Divider, { variant: "dashed" }),
          /* @__PURE__ */ (0, import_jsx_runtime575.jsx)("div", { className: "px-6 py-3", children: /* @__PURE__ */ (0, import_jsx_runtime575.jsxs)("div", { className: "flex items-center gap-x-3", children: [
            /* @__PURE__ */ (0, import_jsx_runtime575.jsx)("div", { className: "text-ui-fg-muted flex size-5 items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(import_icons155.ArrowDownRightMini, {}) }),
            /* @__PURE__ */ (0, import_jsx_runtime575.jsxs)("div", { className: "flex flex-wrap items-center gap-x-1.5 gap-y-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(import_ui371.Badge, { size: "2xsmall", children: formatPercentage(taxRate.rate) }),
              /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(
                import_ui371.Text,
                {
                  size: "small",
                  leading: "compact",
                  className: "text-ui-fg-subtle",
                  children: t4("taxRegions.fields.targets.operators.on")
                }
              ),
              Object.entries(groupedRules).map(([reference, ids], index2) => {
                return /* @__PURE__ */ (0, import_jsx_runtime575.jsxs)(
                  "div",
                  {
                    className: "flex items-center gap-x-1.5",
                    children: [
                      /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(
                        Reference,
                        {
                          reference,
                          ids
                        },
                        reference
                      ),
                      index2 < Object.keys(groupedRules).length - 1 && /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(
                        import_ui371.Text,
                        {
                          size: "small",
                          leading: "compact",
                          className: "text-ui-fg-subtle",
                          children: t4("taxRegions.fields.targets.operators.and")
                        }
                      )
                    ]
                  },
                  reference
                );
              })
            ] })
          ] }) })
        ] }) })
      ] });
    };
    Reference = ({
      reference,
      ids
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime575.jsxs)("div", { className: "flex items-center gap-x-1.5", children: [
        /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(ReferenceBadge, { reference }),
        /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(ReferenceValues, { type: reference, ids })
      ] });
    };
    ReferenceBadge = ({
      reference
    }) => {
      const { t: t4 } = (0, import_react_i18next410.useTranslation)();
      let label = null;
      switch (reference) {
        case "product" /* PRODUCT */:
          label = t4("taxRegions.fields.targets.tags.product");
          break;
        case TaxRateRuleReferenceType.PRODUCT_COLLECTION:
          label = t4("taxRegions.fields.targets.tags.productCollection");
          break;
        case TaxRateRuleReferenceType.PRODUCT_TAG:
          label = t4("taxRegions.fields.targets.tags.productTag");
          break;
        case "product_type" /* PRODUCT_TYPE */:
          label = t4("taxRegions.fields.targets.tags.productType");
          break;
        case TaxRateRuleReferenceType.CUSTOMER_GROUP:
          label = t4("taxRegions.fields.targets.tags.customerGroup");
          break;
      }
      if (!label) {
        return null;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(import_ui371.Badge, { size: "2xsmall", children: label });
    };
    ReferenceValues = ({
      type,
      ids
    }) => {
      const { t: t4 } = (0, import_react_i18next410.useTranslation)();
      const { isPending, additional, labels, isError, error } = useReferenceValues(
        type,
        ids
      );
      if (isError) {
        throw error;
      }
      if (isPending) {
        return /* @__PURE__ */ (0, import_jsx_runtime575.jsx)("div", { className: "bg-ui-tag-neutral-bg border-ui-tag-neutral-border h-5 w-14 animate-pulse rounded-md" });
      }
      return /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(
        import_ui371.Tooltip,
        {
          content: /* @__PURE__ */ (0, import_jsx_runtime575.jsxs)("ul", { children: [
            labels?.map((label, index2) => /* @__PURE__ */ (0, import_jsx_runtime575.jsx)("li", { children: label }, index2)),
            additional > 0 && /* @__PURE__ */ (0, import_jsx_runtime575.jsx)("li", { children: t4("taxRegions.fields.targets.additionalValues", {
              count: additional
            }) })
          ] }),
          children: /* @__PURE__ */ (0, import_jsx_runtime575.jsx)(import_ui371.Badge, { size: "2xsmall", children: t4("taxRegions.fields.targets.values", {
            count: ids.length
          }) })
        }
      );
    };
    useReferenceValues = (type, ids) => {
      const products = useProducts(
        {
          id: ids,
          limit: 10
        },
        {
          enabled: !!ids.length && type === "product" /* PRODUCT */
        }
      );
      const tags = useProductTags(
        {
          id: ids,
          limit: 10
        },
        {
          enabled: !!ids.length && type === TaxRateRuleReferenceType.PRODUCT_TAG
        }
      );
      const productTypes = useProductTypes(
        {
          id: ids,
          limit: 10
        },
        {
          enabled: !!ids.length && type === "product_type" /* PRODUCT_TYPE */
        }
      );
      const collections = useCollections(
        {
          id: ids,
          limit: 10
        },
        {
          enabled: !!ids.length && type === TaxRateRuleReferenceType.PRODUCT_COLLECTION
        }
      );
      const customerGroups = useCustomerGroups(
        {
          id: ids,
          limit: 10
        },
        {
          enabled: !!ids.length && type === TaxRateRuleReferenceType.CUSTOMER_GROUP
        }
      );
      switch (type) {
        case "product" /* PRODUCT */:
          return {
            labels: products.products?.map((product) => product.title),
            isPending: products.isPending,
            additional: products.products && products.count ? products.count - products.products.length : 0,
            isError: products.isError,
            error: products.error
          };
        case TaxRateRuleReferenceType.PRODUCT_TAG:
          return {
            labels: tags.product_tags?.map((tag) => tag.value),
            isPending: tags.isPending,
            additional: tags.product_tags && tags.count ? tags.count - tags.product_tags.length : 0,
            isError: tags.isError,
            error: tags.error
          };
        case "product_type" /* PRODUCT_TYPE */:
          return {
            labels: productTypes.product_types?.map((type2) => type2.value),
            isPending: productTypes.isPending,
            additional: productTypes.product_types && productTypes.count ? productTypes.count - productTypes.product_types.length : 0,
            isError: productTypes.isError,
            error: productTypes.error
          };
        case TaxRateRuleReferenceType.PRODUCT_COLLECTION:
          return {
            labels: collections.collections?.map((collection) => collection.title),
            isPending: collections.isPending,
            additional: collections.collections && collections.count ? collections.count - collections.collections.length : 0,
            isError: collections.isError,
            error: collections.error
          };
        case TaxRateRuleReferenceType.CUSTOMER_GROUP:
          return {
            labels: customerGroups.customer_groups?.map((group) => group.name),
            isPending: customerGroups.isPending,
            additional: customerGroups.customer_groups && customerGroups.count ? customerGroups.count - customerGroups.customer_groups.length : 0,
            isError: customerGroups.isError,
            error: customerGroups.error
          };
      }
    };
  }
});

// src/routes/tax-regions/common/components/tax-override-card/index.ts
var init_tax_override_card2 = __esm({
  "src/routes/tax-regions/common/components/tax-override-card/index.ts"() {
    "use strict";
    init_tax_override_card();
  }
});

// src/routes/tax-regions/common/components/tax-override-table/tax-override-table.tsx
var import_ui372, import_react_router_dom199, import_jsx_runtime576, TaxOverrideTable;
var init_tax_override_table = __esm({
  "src/routes/tax-regions/common/components/tax-override-table/tax-override-table.tsx"() {
    "use strict";
    import_ui372 = require("@medusajs/ui");
    import_react_router_dom199 = require("react-router-dom");
    init_empty_table_content2();
    init_skeleton2();
    init_localized_table_pagination2();
    init_data_table_order_by2();
    init_data_table_search2();
    init_tax_override_card2();
    import_jsx_runtime576 = require("react/jsx-runtime");
    TaxOverrideTable = ({
      isPending,
      action,
      count: count3 = 0,
      table,
      queryObject,
      prefix,
      children
    }) => {
      if (isPending) {
        return /* @__PURE__ */ (0, import_jsx_runtime576.jsxs)("div", { className: "flex flex-col divide-y", children: [
          Array.from({ length: 3 }).map((_, index2) => {
            return /* @__PURE__ */ (0, import_jsx_runtime576.jsx)(
              "div",
              {
                className: "bg-ui-bg-field-component h-[52px] w-full animate-pulse"
              },
              index2
            );
          }),
          /* @__PURE__ */ (0, import_jsx_runtime576.jsx)(TableFooterSkeleton, { layout: "fit" })
        ] });
      }
      const noQuery = Object.values(queryObject).filter((v) => Boolean(v)).length === 0;
      const noResults = !isPending && count3 === 0 && !noQuery;
      const noRecords = !isPending && count3 === 0 && noQuery;
      const { pageIndex, pageSize } = table.getState().pagination;
      return /* @__PURE__ */ (0, import_jsx_runtime576.jsxs)("div", { className: "flex flex-col divide-y", children: [
        /* @__PURE__ */ (0, import_jsx_runtime576.jsxs)("div", { className: "flex flex-col justify-between gap-x-4 gap-y-3 px-6 py-4 md:flex-row md:items-center", children: [
          /* @__PURE__ */ (0, import_jsx_runtime576.jsx)("div", { children }),
          /* @__PURE__ */ (0, import_jsx_runtime576.jsxs)("div", { className: "flex items-center gap-x-2", children: [
            !noRecords && /* @__PURE__ */ (0, import_jsx_runtime576.jsxs)("div", { className: "flex w-full items-center gap-x-2 md:w-fit", children: [
              /* @__PURE__ */ (0, import_jsx_runtime576.jsx)("div", { className: "w-full md:w-fit", children: /* @__PURE__ */ (0, import_jsx_runtime576.jsx)(DataTableSearch, { prefix }) }),
              /* @__PURE__ */ (0, import_jsx_runtime576.jsx)(
                DataTableOrderBy,
                {
                  keys: ["name", "rate", "code", "updated_at", "created_at"],
                  prefix
                }
              )
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime576.jsx)(import_react_router_dom199.Link, { to: action.to, children: /* @__PURE__ */ (0, import_jsx_runtime576.jsx)(import_ui372.Button, { size: "small", variant: "secondary", children: action.label }) })
          ] })
        ] }),
        noResults && /* @__PURE__ */ (0, import_jsx_runtime576.jsx)(NoResults, {}),
        noRecords && /* @__PURE__ */ (0, import_jsx_runtime576.jsx)(NoRecords, {}),
        !noRecords && !noResults ? !isPending ? table.getRowModel().rows.map((row) => {
          return /* @__PURE__ */ (0, import_jsx_runtime576.jsx)(
            TaxOverrideCard,
            {
              taxRate: row.original,
              role: "row",
              "aria-rowindex": row.index
            },
            row.id
          );
        }) : Array.from({ length: 3 }).map((_, index2) => {
          return /* @__PURE__ */ (0, import_jsx_runtime576.jsx)(
            "div",
            {
              className: "bg-ui-bg-field-component h-[60px] w-full animate-pulse"
            },
            index2
          );
        }) : null,
        !noRecords && /* @__PURE__ */ (0, import_jsx_runtime576.jsx)(
          LocalizedTablePagination,
          {
            prefix,
            canNextPage: table.getCanNextPage(),
            canPreviousPage: table.getCanPreviousPage(),
            count: count3,
            nextPage: table.nextPage,
            previousPage: table.previousPage,
            pageCount: table.getPageCount(),
            pageIndex,
            pageSize
          }
        )
      ] });
    };
  }
});

// src/routes/tax-regions/common/components/tax-override-table/index.ts
var init_tax_override_table2 = __esm({
  "src/routes/tax-regions/common/components/tax-override-table/index.ts"() {
    "use strict";
    init_tax_override_table();
  }
});

// src/routes/tax-regions/common/hooks/use-tax-override-table.tsx
var import_react_table81, import_react247, import_react_router_dom200, useTaxOverrideTable;
var init_use_tax_override_table = __esm({
  "src/routes/tax-regions/common/hooks/use-tax-override-table.tsx"() {
    "use strict";
    import_react_table81 = require("@tanstack/react-table");
    import_react247 = require("react");
    import_react_router_dom200 = require("react-router-dom");
    useTaxOverrideTable = ({
      data = [],
      count: count3 = 0,
      pageSize: _pageSize = 10,
      prefix
    }) => {
      const [searchParams, setSearchParams] = (0, import_react_router_dom200.useSearchParams)();
      const offsetKey = `${prefix ? `${prefix}_` : ""}offset`;
      const offset4 = searchParams.get(offsetKey);
      const [{ pageIndex, pageSize }, setPagination] = (0, import_react247.useState)({
        pageIndex: offset4 ? Math.ceil(Number(offset4) / _pageSize) : 0,
        pageSize: _pageSize
      });
      const pagination = (0, import_react247.useMemo)(
        () => ({
          pageIndex,
          pageSize
        }),
        [pageIndex, pageSize]
      );
      (0, import_react247.useEffect)(() => {
        const index2 = offset4 ? Math.ceil(Number(offset4) / _pageSize) : 0;
        if (index2 === pageIndex) {
          return;
        }
        setPagination((prev) => ({
          ...prev,
          pageIndex: index2
        }));
      }, [offset4, _pageSize, pageIndex]);
      const onPaginationChange = (updater) => {
        const state = updater(pagination);
        const { pageIndex: pageIndex2, pageSize: pageSize2 } = state;
        setSearchParams((prev) => {
          if (!pageIndex2) {
            prev.delete(offsetKey);
            return prev;
          }
          const newSearch = new URLSearchParams(prev);
          newSearch.set(offsetKey, String(pageIndex2 * pageSize2));
          return newSearch;
        });
        setPagination(state);
        return state;
      };
      const table = (0, import_react_table81.useReactTable)({
        data,
        columns: [],
        // We don't actually want to render any columns
        pageCount: Math.ceil(count3 / pageSize),
        state: {
          pagination
        },
        getCoreRowModel: (0, import_react_table81.getCoreRowModel)(),
        onPaginationChange,
        getPaginationRowModel: (0, import_react_table81.getPaginationRowModel)(),
        manualPagination: true
      });
      return {
        table
      };
    };
  }
});

// src/routes/tax-regions/tax-region-detail/components/tax-region-override-section/tax-region-override-section.tsx
var import_ui373, import_react_query86, import_react_i18next411, import_jsx_runtime577, PAGE_SIZE64, PREFIX23, TaxRegionOverrideSection;
var init_tax_region_override_section = __esm({
  "src/routes/tax-regions/tax-region-detail/components/tax-region-override-section/tax-region-override-section.tsx"() {
    "use strict";
    import_ui373 = require("@medusajs/ui");
    import_react_query86 = require("@tanstack/react-query");
    import_react_i18next411 = require("react-i18next");
    init_tax_rates();
    init_use_tax_rate_table_query();
    init_tax_override_table2();
    init_use_tax_override_table();
    import_jsx_runtime577 = require("react/jsx-runtime");
    PAGE_SIZE64 = 10;
    PREFIX23 = "o";
    TaxRegionOverrideSection = ({
      taxRegion
    }) => {
      const { t: t4 } = (0, import_react_i18next411.useTranslation)();
      const { searchParams, raw } = useTaxRateTableQuery({
        pageSize: PAGE_SIZE64,
        prefix: PREFIX23
      });
      const { tax_rates, count: count3, isPending, isError, error } = useTaxRates(
        {
          ...searchParams,
          tax_region_id: taxRegion.id,
          is_default: false
        },
        {
          placeholderData: import_react_query86.keepPreviousData
        }
      );
      const { table } = useTaxOverrideTable({
        count: count3,
        data: tax_rates,
        pageSize: PAGE_SIZE64,
        prefix: PREFIX23
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime577.jsx)(import_ui373.Container, { className: "p-0", children: /* @__PURE__ */ (0, import_jsx_runtime577.jsx)(
        TaxOverrideTable,
        {
          isPending,
          table,
          count: count3,
          action: {
            label: t4("actions.create"),
            to: "overrides/create"
          },
          queryObject: raw,
          prefix: PREFIX23,
          children: /* @__PURE__ */ (0, import_jsx_runtime577.jsx)(import_ui373.Heading, { level: "h2", children: t4("taxRegions.taxOverrides.header") })
        }
      ) });
    };
  }
});

// src/routes/tax-regions/tax-region-detail/components/tax-region-override-section/index.ts
var init_tax_region_override_section2 = __esm({
  "src/routes/tax-regions/tax-region-detail/components/tax-region-override-section/index.ts"() {
    "use strict";
    init_tax_region_override_section();
  }
});

// src/routes/tax-regions/tax-region-detail/components/tax-region-sublevel-alert/tax-region-sublevel-alert.tsx
var import_ui374, import_react248, import_react_i18next412, import_jsx_runtime578, TaxRegionSublevelAlert;
var init_tax_region_sublevel_alert = __esm({
  "src/routes/tax-regions/tax-region-detail/components/tax-region-sublevel-alert/tax-region-sublevel-alert.tsx"() {
    "use strict";
    import_ui374 = require("@medusajs/ui");
    import_react248 = require("react");
    import_react_i18next412 = require("react-i18next");
    init_country_states();
    import_jsx_runtime578 = require("react/jsx-runtime");
    TaxRegionSublevelAlert = ({
      taxRegion,
      showSublevelRegions,
      setShowSublevelRegions
    }) => {
      const { t: t4 } = (0, import_react_i18next412.useTranslation)();
      const [dismissed, setDismissed] = (0, import_react248.useState)(false);
      const provinceObject = getCountryProvinceObjectByIso2(taxRegion.country_code);
      if (provinceObject || showSublevelRegions || dismissed || taxRegion.children.length) {
        return null;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime578.jsx)(import_ui374.Alert, { dismissible: true, variant: "info", className: "bg-ui-bg-base", children: /* @__PURE__ */ (0, import_jsx_runtime578.jsxs)("div", { className: "flex flex-col gap-y-3", children: [
        /* @__PURE__ */ (0, import_jsx_runtime578.jsxs)("div", { className: "flex flex-col", children: [
          /* @__PURE__ */ (0, import_jsx_runtime578.jsx)(import_ui374.Text, { size: "small", leading: "compact", weight: "plus", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime578.jsx)("h2", { children: t4("taxRegions.fields.sublevels.alert.header") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime578.jsx)(import_ui374.Text, { size: "small", leading: "compact", className: "text-pretty", children: t4("taxRegions.fields.sublevels.alert.description") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime578.jsxs)("div", { className: "flex items-center gap-x-3", children: [
          /* @__PURE__ */ (0, import_jsx_runtime578.jsx)(
            import_ui374.Button,
            {
              variant: "secondary",
              size: "small",
              onClick: () => setShowSublevelRegions(true),
              children: t4("taxRegions.fields.sublevels.alert.action")
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime578.jsx)(
            import_ui374.Button,
            {
              variant: "transparent",
              size: "small",
              onClick: () => setDismissed(true),
              children: t4("actions.hide")
            }
          )
        ] })
      ] }) });
    };
  }
});

// src/routes/tax-regions/tax-region-detail/components/tax-region-sublevel-alert/index.ts
var init_tax_region_sublevel_alert2 = __esm({
  "src/routes/tax-regions/tax-region-detail/components/tax-region-sublevel-alert/index.ts"() {
    "use strict";
    init_tax_region_sublevel_alert();
  }
});

// src/routes/tax-regions/tax-region-detail/tax-region-detail.tsx
var import_react_router_dom201, import_react249, import_jsx_runtime579, TaxRegionDetail;
var init_tax_region_detail = __esm({
  "src/routes/tax-regions/tax-region-detail/tax-region-detail.tsx"() {
    "use strict";
    import_react_router_dom201 = require("react-router-dom");
    init_pages();
    init_tax_regions();
    init_tax_region_detail_section2();
    init_tax_region_province_section2();
    import_react249 = require("react");
    init_skeleton2();
    init_extensions();
    init_tax_region_override_section2();
    init_tax_region_sublevel_alert2();
    import_jsx_runtime579 = require("react/jsx-runtime");
    TaxRegionDetail = () => {
      const { id: id2 } = (0, import_react_router_dom201.useParams)();
      const [showSublevelRegions, setShowSublevelRegions] = (0, import_react249.useState)(false);
      const initialData = (0, import_react_router_dom201.useLoaderData)();
      const {
        tax_region: taxRegion,
        isLoading,
        isError,
        error
      } = useTaxRegion(id2, void 0, { initialData });
      const { getWidgets } = useDashboardExtension();
      if (isLoading || !taxRegion) {
        return /* @__PURE__ */ (0, import_jsx_runtime579.jsx)(SingleColumnPageSkeleton, { sections: 4, showJSON: true });
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime579.jsxs)(
        SingleColumnPage,
        {
          data: taxRegion,
          showJSON: true,
          widgets: {
            after: getWidgets("tax.details.after"),
            before: getWidgets("tax.details.before")
          },
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime579.jsx)(
              TaxRegionSublevelAlert,
              {
                taxRegion,
                showSublevelRegions,
                setShowSublevelRegions
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime579.jsx)(TaxRegionDetailSection, { taxRegion }),
            /* @__PURE__ */ (0, import_jsx_runtime579.jsx)(
              TaxRegionProvinceSection,
              {
                taxRegion,
                showSublevelRegions
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime579.jsx)(TaxRegionOverrideSection, { taxRegion })
          ]
        }
      );
    };
  }
});

// src/routes/tax-regions/tax-region-detail/index.ts
var tax_region_detail_exports = {};
__export(tax_region_detail_exports, {
  Component: () => TaxRegionDetail,
  TaxRegionDetail: () => TaxRegionDetail,
  loader: () => taxRegionLoader
});
var init_tax_region_detail2 = __esm({
  "src/routes/tax-regions/tax-region-detail/index.ts"() {
    "use strict";
    init_tax_region_detail();
    init_loader2();
    init_tax_region_detail();
  }
});

// src/components/inputs/province-select/province-select.tsx
var import_react250, import_icons156, import_ui375, import_react_i18next413, import_jsx_runtime580, ProvinceSelect;
var init_province_select = __esm({
  "src/components/inputs/province-select/province-select.tsx"() {
    "use strict";
    import_react250 = require("react");
    import_icons156 = require("@medusajs/icons");
    import_ui375 = require("@medusajs/ui");
    import_react_i18next413 = require("react-i18next");
    init_country_states();
    import_jsx_runtime580 = require("react/jsx-runtime");
    ProvinceSelect = (0, import_react250.forwardRef)(
      ({
        className,
        disabled,
        placeholder,
        country_code,
        valueAs = "iso_2",
        ...props
      }, ref) => {
        const { t: t4 } = (0, import_react_i18next413.useTranslation)();
        const innerRef = (0, import_react250.useRef)(null);
        (0, import_react250.useImperativeHandle)(ref, () => innerRef.current);
        const isPlaceholder = innerRef.current?.value === "";
        const provinceObject = getCountryProvinceObjectByIso2(country_code);
        if (!provinceObject) {
          disabled = true;
        }
        const options = Object.entries(provinceObject?.options ?? {}).map(
          ([iso2, name]) => {
            return /* @__PURE__ */ (0, import_jsx_runtime580.jsx)("option", { value: valueAs === "iso_2" ? iso2 : name, children: name }, iso2);
          }
        );
        const placeholderText = provinceObject ? t4(`taxRegions.fields.sublevels.placeholders.${provinceObject.type}`) : "";
        const placeholderOption = provinceObject ? /* @__PURE__ */ (0, import_jsx_runtime580.jsx)("option", { value: "", disabled: true, className: "text-ui-fg-muted", children: placeholder || placeholderText }) : null;
        return /* @__PURE__ */ (0, import_jsx_runtime580.jsxs)("div", { className: "relative", children: [
          /* @__PURE__ */ (0, import_jsx_runtime580.jsx)(
            import_icons156.TrianglesMini,
            {
              className: (0, import_ui375.clx)(
                "text-ui-fg-muted transition-fg pointer-events-none absolute right-2 top-1/2 -translate-y-1/2",
                {
                  "text-ui-fg-disabled": disabled
                }
              )
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime580.jsxs)(
            "select",
            {
              disabled,
              className: (0, import_ui375.clx)(
                "bg-ui-bg-field shadow-buttons-neutral transition-fg txt-compact-small flex w-full select-none appearance-none items-center justify-between rounded-md px-2 py-1.5 outline-none",
                "placeholder:text-ui-fg-muted text-ui-fg-base",
                "hover:bg-ui-bg-field-hover",
                "focus-visible:shadow-borders-interactive-with-active data-[state=open]:!shadow-borders-interactive-with-active",
                "aria-[invalid=true]:border-ui-border-error aria-[invalid=true]:shadow-borders-error",
                "invalid::border-ui-border-error invalid:shadow-borders-error",
                "disabled:!bg-ui-bg-disabled disabled:!text-ui-fg-disabled",
                {
                  "text-ui-fg-muted": isPlaceholder
                },
                className
              ),
              ...props,
              ref: innerRef,
              children: [
                placeholderOption,
                options
              ]
            }
          )
        ] });
      }
    );
    ProvinceSelect.displayName = "CountrySelect";
  }
});

// src/components/inputs/province-select/index.ts
var init_province_select2 = __esm({
  "src/components/inputs/province-select/index.ts"() {
    "use strict";
    init_province_select();
  }
});

// src/routes/tax-regions/tax-region-province-create/components/tax-region-province-create-form/tax-region-province-create-form.tsx
var import_zod124, import_icons157, import_ui376, import_react_hook_form114, import_react_i18next414, import_zod125, import_jsx_runtime581, CreateTaxRegionProvinceSchema, TaxRegionProvinceCreateForm;
var init_tax_region_province_create_form = __esm({
  "src/routes/tax-regions/tax-region-province-create/components/tax-region-province-create-form/tax-region-province-create-form.tsx"() {
    "use strict";
    import_zod124 = require("@hookform/resolvers/zod");
    import_icons157 = require("@medusajs/icons");
    import_ui376 = require("@medusajs/ui");
    import_react_hook_form114 = require("react-hook-form");
    import_react_i18next414 = require("react-i18next");
    import_zod125 = require("zod");
    init_form2();
    init_switch_box2();
    init_percentage_input2();
    init_province_select2();
    init_modals();
    init_keybound_form2();
    init_tax_regions();
    init_country_states();
    import_jsx_runtime581 = require("react/jsx-runtime");
    CreateTaxRegionProvinceSchema = import_zod125.z.object({
      province_code: import_zod125.z.string().min(1),
      name: import_zod125.z.string().optional(),
      code: import_zod125.z.string().min(1),
      rate: import_zod125.z.object({
        float: import_zod125.z.number().optional(),
        value: import_zod125.z.string().optional()
      }).optional(),
      is_combinable: import_zod125.z.boolean().optional()
    });
    TaxRegionProvinceCreateForm = ({
      parent
    }) => {
      const { t: t4 } = (0, import_react_i18next414.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form114.useForm)({
        defaultValues: {
          province_code: "",
          code: "",
          is_combinable: false,
          name: "",
          rate: {
            value: ""
          }
        },
        resolver: (0, import_zod124.zodResolver)(CreateTaxRegionProvinceSchema)
      });
      const { mutateAsync, isPending } = useCreateTaxRegion();
      const handleSubmit = form.handleSubmit(async (values) => {
        const defaultRate = values.name && values.rate?.float ? {
          name: values.name,
          rate: values.rate.float,
          code: values.code,
          is_combinable: values.is_combinable
        } : void 0;
        await mutateAsync(
          {
            country_code: parent.country_code,
            province_code: values.province_code,
            parent_id: parent.id,
            default_tax_rate: defaultRate
          },
          {
            onSuccess: ({ tax_region }) => {
              import_ui376.toast.success(t4("taxRegions.create.successToast"));
              handleSuccess(
                `/settings/tax-regions/${parent.id}/provinces/${tax_region.id}`
              );
            },
            onError: (error) => {
              import_ui376.toast.error(error.message);
            }
          }
        );
      });
      const countryProvinceObject = getCountryProvinceObjectByIso2(
        parent.country_code
      );
      const type = countryProvinceObject?.type || "sublevel";
      const label = t4(`taxRegions.fields.sublevels.labels.${type}`);
      return /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime581.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex h-full flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(RouteFocusModal.Header, {}),
            /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(RouteFocusModal.Body, { className: "flex flex-1 flex-col overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime581.jsx)("div", { className: "flex flex-1 flex-col items-center overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime581.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8 px-2 py-16", children: [
              /* @__PURE__ */ (0, import_jsx_runtime581.jsxs)("div", { children: [
                /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(import_ui376.Heading, { children: t4(`taxRegions.${type}.create.header`) }),
                /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(import_ui376.Text, { size: "small", className: "text-ui-fg-subtle", children: t4(`taxRegions.${type}.create.hint`) })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime581.jsx)("div", { className: "grid gap-4 md:grid-cols-2", children: /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "province_code",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime581.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(
                        Form.Label,
                        {
                          tooltip: !countryProvinceObject && t4("taxRegions.fields.sublevels.tooltips.sublevel"),
                          children: label
                        }
                      ),
                      /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(Form.Control, { children: countryProvinceObject ? /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(
                        ProvinceSelect,
                        {
                          country_code: parent.country_code,
                          ...field
                        }
                      ) : /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(import_ui376.Input, { ...field, placeholder: "KR-26" }) }),
                      /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ) }),
              /* @__PURE__ */ (0, import_jsx_runtime581.jsxs)("div", { className: "flex flex-col gap-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime581.jsxs)("div", { className: "flex items-center gap-x-1", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(import_ui376.Heading, { level: "h2", className: "!txt-compact-small-plus", children: t4("taxRegions.fields.defaultTaxRate.label") }),
                  /* @__PURE__ */ (0, import_jsx_runtime581.jsxs)(
                    import_ui376.Text,
                    {
                      size: "small",
                      leading: "compact",
                      className: "text-ui-fg-muted",
                      children: [
                        "(",
                        t4("fields.optional"),
                        ")"
                      ]
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(
                    import_ui376.Tooltip,
                    {
                      content: t4("taxRegions.fields.defaultTaxRate.tooltip"),
                      children: /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(import_icons157.InformationCircleSolid, { className: "text-ui-fg-muted" })
                    }
                  )
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime581.jsxs)("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(
                    Form.Field,
                    {
                      control: form.control,
                      name: "name",
                      render: ({ field }) => {
                        return /* @__PURE__ */ (0, import_jsx_runtime581.jsxs)(Form.Item, { children: [
                          /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(Form.Label, { children: t4("fields.name") }),
                          /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(import_ui376.Input, { ...field }) }),
                          /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(Form.ErrorMessage, {})
                        ] });
                      }
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(
                    Form.Field,
                    {
                      control: form.control,
                      name: "rate",
                      render: ({ field: { value, onChange, ...field } }) => {
                        return /* @__PURE__ */ (0, import_jsx_runtime581.jsxs)(Form.Item, { children: [
                          /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(Form.Label, { children: t4("taxRegions.fields.taxRate") }),
                          /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(
                            PercentageInput,
                            {
                              ...field,
                              value: value?.value,
                              onValueChange: (value2, _name, values) => onChange({
                                value: value2,
                                float: values?.float
                              })
                            }
                          ) }),
                          /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(Form.ErrorMessage, {})
                        ] });
                      }
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(
                    Form.Field,
                    {
                      control: form.control,
                      name: "code",
                      render: ({ field }) => {
                        return /* @__PURE__ */ (0, import_jsx_runtime581.jsxs)(Form.Item, { children: [
                          /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(Form.Label, { children: t4("taxRegions.fields.taxCode") }),
                          /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(import_ui376.Input, { ...field }) }),
                          /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(Form.ErrorMessage, {})
                        ] });
                      }
                    }
                  )
                ] })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(
                SwitchBox,
                {
                  control: form.control,
                  name: "is_combinable",
                  label: t4("taxRegions.fields.isCombinable.label"),
                  description: t4("taxRegions.fields.isCombinable.hint")
                }
              )
            ] }) }) }),
            /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime581.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(import_ui376.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime581.jsx)(import_ui376.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/tax-regions/tax-region-province-create/components/tax-region-province-create-form/index.ts
var init_tax_region_province_create_form2 = __esm({
  "src/routes/tax-regions/tax-region-province-create/components/tax-region-province-create-form/index.ts"() {
    "use strict";
    init_tax_region_province_create_form();
  }
});

// src/routes/tax-regions/tax-region-province-create/tax-region-province-create.tsx
var import_react_router_dom202, import_jsx_runtime582, TaxProvinceCreate;
var init_tax_region_province_create = __esm({
  "src/routes/tax-regions/tax-region-province-create/tax-region-province-create.tsx"() {
    "use strict";
    import_react_router_dom202 = require("react-router-dom");
    init_modals();
    init_tax_regions();
    init_tax_region_province_create_form2();
    import_jsx_runtime582 = require("react/jsx-runtime");
    TaxProvinceCreate = () => {
      const { id: id2 } = (0, import_react_router_dom202.useParams)();
      const { tax_region, isPending, isError, error } = useTaxRegion(id2);
      const ready = !isPending && !!tax_region;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime582.jsx)(RouteFocusModal, { children: ready && /* @__PURE__ */ (0, import_jsx_runtime582.jsx)(TaxRegionProvinceCreateForm, { parent: tax_region }) });
    };
  }
});

// src/routes/tax-regions/tax-region-province-create/index.ts
var tax_region_province_create_exports = {};
__export(tax_region_province_create_exports, {
  Component: () => TaxProvinceCreate,
  TaxProvinceCreate: () => TaxProvinceCreate
});
var init_tax_region_province_create2 = __esm({
  "src/routes/tax-regions/tax-region-province-create/index.ts"() {
    "use strict";
    init_tax_region_province_create();
    init_tax_region_province_create();
  }
});

// src/routes/tax-regions/common/components/target-form/target-form.tsx
function initRowSelection2(state) {
  return state.reduce((acc, reference) => {
    acc[reference.value] = true;
    return acc;
  }, {});
}
var import_ui377, import_react_query87, import_react_table82, import_react251, import_react_i18next415, import_react_router_dom203, import_jsx_runtime583, TargetForm, Table3, PAGE_SIZE65, PREFIX_CUSTOMER_GROUP, CustomerGroupTable, cgColumnHelper, useGroupColumns, PREFIX_PRODUCT, ProductTable, pColumnHelper, useProductColumns, PREFIX_PRODUCT_COLLECTION, ProductCollectionTable, pcColumnHelper, useCollectionColumns, PREFIX_PRODUCT_TYPE, ProductTypeTable, ptColumnHelper, useProductTypeColumns, PREFIX_PRODUCT_TAG, ProductTagTable, ptagColumnHelper, useProductTagColumns, useCleanupSearchParams;
var init_target_form = __esm({
  "src/routes/tax-regions/common/components/target-form/target-form.tsx"() {
    "use strict";
    import_ui377 = require("@medusajs/ui");
    import_react_query87 = require("@tanstack/react-query");
    import_react_table82 = require("@tanstack/react-table");
    import_react251 = require("react");
    import_react_i18next415 = require("react-i18next");
    import_react_router_dom203 = require("react-router-dom");
    init_modals();
    init_data_table2();
    init_api();
    init_columns();
    init_filters();
    init_query();
    init_use_data_table();
    init_constants21();
    import_jsx_runtime583 = require("react/jsx-runtime");
    TargetForm = ({
      referenceType,
      type,
      setState,
      state
    }) => {
      const { t: t4 } = (0, import_react_i18next415.useTranslation)();
      const Component5 = type === "focus" ? StackedFocusModal : StackedDrawer;
      const [intermediate, setIntermediate] = (0, import_react251.useState)(state);
      const handleSave = () => {
        setState(intermediate);
      };
      return /* @__PURE__ */ (0, import_jsx_runtime583.jsxs)("div", { className: "flex size-full flex-col overflow-hidden", children: [
        /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(Component5.Body, { className: "min-h-0 p-0", children: /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(
          Table3,
          {
            referenceType,
            initialRowState: initRowSelection2(state),
            intermediate,
            setIntermediate
          }
        ) }),
        /* @__PURE__ */ (0, import_jsx_runtime583.jsxs)(Component5.Footer, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(Component5.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(import_ui377.Button, { variant: "secondary", size: "small", type: "button", children: t4("actions.cancel") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(import_ui377.Button, { type: "button", size: "small", onClick: handleSave, children: t4("actions.save") })
        ] })
      ] });
    };
    Table3 = ({ referenceType, ...props }) => {
      switch (referenceType) {
        case TaxRateRuleReferenceType.CUSTOMER_GROUP:
          return /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(CustomerGroupTable, { ...props });
        case "product" /* PRODUCT */:
          return /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(ProductTable, { ...props });
        case TaxRateRuleReferenceType.PRODUCT_COLLECTION:
          return /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(ProductCollectionTable, { ...props });
        case "product_type" /* PRODUCT_TYPE */:
          return /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(ProductTypeTable, { ...props });
        case TaxRateRuleReferenceType.PRODUCT_TAG:
          return /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(ProductTagTable, { ...props });
        default:
          return null;
      }
    };
    PAGE_SIZE65 = 50;
    PREFIX_CUSTOMER_GROUP = "cg";
    CustomerGroupTable = ({
      initialRowState,
      intermediate,
      setIntermediate
    }) => {
      const { t: t4 } = (0, import_react_i18next415.useTranslation)();
      const [rowSelection, setRowSelection] = (0, import_react251.useState)(initialRowState);
      useCleanupSearchParams();
      const { searchParams, raw } = useCustomerGroupTableQuery({
        pageSize: PAGE_SIZE65,
        prefix: PREFIX_CUSTOMER_GROUP
      });
      const { customer_groups, count: count3, isLoading, isError, error } = useCustomerGroups(searchParams, {
        placeholderData: import_react_query87.keepPreviousData
      });
      const updater = (value) => {
        const state = typeof value === "function" ? value(rowSelection) : value;
        const currentIds = Object.keys(rowSelection);
        const ids = Object.keys(state);
        const newIds = ids.filter((id2) => !currentIds.includes(id2));
        const removedIds = currentIds.filter((id2) => !ids.includes(id2));
        const newCustomerGroups = customer_groups?.filter((cg) => newIds.includes(cg.id)).map((cg) => ({ value: cg.id, label: cg.name })) || [];
        const filteredIntermediate = intermediate.filter(
          (cg) => !removedIds.includes(cg.value)
        );
        setIntermediate([...filteredIntermediate, ...newCustomerGroups]);
        setRowSelection(state);
      };
      const filters = useCustomerGroupTableFilters();
      const columns = useGroupColumns();
      const { table } = useDataTable({
        data: customer_groups || [],
        columns,
        count: count3,
        enablePagination: true,
        enableRowSelection: true,
        getRowId: (row) => row.id,
        rowSelection: {
          state: rowSelection,
          updater
        },
        pageSize: PAGE_SIZE65,
        prefix: PREFIX_CUSTOMER_GROUP
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(
        DataTable,
        {
          table,
          columns,
          pageSize: PAGE_SIZE65,
          count: count3,
          isLoading,
          filters,
          orderBy: [
            { key: "name", label: t4("fields.name") },
            { key: "created_at", label: t4("fields.createdAt") },
            { key: "updated_at", label: t4("fields.updatedAt") }
          ],
          layout: "fill",
          pagination: true,
          search: true,
          prefix: PREFIX_CUSTOMER_GROUP,
          queryObject: raw
        }
      );
    };
    cgColumnHelper = (0, import_react_table82.createColumnHelper)();
    useGroupColumns = () => {
      const base = useCustomerGroupTableColumns();
      return (0, import_react251.useMemo)(
        () => [
          cgColumnHelper.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(
                import_ui377.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(
                import_ui377.Checkbox,
                {
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...base
        ],
        [base]
      );
    };
    PREFIX_PRODUCT = "p";
    ProductTable = ({
      initialRowState,
      intermediate,
      setIntermediate
    }) => {
      const { t: t4 } = (0, import_react_i18next415.useTranslation)();
      const [rowSelection, setRowSelection] = (0, import_react251.useState)(initialRowState);
      useCleanupSearchParams();
      const { searchParams, raw } = useProductTableQuery({
        pageSize: PAGE_SIZE65,
        prefix: PREFIX_PRODUCT
      });
      const { products, count: count3, isLoading, isError, error } = useProducts(
        searchParams,
        {
          placeholderData: import_react_query87.keepPreviousData
        }
      );
      const updater = (value) => {
        const state = typeof value === "function" ? value(rowSelection) : value;
        const currentIds = Object.keys(rowSelection);
        const ids = Object.keys(state);
        const newIds = ids.filter((id2) => !currentIds.includes(id2));
        const removedIds = currentIds.filter((id2) => !ids.includes(id2));
        const newProducts = products?.filter((p) => newIds.includes(p.id)).map((p) => ({
          value: p.id,
          label: p.title
        })) || [];
        const filteredIntermediate = intermediate.filter(
          (p) => !removedIds.includes(p.value)
        );
        setIntermediate([...filteredIntermediate, ...newProducts]);
        setRowSelection(state);
      };
      const filters = useProductTableFilters();
      const columns = useProductColumns();
      const { table } = useDataTable({
        data: products || [],
        columns,
        count: count3,
        enablePagination: true,
        enableRowSelection: true,
        getRowId: (row) => row.id,
        rowSelection: {
          state: rowSelection,
          updater
        },
        pageSize: PAGE_SIZE65,
        prefix: PREFIX_PRODUCT
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(
        DataTable,
        {
          table,
          columns,
          pageSize: PAGE_SIZE65,
          count: count3,
          isLoading,
          filters,
          orderBy: [
            { key: "title", label: t4("fields.title") },
            { key: "created_at", label: t4("fields.createdAt") },
            { key: "updated_at", label: t4("fields.updatedAt") }
          ],
          layout: "fill",
          pagination: true,
          search: true,
          prefix: PREFIX_PRODUCT,
          queryObject: raw
        }
      );
    };
    pColumnHelper = (0, import_react_table82.createColumnHelper)();
    useProductColumns = () => {
      const base = useProductTableColumns();
      return (0, import_react251.useMemo)(
        () => [
          pColumnHelper.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(
                import_ui377.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(
                import_ui377.Checkbox,
                {
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...base
        ],
        [base]
      );
    };
    PREFIX_PRODUCT_COLLECTION = "pc";
    ProductCollectionTable = ({
      initialRowState,
      intermediate,
      setIntermediate
    }) => {
      const { t: t4 } = (0, import_react_i18next415.useTranslation)();
      const [rowSelection, setRowSelection] = (0, import_react251.useState)(initialRowState);
      useCleanupSearchParams();
      const { searchParams, raw } = useCollectionTableQuery({
        pageSize: PAGE_SIZE65,
        prefix: PREFIX_PRODUCT_COLLECTION
      });
      const { collections, count: count3, isLoading, isError, error } = useCollections(
        searchParams,
        {
          placeholderData: import_react_query87.keepPreviousData
        }
      );
      const updater = (value) => {
        const state = typeof value === "function" ? value(rowSelection) : value;
        const currentIds = Object.keys(rowSelection);
        const ids = Object.keys(state);
        const newIds = ids.filter((id2) => !currentIds.includes(id2));
        const removedIds = currentIds.filter((id2) => !ids.includes(id2));
        const newCollections = collections?.filter((p) => newIds.includes(p.id)).map((p) => ({
          value: p.id,
          label: p.title
        })) || [];
        const filteredIntermediate = intermediate.filter(
          (p) => !removedIds.includes(p.value)
        );
        setIntermediate([...filteredIntermediate, ...newCollections]);
        setRowSelection(state);
      };
      const filters = useCollectionTableFilters();
      const columns = useCollectionColumns();
      const { table } = useDataTable({
        data: collections || [],
        columns,
        count: count3,
        enablePagination: true,
        enableRowSelection: true,
        getRowId: (row) => row.id,
        rowSelection: {
          state: rowSelection,
          updater
        },
        pageSize: PAGE_SIZE65,
        prefix: PREFIX_PRODUCT_COLLECTION
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(
        DataTable,
        {
          table,
          columns,
          pageSize: PAGE_SIZE65,
          count: count3,
          isLoading,
          filters,
          orderBy: [
            { key: "title", label: t4("fields.title") },
            { key: "created_at", label: t4("fields.createdAt") },
            { key: "updated_at", label: t4("fields.updatedAt") }
          ],
          layout: "fill",
          pagination: true,
          search: true,
          prefix: PREFIX_PRODUCT_COLLECTION,
          queryObject: raw
        }
      );
    };
    pcColumnHelper = (0, import_react_table82.createColumnHelper)();
    useCollectionColumns = () => {
      const base = useCollectionTableColumns();
      return (0, import_react251.useMemo)(
        () => [
          pcColumnHelper.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(
                import_ui377.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(
                import_ui377.Checkbox,
                {
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...base
        ],
        [base]
      );
    };
    PREFIX_PRODUCT_TYPE = "pt";
    ProductTypeTable = ({
      initialRowState,
      intermediate,
      setIntermediate
    }) => {
      const { t: t4 } = (0, import_react_i18next415.useTranslation)();
      const [rowSelection, setRowSelection] = (0, import_react251.useState)(initialRowState);
      useCleanupSearchParams();
      const { searchParams, raw } = useProductTypeTableQuery({
        pageSize: PAGE_SIZE65,
        prefix: PREFIX_PRODUCT_TYPE
      });
      const { product_types, count: count3, isLoading, isError, error } = useProductTypes(
        searchParams,
        {
          placeholderData: import_react_query87.keepPreviousData
        }
      );
      const updater = (value) => {
        const state = typeof value === "function" ? value(rowSelection) : value;
        const currentIds = Object.keys(rowSelection);
        const ids = Object.keys(state);
        const newIds = ids.filter((id2) => !currentIds.includes(id2));
        const removedIds = currentIds.filter((id2) => !ids.includes(id2));
        const newTypes = product_types?.filter((p) => newIds.includes(p.id)).map((p) => ({
          value: p.id,
          label: p.value
        })) || [];
        const filteredIntermediate = intermediate.filter(
          (p) => !removedIds.includes(p.value)
        );
        setIntermediate([...filteredIntermediate, ...newTypes]);
        setRowSelection(state);
      };
      const filters = useProductTypeTableFilters();
      const columns = useProductTypeColumns();
      const { table } = useDataTable({
        data: product_types || [],
        columns,
        count: count3,
        enablePagination: true,
        enableRowSelection: true,
        getRowId: (row) => row.id,
        rowSelection: {
          state: rowSelection,
          updater
        },
        pageSize: PAGE_SIZE65,
        prefix: PREFIX_PRODUCT_TYPE
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(
        DataTable,
        {
          table,
          columns,
          pageSize: PAGE_SIZE65,
          count: count3,
          isLoading,
          filters,
          orderBy: [
            { key: "value", label: t4("fields.value") },
            { key: "created_at", label: t4("fields.createdAt") },
            { key: "updated_at", label: t4("fields.updatedAt") }
          ],
          layout: "fill",
          pagination: true,
          search: true,
          prefix: PREFIX_PRODUCT_TYPE,
          queryObject: raw
        }
      );
    };
    ptColumnHelper = (0, import_react_table82.createColumnHelper)();
    useProductTypeColumns = () => {
      const base = useProductTypeTableColumns();
      return (0, import_react251.useMemo)(
        () => [
          ptColumnHelper.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(
                import_ui377.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(
                import_ui377.Checkbox,
                {
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...base
        ],
        [base]
      );
    };
    PREFIX_PRODUCT_TAG = "ptag";
    ProductTagTable = ({
      initialRowState,
      intermediate,
      setIntermediate
    }) => {
      const { t: t4 } = (0, import_react_i18next415.useTranslation)();
      const [rowSelection, setRowSelection] = (0, import_react251.useState)(initialRowState);
      useCleanupSearchParams();
      const { searchParams, raw } = useProductTagTableQuery({
        pageSize: PAGE_SIZE65,
        prefix: PREFIX_PRODUCT_TAG
      });
      const { product_tags, count: count3, isLoading, isError, error } = useProductTags(
        searchParams,
        {
          placeholderData: import_react_query87.keepPreviousData
        }
      );
      const updater = (value) => {
        const state = typeof value === "function" ? value(rowSelection) : value;
        const currentIds = Object.keys(rowSelection);
        const ids = Object.keys(state);
        const newIds = ids.filter((id2) => !currentIds.includes(id2));
        const removedIds = currentIds.filter((id2) => !ids.includes(id2));
        const newTags = product_tags?.filter((p) => newIds.includes(p.id)).map((p) => ({
          value: p.id,
          label: p.value
        })) || [];
        const filteredIntermediate = intermediate.filter(
          (p) => !removedIds.includes(p.value)
        );
        setIntermediate([...filteredIntermediate, ...newTags]);
        setRowSelection(state);
      };
      const filters = useProductTagTableFilters();
      const columns = useProductTagColumns();
      const { table } = useDataTable({
        data: product_tags || [],
        columns,
        count: count3,
        enablePagination: true,
        enableRowSelection: true,
        getRowId: (row) => row.id,
        rowSelection: {
          state: rowSelection,
          updater
        },
        pageSize: PAGE_SIZE65,
        prefix: PREFIX_PRODUCT_TAG
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(
        DataTable,
        {
          table,
          columns,
          pageSize: PAGE_SIZE65,
          count: count3,
          isLoading,
          filters,
          orderBy: [
            { key: "value", label: t4("fields.value") },
            { key: "created_at", label: t4("fields.createdAt") },
            { key: "updated_at", label: t4("fields.updatedAt") }
          ],
          layout: "fill",
          pagination: true,
          search: true,
          prefix: PREFIX_PRODUCT_TAG,
          queryObject: raw
        }
      );
    };
    ptagColumnHelper = (0, import_react_table82.createColumnHelper)();
    useProductTagColumns = () => {
      const base = useProductTagTableColumns();
      return (0, import_react251.useMemo)(
        () => [
          ptagColumnHelper.display({
            id: "select",
            header: ({ table }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(
                import_ui377.Checkbox,
                {
                  checked: table.getIsSomePageRowsSelected() ? "indeterminate" : table.getIsAllPageRowsSelected(),
                  onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)
                }
              );
            },
            cell: ({ row }) => {
              return /* @__PURE__ */ (0, import_jsx_runtime583.jsx)(
                import_ui377.Checkbox,
                {
                  checked: row.getIsSelected(),
                  onCheckedChange: (value) => row.toggleSelected(!!value),
                  onClick: (e) => {
                    e.stopPropagation();
                  }
                }
              );
            }
          }),
          ...base
        ],
        [base]
      );
    };
    useCleanupSearchParams = () => {
      const [_, setSearchParams] = (0, import_react_router_dom203.useSearchParams)();
      (0, import_react251.useEffect)(() => {
        return () => {
          setSearchParams({});
        };
      }, []);
    };
  }
});

// src/routes/tax-regions/common/components/target-item/target-item.tsx
var import_icons158, import_ui378, import_jsx_runtime584, TargetItem;
var init_target_item = __esm({
  "src/routes/tax-regions/common/components/target-item/target-item.tsx"() {
    "use strict";
    import_icons158 = require("@medusajs/icons");
    import_ui378 = require("@medusajs/ui");
    import_jsx_runtime584 = require("react/jsx-runtime");
    TargetItem = ({ index: index2, label, onRemove }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime584.jsxs)("div", { className: "bg-ui-bg-field-component shadow-borders-base flex items-center justify-between gap-2 rounded-md px-2 py-0.5", children: [
        /* @__PURE__ */ (0, import_jsx_runtime584.jsx)(import_ui378.Text, { size: "small", leading: "compact", children: label }),
        /* @__PURE__ */ (0, import_jsx_runtime584.jsx)(
          import_ui378.IconButton,
          {
            size: "small",
            variant: "transparent",
            type: "button",
            onClick: () => onRemove(index2),
            children: /* @__PURE__ */ (0, import_jsx_runtime584.jsx)(import_icons158.XMarkMini, {})
          }
        )
      ] });
    };
  }
});

// src/routes/tax-regions/common/schemas.ts
var import_zod126, TaxRateRuleReferenceSchema, TaxRateRuleTargetSchema;
var init_schemas2 = __esm({
  "src/routes/tax-regions/common/schemas.ts"() {
    "use strict";
    import_zod126 = require("zod");
    init_constants21();
    TaxRateRuleReferenceSchema = import_zod126.z.object({
      value: import_zod126.z.string(),
      label: import_zod126.z.string()
    });
    TaxRateRuleTargetSchema = import_zod126.z.object({
      reference_type: import_zod126.z.nativeEnum(TaxRateRuleReferenceType),
      references: import_zod126.z.array(TaxRateRuleReferenceSchema)
    });
  }
});

// src/routes/tax-regions/common/utils.ts
var createTaxRulePayload;
var init_utils14 = __esm({
  "src/routes/tax-regions/common/utils.ts"() {
    "use strict";
    createTaxRulePayload = (target) => {
      return target.references.map((reference) => ({
        reference: target.reference_type,
        reference_id: reference.value
      }));
    };
  }
});

// src/routes/tax-regions/tax-region-tax-override-create/components/tax-region-override-create-form/tax-region-tax-override-create.tsx
var import_zod127, import_ui379, import_react_hook_form115, import_zod128, import_icons159, import_react_i18next416, import_jsx_runtime585, TaxRegionCreateTaxOverrideSchema, STACKED_MODAL_ID3, getStackedModalId, TaxRegionCreateTaxOverrideForm;
var init_tax_region_tax_override_create = __esm({
  "src/routes/tax-regions/tax-region-tax-override-create/components/tax-region-override-create-form/tax-region-tax-override-create.tsx"() {
    "use strict";
    import_zod127 = require("@hookform/resolvers/zod");
    import_ui379 = require("@medusajs/ui");
    import_react_hook_form115 = require("react-hook-form");
    import_zod128 = require("zod");
    import_icons159 = require("@medusajs/icons");
    import_react_i18next416 = require("react-i18next");
    init_divider2();
    init_form2();
    init_switch_box2();
    init_percentage_input2();
    init_modals();
    init_keybound_form2();
    init_tax_rates();
    init_target_form();
    init_target_item();
    init_constants21();
    init_schemas2();
    init_utils14();
    import_jsx_runtime585 = require("react/jsx-runtime");
    TaxRegionCreateTaxOverrideSchema = import_zod128.z.object({
      name: import_zod128.z.string().min(1),
      code: import_zod128.z.string().min(1),
      rate: import_zod128.z.object({
        float: import_zod128.z.number().optional(),
        value: import_zod128.z.string().optional()
      }).optional(),
      is_combinable: import_zod128.z.boolean().optional(),
      enabled_rules: import_zod128.z.object({
        product: import_zod128.z.boolean(),
        product_type: import_zod128.z.boolean()
        // product_collection: z.boolean(),
        // product_tag: z.boolean(),
        // customer_group: z.boolean(),
      }),
      product: import_zod128.z.array(TaxRateRuleReferenceSchema).optional(),
      product_type: import_zod128.z.array(TaxRateRuleReferenceSchema).optional()
      // product_collection: z.array(TaxRateRuleReferenceSchema).optional(),
      // product_tag: z.array(TaxRateRuleReferenceSchema).optional(),
      // customer_group: z.array(TaxRateRuleReferenceSchema).optional(),
    });
    STACKED_MODAL_ID3 = "tr";
    getStackedModalId = (type) => `${STACKED_MODAL_ID3}-${type}`;
    TaxRegionCreateTaxOverrideForm = ({
      taxRegion
    }) => {
      const { t: t4 } = (0, import_react_i18next416.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const { setIsOpen } = useStackedModal();
      const form = (0, import_react_hook_form115.useForm)({
        defaultValues: {
          name: "",
          code: "",
          is_combinable: false,
          rate: {
            value: ""
          },
          enabled_rules: {
            product: true,
            product_type: false
            // product_collection: false,
            // product_tag: false,
            // customer_group: false,
          },
          product: [],
          product_type: []
          // product_collection: [],
          // product_tag: [],
          // customer_group: [],
        },
        resolver: (0, import_zod127.zodResolver)(TaxRegionCreateTaxOverrideSchema)
      });
      const { mutateAsync, isPending } = useCreateTaxRate();
      const handleSubmit = form.handleSubmit(async (values) => {
        const {
          product,
          product_type
          // customer_group,
          // product_collection,
          // product_tag,
        } = values;
        const productRules = createTaxRulePayload({
          reference_type: "product" /* PRODUCT */,
          references: product || []
        });
        const productTypeRules = createTaxRulePayload({
          reference_type: "product_type" /* PRODUCT_TYPE */,
          references: product_type || []
        });
        const rules = [
          productRules,
          productTypeRules
          // customerGroupRules,
          // productCollectionRules,
          // productTagRules,
        ].filter((rule) => Boolean(rule)).flatMap((r) => r);
        mutateAsync(
          {
            name: values.name,
            tax_region_id: taxRegion.id,
            rate: values.rate?.float,
            code: values.code,
            is_combinable: values.is_combinable,
            rules,
            is_default: false
          },
          {
            onSuccess: () => {
              handleSuccess();
            },
            onError: (error) => {
              import_ui379.toast.error(error.message);
            }
          }
        );
      });
      const products = (0, import_react_hook_form115.useFieldArray)({
        control: form.control,
        name: "product" /* PRODUCT */
      });
      const productTypes = (0, import_react_hook_form115.useFieldArray)({
        control: form.control,
        name: "product_type" /* PRODUCT_TYPE */
      });
      const getControls = (type) => {
        switch (type) {
          case "product" /* PRODUCT */:
            return products;
          case "product_type" /* PRODUCT_TYPE */:
            return productTypes;
        }
      };
      const referenceTypeOptions = [
        {
          value: "product" /* PRODUCT */,
          label: t4("taxRegions.fields.targets.options.product")
        },
        {
          value: "product_type" /* PRODUCT_TYPE */,
          label: t4("taxRegions.fields.targets.options.productType")
        }
        // {
        //   value: TaxRateRuleReferenceType.PRODUCT_COLLECTION,
        //   label: t("taxRegions.fields.targets.options.productCollection"),
        // },
        // {
        //   value: TaxRateRuleReferenceType.PRODUCT_TAG,
        //   label: t("taxRegions.fields.targets.options.productTag"),
        // },
        // {
        //   value: TaxRateRuleReferenceType.CUSTOMER_GROUP,
        //   label: t("taxRegions.fields.targets.options.customerGroup"),
        // },
      ];
      const searchPlaceholders = {
        ["product" /* PRODUCT */]: t4(
          "taxRegions.fields.targets.placeholders.product"
        ),
        ["product_type" /* PRODUCT_TYPE */]: t4(
          "taxRegions.fields.targets.placeholders.productType"
        )
        // [TaxRateRuleReferenceType.PRODUCT_COLLECTION]: t(
        //   "taxRegions.fields.targets.placeholders.productCollection"
        // ),
        // [TaxRateRuleReferenceType.PRODUCT_TAG]: t(
        //   "taxRegions.fields.targets.placeholders.productTag"
        // ),
        // [TaxRateRuleReferenceType.CUSTOMER_GROUP]: t(
        //   "taxRegions.fields.targets.placeholders.customerGroup"
        // ),
      };
      const getFieldHandler = (type) => {
        const { fields, remove, append } = getControls(type);
        const modalId = getStackedModalId(type);
        return (references) => {
          if (!references.length) {
            form.setValue(type, [], {
              shouldDirty: true
            });
            setIsOpen(modalId, false);
            return;
          }
          const newIds = references.map((reference) => reference.value);
          const fieldsToAdd = references.filter(
            (reference) => !fields.some((field) => field.value === reference.value)
          );
          for (const field of fields) {
            if (!newIds.includes(field.value)) {
              remove(fields.indexOf(field));
            }
          }
          append(fieldsToAdd);
          setIsOpen(modalId, false);
        };
      };
      const displayOrder = /* @__PURE__ */ new Set([
        "product" /* PRODUCT */
      ]);
      const disableRule = (type) => {
        form.setValue(type, [], {
          shouldDirty: true
        });
        form.setValue(`enabled_rules.${type}`, false, {
          shouldDirty: true
        });
        displayOrder.delete(type);
      };
      const enableRule = (type) => {
        form.setValue(`enabled_rules.${type}`, true, {
          shouldDirty: true
        });
        form.setValue(type, [], {
          shouldDirty: true
        });
        displayOrder.add(type);
      };
      const watchedEnabledRules = (0, import_react_hook_form115.useWatch)({
        control: form.control,
        name: "enabled_rules"
      });
      const addRule = () => {
        const firstDisabledRule = Object.keys(watchedEnabledRules).find(
          (key) => !watchedEnabledRules[key]
        );
        if (firstDisabledRule) {
          enableRule(firstDisabledRule);
        }
      };
      const visibleRuleTypes = referenceTypeOptions.filter((option) => watchedEnabledRules[option.value]).sort((a, b) => {
        const orderArray = Array.from(displayOrder);
        return orderArray.indexOf(b.value) - orderArray.indexOf(a.value);
      });
      const getAvailableRuleTypes = (type) => {
        return referenceTypeOptions.filter((option) => {
          return !visibleRuleTypes.some(
            (visibleOption) => visibleOption.value === option.value
          ) || option.value === type;
        });
      };
      const showAddButton = Object.values(watchedEnabledRules).some(
        (value) => !value
      );
      return /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex h-full flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(RouteFocusModal.Header, {}),
            /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(RouteFocusModal.Body, { className: "flex flex-1 flex-col overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime585.jsx)("div", { className: "flex flex-1 flex-col items-center overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8 px-2 py-16", children: [
              /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)("div", { children: [
                /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(RouteFocusModal.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(import_ui379.Heading, { children: t4("taxRegions.taxOverrides.create.header") }) }),
                /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(RouteFocusModal.Description, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(import_ui379.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("taxRegions.taxOverrides.create.hint") }) })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime585.jsx)("div", { className: "flex flex-col gap-4", children: /* @__PURE__ */ (0, import_jsx_runtime585.jsx)("div", { className: "flex flex-col gap-y-4", children: /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "name",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(Form.Label, { children: t4("fields.name") }),
                        /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(import_ui379.Input, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "rate",
                    render: ({ field: { value, onChange, ...field } }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(Form.Label, { children: t4("taxRegions.fields.taxRate") }),
                        /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(
                          PercentageInput,
                          {
                            ...field,
                            placeholder: "0.00",
                            value: value?.value,
                            onValueChange: (value2, _name, values) => onChange({
                              value: value2,
                              float: values?.float
                            })
                          }
                        ) }),
                        /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "code",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(Form.Label, { children: t4("taxRegions.fields.taxCode") }),
                        /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(import_ui379.Input, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                )
              ] }) }) }),
              /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(
                SwitchBox,
                {
                  control: form.control,
                  name: "is_combinable",
                  label: t4("taxRegions.fields.isCombinable.label"),
                  description: t4("taxRegions.fields.isCombinable.hint")
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)("div", { className: "flex flex-col gap-y-3", children: [
                /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)("div", { className: "flex items-center justify-between gap-x-4", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)("div", { className: "flex flex-col", children: [
                    /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)("div", { className: "flex items-center gap-x-1", children: [
                      /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(
                        import_ui379.Label,
                        {
                          id: "tax_region_rules_label",
                          htmlFor: "tax_region_rules",
                          children: t4("taxRegions.fields.targets.label")
                        }
                      ),
                      /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)(
                        import_ui379.Text,
                        {
                          size: "small",
                          leading: "compact",
                          className: "text-ui-fg-muted",
                          children: [
                            "(",
                            t4("fields.optional"),
                            ")"
                          ]
                        }
                      )
                    ] }),
                    /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(
                      import_ui379.Hint,
                      {
                        id: "tax_region_rules_description",
                        className: "text-pretty",
                        children: t4("taxRegions.fields.targets.hint")
                      }
                    )
                  ] }),
                  showAddButton && /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(
                    import_ui379.Button,
                    {
                      onClick: addRule,
                      type: "button",
                      size: "small",
                      variant: "transparent",
                      className: "text-ui-fg-interactive hover:text-ui-fg-interactive-hover flex-shrink-0",
                      children: t4("taxRegions.fields.targets.action")
                    }
                  )
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(
                  "div",
                  {
                    id: "tax_region_rules",
                    "aria-labelledby": "tax_region_rules_label",
                    "aria-describedby": "tax_region_rules_description",
                    role: "application",
                    className: "flex flex-col gap-y-3",
                    children: visibleRuleTypes.map((ruleType, index2) => {
                      const type = ruleType.value;
                      const label = ruleType.label;
                      const isLast = index2 === visibleRuleTypes.length - 1;
                      const searchPlaceholder = searchPlaceholders[type];
                      const options = getAvailableRuleTypes(type);
                      const { fields, remove } = getControls(type);
                      const handler = getFieldHandler(type);
                      const modalId = getStackedModalId(type);
                      const handleChangeType = (value) => {
                        disableRule(type);
                        enableRule(value);
                      };
                      return /* @__PURE__ */ (0, import_jsx_runtime585.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(
                        Form.Field,
                        {
                          control: form.control,
                          name: ruleType.value,
                          render: ({
                            field: {
                              value: _value,
                              onChange: _onChange,
                              ...field
                            }
                          }) => {
                            return /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)(Form.Item, { className: "space-y-0", children: [
                              /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(Form.Label, { className: "sr-only", children: label }),
                              /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)(
                                "div",
                                {
                                  className: (0, import_ui379.clx)(
                                    "bg-ui-bg-component shadow-elevation-card-rest transition-fg grid gap-1.5 rounded-xl py-1.5",
                                    "aria-[invalid='true']:shadow-borders-error"
                                  ),
                                  role: "application",
                                  ...field,
                                  children: [
                                    /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)("div", { className: "text-ui-fg-subtle grid gap-1.5 px-1.5 md:grid-cols-2", children: [
                                      isLast ? /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)(
                                        import_ui379.Select,
                                        {
                                          value: type,
                                          onValueChange: handleChangeType,
                                          children: [
                                            /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(import_ui379.Select.Trigger, { className: "bg-ui-bg-field-component hover:bg-ui-bg-field-component-hover", children: /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(import_ui379.Select.Value, {}) }),
                                            /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(import_ui379.Select.Content, { children: options.map((option) => {
                                              return /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(
                                                import_ui379.Select.Item,
                                                {
                                                  value: option.value,
                                                  children: option.label
                                                },
                                                option.value
                                              );
                                            }) })
                                          ]
                                        }
                                      ) : /* @__PURE__ */ (0, import_jsx_runtime585.jsx)("div", { className: "bg-ui-bg-field shadow-borders-base txt-compact-small rounded-md px-2 py-1.5", children: label }),
                                      /* @__PURE__ */ (0, import_jsx_runtime585.jsx)("div", { className: "bg-ui-bg-field shadow-borders-base txt-compact-small rounded-md px-2 py-1.5", children: t4(
                                        "taxRegions.fields.targets.operators.in"
                                      ) })
                                    ] }),
                                    /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)("div", { className: "flex items-center gap-1.5 px-1.5", children: [
                                      /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)(StackedFocusModal, { id: modalId, children: [
                                        /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(StackedFocusModal.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)(
                                          "button",
                                          {
                                            type: "button",
                                            className: "bg-ui-bg-field-component hover:bg-ui-bg-field-component-hover shadow-borders-base txt-compact-small text-ui-fg-muted transition-fg focus-visible:shadow-borders-interactive-with-active flex flex-1 items-center gap-x-2 rounded-md px-2 py-1.5 outline-none",
                                            children: [
                                              /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(import_icons159.MagnifyingGlass, {}),
                                              searchPlaceholder
                                            ]
                                          }
                                        ) }),
                                        /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(StackedFocusModal.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(import_ui379.Button, { variant: "secondary", children: t4("actions.browse") }) }),
                                        /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)(StackedFocusModal.Content, { children: [
                                          /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)(StackedFocusModal.Header, { children: [
                                            /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(StackedFocusModal.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(import_ui379.Heading, { className: "sr-only", children: t4(
                                              "taxRegions.fields.targets.modal.header"
                                            ) }) }),
                                            /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(StackedFocusModal.Description, { className: "sr-only", children: t4(
                                              "taxRegions.fields.targets.hint"
                                            ) })
                                          ] }),
                                          /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(
                                            TargetForm,
                                            {
                                              type: "focus",
                                              referenceType: type,
                                              state: fields,
                                              setState: handler
                                            }
                                          )
                                        ] })
                                      ] }),
                                      /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(
                                        import_ui379.Button,
                                        {
                                          variant: "secondary",
                                          onClick: () => disableRule(type),
                                          type: "button",
                                          children: t4("actions.delete")
                                        }
                                      )
                                    ] }),
                                    fields.length > 0 ? /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)("div", { className: "flex flex-col gap-y-1.5", children: [
                                      /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(Divider, { variant: "dashed" }),
                                      /* @__PURE__ */ (0, import_jsx_runtime585.jsx)("div", { className: "flex flex-col gap-y-1.5 px-1.5", children: fields.map((field2, index3) => {
                                        return /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(
                                          TargetItem,
                                          {
                                            index: index3,
                                            label: field2.label,
                                            onRemove: remove
                                          },
                                          field2.id
                                        );
                                      }) })
                                    ] }) : null
                                  ]
                                }
                              ),
                              /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(Form.ErrorMessage, { className: "mt-2" })
                            ] });
                          }
                        }
                      ) }, type);
                    })
                  }
                )
              ] })
            ] }) }) }),
            /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime585.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(import_ui379.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime585.jsx)(import_ui379.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/tax-regions/tax-region-tax-override-create/components/tax-region-override-create-form/index.ts
var init_tax_region_override_create_form = __esm({
  "src/routes/tax-regions/tax-region-tax-override-create/components/tax-region-override-create-form/index.ts"() {
    "use strict";
    init_tax_region_tax_override_create();
  }
});

// src/routes/tax-regions/tax-region-tax-override-create/tax-region-tax-override-create.tsx
var import_react_router_dom204, import_jsx_runtime586, TaxRegionCreateTaxOverride;
var init_tax_region_tax_override_create2 = __esm({
  "src/routes/tax-regions/tax-region-tax-override-create/tax-region-tax-override-create.tsx"() {
    "use strict";
    import_react_router_dom204 = require("react-router-dom");
    init_modals();
    init_tax_regions();
    init_tax_region_override_create_form();
    import_jsx_runtime586 = require("react/jsx-runtime");
    TaxRegionCreateTaxOverride = () => {
      const { id: id2, province_id } = (0, import_react_router_dom204.useParams)();
      const { tax_region, isPending, isError, error } = useTaxRegion(
        province_id || id2
      );
      const ready = !isPending && !!tax_region;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime586.jsx)(RouteFocusModal, { children: ready && /* @__PURE__ */ (0, import_jsx_runtime586.jsx)(TaxRegionCreateTaxOverrideForm, { taxRegion: tax_region }) });
    };
  }
});

// src/routes/tax-regions/tax-region-tax-override-create/index.ts
var tax_region_tax_override_create_exports = {};
__export(tax_region_tax_override_create_exports, {
  Component: () => TaxRegionCreateTaxOverride
});
var init_tax_region_tax_override_create3 = __esm({
  "src/routes/tax-regions/tax-region-tax-override-create/index.ts"() {
    "use strict";
    init_tax_region_tax_override_create2();
  }
});

// src/routes/tax-regions/tax-region-tax-override-edit/components/tax-region-tax-override-edit-form/tax-region-tax-override-edit-form.tsx
var import_zod129, import_icons160, import_ui380, import_react_hook_form116, import_react_i18next417, import_zod130, import_jsx_runtime587, STACKED_MODAL_ID4, getStackedModalId2, TaxRegionTaxRateEditSchema, TaxRegionTaxOverrideEditForm;
var init_tax_region_tax_override_edit_form = __esm({
  "src/routes/tax-regions/tax-region-tax-override-edit/components/tax-region-tax-override-edit-form/tax-region-tax-override-edit-form.tsx"() {
    "use strict";
    import_zod129 = require("@hookform/resolvers/zod");
    import_icons160 = require("@medusajs/icons");
    import_ui380 = require("@medusajs/ui");
    import_react_hook_form116 = require("react-hook-form");
    import_react_i18next417 = require("react-i18next");
    import_zod130 = require("zod");
    init_divider2();
    init_form2();
    init_switch_box2();
    init_percentage_input2();
    init_modals();
    init_keybound_form2();
    init_tax_rates();
    init_target_form();
    init_target_item();
    init_constants21();
    init_schemas2();
    init_utils14();
    import_jsx_runtime587 = require("react/jsx-runtime");
    STACKED_MODAL_ID4 = "tr";
    getStackedModalId2 = (type) => `${STACKED_MODAL_ID4}-${type}`;
    TaxRegionTaxRateEditSchema = import_zod130.z.object({
      name: import_zod130.z.string().min(1),
      code: import_zod130.z.string().min(1),
      rate: import_zod130.z.object({
        float: import_zod130.z.number().optional(),
        value: import_zod130.z.string().optional()
      }),
      is_combinable: import_zod130.z.boolean().optional(),
      enabled_rules: import_zod130.z.object({
        product: import_zod130.z.boolean(),
        product_type: import_zod130.z.boolean()
        // product_collection: z.boolean(),
        // product_tag: z.boolean(),
        // customer_group: z.boolean(),
      }),
      product: import_zod130.z.array(TaxRateRuleReferenceSchema).optional(),
      product_type: import_zod130.z.array(TaxRateRuleReferenceSchema).optional()
      // product_collection: z.array(TaxRateRuleReferenceSchema).optional(),
      // product_tag: z.array(TaxRateRuleReferenceSchema).optional(),
      // customer_group: z.array(TaxRateRuleReferenceSchema).optional(),
    });
    TaxRegionTaxOverrideEditForm = ({
      taxRate,
      isCombinable = false,
      initialValues
    }) => {
      const { t: t4 } = (0, import_react_i18next417.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const { setIsOpen } = useStackedModal();
      const form = (0, import_react_hook_form116.useForm)({
        defaultValues: {
          name: taxRate.name,
          code: taxRate.code,
          rate: {
            value: taxRate.rate?.toString() || ""
          },
          is_combinable: taxRate.is_combinable,
          enabled_rules: {
            product: initialValues.product.length > 0,
            product_type: initialValues.product_type.length > 0
            // customer_groups: initialValues.customer_group.length > 0,
            // product_collections:
            //   initialValues.product_collections.length > 0,
            // product_tags: initialValues.product_tag.length > 0,
          },
          product: initialValues.product,
          product_type: initialValues.product_type
          // product_collections: initialValues.product_collection,
          // product_tags: initialValues.product_tag,
          // customer_groups: initialValues.customer_group,
        },
        resolver: (0, import_zod129.zodResolver)(TaxRegionTaxRateEditSchema)
      });
      const { mutateAsync, isPending } = useUpdateTaxRate(taxRate.id);
      const handleSubmit = form.handleSubmit(async (values) => {
        const {
          product,
          product_type
          // customer_groups,
          // product_collections,
          // product_tags,
        } = values;
        const productRules = createTaxRulePayload({
          reference_type: "product" /* PRODUCT */,
          references: product || []
        });
        const productTypeRules = createTaxRulePayload({
          reference_type: "product_type" /* PRODUCT_TYPE */,
          references: product_type || []
        });
        const rules = [
          productRules,
          productTypeRules
          // customerGroupRules,
          // productCollectionRules,
          // productTagRules,
        ].filter((rule) => Boolean(rule)).flatMap((r) => r);
        await mutateAsync(
          {
            name: values.name,
            code: values.code || null,
            rate: values.rate?.float,
            is_combinable: values.is_combinable,
            rules
          },
          {
            onSuccess: () => {
              import_ui380.toast.success(t4("taxRegions.taxRates.edit.successToast"));
              handleSuccess();
            },
            onError: (error) => {
              import_ui380.toast.error(error.message);
            }
          }
        );
      });
      const products = (0, import_react_hook_form116.useFieldArray)({
        control: form.control,
        name: "product"
      });
      const productTypes = (0, import_react_hook_form116.useFieldArray)({
        control: form.control,
        name: "product_type"
      });
      const getControls = (type) => {
        switch (type) {
          case "product" /* PRODUCT */:
            return products;
          case "product_type" /* PRODUCT_TYPE */:
            return productTypes;
        }
      };
      const referenceTypeOptions = [
        {
          value: "product" /* PRODUCT */,
          label: t4("taxRegions.fields.targets.options.product")
        },
        {
          value: "product_type" /* PRODUCT_TYPE */,
          label: t4("taxRegions.fields.targets.options.productType")
        }
        // {
        //   value: TaxRateRuleReferenceType.PRODUCT_COLLECTION,
        //   label: t("taxRegions.fields.targets.options.productCollection"),
        // },
        // {
        //   value: TaxRateRuleReferenceType.PRODUCT_TAG,
        //   label: t("taxRegions.fields.targets.options.productTag"),
        // },
        // {
        //   value: TaxRateRuleReferenceType.CUSTOMER_GROUP,
        //   label: t("taxRegions.fields.targets.options.customerGroup"),
        // },
      ];
      const searchPlaceholders = {
        ["product" /* PRODUCT */]: t4(
          "taxRegions.fields.targets.placeholders.product"
        ),
        ["product_type" /* PRODUCT_TYPE */]: t4(
          "taxRegions.fields.targets.placeholders.productType"
        )
        // [TaxRateRuleReferenceType.PRODUCT_COLLECTION]: t(
        //   "taxRegions.fields.targets.placeholders.productCollection"
        // ),
        // [TaxRateRuleReferenceType.PRODUCT_TAG]: t(
        //   "taxRegions.fields.targets.placeholders.productTag"
        // ),
        // [TaxRateRuleReferenceType.CUSTOMER_GROUP]: t(
        //   "taxRegions.fields.targets.placeholders.customerGroup"
        // ),
      };
      const getFieldHandler = (type) => {
        const { fields, remove, append } = getControls(type);
        const modalId = getStackedModalId2(type);
        return (references) => {
          if (!references.length) {
            form.setValue(type, [], {
              shouldDirty: true
            });
            setIsOpen(modalId, false);
            return;
          }
          const newIds = references.map((reference) => reference.value);
          const fieldsToAdd = references.filter(
            (reference) => !fields.some((field) => field.value === reference.value)
          );
          for (const field of fields) {
            if (!newIds.includes(field.value)) {
              remove(fields.indexOf(field));
            }
          }
          append(fieldsToAdd);
          setIsOpen(modalId, false);
        };
      };
      const displayOrder = /* @__PURE__ */ new Set([
        "product" /* PRODUCT */
      ]);
      const disableRule = (type) => {
        form.setValue(type, [], {
          shouldDirty: true
        });
        form.setValue(`enabled_rules.${type}`, false, {
          shouldDirty: true
        });
        displayOrder.delete(type);
      };
      const enableRule = (type) => {
        form.setValue(`enabled_rules.${type}`, true, {
          shouldDirty: true
        });
        form.setValue(type, [], {
          shouldDirty: true
        });
        displayOrder.add(type);
      };
      const watchedEnabledRules = (0, import_react_hook_form116.useWatch)({
        control: form.control,
        name: "enabled_rules"
      });
      const addRule = () => {
        const firstDisabledRule = Object.keys(watchedEnabledRules).find(
          (key) => !watchedEnabledRules[key]
        );
        if (firstDisabledRule) {
          enableRule(firstDisabledRule);
        }
      };
      const visibleRuleTypes = referenceTypeOptions.filter((option) => watchedEnabledRules[option.value]).sort((a, b) => {
        const orderArray = Array.from(displayOrder);
        return orderArray.indexOf(a.value) - orderArray.indexOf(b.value);
      });
      const getAvailableRuleTypes = (type) => {
        return referenceTypeOptions.filter((option) => {
          return !visibleRuleTypes.some(
            (visibleOption) => visibleOption.value === option.value
          ) || option.value === type;
        });
      };
      const showAddButton = Object.values(watchedEnabledRules).some(
        (value) => !value
      );
      return /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime587.jsxs)(
        KeyboundForm,
        {
          className: "flex flex-1 flex-col overflow-hidden",
          onSubmit: handleSubmit,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime587.jsxs)(RouteDrawer.Body, { className: "flex flex-1 flex-col gap-y-6 overflow-auto", children: [
              /* @__PURE__ */ (0, import_jsx_runtime587.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "name",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime587.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(Form.Label, { children: t4("fields.name") }),
                        /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(import_ui380.Input, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "code",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime587.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(Form.Label, { children: t4("taxRegions.fields.taxCode") }),
                        /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(import_ui380.Input, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "rate",
                    render: ({ field: { value, onChange, ...field } }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime587.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(Form.Label, { children: t4("taxRegions.fields.taxRate") }),
                        /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(
                          PercentageInput,
                          {
                            ...field,
                            value: value?.value,
                            onValueChange: (value2, _name, values) => onChange({
                              value: value2,
                              float: values?.float
                            })
                          }
                        ) }),
                        /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                )
              ] }),
              isCombinable && /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(
                SwitchBox,
                {
                  control: form.control,
                  name: "is_combinable",
                  label: t4("taxRegions.fields.isCombinable.label"),
                  description: t4("taxRegions.fields.isCombinable.hint")
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime587.jsxs)("div", { className: "flex flex-col gap-y-3", children: [
                /* @__PURE__ */ (0, import_jsx_runtime587.jsxs)("div", { className: "flex items-center justify-between gap-x-4", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime587.jsxs)("div", { className: "flex flex-col", children: [
                    /* @__PURE__ */ (0, import_jsx_runtime587.jsxs)("div", { className: "flex items-center gap-x-1", children: [
                      /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(import_ui380.Label, { id: "tax_region_rules_label", htmlFor: "tax_region_rules", children: t4("taxRegions.fields.targets.label") }),
                      /* @__PURE__ */ (0, import_jsx_runtime587.jsxs)(
                        import_ui380.Text,
                        {
                          size: "small",
                          leading: "compact",
                          className: "text-ui-fg-muted",
                          children: [
                            "(",
                            t4("fields.optional"),
                            ")"
                          ]
                        }
                      )
                    ] }),
                    /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(import_ui380.Hint, { id: "tax_region_rules_description", className: "text-pretty", children: t4("taxRegions.fields.targets.hint") })
                  ] }),
                  showAddButton && /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(
                    import_ui380.Button,
                    {
                      onClick: addRule,
                      type: "button",
                      size: "small",
                      variant: "transparent",
                      className: "text-ui-fg-interactive hover:text-ui-fg-interactive-hover flex-shrink-0",
                      children: t4("taxRegions.fields.targets.action")
                    }
                  )
                ] }),
                /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(
                  "div",
                  {
                    id: "tax_region_rules",
                    "aria-labelledby": "tax_region_rules_label",
                    "aria-describedby": "tax_region_rules_description",
                    role: "application",
                    className: "flex flex-col gap-y-3",
                    children: visibleRuleTypes.map((ruleType, index2) => {
                      const type = ruleType.value;
                      const label = ruleType.label;
                      const isLast = index2 === visibleRuleTypes.length - 1;
                      const searchPlaceholder = searchPlaceholders[type];
                      const options = getAvailableRuleTypes(type);
                      const modalId = getStackedModalId2(type);
                      const { fields, remove } = getControls(type);
                      const handler = getFieldHandler(type);
                      const handleChangeType = (value) => {
                        disableRule(type);
                        enableRule(value);
                      };
                      return /* @__PURE__ */ (0, import_jsx_runtime587.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(
                        Form.Field,
                        {
                          control: form.control,
                          name: ruleType.value,
                          render: ({
                            field: { value: _value, onChange: _onChange, ...field }
                          }) => {
                            return /* @__PURE__ */ (0, import_jsx_runtime587.jsxs)(Form.Item, { className: "space-y-0", children: [
                              /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(Form.Label, { className: "sr-only", children: label }),
                              /* @__PURE__ */ (0, import_jsx_runtime587.jsxs)(
                                "div",
                                {
                                  className: (0, import_ui380.clx)(
                                    "bg-ui-bg-component shadow-elevation-card-rest transition-fg grid gap-1.5 rounded-xl py-1.5",
                                    "aria-[invalid='true']:shadow-borders-error"
                                  ),
                                  role: "application",
                                  ...field,
                                  children: [
                                    /* @__PURE__ */ (0, import_jsx_runtime587.jsxs)("div", { className: "text-ui-fg-subtle grid gap-1.5 px-1.5 md:grid-cols-2", children: [
                                      isLast ? /* @__PURE__ */ (0, import_jsx_runtime587.jsxs)(
                                        import_ui380.Select,
                                        {
                                          value: type,
                                          onValueChange: handleChangeType,
                                          children: [
                                            /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(import_ui380.Select.Trigger, { className: "bg-ui-bg-field-component hover:bg-ui-bg-field-component-hover", children: /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(import_ui380.Select.Value, {}) }),
                                            /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(import_ui380.Select.Content, { children: options.map((option) => {
                                              return /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(
                                                import_ui380.Select.Item,
                                                {
                                                  value: option.value,
                                                  children: option.label
                                                },
                                                option.value
                                              );
                                            }) })
                                          ]
                                        }
                                      ) : /* @__PURE__ */ (0, import_jsx_runtime587.jsx)("div", { className: "bg-ui-bg-field shadow-borders-base txt-compact-small rounded-md px-2 py-1.5", children: label }),
                                      /* @__PURE__ */ (0, import_jsx_runtime587.jsx)("div", { className: "bg-ui-bg-field shadow-borders-base txt-compact-small rounded-md px-2 py-1.5", children: t4("taxRegions.fields.targets.operators.in") })
                                    ] }),
                                    /* @__PURE__ */ (0, import_jsx_runtime587.jsxs)("div", { className: "flex items-center gap-1.5 px-1.5", children: [
                                      /* @__PURE__ */ (0, import_jsx_runtime587.jsxs)(StackedDrawer, { id: modalId, children: [
                                        /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(StackedDrawer.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime587.jsxs)(
                                          "button",
                                          {
                                            type: "button",
                                            className: "bg-ui-bg-field-component hover:bg-ui-bg-field-component-hover shadow-borders-base txt-compact-small text-ui-fg-muted transition-fg focus-visible:shadow-borders-interactive-with-active flex flex-1 items-center gap-x-2 rounded-md px-2 py-1.5 outline-none",
                                            children: [
                                              /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(import_icons160.MagnifyingGlass, {}),
                                              searchPlaceholder
                                            ]
                                          }
                                        ) }),
                                        /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(StackedDrawer.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(import_ui380.Button, { variant: "secondary", children: t4("actions.browse") }) }),
                                        /* @__PURE__ */ (0, import_jsx_runtime587.jsxs)(StackedDrawer.Content, { children: [
                                          /* @__PURE__ */ (0, import_jsx_runtime587.jsxs)(StackedDrawer.Header, { children: [
                                            /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(StackedDrawer.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(import_ui380.Heading, { children: t4(
                                              "taxRegions.fields.targets.modal.header"
                                            ) }) }),
                                            /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(StackedDrawer.Description, { className: "sr-only", children: t4("taxRegions.fields.targets.hint") })
                                          ] }),
                                          /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(
                                            TargetForm,
                                            {
                                              type: "drawer",
                                              referenceType: type,
                                              state: fields,
                                              setState: handler
                                            }
                                          )
                                        ] })
                                      ] }),
                                      /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(
                                        import_ui380.Button,
                                        {
                                          variant: "secondary",
                                          onClick: () => disableRule(type),
                                          type: "button",
                                          children: t4("actions.delete")
                                        }
                                      )
                                    ] }),
                                    fields.length > 0 ? /* @__PURE__ */ (0, import_jsx_runtime587.jsxs)("div", { className: "flex flex-col gap-y-1.5", children: [
                                      /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(Divider, { variant: "dashed" }),
                                      /* @__PURE__ */ (0, import_jsx_runtime587.jsx)("div", { className: "flex flex-col gap-y-1.5 px-1.5", children: fields.map((field2, index3) => {
                                        return /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(
                                          TargetItem,
                                          {
                                            index: index3,
                                            label: field2.label,
                                            onRemove: remove
                                          },
                                          field2.id
                                        );
                                      }) })
                                    ] }) : null
                                  ]
                                }
                              ),
                              /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(Form.ErrorMessage, { className: "mt-2" })
                            ] });
                          }
                        }
                      ) }, type);
                    })
                  }
                )
              ] })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(RouteDrawer.Footer, { className: "shrink-0", children: /* @__PURE__ */ (0, import_jsx_runtime587.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(import_ui380.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime587.jsx)(import_ui380.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/tax-regions/tax-region-tax-override-edit/components/tax-region-tax-override-edit-form/index.ts
var init_tax_region_tax_override_edit_form2 = __esm({
  "src/routes/tax-regions/tax-region-tax-override-edit/components/tax-region-tax-override-edit-form/index.ts"() {
    "use strict";
    init_tax_region_tax_override_edit_form();
  }
});

// src/routes/tax-regions/tax-region-tax-override-edit/tax-region-tax-override-edit.tsx
var import_ui381, import_react_i18next418, import_react_router_dom205, import_jsx_runtime588, TaxRegionTaxOverrideEdit, useDefaultRulesValues;
var init_tax_region_tax_override_edit = __esm({
  "src/routes/tax-regions/tax-region-tax-override-edit/tax-region-tax-override-edit.tsx"() {
    "use strict";
    import_ui381 = require("@medusajs/ui");
    import_react_i18next418 = require("react-i18next");
    import_react_router_dom205 = require("react-router-dom");
    init_modals();
    init_collections();
    init_customer_groups();
    init_product_types();
    init_products();
    init_tags();
    init_tax_rates();
    init_constants21();
    init_tax_region_tax_override_edit_form2();
    import_jsx_runtime588 = require("react/jsx-runtime");
    TaxRegionTaxOverrideEdit = () => {
      const { t: t4 } = (0, import_react_i18next418.useTranslation)();
      const { tax_rate_id } = (0, import_react_router_dom205.useParams)();
      const { tax_rate, isPending, isError, error } = useTaxRate(tax_rate_id);
      const { initialValues, isPending: isInitializing } = useDefaultRulesValues(tax_rate);
      const ready = !isPending && !!tax_rate && !isInitializing && !!initialValues;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime588.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime588.jsxs)(RouteDrawer.Header, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime588.jsx)(RouteDrawer.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime588.jsx)(import_ui381.Heading, { children: t4("taxRegions.taxOverrides.edit.header") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime588.jsx)(RouteDrawer.Description, { className: "sr-only", children: t4("taxRegions.taxOverrides.edit.hint") })
        ] }),
        ready && /* @__PURE__ */ (0, import_jsx_runtime588.jsx)(
          TaxRegionTaxOverrideEditForm,
          {
            taxRate: tax_rate,
            isCombinable: true,
            initialValues
          }
        )
      ] });
    };
    useDefaultRulesValues = (taxRate) => {
      const rules = taxRate?.rules || [];
      const idsByReferenceType = {
        ["product" /* PRODUCT */]: [],
        [TaxRateRuleReferenceType.PRODUCT_COLLECTION]: [],
        [TaxRateRuleReferenceType.PRODUCT_TAG]: [],
        ["product_type" /* PRODUCT_TYPE */]: [],
        [TaxRateRuleReferenceType.CUSTOMER_GROUP]: []
      };
      rules.forEach((rule) => {
        const reference = rule.reference;
        idsByReferenceType[reference]?.push(rule.reference_id);
      });
      const queries = [
        {
          ids: idsByReferenceType["product" /* PRODUCT */],
          hook: useProducts,
          key: "product" /* PRODUCT */,
          getResult: (result) => result.products.map((product) => ({
            label: product.title,
            value: product.id
          }))
        },
        {
          ids: idsByReferenceType[TaxRateRuleReferenceType.PRODUCT_COLLECTION],
          hook: useCollections,
          key: TaxRateRuleReferenceType.PRODUCT_COLLECTION,
          getResult: (result) => result.collections.map((collection) => ({
            label: collection.title,
            value: collection.id
          }))
        },
        {
          ids: idsByReferenceType[TaxRateRuleReferenceType.PRODUCT_TAG],
          hook: useProductTags,
          key: TaxRateRuleReferenceType.PRODUCT_TAG,
          getResult: (result) => result.tags.map((tag) => ({
            label: tag.value,
            value: tag.id
          }))
        },
        {
          ids: idsByReferenceType["product_type" /* PRODUCT_TYPE */],
          hook: useProductTypes,
          key: "product_type" /* PRODUCT_TYPE */,
          getResult: (result) => result.product_types.map((productType) => ({
            label: productType.value,
            value: productType.id
          }))
        },
        {
          ids: idsByReferenceType[TaxRateRuleReferenceType.CUSTOMER_GROUP],
          hook: useCustomerGroups,
          key: TaxRateRuleReferenceType.CUSTOMER_GROUP,
          getResult: (result) => result.customer_groups.map((customerGroup) => ({
            label: customerGroup.name,
            value: customerGroup.id
          }))
        }
      ];
      const queryResults = queries.map(({ ids, hook }) => {
        const enabled = ids.length > 0;
        return {
          result: hook({ id: ids, limit: ids.length }, { enabled }),
          enabled
        };
      });
      if (!taxRate) {
        return { isPending: true };
      }
      const isPending = queryResults.some(
        ({ result, enabled }) => enabled && result.isPending
      );
      if (isPending) {
        return { isPending };
      }
      queryResults.forEach(({ result, enabled }) => {
        if (enabled && result.isError) {
          throw result.error;
        }
      });
      const initialRulesValues = queries.reduce(
        (acc, { key, getResult }, index2) => ({
          ...acc,
          [key]: queryResults[index2].enabled ? getResult(queryResults[index2].result) : []
        }),
        {}
      );
      return { initialValues: initialRulesValues, isPending: false };
    };
  }
});

// src/routes/tax-regions/tax-region-tax-override-edit/index.ts
var tax_region_tax_override_edit_exports = {};
__export(tax_region_tax_override_edit_exports, {
  Component: () => TaxRegionTaxOverrideEdit
});
var init_tax_region_tax_override_edit2 = __esm({
  "src/routes/tax-regions/tax-region-tax-override-edit/index.ts"() {
    "use strict";
    init_tax_region_tax_override_edit();
  }
});

// src/routes/tax-regions/tax-region-tax-rate-create/components/tax-region-tax-rate-create-form/tax-region-tax-rate-create-form.tsx
var import_zod131, import_ui382, import_react_hook_form117, import_react_i18next419, import_zod132, import_jsx_runtime589, TaxRegionTaxRateCreateSchema, TaxRegionTaxRateCreateForm;
var init_tax_region_tax_rate_create_form = __esm({
  "src/routes/tax-regions/tax-region-tax-rate-create/components/tax-region-tax-rate-create-form/tax-region-tax-rate-create-form.tsx"() {
    "use strict";
    import_zod131 = require("@hookform/resolvers/zod");
    import_ui382 = require("@medusajs/ui");
    import_react_hook_form117 = require("react-hook-form");
    import_react_i18next419 = require("react-i18next");
    import_zod132 = require("zod");
    init_form2();
    init_switch_box2();
    init_percentage_input2();
    init_modals();
    init_keybound_form2();
    init_tax_rates();
    import_jsx_runtime589 = require("react/jsx-runtime");
    TaxRegionTaxRateCreateSchema = import_zod132.z.object({
      name: import_zod132.z.string().min(1),
      code: import_zod132.z.string().min(1),
      rate: import_zod132.z.object({
        float: import_zod132.z.number().optional(),
        value: import_zod132.z.string().optional()
      }).optional(),
      is_combinable: import_zod132.z.boolean().optional()
    });
    TaxRegionTaxRateCreateForm = ({
      taxRegion,
      isSublevel = false
    }) => {
      const { t: t4 } = (0, import_react_i18next419.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form117.useForm)({
        defaultValues: {
          name: "",
          code: "",
          rate: {
            value: ""
          },
          is_combinable: false
        },
        resolver: (0, import_zod131.zodResolver)(TaxRegionTaxRateCreateSchema)
      });
      const { mutateAsync, isPending } = useCreateTaxRate();
      const handleSubmit = form.handleSubmit(async (values) => {
        await mutateAsync(
          {
            tax_region_id: taxRegion.id,
            is_default: true,
            name: values.name,
            code: values.code,
            rate: values.rate?.float,
            is_combinable: values.is_combinable
          },
          {
            onSuccess: () => {
              import_ui382.toast.success(t4("taxRegions.taxRates.create.successToast"));
              handleSuccess();
            },
            onError: (error) => {
              import_ui382.toast.error(error.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime589.jsxs)(
        KeyboundForm,
        {
          onSubmit: handleSubmit,
          className: "flex h-full flex-col overflow-hidden",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(RouteFocusModal.Header, {}),
            /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(RouteFocusModal.Body, { className: "flex flex-1 flex-col overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime589.jsx)("div", { className: "flex flex-1 flex-col items-center overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime589.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8 px-2 py-16", children: [
              /* @__PURE__ */ (0, import_jsx_runtime589.jsxs)("div", { children: [
                /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(import_ui382.Heading, { children: t4(`taxRegions.taxRates.create.header`) }),
                /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(import_ui382.Text, { size: "small", className: "text-ui-fg-subtle", children: t4(`taxRegions.taxRates.create.hint`) })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime589.jsxs)("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "name",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime589.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(Form.Label, { children: t4("fields.name") }),
                        /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(import_ui382.Input, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "rate",
                    render: ({ field: { value, onChange, ...field } }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime589.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(Form.Label, { children: t4("taxRegions.fields.taxRate") }),
                        /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(
                          PercentageInput,
                          {
                            ...field,
                            value: value?.value,
                            onValueChange: (value2, _name, values) => onChange({
                              value: value2,
                              float: values?.float
                            })
                          }
                        ) }),
                        /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "code",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime589.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(Form.Label, { children: t4("taxRegions.fields.taxCode") }),
                        /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(import_ui382.Input, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                )
              ] }),
              isSublevel && /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(
                SwitchBox,
                {
                  control: form.control,
                  name: "is_combinable",
                  label: t4("taxRegions.fields.isCombinable.label"),
                  description: t4("taxRegions.fields.isCombinable.hint")
                }
              )
            ] }) }) }),
            /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime589.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(import_ui382.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime589.jsx)(import_ui382.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/tax-regions/tax-region-tax-rate-create/components/tax-region-tax-rate-create-form/index.ts
var init_tax_region_tax_rate_create_form2 = __esm({
  "src/routes/tax-regions/tax-region-tax-rate-create/components/tax-region-tax-rate-create-form/index.ts"() {
    "use strict";
    init_tax_region_tax_rate_create_form();
  }
});

// src/routes/tax-regions/tax-region-tax-rate-create/tax-region-tax-rate-create.tsx
var import_react_router_dom206, import_jsx_runtime590, TaxRegionTaxRateCreate;
var init_tax_region_tax_rate_create = __esm({
  "src/routes/tax-regions/tax-region-tax-rate-create/tax-region-tax-rate-create.tsx"() {
    "use strict";
    import_react_router_dom206 = require("react-router-dom");
    init_modals();
    init_tax_regions();
    init_tax_region_tax_rate_create_form2();
    import_jsx_runtime590 = require("react/jsx-runtime");
    TaxRegionTaxRateCreate = () => {
      const { id: id2, province_id } = (0, import_react_router_dom206.useParams)();
      const { tax_region, isPending, isError, error } = useTaxRegion(
        province_id || id2
      );
      const ready = !isPending && !!tax_region;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime590.jsx)(RouteFocusModal, { children: ready && /* @__PURE__ */ (0, import_jsx_runtime590.jsx)(
        TaxRegionTaxRateCreateForm,
        {
          taxRegion: tax_region,
          isSublevel: !!province_id
        }
      ) });
    };
  }
});

// src/routes/tax-regions/tax-region-tax-rate-create/index.ts
var tax_region_tax_rate_create_exports = {};
__export(tax_region_tax_rate_create_exports, {
  Component: () => TaxRegionTaxRateCreate
});
var init_tax_region_tax_rate_create2 = __esm({
  "src/routes/tax-regions/tax-region-tax-rate-create/index.ts"() {
    "use strict";
    init_tax_region_tax_rate_create();
  }
});

// src/routes/tax-regions/tax-region-tax-rate-edit/components/tax-region-tax-rate-edit-form/tax-region-tax-rate-edit-form.tsx
var import_zod133, import_ui383, import_react_hook_form118, import_react_i18next420, import_zod134, import_jsx_runtime591, TaxRegionTaxRateEditSchema2, TaxRegionTaxRateEditForm;
var init_tax_region_tax_rate_edit_form = __esm({
  "src/routes/tax-regions/tax-region-tax-rate-edit/components/tax-region-tax-rate-edit-form/tax-region-tax-rate-edit-form.tsx"() {
    "use strict";
    import_zod133 = require("@hookform/resolvers/zod");
    import_ui383 = require("@medusajs/ui");
    import_react_hook_form118 = require("react-hook-form");
    import_react_i18next420 = require("react-i18next");
    import_zod134 = require("zod");
    init_form2();
    init_switch_box2();
    init_percentage_input2();
    init_modals();
    init_keybound_form2();
    init_tax_rates();
    import_jsx_runtime591 = require("react/jsx-runtime");
    TaxRegionTaxRateEditSchema2 = import_zod134.z.object({
      name: import_zod134.z.string().min(1),
      code: import_zod134.z.string().optional(),
      rate: import_zod134.z.object({
        float: import_zod134.z.number().optional(),
        value: import_zod134.z.string().optional()
      }),
      is_combinable: import_zod134.z.boolean().optional()
    });
    TaxRegionTaxRateEditForm = ({
      taxRate,
      isSublevel = false
    }) => {
      const { t: t4 } = (0, import_react_i18next420.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form118.useForm)({
        defaultValues: {
          name: taxRate.name,
          code: taxRate.code,
          rate: {
            value: taxRate.rate?.toString() || ""
          },
          is_combinable: taxRate.is_combinable
        },
        resolver: (0, import_zod133.zodResolver)(TaxRegionTaxRateEditSchema2)
      });
      const { mutateAsync, isPending } = useUpdateTaxRate(taxRate.id);
      const handleSubmit = form.handleSubmit(async (values) => {
        await mutateAsync(
          {
            name: values.name,
            code: values.code,
            rate: values.rate?.float,
            is_combinable: values.is_combinable
          },
          {
            onSuccess: () => {
              import_ui383.toast.success(t4("taxRegions.taxRates.edit.successToast"));
              handleSuccess();
            },
            onError: (error) => {
              import_ui383.toast.error(error.message);
            }
          }
        );
      });
      return /* @__PURE__ */ (0, import_jsx_runtime591.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime591.jsxs)(
        KeyboundForm,
        {
          className: "flex flex-1 flex-col overflow-hidden",
          onSubmit: handleSubmit,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime591.jsxs)(RouteDrawer.Body, { className: "flex flex-1 flex-col gap-y-6 overflow-auto", children: [
              /* @__PURE__ */ (0, import_jsx_runtime591.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime591.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "name",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime591.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime591.jsx)(Form.Label, { children: t4("fields.name") }),
                        /* @__PURE__ */ (0, import_jsx_runtime591.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime591.jsx)(import_ui383.Input, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime591.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime591.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "code",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime591.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime591.jsx)(Form.Label, { children: t4("taxRegions.fields.taxCode") }),
                        /* @__PURE__ */ (0, import_jsx_runtime591.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime591.jsx)(import_ui383.Input, { ...field }) }),
                        /* @__PURE__ */ (0, import_jsx_runtime591.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime591.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "rate",
                    render: ({ field: { value, onChange, ...field } }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime591.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime591.jsx)(Form.Label, { children: t4("taxRegions.fields.taxRate") }),
                        /* @__PURE__ */ (0, import_jsx_runtime591.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime591.jsx)(
                          PercentageInput,
                          {
                            ...field,
                            value: value?.value,
                            onValueChange: (value2, _name, values) => onChange({
                              value: value2,
                              float: values?.float
                            })
                          }
                        ) }),
                        /* @__PURE__ */ (0, import_jsx_runtime591.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                )
              ] }),
              isSublevel && /* @__PURE__ */ (0, import_jsx_runtime591.jsx)(
                SwitchBox,
                {
                  control: form.control,
                  name: "is_combinable",
                  label: t4("taxRegions.fields.isCombinable.label"),
                  description: t4("taxRegions.fields.isCombinable.hint")
                }
              )
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime591.jsx)(RouteDrawer.Footer, { className: "shrink-0", children: /* @__PURE__ */ (0, import_jsx_runtime591.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime591.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime591.jsx)(import_ui383.Button, { size: "small", variant: "secondary", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime591.jsx)(import_ui383.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/tax-regions/tax-region-tax-rate-edit/components/tax-region-tax-rate-edit-form/index.ts
var init_tax_region_tax_rate_edit_form2 = __esm({
  "src/routes/tax-regions/tax-region-tax-rate-edit/components/tax-region-tax-rate-edit-form/index.ts"() {
    "use strict";
    init_tax_region_tax_rate_edit_form();
  }
});

// src/routes/tax-regions/tax-region-tax-rate-edit/tax-region-edit.tsx
var import_ui384, import_react_i18next421, import_react_router_dom207, import_jsx_runtime592, TaxRegionEdit;
var init_tax_region_edit = __esm({
  "src/routes/tax-regions/tax-region-tax-rate-edit/tax-region-edit.tsx"() {
    "use strict";
    import_ui384 = require("@medusajs/ui");
    import_react_i18next421 = require("react-i18next");
    import_react_router_dom207 = require("react-router-dom");
    init_modals();
    init_tax_rates();
    init_tax_region_tax_rate_edit_form2();
    import_jsx_runtime592 = require("react/jsx-runtime");
    TaxRegionEdit = () => {
      const { t: t4 } = (0, import_react_i18next421.useTranslation)();
      const { province_id, tax_rate_id } = (0, import_react_router_dom207.useParams)();
      const { tax_rate, isPending, isError, error } = useTaxRate(tax_rate_id);
      const ready = !isPending && !!tax_rate;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime592.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime592.jsxs)(RouteDrawer.Header, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime592.jsx)(RouteDrawer.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime592.jsx)(import_ui384.Heading, { children: t4("taxRegions.taxRates.edit.header") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime592.jsx)(RouteDrawer.Description, { className: "sr-only", children: t4("taxRegions.taxRates.edit.hint") })
        ] }),
        ready && /* @__PURE__ */ (0, import_jsx_runtime592.jsx)(
          TaxRegionTaxRateEditForm,
          {
            taxRate: tax_rate,
            isSublevel: !!province_id
          }
        )
      ] });
    };
  }
});

// src/routes/tax-regions/tax-region-tax-rate-edit/index.ts
var tax_region_tax_rate_edit_exports = {};
__export(tax_region_tax_rate_edit_exports, {
  Component: () => TaxRegionEdit
});
var init_tax_region_tax_rate_edit = __esm({
  "src/routes/tax-regions/tax-region-tax-rate-edit/index.ts"() {
    "use strict";
    init_tax_region_edit();
  }
});

// src/routes/tax-regions/tax-region-province-detail/components/tax-region-province-detail-section/tax-region-detail-section.tsx
var import_ui385, import_react_i18next422, import_jsx_runtime593, TaxRegionProvinceDetailSection;
var init_tax_region_detail_section3 = __esm({
  "src/routes/tax-regions/tax-region-province-detail/components/tax-region-province-detail-section/tax-region-detail-section.tsx"() {
    "use strict";
    import_ui385 = require("@medusajs/ui");
    import_react_i18next422 = require("react-i18next");
    init_tax_rate_line2();
    init_tax_region_card2();
    import_jsx_runtime593 = require("react/jsx-runtime");
    TaxRegionProvinceDetailSection = ({
      taxRegion
    }) => {
      const { t: t4 } = (0, import_react_i18next422.useTranslation)();
      const defaultRates = taxRegion.tax_rates.filter((r) => r.is_default === true);
      const showBage = defaultRates.length === 0;
      return /* @__PURE__ */ (0, import_jsx_runtime593.jsxs)(import_ui385.Container, { className: "divide-y p-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime593.jsx)(
          TaxRegionCard,
          {
            taxRegion,
            type: "header",
            asLink: false,
            badge: showBage && /* @__PURE__ */ (0, import_jsx_runtime593.jsx)(import_ui385.Tooltip, { content: t4("taxRegions.fields.noDefaultRate.tooltip"), children: /* @__PURE__ */ (0, import_jsx_runtime593.jsx)(import_ui385.Badge, { color: "orange", size: "2xsmall", className: "cursor-default", children: t4("taxRegions.fields.noDefaultRate.label") }) })
          }
        ),
        defaultRates.map((rate) => {
          return /* @__PURE__ */ (0, import_jsx_runtime593.jsx)(TaxRateLine, { taxRate: rate, isSublevelTaxRate: true }, rate.id);
        })
      ] });
    };
  }
});

// src/routes/tax-regions/tax-region-province-detail/components/tax-region-province-detail-section/index.ts
var init_tax_region_province_detail_section = __esm({
  "src/routes/tax-regions/tax-region-province-detail/components/tax-region-province-detail-section/index.ts"() {
    "use strict";
    init_tax_region_detail_section3();
  }
});

// src/routes/tax-regions/tax-region-province-detail/components/tax-region-province-override-section/tax-region-province-override-section.tsx
var import_ui386, import_react_query88, import_react_i18next423, import_jsx_runtime594, PAGE_SIZE66, PREFIX24, TaxRegionProvinceOverrideSection;
var init_tax_region_province_override_section = __esm({
  "src/routes/tax-regions/tax-region-province-detail/components/tax-region-province-override-section/tax-region-province-override-section.tsx"() {
    "use strict";
    import_ui386 = require("@medusajs/ui");
    import_react_query88 = require("@tanstack/react-query");
    import_react_i18next423 = require("react-i18next");
    init_tax_rates();
    init_use_tax_rate_table_query();
    init_tax_override_table2();
    init_use_tax_override_table();
    import_jsx_runtime594 = require("react/jsx-runtime");
    PAGE_SIZE66 = 10;
    PREFIX24 = "o";
    TaxRegionProvinceOverrideSection = ({
      taxRegion
    }) => {
      const { t: t4 } = (0, import_react_i18next423.useTranslation)();
      const { searchParams, raw } = useTaxRateTableQuery({
        pageSize: PAGE_SIZE66,
        prefix: PREFIX24
      });
      const { tax_rates, count: count3, isPending, isError, error } = useTaxRates(
        {
          ...searchParams,
          tax_region_id: taxRegion.id,
          is_default: false
        },
        {
          placeholderData: import_react_query88.keepPreviousData
        }
      );
      const { table } = useTaxOverrideTable({
        count: count3,
        data: tax_rates,
        pageSize: PAGE_SIZE66,
        prefix: PREFIX24
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime594.jsx)(import_ui386.Container, { className: "p-0", children: /* @__PURE__ */ (0, import_jsx_runtime594.jsx)(
        TaxOverrideTable,
        {
          isPending,
          table,
          count: count3,
          action: {
            label: t4("actions.create"),
            to: "overrides/create"
          },
          queryObject: raw,
          prefix: PREFIX24,
          children: /* @__PURE__ */ (0, import_jsx_runtime594.jsx)(import_ui386.Heading, { level: "h2", children: t4("taxRegions.taxOverrides.header") })
        }
      ) });
    };
  }
});

// src/routes/tax-regions/tax-region-province-detail/components/tax-region-province-override-section/index.ts
var init_tax_region_province_override_section2 = __esm({
  "src/routes/tax-regions/tax-region-province-detail/components/tax-region-province-override-section/index.ts"() {
    "use strict";
    init_tax_region_province_override_section();
  }
});

// src/routes/tax-regions/tax-region-province-detail/tax-region-detail.tsx
var import_react_router_dom208, import_jsx_runtime595, TaxRegionDetail2;
var init_tax_region_detail3 = __esm({
  "src/routes/tax-regions/tax-region-province-detail/tax-region-detail.tsx"() {
    "use strict";
    import_react_router_dom208 = require("react-router-dom");
    init_pages();
    init_tax_regions();
    init_tax_region_province_detail_section();
    init_skeleton2();
    init_extensions();
    init_tax_region_province_override_section2();
    import_jsx_runtime595 = require("react/jsx-runtime");
    TaxRegionDetail2 = () => {
      const { province_id } = (0, import_react_router_dom208.useParams)();
      const initialData = (0, import_react_router_dom208.useLoaderData)();
      const {
        tax_region: taxRegion,
        isLoading,
        isError,
        error
      } = useTaxRegion(province_id, void 0, { initialData });
      const { getWidgets } = useDashboardExtension();
      if (isLoading || !taxRegion) {
        return /* @__PURE__ */ (0, import_jsx_runtime595.jsx)(SingleColumnPageSkeleton, { sections: 2, showJSON: true });
      }
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime595.jsxs)(
        SingleColumnPage,
        {
          data: taxRegion,
          showJSON: true,
          widgets: {
            after: getWidgets("tax.details.after"),
            before: getWidgets("tax.details.before")
          },
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime595.jsx)(TaxRegionProvinceDetailSection, { taxRegion }),
            /* @__PURE__ */ (0, import_jsx_runtime595.jsx)(TaxRegionProvinceOverrideSection, { taxRegion })
          ]
        }
      );
    };
  }
});

// src/routes/tax-regions/tax-region-province-detail/loader.ts
var taxRegionDetailQuery2, taxRegionLoader2;
var init_loader28 = __esm({
  "src/routes/tax-regions/tax-region-province-detail/loader.ts"() {
    "use strict";
    init_tax_regions();
    init_client2();
    init_query_client();
    taxRegionDetailQuery2 = (id2) => ({
      queryKey: taxRegionsQueryKeys.detail(id2),
      queryFn: async () => sdk.admin.taxRegion.retrieve(id2)
    });
    taxRegionLoader2 = async ({ params: params2 }) => {
      const id2 = params2.province_id;
      const query = taxRegionDetailQuery2(id2);
      return queryClient.getQueryData(query.queryKey) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/routes/tax-regions/tax-region-province-detail/index.ts
var tax_region_province_detail_exports = {};
__export(tax_region_province_detail_exports, {
  Component: () => TaxRegionDetail2,
  TaxRegionDetail: () => TaxRegionDetail2,
  loader: () => taxRegionLoader2
});
var init_tax_region_province_detail = __esm({
  "src/routes/tax-regions/tax-region-province-detail/index.ts"() {
    "use strict";
    init_tax_region_detail3();
    init_loader28();
    init_tax_region_detail3();
  }
});

// src/routes/return-reasons/return-reason-list/loader.ts
var returnReasonListQuery, returnReasonListLoader;
var init_loader29 = __esm({
  "src/routes/return-reasons/return-reason-list/loader.ts"() {
    "use strict";
    init_return_reasons();
    init_client2();
    init_query_client();
    returnReasonListQuery = (query) => ({
      queryKey: returnReasonsQueryKeys.list(query),
      queryFn: async () => sdk.admin.returnReason.list(query)
    });
    returnReasonListLoader = async () => {
      const query = returnReasonListQuery();
      return queryClient.getQueryData(query.queryKey) ?? await queryClient.fetchQuery(query);
    };
  }
});

// src/routes/return-reasons/common/hooks/use-delete-return-reason-action.tsx
var import_ui387, import_react_i18next424, useDeleteReturnReasonAction;
var init_use_delete_return_reason_action = __esm({
  "src/routes/return-reasons/common/hooks/use-delete-return-reason-action.tsx"() {
    "use strict";
    import_ui387 = require("@medusajs/ui");
    import_react_i18next424 = require("react-i18next");
    init_return_reasons();
    useDeleteReturnReasonAction = ({
      id: id2,
      label
    }) => {
      const { t: t4 } = (0, import_react_i18next424.useTranslation)();
      const prompt = (0, import_ui387.usePrompt)();
      const { mutateAsync } = useDeleteReturnReason(id2);
      const handleDelete = async () => {
        const result = await prompt({
          title: t4("general.areYouSure"),
          description: t4("returnReasons.delete.confirmation", {
            label
          }),
          confirmText: t4("actions.delete"),
          cancelText: t4("actions.cancel")
        });
        if (!result) {
          return;
        }
        await mutateAsync(void 0, {
          onSuccess: () => {
            import_ui387.toast.success(t4("returnReasons.delete.successToast", { label }));
          },
          onError: (e) => {
            import_ui387.toast.error(e.message);
          }
        });
      };
      return handleDelete;
    };
  }
});

// src/routes/return-reasons/return-reason-list/components/return-reason-list-table/return-reason-list-table.tsx
var import_icons161, import_ui388, import_react_query89, import_react_table83, import_react252, import_react_i18next425, import_react_router_dom209, import_jsx_runtime596, PAGE_SIZE67, ReturnReasonListTable, ReturnReasonRowActions, columnHelper82, useColumns44;
var init_return_reason_list_table = __esm({
  "src/routes/return-reasons/return-reason-list/components/return-reason-list-table/return-reason-list-table.tsx"() {
    "use strict";
    import_icons161 = require("@medusajs/icons");
    import_ui388 = require("@medusajs/ui");
    import_react_query89 = require("@tanstack/react-query");
    import_react_table83 = require("@tanstack/react-table");
    import_react252 = require("react");
    import_react_i18next425 = require("react-i18next");
    import_react_router_dom209 = require("react-router-dom");
    init_action_menu2();
    init_data_table2();
    init_return_reasons();
    init_columns();
    init_query();
    init_use_data_table();
    init_use_delete_return_reason_action();
    import_jsx_runtime596 = require("react/jsx-runtime");
    PAGE_SIZE67 = 20;
    ReturnReasonListTable = () => {
      const { t: t4 } = (0, import_react_i18next425.useTranslation)();
      const { searchParams, raw } = useReturnReasonTableQuery({
        pageSize: PAGE_SIZE67
      });
      const { return_reasons, count: count3, isPending, isError, error } = useReturnReasons(
        searchParams,
        {
          placeholderData: import_react_query89.keepPreviousData
        }
      );
      const columns = useColumns44();
      const { table } = useDataTable({
        data: return_reasons,
        columns,
        count: count3,
        getRowId: (row) => row.id,
        pageSize: PAGE_SIZE67
      });
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime596.jsxs)(import_ui388.Container, { className: "divide-y px-0 py-0", children: [
        /* @__PURE__ */ (0, import_jsx_runtime596.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime596.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime596.jsx)(import_ui388.Heading, { children: t4("returnReasons.domain") }),
            /* @__PURE__ */ (0, import_jsx_runtime596.jsx)(import_ui388.Text, { className: "text-ui-fg-subtle", size: "small", children: t4("returnReasons.subtitle") })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime596.jsx)(import_ui388.Button, { variant: "secondary", size: "small", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime596.jsx)(import_react_router_dom209.Link, { to: "create", children: t4("actions.create") }) })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime596.jsx)(
          DataTable,
          {
            table,
            queryObject: raw,
            count: count3,
            isLoading: isPending,
            columns,
            pageSize: PAGE_SIZE67,
            noHeader: true,
            pagination: true,
            search: true
          }
        )
      ] });
    };
    ReturnReasonRowActions = ({
      returnReason
    }) => {
      const { t: t4 } = (0, import_react_i18next425.useTranslation)();
      const handleDelete = useDeleteReturnReasonAction(returnReason);
      return /* @__PURE__ */ (0, import_jsx_runtime596.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime596.jsx)(import_icons161.PencilSquare, {}),
                  label: t4("actions.edit"),
                  to: `${returnReason.id}/edit`
                }
              ]
            },
            {
              actions: [
                {
                  icon: /* @__PURE__ */ (0, import_jsx_runtime596.jsx)(import_icons161.Trash, {}),
                  label: t4("actions.delete"),
                  onClick: handleDelete
                }
              ]
            }
          ]
        }
      );
    };
    columnHelper82 = (0, import_react_table83.createColumnHelper)();
    useColumns44 = () => {
      const base = useReturnReasonTableColumns();
      return (0, import_react252.useMemo)(
        () => [
          ...base,
          columnHelper82.display({
            id: "actions",
            cell: ({ row }) => /* @__PURE__ */ (0, import_jsx_runtime596.jsx)(ReturnReasonRowActions, { returnReason: row.original })
          })
        ],
        [base]
      );
    };
  }
});

// src/routes/return-reasons/return-reason-list/components/return-reason-list-table/index.ts
var init_return_reason_list_table2 = __esm({
  "src/routes/return-reasons/return-reason-list/components/return-reason-list-table/index.ts"() {
    "use strict";
    init_return_reason_list_table();
  }
});

// src/routes/return-reasons/return-reason-list/return-reason-list.tsx
var import_jsx_runtime597, ReturnReasonList;
var init_return_reason_list = __esm({
  "src/routes/return-reasons/return-reason-list/return-reason-list.tsx"() {
    "use strict";
    init_pages();
    init_extensions();
    init_return_reason_list_table2();
    import_jsx_runtime597 = require("react/jsx-runtime");
    ReturnReasonList = () => {
      const { getWidgets } = useDashboardExtension();
      return /* @__PURE__ */ (0, import_jsx_runtime597.jsx)(
        SingleColumnPage,
        {
          showMetadata: false,
          showJSON: false,
          hasOutlet: true,
          widgets: {
            after: getWidgets("return_reason.list.after"),
            before: getWidgets("return_reason.list.before")
          },
          children: /* @__PURE__ */ (0, import_jsx_runtime597.jsx)(ReturnReasonListTable, {})
        }
      );
    };
  }
});

// src/routes/return-reasons/return-reason-list/index.ts
var return_reason_list_exports = {};
__export(return_reason_list_exports, {
  Component: () => ReturnReasonList,
  loader: () => returnReasonListLoader
});
var init_return_reason_list2 = __esm({
  "src/routes/return-reasons/return-reason-list/index.ts"() {
    "use strict";
    init_loader29();
    init_return_reason_list();
  }
});

// src/routes/return-reasons/return-reason-create/components/return-reason-create-form/return-reason-create-form.tsx
var import_zod135, import_ui389, import_react_hook_form119, import_react_i18next426, import_zod136, import_jsx_runtime598, ReturnReasonCreateSchema, ReturnReasonCreateForm;
var init_return_reason_create_form = __esm({
  "src/routes/return-reasons/return-reason-create/components/return-reason-create-form/return-reason-create-form.tsx"() {
    "use strict";
    import_zod135 = require("@hookform/resolvers/zod");
    import_ui389 = require("@medusajs/ui");
    import_react_hook_form119 = require("react-hook-form");
    import_react_i18next426 = require("react-i18next");
    import_zod136 = require("zod");
    init_form2();
    init_modals();
    init_keybound_form2();
    init_return_reasons();
    import_jsx_runtime598 = require("react/jsx-runtime");
    ReturnReasonCreateSchema = import_zod136.z.object({
      value: import_zod136.z.string().min(1),
      label: import_zod136.z.string().min(1),
      description: import_zod136.z.string().optional()
    });
    ReturnReasonCreateForm = () => {
      const { t: t4 } = (0, import_react_i18next426.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form119.useForm)({
        defaultValues: {
          value: "",
          label: "",
          description: ""
        },
        resolver: (0, import_zod135.zodResolver)(ReturnReasonCreateSchema)
      });
      const { mutateAsync, isPending } = useCreateReturnReason();
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(data, {
          onSuccess: ({ return_reason }) => {
            import_ui389.toast.success(
              t4("returnReasons.create.successToast", {
                label: return_reason.label
              })
            );
            handleSuccess(`../`);
          },
          onError: (error) => {
            import_ui389.toast.error(error.message);
          }
        });
      });
      return /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(RouteFocusModal.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime598.jsxs)(
        KeyboundForm,
        {
          className: "flex size-full flex-col overflow-hidden",
          onSubmit: handleSubmit,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(RouteFocusModal.Header, {}),
            /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(RouteFocusModal.Body, { className: "flex flex-1 justify-center overflow-auto px-6 py-16", children: /* @__PURE__ */ (0, import_jsx_runtime598.jsxs)("div", { className: "flex w-full max-w-[720px] flex-col gap-y-8", children: [
              /* @__PURE__ */ (0, import_jsx_runtime598.jsxs)("div", { className: "flex flex-col gap-y-1", children: [
                /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(RouteFocusModal.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(import_ui389.Heading, { children: t4("returnReasons.create.header") }) }),
                /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(RouteFocusModal.Description, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(import_ui389.Text, { size: "small", className: "text-ui-fg-subtle", children: t4("returnReasons.create.subtitle") }) })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime598.jsxs)("div", { className: "grid gap-4 md:grid-cols-2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "value",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime598.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(
                          Form.Label,
                          {
                            tooltip: t4("returnReasons.fields.value.tooltip"),
                            children: t4("returnReasons.fields.value.label")
                          }
                        ),
                        /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(
                          import_ui389.Input,
                          {
                            ...field,
                            placeholder: t4(
                              "returnReasons.fields.value.placeholder"
                            )
                          }
                        ) }),
                        /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "label",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime598.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(Form.Label, { children: t4("returnReasons.fields.label.label") }),
                        /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(
                          import_ui389.Input,
                          {
                            ...field,
                            placeholder: t4(
                              "returnReasons.fields.label.placeholder"
                            )
                          }
                        ) }),
                        /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                )
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "description",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime598.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(Form.Label, { optional: true, children: t4("returnReasons.fields.description.label") }),
                      /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(
                        import_ui389.Textarea,
                        {
                          ...field,
                          placeholder: t4(
                            "returnReasons.fields.description.placeholder"
                          )
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              )
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(RouteFocusModal.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime598.jsxs)("div", { className: "flex items-center justify-end gap-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(import_ui389.Button, { size: "small", variant: "secondary", type: "button", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime598.jsx)(import_ui389.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/return-reasons/return-reason-create/components/return-reason-create-form/index.ts
var init_return_reason_create_form2 = __esm({
  "src/routes/return-reasons/return-reason-create/components/return-reason-create-form/index.ts"() {
    "use strict";
    init_return_reason_create_form();
  }
});

// src/routes/return-reasons/return-reason-create/return-reason-create.tsx
var import_jsx_runtime599, ReturnReasonCreate;
var init_return_reason_create = __esm({
  "src/routes/return-reasons/return-reason-create/return-reason-create.tsx"() {
    "use strict";
    init_modals();
    init_return_reason_create_form2();
    import_jsx_runtime599 = require("react/jsx-runtime");
    ReturnReasonCreate = () => {
      return /* @__PURE__ */ (0, import_jsx_runtime599.jsx)(RouteFocusModal, { children: /* @__PURE__ */ (0, import_jsx_runtime599.jsx)(ReturnReasonCreateForm, {}) });
    };
  }
});

// src/routes/return-reasons/return-reason-create/index.ts
var return_reason_create_exports = {};
__export(return_reason_create_exports, {
  Component: () => ReturnReasonCreate
});
var init_return_reason_create2 = __esm({
  "src/routes/return-reasons/return-reason-create/index.ts"() {
    "use strict";
    init_return_reason_create();
  }
});

// src/routes/return-reasons/return-reason-edit/components/return-reason-edit-form/return-reason-edit-form.tsx
var import_zod137, import_ui390, import_react_hook_form120, import_react_i18next427, import_zod138, import_jsx_runtime600, ReturnReasonEditSchema, ReturnReasonEditForm;
var init_return_reason_edit_form = __esm({
  "src/routes/return-reasons/return-reason-edit/components/return-reason-edit-form/return-reason-edit-form.tsx"() {
    "use strict";
    import_zod137 = require("@hookform/resolvers/zod");
    import_ui390 = require("@medusajs/ui");
    import_react_hook_form120 = require("react-hook-form");
    import_react_i18next427 = require("react-i18next");
    import_zod138 = require("zod");
    init_form2();
    init_modals();
    init_keybound_form2();
    init_return_reasons();
    import_jsx_runtime600 = require("react/jsx-runtime");
    ReturnReasonEditSchema = import_zod138.z.object({
      value: import_zod138.z.string().min(1),
      label: import_zod138.z.string().min(1),
      description: import_zod138.z.string().optional()
    });
    ReturnReasonEditForm = ({
      returnReason
    }) => {
      const { t: t4 } = (0, import_react_i18next427.useTranslation)();
      const { handleSuccess } = useRouteModal();
      const form = (0, import_react_hook_form120.useForm)({
        defaultValues: {
          value: returnReason.value,
          label: returnReason.label,
          description: returnReason.description ?? void 0
        },
        resolver: (0, import_zod137.zodResolver)(ReturnReasonEditSchema)
      });
      const { mutateAsync, isPending } = useUpdateReturnReason(returnReason.id);
      const handleSubmit = form.handleSubmit(async (data) => {
        await mutateAsync(data, {
          onSuccess: ({ return_reason }) => {
            import_ui390.toast.success(
              t4("returnReasons.edit.successToast", {
                label: return_reason.label
              })
            );
            handleSuccess();
          },
          onError: (error) => {
            import_ui390.toast.error(error.message);
          }
        });
      });
      return /* @__PURE__ */ (0, import_jsx_runtime600.jsx)(RouteDrawer.Form, { form, children: /* @__PURE__ */ (0, import_jsx_runtime600.jsxs)(
        KeyboundForm,
        {
          className: "flex size-full flex-col overflow-hidden",
          onSubmit: handleSubmit,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime600.jsxs)(RouteDrawer.Body, { className: "flex flex-1 flex-col gap-y-4 overflow-auto", children: [
              /* @__PURE__ */ (0, import_jsx_runtime600.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "value",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime600.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime600.jsx)(Form.Label, { tooltip: t4("returnReasons.fields.value.tooltip"), children: t4("returnReasons.fields.value.label") }),
                      /* @__PURE__ */ (0, import_jsx_runtime600.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime600.jsx)(
                        import_ui390.Input,
                        {
                          ...field,
                          placeholder: t4("returnReasons.fields.value.placeholder")
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime600.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime600.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "label",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime600.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime600.jsx)(Form.Label, { children: t4("returnReasons.fields.label.label") }),
                      /* @__PURE__ */ (0, import_jsx_runtime600.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime600.jsx)(
                        import_ui390.Input,
                        {
                          ...field,
                          placeholder: t4("returnReasons.fields.label.placeholder")
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime600.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime600.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "description",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime600.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime600.jsx)(Form.Label, { optional: true, children: t4("returnReasons.fields.description.label") }),
                      /* @__PURE__ */ (0, import_jsx_runtime600.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime600.jsx)(
                        import_ui390.Textarea,
                        {
                          ...field,
                          placeholder: t4(
                            "returnReasons.fields.description.placeholder"
                          )
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime600.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              )
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime600.jsx)(RouteDrawer.Footer, { children: /* @__PURE__ */ (0, import_jsx_runtime600.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime600.jsx)(RouteDrawer.Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime600.jsx)(import_ui390.Button, { variant: "secondary", size: "small", type: "button", children: t4("actions.cancel") }) }),
              /* @__PURE__ */ (0, import_jsx_runtime600.jsx)(import_ui390.Button, { size: "small", type: "submit", isLoading: isPending, children: t4("actions.save") })
            ] }) })
          ]
        }
      ) });
    };
  }
});

// src/routes/return-reasons/return-reason-edit/components/return-reason-edit-form/index.ts
var init_return_reason_edit_form2 = __esm({
  "src/routes/return-reasons/return-reason-edit/components/return-reason-edit-form/index.ts"() {
    "use strict";
    init_return_reason_edit_form();
  }
});

// src/routes/return-reasons/return-reason-edit/return-reason-edit.tsx
var import_ui391, import_react_i18next428, import_react_router_dom210, import_jsx_runtime601, ReturnReasonEdit;
var init_return_reason_edit = __esm({
  "src/routes/return-reasons/return-reason-edit/return-reason-edit.tsx"() {
    "use strict";
    import_ui391 = require("@medusajs/ui");
    import_react_i18next428 = require("react-i18next");
    import_react_router_dom210 = require("react-router-dom");
    init_modals();
    init_return_reasons();
    init_return_reason_edit_form2();
    import_jsx_runtime601 = require("react/jsx-runtime");
    ReturnReasonEdit = () => {
      const { id: id2 } = (0, import_react_router_dom210.useParams)();
      const { t: t4 } = (0, import_react_i18next428.useTranslation)();
      const { return_reason, isPending, isError, error } = useReturnReason(id2);
      const ready = !isPending && !!return_reason;
      if (isError) {
        throw error;
      }
      return /* @__PURE__ */ (0, import_jsx_runtime601.jsxs)(RouteDrawer, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime601.jsxs)(RouteDrawer.Header, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime601.jsx)(RouteDrawer.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime601.jsx)(import_ui391.Heading, { children: t4("returnReasons.edit.header") }) }),
          /* @__PURE__ */ (0, import_jsx_runtime601.jsx)(RouteDrawer.Description, { className: "sr-only", children: t4("returnReasons.edit.subtitle") })
        ] }),
        ready && /* @__PURE__ */ (0, import_jsx_runtime601.jsx)(ReturnReasonEditForm, { returnReason: return_reason })
      ] });
    };
  }
});

// src/routes/return-reasons/return-reason-edit/index.ts
var return_reason_edit_exports = {};
__export(return_reason_edit_exports, {
  Component: () => ReturnReasonEdit
});
var init_return_reason_edit2 = __esm({
  "src/routes/return-reasons/return-reason-edit/index.ts"() {
    "use strict";
    init_return_reason_edit();
  }
});

// src/components/common/logo-box/avatar-box.tsx
function AvatarBox({ checked }) {
  return /* @__PURE__ */ (0, import_jsx_runtime602.jsxs)(
    IconAvatar,
    {
      size: "xlarge",
      className: "bg-ui-button-neutral shadow-buttons-neutral after:button-neutral-gradient relative mb-4 flex items-center justify-center rounded-xl after:inset-0 after:content-[''] w-[52px] h-[52px]",
      children: [
        checked && /* @__PURE__ */ (0, import_jsx_runtime602.jsx)(
          import_framer_motion4.motion.div,
          {
            className: "absolute -right-[5px] -top-1 flex size-5 items-center justify-center rounded-full border-[0.5px] border-[rgba(3,7,18,0.2)] bg-[#3B82F6] bg-gradient-to-b from-white/0 to-white/20 shadow-[0px_1px_2px_0px_rgba(3,7,18,0.12),0px_1px_2px_0px_rgba(255,255,255,0.10)_inset,0px_-1px_5px_0px_rgba(255,255,255,0.10)_inset,0px_0px_0px_0px_rgba(3,7,18,0.06)_inset]",
            initial: { opacity: 0, scale: 0.5 },
            animate: { opacity: 1, scale: 1 },
            transition: {
              duration: 1.2,
              delay: 0.8,
              ease: [0, 0.71, 0.2, 1.01]
            },
            children: /* @__PURE__ */ (0, import_jsx_runtime602.jsx)(
              "svg",
              {
                xmlns: "http://www.w3.org/2000/svg",
                width: "20",
                height: "20",
                viewBox: "0 0 20 20",
                fill: "none",
                children: /* @__PURE__ */ (0, import_jsx_runtime602.jsx)(
                  import_framer_motion4.motion.path,
                  {
                    d: "M5.8335 10.4167L9.16683 13.75L14.1668 6.25",
                    stroke: "white",
                    strokeWidth: "1.5",
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                    initial: { pathLength: 0, opacity: 0 },
                    animate: { pathLength: 1, opacity: 1 },
                    transition: {
                      duration: 1.3,
                      delay: 1.1,
                      bounce: 0.6,
                      ease: [0.1, 0.8, 0.2, 1.01]
                    }
                  }
                )
              }
            )
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime602.jsxs)(
          "svg",
          {
            className: "rounded-[10px]",
            viewBox: "0 0 400 400",
            fill: "none",
            xmlns: "http://www.w3.org/2000/svg",
            children: [
              /* @__PURE__ */ (0, import_jsx_runtime602.jsx)("rect", { width: "400", height: "400", fill: "#18181B" }),
              /* @__PURE__ */ (0, import_jsx_runtime602.jsx)(
                "path",
                {
                  d: "M238.088 51.1218L238.089 51.1223L310.605 92.8101C334.028 106.308 348.526 131.32 347.868 157.953L347.867 157.966V157.978V241.688C347.867 268.68 333.687 293.362 310.271 306.856L310.269 306.858L237.754 348.878C214.336 362.374 185.643 362.374 162.225 348.878L89.7127 306.859C66.6206 293.361 52.1113 268.674 52.1113 241.688V157.978C52.1113 131.326 66.6211 106.307 89.7088 92.8093C89.7101 92.8085 89.7114 92.8078 89.7127 92.807L162.556 51.1233L162.559 51.1218C185.977 37.6261 214.67 37.6261 238.088 51.1218ZM124.634 200C124.634 241.576 158.502 275.372 200.156 275.372C242.142 275.372 276.013 241.578 276.013 200C276.013 158.419 241.805 124.628 200.156 124.628C158.502 124.628 124.634 158.424 124.634 200Z",
                  fill: "url(#paint0_linear_11869_12671)",
                  stroke: "url(#paint1_linear_11869_12671)",
                  strokeWidth: "2"
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime602.jsxs)("defs", { children: [
                /* @__PURE__ */ (0, import_jsx_runtime602.jsxs)(
                  "linearGradient",
                  {
                    id: "paint0_linear_11869_12671",
                    x1: "200",
                    y1: "40",
                    x2: "200",
                    y2: "360",
                    gradientUnits: "userSpaceOnUse",
                    children: [
                      /* @__PURE__ */ (0, import_jsx_runtime602.jsx)("stop", { stopColor: "white" }),
                      /* @__PURE__ */ (0, import_jsx_runtime602.jsx)("stop", { offset: "1", stopColor: "white", stopOpacity: "0.7" })
                    ]
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime602.jsxs)(
                  "linearGradient",
                  {
                    id: "paint1_linear_11869_12671",
                    x1: "200",
                    y1: "40",
                    x2: "200",
                    y2: "360",
                    gradientUnits: "userSpaceOnUse",
                    children: [
                      /* @__PURE__ */ (0, import_jsx_runtime602.jsx)("stop", { stopColor: "white", stopOpacity: "0" }),
                      /* @__PURE__ */ (0, import_jsx_runtime602.jsx)("stop", { offset: "1", stopColor: "white", stopOpacity: "0.7" })
                    ]
                  }
                )
              ] })
            ]
          }
        )
      ]
    }
  );
}
var import_framer_motion4, import_jsx_runtime602;
var init_avatar_box = __esm({
  "src/components/common/logo-box/avatar-box.tsx"() {
    "use strict";
    import_framer_motion4 = require("framer-motion");
    init_icon_avatar2();
    import_jsx_runtime602 = require("react/jsx-runtime");
  }
});

// src/routes/login/login.tsx
var import_zod139, import_ui392, import_react_hook_form121, import_react_i18next429, import_react_router_dom211, z53, import_jsx_runtime603, LoginSchema, Login;
var init_login = __esm({
  "src/routes/login/login.tsx"() {
    "use strict";
    import_zod139 = require("@hookform/resolvers/zod");
    import_ui392 = require("@medusajs/ui");
    import_react_hook_form121 = require("react-hook-form");
    import_react_i18next429 = require("react-i18next");
    import_react_router_dom211 = require("react-router-dom");
    z53 = __toESM(require("zod"));
    init_form2();
    init_avatar_box();
    init_extensions();
    init_api();
    init_is_fetch_error();
    import_jsx_runtime603 = require("react/jsx-runtime");
    LoginSchema = z53.object({
      email: z53.string().email(),
      password: z53.string()
    });
    Login = () => {
      const { t: t4 } = (0, import_react_i18next429.useTranslation)();
      const location = (0, import_react_router_dom211.useLocation)();
      const navigate = (0, import_react_router_dom211.useNavigate)();
      const { getWidgets } = useDashboardExtension();
      const from = location.state?.from?.pathname || "/orders";
      const form = (0, import_react_hook_form121.useForm)({
        resolver: (0, import_zod139.zodResolver)(LoginSchema),
        defaultValues: {
          email: "",
          password: ""
        }
      });
      const { mutateAsync, isPending } = useSignInWithEmailPass();
      const handleSubmit = form.handleSubmit(async ({ email, password }) => {
        await mutateAsync(
          {
            email,
            password
          },
          {
            onError: (error) => {
              if (isFetchError(error)) {
                if (error.status === 401) {
                  form.setError("email", {
                    type: "manual",
                    message: error.message
                  });
                  return;
                }
              }
              form.setError("root.serverError", {
                type: "manual",
                message: error.message
              });
            },
            onSuccess: () => {
              navigate(from, { replace: true });
            }
          }
        );
      });
      const serverError = form.formState.errors?.root?.serverError?.message;
      const validationError = form.formState.errors.email?.message || form.formState.errors.password?.message;
      return /* @__PURE__ */ (0, import_jsx_runtime603.jsx)("div", { className: "bg-ui-bg-subtle flex min-h-dvh w-dvw items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime603.jsxs)("div", { className: "m-4 flex w-full max-w-[280px] flex-col items-center", children: [
        /* @__PURE__ */ (0, import_jsx_runtime603.jsx)(AvatarBox, {}),
        /* @__PURE__ */ (0, import_jsx_runtime603.jsxs)("div", { className: "mb-4 flex flex-col items-center", children: [
          /* @__PURE__ */ (0, import_jsx_runtime603.jsx)(import_ui392.Heading, { children: t4("login.title") }),
          /* @__PURE__ */ (0, import_jsx_runtime603.jsx)(import_ui392.Text, { size: "small", className: "text-ui-fg-subtle text-center", children: t4("login.hint") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime603.jsxs)("div", { className: "flex w-full flex-col gap-y-3", children: [
          getWidgets("login.before").map((Component5, i) => {
            return /* @__PURE__ */ (0, import_jsx_runtime603.jsx)(Component5, {}, i);
          }),
          /* @__PURE__ */ (0, import_jsx_runtime603.jsx)(Form, { ...form, children: /* @__PURE__ */ (0, import_jsx_runtime603.jsxs)(
            "form",
            {
              onSubmit: handleSubmit,
              className: "flex w-full flex-col gap-y-6",
              children: [
                /* @__PURE__ */ (0, import_jsx_runtime603.jsxs)("div", { className: "flex flex-col gap-y-1", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime603.jsx)(
                    Form.Field,
                    {
                      control: form.control,
                      name: "email",
                      render: ({ field }) => {
                        return /* @__PURE__ */ (0, import_jsx_runtime603.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime603.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime603.jsx)(
                          import_ui392.Input,
                          {
                            autoComplete: "email",
                            ...field,
                            className: "bg-ui-bg-field-component",
                            placeholder: t4("fields.email")
                          }
                        ) }) });
                      }
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime603.jsx)(
                    Form.Field,
                    {
                      control: form.control,
                      name: "password",
                      render: ({ field }) => {
                        return /* @__PURE__ */ (0, import_jsx_runtime603.jsxs)(Form.Item, { children: [
                          /* @__PURE__ */ (0, import_jsx_runtime603.jsx)(Form.Label, {}),
                          /* @__PURE__ */ (0, import_jsx_runtime603.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime603.jsx)(
                            import_ui392.Input,
                            {
                              type: "password",
                              autoComplete: "current-password",
                              ...field,
                              className: "bg-ui-bg-field-component",
                              placeholder: t4("fields.password")
                            }
                          ) })
                        ] });
                      }
                    }
                  )
                ] }),
                validationError && /* @__PURE__ */ (0, import_jsx_runtime603.jsx)("div", { className: "text-center", children: /* @__PURE__ */ (0, import_jsx_runtime603.jsx)(import_ui392.Hint, { className: "inline-flex", variant: "error", children: validationError }) }),
                serverError && /* @__PURE__ */ (0, import_jsx_runtime603.jsx)(
                  import_ui392.Alert,
                  {
                    className: "bg-ui-bg-base items-center p-2",
                    dismissible: true,
                    variant: "error",
                    children: serverError
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime603.jsx)(import_ui392.Button, { className: "w-full", type: "submit", isLoading: isPending, children: t4("actions.continueWithEmail") })
              ]
            }
          ) }),
          getWidgets("login.after").map((Component5, i) => {
            return /* @__PURE__ */ (0, import_jsx_runtime603.jsx)(Component5, {}, i);
          })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime603.jsx)("span", { className: "text-ui-fg-muted txt-small my-6", children: /* @__PURE__ */ (0, import_jsx_runtime603.jsx)(
          import_react_i18next429.Trans,
          {
            i18nKey: "login.forgotPassword",
            components: [
              /* @__PURE__ */ (0, import_jsx_runtime603.jsx)(
                import_react_router_dom211.Link,
                {
                  to: "/reset-password",
                  className: "text-ui-fg-interactive transition-fg hover:text-ui-fg-interactive-hover focus-visible:text-ui-fg-interactive-hover font-medium outline-none"
                },
                "reset-password-link"
              )
            ]
          }
        ) })
      ] }) });
    };
  }
});

// src/routes/login/index.ts
var login_exports = {};
__export(login_exports, {
  Component: () => Login
});
var init_login2 = __esm({
  "src/routes/login/index.ts"() {
    "use strict";
    init_login();
  }
});

// src/components/common/logo-box/logo-box.tsx
var import_ui393, import_framer_motion5, import_jsx_runtime604, LogoBox;
var init_logo_box = __esm({
  "src/components/common/logo-box/logo-box.tsx"() {
    "use strict";
    import_ui393 = require("@medusajs/ui");
    import_framer_motion5 = require("framer-motion");
    import_jsx_runtime604 = require("react/jsx-runtime");
    LogoBox = ({
      className,
      checked,
      containerTransition = {
        duration: 0.8,
        delay: 0.5,
        ease: [0, 0.71, 0.2, 1.01]
      },
      pathTransition = {
        duration: 0.8,
        delay: 0.6,
        ease: [0.1, 0.8, 0.2, 1.01]
      }
    }) => {
      return /* @__PURE__ */ (0, import_jsx_runtime604.jsxs)(
        "div",
        {
          className: (0, import_ui393.clx)(
            "size-14 bg-ui-button-neutral shadow-buttons-neutral relative flex items-center justify-center rounded-xl",
            "after:button-neutral-gradient after:inset-0 after:content-['']",
            className
          ),
          children: [
            checked && /* @__PURE__ */ (0, import_jsx_runtime604.jsx)(
              import_framer_motion5.motion.div,
              {
                className: "size-5 absolute -right-[5px] -top-1 flex items-center justify-center rounded-full border-[0.5px] border-[rgba(3,7,18,0.2)] bg-[#3B82F6] bg-gradient-to-b from-white/0 to-white/20 shadow-[0px_1px_2px_0px_rgba(3,7,18,0.12),0px_1px_2px_0px_rgba(255,255,255,0.10)_inset,0px_-1px_5px_0px_rgba(255,255,255,0.10)_inset,0px_0px_0px_0px_rgba(3,7,18,0.06)_inset]",
                initial: { opacity: 0, scale: 0.5 },
                animate: { opacity: 1, scale: 1 },
                transition: containerTransition,
                children: /* @__PURE__ */ (0, import_jsx_runtime604.jsx)(
                  "svg",
                  {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "20",
                    height: "20",
                    viewBox: "0 0 20 20",
                    fill: "none",
                    children: /* @__PURE__ */ (0, import_jsx_runtime604.jsx)(
                      import_framer_motion5.motion.path,
                      {
                        d: "M5.8335 10.4167L9.16683 13.75L14.1668 6.25",
                        stroke: "white",
                        strokeWidth: "1.5",
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        initial: { pathLength: 0, opacity: 0 },
                        animate: { pathLength: 1, opacity: 1 },
                        transition: pathTransition
                      }
                    )
                  }
                )
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime604.jsx)(
              "svg",
              {
                width: "36",
                height: "38",
                viewBox: "0 0 36 38",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg",
                children: /* @__PURE__ */ (0, import_jsx_runtime604.jsx)(
                  "path",
                  {
                    d: "M30.85 6.16832L22.2453 1.21782C19.4299 -0.405941 15.9801 -0.405941 13.1648 1.21782L4.52043 6.16832C1.74473 7.79208 0 10.802 0 14.0099V23.9505C0 27.198 1.74473 30.1683 4.52043 31.7921L13.1251 36.7822C15.9405 38.4059 19.3903 38.4059 22.2056 36.7822L30.8103 31.7921C33.6257 30.1683 35.3307 27.198 35.3307 23.9505V14.0099C35.41 10.802 33.6653 7.79208 30.85 6.16832ZM17.6852 27.8317C12.8079 27.8317 8.8426 23.8713 8.8426 19C8.8426 14.1287 12.8079 10.1683 17.6852 10.1683C22.5625 10.1683 26.5674 14.1287 26.5674 19C26.5674 23.8713 22.6022 27.8317 17.6852 27.8317Z",
                    className: "fill-ui-button-inverted relative drop-shadow-sm"
                  }
                )
              }
            )
          ]
        }
      );
    };
  }
});

// src/components/common/logo-box/index.ts
var init_logo_box2 = __esm({
  "src/components/common/logo-box/index.ts"() {
    "use strict";
    init_logo_box();
    init_avatar_box();
  }
});

// src/routes/reset-password/reset-password.tsx
var import_zod140, import_ui394, import_react_hook_form122, import_react_i18next430, import_react_router_dom212, z54, import_react253, import_react_jwt, import_jsx_runtime605, ResetPasswordInstructionsSchema, ResetPasswordSchema, ResetPasswordTokenSchema, validateDecodedResetPasswordToken, InvalidResetToken, ChooseNewPassword, ResetPassword;
var init_reset_password = __esm({
  "src/routes/reset-password/reset-password.tsx"() {
    "use strict";
    import_zod140 = require("@hookform/resolvers/zod");
    import_ui394 = require("@medusajs/ui");
    import_react_hook_form122 = require("react-hook-form");
    import_react_i18next430 = require("react-i18next");
    import_react_router_dom212 = require("react-router-dom");
    z54 = __toESM(require("zod"));
    import_react253 = require("react");
    import_react_jwt = require("react-jwt");
    init_form2();
    init_logo_box2();
    init_i18n2();
    init_auth();
    import_jsx_runtime605 = require("react/jsx-runtime");
    ResetPasswordInstructionsSchema = z54.object({
      email: z54.string().email()
    });
    ResetPasswordSchema = z54.object({
      password: z54.string().min(1),
      repeat_password: z54.string().min(1)
    }).superRefine(({ password, repeat_password }, ctx) => {
      if (password !== repeat_password) {
        ctx.addIssue({
          code: z54.ZodIssueCode.custom,
          message: import_i18next.default.t("resetPassword.passwordMismatch"),
          path: ["repeat_password"]
        });
      }
    });
    ResetPasswordTokenSchema = z54.object({
      entity_id: z54.string(),
      provider: z54.string(),
      exp: z54.number(),
      iat: z54.number()
    });
    validateDecodedResetPasswordToken = (decoded) => {
      return ResetPasswordTokenSchema.safeParse(decoded).success;
    };
    InvalidResetToken = () => {
      const { t: t4 } = (0, import_react_i18next430.useTranslation)();
      const navigate = (0, import_react_router_dom212.useNavigate)();
      return /* @__PURE__ */ (0, import_jsx_runtime605.jsx)("div", { className: "bg-ui-bg-base flex min-h-dvh w-dvw items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime605.jsxs)("div", { className: "m-4 flex w-full max-w-[300px] flex-col items-center", children: [
        /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(LogoBox, { className: "mb-4" }),
        /* @__PURE__ */ (0, import_jsx_runtime605.jsxs)("div", { className: "mb-6 flex flex-col items-center", children: [
          /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(import_ui394.Heading, { children: t4("resetPassword.invalidLinkTitle") }),
          /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(import_ui394.Text, { size: "small", className: "text-ui-fg-subtle text-center", children: t4("resetPassword.invalidLinkHint") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime605.jsx)("div", { className: "flex w-full flex-col gap-y-3", children: /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(
          import_ui394.Button,
          {
            onClick: () => navigate("/reset-password", { replace: true }),
            className: "w-full",
            type: "submit",
            children: t4("resetPassword.goToResetPassword")
          }
        ) }),
        /* @__PURE__ */ (0, import_jsx_runtime605.jsx)("span", { className: "txt-small my-6", children: /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(
          import_react_i18next430.Trans,
          {
            i18nKey: "resetPassword.backToLogin",
            components: [
              /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(
                import_react_router_dom212.Link,
                {
                  to: "/login",
                  className: "text-ui-fg-interactive transition-fg hover:text-ui-fg-interactive-hover focus-visible:text-ui-fg-interactive-hover outline-none"
                },
                "login-link"
              )
            ]
          }
        ) })
      ] }) });
    };
    ChooseNewPassword = ({ token }) => {
      const { t: t4 } = (0, import_react_i18next430.useTranslation)();
      const [showAlert, setShowAlert] = (0, import_react253.useState)(false);
      const invite = token ? (0, import_react_jwt.decodeToken)(token) : null;
      const isValidResetPasswordToken = invite && validateDecodedResetPasswordToken(invite);
      const form = (0, import_react_hook_form122.useForm)({
        resolver: (0, import_zod140.zodResolver)(ResetPasswordSchema),
        defaultValues: {
          password: "",
          repeat_password: ""
        }
      });
      const { mutateAsync, isPending } = useUpdateProviderForEmailPass();
      const handleSubmit = form.handleSubmit(async ({ password }) => {
        if (!invite) {
          return;
        }
        await mutateAsync(
          {
            email: invite.entity_id,
            password
          },
          {
            onSuccess: () => {
              form.setValue("password", "");
              form.setValue("repeat_password", "");
              setShowAlert(true);
            },
            onError: (error) => {
              import_ui394.toast.error(error.message);
            }
          }
        );
      });
      if (!isValidResetPasswordToken) {
        return /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(InvalidResetToken, {});
      }
      return /* @__PURE__ */ (0, import_jsx_runtime605.jsx)("div", { className: "bg-ui-bg-subtle flex min-h-dvh w-dvw items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime605.jsxs)("div", { className: "m-4 flex w-full max-w-[280px] flex-col items-center", children: [
        /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(LogoBox, { className: "mb-4" }),
        /* @__PURE__ */ (0, import_jsx_runtime605.jsxs)("div", { className: "mb-6 flex flex-col items-center", children: [
          /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(import_ui394.Heading, { children: t4("resetPassword.resetPassword") }),
          /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(import_ui394.Text, { size: "small", className: "text-ui-fg-subtle text-center", children: t4("resetPassword.newPasswordHint") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime605.jsx)("div", { className: "flex w-full flex-col gap-y-3", children: /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(Form, { ...form, children: /* @__PURE__ */ (0, import_jsx_runtime605.jsxs)(
          "form",
          {
            onSubmit: handleSubmit,
            className: "flex w-full flex-col gap-y-6",
            children: [
              /* @__PURE__ */ (0, import_jsx_runtime605.jsxs)("div", { className: "flex flex-col gap-y-4", children: [
                /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(import_ui394.Input, { type: "email", disabled: true, value: invite?.entity_id }),
                /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "password",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime605.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(
                          import_ui394.Input,
                          {
                            autoComplete: "new-password",
                            type: "password",
                            ...field,
                            placeholder: t4("resetPassword.newPassword")
                          }
                        ) }),
                        /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(
                  Form.Field,
                  {
                    control: form.control,
                    name: "repeat_password",
                    render: ({ field }) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime605.jsxs)(Form.Item, { children: [
                        /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(
                          import_ui394.Input,
                          {
                            autoComplete: "off",
                            type: "password",
                            ...field,
                            placeholder: t4("resetPassword.repeatNewPassword")
                          }
                        ) }),
                        /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(Form.ErrorMessage, {})
                      ] });
                    }
                  }
                )
              ] }),
              showAlert && /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(import_ui394.Alert, { dismissible: true, variant: "success", children: /* @__PURE__ */ (0, import_jsx_runtime605.jsxs)("div", { className: "flex flex-col", children: [
                /* @__PURE__ */ (0, import_jsx_runtime605.jsx)("span", { className: "text-ui-fg-base mb-1", children: t4("resetPassword.successfulResetTitle") }),
                /* @__PURE__ */ (0, import_jsx_runtime605.jsx)("span", { children: t4("resetPassword.successfulReset") })
              ] }) }),
              !showAlert && /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(import_ui394.Button, { className: "w-full", type: "submit", isLoading: isPending, children: t4("resetPassword.resetPassword") })
            ]
          }
        ) }) }),
        /* @__PURE__ */ (0, import_jsx_runtime605.jsx)("span", { className: "txt-small my-6", children: /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(
          import_react_i18next430.Trans,
          {
            i18nKey: "resetPassword.backToLogin",
            components: [
              /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(
                import_react_router_dom212.Link,
                {
                  to: "/login",
                  className: "text-ui-fg-base transition-fg hover:text-ui-fg-base-hover focus-visible:text-ui-fg-base-hover outline-none"
                },
                "login-link"
              )
            ]
          }
        ) })
      ] }) });
    };
    ResetPassword = () => {
      const { t: t4 } = (0, import_react_i18next430.useTranslation)();
      const [searchParams] = (0, import_react_router_dom212.useSearchParams)();
      const [showAlert, setShowAlert] = (0, import_react253.useState)(false);
      const token = searchParams.get("token");
      const form = (0, import_react_hook_form122.useForm)({
        resolver: (0, import_zod140.zodResolver)(ResetPasswordInstructionsSchema),
        defaultValues: {
          email: ""
        }
      });
      const { mutateAsync, isPending } = useResetPasswordForEmailPass();
      const handleSubmit = form.handleSubmit(async ({ email }) => {
        await mutateAsync(
          {
            email
          },
          {
            onSuccess: () => {
              form.setValue("email", "");
              setShowAlert(true);
            },
            onError: (error) => {
              import_ui394.toast.error(error.message);
            }
          }
        );
      });
      if (token) {
        return /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(ChooseNewPassword, { token });
      }
      return /* @__PURE__ */ (0, import_jsx_runtime605.jsx)("div", { className: "bg-ui-bg-base flex min-h-dvh w-dvw items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime605.jsxs)("div", { className: "m-4 flex w-full max-w-[300px] flex-col items-center", children: [
        /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(LogoBox, { className: "mb-4" }),
        /* @__PURE__ */ (0, import_jsx_runtime605.jsxs)("div", { className: "mb-4 flex flex-col items-center", children: [
          /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(import_ui394.Heading, { children: t4("resetPassword.resetPassword") }),
          /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(import_ui394.Text, { size: "small", className: "text-ui-fg-subtle text-center", children: t4("resetPassword.hint") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime605.jsx)("div", { className: "flex w-full flex-col gap-y-3", children: /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(Form, { ...form, children: /* @__PURE__ */ (0, import_jsx_runtime605.jsxs)(
          "form",
          {
            onSubmit: handleSubmit,
            className: "flex w-full flex-col gap-y-6",
            children: [
              /* @__PURE__ */ (0, import_jsx_runtime605.jsx)("div", { className: "mt-4 flex flex-col gap-y-3", children: /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(
                Form.Field,
                {
                  control: form.control,
                  name: "email",
                  render: ({ field }) => {
                    return /* @__PURE__ */ (0, import_jsx_runtime605.jsxs)(Form.Item, { children: [
                      /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(
                        import_ui394.Input,
                        {
                          autoComplete: "email",
                          ...field,
                          placeholder: t4("fields.email")
                        }
                      ) }),
                      /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(Form.ErrorMessage, {})
                    ] });
                  }
                }
              ) }),
              showAlert && /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(import_ui394.Alert, { dismissible: true, variant: "success", children: /* @__PURE__ */ (0, import_jsx_runtime605.jsxs)("div", { className: "flex flex-col", children: [
                /* @__PURE__ */ (0, import_jsx_runtime605.jsx)("span", { className: "text-ui-fg-base mb-1", children: t4("resetPassword.successfulRequestTitle") }),
                /* @__PURE__ */ (0, import_jsx_runtime605.jsx)("span", { children: t4("resetPassword.successfulRequest") })
              ] }) }),
              /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(import_ui394.Button, { className: "w-full", type: "submit", isLoading: isPending, children: t4("resetPassword.sendResetInstructions") })
            ]
          }
        ) }) }),
        /* @__PURE__ */ (0, import_jsx_runtime605.jsx)("span", { className: "txt-small my-6", children: /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(
          import_react_i18next430.Trans,
          {
            i18nKey: "resetPassword.backToLogin",
            components: [
              /* @__PURE__ */ (0, import_jsx_runtime605.jsx)(
                import_react_router_dom212.Link,
                {
                  to: "/login",
                  className: "text-ui-fg-base transition-fg hover:text-ui-fg-base-hover focus-visible:text-ui-fg-base-hover outline-none"
                },
                "login-link"
              )
            ]
          }
        ) })
      ] }) });
    };
  }
});

// src/routes/reset-password/index.ts
var reset_password_exports = {};
__export(reset_password_exports, {
  Component: () => ResetPassword
});
var init_reset_password2 = __esm({
  "src/routes/reset-password/index.ts"() {
    "use strict";
    init_reset_password();
  }
});

// src/routes/invite/invite.tsx
var import_zod141, import_ui395, import_framer_motion6, import_i18next7, import_react254, import_react_hook_form123, import_react_i18next431, import_react_jwt2, import_react_router_dom213, z55, import_jsx_runtime606, CreateAccountSchema, Invite, LoginLink, InvalidView, CreateView, SuccessView, InviteSchema, validateDecodedInvite;
var init_invite = __esm({
  "src/routes/invite/invite.tsx"() {
    "use strict";
    import_zod141 = require("@hookform/resolvers/zod");
    import_ui395 = require("@medusajs/ui");
    import_framer_motion6 = require("framer-motion");
    import_i18next7 = __toESM(require("i18next"));
    import_react254 = require("react");
    import_react_hook_form123 = require("react-hook-form");
    import_react_i18next431 = require("react-i18next");
    import_react_jwt2 = require("react-jwt");
    import_react_router_dom213 = require("react-router-dom");
    z55 = __toESM(require("zod"));
    init_form2();
    init_avatar_box();
    init_auth();
    init_invites();
    init_is_fetch_error();
    import_jsx_runtime606 = require("react/jsx-runtime");
    CreateAccountSchema = z55.object({
      email: z55.string().email(),
      first_name: z55.string().min(1),
      last_name: z55.string().min(1),
      password: z55.string().min(1),
      repeat_password: z55.string().min(1)
    }).superRefine(({ password, repeat_password }, ctx) => {
      if (password !== repeat_password) {
        ctx.addIssue({
          code: z55.ZodIssueCode.custom,
          message: import_i18next7.default.t("invite.passwordMismatch"),
          path: ["repeat_password"]
        });
      }
    });
    Invite = () => {
      const [searchParams] = (0, import_react_router_dom213.useSearchParams)();
      const [success, setSuccess] = (0, import_react254.useState)(false);
      const token = searchParams.get("token");
      const invite = token ? (0, import_react_jwt2.decodeToken)(token) : null;
      const isValidInvite = invite && validateDecodedInvite(invite);
      return /* @__PURE__ */ (0, import_jsx_runtime606.jsx)("div", { className: "bg-ui-bg-subtle relative flex min-h-dvh w-dvw items-center justify-center p-4", children: /* @__PURE__ */ (0, import_jsx_runtime606.jsxs)("div", { className: "flex w-full max-w-[280px] flex-col items-center", children: [
        /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(AvatarBox, { checked: success }),
        /* @__PURE__ */ (0, import_jsx_runtime606.jsx)("div", { className: "max-h-[557px] w-full will-change-contents", children: isValidInvite ? /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(import_framer_motion6.AnimatePresence, { children: !success ? /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(
          import_framer_motion6.motion.div,
          {
            initial: false,
            animate: {
              height: "557px",
              y: 0
            },
            exit: {
              height: 0,
              y: 40
            },
            transition: {
              duration: 0.8,
              delay: 0.6,
              ease: [0, 0.71, 0.2, 1.01]
            },
            className: "w-full will-change-transform",
            children: /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(
              import_framer_motion6.motion.div,
              {
                initial: false,
                animate: {
                  opacity: 1,
                  scale: 1
                },
                exit: {
                  opacity: 0,
                  scale: 0.7
                },
                transition: {
                  duration: 0.6,
                  delay: 0,
                  ease: [0, 0.71, 0.2, 1.01]
                },
                children: /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(
                  CreateView,
                  {
                    onSuccess: () => setSuccess(true),
                    token,
                    invite
                  }
                )
              },
              "inner-create-account"
            )
          },
          "create-account"
        ) : /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(
          import_framer_motion6.motion.div,
          {
            initial: {
              opacity: 0,
              scale: 0.4
            },
            animate: {
              opacity: 1,
              scale: 1
            },
            transition: {
              duration: 1,
              delay: 0.6,
              ease: [0, 0.71, 0.2, 1.01]
            },
            className: "w-full",
            children: /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(SuccessView, {})
          },
          "success-view"
        ) }) : /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(InvalidView, {}) })
      ] }) });
    };
    LoginLink = () => {
      const { t: t4 } = (0, import_react_i18next431.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime606.jsxs)("div", { className: "flex w-full flex-col items-center", children: [
        /* @__PURE__ */ (0, import_jsx_runtime606.jsx)("div", { className: "my-6 h-px w-full border-b border-dotted" }),
        /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(
          import_react_router_dom213.Link,
          {
            to: "/login",
            className: "txt-small text-ui-fg-base transition-fg hover:text-ui-fg-base-hover focus-visible:text-ui-fg-base-hover font-medium outline-none",
            children: t4("invite.backToLogin")
          },
          "login-link"
        )
      ] });
    };
    InvalidView = () => {
      const { t: t4 } = (0, import_react_i18next431.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime606.jsxs)("div", { className: "flex flex-col items-center", children: [
        /* @__PURE__ */ (0, import_jsx_runtime606.jsxs)("div", { className: "flex flex-col items-center gap-y-1", children: [
          /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(import_ui395.Heading, { children: t4("invite.invalidTokenTitle") }),
          /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(import_ui395.Text, { size: "small", className: "text-ui-fg-subtle text-center", children: t4("invite.invalidTokenHint") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(LoginLink, {})
      ] });
    };
    CreateView = ({
      onSuccess,
      token,
      invite
    }) => {
      const { t: t4 } = (0, import_react_i18next431.useTranslation)();
      const [invalid, setInvalid] = (0, import_react254.useState)(false);
      const [params2] = (0, import_react_router_dom213.useSearchParams)();
      const isFirstRun = params2.get("first_run") === "true";
      const form = (0, import_react_hook_form123.useForm)({
        resolver: (0, import_zod141.zodResolver)(CreateAccountSchema),
        defaultValues: {
          email: isFirstRun ? "" : invite.email || "",
          first_name: "",
          last_name: "",
          password: "",
          repeat_password: ""
        }
      });
      const { mutateAsync: signUpEmailPass, isPending: isCreatingAuthUser } = useSignUpWithEmailPass();
      const { mutateAsync: acceptInvite, isPending: isAcceptingInvite } = useAcceptInvite(token);
      const handleSubmit = form.handleSubmit(async (data) => {
        try {
          const authToken = await signUpEmailPass({
            email: data.email,
            password: data.password
          });
          const invitePayload = {
            email: data.email,
            first_name: data.first_name,
            last_name: data.last_name
          };
          await acceptInvite({
            ...invitePayload,
            auth_token: authToken
          });
          import_ui395.toast.success(t4("invite.toast.accepted"));
          onSuccess();
        } catch (error) {
          if (isFetchError(error) && error.status === 400) {
            form.setError("root", {
              type: "manual",
              message: t4("invite.invalidInvite")
            });
            setInvalid(true);
            return;
          }
          form.setError("root", {
            type: "manual",
            message: t4("errors.serverError")
          });
        }
      });
      const serverError = form.formState.errors.root?.message;
      const validationError = form.formState.errors.email?.message || form.formState.errors.password?.message || form.formState.errors.repeat_password?.message || form.formState.errors.first_name?.message || form.formState.errors.last_name?.message;
      return /* @__PURE__ */ (0, import_jsx_runtime606.jsxs)("div", { className: "flex w-full flex-col items-center", children: [
        /* @__PURE__ */ (0, import_jsx_runtime606.jsxs)("div", { className: "mb-4 flex flex-col items-center", children: [
          /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(import_ui395.Heading, { children: t4("invite.title") }),
          /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(import_ui395.Text, { size: "small", className: "text-ui-fg-subtle text-center", children: t4("invite.hint") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(Form, { ...form, children: /* @__PURE__ */ (0, import_jsx_runtime606.jsxs)("form", { onSubmit: handleSubmit, className: "flex w-full flex-col gap-y-6", children: [
          /* @__PURE__ */ (0, import_jsx_runtime606.jsxs)("div", { className: "flex flex-col gap-y-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "email",
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(
                    import_ui395.Input,
                    {
                      autoComplete: "off",
                      ...field,
                      className: "bg-ui-bg-field-component",
                      placeholder: t4("fields.email")
                    }
                  ) }) });
                }
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "first_name",
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(
                    import_ui395.Input,
                    {
                      autoComplete: "given-name",
                      ...field,
                      className: "bg-ui-bg-field-component",
                      placeholder: t4("fields.firstName")
                    }
                  ) }) });
                }
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "last_name",
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(
                    import_ui395.Input,
                    {
                      autoComplete: "family-name",
                      ...field,
                      className: "bg-ui-bg-field-component",
                      placeholder: t4("fields.lastName")
                    }
                  ) }) });
                }
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "password",
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(
                    import_ui395.Input,
                    {
                      autoComplete: "new-password",
                      type: "password",
                      ...field,
                      className: "bg-ui-bg-field-component",
                      placeholder: t4("fields.password")
                    }
                  ) }) });
                }
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(
              Form.Field,
              {
                control: form.control,
                name: "repeat_password",
                render: ({ field }) => {
                  return /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(Form.Item, { children: /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(Form.Control, { children: /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(
                    import_ui395.Input,
                    {
                      autoComplete: "off",
                      type: "password",
                      ...field,
                      className: "bg-ui-bg-field-component",
                      placeholder: t4("fields.repeatPassword")
                    }
                  ) }) });
                }
              }
            ),
            validationError && /* @__PURE__ */ (0, import_jsx_runtime606.jsx)("div", { className: "mt-6 text-center", children: /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(import_ui395.Hint, { className: "inline-flex", variant: "error", children: validationError }) }),
            serverError && /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(
              import_ui395.Alert,
              {
                className: "bg-ui-bg-base items-center p-2",
                dismissible: true,
                variant: "error",
                children: serverError
              }
            )
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(
            import_ui395.Button,
            {
              className: "w-full",
              type: "submit",
              isLoading: isCreatingAuthUser || isAcceptingInvite,
              disabled: invalid,
              children: t4("invite.createAccount")
            }
          )
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(LoginLink, {})
      ] });
    };
    SuccessView = () => {
      const { t: t4 } = (0, import_react_i18next431.useTranslation)();
      return /* @__PURE__ */ (0, import_jsx_runtime606.jsxs)("div", { className: "flex w-full flex-col items-center gap-y-6", children: [
        /* @__PURE__ */ (0, import_jsx_runtime606.jsxs)("div", { className: "flex flex-col items-center gap-y-1", children: [
          /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(import_ui395.Heading, { children: t4("invite.successTitle") }),
          /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(import_ui395.Text, { size: "small", className: "text-ui-fg-subtle text-center", children: t4("invite.successHint") })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(import_ui395.Button, { variant: "secondary", asChild: true, className: "w-full", children: /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(import_react_router_dom213.Link, { to: "/login", replace: true, children: t4("invite.successAction") }) }),
        /* @__PURE__ */ (0, import_jsx_runtime606.jsx)(
          import_react_router_dom213.Link,
          {
            to: "/login",
            className: "txt-small text-ui-fg-base transition-fg hover:text-ui-fg-base-hover focus-visible:text-ui-fg-base-hover mt-3 font-medium outline-none",
            children: t4("invite.backToLogin")
          },
          "login-link"
        )
      ] });
    };
    InviteSchema = z55.object({
      id: z55.string(),
      jti: z55.string(),
      exp: z55.number(),
      iat: z55.number()
    });
    validateDecodedInvite = (decoded) => {
      return InviteSchema.safeParse(decoded).success;
    };
  }
});

// src/routes/invite/index.ts
var invite_exports = {};
__export(invite_exports, {
  Component: () => Invite
});
var init_invite2 = __esm({
  "src/routes/invite/index.ts"() {
    "use strict";
    init_invite();
  }
});

// src/routes/no-match/no-match.tsx
var import_icons162, import_ui396, import_react_i18next432, import_react_router_dom214, import_jsx_runtime607, NoMatch;
var init_no_match = __esm({
  "src/routes/no-match/no-match.tsx"() {
    "use strict";
    import_icons162 = require("@medusajs/icons");
    import_ui396 = require("@medusajs/ui");
    import_react_i18next432 = require("react-i18next");
    import_react_router_dom214 = require("react-router-dom");
    import_jsx_runtime607 = require("react/jsx-runtime");
    NoMatch = () => {
      const { t: t4 } = (0, import_react_i18next432.useTranslation)();
      const title = t4("errorBoundary.notFoundTitle");
      const message = t4("errorBoundary.noMatchMessage");
      return /* @__PURE__ */ (0, import_jsx_runtime607.jsx)("div", { className: "flex size-full min-h-screen items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime607.jsxs)("div", { className: "flex flex-col items-center gap-y-6", children: [
        /* @__PURE__ */ (0, import_jsx_runtime607.jsxs)("div", { className: "text-ui-fg-subtle flex flex-col items-center gap-y-3", children: [
          /* @__PURE__ */ (0, import_jsx_runtime607.jsx)(import_icons162.ExclamationCircle, {}),
          /* @__PURE__ */ (0, import_jsx_runtime607.jsxs)("div", { className: "flex flex-col items-center justify-center gap-y-1", children: [
            /* @__PURE__ */ (0, import_jsx_runtime607.jsx)(import_ui396.Text, { size: "small", leading: "compact", weight: "plus", children: title }),
            /* @__PURE__ */ (0, import_jsx_runtime607.jsx)(
              import_ui396.Text,
              {
                size: "small",
                className: "text-ui-fg-muted text-balance text-center",
                children: message
              }
            )
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime607.jsx)(import_ui396.Button, { asChild: true, size: "small", variant: "secondary", children: /* @__PURE__ */ (0, import_jsx_runtime607.jsx)(import_react_router_dom214.Link, { to: "/", children: t4("errorBoundary.backToDashboard") }) })
      ] }) });
    };
  }
});

// src/routes/no-match/index.ts
var no_match_exports = {};
__export(no_match_exports, {
  Component: () => NoMatch
});
var init_no_match2 = __esm({
  "src/routes/no-match/index.ts"() {
    "use strict";
    init_no_match();
  }
});

// src/app.tsx
var app_exports = {};
__export(app_exports, {
  default: () => app_default
});
module.exports = __toCommonJS(app_exports);
init_extensions();

// src/providers/providers.tsx
var import_ui6 = require("@medusajs/ui");
var import_react_query2 = require("@tanstack/react-query");
var import_react_helmet_async = require("react-helmet-async");
init_i18n2();
init_extensions();
init_query_client();

// src/providers/i18n-provider/i18n-provider.tsx
var import_ui5 = require("@medusajs/ui");
var import_react_i18next5 = require("react-i18next");
init_languages();
var import_jsx_runtime8 = require("react/jsx-runtime");
var I18nProvider = ({ children }) => {
  const { i18n: i18n4 } = (0, import_react_i18next5.useTranslation)();
  const locale = languages.find((lan) => lan.code === i18n4.language)?.code || languages[0].code;
  return /* @__PURE__ */ (0, import_jsx_runtime8.jsx)(import_ui5.I18nProvider, { locale, children });
};

// src/providers/theme-provider/theme-provider.tsx
var import_react6 = require("react");

// src/providers/theme-provider/theme-context.tsx
var import_react5 = require("react");
var ThemeContext = (0, import_react5.createContext)(null);

// src/providers/theme-provider/theme-provider.tsx
var import_jsx_runtime9 = require("react/jsx-runtime");
var THEME_KEY = "medusa_admin_theme";
function getDefaultValue() {
  const persisted = localStorage?.getItem(THEME_KEY);
  if (persisted) {
    return persisted;
  }
  return "system";
}
function getThemeValue(selected) {
  if (selected === "system") {
    if (window !== void 0) {
      return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
    }
    return "light";
  }
  return selected;
}
var ThemeProvider = ({ children }) => {
  const [state, setState] = (0, import_react6.useState)(getDefaultValue());
  const [value, setValue] = (0, import_react6.useState)(getThemeValue(state));
  const setTheme = (theme) => {
    localStorage.setItem(THEME_KEY, theme);
    const themeValue = getThemeValue(theme);
    setState(theme);
    setValue(themeValue);
  };
  (0, import_react6.useEffect)(() => {
    const html = document.querySelector("html");
    if (html) {
      const css = document.createElement("style");
      css.appendChild(
        document.createTextNode(
          `* {
            -webkit-transition: none !important;
            -moz-transition: none !important;
            -o-transition: none !important;
            -ms-transition: none !important;
            transition: none !important;
          }`
        )
      );
      document.head.appendChild(css);
      html.classList.remove(value === "light" ? "dark" : "light");
      html.classList.add(value);
      html.style.colorScheme = value;
      window.getComputedStyle(css).opacity;
      document.head.removeChild(css);
    }
  }, [value]);
  return /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(ThemeContext.Provider, { value: { theme: state, setTheme }, children });
};

// src/providers/theme-provider/use-theme.tsx
var import_react7 = require("react");
var useTheme = () => {
  const context = (0, import_react7.useContext)(ThemeContext);
  if (!context) {
    throw new Error("useTheme must be used within a ThemeProvider");
  }
  return context;
};

// src/providers/providers.tsx
var import_jsx_runtime10 = require("react/jsx-runtime");
var Providers = ({ api, children }) => {
  return /* @__PURE__ */ (0, import_jsx_runtime10.jsx)(import_ui6.TooltipProvider, { children: /* @__PURE__ */ (0, import_jsx_runtime10.jsx)(DashboardExtensionProvider, { api, children: /* @__PURE__ */ (0, import_jsx_runtime10.jsx)(import_react_helmet_async.HelmetProvider, { children: /* @__PURE__ */ (0, import_jsx_runtime10.jsx)(import_react_query2.QueryClientProvider, { client: queryClient, children: /* @__PURE__ */ (0, import_jsx_runtime10.jsxs)(ThemeProvider, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime10.jsx)(I18n, {}),
    /* @__PURE__ */ (0, import_jsx_runtime10.jsx)(I18nProvider, { children }),
    /* @__PURE__ */ (0, import_jsx_runtime10.jsx)(import_ui6.Toaster, {})
  ] }) }) }) }) });
};

// src/providers/router-provider/router-provider.tsx
var import_react_router_dom216 = require("react-router-dom");

// src/providers/router-provider/route-map.tsx
var import_react_router_dom215 = require("react-router-dom");
var import_i18next8 = require("i18next");

// src/components/authentication/protected-route/protected-route.tsx
var import_icons5 = require("@medusajs/icons");
var import_react_router_dom5 = require("react-router-dom");
init_users();

// src/providers/search-provider/search-provider.tsx
var import_react17 = require("react");

// src/components/search/search.tsx
var import_ui9 = require("@medusajs/ui");
init_dist16();
var import_cmdk = require("cmdk");
var import_react12 = require("react");
var import_react_i18next8 = require("react-i18next");
var import_react_router_dom3 = require("react-router-dom");
var import_icons4 = require("@medusajs/icons");
var import_match_sorter = require("match-sorter");
init_skeleton2();
init_thumbnail2();

// src/components/search/constants.ts
var SEARCH_AREAS = [
  "all",
  "order",
  "product",
  "productVariant",
  "collection",
  "category",
  "inventory",
  "customer",
  "customerGroup",
  "promotion",
  "campaign",
  "priceList",
  "user",
  "region",
  "taxRegion",
  "returnReason",
  "salesChannel",
  "productType",
  "productTag",
  "location",
  "shippingProfile",
  "publishableApiKey",
  "secretApiKey",
  "command",
  "navigation"
];
var DEFAULT_SEARCH_LIMIT = 3;
var SEARCH_LIMIT_INCREMENT = 20;

// src/components/search/use-search-results.tsx
var import_react_query40 = require("@tanstack/react-query");
var import_react11 = require("react");
var import_react_i18next7 = require("react-i18next");
init_api();
init_return_reasons();

// src/providers/keybind-provider/hooks.tsx
var import_debounce = __toESM(require("lodash/debounce"));
var import_react10 = require("react");
var import_react_i18next6 = require("react-i18next");
var import_react_router_dom2 = require("react-router-dom");
init_auth();
init_query_client();

// src/providers/keybind-provider/keybind-context.tsx
var import_react9 = require("react");
var KeybindContext = (0, import_react9.createContext)(null);

// src/providers/keybind-provider/utils.ts
var findFirstPlatformMatch = (keys) => {
  const match = Object.entries(keys).filter(
    ([, value]) => value.length > 0
  )[0] ?? [];
  return match.length ? {
    platform: match[0],
    keys: match[1]
  } : null;
};
var getShortcutKeys = (shortcut) => {
  const platform2 = "Mac";
  const keys = shortcut.keys[platform2];
  if (!keys) {
    const defaultPlatform = findFirstPlatformMatch(shortcut.keys);
    console.warn(
      `No keys found for platform "${platform2}" in "${shortcut.label}" ${defaultPlatform ? `using keys for platform "${defaultPlatform.platform}"` : ""}`
    );
    return defaultPlatform ? defaultPlatform.keys : [];
  }
  return keys;
};
var keysMatch = (keys1, keys2) => {
  return keys1.length === keys2.length && keys1.every(
    (key, index2) => key.toLowerCase() === keys2[index2].toLowerCase()
  );
};
var findShortcutIndex = (shortcuts, keys) => {
  if (!keys.length) {
    return -1;
  }
  let index2 = 0;
  for (const shortcut of shortcuts) {
    const shortcutKeys = getShortcutKeys(shortcut);
    if (keysMatch(shortcutKeys, keys)) {
      return index2;
    }
    index2++;
  }
  return -1;
};
var findShortcut = (shortcuts, keys) => {
  const shortcutIndex = findShortcutIndex(shortcuts, keys);
  return shortcutIndex > -1 ? shortcuts[shortcutIndex] : null;
};
var getShortcutWithDefaultValues = (shortcut, platform2 = "Mac") => {
  const platforms = ["Mac", "Windows", "Linux"];
  const defaultKeys = Object.values(shortcut.keys)[0] ?? shortcut.keys[platform2];
  const keys = platforms.reduce((acc, curr) => {
    return {
      ...acc,
      [curr]: shortcut.keys[curr] ?? defaultKeys
    };
  }, {});
  return {
    ...shortcut,
    keys,
    _defaultKeys: shortcut.keys
  };
};

// src/providers/keybind-provider/hooks.tsx
var useShortcuts = ({
  shortcuts = [],
  debounce: debounce5
}) => {
  const [keys, setKeys] = (0, import_react10.useState)([]);
  const navigate = (0, import_react_router_dom2.useNavigate)();
  const removeKeys = (0, import_react10.useCallback)(
    (0, import_debounce.default)(() => setKeys([]), debounce5),
    []
  );
  const invokeShortcut = (0, import_react10.useCallback)(
    (0, import_debounce.default)((shortcut) => {
      if (shortcut && shortcut.callback) {
        shortcut.callback();
        setKeys([]);
        return;
      }
      if (shortcut && shortcut.to) {
        navigate(shortcut.to);
        setKeys([]);
        return;
      }
    }, debounce5 / 2),
    []
  );
  (0, import_react10.useEffect)(() => {
    if (keys.length > 0 && shortcuts.length > 0) {
      const shortcut = findShortcut(shortcuts, keys);
      invokeShortcut(shortcut);
    }
    return () => invokeShortcut.cancel();
  }, [keys, shortcuts, invokeShortcut]);
  (0, import_react10.useEffect)(() => {
    const listener = (event) => {
      const target = event.target;
      if (target.tagName === "INPUT" || target.tagName === "TEXTAREA" || target.contentEditable === "true") {
        removeKeys();
        return;
      }
      setKeys((oldKeys) => [...oldKeys, event.key]);
      removeKeys();
    };
    window.addEventListener("keydown", listener);
    return () => {
      window.removeEventListener("keydown", listener);
    };
  }, [removeKeys]);
};
var useGlobalShortcuts = () => {
  const { t: t4 } = (0, import_react_i18next6.useTranslation)();
  const navigate = (0, import_react_router_dom2.useNavigate)();
  const { mutateAsync } = useLogout();
  const handleLogout = async () => {
    await mutateAsync(void 0, {
      onSuccess: () => {
        queryClient.clear();
        navigate("/login");
      }
    });
  };
  const globalShortcuts = [
    // Pages
    {
      keys: {
        Mac: ["G", "O"]
      },
      label: t4("app.keyboardShortcuts.navigation.goToOrders"),
      type: "pageShortcut",
      to: "/orders"
    },
    {
      keys: {
        Mac: ["G", "P"]
      },
      label: t4("app.keyboardShortcuts.navigation.goToProducts"),
      type: "pageShortcut",
      to: "/products"
    },
    {
      keys: {
        Mac: ["G", "C"]
      },
      label: t4("app.keyboardShortcuts.navigation.goToCollections"),
      type: "pageShortcut",
      to: "/collections"
    },
    {
      keys: {
        Mac: ["G", "A"]
      },
      label: t4("app.keyboardShortcuts.navigation.goToCategories"),
      type: "pageShortcut",
      to: "/categories"
    },
    {
      keys: {
        Mac: ["G", "U"]
      },
      label: t4("app.keyboardShortcuts.navigation.goToCustomers"),
      type: "pageShortcut",
      to: "/customers"
    },
    {
      keys: {
        Mac: ["G", "G"]
      },
      label: t4("app.keyboardShortcuts.navigation.goToCustomerGroups"),
      type: "pageShortcut",
      to: "/customer-groups"
    },
    {
      keys: {
        Mac: ["G", "I"]
      },
      label: t4("app.keyboardShortcuts.navigation.goToInventory"),
      type: "pageShortcut",
      to: "/inventory"
    },
    {
      keys: {
        Mac: ["G", "R"]
      },
      label: t4("app.keyboardShortcuts.navigation.goToReservations"),
      type: "pageShortcut",
      to: "/reservations"
    },
    {
      keys: {
        Mac: ["G", "L"]
      },
      label: t4("app.keyboardShortcuts.navigation.goToPriceLists"),
      type: "pageShortcut",
      to: "/price-lists"
    },
    {
      keys: {
        Mac: ["G", "M"]
      },
      label: t4("app.keyboardShortcuts.navigation.goToPromotions"),
      type: "pageShortcut",
      to: "/promotions"
    },
    {
      keys: {
        Mac: ["G", "K"]
      },
      label: t4("app.keyboardShortcuts.navigation.goToCampaigns"),
      type: "pageShortcut",
      to: "/campaigns"
    },
    // Settings
    {
      keys: {
        Mac: ["G", ","]
      },
      label: t4("app.keyboardShortcuts.settings.goToSettings"),
      type: "settingShortcut",
      to: "/settings"
    },
    {
      keys: {
        Mac: ["G", ",", "S"]
      },
      label: t4("app.keyboardShortcuts.settings.goToStore"),
      type: "settingShortcut",
      to: "/settings/store"
    },
    {
      keys: {
        Mac: ["G", ",", "U"]
      },
      label: t4("app.keyboardShortcuts.settings.goToUsers"),
      type: "settingShortcut",
      to: "/settings/users"
    },
    {
      keys: {
        Mac: ["G", ",", "R"]
      },
      label: t4("app.keyboardShortcuts.settings.goToRegions"),
      type: "settingShortcut",
      to: "/settings/regions"
    },
    {
      keys: {
        Mac: ["G", ",", "T"]
      },
      label: t4("app.keyboardShortcuts.settings.goToTaxRegions"),
      type: "settingShortcut",
      to: "/settings/tax-regions"
    },
    {
      keys: {
        Mac: ["G", ",", "A"]
      },
      label: t4("app.keyboardShortcuts.settings.goToSalesChannels"),
      type: "settingShortcut",
      to: "/settings/sales-channels"
    },
    {
      keys: {
        Mac: ["G", ",", "P"]
      },
      label: t4("app.keyboardShortcuts.settings.goToProductTypes"),
      type: "settingShortcut",
      to: "/settings/product-types"
    },
    {
      keys: {
        Mac: ["G", ",", "L"]
      },
      label: t4("app.keyboardShortcuts.settings.goToLocations"),
      type: "settingShortcut",
      to: "/settings/locations"
    },
    {
      keys: {
        Mac: ["G", ",", "M"]
      },
      label: t4("app.keyboardShortcuts.settings.goToReturnReasons"),
      type: "settingShortcut",
      to: "/settings/return-reasons"
    },
    {
      keys: {
        Mac: ["G", ",", "J"]
      },
      label: t4("app.keyboardShortcuts.settings.goToPublishableApiKeys"),
      type: "settingShortcut",
      to: "/settings/publishable-api-keys"
    },
    {
      keys: {
        Mac: ["G", ",", "K"]
      },
      label: t4("app.keyboardShortcuts.settings.goToSecretApiKeys"),
      type: "settingShortcut",
      to: "/settings/secret-api-keys"
    },
    {
      keys: {
        Mac: ["G", ",", "W"]
      },
      label: t4("app.keyboardShortcuts.settings.goToWorkflows"),
      type: "settingShortcut",
      to: "/settings/workflows"
    },
    {
      keys: {
        Mac: ["G", ",", "M"]
      },
      label: t4("app.keyboardShortcuts.settings.goToProfile"),
      type: "settingShortcut",
      to: "/settings/profile"
    },
    // Commands
    {
      keys: {
        Mac: ["B", "Y", "E"]
      },
      label: t4("actions.logout"),
      type: "commandShortcut",
      callback: () => handleLogout()
    }
  ];
  return globalShortcuts;
};

// src/components/search/use-search-results.tsx
var useSearchResults = ({
  q,
  limit,
  area = "all"
}) => {
  const staticResults = useStaticSearchResults(area);
  const { dynamicResults, isFetching } = useDynamicSearchResults(area, limit, q);
  return {
    staticResults,
    dynamicResults,
    isFetching
  };
};
var useStaticSearchResults = (currentArea) => {
  const globalCommands = useGlobalShortcuts();
  const results = (0, import_react11.useMemo)(() => {
    const groups = /* @__PURE__ */ new Map();
    globalCommands.forEach((command) => {
      const group = groups.get(command.type) || [];
      group.push(command);
      groups.set(command.type, group);
    });
    let filteredGroups;
    switch (currentArea) {
      case "all":
        filteredGroups = Array.from(groups);
        break;
      case "navigation":
        filteredGroups = Array.from(groups).filter(
          ([type]) => type === "pageShortcut" || type === "settingShortcut"
        );
        break;
      case "command":
        filteredGroups = Array.from(groups).filter(
          ([type]) => type === "commandShortcut"
        );
        break;
      default:
        filteredGroups = [];
    }
    return filteredGroups.map(([title, items]) => ({
      title,
      items
    }));
  }, [globalCommands, currentArea]);
  return results;
};
var useDynamicSearchResults = (currentArea, limit, q) => {
  const { t: t4 } = (0, import_react_i18next7.useTranslation)();
  const debouncedSearch = useDebouncedSearch(q, 300);
  const orderResponse = useOrders(
    {
      q: debouncedSearch?.replace(/^#/, ""),
      // Since we display the ID with a # prefix, it's natural for the user to include it in the search. This will however cause no results to be returned, so we remove the # prefix from the search query.
      limit,
      fields: "id,display_id,email"
    },
    {
      enabled: isAreaEnabled(currentArea, "order"),
      placeholderData: import_react_query40.keepPreviousData
    }
  );
  const productResponse = useProducts(
    {
      q: debouncedSearch,
      limit,
      fields: "id,title,thumbnail"
    },
    {
      enabled: isAreaEnabled(currentArea, "product"),
      placeholderData: import_react_query40.keepPreviousData
    }
  );
  const productVariantResponse = useVariants(
    {
      q: debouncedSearch,
      limit,
      fields: "id,title,sku"
    },
    {
      enabled: isAreaEnabled(currentArea, "productVariant"),
      placeholderData: import_react_query40.keepPreviousData
    }
  );
  const categoryResponse = useProductCategories(
    {
      // TODO: Remove the OR condition once the list endpoint does not throw when q equals an empty string
      q: debouncedSearch || void 0,
      limit,
      fields: "id,name"
    },
    {
      enabled: isAreaEnabled(currentArea, "category"),
      placeholderData: import_react_query40.keepPreviousData
    }
  );
  const collectionResponse = useCollections(
    {
      q: debouncedSearch,
      limit,
      fields: "id,title"
    },
    {
      enabled: isAreaEnabled(currentArea, "collection"),
      placeholderData: import_react_query40.keepPreviousData
    }
  );
  const customerResponse = useCustomers(
    {
      q: debouncedSearch,
      limit,
      fields: "id,email,first_name,last_name"
    },
    {
      enabled: isAreaEnabled(currentArea, "customer"),
      placeholderData: import_react_query40.keepPreviousData
    }
  );
  const customerGroupResponse = useCustomerGroups(
    {
      q: debouncedSearch,
      limit,
      fields: "id,name"
    },
    {
      enabled: isAreaEnabled(currentArea, "customerGroup"),
      placeholderData: import_react_query40.keepPreviousData
    }
  );
  const inventoryResponse = useInventoryItems(
    {
      q: debouncedSearch,
      limit,
      fields: "id,title,sku"
    },
    {
      enabled: isAreaEnabled(currentArea, "inventory"),
      placeholderData: import_react_query40.keepPreviousData
    }
  );
  const promotionResponse = usePromotions(
    {
      q: debouncedSearch,
      limit,
      fields: "id,code"
    },
    {
      enabled: isAreaEnabled(currentArea, "promotion"),
      placeholderData: import_react_query40.keepPreviousData
    }
  );
  const campaignResponse = useCampaigns(
    {
      q: debouncedSearch,
      limit,
      fields: "id,name"
    },
    {
      enabled: isAreaEnabled(currentArea, "campaign"),
      placeholderData: import_react_query40.keepPreviousData
    }
  );
  const priceListResponse = usePriceLists(
    {
      q: debouncedSearch,
      limit,
      fields: "id,title"
    },
    {
      enabled: isAreaEnabled(currentArea, "priceList"),
      placeholderData: import_react_query40.keepPreviousData
    }
  );
  const userResponse = useUsers(
    {
      q: debouncedSearch,
      limit,
      fields: "id,email,first_name,last_name"
    },
    {
      enabled: isAreaEnabled(currentArea, "user"),
      placeholderData: import_react_query40.keepPreviousData
    }
  );
  const regionResponse = useRegions(
    {
      q: debouncedSearch,
      limit,
      fields: "id,name"
    },
    {
      enabled: isAreaEnabled(currentArea, "region"),
      placeholderData: import_react_query40.keepPreviousData
    }
  );
  const taxRegionResponse = useTaxRegions(
    {
      q: debouncedSearch,
      limit,
      fields: "id,country_code,province_code"
    },
    {
      enabled: isAreaEnabled(currentArea, "taxRegion"),
      placeholderData: import_react_query40.keepPreviousData
    }
  );
  const returnReasonResponse = useReturnReasons(
    {
      q: debouncedSearch,
      limit,
      fields: "id,label,value"
    },
    {
      enabled: isAreaEnabled(currentArea, "returnReason"),
      placeholderData: import_react_query40.keepPreviousData
    }
  );
  const salesChannelResponse = useSalesChannels(
    {
      q: debouncedSearch,
      limit,
      fields: "id,name"
    },
    {
      enabled: isAreaEnabled(currentArea, "salesChannel"),
      placeholderData: import_react_query40.keepPreviousData
    }
  );
  const productTypeResponse = useProductTypes(
    {
      q: debouncedSearch,
      limit,
      fields: "id,value"
    },
    {
      enabled: isAreaEnabled(currentArea, "productType"),
      placeholderData: import_react_query40.keepPreviousData
    }
  );
  const productTagResponse = useProductTags(
    {
      q: debouncedSearch,
      limit,
      fields: "id,value"
    },
    {
      enabled: isAreaEnabled(currentArea, "productTag"),
      placeholderData: import_react_query40.keepPreviousData
    }
  );
  const locationResponse = useStockLocations(
    {
      q: debouncedSearch,
      limit,
      fields: "id,name"
    },
    {
      enabled: isAreaEnabled(currentArea, "location"),
      placeholderData: import_react_query40.keepPreviousData
    }
  );
  const shippingProfileResponse = useShippingProfiles(
    {
      q: debouncedSearch,
      limit,
      fields: "id,name"
    },
    {
      enabled: isAreaEnabled(currentArea, "shippingProfile"),
      placeholderData: import_react_query40.keepPreviousData
    }
  );
  const publishableApiKeyResponse = useApiKeys(
    {
      q: debouncedSearch,
      limit,
      fields: "id,title,redacted",
      type: "publishable"
    },
    {
      enabled: isAreaEnabled(currentArea, "publishableApiKey"),
      placeholderData: import_react_query40.keepPreviousData
    }
  );
  const secretApiKeyResponse = useApiKeys(
    {
      q: debouncedSearch,
      limit,
      fields: "id,title,redacted",
      type: "secret"
    },
    {
      enabled: isAreaEnabled(currentArea, "secretApiKey"),
      placeholderData: import_react_query40.keepPreviousData
    }
  );
  const responseMap = (0, import_react11.useMemo)(
    () => ({
      order: orderResponse,
      product: productResponse,
      productVariant: productVariantResponse,
      collection: collectionResponse,
      category: categoryResponse,
      inventory: inventoryResponse,
      customer: customerResponse,
      customerGroup: customerGroupResponse,
      promotion: promotionResponse,
      campaign: campaignResponse,
      priceList: priceListResponse,
      user: userResponse,
      region: regionResponse,
      taxRegion: taxRegionResponse,
      returnReason: returnReasonResponse,
      salesChannel: salesChannelResponse,
      productType: productTypeResponse,
      productTag: productTagResponse,
      location: locationResponse,
      shippingProfile: shippingProfileResponse,
      publishableApiKey: publishableApiKeyResponse,
      secretApiKey: secretApiKeyResponse
    }),
    [
      orderResponse,
      productResponse,
      productVariantResponse,
      inventoryResponse,
      categoryResponse,
      collectionResponse,
      customerResponse,
      customerGroupResponse,
      promotionResponse,
      campaignResponse,
      priceListResponse,
      userResponse,
      regionResponse,
      taxRegionResponse,
      returnReasonResponse,
      salesChannelResponse,
      productTypeResponse,
      productTagResponse,
      locationResponse,
      shippingProfileResponse,
      publishableApiKeyResponse,
      secretApiKeyResponse
    ]
  );
  const results = (0, import_react11.useMemo)(() => {
    const groups = Object.entries(responseMap).map(([key, response]) => {
      const area = key;
      if (isAreaEnabled(currentArea, area) || currentArea === "all") {
        return transformDynamicSearchResults(area, limit, t4, response);
      }
      return null;
    }).filter(Boolean);
    return groups;
  }, [responseMap, currentArea, limit, t4]);
  const isAreaFetching = (0, import_react11.useCallback)(
    (area) => {
      if (area === "all") {
        return Object.values(responseMap).some(
          (response) => response.isFetching
        );
      }
      return isAreaEnabled(currentArea, area) && responseMap[area]?.isFetching;
    },
    [currentArea, responseMap]
  );
  const isFetching = (0, import_react11.useMemo)(() => {
    return isAreaFetching(currentArea);
  }, [currentArea, isAreaFetching]);
  const dynamicResults = q ? results.filter(
    (group) => !!group && group.items.length > 0
  ) : [];
  return {
    dynamicResults,
    isFetching
  };
};
var useDebouncedSearch = (value, delay) => {
  const [debouncedValue, setDebouncedValue] = (0, import_react11.useState)(value);
  (0, import_react11.useEffect)(() => {
    const handler = setTimeout(() => {
      setDebouncedValue(value);
    }, delay);
    return () => {
      clearTimeout(handler);
    };
  }, [value, delay]);
  return debouncedValue;
};
function isAreaEnabled(area, currentArea) {
  if (area === "all") {
    return true;
  }
  if (area === currentArea) {
    return true;
  }
  return false;
}
var transformMap = {
  order: {
    dataKey: "orders",
    transform: (order) => ({
      id: order.id,
      title: `#${order.display_id}`,
      subtitle: order.email ?? void 0,
      to: `/orders/${order.id}`,
      value: `order:${order.id}`
    })
  },
  product: {
    dataKey: "products",
    transform: (product) => ({
      id: product.id,
      title: product.title,
      to: `/products/${product.id}`,
      thumbnail: product.thumbnail ?? void 0,
      value: `product:${product.id}`
    })
  },
  productVariant: {
    dataKey: "variants",
    transform: (variant) => ({
      id: variant.id,
      title: variant.title,
      subtitle: variant.sku ?? void 0,
      to: `/products/${variant.product_id}/variants/${variant.id}`,
      value: `variant:${variant.id}`
    })
  },
  category: {
    dataKey: "product_categories",
    transform: (category) => ({
      id: category.id,
      title: category.name,
      to: `/categories/${category.id}`,
      value: `category:${category.id}`
    })
  },
  inventory: {
    dataKey: "inventory_items",
    transform: (inventory) => ({
      id: inventory.id,
      title: inventory.title ?? "",
      subtitle: inventory.sku ?? void 0,
      to: `/inventory/${inventory.id}`,
      value: `inventory:${inventory.id}`
    })
  },
  customer: {
    dataKey: "customers",
    transform: (customer) => {
      const name = [customer.first_name, customer.last_name].filter(Boolean).join(" ");
      return {
        id: customer.id,
        title: name || customer.email,
        subtitle: name ? customer.email : void 0,
        to: `/customers/${customer.id}`,
        value: `customer:${customer.id}`
      };
    }
  },
  customerGroup: {
    dataKey: "customer_groups",
    transform: (customerGroup) => ({
      id: customerGroup.id,
      title: customerGroup.name,
      to: `/customer-groups/${customerGroup.id}`,
      value: `customerGroup:${customerGroup.id}`
    })
  },
  collection: {
    dataKey: "collections",
    transform: (collection) => ({
      id: collection.id,
      title: collection.title,
      to: `/collections/${collection.id}`,
      value: `collection:${collection.id}`
    })
  },
  promotion: {
    dataKey: "promotions",
    transform: (promotion) => ({
      id: promotion.id,
      title: promotion.code,
      to: `/promotions/${promotion.id}`,
      value: `promotion:${promotion.id}`
    })
  },
  campaign: {
    dataKey: "campaigns",
    transform: (campaign) => ({
      id: campaign.id,
      title: campaign.name,
      to: `/campaigns/${campaign.id}`,
      value: `campaign:${campaign.id}`
    })
  },
  priceList: {
    dataKey: "price_lists",
    transform: (priceList) => ({
      id: priceList.id,
      title: priceList.title,
      to: `/price-lists/${priceList.id}`,
      value: `priceList:${priceList.id}`
    })
  },
  user: {
    dataKey: "users",
    transform: (user) => ({
      id: user.id,
      title: `${user.first_name} ${user.last_name}`,
      subtitle: user.email,
      to: `/users/${user.id}`,
      value: `user:${user.id}`
    })
  },
  region: {
    dataKey: "regions",
    transform: (region) => ({
      id: region.id,
      title: region.name,
      to: `/regions/${region.id}`,
      value: `region:${region.id}`
    })
  },
  taxRegion: {
    dataKey: "tax_regions",
    transform: (taxRegion) => ({
      id: taxRegion.id,
      title: taxRegion.province_code?.toUpperCase() ?? taxRegion.country_code.toUpperCase(),
      subtitle: taxRegion.province_code ? taxRegion.country_code : void 0,
      to: `/tax-regions/${taxRegion.id}`,
      value: `taxRegion:${taxRegion.id}`
    })
  },
  returnReason: {
    dataKey: "return_reasons",
    transform: (returnReason) => ({
      id: returnReason.id,
      title: returnReason.label,
      subtitle: returnReason.value,
      to: `/return-reasons/${returnReason.id}/edit`,
      value: `returnReason:${returnReason.id}`
    })
  },
  salesChannel: {
    dataKey: "sales_channels",
    transform: (salesChannel) => ({
      id: salesChannel.id,
      title: salesChannel.name,
      to: `/sales-channels/${salesChannel.id}`,
      value: `salesChannel:${salesChannel.id}`
    })
  },
  productType: {
    dataKey: "product_types",
    transform: (productType) => ({
      id: productType.id,
      title: productType.value,
      to: `/product-types/${productType.id}`,
      value: `productType:${productType.id}`
    })
  },
  productTag: {
    dataKey: "product_tags",
    transform: (productTag) => ({
      id: productTag.id,
      title: productTag.value,
      to: `/product-tags/${productTag.id}`,
      value: `productTag:${productTag.id}`
    })
  },
  location: {
    dataKey: "stock_locations",
    transform: (location) => ({
      id: location.id,
      title: location.name,
      to: `/locations/${location.id}`,
      value: `location:${location.id}`
    })
  },
  shippingProfile: {
    dataKey: "shipping_profiles",
    transform: (shippingProfile) => ({
      id: shippingProfile.id,
      title: shippingProfile.name,
      to: `/shipping-profiles/${shippingProfile.id}`,
      value: `shippingProfile:${shippingProfile.id}`
    })
  },
  publishableApiKey: {
    dataKey: "api_keys",
    transform: (apiKey) => ({
      id: apiKey.id,
      title: apiKey.title,
      subtitle: apiKey.redacted,
      to: `/publishable-api-keys/${apiKey.id}`,
      value: `publishableApiKey:${apiKey.id}`
    })
  },
  secretApiKey: {
    dataKey: "api_keys",
    transform: (apiKey) => ({
      id: apiKey.id,
      title: apiKey.title,
      subtitle: apiKey.redacted,
      to: `/secret-api-keys/${apiKey.id}`,
      value: `secretApiKey:${apiKey.id}`
    })
  }
};
function transformDynamicSearchResults(type, limit, t4, response) {
  if (!response || !transformMap[type]) {
    return void 0;
  }
  const { dataKey, transform } = transformMap[type];
  const data = response[dataKey];
  if (!data || !Array.isArray(data)) {
    return void 0;
  }
  return {
    title: t4(`app.search.groups.${type}`),
    area: type,
    hasMore: response.count > limit,
    count: response.count,
    items: data.map(transform)
  };
}

// src/components/search/search.tsx
var import_jsx_runtime19 = require("react/jsx-runtime");
var Search = () => {
  const [area, setArea] = (0, import_react12.useState)("all");
  const [search, setSearch] = (0, import_react12.useState)("");
  const [limit, setLimit] = (0, import_react12.useState)(DEFAULT_SEARCH_LIMIT);
  const { open, onOpenChange } = useSearch();
  const location = (0, import_react_router_dom3.useLocation)();
  const { t: t4 } = (0, import_react_i18next8.useTranslation)();
  const navigate = (0, import_react_router_dom3.useNavigate)();
  const inputRef = (0, import_react12.useRef)(null);
  const listRef = (0, import_react12.useRef)(null);
  const { staticResults, dynamicResults, isFetching } = useSearchResults({
    area,
    limit,
    q: search
  });
  const handleReset = (0, import_react12.useCallback)(() => {
    setArea("all");
    setSearch("");
    setLimit(DEFAULT_SEARCH_LIMIT);
  }, [setLimit]);
  const handleBack = () => {
    handleReset();
    inputRef.current?.focus();
  };
  const handleOpenChange = (0, import_react12.useCallback)(
    (open2) => {
      if (!open2) {
        handleReset();
      }
      onOpenChange(open2);
    },
    [onOpenChange, handleReset]
  );
  (0, import_react12.useEffect)(() => {
    handleOpenChange(false);
  }, [location.pathname, handleOpenChange]);
  const handleSelect = (item) => {
    handleOpenChange(false);
    if (item.to) {
      navigate(item.to);
      return;
    }
    if (item.callback) {
      item.callback();
      return;
    }
  };
  const handleShowMore = (area2) => {
    if (area2 === "all") {
      setLimit(DEFAULT_SEARCH_LIMIT);
    } else {
      setLimit(SEARCH_LIMIT_INCREMENT);
    }
    setArea(area2);
    inputRef.current?.focus();
  };
  const handleLoadMore = () => {
    setLimit((l) => l + SEARCH_LIMIT_INCREMENT);
  };
  const filteredStaticResults = (0, import_react12.useMemo)(() => {
    const filteredResults = [];
    staticResults.forEach((group) => {
      const filteredItems = (0, import_match_sorter.matchSorter)(group.items, search, {
        keys: ["label"]
      });
      if (filteredItems.length === 0) {
        return;
      }
      filteredResults.push({
        ...group,
        items: filteredItems
      });
    });
    return filteredResults;
  }, [staticResults, search]);
  const handleSearch = (q) => {
    setSearch(q);
    listRef.current?.scrollTo({ top: 0 });
  };
  const showLoading = (0, import_react12.useMemo)(() => {
    return isFetching && !dynamicResults.length && !filteredStaticResults.length;
  }, [isFetching, dynamicResults, filteredStaticResults]);
  return /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)(CommandDialog, { open, onOpenChange: handleOpenChange, children: [
    /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
      CommandInput,
      {
        isFetching,
        ref: inputRef,
        area,
        setArea,
        value: search,
        onValueChange: handleSearch,
        onBack: area !== "all" ? handleBack : void 0,
        placeholder: t4("app.search.placeholder")
      }
    ),
    /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)(CommandList, { ref: listRef, children: [
      showLoading && /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(CommandLoading, {}),
      dynamicResults.map((group) => {
        return /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)(CommandGroup, { heading: group.title, children: [
          group.items.map((item) => {
            return /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
              CommandItem,
              {
                onSelect: () => handleSelect(item),
                value: item.value,
                className: "flex items-center justify-between",
                children: /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)("div", { className: "flex items-center gap-x-3", children: [
                  item.thumbnail && /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
                    Thumbnail,
                    {
                      alt: item.title,
                      src: item.thumbnail,
                      size: "small"
                    }
                  ),
                  /* @__PURE__ */ (0, import_jsx_runtime19.jsx)("span", { children: item.title }),
                  item.subtitle && /* @__PURE__ */ (0, import_jsx_runtime19.jsx)("span", { className: "text-ui-fg-muted", children: item.subtitle })
                ] })
              },
              item.id
            );
          }),
          group.hasMore && area === "all" && /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
            CommandItem,
            {
              onSelect: () => handleShowMore(group.area),
              hidden: true,
              value: `${group.title}:show:more`,
              children: /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)("div", { className: "text-ui-fg-muted flex items-center gap-x-3", children: [
                /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(import_icons4.Plus, {}),
                /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(import_ui9.Text, { size: "small", leading: "compact", weight: "plus", children: t4("app.search.showMore") })
              ] })
            }
          ),
          group.hasMore && area === group.area && /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
            CommandItem,
            {
              onSelect: handleLoadMore,
              hidden: true,
              value: `${group.title}:load:more`,
              children: /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)("div", { className: "text-ui-fg-muted flex items-center gap-x-3", children: [
                /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(import_icons4.Plus, {}),
                /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(import_ui9.Text, { size: "small", leading: "compact", weight: "plus", children: t4("app.search.loadMore", {
                  count: Math.min(
                    SEARCH_LIMIT_INCREMENT,
                    group.count - limit
                  )
                }) })
              ] })
            }
          )
        ] }, group.title);
      }),
      filteredStaticResults.map((group) => {
        return /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
          CommandGroup,
          {
            heading: t4(`app.keyboardShortcuts.${group.title}`),
            children: group.items.map((item) => {
              return /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)(
                CommandItem,
                {
                  onSelect: () => handleSelect(item),
                  className: "flex items-center justify-between",
                  children: [
                    /* @__PURE__ */ (0, import_jsx_runtime19.jsx)("span", { children: item.label }),
                    /* @__PURE__ */ (0, import_jsx_runtime19.jsx)("div", { className: "flex items-center gap-x-1.5", children: item.keys.Mac?.map((key, index2) => {
                      return /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)(
                        "div",
                        {
                          className: "flex items-center gap-x-1",
                          children: [
                            /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(import_ui9.Kbd, { children: key }),
                            index2 < (item.keys.Mac?.length || 0) - 1 && /* @__PURE__ */ (0, import_jsx_runtime19.jsx)("span", { className: "txt-compact-xsmall text-ui-fg-subtle", children: t4("app.keyboardShortcuts.then") })
                          ]
                        },
                        index2
                      );
                    }) })
                  ]
                },
                item.label
              );
            })
          },
          group.title
        );
      }),
      !showLoading && /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(CommandEmpty, { q: search })
    ] })
  ] });
};
var CommandPalette = (0, import_react12.forwardRef)(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
  import_cmdk.Command,
  {
    shouldFilter: false,
    ref,
    className: (0, import_ui9.clx)(
      "bg-popover text-popover-foreground flex h-full w-full flex-col overflow-hidden rounded-md",
      className
    ),
    ...props
  }
));
CommandPalette.displayName = import_cmdk.Command.displayName;
var CommandDialog = ({ children, ...props }) => {
  const { t: t4 } = (0, import_react_i18next8.useTranslation)();
  const preserveHeight = (0, import_react12.useMemo)(() => {
    return props.isLoading && import_react12.Children.count(children) === 0;
  }, [props.isLoading, children]);
  return /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(Root, { ...props, children: /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)(Portal2, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(Overlay, { className: "bg-ui-bg-overlay fixed inset-0" }),
    /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)(
      Content,
      {
        className: (0, import_ui9.clx)(
          "bg-ui-bg-base shadow-elevation-modal fixed left-[50%] top-[50%] flex max-h-[calc(100%-16px)] w-[calc(100%-16px)] min-w-0 max-w-2xl translate-x-[-50%] translate-y-[-50%] flex-col overflow-hidden rounded-xl p-0",
          {
            "h-[300px]": preserveHeight
            // Prevents the dialog from collapsing when loading async results and before the no results message is displayed
          }
        ),
        children: [
          /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(Title, { className: "sr-only", children: t4("app.search.title") }),
          /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(Description, { className: "sr-only", children: t4("app.search.description") }),
          /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(CommandPalette, { className: "[&_[cmdk-group-heading]]:text-muted-foreground flex h-full flex-col overflow-hidden [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0", children }),
          /* @__PURE__ */ (0, import_jsx_runtime19.jsx)("div", { className: "bg-ui-bg-field text-ui-fg-subtle flex items-center justify-end border-t px-4 py-3", children: /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)("div", { className: "flex items-center gap-x-3", children: [
            /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)("div", { className: "flex items-center gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(import_ui9.Text, { size: "xsmall", leading: "compact", children: t4("app.search.navigation") }),
              /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)("div", { className: "flex items-center gap-x-1", children: [
                /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(import_ui9.Kbd, { className: "bg-ui-bg-field-component", children: "\u2193" }),
                /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(import_ui9.Kbd, { className: "bg-ui-bg-field-component", children: "\u2191" })
              ] })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime19.jsx)("div", { className: "bg-ui-border-strong h-3 w-px" }),
            /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)("div", { className: "flex items-center gap-x-2", children: [
              /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(import_ui9.Text, { size: "xsmall", leading: "compact", children: t4("app.search.openResult") }),
              /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(import_ui9.Kbd, { className: "bg-ui-bg-field-component", children: "\u21B5" })
            ] })
          ] }) })
        ]
      }
    )
  ] }) });
};
var CommandInput = (0, import_react12.forwardRef)(
  ({
    className,
    value,
    onValueChange,
    area,
    setArea,
    isFetching,
    onBack,
    ...props
  }, ref) => {
    const { t: t4 } = (0, import_react_i18next8.useTranslation)();
    const innerRef = (0, import_react12.useRef)(null);
    (0, import_react12.useImperativeHandle)(
      ref,
      () => innerRef.current
    );
    return /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)("div", { className: "flex flex-col border-b", children: [
      /* @__PURE__ */ (0, import_jsx_runtime19.jsx)("div", { className: "px-4 pt-4", children: /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)(import_ui9.DropdownMenu, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(import_ui9.DropdownMenu.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)(
          import_ui9.Badge,
          {
            size: "2xsmall",
            className: "hover:bg-ui-bg-base-pressed transition-fg cursor-pointer",
            children: [
              t4(`app.search.groups.${area}`),
              /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(import_icons4.TriangleDownMini, { className: "text-ui-fg-muted" })
            ]
          }
        ) }),
        /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
          import_ui9.DropdownMenu.Content,
          {
            align: "start",
            className: "h-full max-h-[360px] overflow-auto",
            onCloseAutoFocus: (e) => {
              e.preventDefault();
              innerRef.current?.focus();
            },
            children: /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
              import_ui9.DropdownMenu.RadioGroup,
              {
                value: area,
                onValueChange: (v) => setArea(v),
                children: SEARCH_AREAS.map((area2) => /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)(import_react12.Fragment, { children: [
                  area2 === "command" && /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(import_ui9.DropdownMenu.Separator, {}),
                  /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(import_ui9.DropdownMenu.RadioItem, { value: area2, children: t4(`app.search.groups.${area2}`) }),
                  area2 === "all" && /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(import_ui9.DropdownMenu.Separator, {})
                ] }, area2))
              }
            )
          }
        )
      ] }) }),
      /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)("div", { className: "relative flex items-center gap-x-2 px-4 py-3", children: [
        onBack && /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
          import_ui9.IconButton,
          {
            type: "button",
            size: "small",
            variant: "transparent",
            onClick: onBack,
            children: /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(import_icons4.ArrowUturnLeft, { className: "text-ui-fg-muted" })
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
          import_cmdk.Command.Input,
          {
            ref: innerRef,
            value,
            onValueChange,
            className: (0, import_ui9.clx)(
              "placeholder:text-ui-fg-muted flex !h-6 w-full rounded-md bg-transparent text-sm outline-none disabled:cursor-not-allowed disabled:opacity-50",
              className
            ),
            ...props
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)("div", { className: "absolute right-4 top-1/2 flex -translate-y-1/2 items-center justify-end gap-x-2", children: [
          isFetching && /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(import_icons4.Spinner, { className: "text-ui-fg-muted animate-spin" }),
          value && /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
            import_ui9.Button,
            {
              variant: "transparent",
              size: "small",
              className: "text-ui-fg-muted hover:text-ui-fg-subtle",
              type: "button",
              onClick: () => {
                onValueChange?.("");
                innerRef.current?.focus();
              },
              children: t4("actions.clear")
            }
          )
        ] })
      ] })
    ] });
  }
);
CommandInput.displayName = import_cmdk.Command.Input.displayName;
var CommandList = (0, import_react12.forwardRef)(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
  import_cmdk.Command.List,
  {
    ref,
    className: (0, import_ui9.clx)(
      "max-h-[300px] flex-1 overflow-y-auto overflow-x-hidden px-2 pb-4",
      className
    ),
    ...props
  }
));
CommandList.displayName = import_cmdk.Command.List.displayName;
var CommandEmpty = (0, import_react12.forwardRef)((props, ref) => {
  const { t: t4 } = (0, import_react_i18next8.useTranslation)();
  return /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(import_cmdk.Command.Empty, { ref, className: "py-6 text-center text-sm", ...props, children: /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)("div", { className: "text-ui-fg-subtle flex min-h-[236px] flex-col items-center justify-center gap-y-3", children: [
    /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(import_icons4.MagnifyingGlass, { className: "text-ui-fg-subtle" }),
    /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)("div", { className: "flex flex-col items-center justify-center gap-y-1", children: [
      /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(import_ui9.Text, { size: "small", weight: "plus", leading: "compact", children: props.q ? t4("app.search.noResultsTitle") : t4("app.search.emptySearchTitle") }),
      /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(import_ui9.Text, { size: "small", className: "text-ui-fg-muted", children: props.q ? t4("app.search.noResultsMessage") : t4("app.search.emptySearchMessage") })
    ] })
  ] }) });
});
CommandEmpty.displayName = import_cmdk.Command.Empty.displayName;
var CommandLoading = (0, import_react12.forwardRef)((props, ref) => {
  return /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)(
    import_cmdk.Command.Loading,
    {
      ref,
      ...props,
      className: "bg-ui-bg-base flex flex-col",
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime19.jsx)("div", { className: "w-full px-2 pb-1 pt-3", children: /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(Skeleton, { className: "h-5 w-10" }) }),
        Array.from({ length: 7 }).map((_, index2) => /* @__PURE__ */ (0, import_jsx_runtime19.jsx)("div", { className: "w-full p-2", children: /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(Skeleton, { className: "h-5 w-full" }) }, index2))
      ]
    }
  );
});
CommandLoading.displayName = import_cmdk.Command.Loading.displayName;
var CommandGroup = (0, import_react12.forwardRef)(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
  import_cmdk.Command.Group,
  {
    ref,
    className: (0, import_ui9.clx)(
      "text-ui-fg-base [&_[cmdk-group-heading]]:text-ui-fg-muted [&_[cmdk-group-heading]]:txt-compact-xsmall-plus overflow-hidden [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:pb-1 [&_[cmdk-group-heading]]:pt-3 [&_[cmdk-item]]:py-2",
      className
    ),
    ...props
  }
));
CommandGroup.displayName = import_cmdk.Command.Group.displayName;
var CommandSeparator = (0, import_react12.forwardRef)(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
  import_cmdk.Command.Separator,
  {
    ref,
    className: (0, import_ui9.clx)("bg-border -mx-1 h-px", className),
    ...props
  }
));
CommandSeparator.displayName = import_cmdk.Command.Separator.displayName;
var CommandItem = (0, import_react12.forwardRef)(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
  import_cmdk.Command.Item,
  {
    ref,
    className: (0, import_ui9.clx)(
      "aria-selected:bg-ui-bg-base-hover focus-visible:bg-ui-bg-base-hover txt-compact-small [&>svg]:text-ui-fg-subtle relative flex cursor-pointer select-none items-center gap-x-3 rounded-md p-2 outline-none data-[disabled]:pointer-events-none data-[disabled]:cursor-not-allowed data-[disabled]:opacity-50",
      className
    ),
    ...props
  }
));
CommandItem.displayName = import_cmdk.Command.Item.displayName;

// src/providers/sidebar-provider/sidebar-provider.tsx
var import_react14 = require("react");
var import_react_router_dom4 = require("react-router-dom");

// src/providers/sidebar-provider/sidebar-context.tsx
var import_react13 = require("react");
var SidebarContext = (0, import_react13.createContext)(null);

// src/providers/sidebar-provider/sidebar-provider.tsx
var import_jsx_runtime20 = require("react/jsx-runtime");
var SidebarProvider = ({ children }) => {
  const [desktop, setDesktop] = (0, import_react14.useState)(true);
  const [mobile, setMobile] = (0, import_react14.useState)(false);
  const { pathname } = (0, import_react_router_dom4.useLocation)();
  const toggle = (view) => {
    if (view === "desktop") {
      setDesktop(!desktop);
    } else {
      setMobile(!mobile);
    }
  };
  (0, import_react14.useEffect)(() => {
    setMobile(false);
  }, [pathname]);
  return /* @__PURE__ */ (0, import_jsx_runtime20.jsx)(SidebarContext.Provider, { value: { desktop, mobile, toggle }, children });
};

// src/providers/sidebar-provider/use-sidebar.tsx
var import_react15 = require("react");
var useSidebar = () => {
  const context = (0, import_react15.useContext)(SidebarContext);
  if (!context) {
    throw new Error("useSidebar must be used within a SidebarProvider");
  }
  return context;
};

// src/providers/search-provider/search-context.tsx
var import_react16 = require("react");
var SearchContext = (0, import_react16.createContext)(null);

// src/providers/search-provider/search-provider.tsx
var import_jsx_runtime21 = require("react/jsx-runtime");
var SearchProvider = ({ children }) => {
  const [open, setOpen] = (0, import_react17.useState)(false);
  const { mobile, toggle } = useSidebar();
  const toggleSearch = () => {
    const update = !open;
    if (update && mobile) {
      toggle("mobile");
    }
    setOpen(update);
  };
  (0, import_react17.useEffect)(() => {
    const onKeyDown = (e) => {
      if (e.key === "k" && (e.metaKey || e.ctrlKey)) {
        setOpen((prev) => !prev);
      }
    };
    document.addEventListener("keydown", onKeyDown);
    return () => {
      document.removeEventListener("keydown", onKeyDown);
    };
  }, []);
  return /* @__PURE__ */ (0, import_jsx_runtime21.jsxs)(
    SearchContext.Provider,
    {
      value: {
        open,
        onOpenChange: setOpen,
        toggleSearch
      },
      children: [
        children,
        /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(Search, {})
      ]
    }
  );
};

// src/providers/search-provider/use-search.tsx
var import_react18 = require("react");
var useSearch = () => {
  const context = (0, import_react18.useContext)(SearchContext);
  if (!context) {
    throw new Error("useSearch must be used within a SearchProvider");
  }
  return context;
};

// src/components/authentication/protected-route/protected-route.tsx
var import_jsx_runtime22 = require("react/jsx-runtime");
var ProtectedRoute = () => {
  const { user, isLoading } = useMe();
  const location = (0, import_react_router_dom5.useLocation)();
  if (isLoading) {
    return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)("div", { className: "flex min-h-screen items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(import_icons5.Spinner, { className: "text-ui-fg-interactive animate-spin" }) });
  }
  if (!user) {
    return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(import_react_router_dom5.Navigate, { to: "/login", state: { from: location }, replace: true });
  }
  return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(SidebarProvider, { children: /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(SearchProvider, { children: /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(import_react_router_dom5.Outlet, {}) }) });
};

// src/components/layout/main-layout/main-layout.tsx
var import_icons12 = require("@medusajs/icons");
var import_ui19 = require("@medusajs/ui");
var Collapsible2 = __toESM(require("@radix-ui/react-collapsible"));
var import_react_i18next13 = require("react-i18next");
init_store();
init_divider2();
init_skeleton2();

// src/components/layout/nav-item/nav-item.tsx
var import_ui12 = require("@medusajs/ui");
var Collapsible = __toESM(require("@radix-ui/react-collapsible"));
var import_react19 = require("react");
var import_react_i18next9 = require("react-i18next");
var import_react_router_dom6 = require("react-router-dom");
init_conditional_tooltip2();
var import_jsx_runtime25 = require("react/jsx-runtime");
var BASE_NAV_LINK_CLASSES = "text-ui-fg-subtle transition-fg hover:bg-ui-bg-subtle-hover flex items-center gap-x-2 rounded-md py-0.5 pl-0.5 pr-2 outline-none [&>svg]:text-ui-fg-subtle focus-visible:shadow-borders-focus";
var ACTIVE_NAV_LINK_CLASSES = "bg-ui-bg-base shadow-elevation-card-rest text-ui-fg-base hover:bg-ui-bg-base";
var NESTED_NAV_LINK_CLASSES = "pl-[34px] pr-2 py-1 w-full text-ui-fg-muted";
var SETTING_NAV_LINK_CLASSES = "pl-2 py-1";
var getIsOpen = (to, items, pathname) => {
  return [to, ...items?.map((i) => i.to) ?? []].some(
    (p) => pathname.startsWith(p)
  );
};
var NavItemTooltip = ({
  to,
  children
}) => {
  const { t: t4 } = (0, import_react_i18next9.useTranslation)();
  const globalShortcuts = useGlobalShortcuts();
  const shortcut = globalShortcuts.find((s) => s.to === to);
  return /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(
    ConditionalTooltip,
    {
      showTooltip: !!shortcut,
      maxWidth: 9999,
      content: /* @__PURE__ */ (0, import_jsx_runtime25.jsxs)("div", { className: "txt-compact-xsmall flex h-5 items-center justify-between gap-x-2 whitespace-nowrap", children: [
        /* @__PURE__ */ (0, import_jsx_runtime25.jsx)("span", { children: shortcut?.label }),
        /* @__PURE__ */ (0, import_jsx_runtime25.jsx)("div", { className: "flex items-center gap-x-1", children: shortcut?.keys.Mac?.map((key, index2) => /* @__PURE__ */ (0, import_jsx_runtime25.jsxs)("div", { className: "flex items-center gap-x-1", children: [
          /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(import_ui12.Kbd, { children: key }, key),
          index2 < (shortcut.keys.Mac?.length || 0) - 1 && /* @__PURE__ */ (0, import_jsx_runtime25.jsx)("span", { className: "text-ui-fg-muted txt-compact-xsmall", children: t4("app.keyboardShortcuts.then") })
        ] }, index2)) })
      ] }),
      side: "right",
      delayDuration: 1500,
      children: /* @__PURE__ */ (0, import_jsx_runtime25.jsx)("div", { className: "w-full", children })
    }
  );
};
var NavItem = ({
  icon,
  label,
  to,
  items,
  type = "core",
  from
}) => {
  const { pathname } = (0, import_react_router_dom6.useLocation)();
  const [open, setOpen] = (0, import_react19.useState)(getIsOpen(to, items, pathname));
  (0, import_react19.useEffect)(() => {
    setOpen(getIsOpen(to, items, pathname));
  }, [pathname, to, items]);
  const navLinkClassNames = (0, import_react19.useCallback)(
    ({
      isActive,
      isNested = false,
      isSetting: isSetting2 = false
    }) => (0, import_ui12.clx)(BASE_NAV_LINK_CLASSES, {
      [NESTED_NAV_LINK_CLASSES]: isNested,
      [ACTIVE_NAV_LINK_CLASSES]: isActive,
      [SETTING_NAV_LINK_CLASSES]: isSetting2
    }),
    []
  );
  const isSetting = type === "setting";
  return /* @__PURE__ */ (0, import_jsx_runtime25.jsxs)("div", { className: "px-3", children: [
    /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(NavItemTooltip, { to, children: /* @__PURE__ */ (0, import_jsx_runtime25.jsxs)(
      import_react_router_dom6.NavLink,
      {
        to,
        end: true,
        state: from ? {
          from
        } : void 0,
        className: (props) => (0, import_ui12.clx)(navLinkClassNames({ ...props, isSetting }), {
          "max-lg:hidden": !!items?.length
        }),
        children: [
          type !== "setting" && /* @__PURE__ */ (0, import_jsx_runtime25.jsx)("div", { className: "flex size-6 items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(Icon, { icon, type }) }),
          /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(import_ui12.Text, { size: "small", weight: "plus", leading: "compact", children: label })
        ]
      }
    ) }),
    items && items.length > 0 && /* @__PURE__ */ (0, import_jsx_runtime25.jsxs)(Collapsible.Root, { open, onOpenChange: setOpen, children: [
      /* @__PURE__ */ (0, import_jsx_runtime25.jsxs)(
        Collapsible.Trigger,
        {
          className: (0, import_ui12.clx)(
            "text-ui-fg-subtle hover:text-ui-fg-base transition-fg hover:bg-ui-bg-subtle-hover flex w-full items-center gap-x-2 rounded-md py-0.5 pl-0.5 pr-2 outline-none lg:hidden",
            { "pl-2": isSetting }
          ),
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime25.jsx)("div", { className: "flex size-6 items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(Icon, { icon, type }) }),
            /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(import_ui12.Text, { size: "small", weight: "plus", leading: "compact", children: label })
          ]
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(Collapsible.Content, { children: /* @__PURE__ */ (0, import_jsx_runtime25.jsx)("div", { className: "flex flex-col gap-y-0.5 pb-2 pt-0.5", children: /* @__PURE__ */ (0, import_jsx_runtime25.jsxs)("ul", { className: "flex flex-col gap-y-0.5", children: [
        /* @__PURE__ */ (0, import_jsx_runtime25.jsx)("li", { className: "flex w-full items-center gap-x-1 lg:hidden", children: /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(NavItemTooltip, { to, children: /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(
          import_react_router_dom6.NavLink,
          {
            to,
            end: true,
            className: (props) => (0, import_ui12.clx)(
              navLinkClassNames({
                ...props,
                isNested: true,
                isSetting
              })
            ),
            children: /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(import_ui12.Text, { size: "small", weight: "plus", leading: "compact", children: label })
          }
        ) }) }),
        items.map((item) => {
          return /* @__PURE__ */ (0, import_jsx_runtime25.jsx)("li", { className: "flex h-7 items-center", children: /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(NavItemTooltip, { to: item.to, children: /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(
            import_react_router_dom6.NavLink,
            {
              to: item.to,
              end: true,
              className: (props) => (0, import_ui12.clx)(
                navLinkClassNames({
                  ...props,
                  isNested: true,
                  isSetting
                })
              ),
              children: /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(import_ui12.Text, { size: "small", weight: "plus", leading: "compact", children: item.label })
            }
          ) }) }, item.to);
        })
      ] }) }) })
    ] })
  ] });
};
var Icon = ({ icon, type }) => {
  if (!icon) {
    return null;
  }
  return type === "extension" ? /* @__PURE__ */ (0, import_jsx_runtime25.jsx)("div", { className: "shadow-borders-base bg-ui-bg-base flex h-5 w-5 items-center justify-center rounded-[4px]", children: /* @__PURE__ */ (0, import_jsx_runtime25.jsx)("div", { className: "h-[15px] w-[15px] overflow-hidden rounded-sm", children: icon }) }) : icon;
};

// src/components/layout/shell/shell.tsx
init_dist16();
var import_icons10 = require("@medusajs/icons");
var import_ui17 = require("@medusajs/ui");
var import_react_i18next11 = require("react-i18next");
var import_react_router_dom8 = require("react-router-dom");

// src/providers/keybind-provider/keybind-provider.tsx
var import_react20 = require("react");
var import_jsx_runtime26 = require("react/jsx-runtime");
var KeybindProvider = ({
  shortcuts,
  debounce: debounce5 = 500,
  children
}) => {
  const [storeShortcuts, setStoreCommands] = (0, import_react20.useState)(
    shortcuts.map((shr) => getShortcutWithDefaultValues(shr))
  );
  const registerShortcut = (0, import_react20.useCallback)(
    (shortcut) => {
      setStoreCommands((prevShortcuts) => {
        const idx = findShortcutIndex(shortcuts, getShortcutKeys(shortcut));
        const newShortcuts = [...prevShortcuts];
        if (idx > -1) {
          newShortcuts[idx] = getShortcutWithDefaultValues(shortcut);
          return prevShortcuts;
        }
        return [...prevShortcuts, getShortcutWithDefaultValues(shortcut)];
      });
    },
    [shortcuts]
  );
  const getKeysByPlatform = (0, import_react20.useCallback)((command) => {
    return findFirstPlatformMatch(command.keys);
  }, []);
  useShortcuts({ shortcuts: storeShortcuts, debounce: debounce5 });
  const commandsContext = (0, import_react20.useMemo)(
    () => ({
      shortcuts: storeShortcuts,
      registerShortcut,
      getKeysByPlatform
    }),
    [storeShortcuts, registerShortcut, getKeysByPlatform]
  );
  return /* @__PURE__ */ (0, import_jsx_runtime26.jsx)(KeybindContext.Provider, { value: commandsContext, children });
};

// src/components/layout/notifications/notifications.tsx
var import_icons9 = require("@medusajs/icons");
var import_ui16 = require("@medusajs/ui");
var import_date_fns = require("date-fns");
var import_react22 = require("react");
var import_react_i18next10 = require("react-i18next");
init_api();
init_client2();
init_file_preview2();

// src/components/common/infinite-list/infinite-list.tsx
var import_react_query41 = require("@tanstack/react-query");
var import_react21 = require("react");
var import_ui15 = require("@medusajs/ui");
var import_icons8 = require("@medusajs/icons");
var import_jsx_runtime29 = require("react/jsx-runtime");
var InfiniteList = ({
  queryKey: queryKey2,
  queryFn: queryFn2,
  queryOptions,
  renderItem,
  renderEmpty,
  responseKey,
  pageSize = 20
}) => {
  const {
    data,
    error,
    fetchNextPage,
    fetchPreviousPage,
    hasPreviousPage,
    hasNextPage,
    isFetching,
    isPending
  } = (0, import_react_query41.useInfiniteQuery)({
    queryKey: queryKey2,
    queryFn: async ({ pageParam = 0 }) => {
      return await queryFn2({
        limit: pageSize,
        offset: pageParam
      });
    },
    initialPageParam: 0,
    maxPages: 5,
    getNextPageParam: (lastPage) => {
      const moreItemsExist = lastPage.count > lastPage.offset + lastPage.limit;
      return moreItemsExist ? lastPage.offset + lastPage.limit : void 0;
    },
    getPreviousPageParam: (firstPage) => {
      const moreItemsExist = firstPage.offset !== 0;
      return moreItemsExist ? Math.max(firstPage.offset - firstPage.limit, 0) : void 0;
    },
    ...queryOptions
  });
  const items = (0, import_react21.useMemo)(() => {
    return data?.pages.flatMap((p) => p[responseKey]) ?? [];
  }, [data, responseKey]);
  const parentRef = (0, import_react21.useRef)(null);
  const startObserver = (0, import_react21.useRef)();
  const endObserver = (0, import_react21.useRef)();
  (0, import_react21.useEffect)(() => {
    if (isPending) {
      return;
    }
    if (!isFetching) {
      startObserver.current = new IntersectionObserver((entries) => {
        if (entries[0].isIntersecting && hasPreviousPage) {
          fetchPreviousPage();
        }
      });
      endObserver.current = new IntersectionObserver((entries) => {
        if (entries[0].isIntersecting && hasNextPage) {
          fetchNextPage();
        }
      });
      startObserver.current?.observe(parentRef.current.firstChild);
      endObserver.current?.observe(parentRef.current.lastChild);
    }
    return () => {
      startObserver.current?.disconnect();
      endObserver.current?.disconnect();
    };
  }, [
    fetchNextPage,
    fetchPreviousPage,
    hasNextPage,
    hasPreviousPage,
    isFetching,
    isPending
  ]);
  (0, import_react21.useEffect)(() => {
    if (error) {
      import_ui15.toast.error(error.message);
    }
  }, [error]);
  if (isPending) {
    return /* @__PURE__ */ (0, import_jsx_runtime29.jsx)("div", { className: "flex h-full flex-col items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime29.jsx)(import_icons8.Spinner, { className: "animate-spin" }) });
  }
  return /* @__PURE__ */ (0, import_jsx_runtime29.jsxs)("div", { ref: parentRef, className: "h-full", children: [
    items?.length ? items.map((item) => /* @__PURE__ */ (0, import_jsx_runtime29.jsx)("div", { children: renderItem(item) }, item.id)) : renderEmpty(),
    isFetching && /* @__PURE__ */ (0, import_jsx_runtime29.jsx)("div", { className: "flex flex-col items-center justify-center py-4", children: /* @__PURE__ */ (0, import_jsx_runtime29.jsx)(import_icons8.Spinner, { className: "animate-spin" }) })
  ] });
};

// src/components/layout/notifications/notifications.tsx
var import_jsx_runtime30 = require("react/jsx-runtime");
var LAST_READ_NOTIFICATION_KEY = "notificationsLastReadAt";
var Notifications = () => {
  const { t: t4 } = (0, import_react_i18next10.useTranslation)();
  const [open, setOpen] = (0, import_react22.useState)(false);
  const [hasUnread, setHasUnread] = useUnreadNotifications();
  const [lastReadAt, setLastReadAt] = (0, import_react22.useState)(
    localStorage.getItem(LAST_READ_NOTIFICATION_KEY)
  );
  (0, import_react22.useEffect)(() => {
    const onKeyDown = (e) => {
      if (e.key === "n" && (e.metaKey || e.ctrlKey)) {
        setOpen((prev) => !prev);
      }
    };
    document.addEventListener("keydown", onKeyDown);
    return () => {
      document.removeEventListener("keydown", onKeyDown);
    };
  }, []);
  const handleOnOpen = (shouldOpen) => {
    if (shouldOpen) {
      setHasUnread(false);
      setOpen(true);
      localStorage.setItem(LAST_READ_NOTIFICATION_KEY, (/* @__PURE__ */ new Date()).toISOString());
    } else {
      setOpen(false);
      setLastReadAt(localStorage.getItem(LAST_READ_NOTIFICATION_KEY));
    }
  };
  return /* @__PURE__ */ (0, import_jsx_runtime30.jsxs)(import_ui16.Drawer, { open, onOpenChange: handleOnOpen, children: [
    /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(import_ui16.Drawer.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(
      import_ui16.IconButton,
      {
        variant: "transparent",
        className: "text-ui-fg-muted hover:text-ui-fg-subtle",
        children: hasUnread ? /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(import_icons9.BellAlertDone, {}) : /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(import_icons9.BellAlert, {})
      }
    ) }),
    /* @__PURE__ */ (0, import_jsx_runtime30.jsxs)(import_ui16.Drawer.Content, { children: [
      /* @__PURE__ */ (0, import_jsx_runtime30.jsxs)(import_ui16.Drawer.Header, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(import_ui16.Drawer.Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(import_ui16.Heading, { children: t4("notifications.domain") }) }),
        /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(import_ui16.Drawer.Description, { className: "sr-only", children: t4("notifications.accessibility.description") })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(import_ui16.Drawer.Body, { className: "overflow-y-auto px-0", children: /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(
        InfiniteList,
        {
          responseKey: "notifications",
          queryKey: notificationQueryKeys.all,
          queryFn: (params2) => sdk.admin.notification.list(params2),
          queryOptions: { enabled: open },
          renderEmpty: () => /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(NotificationsEmptyState, { t: t4 }),
          renderItem: (notification) => {
            return /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(
              Notification,
              {
                notification,
                unread: Date.parse(notification.created_at) > (lastReadAt ? Date.parse(lastReadAt) : 0)
              },
              notification.id
            );
          }
        }
      ) })
    ] })
  ] });
};
var Notification = ({
  notification,
  unread
}) => {
  const data = notification.data;
  if (!data?.title) {
    return null;
  }
  return /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(import_jsx_runtime30.Fragment, { children: /* @__PURE__ */ (0, import_jsx_runtime30.jsxs)("div", { className: "relative flex items-start justify-center gap-3 border-b p-6", children: [
    /* @__PURE__ */ (0, import_jsx_runtime30.jsx)("div", { className: "text-ui-fg-muted flex size-5 items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(import_icons9.InformationCircleSolid, {}) }),
    /* @__PURE__ */ (0, import_jsx_runtime30.jsxs)("div", { className: "flex w-full flex-col gap-y-3", children: [
      /* @__PURE__ */ (0, import_jsx_runtime30.jsxs)("div", { className: "flex flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime30.jsxs)("div", { className: "flex items-center justify-between", children: [
          /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(import_ui16.Text, { size: "small", leading: "compact", weight: "plus", children: data.title }),
          /* @__PURE__ */ (0, import_jsx_runtime30.jsxs)("div", { className: "align-center flex items-center justify-center gap-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(
              import_ui16.Text,
              {
                as: "span",
                className: (0, import_ui16.clx)("text-ui-fg-subtle", {
                  "text-ui-fg-base": unread
                }),
                size: "small",
                leading: "compact",
                weight: "plus",
                children: (0, import_date_fns.formatDistance)(notification.created_at, /* @__PURE__ */ new Date(), {
                  addSuffix: true
                })
              }
            ),
            unread && /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(
              "div",
              {
                className: "bg-ui-bg-interactive h-2 w-2 rounded",
                role: "status"
              }
            )
          ] })
        ] }),
        !!data.description && /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(
          import_ui16.Text,
          {
            className: "text-ui-fg-subtle whitespace-pre-line",
            size: "small",
            children: data.description
          }
        )
      ] }),
      !!data?.file?.url && /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(
        FilePreview,
        {
          filename: data.file.filename ?? "",
          url: data.file.url,
          hideThumbnail: true
        }
      )
    ] })
  ] }) });
};
var NotificationsEmptyState = ({ t: t4 }) => {
  return /* @__PURE__ */ (0, import_jsx_runtime30.jsxs)("div", { className: "flex h-full flex-col items-center justify-center", children: [
    /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(import_icons9.BellAlertDone, {}),
    /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(import_ui16.Text, { size: "small", leading: "compact", weight: "plus", className: "mt-3", children: t4("notifications.emptyState.title") }),
    /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(
      import_ui16.Text,
      {
        size: "small",
        className: "text-ui-fg-muted mt-1 max-w-[294px] text-center",
        children: t4("notifications.emptyState.description")
      }
    )
  ] });
};
var useUnreadNotifications = () => {
  const [hasUnread, setHasUnread] = (0, import_react22.useState)(false);
  const { notifications } = useNotifications(
    { limit: 1, offset: 0, fields: "created_at" },
    { refetchInterval: 6e4 }
  );
  const lastNotification = notifications?.[0];
  (0, import_react22.useEffect)(() => {
    if (!lastNotification) {
      return;
    }
    const lastNotificationAsTimestamp = Date.parse(lastNotification.created_at);
    const lastReadDatetime = localStorage.getItem(LAST_READ_NOTIFICATION_KEY);
    const lastReadAsTimestamp = lastReadDatetime ? Date.parse(lastReadDatetime) : 0;
    if (lastNotificationAsTimestamp > lastReadAsTimestamp) {
      setHasUnread(true);
    }
  }, [lastNotification]);
  return [hasUnread, setHasUnread];
};

// src/components/layout/shell/shell.tsx
var import_jsx_runtime31 = require("react/jsx-runtime");
var Shell = ({ children }) => {
  const globalShortcuts = useGlobalShortcuts();
  return /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(KeybindProvider, { shortcuts: globalShortcuts, children: /* @__PURE__ */ (0, import_jsx_runtime31.jsxs)("div", { className: "flex h-screen flex-col items-start overflow-hidden lg:flex-row", children: [
    /* @__PURE__ */ (0, import_jsx_runtime31.jsxs)("div", { children: [
      /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(MobileSidebarContainer, { children }),
      /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(DesktopSidebarContainer, { children })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime31.jsxs)("div", { className: "flex h-screen w-full flex-col overflow-auto", children: [
      /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(Topbar, {}),
      /* @__PURE__ */ (0, import_jsx_runtime31.jsx)("main", { className: "flex h-full w-full flex-col items-center overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(Gutter, { children: /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(import_react_router_dom8.Outlet, {}) }) })
    ] })
  ] }) });
};
var Gutter = ({ children }) => {
  return /* @__PURE__ */ (0, import_jsx_runtime31.jsx)("div", { className: "flex w-full max-w-[1600px] flex-col gap-y-2 p-3", children });
};
var Breadcrumbs = () => {
  const matches = (0, import_react_router_dom8.useMatches)();
  const crumbs = matches.filter((match) => Boolean(match.handle?.crumb)).map((match) => {
    const handle = match.handle;
    let label = null;
    try {
      label = handle.crumb(match.data);
    } catch (error) {
    }
    if (!label) {
      return null;
    }
    return {
      label,
      path: match.pathname
    };
  }).filter(Boolean);
  return /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(
    "ol",
    {
      className: (0, import_ui17.clx)(
        "text-ui-fg-muted txt-compact-small-plus flex select-none items-center"
      ),
      children: crumbs.map((crumb, index2) => {
        const isLast = index2 === crumbs.length - 1;
        const isSingle = crumbs.length === 1;
        return /* @__PURE__ */ (0, import_jsx_runtime31.jsxs)("li", { className: (0, import_ui17.clx)("flex items-center"), children: [
          !isLast ? /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(
            import_react_router_dom8.Link,
            {
              className: "transition-fg hover:text-ui-fg-subtle",
              to: crumb.path,
              children: crumb.label
            }
          ) : /* @__PURE__ */ (0, import_jsx_runtime31.jsxs)("div", { children: [
            !isSingle && /* @__PURE__ */ (0, import_jsx_runtime31.jsx)("span", { className: "block lg:hidden", children: "..." }),
            /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(
              "span",
              {
                className: (0, import_ui17.clx)({
                  "hidden lg:block": !isSingle
                }),
                children: crumb.label
              },
              index2
            )
          ] }),
          !isLast && /* @__PURE__ */ (0, import_jsx_runtime31.jsx)("span", { className: "mx-2", children: /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(import_icons10.TriangleRightMini, {}) })
        ] }, index2);
      })
    }
  );
};
var ToggleSidebar = () => {
  const { toggle } = useSidebar();
  return /* @__PURE__ */ (0, import_jsx_runtime31.jsxs)("div", { children: [
    /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(
      import_ui17.IconButton,
      {
        className: "hidden lg:flex",
        variant: "transparent",
        onClick: () => toggle("desktop"),
        size: "small",
        children: /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(import_icons10.SidebarLeft, { className: "text-ui-fg-muted" })
      }
    ),
    /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(
      import_ui17.IconButton,
      {
        className: "hidden max-lg:flex",
        variant: "transparent",
        onClick: () => toggle("mobile"),
        size: "small",
        children: /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(import_icons10.SidebarLeft, { className: "text-ui-fg-muted" })
      }
    )
  ] });
};
var Topbar = () => {
  return /* @__PURE__ */ (0, import_jsx_runtime31.jsxs)("div", { className: "grid w-full grid-cols-2 border-b p-3", children: [
    /* @__PURE__ */ (0, import_jsx_runtime31.jsxs)("div", { className: "flex items-center gap-x-1.5", children: [
      /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(ToggleSidebar, {}),
      /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(Breadcrumbs, {})
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime31.jsx)("div", { className: "flex items-center justify-end gap-x-3", children: /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(Notifications, {}) })
  ] });
};
var DesktopSidebarContainer = ({ children }) => {
  const { desktop } = useSidebar();
  return /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(
    "div",
    {
      className: (0, import_ui17.clx)("hidden h-screen w-[220px] border-r", {
        "lg:flex": desktop
      }),
      children
    }
  );
};
var MobileSidebarContainer = ({ children }) => {
  const { t: t4 } = (0, import_react_i18next11.useTranslation)();
  const { mobile, toggle } = useSidebar();
  return /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(Root, { open: mobile, onOpenChange: () => toggle("mobile"), children: /* @__PURE__ */ (0, import_jsx_runtime31.jsxs)(Portal2, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(
      Overlay,
      {
        className: (0, import_ui17.clx)(
          "bg-ui-bg-overlay fixed inset-0",
          "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0"
        )
      }
    ),
    /* @__PURE__ */ (0, import_jsx_runtime31.jsxs)(
      Content,
      {
        className: (0, import_ui17.clx)(
          "bg-ui-bg-subtle shadow-elevation-modal fixed inset-y-2 left-2 flex w-full max-w-[304px] flex-col overflow-hidden rounded-lg border-r",
          "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:slide-out-to-left-1/2 data-[state=open]:slide-in-from-left-1/2 duration-200"
        ),
        children: [
          /* @__PURE__ */ (0, import_jsx_runtime31.jsxs)("div", { className: "p-3", children: [
            /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(
              import_ui17.IconButton,
              {
                size: "small",
                variant: "transparent",
                className: "text-ui-fg-subtle",
                children: /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(import_icons10.XMark, {})
              }
            ) }),
            /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(Title, { className: "sr-only", children: t4("app.nav.accessibility.title") }),
            /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(Description, { className: "sr-only", children: t4("app.nav.accessibility.description") })
          ] }),
          children
        ]
      }
    )
  ] }) });
};

// src/components/layout/main-layout/main-layout.tsx
var import_react_router_dom10 = require("react-router-dom");
init_extensions();
init_api();
init_query_client();

// src/components/layout/user-menu/user-menu.tsx
var import_icons11 = require("@medusajs/icons");
var import_ui18 = require("@medusajs/ui");
init_dist16();
var import_react_i18next12 = require("react-i18next");
init_skeleton2();
var import_react23 = require("react");
var import_react_router_dom9 = require("react-router-dom");
init_api();
init_query_client();
var import_jsx_runtime32 = require("react/jsx-runtime");
var UserMenu = () => {
  const { t: t4 } = (0, import_react_i18next12.useTranslation)();
  const location = (0, import_react_router_dom9.useLocation)();
  const [openMenu, setOpenMenu] = (0, import_react23.useState)(false);
  const [openModal, setOpenModal] = (0, import_react23.useState)(false);
  const toggleModal = () => {
    setOpenMenu(false);
    setOpenModal(!openModal);
  };
  return /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)("div", { children: [
    /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)(import_ui18.DropdownMenu, { open: openMenu, onOpenChange: setOpenMenu, children: [
      /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(UserBadge, {}),
      /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)(import_ui18.DropdownMenu.Content, { className: "min-w-[var(--radix-dropdown-menu-trigger-width)] max-w-[var(--radix-dropdown-menu-trigger-width)]", children: [
        /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(UserItem, {}),
        /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_ui18.DropdownMenu.Separator, {}),
        /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_ui18.DropdownMenu.Item, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)(import_react_router_dom9.Link, { to: "/settings/profile", state: { from: location.pathname }, children: [
          /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_icons11.User, { className: "text-ui-fg-subtle mr-2" }),
          t4("app.menus.user.profileSettings")
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_ui18.DropdownMenu.Separator, {}),
        /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_ui18.DropdownMenu.Item, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)(import_react_router_dom9.Link, { to: "https://docs.medusajs.com", target: "_blank", children: [
          /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_icons11.BookOpen, { className: "text-ui-fg-subtle mr-2" }),
          t4("app.menus.user.documentation")
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_ui18.DropdownMenu.Item, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)(import_react_router_dom9.Link, { to: "https://medusajs.com/changelog/", target: "_blank", children: [
          /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_icons11.TimelineVertical, { className: "text-ui-fg-subtle mr-2" }),
          t4("app.menus.user.changelog")
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_ui18.DropdownMenu.Separator, {}),
        /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)(import_ui18.DropdownMenu.Item, { onClick: toggleModal, children: [
          /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_icons11.Keyboard, { className: "text-ui-fg-subtle mr-2" }),
          t4("app.menus.user.shortcuts")
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(ThemeToggle, {}),
        /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_ui18.DropdownMenu.Separator, {}),
        /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(Logout, {})
      ] })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(GlobalKeybindsModal, { open: openModal, onOpenChange: setOpenModal })
  ] });
};
var UserBadge = () => {
  const { user, isPending, isError, error } = useMe();
  const name = [user?.first_name, user?.last_name].filter(Boolean).join(" ");
  const displayName = name || user?.email;
  const fallback = displayName ? displayName[0].toUpperCase() : null;
  if (isPending) {
    return /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)("button", { className: "shadow-borders-base flex max-w-[192px] select-none items-center gap-x-2 overflow-hidden text-ellipsis whitespace-nowrap rounded-full py-1 pl-1 pr-2.5", children: [
      /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(Skeleton, { className: "h-5 w-5 rounded-full" }),
      /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(Skeleton, { className: "h-[9px] w-[70px]" })
    ] });
  }
  if (isError) {
    throw error;
  }
  return /* @__PURE__ */ (0, import_jsx_runtime32.jsx)("div", { className: "p-3", children: /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)(
    import_ui18.DropdownMenu.Trigger,
    {
      disabled: !user,
      className: (0, import_ui18.clx)(
        "bg-ui-bg-subtle grid w-full cursor-pointer grid-cols-[24px_1fr_15px] items-center gap-2 rounded-md py-1 pl-0.5 pr-2 outline-none",
        "hover:bg-ui-bg-subtle-hover",
        "data-[state=open]:bg-ui-bg-subtle-hover",
        "focus-visible:shadow-borders-focus"
      ),
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime32.jsx)("div", { className: "flex size-6 items-center justify-center", children: fallback ? /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_ui18.Avatar, { size: "xsmall", fallback }) : /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(Skeleton, { className: "h-6 w-6 rounded-full" }) }),
        /* @__PURE__ */ (0, import_jsx_runtime32.jsx)("div", { className: "flex items-center overflow-hidden", children: displayName ? /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(
          import_ui18.Text,
          {
            size: "xsmall",
            weight: "plus",
            leading: "compact",
            className: "truncate",
            children: displayName
          }
        ) : /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(Skeleton, { className: "h-[9px] w-[70px]" }) }),
        /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_icons11.EllipsisHorizontal, { className: "text-ui-fg-muted" })
      ]
    }
  ) });
};
var ThemeToggle = () => {
  const { t: t4 } = (0, import_react_i18next12.useTranslation)();
  const { theme, setTheme } = useTheme();
  return /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)(import_ui18.DropdownMenu.SubMenu, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)(import_ui18.DropdownMenu.SubMenuTrigger, { className: "rounded-md", children: [
      /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_icons11.CircleHalfSolid, { className: "text-ui-fg-subtle mr-2" }),
      t4("app.menus.user.theme.label")
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_ui18.DropdownMenu.SubMenuContent, { children: /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)(import_ui18.DropdownMenu.RadioGroup, { value: theme, children: [
      /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(
        import_ui18.DropdownMenu.RadioItem,
        {
          value: "system",
          onClick: (e) => {
            e.preventDefault();
            setTheme("system");
          },
          children: t4("app.menus.user.theme.system")
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(
        import_ui18.DropdownMenu.RadioItem,
        {
          value: "light",
          onClick: (e) => {
            e.preventDefault();
            setTheme("light");
          },
          children: t4("app.menus.user.theme.light")
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(
        import_ui18.DropdownMenu.RadioItem,
        {
          value: "dark",
          onClick: (e) => {
            e.preventDefault();
            setTheme("dark");
          },
          children: t4("app.menus.user.theme.dark")
        }
      )
    ] }) })
  ] });
};
var Logout = () => {
  const { t: t4 } = (0, import_react_i18next12.useTranslation)();
  const navigate = (0, import_react_router_dom9.useNavigate)();
  const { mutateAsync: logoutMutation } = useLogout();
  const handleLogout = async () => {
    await logoutMutation(void 0, {
      onSuccess: () => {
        queryClient.clear();
        navigate("/login");
      }
    });
  };
  return /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_ui18.DropdownMenu.Item, { onClick: handleLogout, children: /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)("div", { className: "flex items-center gap-x-2", children: [
    /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_icons11.OpenRectArrowOut, { className: "text-ui-fg-subtle" }),
    /* @__PURE__ */ (0, import_jsx_runtime32.jsx)("span", { children: t4("app.menus.actions.logout") })
  ] }) });
};
var GlobalKeybindsModal = (props) => {
  const { t: t4 } = (0, import_react_i18next12.useTranslation)();
  const globalShortcuts = useGlobalShortcuts();
  const [searchValue, onSearchValueChange] = (0, import_react23.useState)("");
  const searchResults = searchValue ? globalShortcuts.filter((shortcut) => {
    return shortcut.label.toLowerCase().includes(searchValue?.toLowerCase());
  }) : globalShortcuts;
  return /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(Root, { ...props, children: /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)(Portal2, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(Overlay, { className: "bg-ui-bg-overlay fixed inset-0" }),
    /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)(Content, { className: "bg-ui-bg-subtle shadow-elevation-modal fixed left-[50%] top-[50%] flex h-full max-h-[612px] w-full max-w-[560px] translate-x-[-50%] translate-y-[-50%] flex-col divide-y overflow-hidden rounded-lg", children: [
      /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)("div", { className: "flex flex-col gap-y-3 px-6 py-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)("div", { className: "flex items-center justify-between", children: [
          /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(Title, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_ui18.Heading, { children: t4("app.menus.user.shortcuts") }) }),
            /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(Description, { className: "sr-only" })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)("div", { className: "flex items-center gap-x-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_ui18.Kbd, { children: "esc" }),
            /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(Close, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_ui18.IconButton, { variant: "transparent", size: "small", children: /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_icons11.XMark, {}) }) })
          ] })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime32.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(
          import_ui18.Input,
          {
            type: "search",
            value: searchValue,
            onChange: (e) => onSearchValueChange(e.target.value)
          }
        ) })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime32.jsx)("div", { className: "flex flex-col divide-y overflow-y-auto", children: searchResults.map((shortcut, index2) => {
        return /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)(
          "div",
          {
            className: "text-ui-fg-subtle flex items-center justify-between px-6 py-3",
            children: [
              /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_ui18.Text, { size: "small", children: shortcut.label }),
              /* @__PURE__ */ (0, import_jsx_runtime32.jsx)("div", { className: "flex items-center gap-x-1", children: shortcut.keys.Mac?.map((key, index3) => {
                return /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)("div", { className: "flex items-center gap-x-1", children: [
                  /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(import_ui18.Kbd, { children: key }),
                  index3 < (shortcut.keys.Mac?.length || 0) - 1 && /* @__PURE__ */ (0, import_jsx_runtime32.jsx)("span", { className: "txt-compact-xsmall text-ui-fg-subtle", children: t4("app.keyboardShortcuts.then") })
                ] }, index3);
              }) })
            ]
          },
          index2
        );
      }) })
    ] })
  ] }) });
};
var UserItem = () => {
  const { user, isPending, isError, error } = useMe();
  const loaded = !isPending && !!user;
  if (!loaded) {
    return /* @__PURE__ */ (0, import_jsx_runtime32.jsx)("div", {});
  }
  const name = [user.first_name, user.last_name].filter(Boolean).join(" ");
  const email = user.email;
  const fallback = name ? name[0].toUpperCase() : email[0].toUpperCase();
  const avatar = user.avatar_url;
  if (isError) {
    throw error;
  }
  return /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)("div", { className: "flex items-center gap-x-3 overflow-hidden px-2 py-1", children: [
    /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(
      import_ui18.Avatar,
      {
        size: "small",
        variant: "rounded",
        src: avatar || void 0,
        fallback
      }
    ),
    /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)("div", { className: "block w-full min-w-0 max-w-[187px] overflow-hidden whitespace-nowrap", children: [
      /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(
        import_ui18.Text,
        {
          size: "small",
          weight: "plus",
          leading: "compact",
          className: "overflow-hidden text-ellipsis whitespace-nowrap",
          children: name || email
        }
      ),
      !!name && /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(
        import_ui18.Text,
        {
          size: "xsmall",
          leading: "compact",
          className: "text-ui-fg-subtle overflow-hidden text-ellipsis whitespace-nowrap",
          children: email
        }
      )
    ] })
  ] });
};

// src/components/layout/main-layout/main-layout.tsx
var import_jsx_runtime33 = require("react/jsx-runtime");
var MainLayout = () => {
  return /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(Shell, { children: /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(MainSidebar, {}) });
};
var MainSidebar = () => {
  return /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("aside", { className: "flex flex-1 flex-col justify-between overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)("div", { className: "flex flex-1 flex-col", children: [
    /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)("div", { className: "bg-ui-bg-subtle sticky top-0", children: [
      /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(Header, {}),
      /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("div", { className: "px-3", children: /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(Divider, { variant: "dashed" }) })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)("div", { className: "flex flex-1 flex-col justify-between", children: [
      /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)("div", { className: "flex flex-1 flex-col", children: [
        /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(CoreRouteSection, {}),
        /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(ExtensionRouteSection, {})
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(UtilitySection, {})
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("div", { className: "bg-ui-bg-subtle sticky bottom-0", children: /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(UserSection, {}) })
  ] }) });
};
var Logout2 = () => {
  const { t: t4 } = (0, import_react_i18next13.useTranslation)();
  const navigate = (0, import_react_router_dom10.useNavigate)();
  const { mutateAsync: logoutMutation } = useLogout();
  const handleLogout = async () => {
    await logoutMutation(void 0, {
      onSuccess: () => {
        queryClient.clear();
        navigate("/login");
      }
    });
  };
  return /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_ui19.DropdownMenu.Item, { onClick: handleLogout, children: /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)("div", { className: "flex items-center gap-x-2", children: [
    /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_icons12.OpenRectArrowOut, { className: "text-ui-fg-subtle" }),
    /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("span", { children: t4("app.menus.actions.logout") })
  ] }) });
};
var Header = () => {
  const { t: t4 } = (0, import_react_i18next13.useTranslation)();
  const { store, isPending, isError, error } = useStore();
  const name = store?.name;
  const fallback = store?.name?.slice(0, 1).toUpperCase();
  const isLoaded = !isPending && !!store && !!name && !!fallback;
  if (isError) {
    throw error;
  }
  return /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("div", { className: "w-full p-3", children: /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)(import_ui19.DropdownMenu, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)(
      import_ui19.DropdownMenu.Trigger,
      {
        disabled: !isLoaded,
        className: (0, import_ui19.clx)(
          "bg-ui-bg-subtle transition-fg grid w-full grid-cols-[24px_1fr_15px] items-center gap-x-3 rounded-md p-0.5 pr-2 outline-none",
          "hover:bg-ui-bg-subtle-hover",
          "data-[state=open]:bg-ui-bg-subtle-hover",
          "focus-visible:shadow-borders-focus"
        ),
        children: [
          fallback ? /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_ui19.Avatar, { variant: "squared", size: "xsmall", fallback }) : /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(Skeleton, { className: "h-6 w-6 rounded-md" }),
          /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("div", { className: "block overflow-hidden text-left", children: name ? /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(
            import_ui19.Text,
            {
              size: "small",
              weight: "plus",
              leading: "compact",
              className: "truncate",
              children: store.name
            }
          ) : /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(Skeleton, { className: "h-[9px] w-[120px]" }) }),
          /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_icons12.EllipsisHorizontal, { className: "text-ui-fg-muted" })
        ]
      }
    ),
    isLoaded && /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)(import_ui19.DropdownMenu.Content, { className: "w-[var(--radix-dropdown-menu-trigger-width)] min-w-0", children: [
      /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)("div", { className: "flex items-center gap-x-3 px-2 py-1", children: [
        /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_ui19.Avatar, { variant: "squared", size: "small", fallback }),
        /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)("div", { className: "flex flex-col overflow-hidden", children: [
          /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(
            import_ui19.Text,
            {
              size: "small",
              weight: "plus",
              leading: "compact",
              className: "truncate",
              children: name
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(
            import_ui19.Text,
            {
              size: "xsmall",
              leading: "compact",
              className: "text-ui-fg-subtle",
              children: t4("app.nav.main.store")
            }
          )
        ] })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_ui19.DropdownMenu.Separator, {}),
      /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_ui19.DropdownMenu.Item, { className: "gap-x-2", asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)(import_react_router_dom10.Link, { to: "/settings/store", children: [
        /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_icons12.BuildingStorefront, { className: "text-ui-fg-subtle" }),
        t4("app.nav.main.storeSettings")
      ] }) }),
      /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_ui19.DropdownMenu.Separator, {}),
      /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(Logout2, {})
    ] })
  ] }) });
};
var useCoreRoutes = () => {
  const { t: t4 } = (0, import_react_i18next13.useTranslation)();
  return [
    {
      icon: /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_icons12.ShoppingCart, {}),
      label: t4("orders.domain"),
      to: "/orders",
      items: [
        // TODO: Enable when domin is introduced
        // {
        //   label: t("draftOrders.domain"),
        //   to: "/draft-orders",
        // },
      ]
    },
    {
      icon: /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_icons12.Tag, {}),
      label: t4("products.domain"),
      to: "/products",
      items: [
        {
          label: t4("collections.domain"),
          to: "/collections"
        },
        {
          label: t4("categories.domain"),
          to: "/categories"
        }
        // TODO: Enable when domin is introduced
        // {
        //   label: t("giftCards.domain"),
        //   to: "/gift-cards",
        // },
      ]
    },
    {
      icon: /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_icons12.Buildings, {}),
      label: t4("inventory.domain"),
      to: "/inventory",
      items: [
        {
          label: t4("reservations.domain"),
          to: "/reservations"
        }
      ]
    },
    {
      icon: /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_icons12.Users, {}),
      label: t4("customers.domain"),
      to: "/customers",
      items: [
        {
          label: t4("customerGroups.domain"),
          to: "/customer-groups"
        }
      ]
    },
    {
      icon: /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_icons12.ReceiptPercent, {}),
      label: t4("promotions.domain"),
      to: "/promotions",
      items: [
        {
          label: t4("campaigns.domain"),
          to: "/campaigns"
        }
      ]
    },
    {
      icon: /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_icons12.CurrencyDollar, {}),
      label: t4("priceLists.domain"),
      to: "/price-lists"
    }
  ];
};
var Searchbar = () => {
  const { t: t4 } = (0, import_react_i18next13.useTranslation)();
  const { toggleSearch } = useSearch();
  return /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("div", { className: "px-3", children: /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)(
    "button",
    {
      onClick: toggleSearch,
      className: (0, import_ui19.clx)(
        "bg-ui-bg-subtle text-ui-fg-subtle flex w-full items-center gap-x-2.5 rounded-md px-2 py-1 outline-none",
        "hover:bg-ui-bg-subtle-hover",
        "focus-visible:shadow-borders-focus"
      ),
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_icons12.MagnifyingGlass, {}),
        /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("div", { className: "flex-1 text-left", children: /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_ui19.Text, { size: "small", leading: "compact", weight: "plus", children: t4("app.search.label") }) }),
        /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_ui19.Text, { size: "small", leading: "compact", className: "text-ui-fg-muted", children: "\u2318K" })
      ]
    }
  ) });
};
var CoreRouteSection = () => {
  const coreRoutes = useCoreRoutes();
  return /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)("nav", { className: "flex flex-col gap-y-1 py-3", children: [
    /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(Searchbar, {}),
    coreRoutes.map((route) => {
      return /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(NavItem, { ...route }, route.to);
    })
  ] });
};
var ExtensionRouteSection = () => {
  const { t: t4 } = (0, import_react_i18next13.useTranslation)();
  const { getMenu } = useDashboardExtension();
  const menuItems = getMenu("coreExtensions");
  if (!menuItems.length) {
    return null;
  }
  return /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)("div", { children: [
    /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("div", { className: "px-3", children: /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(Divider, { variant: "dashed" }) }),
    /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("div", { className: "flex flex-col gap-y-1 py-3", children: /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)(Collapsible2.Root, { defaultOpen: true, children: [
      /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("div", { className: "px-4", children: /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(Collapsible2.Trigger, { asChild: true, className: "group/trigger", children: /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)("button", { className: "text-ui-fg-subtle flex w-full items-center justify-between px-2", children: [
        /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_ui19.Text, { size: "xsmall", weight: "plus", leading: "compact", children: t4("app.nav.common.extensions") }),
        /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)("div", { className: "text-ui-fg-muted", children: [
          /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_icons12.ChevronDownMini, { className: "group-data-[state=open]/trigger:hidden" }),
          /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_icons12.MinusMini, { className: "group-data-[state=closed]/trigger:hidden" })
        ] })
      ] }) }) }),
      /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(Collapsible2.Content, { children: /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("nav", { className: "flex flex-col gap-y-0.5 py-1 pb-4", children: menuItems.map((item, i) => {
        return /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(
          NavItem,
          {
            to: item.to,
            label: item.label,
            icon: item.icon ? item.icon : /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_icons12.SquaresPlus, {}),
            items: item.items,
            type: "extension"
          },
          i
        );
      }) }) })
    ] }) })
  ] });
};
var UtilitySection = () => {
  const location = (0, import_react_router_dom10.useLocation)();
  const { t: t4 } = (0, import_react_i18next13.useTranslation)();
  return /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("div", { className: "flex flex-col gap-y-0.5 py-3", children: /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(
    NavItem,
    {
      label: t4("app.nav.settings.header"),
      to: "/settings",
      from: location.pathname,
      icon: /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(import_icons12.CogSixTooth, {})
    }
  ) });
};
var UserSection = () => {
  return /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)("div", { children: [
    /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("div", { className: "px-3", children: /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(Divider, { variant: "dashed" }) }),
    /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(UserMenu, {})
  ] });
};

// src/components/layout/public-layout/public-layout.tsx
var import_react_router_dom11 = require("react-router-dom");
var import_jsx_runtime34 = require("react/jsx-runtime");
var PublicLayout = () => {
  return /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(import_react_router_dom11.Outlet, {});
};

// src/components/layout/settings-layout/settings-layout.tsx
var import_icons13 = require("@medusajs/icons");
var import_ui20 = require("@medusajs/ui");
var Collapsible3 = __toESM(require("@radix-ui/react-collapsible"));
var import_react24 = require("react");
var import_react_i18next14 = require("react-i18next");
var import_react_router_dom12 = require("react-router-dom");
init_divider2();
init_extensions();
var import_jsx_runtime35 = require("react/jsx-runtime");
var SettingsLayout = () => {
  return /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(Shell, { children: /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(SettingsSidebar, {}) });
};
var useSettingRoutes = () => {
  const { t: t4 } = (0, import_react_i18next14.useTranslation)();
  return (0, import_react24.useMemo)(
    () => [
      {
        label: t4("store.domain"),
        to: "/settings/store"
      },
      {
        label: t4("users.domain"),
        to: "/settings/users"
      },
      {
        label: t4("regions.domain"),
        to: "/settings/regions"
      },
      {
        label: t4("taxRegions.domain"),
        to: "/settings/tax-regions"
      },
      {
        label: t4("returnReasons.domain"),
        to: "/settings/return-reasons"
      },
      {
        label: t4("salesChannels.domain"),
        to: "/settings/sales-channels"
      },
      {
        label: t4("productTypes.domain"),
        to: "/settings/product-types"
      },
      {
        label: t4("productTags.domain"),
        to: "/settings/product-tags"
      },
      {
        label: t4("stockLocations.domain"),
        to: "/settings/locations"
      }
    ],
    [t4]
  );
};
var useDeveloperRoutes = () => {
  const { t: t4 } = (0, import_react_i18next14.useTranslation)();
  return (0, import_react24.useMemo)(
    () => [
      {
        label: t4("apiKeyManagement.domain.publishable"),
        to: "/settings/publishable-api-keys"
      },
      {
        label: t4("apiKeyManagement.domain.secret"),
        to: "/settings/secret-api-keys"
      },
      {
        label: t4("workflowExecutions.domain"),
        to: "/settings/workflows"
      }
    ],
    [t4]
  );
};
var useMyAccountRoutes = () => {
  const { t: t4 } = (0, import_react_i18next14.useTranslation)();
  return (0, import_react24.useMemo)(
    () => [
      {
        label: t4("profile.domain"),
        to: "/settings/profile"
      }
    ],
    [t4]
  );
};
var getSafeFromValue = (from) => {
  if (from.startsWith("/settings")) {
    return "/orders";
  }
  return from;
};
var SettingsSidebar = () => {
  const { getMenu } = useDashboardExtension();
  const routes3 = useSettingRoutes();
  const developerRoutes = useDeveloperRoutes();
  const myAccountRoutes = useMyAccountRoutes();
  const extensionRoutes = getMenu("settingsExtensions");
  const { t: t4 } = (0, import_react_i18next14.useTranslation)();
  return /* @__PURE__ */ (0, import_jsx_runtime35.jsxs)("aside", { className: "relative flex flex-1 flex-col justify-between overflow-y-auto", children: [
    /* @__PURE__ */ (0, import_jsx_runtime35.jsxs)("div", { className: "bg-ui-bg-subtle sticky top-0", children: [
      /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(Header2, {}),
      /* @__PURE__ */ (0, import_jsx_runtime35.jsx)("div", { className: "flex items-center justify-center px-3", children: /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(Divider, { variant: "dashed" }) })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime35.jsxs)("div", { className: "flex flex-1 flex-col", children: [
      /* @__PURE__ */ (0, import_jsx_runtime35.jsxs)("div", { className: "flex flex-1 flex-col overflow-y-auto", children: [
        /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(
          CollapsibleSection,
          {
            label: t4("app.nav.settings.general"),
            items: routes3
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime35.jsx)("div", { className: "flex items-center justify-center px-3", children: /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(Divider, { variant: "dashed" }) }),
        /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(
          CollapsibleSection,
          {
            label: t4("app.nav.settings.developer"),
            items: developerRoutes
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime35.jsx)("div", { className: "flex items-center justify-center px-3", children: /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(Divider, { variant: "dashed" }) }),
        /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(
          CollapsibleSection,
          {
            label: t4("app.nav.settings.myAccount"),
            items: myAccountRoutes
          }
        ),
        extensionRoutes.length > 0 && /* @__PURE__ */ (0, import_jsx_runtime35.jsxs)(import_react24.Fragment, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime35.jsx)("div", { className: "flex items-center justify-center px-3", children: /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(Divider, { variant: "dashed" }) }),
          /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(
            CollapsibleSection,
            {
              label: t4("app.nav.common.extensions"),
              items: extensionRoutes
            }
          )
        ] })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime35.jsx)("div", { className: "bg-ui-bg-subtle sticky bottom-0", children: /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(UserSection2, {}) })
    ] })
  ] });
};
var Header2 = () => {
  const [from, setFrom] = (0, import_react24.useState)("/orders");
  const { t: t4 } = (0, import_react_i18next14.useTranslation)();
  const location = (0, import_react_router_dom12.useLocation)();
  (0, import_react24.useEffect)(() => {
    if (location.state?.from) {
      setFrom(getSafeFromValue(location.state.from));
    }
  }, [location]);
  return /* @__PURE__ */ (0, import_jsx_runtime35.jsx)("div", { className: "bg-ui-bg-subtle p-3", children: /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(
    import_react_router_dom12.Link,
    {
      to: from,
      replace: true,
      className: (0, import_ui20.clx)(
        "bg-ui-bg-subtle transition-fg flex items-center rounded-md outline-none",
        "hover:bg-ui-bg-subtle-hover",
        "focus-visible:shadow-borders-focus"
      ),
      children: /* @__PURE__ */ (0, import_jsx_runtime35.jsxs)("div", { className: "flex items-center gap-x-2.5 px-2 py-1", children: [
        /* @__PURE__ */ (0, import_jsx_runtime35.jsx)("div", { className: "flex items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(import_icons13.ArrowUturnLeft, { className: "text-ui-fg-subtle" }) }),
        /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(import_ui20.Text, { leading: "compact", weight: "plus", size: "small", children: t4("app.nav.settings.header") })
      ] })
    }
  ) });
};
var CollapsibleSection = ({
  label,
  items
}) => {
  return /* @__PURE__ */ (0, import_jsx_runtime35.jsxs)(Collapsible3.Root, { defaultOpen: true, className: "py-3", children: [
    /* @__PURE__ */ (0, import_jsx_runtime35.jsx)("div", { className: "px-3", children: /* @__PURE__ */ (0, import_jsx_runtime35.jsxs)("div", { className: "text-ui-fg-muted flex h-7 items-center justify-between px-2", children: [
      /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(import_ui20.Text, { size: "small", leading: "compact", children: label }),
      /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(Collapsible3.Trigger, { asChild: true, children: /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(import_ui20.IconButton, { size: "2xsmall", variant: "transparent", className: "static", children: /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(import_icons13.MinusMini, { className: "text-ui-fg-muted" }) }) })
    ] }) }),
    /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(Collapsible3.Content, { children: /* @__PURE__ */ (0, import_jsx_runtime35.jsx)("div", { className: "pt-0.5", children: /* @__PURE__ */ (0, import_jsx_runtime35.jsx)("nav", { className: "flex flex-col gap-y-0.5", children: items.map((setting) => /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(NavItem, { type: "setting", ...setting }, setting.to)) }) }) })
  ] });
};
var UserSection2 = () => {
  return /* @__PURE__ */ (0, import_jsx_runtime35.jsxs)("div", { children: [
    /* @__PURE__ */ (0, import_jsx_runtime35.jsx)("div", { className: "px-3", children: /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(Divider, { variant: "dashed" }) }),
    /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(UserMenu, {})
  ] });
};

// src/providers/router-provider/route-map.tsx
init_error_boundary2();
init_countries();
init_country_states();
init_loader();
init_loader2();

// src/providers/router-provider/route-extensions.tsx
var import_routes = __toESM(require("virtual:medusa/routes"));
init_utils3();
var routes = getRouteExtensions(import_routes.default, "core");
var RouteExtensions = createRouteMap(routes);

// src/providers/router-provider/settings-extensions.tsx
var import_routes2 = __toESM(require("virtual:medusa/routes"));
init_utils3();
var routes2 = getRouteExtensions(import_routes2.default, "settings");
var SettingsExtensions = createRouteMap(routes2, "/settings");

// src/providers/router-provider/route-map.tsx
var import_jsx_runtime608 = require("react/jsx-runtime");
var RouteMap = [
  {
    element: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ProtectedRoute, {}),
    children: [
      {
        element: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(MainLayout, {}),
        children: [
          {
            path: "/",
            errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
            lazy: () => Promise.resolve().then(() => (init_home2(), home_exports))
          },
          {
            path: "/products",
            errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
            handle: {
              crumb: () => (0, import_i18next8.t)("products.domain")
            },
            children: [
              {
                path: "",
                lazy: () => Promise.resolve().then(() => (init_product_list2(), product_list_exports)),
                children: [
                  {
                    path: "create",
                    lazy: () => Promise.resolve().then(() => (init_product_create2(), product_create_exports))
                  },
                  {
                    path: "import",
                    lazy: () => Promise.resolve().then(() => (init_product_import2(), product_import_exports))
                  },
                  {
                    path: "export",
                    lazy: () => Promise.resolve().then(() => (init_product_export2(), product_export_exports))
                  }
                ]
              },
              {
                path: ":id",
                errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
                Component: import_react_router_dom215.Outlet,
                loader: productLoader,
                handle: {
                  crumb: (data) => data.product.title
                },
                children: [
                  {
                    path: "",
                    lazy: () => Promise.resolve().then(() => (init_product_detail2(), product_detail_exports)),
                    children: [
                      {
                        path: "edit",
                        lazy: () => Promise.resolve().then(() => (init_product_edit2(), product_edit_exports))
                      },
                      {
                        path: "edit-variant",
                        lazy: () => Promise.resolve().then(() => (init_product_variant_edit2(), product_variant_edit_exports))
                      },
                      {
                        path: "sales-channels",
                        lazy: () => Promise.resolve().then(() => (init_product_sales_channels2(), product_sales_channels_exports))
                      },
                      {
                        path: "attributes",
                        lazy: () => Promise.resolve().then(() => (init_product_attributes2(), product_attributes_exports))
                      },
                      {
                        path: "organization",
                        lazy: () => Promise.resolve().then(() => (init_product_organization2(), product_organization_exports))
                      },
                      {
                        path: "media",
                        lazy: () => Promise.resolve().then(() => (init_product_media2(), product_media_exports))
                      },
                      {
                        path: "prices",
                        lazy: () => Promise.resolve().then(() => (init_product_prices2(), product_prices_exports))
                      },
                      {
                        path: "options/create",
                        lazy: () => Promise.resolve().then(() => (init_product_create_option2(), product_create_option_exports))
                      },
                      {
                        path: "options/:option_id/edit",
                        lazy: () => Promise.resolve().then(() => (init_product_edit_option2(), product_edit_option_exports))
                      },
                      {
                        path: "variants/create",
                        lazy: () => Promise.resolve().then(() => (init_product_create_variant2(), product_create_variant_exports))
                      },
                      {
                        path: "metadata/edit",
                        lazy: () => Promise.resolve().then(() => (init_product_metadata2(), product_metadata_exports))
                      }
                    ]
                  },
                  {
                    path: "variants/:variant_id",
                    lazy: () => Promise.resolve().then(() => (init_product_variant_detail2(), product_variant_detail_exports)),
                    handle: {
                      crumb: (data) => data.variant.title
                    },
                    children: [
                      {
                        path: "edit",
                        lazy: () => Promise.resolve().then(() => (init_product_variant_edit2(), product_variant_edit_exports))
                      },
                      {
                        path: "prices",
                        lazy: () => Promise.resolve().then(() => (init_product_prices2(), product_prices_exports))
                      },
                      {
                        path: "manage-items",
                        lazy: () => Promise.resolve().then(() => (init_product_variant_manage_inventory_items2(), product_variant_manage_inventory_items_exports))
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            path: "/categories",
            errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
            handle: {
              crumb: () => (0, import_i18next8.t)("categories.domain")
            },
            children: [
              {
                path: "",
                lazy: () => Promise.resolve().then(() => (init_category_list2(), category_list_exports)),
                children: [
                  {
                    path: "create",
                    lazy: () => Promise.resolve().then(() => (init_category_create2(), category_create_exports))
                  },
                  {
                    path: "organize",
                    lazy: () => Promise.resolve().then(() => (init_category_organize2(), category_organize_exports))
                  }
                ]
              },
              {
                path: ":id",
                lazy: () => Promise.resolve().then(() => (init_category_detail2(), category_detail_exports)),
                handle: {
                  crumb: (data) => data.product_category.name
                },
                children: [
                  {
                    path: "edit",
                    lazy: () => Promise.resolve().then(() => (init_category_edit2(), category_edit_exports))
                  },
                  {
                    path: "products",
                    lazy: () => Promise.resolve().then(() => (init_category_products2(), category_products_exports))
                  },
                  {
                    path: "organize",
                    lazy: () => Promise.resolve().then(() => (init_category_organize2(), category_organize_exports))
                  },
                  {
                    path: "metadata/edit",
                    lazy: () => Promise.resolve().then(() => (init_categories_metadata2(), categories_metadata_exports))
                  }
                ]
              }
            ]
          },
          {
            path: "/orders",
            errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
            handle: {
              crumb: () => (0, import_i18next8.t)("orders.domain")
            },
            children: [
              {
                path: "",
                lazy: () => Promise.resolve().then(() => (init_order_list2(), order_list_exports))
              },
              {
                path: ":id",
                lazy: () => Promise.resolve().then(() => (init_order_detail2(), order_detail_exports)),
                children: [
                  {
                    path: "fulfillment",
                    lazy: () => Promise.resolve().then(() => (init_order_create_fulfillment(), order_create_fulfillment_exports))
                  },
                  {
                    path: "returns/:return_id/receive",
                    lazy: () => Promise.resolve().then(() => (init_order_receive_return2(), order_receive_return_exports))
                  },
                  {
                    path: "allocate-items",
                    lazy: () => Promise.resolve().then(() => (init_order_allocate_items2(), order_allocate_items_exports))
                  },
                  {
                    path: ":f_id/create-shipment",
                    lazy: () => Promise.resolve().then(() => (init_order_create_shipment2(), order_create_shipment_exports))
                  },
                  {
                    path: "returns",
                    lazy: () => Promise.resolve().then(() => (init_order_create_return(), order_create_return_exports))
                  },
                  {
                    path: "claims",
                    lazy: () => Promise.resolve().then(() => (init_order_create_claim(), order_create_claim_exports))
                  },
                  {
                    path: "exchanges",
                    lazy: () => Promise.resolve().then(() => (init_order_create_exchange(), order_create_exchange_exports))
                  },
                  {
                    path: "edits",
                    lazy: () => Promise.resolve().then(() => (init_order_create_edit(), order_create_edit_exports))
                  },
                  {
                    path: "refund",
                    lazy: () => Promise.resolve().then(() => (init_order_create_refund2(), order_create_refund_exports))
                  }
                ]
              }
            ]
          },
          {
            path: "/promotions",
            errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
            handle: {
              crumb: () => (0, import_i18next8.t)("promotions.domain")
            },
            children: [
              {
                path: "",
                lazy: () => Promise.resolve().then(() => (init_promotion_list(), promotion_list_exports))
              },
              {
                path: "create",
                lazy: () => Promise.resolve().then(() => (init_promotion_create2(), promotion_create_exports))
              },
              {
                path: ":id",
                lazy: () => Promise.resolve().then(() => (init_promotion_detail2(), promotion_detail_exports)),
                handle: {
                  // TODO: Re-add type when it's available again
                  crumb: (data) => data.promotion?.code
                },
                children: [
                  {
                    path: "edit",
                    lazy: () => Promise.resolve().then(() => (init_promotion_edit_details2(), promotion_edit_details_exports))
                  },
                  {
                    path: "add-to-campaign",
                    lazy: () => Promise.resolve().then(() => (init_promotion_add_campaign2(), promotion_add_campaign_exports))
                  },
                  {
                    path: ":ruleType/edit",
                    lazy: () => Promise.resolve().then(() => (init_edit_rules2(), edit_rules_exports))
                  }
                ]
              }
            ]
          },
          {
            path: "/campaigns",
            errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
            handle: { crumb: () => (0, import_i18next8.t)("campaigns.domain") },
            children: [
              {
                path: "",
                lazy: () => Promise.resolve().then(() => (init_campaign_list2(), campaign_list_exports)),
                children: []
              },
              {
                path: "create",
                lazy: () => Promise.resolve().then(() => (init_campaign_create2(), campaign_create_exports))
              },
              {
                path: ":id",
                lazy: () => Promise.resolve().then(() => (init_campaign_detail2(), campaign_detail_exports)),
                handle: { crumb: (data) => data.campaign.name },
                children: [
                  {
                    path: "edit",
                    lazy: () => Promise.resolve().then(() => (init_campaign_edit2(), campaign_edit_exports))
                  },
                  {
                    path: "configuration",
                    lazy: () => Promise.resolve().then(() => (init_campaign_configuration2(), campaign_configuration_exports))
                  },
                  {
                    path: "edit-budget",
                    lazy: () => Promise.resolve().then(() => (init_campaign_budget_edit2(), campaign_budget_edit_exports))
                  },
                  {
                    path: "add-promotions",
                    lazy: () => Promise.resolve().then(() => (init_add_campaign_promotions2(), add_campaign_promotions_exports))
                  }
                ]
              }
            ]
          },
          {
            path: "/collections",
            errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
            handle: {
              crumb: () => (0, import_i18next8.t)("collections.domain")
            },
            children: [
              {
                path: "",
                lazy: () => Promise.resolve().then(() => (init_collection_list2(), collection_list_exports)),
                children: [
                  {
                    path: "create",
                    lazy: () => Promise.resolve().then(() => (init_collection_create2(), collection_create_exports))
                  }
                ]
              },
              {
                path: ":id",
                lazy: () => Promise.resolve().then(() => (init_collection_detail2(), collection_detail_exports)),
                handle: {
                  crumb: (data) => data.collection.title
                },
                children: [
                  {
                    path: "edit",
                    lazy: () => Promise.resolve().then(() => (init_collection_edit2(), collection_edit_exports))
                  },
                  {
                    path: "products",
                    lazy: () => Promise.resolve().then(() => (init_collection_add_products2(), collection_add_products_exports))
                  }
                ]
              }
            ]
          },
          {
            path: "/price-lists",
            errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
            handle: {
              crumb: () => (0, import_i18next8.t)("priceLists.domain")
            },
            children: [
              {
                path: "",
                lazy: () => Promise.resolve().then(() => (init_price_list_list2(), price_list_list_exports)),
                children: [
                  {
                    path: "create",
                    lazy: () => Promise.resolve().then(() => (init_price_list_create2(), price_list_create_exports))
                  }
                ]
              },
              {
                path: ":id",
                lazy: () => Promise.resolve().then(() => (init_price_list_detail2(), price_list_detail_exports)),
                handle: {
                  crumb: (data) => data.price_list.title
                },
                children: [
                  {
                    path: "edit",
                    lazy: () => Promise.resolve().then(() => (init_price_list_edit2(), price_list_edit_exports))
                  },
                  {
                    path: "configuration",
                    lazy: () => Promise.resolve().then(() => (init_price_list_configuration2(), price_list_configuration_exports))
                  },
                  {
                    path: "products/add",
                    lazy: () => Promise.resolve().then(() => (init_price_list_prices_add2(), price_list_prices_add_exports))
                  },
                  {
                    path: "products/edit",
                    lazy: () => Promise.resolve().then(() => (init_price_list_prices_edit2(), price_list_prices_edit_exports))
                  }
                ]
              }
            ]
          },
          {
            path: "/customers",
            errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
            handle: {
              crumb: () => (0, import_i18next8.t)("customers.domain")
            },
            children: [
              {
                path: "",
                lazy: () => Promise.resolve().then(() => (init_customer_list2(), customer_list_exports)),
                children: [
                  {
                    path: "create",
                    lazy: () => Promise.resolve().then(() => (init_customer_create2(), customer_create_exports))
                  }
                ]
              },
              {
                path: ":id",
                lazy: () => Promise.resolve().then(() => (init_customer_detail2(), customer_detail_exports)),
                handle: {
                  // Re-add type when it's available again
                  crumb: (data) => data.customer.email
                },
                children: [
                  {
                    path: "edit",
                    lazy: () => Promise.resolve().then(() => (init_customer_edit2(), customer_edit_exports))
                  },
                  {
                    path: "add-customer-groups",
                    lazy: () => Promise.resolve().then(() => (init_customers_add_customer_group(), customers_add_customer_group_exports))
                  },
                  {
                    path: "metadata/edit",
                    lazy: () => Promise.resolve().then(() => (init_customer_metadata2(), customer_metadata_exports))
                  }
                ]
              }
            ]
          },
          {
            path: "/customer-groups",
            errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
            handle: {
              crumb: () => (0, import_i18next8.t)("customerGroups.domain")
            },
            children: [
              {
                path: "",
                lazy: () => Promise.resolve().then(() => (init_customer_group_list2(), customer_group_list_exports)),
                children: [
                  {
                    path: "create",
                    lazy: () => Promise.resolve().then(() => (init_customer_group_create2(), customer_group_create_exports))
                  }
                ]
              },
              {
                path: ":id",
                lazy: () => Promise.resolve().then(() => (init_customer_group_detail2(), customer_group_detail_exports)),
                handle: {
                  crumb: (data) => data.customer_group.name
                },
                children: [
                  {
                    path: "edit",
                    lazy: () => Promise.resolve().then(() => (init_customer_group_edit2(), customer_group_edit_exports))
                  },
                  {
                    path: "add-customers",
                    lazy: () => Promise.resolve().then(() => (init_customer_group_add_customers2(), customer_group_add_customers_exports))
                  },
                  {
                    path: "metadata/edit",
                    lazy: () => Promise.resolve().then(() => (init_customer_group_metadata(), customer_group_metadata_exports))
                  }
                ]
              }
            ]
          },
          {
            path: "/reservations",
            errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
            handle: {
              crumb: () => (0, import_i18next8.t)("reservations.domain")
            },
            children: [
              {
                path: "",
                lazy: () => Promise.resolve().then(() => (init_reservation_list2(), reservation_list_exports)),
                children: [
                  {
                    path: "create",
                    lazy: () => Promise.resolve().then(() => (init_reservation_create2(), reservation_create_exports))
                  }
                ]
              },
              {
                path: ":id",
                lazy: () => Promise.resolve().then(() => (init_reservation_detail2(), reservation_detail_exports)),
                handle: {
                  crumb: ({ reservation }) => {
                    return reservation?.inventory_item?.title ?? reservation?.inventory_item?.sku ?? reservation?.id;
                  }
                },
                children: [
                  {
                    path: "edit",
                    lazy: () => Promise.resolve().then(() => (init_edit_reservation(), edit_reservation_exports))
                  },
                  {
                    path: "metadata/edit",
                    lazy: () => Promise.resolve().then(() => (init_reservation_metadata2(), reservation_metadata_exports))
                  }
                ]
              }
            ]
          },
          {
            path: "/inventory",
            errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
            handle: {
              crumb: () => (0, import_i18next8.t)("inventory.domain")
            },
            children: [
              {
                path: "",
                lazy: () => Promise.resolve().then(() => (init_inventory_list2(), inventory_list_exports)),
                children: [
                  {
                    path: "create",
                    lazy: () => Promise.resolve().then(() => (init_inventory_create2(), inventory_create_exports))
                  }
                ]
              },
              {
                path: ":id",
                lazy: () => Promise.resolve().then(() => (init_inventory_detail2(), inventory_detail_exports)),
                handle: {
                  crumb: (data) => data.inventory_item.title ?? data.inventory_item.sku
                },
                children: [
                  {
                    path: "edit",
                    lazy: () => Promise.resolve().then(() => (init_edit_inventory_item(), edit_inventory_item_exports))
                  },
                  {
                    path: "attributes",
                    lazy: () => Promise.resolve().then(() => (init_edit_inventory_item_attributes(), edit_inventory_item_attributes_exports))
                  },
                  {
                    path: "metadata/edit",
                    lazy: () => Promise.resolve().then(() => (init_inventory_metadata2(), inventory_metadata_exports))
                  },
                  {
                    path: "locations",
                    lazy: () => Promise.resolve().then(() => (init_manage_locations(), manage_locations_exports))
                  },
                  {
                    path: "locations/:location_id",
                    lazy: () => Promise.resolve().then(() => (init_adjust_inventory(), adjust_inventory_exports))
                  }
                ]
              }
            ]
          },
          ...RouteExtensions
        ]
      }
    ]
  },
  {
    element: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ProtectedRoute, {}),
    errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
    children: [
      {
        path: "/settings",
        handle: {
          crumb: () => (0, import_i18next8.t)("app.nav.settings.header")
        },
        element: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(SettingsLayout, {}),
        children: [
          {
            index: true,
            errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
            lazy: () => Promise.resolve().then(() => (init_settings2(), settings_exports))
          },
          {
            path: "profile",
            errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
            lazy: () => Promise.resolve().then(() => (init_profile_detail2(), profile_detail_exports)),
            handle: {
              crumb: () => (0, import_i18next8.t)("profile.domain")
            },
            children: [
              {
                path: "edit",
                lazy: () => Promise.resolve().then(() => (init_profile_edit2(), profile_edit_exports))
              }
            ]
          },
          {
            path: "regions",
            errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
            element: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(import_react_router_dom215.Outlet, {}),
            handle: {
              crumb: () => (0, import_i18next8.t)("regions.domain")
            },
            children: [
              {
                path: "",
                lazy: () => Promise.resolve().then(() => (init_region_list2(), region_list_exports)),
                children: [
                  {
                    path: "create",
                    lazy: () => Promise.resolve().then(() => (init_region_create2(), region_create_exports))
                  }
                ]
              },
              {
                path: ":id",
                lazy: () => Promise.resolve().then(() => (init_region_detail2(), region_detail_exports)),
                handle: {
                  crumb: (data) => data.region.name
                },
                children: [
                  {
                    path: "edit",
                    lazy: () => Promise.resolve().then(() => (init_region_edit2(), region_edit_exports))
                  },
                  {
                    path: "countries/add",
                    lazy: () => Promise.resolve().then(() => (init_region_add_countries2(), region_add_countries_exports))
                  }
                ]
              }
            ]
          },
          {
            path: "store",
            errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
            lazy: () => Promise.resolve().then(() => (init_store_detail2(), store_detail_exports)),
            handle: {
              crumb: () => (0, import_i18next8.t)("store.domain")
            },
            children: [
              {
                path: "edit",
                lazy: () => Promise.resolve().then(() => (init_store_edit2(), store_edit_exports))
              },
              {
                path: "currencies",
                lazy: () => Promise.resolve().then(() => (init_store_add_currencies2(), store_add_currencies_exports))
              },
              {
                path: "metadata/edit",
                lazy: () => Promise.resolve().then(() => (init_store_metadata2(), store_metadata_exports))
              }
            ]
          },
          {
            path: "users",
            errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
            element: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(import_react_router_dom215.Outlet, {}),
            handle: {
              crumb: () => (0, import_i18next8.t)("users.domain")
            },
            children: [
              {
                path: "",
                lazy: () => Promise.resolve().then(() => (init_user_list2(), user_list_exports)),
                children: [
                  {
                    path: "invite",
                    lazy: () => Promise.resolve().then(() => (init_user_invite2(), user_invite_exports))
                  }
                ]
              },
              {
                path: ":id",
                lazy: () => Promise.resolve().then(() => (init_user_detail2(), user_detail_exports)),
                handle: {
                  crumb: (data) => data.user.email
                },
                children: [
                  {
                    path: "edit",
                    lazy: () => Promise.resolve().then(() => (init_user_edit2(), user_edit_exports))
                  },
                  {
                    path: "metadata/edit",
                    lazy: () => Promise.resolve().then(() => (init_user_metadata2(), user_metadata_exports))
                  }
                ]
              }
            ]
          },
          {
            path: "sales-channels",
            errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
            element: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(import_react_router_dom215.Outlet, {}),
            handle: {
              crumb: () => (0, import_i18next8.t)("salesChannels.domain")
            },
            children: [
              {
                path: "",
                lazy: () => Promise.resolve().then(() => (init_sales_channel_list2(), sales_channel_list_exports)),
                children: [
                  {
                    path: "create",
                    lazy: () => Promise.resolve().then(() => (init_sales_channel_create2(), sales_channel_create_exports))
                  }
                ]
              },
              {
                path: ":id",
                lazy: () => Promise.resolve().then(() => (init_sales_channel_detail2(), sales_channel_detail_exports)),
                handle: {
                  crumb: (data) => data.sales_channel.name
                },
                children: [
                  {
                    path: "edit",
                    lazy: () => Promise.resolve().then(() => (init_sales_channel_edit2(), sales_channel_edit_exports))
                  },
                  {
                    path: "add-products",
                    lazy: () => Promise.resolve().then(() => (init_sales_channel_add_products2(), sales_channel_add_products_exports))
                  },
                  {
                    path: "metadata/edit",
                    lazy: () => Promise.resolve().then(() => (init_sales_channel_metadata2(), sales_channel_metadata_exports))
                  }
                ]
              }
            ]
          },
          {
            path: "locations",
            errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
            element: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(import_react_router_dom215.Outlet, {}),
            handle: {
              crumb: () => (0, import_i18next8.t)("locations.domain")
            },
            children: [
              {
                path: "",
                lazy: () => Promise.resolve().then(() => (init_location_list2(), location_list_exports))
              },
              {
                path: "create",
                lazy: () => Promise.resolve().then(() => (init_location_create2(), location_create_exports))
              },
              {
                path: "shipping-profiles",
                element: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(import_react_router_dom215.Outlet, {}),
                handle: {
                  crumb: () => (0, import_i18next8.t)("shippingProfile.domain")
                },
                children: [
                  {
                    path: "",
                    lazy: () => Promise.resolve().then(() => (init_shipping_profiles_list(), shipping_profiles_list_exports)),
                    children: [
                      {
                        path: "create",
                        lazy: () => Promise.resolve().then(() => (init_shipping_profile_create2(), shipping_profile_create_exports))
                      }
                    ]
                  },
                  {
                    path: ":id",
                    handle: {
                      crumb: (data) => data.shipping_profile.name
                    },
                    lazy: () => Promise.resolve().then(() => (init_shipping_profile_detail2(), shipping_profile_detail_exports))
                  }
                ]
              },
              {
                path: ":location_id",
                lazy: () => Promise.resolve().then(() => (init_location_detail2(), location_detail_exports)),
                handle: {
                  crumb: (data) => data.stock_location.name
                },
                children: [
                  {
                    path: "edit",
                    lazy: () => Promise.resolve().then(() => (init_location_edit2(), location_edit_exports))
                  },
                  {
                    path: "sales-channels",
                    lazy: () => Promise.resolve().then(() => (init_location_sales_channels2(), location_sales_channels_exports))
                  },
                  {
                    path: "fulfillment-providers",
                    lazy: () => Promise.resolve().then(() => (init_location_fulfillment_providers2(), location_fulfillment_providers_exports))
                  },
                  {
                    path: "fulfillment-set/:fset_id",
                    children: [
                      {
                        path: "service-zones/create",
                        lazy: () => Promise.resolve().then(() => (init_location_service_zone_create2(), location_service_zone_create_exports))
                      },
                      {
                        path: "service-zone/:zone_id",
                        children: [
                          {
                            path: "edit",
                            lazy: () => Promise.resolve().then(() => (init_location_service_zone_edit2(), location_service_zone_edit_exports))
                          },
                          {
                            path: "areas",
                            lazy: () => Promise.resolve().then(() => (init_location_service_zone_manage_areas2(), location_service_zone_manage_areas_exports))
                          },
                          {
                            path: "shipping-option",
                            children: [
                              {
                                path: "create",
                                lazy: () => Promise.resolve().then(() => (init_location_service_zone_shipping_option_create2(), location_service_zone_shipping_option_create_exports))
                              },
                              {
                                path: ":so_id",
                                children: [
                                  {
                                    path: "edit",
                                    lazy: () => Promise.resolve().then(() => (init_location_service_zone_shipping_option_edit2(), location_service_zone_shipping_option_edit_exports))
                                  },
                                  {
                                    path: "pricing",
                                    lazy: () => Promise.resolve().then(() => (init_location_service_zone_shipping_option_pricing2(), location_service_zone_shipping_option_pricing_exports))
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            path: "product-tags",
            errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
            element: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(import_react_router_dom215.Outlet, {}),
            handle: {
              crumb: () => (0, import_i18next8.t)("productTags.domain")
            },
            children: [
              {
                path: "",
                lazy: () => Promise.resolve().then(() => (init_product_tag_list2(), product_tag_list_exports)),
                children: [
                  {
                    path: "create",
                    lazy: () => Promise.resolve().then(() => (init_product_tag_create2(), product_tag_create_exports))
                  }
                ]
              },
              {
                path: ":id",
                lazy: () => Promise.resolve().then(() => (init_product_tag_detail2(), product_tag_detail_exports)),
                handle: {
                  crumb: (data) => data.product_tag.value
                },
                children: [
                  {
                    path: "edit",
                    lazy: () => Promise.resolve().then(() => (init_product_tag_edit2(), product_tag_edit_exports))
                  }
                ]
              }
            ]
          },
          {
            path: "workflows",
            errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
            element: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(import_react_router_dom215.Outlet, {}),
            handle: {
              crumb: () => (0, import_i18next8.t)("workflowExecutions.domain")
            },
            children: [
              {
                path: "",
                lazy: () => Promise.resolve().then(() => (init_workflow_execution_list2(), workflow_execution_list_exports))
              },
              {
                path: ":id",
                lazy: () => Promise.resolve().then(() => (init_workflow_execution_detail(), workflow_execution_detail_exports)),
                handle: {
                  crumb: (data) => {
                    if (!data) {
                      return "";
                    }
                    return data.workflow.name;
                  }
                }
              }
            ]
          },
          {
            path: "product-types",
            errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
            element: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(import_react_router_dom215.Outlet, {}),
            handle: {
              crumb: () => (0, import_i18next8.t)("productTypes.domain")
            },
            children: [
              {
                path: "",
                lazy: () => Promise.resolve().then(() => (init_product_type_list2(), product_type_list_exports)),
                children: [
                  {
                    path: "create",
                    lazy: () => Promise.resolve().then(() => (init_product_type_create2(), product_type_create_exports))
                  }
                ]
              },
              {
                path: ":id",
                lazy: () => Promise.resolve().then(() => (init_product_type_detail2(), product_type_detail_exports)),
                handle: {
                  crumb: (data) => data.product_type.value
                },
                children: [
                  {
                    path: "edit",
                    lazy: () => Promise.resolve().then(() => (init_product_type_edit2(), product_type_edit_exports))
                  }
                ]
              }
            ]
          },
          {
            path: "publishable-api-keys",
            element: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(import_react_router_dom215.Outlet, {}),
            handle: {
              crumb: () => (0, import_i18next8.t)("apiKeyManagement.domain.publishable")
            },
            children: [
              {
                path: "",
                element: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(import_react_router_dom215.Outlet, {}),
                children: [
                  {
                    path: "",
                    lazy: () => Promise.resolve().then(() => (init_api_key_management_list2(), api_key_management_list_exports)),
                    children: [
                      {
                        path: "create",
                        lazy: () => Promise.resolve().then(() => (init_api_key_management_create2(), api_key_management_create_exports))
                      }
                    ]
                  }
                ]
              },
              {
                path: ":id",
                lazy: () => Promise.resolve().then(() => (init_api_key_management_detail2(), api_key_management_detail_exports)),
                handle: {
                  crumb: (data) => {
                    return data.api_key.title;
                  }
                },
                children: [
                  {
                    path: "edit",
                    lazy: () => Promise.resolve().then(() => (init_api_key_management_edit2(), api_key_management_edit_exports))
                  },
                  {
                    path: "sales-channels",
                    lazy: () => Promise.resolve().then(() => (init_api_key_management_sales_channels2(), api_key_management_sales_channels_exports))
                  }
                ]
              }
            ]
          },
          {
            path: "secret-api-keys",
            element: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(import_react_router_dom215.Outlet, {}),
            handle: {
              crumb: () => (0, import_i18next8.t)("apiKeyManagement.domain.secret")
            },
            children: [
              {
                path: "",
                element: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(import_react_router_dom215.Outlet, {}),
                children: [
                  {
                    path: "",
                    lazy: () => Promise.resolve().then(() => (init_api_key_management_list2(), api_key_management_list_exports)),
                    children: [
                      {
                        path: "create",
                        lazy: () => Promise.resolve().then(() => (init_api_key_management_create2(), api_key_management_create_exports))
                      }
                    ]
                  }
                ]
              },
              {
                path: ":id",
                lazy: () => Promise.resolve().then(() => (init_api_key_management_detail2(), api_key_management_detail_exports)),
                handle: {
                  crumb: (data) => {
                    return data.api_key.title;
                  }
                },
                children: [
                  {
                    path: "edit",
                    lazy: () => Promise.resolve().then(() => (init_api_key_management_edit2(), api_key_management_edit_exports))
                  }
                ]
              }
            ]
          },
          {
            path: "tax-regions",
            element: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(import_react_router_dom215.Outlet, {}),
            handle: {
              crumb: () => (0, import_i18next8.t)("taxRegions.domain")
            },
            children: [
              {
                path: "",
                lazy: () => Promise.resolve().then(() => (init_tax_region_list2(), tax_region_list_exports)),
                children: [
                  {
                    path: "create",
                    lazy: () => Promise.resolve().then(() => (init_tax_region_create2(), tax_region_create_exports))
                  }
                ]
              },
              {
                path: ":id",
                Component: import_react_router_dom215.Outlet,
                loader: taxRegionLoader,
                handle: {
                  crumb: (data) => {
                    return getCountryByIso2(data.tax_region.country_code)?.display_name || data.tax_region.country_code?.toUpperCase();
                  }
                },
                children: [
                  {
                    path: "",
                    lazy: () => Promise.resolve().then(() => (init_tax_region_detail2(), tax_region_detail_exports)),
                    children: [
                      {
                        path: "provinces/create",
                        lazy: () => Promise.resolve().then(() => (init_tax_region_province_create2(), tax_region_province_create_exports))
                      },
                      {
                        path: "overrides/create",
                        lazy: () => Promise.resolve().then(() => (init_tax_region_tax_override_create3(), tax_region_tax_override_create_exports))
                      },
                      {
                        path: "overrides/:tax_rate_id/edit",
                        lazy: () => Promise.resolve().then(() => (init_tax_region_tax_override_edit2(), tax_region_tax_override_edit_exports))
                      },
                      {
                        path: "tax-rates/create",
                        lazy: () => Promise.resolve().then(() => (init_tax_region_tax_rate_create2(), tax_region_tax_rate_create_exports))
                      },
                      {
                        path: "tax-rates/:tax_rate_id/edit",
                        lazy: () => Promise.resolve().then(() => (init_tax_region_tax_rate_edit(), tax_region_tax_rate_edit_exports))
                      }
                    ]
                  },
                  {
                    path: "provinces/:province_id",
                    lazy: () => Promise.resolve().then(() => (init_tax_region_province_detail(), tax_region_province_detail_exports)),
                    handle: {
                      crumb: (data) => {
                        const countryCode = data.tax_region.country_code?.toUpperCase();
                        const provinceCode = data.tax_region.province_code?.toUpperCase();
                        const isValid = isProvinceInCountry(
                          countryCode,
                          provinceCode
                        );
                        return isValid ? getProvinceByIso2(provinceCode) : provinceCode;
                      }
                    },
                    children: [
                      {
                        path: "tax-rates/create",
                        lazy: () => Promise.resolve().then(() => (init_tax_region_tax_rate_create2(), tax_region_tax_rate_create_exports))
                      },
                      {
                        path: "tax-rates/:tax_rate_id/edit",
                        lazy: () => Promise.resolve().then(() => (init_tax_region_tax_rate_edit(), tax_region_tax_rate_edit_exports))
                      },
                      {
                        path: "overrides/create",
                        lazy: () => Promise.resolve().then(() => (init_tax_region_tax_override_create3(), tax_region_tax_override_create_exports))
                      },
                      {
                        path: "overrides/:tax_rate_id/edit",
                        lazy: () => Promise.resolve().then(() => (init_tax_region_tax_override_edit2(), tax_region_tax_override_edit_exports))
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            path: "return-reasons",
            element: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(import_react_router_dom215.Outlet, {}),
            handle: {
              crumb: () => (0, import_i18next8.t)("returnReasons.domain")
            },
            children: [
              {
                path: "",
                lazy: () => Promise.resolve().then(() => (init_return_reason_list2(), return_reason_list_exports)),
                children: [
                  {
                    path: "create",
                    lazy: () => Promise.resolve().then(() => (init_return_reason_create2(), return_reason_create_exports))
                  },
                  {
                    path: ":id",
                    children: [
                      {
                        path: "edit",
                        lazy: () => Promise.resolve().then(() => (init_return_reason_edit2(), return_reason_edit_exports))
                      }
                    ]
                  }
                ]
              }
            ]
          },
          ...SettingsExtensions
        ]
      }
    ]
  },
  {
    element: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(PublicLayout, {}),
    children: [
      {
        errorElement: /* @__PURE__ */ (0, import_jsx_runtime608.jsx)(ErrorBoundary, {}),
        children: [
          {
            path: "/login",
            lazy: () => Promise.resolve().then(() => (init_login2(), login_exports))
          },
          {
            path: "/reset-password",
            lazy: () => Promise.resolve().then(() => (init_reset_password2(), reset_password_exports))
          },
          {
            path: "/invite",
            lazy: () => Promise.resolve().then(() => (init_invite2(), invite_exports))
          },
          {
            path: "*",
            lazy: () => Promise.resolve().then(() => (init_no_match2(), no_match_exports))
          }
        ]
      }
    ]
  }
];

// src/providers/router-provider/router-provider.tsx
var import_jsx_runtime609 = require("react/jsx-runtime");
var router = (0, import_react_router_dom216.createBrowserRouter)(RouteMap, {
  basename: __BASE__ || "/"
});
var RouterProvider = () => {
  return /* @__PURE__ */ (0, import_jsx_runtime609.jsx)(import_react_router_dom216.RouterProvider, { router });
};

// src/app.tsx
var import_displays = __toESM(require("virtual:medusa/displays"));
var import_forms = __toESM(require("virtual:medusa/forms"));
var import_menu_items = __toESM(require("virtual:medusa/menu-items"));
var import_widgets = __toESM(require("virtual:medusa/widgets"));
var import_jsx_runtime610 = require("react/jsx-runtime");
function App() {
  const manager = new DashboardExtensionManager({
    displayModule: import_displays.default,
    formModule: import_forms.default,
    menuItemModule: import_menu_items.default,
    widgetModule: import_widgets.default
  });
  return /* @__PURE__ */ (0, import_jsx_runtime610.jsx)(Providers, { api: manager.api, children: /* @__PURE__ */ (0, import_jsx_runtime610.jsx)(RouterProvider, {}) });
}
var app_default = App;
